record `kotlin.io.OnErrorAction` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.io.OnErrorAction`[] `@@kotlin.io.OnErrorAction.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.io.OnErrorAction` `@@kotlin.io.OnErrorAction.SKIP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.io.OnErrorAction` `@@kotlin.io.OnErrorAction.TERMINATE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lkotlin/io/OnErrorAction;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5719a0.  v0:= 2I;
  #L5719a2.  v0:= new `kotlin.io.OnErrorAction`[v0];
  #L5719a6.  v1:= new `kotlin.io.OnErrorAction`;
  #L5719aa.  v2:= "SKIP" @kind object;
  #L5719ae.  v3:= 0I;
  #L5719b0.  call `<init>`(v1, v2, v3) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5719b6.  `@@kotlin.io.OnErrorAction.SKIP` @type ^`kotlin.io.OnErrorAction` := v1 @kind object;
  #L5719ba.  v0[v3]:= v1 @kind object;
  #L5719be.  v1:= new `kotlin.io.OnErrorAction`;
  #L5719c2.  v2:= "TERMINATE" @kind object;
  #L5719c6.  v3:= 1I;
  #L5719c8.  call `<init>`(v1, v2, v3) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5719ce.  `@@kotlin.io.OnErrorAction.TERMINATE` @type ^`kotlin.io.OnErrorAction` := v1 @kind object;
  #L5719d2.  v0[v3]:= v1 @kind object;
  #L5719d6.  `@@kotlin.io.OnErrorAction.$VALUES` @type ^`kotlin.io.OnErrorAction`[] := v0 @kind object;
  #L5719da.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.OnErrorAction` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L5719ec.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5719f2.  return @kind void;
}
procedure `kotlin.io.OnErrorAction` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/io/OnErrorAction;.valueOf:(Ljava/lang/String;)Lkotlin/io/OnErrorAction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L571958.  v0:= constclass @type ^`kotlin.io.OnErrorAction` @kind object;
  #L57195c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L571962.  v1:= temp @kind object;
  #L571964.  v1:= (`kotlin.io.OnErrorAction`) v1 @kind object;
  #L571968.  return v1 @kind object;
}
procedure `kotlin.io.OnErrorAction`[] `values`() @signature `Lkotlin/io/OnErrorAction;.values:()[Lkotlin/io/OnErrorAction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L57197c.  v0:= `@@kotlin.io.OnErrorAction.$VALUES` @type ^`kotlin.io.OnErrorAction`[] @kind object;
  #L571980.  call temp:= `clone`(v0) @signature `[Lkotlin/io/OnErrorAction;.clone:()Ljava/lang/Object;` @kind virtual;
  #L571986.  v0:= temp @kind object;
  #L571988.  v0:= (`kotlin.io.OnErrorAction`[]) v0 @kind object;
  #L57198c.  return v0 @kind object;
}
