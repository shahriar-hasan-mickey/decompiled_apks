record `kotlin.io.d` @kind class @AccessFlag  extends `kotlin.io.c` @kind class {
}
procedure `void` `<init>`(`kotlin.io.d` v0 @kind this) @signature `Lkotlin/io/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L57040c.  call `<init>`(v0) @signature `Lkotlin/io/c;.<init>:()V` @kind direct;
  #L570412.  return @kind void;
}
procedure `kotlin.io.FileTreeWalk` `walk`(`java.io.File` v1 @kind object, `kotlin.io.FileWalkDirection` v2 @kind object) @signature `Lkotlin/io/d;.walk:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L57038c.  v0:= "$this$walk" @kind object;
  #L570390.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L570396.  v0:= "direction" @kind object;
  #L57039a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5703a0.  v0:= new `kotlin.io.FileTreeWalk`;
  #L5703a4.  call `<init>`(v0, v1, v2) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)V` @kind direct;
  #L5703aa.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `walk$default`(`java.io.File` v0 @kind object, `kotlin.io.FileWalkDirection` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/io/d;.walk$default:(Ljava/io/File;Lkotlin/io/FileWalkDirection;ILjava/lang/Object;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L570364.  v2:= v2 ^& 1;
  #L570368.  if v2 == 0 then goto L570370;
  #L57036c.  v1:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L570370.  call temp:= `walk`(v0, v1) @signature `Lkotlin/io/d;.walk:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)Lkotlin/io/FileTreeWalk;` @kind static;
  #L570376.  v0:= temp @kind object;
  #L570378.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `walkBottomUp`(`java.io.File` v1 @kind object) @signature `Lkotlin/io/d;.walkBottomUp:(Ljava/io/File;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5703bc.  v0:= "$this$walkBottomUp" @kind object;
  #L5703c0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5703c6.  v0:= `@@kotlin.io.FileWalkDirection.BOTTOM_UP` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L5703ca.  call temp:= `walk`(v1, v0) @signature `Lkotlin/io/d;.walk:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)Lkotlin/io/FileTreeWalk;` @kind static;
  #L5703d0.  v1:= temp @kind object;
  #L5703d2.  return v1 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `walkTopDown`(`java.io.File` v1 @kind object) @signature `Lkotlin/io/d;.walkTopDown:(Ljava/io/File;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5703e4.  v0:= "$this$walkTopDown" @kind object;
  #L5703e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5703ee.  v0:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L5703f2.  call temp:= `walk`(v1, v0) @signature `Lkotlin/io/d;.walk:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)Lkotlin/io/FileTreeWalk;` @kind static;
  #L5703f8.  v1:= temp @kind object;
  #L5703fa.  return v1 @kind object;
}
