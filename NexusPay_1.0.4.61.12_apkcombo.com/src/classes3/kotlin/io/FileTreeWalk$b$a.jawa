record `kotlin.io.FileTreeWalk$b$a` @kind class @AccessFlag FINAL extends `kotlin.io.FileTreeWalk$a` @kind class {
  `boolean` `kotlin.io.FileTreeWalk$b$a.b` @AccessFlag PRIVATE;
  `java.io.File`[] `kotlin.io.FileTreeWalk$b$a.c` @AccessFlag PRIVATE;
  `int` `kotlin.io.FileTreeWalk$b$a.d` @AccessFlag PRIVATE;
  `boolean` `kotlin.io.FileTreeWalk$b$a.e` @AccessFlag PRIVATE;
  `kotlin.io.FileTreeWalk$b` `kotlin.io.FileTreeWalk$b$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk$b$a` v1 @kind this, `kotlin.io.FileTreeWalk$b` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lkotlin/io/FileTreeWalk$b$a;.<init>:(Lkotlin/io/FileTreeWalk$b;Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L56f0c4.  v0:= "rootDir" @kind object;
  #L56f0c8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56f0ce.  v1.`kotlin.io.FileTreeWalk$b$a.f` @type ^`kotlin.io.FileTreeWalk$b` := v2 @kind object;
  #L56f0d2.  call `<init>`(v1, v3) @signature `Lkotlin/io/FileTreeWalk$a;.<init>:(Ljava/io/File;)V` @kind direct;
  #L56f0d8.  return @kind void;
}
procedure `java.io.File` `b`(`kotlin.io.FileTreeWalk$b$a` v11 @kind this) @signature `Lkotlin/io/FileTreeWalk$b$a;.b:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L56ef94.  v0:= v11.`kotlin.io.FileTreeWalk$b$a.e` @type ^`boolean` @kind boolean;
  #L56ef98.  v1:= 0I;
  #L56ef9a.  v2:= 1I;
  #L56ef9c.  if v0 != 0 then goto L56f040;
  #L56efa0.  v0:= v11.`kotlin.io.FileTreeWalk$b$a.c` @type ^`java.io.File`[] @kind object;
  #L56efa4.  if v0 != 0 then goto L56f040;
  #L56efa8.  v0:= v11.`kotlin.io.FileTreeWalk$b$a.f` @type ^`kotlin.io.FileTreeWalk$b` @kind object;
  #L56efac.  v0:= v0.`kotlin.io.FileTreeWalk$b.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L56efb0.  call temp:= `access$getOnEnter$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnEnter$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L56efb6.  v0:= temp @kind object;
  #L56efb8.  if v0 == 0 then goto L56efde;
  #L56efbc.  call temp:= `a`(v11) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56efc2.  v3:= temp @kind object;
  #L56efc4.  call temp:= `invoke`(v0, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56efca.  v0:= temp @kind object;
  #L56efcc.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L56efd0.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L56efd6.  v0:= temp;
  #L56efd8.  if v0 != 0 then goto L56efde;
  #L56efdc.  return v1 @kind object;
  #L56efde.  call temp:= `a`(v11) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56efe4.  v0:= temp @kind object;
  #L56efe6.  call temp:= `listFiles`(v0) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L56efec.  v0:= temp @kind object;
  #L56efee.  v11.`kotlin.io.FileTreeWalk$b$a.c` @type ^`java.io.File`[] := v0 @kind object;
  #L56eff2.  if v0 != 0 then goto L56f040;
  #L56eff6.  v0:= v11.`kotlin.io.FileTreeWalk$b$a.f` @type ^`kotlin.io.FileTreeWalk$b` @kind object;
  #L56effa.  v0:= v0.`kotlin.io.FileTreeWalk$b.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L56effe.  call temp:= `access$getOnFail$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnFail$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function2;` @kind static;
  #L56f004.  v0:= temp @kind object;
  #L56f006.  if v0 == 0 then goto L56f03c;
  #L56f00a.  call temp:= `a`(v11) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f010.  v3:= temp @kind object;
  #L56f012.  v10:= new `kotlin.io.AccessDeniedException`;
  #L56f016.  call temp:= `a`(v11) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f01c.  v5:= temp @kind object;
  #L56f01e.  v6:= 0I;
  #L56f020.  v8:= 2I;
  #L56f022.  v9:= 0I;
  #L56f024.  v7:= "Cannot list files in a directory" @kind object;
  #L56f028.  v4:= v10 @kind object;
  #L56f02a.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lkotlin/io/AccessDeniedException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L56f030.  call temp:= `invoke`(v0, v3, v10) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56f036.  v0:= temp @kind object;
  #L56f038.  v0:= (`kotlin.Unit`) v0 @kind object;
  #L56f03c.  v11.`kotlin.io.FileTreeWalk$b$a.e` @type ^`boolean` := v2 @kind boolean;
  #L56f040.  v0:= v11.`kotlin.io.FileTreeWalk$b$a.c` @type ^`java.io.File`[] @kind object;
  #L56f044.  if v0 == 0 then goto L56f074;
  #L56f048.  v3:= v11.`kotlin.io.FileTreeWalk$b$a.d` @type ^`int`;
  #L56f04c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L56f052.  v0:= length @variable v0;
  #L56f054.  if v3 >= v0 then goto L56f074;
  #L56f058.  v0:= v11.`kotlin.io.FileTreeWalk$b$a.c` @type ^`java.io.File`[] @kind object;
  #L56f05c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L56f062.  v1:= v11.`kotlin.io.FileTreeWalk$b$a.d` @type ^`int`;
  #L56f066.  v2:= v1 + 1;
  #L56f06a.  v11.`kotlin.io.FileTreeWalk$b$a.d` @type ^`int` := v2;
  #L56f06e.  v0:= v0[v1] @kind object;
  #L56f072.  return v0 @kind object;
  #L56f074.  v0:= v11.`kotlin.io.FileTreeWalk$b$a.b` @type ^`boolean` @kind boolean;
  #L56f078.  if v0 != 0 then goto L56f08a;
  #L56f07c.  v11.`kotlin.io.FileTreeWalk$b$a.b` @type ^`boolean` := v2 @kind boolean;
  #L56f080.  call temp:= `a`(v11) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f086.  v0:= temp @kind object;
  #L56f088.  return v0 @kind object;
  #L56f08a.  v0:= v11.`kotlin.io.FileTreeWalk$b$a.f` @type ^`kotlin.io.FileTreeWalk$b` @kind object;
  #L56f08e.  v0:= v0.`kotlin.io.FileTreeWalk$b.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L56f092.  call temp:= `access$getOnLeave$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L56f098.  v0:= temp @kind object;
  #L56f09a.  if v0 == 0 then goto L56f0b2;
  #L56f09e.  call temp:= `a`(v11) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f0a4.  v2:= temp @kind object;
  #L56f0a6.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56f0ac.  v0:= temp @kind object;
  #L56f0ae.  v0:= (`kotlin.Unit`) v0 @kind object;
  #L56f0b2.  return v1 @kind object;
}
