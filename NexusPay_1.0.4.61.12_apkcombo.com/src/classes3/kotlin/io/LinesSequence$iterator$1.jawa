record `kotlin.io.LinesSequence$iterator$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `java.lang.String` `kotlin.io.LinesSequence$iterator$1.a` @AccessFlag PRIVATE;
  `boolean` `kotlin.io.LinesSequence$iterator$1.b` @AccessFlag PRIVATE;
  `kotlin.io.LinesSequence` `kotlin.io.LinesSequence$iterator$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.io.LinesSequence$iterator$1` v0 @kind this, `kotlin.io.LinesSequence` v1 @kind object) @signature `Lkotlin/io/LinesSequence$iterator$1;.<init>:(Lkotlin/io/LinesSequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L57186c.  v0.`kotlin.io.LinesSequence$iterator$1.c` @type ^`kotlin.io.LinesSequence` := v1 @kind object;
  #L571870.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L571876.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.io.LinesSequence$iterator$1` v2 @kind this) @signature `Lkotlin/io/LinesSequence$iterator$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5717c4.  v0:= v2.`kotlin.io.LinesSequence$iterator$1.a` @type ^`java.lang.String` @kind object;
  #L5717c8.  v1:= 1I;
  #L5717ca.  if v0 != 0 then goto L5717f6;
  #L5717ce.  v0:= v2.`kotlin.io.LinesSequence$iterator$1.b` @type ^`boolean` @kind boolean;
  #L5717d2.  if v0 != 0 then goto L5717f6;
  #L5717d6.  v0:= v2.`kotlin.io.LinesSequence$iterator$1.c` @type ^`kotlin.io.LinesSequence` @kind object;
  #L5717da.  call temp:= `a`(v0) @signature `Lkotlin/io/LinesSequence;.a:(Lkotlin/io/LinesSequence;)Ljava/io/BufferedReader;` @kind static;
  #L5717e0.  v0:= temp @kind object;
  #L5717e2.  call temp:= `readLine`(v0) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L5717e8.  v0:= temp @kind object;
  #L5717ea.  v2.`kotlin.io.LinesSequence$iterator$1.a` @type ^`java.lang.String` := v0 @kind object;
  #L5717ee.  if v0 != 0 then goto L5717f6;
  #L5717f2.  v2.`kotlin.io.LinesSequence$iterator$1.b` @type ^`boolean` := v1 @kind boolean;
  #L5717f6.  v0:= v2.`kotlin.io.LinesSequence$iterator$1.a` @type ^`java.lang.String` @kind object;
  #L5717fa.  if v0 == 0 then goto L571800;
  #L5717fe.  goto L571802;
  #L571800.  v1:= 0I;
  #L571802.  return v1;
}
procedure `java.lang.Object` `next`(`kotlin.io.LinesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/io/LinesSequence$iterator$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L571814.  call temp:= `next`(v1) @signature `Lkotlin/io/LinesSequence$iterator$1;.next:()Ljava/lang/String;` @kind virtual;
  #L57181a.  v0:= temp @kind object;
  #L57181c.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`kotlin.io.LinesSequence$iterator$1` v2 @kind this) @signature `Lkotlin/io/LinesSequence$iterator$1;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L571830.  call temp:= `hasNext`(v2) @signature `Lkotlin/io/LinesSequence$iterator$1;.hasNext:()Z` @kind virtual;
  #L571836.  v0:= temp;
  #L571838.  if v0 == 0 then goto L57184e;
  #L57183c.  v0:= v2.`kotlin.io.LinesSequence$iterator$1.a` @type ^`java.lang.String` @kind object;
  #L571840.  v1:= 0I;
  #L571842.  v2.`kotlin.io.LinesSequence$iterator$1.a` @type ^`java.lang.String` := v1 @kind object;
  #L571846.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L57184c.  return v0 @kind object;
  #L57184e.  v0:= new `java.util.NoSuchElementException`;
  #L571852.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L571858.  throw v0;
}
procedure `void` `remove`(`kotlin.io.LinesSequence$iterator$1` v2 @kind this) @signature `Lkotlin/io/LinesSequence$iterator$1;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L571888.  v0:= new `java.lang.UnsupportedOperationException`;
  #L57188c.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L571890.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L571896.  throw v0;
}
