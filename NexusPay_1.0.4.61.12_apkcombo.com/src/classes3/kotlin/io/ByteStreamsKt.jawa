record `kotlin.io.ByteStreamsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `long` `copyTo`(`java.io.InputStream` v5 @kind object, `java.io.OutputStream` v6 @kind object, `int` v7 ) @signature `Lkotlin/io/ByteStreamsKt;.copyTo:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L56e9b4.  v0:= "$this$copyTo" @kind object;
  #L56e9b8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56e9be.  v0:= "out" @kind object;
  #L56e9c2.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56e9c8.  v7:= new `byte`[v7];
  #L56e9cc.  call temp:= `read`(v5, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L56e9d2.  v0:= temp;
  #L56e9d4.  v1:= 0L;
  #L56e9d8.  if v0 < 0 then goto L56e9f2;
  #L56e9dc.  v3:= 0I;
  #L56e9de.  call `write`(v6, v7, v3, v0) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L56e9e4.  v3:= (`long`) v0 @kind i2l;
  #L56e9e6.  v1:= v1 + v3 @kind long;
  #L56e9e8.  call temp:= `read`(v5, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L56e9ee.  v0:= temp;
  #L56e9f0.  goto L56e9d8;
  #L56e9f2.  return v1 @kind wide;
}
procedure `long` `copyTo$default`(`java.io.InputStream` v0 @kind object, `java.io.OutputStream` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/io/ByteStreamsKt;.copyTo$default:(Ljava/io/InputStream;Ljava/io/OutputStream;IILjava/lang/Object;)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L56e98c.  v3:= v3 ^& 2;
  #L56e990.  if v3 == 0 then goto L56e998;
  #L56e994.  v2:= 8192I;
  #L56e998.  call temp:= `copyTo`(v0, v1, v2) @signature `Lkotlin/io/ByteStreamsKt;.copyTo:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J` @kind static;
  #L56e99e.  v0:= temp @kind wide;
  #L56e9a0.  return v0 @kind wide;
}
procedure `kotlin.collections.ByteIterator` `iterator`(`java.io.BufferedInputStream` v1 @kind object) @signature `Lkotlin/io/ByteStreamsKt;.iterator:(Ljava/io/BufferedInputStream;)Lkotlin/collections/ByteIterator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56e964.  v0:= "$this$iterator" @kind object;
  #L56e968.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56e96e.  v0:= new `kotlin.io.ByteStreamsKt$iterator$1`;
  #L56e972.  call `<init>`(v0, v1) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.<init>:(Ljava/io/BufferedInputStream;)V` @kind direct;
  #L56e978.  return v0 @kind object;
}
procedure `byte`[] `readBytes`(`java.io.InputStream` v4 @kind object) @signature `Lkotlin/io/ByteStreamsKt;.readBytes:(Ljava/io/InputStream;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L56e8b8.  v0:= "$this$readBytes" @kind object;
  #L56e8bc.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56e8c2.  v0:= new `java.io.ByteArrayOutputStream`;
  #L56e8c6.  call temp:= `available`(v4) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L56e8cc.  v1:= temp;
  #L56e8ce.  v2:= 8192I;
  #L56e8d2.  call temp:= `max`(v2, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L56e8d8.  v1:= temp;
  #L56e8da.  call `<init>`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L56e8e0.  v1:= 0I;
  #L56e8e2.  v2:= 2I;
  #L56e8e4.  v3:= 0I;
  #L56e8e6.  call temp:= `copyTo$default`(v4, v0, v1, v2, v3) @signature `Lkotlin/io/ByteStreamsKt;.copyTo$default:(Ljava/io/InputStream;Ljava/io/OutputStream;IILjava/lang/Object;)J` @kind static;
  #L56e8ec.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L56e8f2.  v4:= temp @kind object;
  #L56e8f4.  v0:= "buffer.toByteArray()" @kind object;
  #L56e8f8.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56e8fe.  return v4 @kind object;
}
procedure `byte`[] `readBytes`(`java.io.InputStream` v3 @kind object, `int` v4 ) @signature `Lkotlin/io/ByteStreamsKt;.readBytes:(Ljava/io/InputStream;I)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56e910.  v0:= "$this$readBytes" @kind object;
  #L56e914.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56e91a.  v0:= new `java.io.ByteArrayOutputStream`;
  #L56e91e.  call temp:= `available`(v3) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L56e924.  v1:= temp;
  #L56e926.  call temp:= `max`(v4, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L56e92c.  v4:= temp;
  #L56e92e.  call `<init>`(v0, v4) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L56e934.  v4:= 0I;
  #L56e936.  v1:= 2I;
  #L56e938.  v2:= 0I;
  #L56e93a.  call temp:= `copyTo$default`(v3, v0, v4, v1, v2) @signature `Lkotlin/io/ByteStreamsKt;.copyTo$default:(Ljava/io/InputStream;Ljava/io/OutputStream;IILjava/lang/Object;)J` @kind static;
  #L56e940.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L56e946.  v3:= temp @kind object;
  #L56e948.  v4:= "buffer.toByteArray()" @kind object;
  #L56e94c.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56e952.  return v3 @kind object;
}
procedure `byte`[] `readBytes$default`(`java.io.InputStream` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/io/ByteStreamsKt;.readBytes$default:(Ljava/io/InputStream;IILjava/lang/Object;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L56e890.  v2:= v2 ^& 1;
  #L56e894.  if v2 == 0 then goto L56e89c;
  #L56e898.  v1:= 8192I;
  #L56e89c.  call temp:= `readBytes`(v0, v1) @signature `Lkotlin/io/ByteStreamsKt;.readBytes:(Ljava/io/InputStream;I)[B` @kind static;
  #L56e8a2.  v0:= temp @kind object;
  #L56e8a4.  return v0 @kind object;
}
