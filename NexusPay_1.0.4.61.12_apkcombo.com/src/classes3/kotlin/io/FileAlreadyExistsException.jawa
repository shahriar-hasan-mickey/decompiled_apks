record `kotlin.io.FileAlreadyExistsException` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.io.FileSystemException` @kind class {
}
procedure `void` `<init>`(`kotlin.io.FileAlreadyExistsException` v1 @kind this, `java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlin/io/FileAlreadyExistsException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L56eb68.  v0:= "file" @kind object;
  #L56eb6c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56eb72.  call `<init>`(v1, v2, v3, v4) @signature `Lkotlin/io/FileSystemException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L56eb78.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileAlreadyExistsException` v1 @kind this, `java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `kotlin.jvm.internal.DefaultConstructorMarker` v6 @kind object) @signature `Lkotlin/io/FileAlreadyExistsException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L56eb8c.  v6:= v5 ^& 2;
  #L56eb90.  v0:= 0I;
  #L56eb92.  if v6 == 0 then goto L56eb98;
  #L56eb96.  v3:= v0 @kind object;
  #L56eb98.  v5:= v5 ^& 4;
  #L56eb9c.  if v5 == 0 then goto L56eba2;
  #L56eba0.  v4:= v0 @kind object;
  #L56eba2.  call `<init>`(v1, v2, v3, v4) @signature `Lkotlin/io/FileAlreadyExistsException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L56eba8.  return @kind void;
}
