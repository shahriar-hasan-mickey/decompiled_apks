record `kotlin.io.ExceptionsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlin/io/ExceptionsKt;.a:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56eaa0.  v0:= new `java.lang.StringBuilder`;
  #L56eaa4.  call temp:= `toString`(v2) @signature `Ljava/io/File;.toString:()Ljava/lang/String;` @kind virtual;
  #L56eaaa.  v2:= temp @kind object;
  #L56eaac.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56eab2.  if v3 == 0 then goto L56eade;
  #L56eab6.  v2:= new `java.lang.StringBuilder`;
  #L56eaba.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L56eac0.  v1:= " -> " @kind object;
  #L56eac4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56eaca.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56ead0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56ead6.  v2:= temp @kind object;
  #L56ead8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56eade.  if v4 == 0 then goto L56eb0a;
  #L56eae2.  v2:= new `java.lang.StringBuilder`;
  #L56eae6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L56eaec.  v3:= ": " @kind object;
  #L56eaf0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56eaf6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56eafc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56eb02.  v2:= temp @kind object;
  #L56eb04.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56eb0a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56eb10.  v2:= temp @kind object;
  #L56eb12.  v3:= "sb.toString()" @kind object;
  #L56eb16.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56eb1c.  return v2 @kind object;
}
procedure `java.lang.String` `access$constructMessage`(`java.io.File` v0 @kind object, `java.io.File` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/io/ExceptionsKt;.access$constructMessage:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L56ea84.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/io/ExceptionsKt;.a:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L56ea8a.  v0:= temp @kind object;
  #L56ea8c.  return v0 @kind object;
}
