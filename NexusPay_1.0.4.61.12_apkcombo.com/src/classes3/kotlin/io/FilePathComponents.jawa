record `kotlin.io.FilePathComponents` @kind class @AccessFlag PUBLIC_FINAL {
  `java.io.File` `kotlin.io.FilePathComponents.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `kotlin.io.FilePathComponents.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.io.FilePathComponents` v1 @kind this, `java.io.File` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lkotlin/io/FilePathComponents;.<init>:(Ljava/io/File;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L56ee60.  v0:= "root" @kind object;
  #L56ee64.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ee6a.  v0:= "segments" @kind object;
  #L56ee6e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ee74.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56ee7a.  v1.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` := v2 @kind object;
  #L56ee7e.  v1.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` := v3 @kind object;
  #L56ee82.  return @kind void;
}
procedure `kotlin.io.FilePathComponents` `copy$default`(`kotlin.io.FilePathComponents` v0 @kind object, `java.io.File` v1 @kind object, `java.util.List` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/io/FilePathComponents;.copy$default:(Lkotlin/io/FilePathComponents;Ljava/io/File;Ljava/util/List;ILjava/lang/Object;)Lkotlin/io/FilePathComponents;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L56edfc.  v4:= v3 ^& 1;
  #L56ee00.  if v4 == 0 then goto L56ee08;
  #L56ee04.  v1:= v0.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ee08.  v3:= v3 ^& 2;
  #L56ee0c.  if v3 == 0 then goto L56ee14;
  #L56ee10.  v2:= v0.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56ee14.  call temp:= `copy`(v0, v1, v2) @signature `Lkotlin/io/FilePathComponents;.copy:(Ljava/io/File;Ljava/util/List;)Lkotlin/io/FilePathComponents;` @kind virtual;
  #L56ee1a.  v0:= temp @kind object;
  #L56ee1c.  return v0 @kind object;
}
procedure `java.io.File` `component1`(`kotlin.io.FilePathComponents` v1 @kind this) @signature `Lkotlin/io/FilePathComponents;.component1:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L56ecac.  v0:= v1.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ecb0.  return v0 @kind object;
}
procedure `java.util.List` `component2`(`kotlin.io.FilePathComponents` v1 @kind this) @signature `Lkotlin/io/FilePathComponents;.component2:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L56edcc.  v0:= v1.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56edd0.  return v0 @kind object;
}
procedure `kotlin.io.FilePathComponents` `copy`(`kotlin.io.FilePathComponents` v1 @kind this, `java.io.File` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lkotlin/io/FilePathComponents;.copy:(Ljava/io/File;Ljava/util/List;)Lkotlin/io/FilePathComponents;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L56ee30.  v0:= "root" @kind object;
  #L56ee34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ee3a.  v0:= "segments" @kind object;
  #L56ee3e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ee44.  v0:= new `kotlin.io.FilePathComponents`;
  #L56ee48.  call `<init>`(v0, v2, v3) @signature `Lkotlin/io/FilePathComponents;.<init>:(Ljava/io/File;Ljava/util/List;)V` @kind direct;
  #L56ee4e.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.io.FilePathComponents` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/io/FilePathComponents;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L56ebbc.  if v2 == v3 then goto L56ebfa;
  #L56ebc0.  v0:= instanceof @variable v3 @type ^`kotlin.io.FilePathComponents` @kind boolean;
  #L56ebc4.  if v0 == 0 then goto L56ebf6;
  #L56ebc8.  v3:= (`kotlin.io.FilePathComponents`) v3 @kind object;
  #L56ebcc.  v0:= v2.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ebd0.  v1:= v3.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ebd4.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56ebda.  v0:= temp;
  #L56ebdc.  if v0 == 0 then goto L56ebf6;
  #L56ebe0.  v0:= v2.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56ebe4.  v3:= v3.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56ebe8.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56ebee.  v3:= temp;
  #L56ebf0.  if v3 == 0 then goto L56ebf6;
  #L56ebf4.  goto L56ebfa;
  #L56ebf6.  v3:= 0I;
  #L56ebf8.  return v3;
  #L56ebfa.  v3:= 1I;
  #L56ebfc.  return v3;
}
procedure `java.io.File` `getRoot`(`kotlin.io.FilePathComponents` v1 @kind this) @signature `Lkotlin/io/FilePathComponents;.getRoot:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L56ecc4.  v0:= v1.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ecc8.  return v0 @kind object;
}
procedure `java.lang.String` `getRootName`(`kotlin.io.FilePathComponents` v2 @kind this) @signature `Lkotlin/io/FilePathComponents;.getRootName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L56ed4c.  v0:= v2.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ed50.  call temp:= `getPath`(v0) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L56ed56.  v0:= temp @kind object;
  #L56ed58.  v1:= "root.path" @kind object;
  #L56ed5c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ed62.  return v0 @kind object;
}
procedure `java.util.List` `getSegments`(`kotlin.io.FilePathComponents` v1 @kind this) @signature `Lkotlin/io/FilePathComponents;.getSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L56ede4.  v0:= v1.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56ede8.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.io.FilePathComponents` v1 @kind this) @signature `Lkotlin/io/FilePathComponents;.getSize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L56ec4c.  v0:= v1.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56ec50.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L56ec56.  v0:= temp;
  #L56ec58.  return v0;
}
procedure `int` `hashCode`(`kotlin.io.FilePathComponents` v3 @kind this) @signature `Lkotlin/io/FilePathComponents;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L56ec6c.  v0:= v3.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ec70.  v1:= 0I;
  #L56ec72.  if v0 == 0 then goto L56ec80;
  #L56ec76.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L56ec7c.  v0:= temp;
  #L56ec7e.  goto L56ec82;
  #L56ec80.  v0:= 0I;
  #L56ec82.  v0:= v0 * 31;
  #L56ec86.  v2:= v3.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56ec8a.  if v2 == 0 then goto L56ec96;
  #L56ec8e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L56ec94.  v1:= temp;
  #L56ec96.  v0:= v0 + v1 @kind int;
  #L56ec98.  return v0;
}
procedure `boolean` `isRooted`(`kotlin.io.FilePathComponents` v2 @kind this) @signature `Lkotlin/io/FilePathComponents;.isRooted:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L56ec10.  v0:= v2.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ec14.  call temp:= `getPath`(v0) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L56ec1a.  v0:= temp @kind object;
  #L56ec1c.  v1:= "root.path" @kind object;
  #L56ec20.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ec26.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L56ec2c.  v0:= temp;
  #L56ec2e.  if v0 <= 0 then goto L56ec36;
  #L56ec32.  v0:= 1I;
  #L56ec34.  goto L56ec38;
  #L56ec36.  v0:= 0I;
  #L56ec38.  return v0;
}
procedure `java.io.File` `subPath`(`kotlin.io.FilePathComponents` v11 @kind this, `int` v12 , `int` v13 ) @signature `Lkotlin/io/FilePathComponents;.subPath:(II)Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L56ecdc.  if v12 < 0 then goto L56ed2e;
  #L56ece0.  if v12 > v13 then goto L56ed2e;
  #L56ece4.  call temp:= `getSize`(v11) @signature `Lkotlin/io/FilePathComponents;.getSize:()I` @kind virtual;
  #L56ecea.  v0:= temp;
  #L56ecec.  if v13 > v0 then goto L56ed2e;
  #L56ecf0.  v0:= new `java.io.File`;
  #L56ecf4.  v1:= v11.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56ecf8.  call temp:= `subList`(v1, v12, v13) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L56ecfe.  v2:= temp @kind object;
  #L56ed00.  v3:= `@@java.io.File.separator` @type ^`java.lang.String` @kind object;
  #L56ed04.  v12:= "File.separator" @kind object;
  #L56ed08.  call `checkNotNullExpressionValue`(v3, v12) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ed0e.  v4:= 0I;
  #L56ed10.  v5:= 0I;
  #L56ed12.  v6:= 0I;
  #L56ed14.  v7:= 0I;
  #L56ed16.  v8:= 0I;
  #L56ed18.  v9:= 62I;
  #L56ed1c.  v10:= 0I;
  #L56ed1e.  call temp:= `joinToString$default`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/collections/CollectionsKt;.joinToString$default:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L56ed24.  v12:= temp @kind object;
  #L56ed26.  call `<init>`(v0, v12) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56ed2c.  return v0 @kind object;
  #L56ed2e.  v12:= new `java.lang.IllegalArgumentException`;
  #L56ed32.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L56ed38.  throw v12;
}
procedure `java.lang.String` `toString`(`kotlin.io.FilePathComponents` v2 @kind this) @signature `Lkotlin/io/FilePathComponents;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L56ed74.  v0:= new `java.lang.StringBuilder`;
  #L56ed78.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L56ed7e.  v1:= "FilePathComponents(root=" @kind object;
  #L56ed82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56ed88.  v1:= v2.`kotlin.io.FilePathComponents.a` @type ^`java.io.File` @kind object;
  #L56ed8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56ed92.  v1:= ", segments=" @kind object;
  #L56ed96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56ed9c.  v1:= v2.`kotlin.io.FilePathComponents.b` @type ^`java.util.List` @kind object;
  #L56eda0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56eda6.  v1:= ")" @kind object;
  #L56edaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56edb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56edb6.  v0:= temp @kind object;
  #L56edb8.  return v0 @kind object;
}
