record `kotlin.ULongArray` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Collection` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `long`[] `kotlin.ULongArray.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.ULongArray` v1 @kind this, `long`[] v2 @kind object) @signature `Lkotlin/ULongArray;.<init>:([J)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L530d98.  v0:= "storage" @kind object;
  #L530d9c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L530da2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L530da8.  v1.`kotlin.ULongArray.a` @type ^`long`[] := v2 @kind object;
  #L530dac.  return @kind void;
}
procedure `kotlin.ULongArray` `box-impl`(`long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.box-impl:([J)Lkotlin/ULongArray;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L530cfc.  v0:= "v" @kind object;
  #L530d00.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L530d06.  v0:= new `kotlin.ULongArray`;
  #L530d0a.  call `<init>`(v0, v1) @signature `Lkotlin/ULongArray;.<init>:([J)V` @kind direct;
  #L530d10.  return v0 @kind object;
}
procedure `long`[] `constructor-impl`(`int` v0 ) @signature `Lkotlin/ULongArray;.constructor-impl:(I)[J` @AccessFlag PUBLIC_STATIC {
    temp;

  #L530d44.  v0:= new `long`[v0];
  #L530d48.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULongArray;.constructor-impl:([J)[J` @kind static;
  #L530d4e.  v0:= temp @kind object;
  #L530d50.  return v0 @kind object;
}
procedure `long`[] `constructor-impl`(`long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.constructor-impl:([J)[J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L530d64.  v0:= "storage" @kind object;
  #L530d68.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L530d6e.  return v1 @kind object;
}
procedure `boolean` `contains-VKZWuLQ`(`long`[] v0 @kind object, `long` v1 ) @signature `Lkotlin/ULongArray;.contains-VKZWuLQ:([JJ)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5309c4.  call temp:= `contains`(v0, v1) @signature `Lkotlin/collections/ArraysKt;.contains:([JJ)Z` @kind static;
  #L5309ca.  v0:= temp;
  #L5309cc.  return v0;
}
procedure `boolean` `containsAll-impl`(`long`[] v5 @kind object, `java.util.Collection` v6 @kind object) @signature `Lkotlin/ULongArray;.containsAll-impl:([JLjava/util/Collection;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L530a00.  v0:= "elements" @kind object;
  #L530a04.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L530a0a.  call temp:= `isEmpty`(v6) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L530a10.  v0:= temp;
  #L530a12.  v1:= 0I;
  #L530a14.  v2:= 1I;
  #L530a16.  if v0 == 0 then goto L530a1e;
  #L530a1a.  v1:= 1I;
  #L530a1c.  goto L530a64;
  #L530a1e.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L530a24.  v6:= temp @kind object;
  #L530a26.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L530a2c.  v0:= temp;
  #L530a2e.  if v0 == 0 then goto L530a1a;
  #L530a32.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L530a38.  v0:= temp @kind object;
  #L530a3a.  v3:= instanceof @variable v0 @type ^`kotlin.ULong` @kind boolean;
  #L530a3e.  if v3 == 0 then goto L530a5e;
  #L530a42.  v0:= (`kotlin.ULong`) v0 @kind object;
  #L530a46.  call temp:= `unbox-impl`(v0) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L530a4c.  v3:= temp @kind wide;
  #L530a4e.  call temp:= `contains`(v5, v3) @signature `Lkotlin/collections/ArraysKt;.contains:([JJ)Z` @kind static;
  #L530a54.  v0:= temp;
  #L530a56.  if v0 == 0 then goto L530a5e;
  #L530a5a.  v0:= 1I;
  #L530a5c.  goto L530a60;
  #L530a5e.  v0:= 0I;
  #L530a60.  if v0 != 0 then goto L530a26;
  #L530a64.  return v1;
}
procedure `boolean` `equals-impl`(`long`[] v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/ULongArray;.equals-impl:([JLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L530a98.  v0:= instanceof @variable v2 @type ^`kotlin.ULongArray` @kind boolean;
  #L530a9c.  if v0 == 0 then goto L530abc;
  #L530aa0.  v2:= (`kotlin.ULongArray`) v2 @kind object;
  #L530aa4.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/ULongArray;.unbox-impl:()[J` @kind virtual;
  #L530aaa.  v2:= temp @kind object;
  #L530aac.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L530ab2.  v1:= temp;
  #L530ab4.  if v1 == 0 then goto L530abc;
  #L530ab8.  v1:= 1I;
  #L530aba.  return v1;
  #L530abc.  v1:= 0I;
  #L530abe.  return v1;
}
procedure `boolean` `equals-impl0`(`long`[] v0 @kind object, `long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.equals-impl0:([J[J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L530ad0.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L530ad6.  v0:= temp;
  #L530ad8.  return v0;
}
procedure `long` `get-s-VKNKU`(`long`[] v2 @kind object, `int` v3 ) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L530d24.  v0:= v2[v3] @kind wide;
  #L530d28.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L530d2e.  v2:= temp @kind wide;
  #L530d30.  return v2 @kind wide;
}
procedure `int` `getSize-impl`(`long`[] v0 @kind object) @signature `Lkotlin/ULongArray;.getSize-impl:([J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L530bac.  v0:= length @variable v0;
  #L530bae.  return v0;
}
procedure `void` `getStorage$annotations`() @signature `Lkotlin/ULongArray;.getStorage$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L530de0.  return @kind void;
}
procedure `int` `hashCode-impl`(`long`[] v0 @kind object) @signature `Lkotlin/ULongArray;.hashCode-impl:([J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L530be0.  if v0 == 0 then goto L530bee;
  #L530be4.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([J)I` @kind static;
  #L530bea.  v0:= temp;
  #L530bec.  goto L530bf0;
  #L530bee.  v0:= 0I;
  #L530bf0.  return v0;
}
procedure `boolean` `isEmpty-impl`(`long`[] v0 @kind object) @signature `Lkotlin/ULongArray;.isEmpty-impl:([J)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L530b0c.  v0:= length @variable v0;
  #L530b0e.  if v0 != 0 then goto L530b16;
  #L530b12.  v0:= 1I;
  #L530b14.  goto L530b18;
  #L530b16.  v0:= 0I;
  #L530b18.  return v0;
}
procedure `java.util.Iterator` `iterator-impl`(`long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.iterator-impl:([J)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L530ce0.  v0:= new `kotlin.ULongArray$a`;
  #L530ce4.  call `<init>`(v0, v1) @signature `Lkotlin/ULongArray$a;.<init>:([J)V` @kind direct;
  #L530cea.  return v0 @kind object;
}
procedure `void` `set-k8EXiF4`(`long`[] v0 @kind object, `int` v1 , `long` v2 ) @signature `Lkotlin/ULongArray;.set-k8EXiF4:([JIJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L530df4.  v0[v1]:= v2 @kind wide;
  #L530df8.  return @kind void;
}
procedure `java.lang.String` `toString-impl`(`long`[] v2 @kind object) @signature `Lkotlin/ULongArray;.toString-impl:([J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L530c78.  v0:= new `java.lang.StringBuilder`;
  #L530c7c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L530c82.  v1:= "ULongArray(storage=" @kind object;
  #L530c86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L530c8c.  call temp:= `toString`(v2) @signature `Ljava/util/Arrays;.toString:([J)Ljava/lang/String;` @kind static;
  #L530c92.  v2:= temp @kind object;
  #L530c94.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L530c9a.  v2:= ")" @kind object;
  #L530c9e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L530ca4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L530caa.  v2:= temp @kind object;
  #L530cac.  return v2 @kind object;
}
procedure `boolean` `add`(`kotlin.ULongArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/ULongArray;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L530910.  v2:= new `java.lang.UnsupportedOperationException`;
  #L530914.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L530918.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53091e.  throw v2;
}
procedure `boolean` `add-VKZWuLQ`(`kotlin.ULongArray` v0 @kind this, `long` v1 ) @signature `Lkotlin/ULongArray;.add-VKZWuLQ:(J)Z` @AccessFlag PUBLIC {
    temp;

  #L530930.  v1:= new `java.lang.UnsupportedOperationException`;
  #L530934.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L530938.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53093e.  throw v1;
}
procedure `boolean` `addAll`(`kotlin.ULongArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/ULongArray;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530950.  v2:= new `java.lang.UnsupportedOperationException`;
  #L530954.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L530958.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53095e.  throw v2;
}
procedure `void` `clear`(`kotlin.ULongArray` v2 @kind this) @signature `Lkotlin/ULongArray;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L530dc0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L530dc4.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L530dc8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L530dce.  throw v0;
}
procedure `boolean` `contains`(`kotlin.ULongArray` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ULongArray;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L530970.  v0:= instanceof @variable v3 @type ^`kotlin.ULong` @kind boolean;
  #L530974.  if v0 == 0 then goto L53098e;
  #L530978.  v3:= (`kotlin.ULong`) v3 @kind object;
  #L53097c.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L530982.  v0:= temp @kind wide;
  #L530984.  call temp:= `contains-VKZWuLQ`(v2, v0) @signature `Lkotlin/ULongArray;.contains-VKZWuLQ:(J)Z` @kind virtual;
  #L53098a.  v3:= temp;
  #L53098c.  return v3;
  #L53098e.  v3:= 0I;
  #L530990.  return v3;
}
procedure `boolean` `contains-VKZWuLQ`(`kotlin.ULongArray` v1 @kind this, `long` v2 ) @signature `Lkotlin/ULongArray;.contains-VKZWuLQ:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5309a4.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L5309a8.  call temp:= `contains-VKZWuLQ`(v0, v2) @signature `Lkotlin/ULongArray;.contains-VKZWuLQ:([JJ)Z` @kind static;
  #L5309ae.  v2:= temp;
  #L5309b0.  return v2;
}
procedure `boolean` `containsAll`(`kotlin.ULongArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/ULongArray;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5309e0.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L5309e4.  call temp:= `containsAll-impl`(v0, v2) @signature `Lkotlin/ULongArray;.containsAll-impl:([JLjava/util/Collection;)Z` @kind static;
  #L5309ea.  v2:= temp;
  #L5309ec.  return v2;
}
procedure `boolean` `equals`(`kotlin.ULongArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/ULongArray;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530a78.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L530a7c.  call temp:= `equals-impl`(v0, v2) @signature `Lkotlin/ULongArray;.equals-impl:([JLjava/lang/Object;)Z` @kind static;
  #L530a82.  v2:= temp;
  #L530a84.  return v2;
}
procedure `int` `getSize`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530b8c.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L530b90.  call temp:= `getSize-impl`(v0) @signature `Lkotlin/ULongArray;.getSize-impl:([J)I` @kind static;
  #L530b96.  v0:= temp;
  #L530b98.  return v0;
}
procedure `int` `hashCode`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530bc0.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L530bc4.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/ULongArray;.hashCode-impl:([J)I` @kind static;
  #L530bca.  v0:= temp;
  #L530bcc.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530aec.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L530af0.  call temp:= `isEmpty-impl`(v0) @signature `Lkotlin/ULongArray;.isEmpty-impl:([J)Z` @kind static;
  #L530af6.  v0:= temp;
  #L530af8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530cc0.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L530cc4.  call temp:= `iterator-impl`(v0) @signature `Lkotlin/ULongArray;.iterator-impl:([J)Ljava/util/Iterator;` @kind static;
  #L530cca.  v0:= temp @kind object;
  #L530ccc.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.ULongArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/ULongArray;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530b2c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L530b30.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L530b34.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L530b3a.  throw v2;
}
procedure `boolean` `removeAll`(`kotlin.ULongArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/ULongArray;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530b4c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L530b50.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L530b54.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L530b5a.  throw v2;
}
procedure `boolean` `retainAll`(`kotlin.ULongArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/ULongArray;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530b6c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L530b70.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L530b74.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L530b7a.  throw v2;
}
procedure `int` `size`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L530c04.  call temp:= `getSize`(v1) @signature `Lkotlin/ULongArray;.getSize:()I` @kind virtual;
  #L530c0a.  v0:= temp;
  #L530c0c.  return v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530c20.  call temp:= `toArray`(v1) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @kind static;
  #L530c26.  v0:= temp @kind object;
  #L530c28.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.ULongArray` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lkotlin/ULongArray;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L530c3c.  call temp:= `toArray`(v0, v1) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L530c42.  v1:= temp @kind object;
  #L530c44.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L530c58.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L530c5c.  call temp:= `toString-impl`(v0) @signature `Lkotlin/ULongArray;.toString-impl:([J)Ljava/lang/String;` @kind static;
  #L530c62.  v0:= temp @kind object;
  #L530c64.  return v0 @kind object;
}
procedure `long`[] `unbox-impl`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.unbox-impl:()[J` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L530d80.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L530d84.  return v0 @kind object;
}
