record `kotlin.UShort` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `short` `kotlin.UShort.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.UShort$Companion` `@@kotlin.UShort.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `short` `@@kotlin.UShort.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `short` `@@kotlin.UShort.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.UShort.SIZE_BITS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.UShort.SIZE_BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/UShort;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L531794.  v0:= new `kotlin.UShort$Companion`;
  #L531798.  v1:= 0I;
  #L53179a.  call `<init>`(v0, v1) @signature `Lkotlin/UShort$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L5317a0.  `@@kotlin.UShort.Companion` @type ^`kotlin.UShort$Companion` := v0 @kind object;
  #L5317a4.  return @kind void;
}
procedure `void` `<init>`(`kotlin.UShort` v0 @kind this, `short` v1 ) @signature `Lkotlin/UShort;.<init>:(S)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L5317b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5317be.  v0.`kotlin.UShort.a` @type ^`short` := v1 @kind char;
  #L5317c2.  return @kind void;
}
procedure `int` `a`(`kotlin.UShort` v1 @kind this, `short` v2 ) @signature `Lkotlin/UShort;.a:(S)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L531690.  v0:= v1.`kotlin.UShort.a` @type ^`short` @kind short;
  #L531694.  call temp:= `b`(v0, v2) @signature `Lkotlin/UShort;.b:(SS)I` @kind static;
  #L53169a.  v2:= temp;
  #L53169c.  return v2;
}
procedure `int` `b`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.b:(SS)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L5316b0.  v0:= 65535I;
  #L5316b6.  v1:= v1 ^& v0 @kind int;
  #L5316b8.  v2:= v2 ^& v0 @kind int;
  #L5316ba.  call temp:= `compare`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L5316c0.  v1:= temp;
  #L5316c2.  return v1;
}
procedure `kotlin.UShort` `box-impl`(`short` v1 ) @signature `Lkotlin/UShort;.box-impl:(S)Lkotlin/UShort;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L53174c.  v0:= new `kotlin.UShort`;
  #L531750.  call `<init>`(v0, v1) @signature `Lkotlin/UShort;.<init>:(S)V` @kind direct;
  #L531756.  return v0 @kind object;
}
procedure `short` `constructor-impl`(`short` v0 ) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @AccessFlag PUBLIC_STATIC {
    temp;

  #L531768.  return v0;
}
procedure `boolean` `equals-impl`(`short` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlin/UShort;.equals-impl:(SLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L53161c.  v0:= instanceof @variable v2 @type ^`kotlin.UShort` @kind boolean;
  #L531620.  if v0 == 0 then goto L531638;
  #L531624.  v2:= (`kotlin.UShort`) v2 @kind object;
  #L531628.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/UShort;.unbox-impl:()S` @kind virtual;
  #L53162e.  v2:= temp;
  #L531630.  if v1 != v2 then goto L531638;
  #L531634.  v1:= 1I;
  #L531636.  return v1;
  #L531638.  v1:= 0I;
  #L53163a.  return v1;
}
procedure `boolean` `equals-impl0`(`short` v0 , `short` v1 ) @signature `Lkotlin/UShort;.equals-impl0:(SS)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L53164c.  if v0 != v1 then goto L531654;
  #L531650.  v0:= 1I;
  #L531652.  goto L531656;
  #L531654.  v0:= 0I;
  #L531656.  return v0;
}
procedure `void` `getData$annotations`() @signature `Lkotlin/UShort;.getData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L5317d4.  return @kind void;
}
procedure `int` `hashCode-impl`(`short` v0 ) @signature `Lkotlin/UShort;.hashCode-impl:(S)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5316f4.  return v0;
}
procedure `java.lang.String` `toString-impl`(`short` v1 ) @signature `Lkotlin/UShort;.toString-impl:(S)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L531728.  v0:= 65535I;
  #L53172e.  v1:= v1 ^& v0 @kind int;
  #L531730.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L531736.  v1:= temp @kind object;
  #L531738.  return v1 @kind object;
}
procedure `int` `compareTo`(`kotlin.UShort` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/UShort;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L531668.  v1:= (`kotlin.UShort`) v1 @kind object;
  #L53166c.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UShort;.unbox-impl:()S` @kind virtual;
  #L531672.  v1:= temp;
  #L531674.  call temp:= `a`(v0, v1) @signature `Lkotlin/UShort;.a:(S)I` @kind direct;
  #L53167a.  v1:= temp;
  #L53167c.  return v1;
}
procedure `boolean` `equals`(`kotlin.UShort` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UShort;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5315fc.  v0:= v1.`kotlin.UShort.a` @type ^`short` @kind short;
  #L531600.  call temp:= `equals-impl`(v0, v2) @signature `Lkotlin/UShort;.equals-impl:(SLjava/lang/Object;)Z` @kind static;
  #L531606.  v2:= temp;
  #L531608.  return v2;
}
procedure `int` `hashCode`(`kotlin.UShort` v1 @kind this) @signature `Lkotlin/UShort;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5316d4.  v0:= v1.`kotlin.UShort.a` @type ^`short` @kind short;
  #L5316d8.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/UShort;.hashCode-impl:(S)I` @kind static;
  #L5316de.  v0:= temp;
  #L5316e0.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.UShort` v1 @kind this) @signature `Lkotlin/UShort;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L531708.  v0:= v1.`kotlin.UShort.a` @type ^`short` @kind short;
  #L53170c.  call temp:= `toString-impl`(v0) @signature `Lkotlin/UShort;.toString-impl:(S)Ljava/lang/String;` @kind static;
  #L531712.  v0:= temp @kind object;
  #L531714.  return v0 @kind object;
}
procedure `short` `unbox-impl`(`kotlin.UShort` v1 @kind this) @signature `Lkotlin/UShort;.unbox-impl:()S` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L53177c.  v0:= v1.`kotlin.UShort.a` @type ^`short` @kind short;
  #L531780.  return v0;
}
