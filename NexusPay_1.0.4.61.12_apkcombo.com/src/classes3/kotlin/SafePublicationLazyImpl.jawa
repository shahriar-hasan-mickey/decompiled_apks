record `kotlin.SafePublicationLazyImpl` @kind class @AccessFlag FINAL extends `kotlin.Lazy` @kind interface, `java.io.Serializable` @kind interface {
  `kotlin.jvm.functions.Function0` `kotlin.SafePublicationLazyImpl.a` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `kotlin.SafePublicationLazyImpl.b` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlin.SafePublicationLazyImpl.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/SafePublicationLazyImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L52f290.  v0:= new `kotlin.SafePublicationLazyImpl$Companion`;
  #L52f294.  v1:= 0I;
  #L52f296.  call `<init>`(v0, v1) @signature `Lkotlin/SafePublicationLazyImpl$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L52f29c.  v0:= constclass @type ^`kotlin.SafePublicationLazyImpl` @kind object;
  #L52f2a0.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L52f2a4.  v2:= "b" @kind object;
  #L52f2a8.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L52f2ae.  v0:= temp @kind object;
  #L52f2b0.  `@@kotlin.SafePublicationLazyImpl.c` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L52f2b4.  return @kind void;
}
procedure `void` `<init>`(`kotlin.SafePublicationLazyImpl` v1 @kind this, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/SafePublicationLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L52f2c8.  v0:= "initializer" @kind object;
  #L52f2cc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52f2d2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52f2d8.  v1.`kotlin.SafePublicationLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L52f2dc.  v2:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L52f2e0.  v1.`kotlin.SafePublicationLazyImpl.b` @type ^`java.lang.Object` := v2 @kind object;
  #L52f2e4.  v2:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L52f2e8.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.SafePublicationLazyImpl` v2 @kind this) @signature `Lkotlin/SafePublicationLazyImpl;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L52f238.  v0:= new `kotlin.InitializedLazyImpl`;
  #L52f23c.  call temp:= `getValue`(v2) @signature `Lkotlin/SafePublicationLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L52f242.  v1:= temp @kind object;
  #L52f244.  call `<init>`(v0, v1) @signature `Lkotlin/InitializedLazyImpl;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L52f24a.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlin.SafePublicationLazyImpl` v3 @kind this) @signature `Lkotlin/SafePublicationLazyImpl;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L52f1e8.  v0:= v3.`kotlin.SafePublicationLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L52f1ec.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L52f1f0.  if v0 == v1 then goto L52f1f6;
  #L52f1f4.  return v0 @kind object;
  #L52f1f6.  v0:= v3.`kotlin.SafePublicationLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L52f1fa.  if v0 == 0 then goto L52f222;
  #L52f1fe.  call temp:= `invoke`(v0) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L52f204.  v0:= temp @kind object;
  #L52f206.  v1:= `@@kotlin.SafePublicationLazyImpl.c` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L52f20a.  v2:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L52f20e.  call temp:= `compareAndSet`(v1, v3, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L52f214.  v1:= temp;
  #L52f216.  if v1 == 0 then goto L52f222;
  #L52f21a.  v1:= 0I;
  #L52f21c.  v3.`kotlin.SafePublicationLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` := v1 @kind object;
  #L52f220.  return v0 @kind object;
  #L52f222.  v0:= v3.`kotlin.SafePublicationLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L52f226.  return v0 @kind object;
}
procedure `boolean` `isInitialized`(`kotlin.SafePublicationLazyImpl` v2 @kind this) @signature `Lkotlin/SafePublicationLazyImpl;.isInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L52f1c4.  v0:= v2.`kotlin.SafePublicationLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L52f1c8.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L52f1cc.  if v0 == v1 then goto L52f1d4;
  #L52f1d0.  v0:= 1I;
  #L52f1d2.  goto L52f1d6;
  #L52f1d4.  v0:= 0I;
  #L52f1d6.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.SafePublicationLazyImpl` v1 @kind this) @signature `Lkotlin/SafePublicationLazyImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52f25c.  call temp:= `isInitialized`(v1) @signature `Lkotlin/SafePublicationLazyImpl;.isInitialized:()Z` @kind virtual;
  #L52f262.  v0:= temp;
  #L52f264.  if v0 == 0 then goto L52f27a;
  #L52f268.  call temp:= `getValue`(v1) @signature `Lkotlin/SafePublicationLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L52f26e.  v0:= temp @kind object;
  #L52f270.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L52f276.  v0:= temp @kind object;
  #L52f278.  goto L52f27e;
  #L52f27a.  v0:= "Lazy value not initialized yet." @kind object;
  #L52f27e.  return v0 @kind object;
}
