record `kotlin.LazyKt$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.LazyKt$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/LazyKt$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L52e714.  call temp:= `values`() @signature `Lkotlin/LazyThreadSafetyMode;.values:()[Lkotlin/LazyThreadSafetyMode;` @kind static;
  #L52e71a.  v0:= temp @kind object;
  #L52e71c.  v0:= length @variable v0;
  #L52e71e.  v0:= new `int`[v0];
  #L52e722.  `@@kotlin.LazyKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L52e726.  v1:= `@@kotlin.LazyThreadSafetyMode.SYNCHRONIZED` @type ^`kotlin.LazyThreadSafetyMode` @kind object;
  #L52e72a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L52e730.  v1:= temp;
  #L52e732.  v2:= 1I;
  #L52e734.  v0[v1]:= v2;
  #L52e738.  v0:= `@@kotlin.LazyKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L52e73c.  v1:= `@@kotlin.LazyThreadSafetyMode.PUBLICATION` @type ^`kotlin.LazyThreadSafetyMode` @kind object;
  #L52e740.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L52e746.  v1:= temp;
  #L52e748.  v2:= 2I;
  #L52e74a.  v0[v1]:= v2;
  #L52e74e.  v0:= `@@kotlin.LazyKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L52e752.  v1:= `@@kotlin.LazyThreadSafetyMode.NONE` @type ^`kotlin.LazyThreadSafetyMode` @kind object;
  #L52e756.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L52e75c.  v1:= temp;
  #L52e75e.  v2:= 3I;
  #L52e760.  v0[v1]:= v2;
  #L52e764.  return @kind void;
}
