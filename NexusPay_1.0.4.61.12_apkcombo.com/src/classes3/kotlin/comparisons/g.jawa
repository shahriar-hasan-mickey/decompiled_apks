record `kotlin.comparisons.g` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.comparisons.g` v0 @kind this) @signature `Lkotlin/comparisons/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L56b7e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56b7ee.  return @kind void;
}
procedure `short` `maxOf-5PvTz6A`(`short` v2 , `short` v3 ) @signature `Lkotlin/comparisons/g;.maxOf-5PvTz6A:(SS)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56b718.  v0:= 65535I;
  #L56b71e.  v1:= v2 ^& v0 @kind int;
  #L56b722.  v0:= v0 ^& v3 @kind int;
  #L56b724.  call temp:= `compare`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L56b72a.  v0:= temp;
  #L56b72c.  if v0 < 0 then goto L56b732;
  #L56b730.  goto L56b734;
  #L56b732.  v2:= v3;
  #L56b734.  return v2;
}
procedure `int` `maxOf-J1ME1BU`(`int` v1 , `int` v2 ) @signature `Lkotlin/comparisons/g;.maxOf-J1ME1BU:(II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56b5a8.  call temp:= `uintCompare`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L56b5ae.  v0:= temp;
  #L56b5b0.  if v0 < 0 then goto L56b5b6;
  #L56b5b4.  goto L56b5b8;
  #L56b5b6.  v1:= v2;
  #L56b5b8.  return v1;
}
procedure `byte` `maxOf-Kr8caGY`(`byte` v2 , `byte` v3 ) @signature `Lkotlin/comparisons/g;.maxOf-Kr8caGY:(BB)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56b4e0.  v0:= v2 ^& 255;
  #L56b4e4.  v1:= v3 ^& 255;
  #L56b4e8.  call temp:= `compare`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L56b4ee.  v0:= temp;
  #L56b4f0.  if v0 < 0 then goto L56b4f6;
  #L56b4f4.  goto L56b4f8;
  #L56b4f6.  v2:= v3;
  #L56b4f8.  return v2;
}
procedure `int` `maxOf-Md2H83M`(`int` v3 , `int`[] v4 @kind object) @signature `Lkotlin/comparisons/g;.maxOf-Md2H83M:(I[I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56b5cc.  v0:= "other" @kind object;
  #L56b5d0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56b5d6.  v0:= length @variable v4;
  #L56b5d8.  v1:= 0I;
  #L56b5da.  if v1 >= v0 then goto L56b5f0;
  #L56b5de.  v2:= v4[v1];
  #L56b5e2.  call temp:= `maxOf-J1ME1BU`(v3, v2) @signature `Lkotlin/comparisons/g;.maxOf-J1ME1BU:(II)I` @kind static;
  #L56b5e8.  v3:= temp;
  #L56b5ea.  v1:= v1 + 1;
  #L56b5ee.  goto L56b5da;
  #L56b5f0.  return v3;
}
procedure `long` `maxOf-R03FKyM`(`long` v4 , `long`[] v6 @kind object) @signature `Lkotlin/comparisons/g;.maxOf-R03FKyM:(J[J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L56b660.  v0:= "other" @kind object;
  #L56b664.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56b66a.  v0:= length @variable v6;
  #L56b66c.  v1:= 0I;
  #L56b66e.  if v1 >= v0 then goto L56b684;
  #L56b672.  v2:= v6[v1] @kind wide;
  #L56b676.  call temp:= `maxOf-eb3DHEI`(v4, v2) @signature `Lkotlin/comparisons/g;.maxOf-eb3DHEI:(JJ)J` @kind static;
  #L56b67c.  v4:= temp @kind wide;
  #L56b67e.  v1:= v1 + 1;
  #L56b682.  goto L56b66e;
  #L56b684.  return v4 @kind wide;
}
procedure `byte` `maxOf-Wr6uiD8`(`byte` v3 , `byte`[] v4 @kind object) @signature `Lkotlin/comparisons/g;.maxOf-Wr6uiD8:(B[B)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56b50c.  v0:= "other" @kind object;
  #L56b510.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56b516.  v0:= length @variable v4;
  #L56b518.  v1:= 0I;
  #L56b51a.  if v1 >= v0 then goto L56b530;
  #L56b51e.  v2:= v4[v1] @kind byte;
  #L56b522.  call temp:= `maxOf-Kr8caGY`(v3, v2) @signature `Lkotlin/comparisons/g;.maxOf-Kr8caGY:(BB)B` @kind static;
  #L56b528.  v3:= temp;
  #L56b52a.  v1:= v1 + 1;
  #L56b52e.  goto L56b51a;
  #L56b530.  return v3;
}
procedure `long` `maxOf-eb3DHEI`(`long` v1 , `long` v3 ) @signature `Lkotlin/comparisons/g;.maxOf-eb3DHEI:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56b698.  call temp:= `ulongCompare`(v1, v3) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L56b69e.  v0:= temp;
  #L56b6a0.  if v0 < 0 then goto L56b6a6;
  #L56b6a4.  goto L56b6a8;
  #L56b6a6.  v1:= v3 @kind wide;
  #L56b6a8.  return v1 @kind wide;
}
procedure `short` `maxOf-t1qELG4`(`short` v3 , `short`[] v4 @kind object) @signature `Lkotlin/comparisons/g;.maxOf-t1qELG4:(S[S)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56b748.  v0:= "other" @kind object;
  #L56b74c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56b752.  v0:= length @variable v4;
  #L56b754.  v1:= 0I;
  #L56b756.  if v1 >= v0 then goto L56b76c;
  #L56b75a.  v2:= v4[v1] @kind short;
  #L56b75e.  call temp:= `maxOf-5PvTz6A`(v3, v2) @signature `Lkotlin/comparisons/g;.maxOf-5PvTz6A:(SS)S` @kind static;
  #L56b764.  v3:= temp;
  #L56b766.  v1:= v1 + 1;
  #L56b76a.  goto L56b756;
  #L56b76c.  return v3;
}
procedure `short` `minOf-5PvTz6A`(`short` v2 , `short` v3 ) @signature `Lkotlin/comparisons/g;.minOf-5PvTz6A:(SS)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56b780.  v0:= 65535I;
  #L56b786.  v1:= v2 ^& v0 @kind int;
  #L56b78a.  v0:= v0 ^& v3 @kind int;
  #L56b78c.  call temp:= `compare`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L56b792.  v0:= temp;
  #L56b794.  if v0 > 0 then goto L56b79a;
  #L56b798.  goto L56b79c;
  #L56b79a.  v2:= v3;
  #L56b79c.  return v2;
}
procedure `int` `minOf-J1ME1BU`(`int` v1 , `int` v2 ) @signature `Lkotlin/comparisons/g;.minOf-J1ME1BU:(II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56b604.  call temp:= `uintCompare`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L56b60a.  v0:= temp;
  #L56b60c.  if v0 > 0 then goto L56b612;
  #L56b610.  goto L56b614;
  #L56b612.  v1:= v2;
  #L56b614.  return v1;
}
procedure `byte` `minOf-Kr8caGY`(`byte` v2 , `byte` v3 ) @signature `Lkotlin/comparisons/g;.minOf-Kr8caGY:(BB)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56b544.  v0:= v2 ^& 255;
  #L56b548.  v1:= v3 ^& 255;
  #L56b54c.  call temp:= `compare`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L56b552.  v0:= temp;
  #L56b554.  if v0 > 0 then goto L56b55a;
  #L56b558.  goto L56b55c;
  #L56b55a.  v2:= v3;
  #L56b55c.  return v2;
}
procedure `int` `minOf-Md2H83M`(`int` v3 , `int`[] v4 @kind object) @signature `Lkotlin/comparisons/g;.minOf-Md2H83M:(I[I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56b628.  v0:= "other" @kind object;
  #L56b62c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56b632.  v0:= length @variable v4;
  #L56b634.  v1:= 0I;
  #L56b636.  if v1 >= v0 then goto L56b64c;
  #L56b63a.  v2:= v4[v1];
  #L56b63e.  call temp:= `minOf-J1ME1BU`(v3, v2) @signature `Lkotlin/comparisons/g;.minOf-J1ME1BU:(II)I` @kind static;
  #L56b644.  v3:= temp;
  #L56b646.  v1:= v1 + 1;
  #L56b64a.  goto L56b636;
  #L56b64c.  return v3;
}
procedure `long` `minOf-R03FKyM`(`long` v4 , `long`[] v6 @kind object) @signature `Lkotlin/comparisons/g;.minOf-R03FKyM:(J[J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L56b6bc.  v0:= "other" @kind object;
  #L56b6c0.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56b6c6.  v0:= length @variable v6;
  #L56b6c8.  v1:= 0I;
  #L56b6ca.  if v1 >= v0 then goto L56b6e0;
  #L56b6ce.  v2:= v6[v1] @kind wide;
  #L56b6d2.  call temp:= `minOf-eb3DHEI`(v4, v2) @signature `Lkotlin/comparisons/g;.minOf-eb3DHEI:(JJ)J` @kind static;
  #L56b6d8.  v4:= temp @kind wide;
  #L56b6da.  v1:= v1 + 1;
  #L56b6de.  goto L56b6ca;
  #L56b6e0.  return v4 @kind wide;
}
procedure `byte` `minOf-Wr6uiD8`(`byte` v3 , `byte`[] v4 @kind object) @signature `Lkotlin/comparisons/g;.minOf-Wr6uiD8:(B[B)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56b570.  v0:= "other" @kind object;
  #L56b574.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56b57a.  v0:= length @variable v4;
  #L56b57c.  v1:= 0I;
  #L56b57e.  if v1 >= v0 then goto L56b594;
  #L56b582.  v2:= v4[v1] @kind byte;
  #L56b586.  call temp:= `minOf-Kr8caGY`(v3, v2) @signature `Lkotlin/comparisons/g;.minOf-Kr8caGY:(BB)B` @kind static;
  #L56b58c.  v3:= temp;
  #L56b58e.  v1:= v1 + 1;
  #L56b592.  goto L56b57e;
  #L56b594.  return v3;
}
procedure `long` `minOf-eb3DHEI`(`long` v1 , `long` v3 ) @signature `Lkotlin/comparisons/g;.minOf-eb3DHEI:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56b6f4.  call temp:= `ulongCompare`(v1, v3) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L56b6fa.  v0:= temp;
  #L56b6fc.  if v0 > 0 then goto L56b702;
  #L56b700.  goto L56b704;
  #L56b702.  v1:= v3 @kind wide;
  #L56b704.  return v1 @kind wide;
}
procedure `short` `minOf-t1qELG4`(`short` v3 , `short`[] v4 @kind object) @signature `Lkotlin/comparisons/g;.minOf-t1qELG4:(S[S)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56b7b0.  v0:= "other" @kind object;
  #L56b7b4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56b7ba.  v0:= length @variable v4;
  #L56b7bc.  v1:= 0I;
  #L56b7be.  if v1 >= v0 then goto L56b7d4;
  #L56b7c2.  v2:= v4[v1] @kind short;
  #L56b7c6.  call temp:= `minOf-5PvTz6A`(v3, v2) @signature `Lkotlin/comparisons/g;.minOf-5PvTz6A:(SS)S` @kind static;
  #L56b7cc.  v3:= temp;
  #L56b7ce.  v1:= v1 + 1;
  #L56b7d2.  goto L56b7be;
  #L56b7d4.  return v3;
}
