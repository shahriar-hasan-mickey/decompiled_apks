record `kotlin.comparisons.a` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.comparisons.a` v0 @kind this) @signature `Lkotlin/comparisons/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L56ad00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56ad06.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `kotlin.jvm.functions.Function1`[] v7 @kind object) @signature `Lkotlin/comparisons/a;.a:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L56aacc.  v0:= length @variable v7;
  #L56aace.  v1:= 0I;
  #L56aad0.  v2:= 0I;
  #L56aad2.  if v2 >= v0 then goto L56ab06;
  #L56aad6.  v3:= v7[v2] @kind object;
  #L56aada.  call temp:= `invoke`(v3, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56aae0.  v4:= temp @kind object;
  #L56aae2.  v4:= (`java.lang.Comparable`) v4 @kind object;
  #L56aae6.  call temp:= `invoke`(v3, v6) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56aaec.  v3:= temp @kind object;
  #L56aaee.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L56aaf2.  call temp:= `compareValues`(v4, v3) @signature `Lkotlin/comparisons/ComparisonsKt;.compareValues:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @kind static;
  #L56aaf8.  v3:= temp;
  #L56aafa.  if v3 == 0 then goto L56ab00;
  #L56aafe.  return v3;
  #L56ab00.  v2:= v2 + 1;
  #L56ab04.  goto L56aad2;
  #L56ab06.  return v1;
}
procedure `int` `access$compareValuesByImpl`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function1`[] v2 @kind object) @signature `Lkotlin/comparisons/a;.access$compareValuesByImpl:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L56aa30.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/comparisons/a;.a:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @kind static;
  #L56aa36.  v0:= temp;
  #L56aa38.  return v0;
}
procedure `java.util.Comparator` `compareBy`(`kotlin.jvm.functions.Function1`[] v1 @kind object) @signature `Lkotlin/comparisons/a;.compareBy:([Lkotlin/jvm/functions/Function1;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56ab18.  v0:= "selectors" @kind object;
  #L56ab1c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ab22.  v0:= length @variable v1;
  #L56ab24.  if v0 <= 0 then goto L56ab2c;
  #L56ab28.  v0:= 1I;
  #L56ab2a.  goto L56ab2e;
  #L56ab2c.  v0:= 0I;
  #L56ab2e.  if v0 == 0 then goto L56ab3e;
  #L56ab32.  v0:= new `kotlin.comparisons.a$a`;
  #L56ab36.  call `<init>`(v0, v1) @signature `Lkotlin/comparisons/a$a;.<init>:([Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L56ab3c.  return v0 @kind object;
  #L56ab3e.  v1:= new `java.lang.IllegalArgumentException`;
  #L56ab42.  v0:= "Failed requirement." @kind object;
  #L56ab46.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L56ab4c.  v0:= temp @kind object;
  #L56ab4e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56ab54.  throw v1;
}
procedure `int` `compareValues`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lkotlin/comparisons/a;.compareValues:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L56aa4c.  if v0 != v1 then goto L56aa54;
  #L56aa50.  v0:= 0I;
  #L56aa52.  return v0;
  #L56aa54.  if v0 != 0 then goto L56aa5c;
  #L56aa58.  v0:= -1I;
  #L56aa5a.  return v0;
  #L56aa5c.  if v1 != 0 then goto L56aa64;
  #L56aa60.  v0:= 1I;
  #L56aa62.  return v0;
  #L56aa64.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L56aa6a.  v0:= temp;
  #L56aa6c.  return v0;
}
procedure `int` `compareValuesBy`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1`[] v3 @kind object) @signature `Lkotlin/comparisons/a;.compareValuesBy:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56aa80.  v0:= "selectors" @kind object;
  #L56aa84.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56aa8a.  v0:= length @variable v3;
  #L56aa8c.  if v0 <= 0 then goto L56aa94;
  #L56aa90.  v0:= 1I;
  #L56aa92.  goto L56aa96;
  #L56aa94.  v0:= 0I;
  #L56aa96.  if v0 == 0 then goto L56aaa4;
  #L56aa9a.  call temp:= `a`(v1, v2, v3) @signature `Lkotlin/comparisons/a;.a:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @kind static;
  #L56aaa0.  v1:= temp;
  #L56aaa2.  return v1;
  #L56aaa4.  v1:= new `java.lang.IllegalArgumentException`;
  #L56aaa8.  v2:= "Failed requirement." @kind object;
  #L56aaac.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L56aab2.  v2:= temp @kind object;
  #L56aab4.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56aaba.  throw v1;
}
procedure `java.util.Comparator` `naturalOrder`() @signature `Lkotlin/comparisons/a;.naturalOrder:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L56ab68.  v0:= `@@kotlin.comparisons.d.a` @type ^`kotlin.comparisons.d` @kind object;
  #L56ab6c.  if v0 == 0 then goto L56ab72;
  #L56ab70.  return v0 @kind object;
  #L56ab72.  v0:= new `java.lang.NullPointerException`;
  #L56ab76.  v1:= "null cannot be cast to non-null type kotlin.Comparator<T> /* = java.util.Comparator<T> */" @kind object;
  #L56ab7a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56ab80.  throw v0;
}
procedure `java.util.Comparator` `nullsFirst`(`java.util.Comparator` v1 @kind object) @signature `Lkotlin/comparisons/a;.nullsFirst:(Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56ab94.  v0:= "comparator" @kind object;
  #L56ab98.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ab9e.  v0:= new `kotlin.comparisons.a$b`;
  #L56aba2.  call `<init>`(v0, v1) @signature `Lkotlin/comparisons/a$b;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L56aba8.  return v0 @kind object;
}
procedure `java.util.Comparator` `nullsLast`(`java.util.Comparator` v1 @kind object) @signature `Lkotlin/comparisons/a;.nullsLast:(Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56abbc.  v0:= "comparator" @kind object;
  #L56abc0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56abc6.  v0:= new `kotlin.comparisons.a$c`;
  #L56abca.  call `<init>`(v0, v1) @signature `Lkotlin/comparisons/a$c;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L56abd0.  return v0 @kind object;
}
procedure `java.util.Comparator` `reverseOrder`() @signature `Lkotlin/comparisons/a;.reverseOrder:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L56abe4.  v0:= `@@kotlin.comparisons.e.a` @type ^`kotlin.comparisons.e` @kind object;
  #L56abe8.  if v0 == 0 then goto L56abee;
  #L56abec.  return v0 @kind object;
  #L56abee.  v0:= new `java.lang.NullPointerException`;
  #L56abf2.  v1:= "null cannot be cast to non-null type kotlin.Comparator<T> /* = java.util.Comparator<T> */" @kind object;
  #L56abf6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56abfc.  throw v0;
}
procedure `java.util.Comparator` `reversed`(`java.util.Comparator` v2 @kind object) @signature `Lkotlin/comparisons/a;.reversed:(Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56ac10.  v0:= "$this$reversed" @kind object;
  #L56ac14.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ac1a.  v0:= instanceof @variable v2 @type ^`kotlin.comparisons.f` @kind boolean;
  #L56ac1e.  if v0 == 0 then goto L56ac30;
  #L56ac22.  v2:= (`kotlin.comparisons.f`) v2 @kind object;
  #L56ac26.  call temp:= `a`(v2) @signature `Lkotlin/comparisons/f;.a:()Ljava/util/Comparator;` @kind virtual;
  #L56ac2c.  v2:= temp @kind object;
  #L56ac2e.  goto L56ac8c;
  #L56ac30.  v0:= `@@kotlin.comparisons.d.a` @type ^`kotlin.comparisons.d` @kind object;
  #L56ac34.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56ac3a.  v0:= temp;
  #L56ac3c.  v1:= "null cannot be cast to non-null type kotlin.Comparator<T> /* = java.util.Comparator<T> */" @kind object;
  #L56ac40.  if v0 == 0 then goto L56ac5a;
  #L56ac44.  v2:= `@@kotlin.comparisons.e.a` @type ^`kotlin.comparisons.e` @kind object;
  #L56ac48.  if v2 == 0 then goto L56ac4e;
  #L56ac4c.  goto L56ac8c;
  #L56ac4e.  v2:= new `java.lang.NullPointerException`;
  #L56ac52.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56ac58.  throw v2;
  #L56ac5a.  v0:= `@@kotlin.comparisons.e.a` @type ^`kotlin.comparisons.e` @kind object;
  #L56ac5e.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56ac64.  v0:= temp;
  #L56ac66.  if v0 == 0 then goto L56ac80;
  #L56ac6a.  v2:= `@@kotlin.comparisons.d.a` @type ^`kotlin.comparisons.d` @kind object;
  #L56ac6e.  if v2 == 0 then goto L56ac74;
  #L56ac72.  goto L56ac8c;
  #L56ac74.  v2:= new `java.lang.NullPointerException`;
  #L56ac78.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56ac7e.  throw v2;
  #L56ac80.  v0:= new `kotlin.comparisons.f`;
  #L56ac84.  call `<init>`(v0, v2) @signature `Lkotlin/comparisons/f;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L56ac8a.  v2:= v0 @kind object;
  #L56ac8c.  return v2 @kind object;
}
procedure `java.util.Comparator` `then`(`java.util.Comparator` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/comparisons/a;.then:(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56aca0.  v0:= "$this$then" @kind object;
  #L56aca4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56acaa.  v0:= "comparator" @kind object;
  #L56acae.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56acb4.  v0:= new `kotlin.comparisons.a$d`;
  #L56acb8.  call `<init>`(v0, v1, v2) @signature `Lkotlin/comparisons/a$d;.<init>:(Ljava/util/Comparator;Ljava/util/Comparator;)V` @kind direct;
  #L56acbe.  return v0 @kind object;
}
procedure `java.util.Comparator` `thenDescending`(`java.util.Comparator` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/comparisons/a;.thenDescending:(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56acd0.  v0:= "$this$thenDescending" @kind object;
  #L56acd4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56acda.  v0:= "comparator" @kind object;
  #L56acde.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56ace4.  v0:= new `kotlin.comparisons.a$e`;
  #L56ace8.  call `<init>`(v0, v1, v2) @signature `Lkotlin/comparisons/a$e;.<init>:(Ljava/util/Comparator;Ljava/util/Comparator;)V` @kind direct;
  #L56acee.  return v0 @kind object;
}
