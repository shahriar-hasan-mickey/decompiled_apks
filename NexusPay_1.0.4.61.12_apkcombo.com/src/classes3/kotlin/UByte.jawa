record `kotlin.UByte` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `byte` `kotlin.UByte.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.UByte$Companion` `@@kotlin.UByte.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@kotlin.UByte.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@kotlin.UByte.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.UByte.SIZE_BITS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.UByte.SIZE_BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/UByte;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L530040.  v0:= new `kotlin.UByte$Companion`;
  #L530044.  v1:= 0I;
  #L530046.  call `<init>`(v0, v1) @signature `Lkotlin/UByte$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L53004c.  `@@kotlin.UByte.Companion` @type ^`kotlin.UByte$Companion` := v0 @kind object;
  #L530050.  return @kind void;
}
procedure `void` `<init>`(`kotlin.UByte` v0 @kind this, `byte` v1 ) @signature `Lkotlin/UByte;.<init>:(B)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L530064.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53006a.  v0.`kotlin.UByte.a` @type ^`byte` := v1 @kind byte;
  #L53006e.  return @kind void;
}
procedure `int` `a`(`kotlin.UByte` v1 @kind this, `byte` v2 ) @signature `Lkotlin/UByte;.a:(B)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L52ff6c.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L52ff70.  call temp:= `b`(v0, v2) @signature `Lkotlin/UByte;.b:(BB)I` @kind static;
  #L52ff76.  v2:= temp;
  #L52ff78.  return v2;
}
procedure `int` `b`(`byte` v0 , `byte` v1 ) @signature `Lkotlin/UByte;.b:(BB)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L52ff8c.  v0:= v0 ^& 255;
  #L52ff90.  v1:= v1 ^& 255;
  #L52ff94.  call temp:= `compare`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L52ff9a.  v0:= temp;
  #L52ff9c.  return v0;
}
procedure `kotlin.UByte` `box-impl`(`byte` v1 ) @signature `Lkotlin/UByte;.box-impl:(B)Lkotlin/UByte;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L530024.  v0:= new `kotlin.UByte`;
  #L530028.  call `<init>`(v0, v1) @signature `Lkotlin/UByte;.<init>:(B)V` @kind direct;
  #L53002e.  return v0 @kind object;
}
procedure `byte` `constructor-impl`(`byte` v0 ) @signature `Lkotlin/UByte;.constructor-impl:(B)B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L52ff18.  return v0;
}
procedure `boolean` `equals-impl`(`byte` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlin/UByte;.equals-impl:(BLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L52fecc.  v0:= instanceof @variable v2 @type ^`kotlin.UByte` @kind boolean;
  #L52fed0.  if v0 == 0 then goto L52fee8;
  #L52fed4.  v2:= (`kotlin.UByte`) v2 @kind object;
  #L52fed8.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/UByte;.unbox-impl:()B` @kind virtual;
  #L52fede.  v2:= temp;
  #L52fee0.  if v1 != v2 then goto L52fee8;
  #L52fee4.  v1:= 1I;
  #L52fee6.  return v1;
  #L52fee8.  v1:= 0I;
  #L52feea.  return v1;
}
procedure `boolean` `equals-impl0`(`byte` v0 , `byte` v1 ) @signature `Lkotlin/UByte;.equals-impl0:(BB)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L52fefc.  if v0 != v1 then goto L52ff04;
  #L52ff00.  v0:= 1I;
  #L52ff02.  goto L52ff06;
  #L52ff04.  v0:= 0I;
  #L52ff06.  return v0;
}
procedure `void` `getData$annotations`() @signature `Lkotlin/UByte;.getData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L530080.  return @kind void;
}
procedure `int` `hashCode-impl`(`byte` v0 ) @signature `Lkotlin/UByte;.hashCode-impl:(B)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L52ffd0.  return v0;
}
procedure `java.lang.String` `toString-impl`(`byte` v0 ) @signature `Lkotlin/UByte;.toString-impl:(B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L530004.  v0:= v0 ^& 255;
  #L530008.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L53000e.  v0:= temp @kind object;
  #L530010.  return v0 @kind object;
}
procedure `int` `compareTo`(`kotlin.UByte` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/UByte;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L52ff44.  v1:= (`kotlin.UByte`) v1 @kind object;
  #L52ff48.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UByte;.unbox-impl:()B` @kind virtual;
  #L52ff4e.  v1:= temp;
  #L52ff50.  call temp:= `a`(v0, v1) @signature `Lkotlin/UByte;.a:(B)I` @kind direct;
  #L52ff56.  v1:= temp;
  #L52ff58.  return v1;
}
procedure `boolean` `equals`(`kotlin.UByte` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UByte;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52feac.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L52feb0.  call temp:= `equals-impl`(v0, v2) @signature `Lkotlin/UByte;.equals-impl:(BLjava/lang/Object;)Z` @kind static;
  #L52feb6.  v2:= temp;
  #L52feb8.  return v2;
}
procedure `int` `hashCode`(`kotlin.UByte` v1 @kind this) @signature `Lkotlin/UByte;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52ffb0.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L52ffb4.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/UByte;.hashCode-impl:(B)I` @kind static;
  #L52ffba.  v0:= temp;
  #L52ffbc.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.UByte` v1 @kind this) @signature `Lkotlin/UByte;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52ffe4.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L52ffe8.  call temp:= `toString-impl`(v0) @signature `Lkotlin/UByte;.toString-impl:(B)Ljava/lang/String;` @kind static;
  #L52ffee.  v0:= temp @kind object;
  #L52fff0.  return v0 @kind object;
}
procedure `byte` `unbox-impl`(`kotlin.UByte` v1 @kind this) @signature `Lkotlin/UByte;.unbox-impl:()B` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L52ff2c.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L52ff30.  return v0;
}
