record `kotlin.contracts.ContractBuilder` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `kotlin.contracts.CallsInPlace` `callsInPlace`(`kotlin.Function` v0 @kind object, `kotlin.contracts.InvocationKind` v1 @kind object) @signature `Lkotlin/contracts/ContractBuilder;.callsInPlace:(Lkotlin/Function;Lkotlin/contracts/InvocationKind;)Lkotlin/contracts/CallsInPlace;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.contracts.Returns` `returns`() @signature `Lkotlin/contracts/ContractBuilder;.returns:()Lkotlin/contracts/Returns;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.contracts.Returns` `returns`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/contracts/ContractBuilder;.returns:(Ljava/lang/Object;)Lkotlin/contracts/Returns;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.contracts.ReturnsNotNull` `returnsNotNull`() @signature `Lkotlin/contracts/ContractBuilder;.returnsNotNull:()Lkotlin/contracts/ReturnsNotNull;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
