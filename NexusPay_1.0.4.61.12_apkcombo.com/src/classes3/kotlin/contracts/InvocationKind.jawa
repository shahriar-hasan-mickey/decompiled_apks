record `kotlin.contracts.InvocationKind` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.contracts.InvocationKind`[] `@@kotlin.contracts.InvocationKind.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.AT_LEAST_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.AT_MOST_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.EXACTLY_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lkotlin/contracts/InvocationKind;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L56ba04.  v0:= 4I;
  #L56ba06.  v0:= new `kotlin.contracts.InvocationKind`[v0];
  #L56ba0a.  v1:= new `kotlin.contracts.InvocationKind`;
  #L56ba0e.  v2:= "AT_MOST_ONCE" @kind object;
  #L56ba12.  v3:= 0I;
  #L56ba14.  call `<init>`(v1, v2, v3) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L56ba1a.  `@@kotlin.contracts.InvocationKind.AT_MOST_ONCE` @type ^`kotlin.contracts.InvocationKind` := v1 @kind object;
  #L56ba1e.  v0[v3]:= v1 @kind object;
  #L56ba22.  v1:= new `kotlin.contracts.InvocationKind`;
  #L56ba26.  v2:= "AT_LEAST_ONCE" @kind object;
  #L56ba2a.  v3:= 1I;
  #L56ba2c.  call `<init>`(v1, v2, v3) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L56ba32.  `@@kotlin.contracts.InvocationKind.AT_LEAST_ONCE` @type ^`kotlin.contracts.InvocationKind` := v1 @kind object;
  #L56ba36.  v0[v3]:= v1 @kind object;
  #L56ba3a.  v1:= new `kotlin.contracts.InvocationKind`;
  #L56ba3e.  v2:= "EXACTLY_ONCE" @kind object;
  #L56ba42.  v3:= 2I;
  #L56ba44.  call `<init>`(v1, v2, v3) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L56ba4a.  `@@kotlin.contracts.InvocationKind.EXACTLY_ONCE` @type ^`kotlin.contracts.InvocationKind` := v1 @kind object;
  #L56ba4e.  v0[v3]:= v1 @kind object;
  #L56ba52.  v1:= new `kotlin.contracts.InvocationKind`;
  #L56ba56.  v2:= "UNKNOWN" @kind object;
  #L56ba5a.  v3:= 3I;
  #L56ba5c.  call `<init>`(v1, v2, v3) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L56ba62.  `@@kotlin.contracts.InvocationKind.UNKNOWN` @type ^`kotlin.contracts.InvocationKind` := v1 @kind object;
  #L56ba66.  v0[v3]:= v1 @kind object;
  #L56ba6a.  `@@kotlin.contracts.InvocationKind.$VALUES` @type ^`kotlin.contracts.InvocationKind`[] := v0 @kind object;
  #L56ba6e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.contracts.InvocationKind` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L56ba80.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L56ba86.  return @kind void;
}
procedure `kotlin.contracts.InvocationKind` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/contracts/InvocationKind;.valueOf:(Ljava/lang/String;)Lkotlin/contracts/InvocationKind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L56b9bc.  v0:= constclass @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L56b9c0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L56b9c6.  v1:= temp @kind object;
  #L56b9c8.  v1:= (`kotlin.contracts.InvocationKind`) v1 @kind object;
  #L56b9cc.  return v1 @kind object;
}
procedure `kotlin.contracts.InvocationKind`[] `values`() @signature `Lkotlin/contracts/InvocationKind;.values:()[Lkotlin/contracts/InvocationKind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L56b9e0.  v0:= `@@kotlin.contracts.InvocationKind.$VALUES` @type ^`kotlin.contracts.InvocationKind`[] @kind object;
  #L56b9e4.  call temp:= `clone`(v0) @signature `[Lkotlin/contracts/InvocationKind;.clone:()Ljava/lang/Object;` @kind virtual;
  #L56b9ea.  v0:= temp @kind object;
  #L56b9ec.  v0:= (`kotlin.contracts.InvocationKind`[]) v0 @kind object;
  #L56b9f0.  return v0 @kind object;
}
