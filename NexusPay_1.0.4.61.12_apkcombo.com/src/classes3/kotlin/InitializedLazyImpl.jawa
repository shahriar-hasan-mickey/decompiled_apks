record `kotlin.InitializedLazyImpl` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.Lazy` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.Object` `kotlin.InitializedLazyImpl.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.InitializedLazyImpl` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/InitializedLazyImpl;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L52e32c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52e332.  v0.`kotlin.InitializedLazyImpl.a` @type ^`java.lang.Object` := v1 @kind object;
  #L52e336.  return @kind void;
}
procedure `java.lang.Object` `getValue`(`kotlin.InitializedLazyImpl` v1 @kind this) @signature `Lkotlin/InitializedLazyImpl;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52e2f0.  v0:= v1.`kotlin.InitializedLazyImpl.a` @type ^`java.lang.Object` @kind object;
  #L52e2f4.  return v0 @kind object;
}
procedure `boolean` `isInitialized`(`kotlin.InitializedLazyImpl` v1 @kind this) @signature `Lkotlin/InitializedLazyImpl;.isInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52e2dc.  v0:= 1I;
  #L52e2de.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.InitializedLazyImpl` v1 @kind this) @signature `Lkotlin/InitializedLazyImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52e308.  call temp:= `getValue`(v1) @signature `Lkotlin/InitializedLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L52e30e.  v0:= temp @kind object;
  #L52e310.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L52e316.  v0:= temp @kind object;
  #L52e318.  return v0 @kind object;
}
