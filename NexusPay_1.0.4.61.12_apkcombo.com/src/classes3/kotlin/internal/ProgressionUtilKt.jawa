record `kotlin.internal.ProgressionUtilKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lkotlin/internal/ProgressionUtilKt;.a:(III)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L56e1f0.  call temp:= `c`(v0, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.c:(II)I` @kind static;
  #L56e1f6.  v0:= temp;
  #L56e1f8.  call temp:= `c`(v1, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.c:(II)I` @kind static;
  #L56e1fe.  v1:= temp;
  #L56e200.  v0:= v0 - v1 @kind int;
  #L56e202.  call temp:= `c`(v0, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.c:(II)I` @kind static;
  #L56e208.  v0:= temp;
  #L56e20a.  return v0;
}
procedure `long` `b`(`long` v0 , `long` v2 , `long` v4 ) @signature `Lkotlin/internal/ProgressionUtilKt;.b:(JJJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L56e288.  call temp:= `d`(v0, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.d:(JJ)J` @kind static;
  #L56e28e.  v0:= temp @kind wide;
  #L56e290.  call temp:= `d`(v2, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.d:(JJ)J` @kind static;
  #L56e296.  v2:= temp @kind wide;
  #L56e298.  v0:= v0 - v2 @kind long;
  #L56e29a.  call temp:= `d`(v0, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.d:(JJ)J` @kind static;
  #L56e2a0.  v0:= temp @kind wide;
  #L56e2a2.  return v0 @kind wide;
}
procedure `int` `c`(`int` v0 , `int` v1 ) @signature `Lkotlin/internal/ProgressionUtilKt;.c:(II)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L56e26c.  v0:= v0 %% v1 @kind int;
  #L56e26e.  if v0 < 0 then goto L56e274;
  #L56e272.  goto L56e276;
  #L56e274.  v0:= v0 + v1 @kind int;
  #L56e276.  return v0;
}
procedure `long` `d`(`long` v3 , `long` v5 ) @signature `Lkotlin/internal/ProgressionUtilKt;.d:(JJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56e31c.  v3:= v3 %% v5 @kind long;
  #L56e31e.  v0:= 0L;
  #L56e322.  v2:= lcmp(v3, v0);
  #L56e326.  if v2 < 0 then goto L56e32c;
  #L56e32a.  goto L56e32e;
  #L56e32c.  v3:= v3 + v5 @kind long;
  #L56e32e.  return v3 @kind wide;
}
procedure `int` `getProgressionLastElement`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lkotlin/internal/ProgressionUtilKt;.getProgressionLastElement:(III)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L56e21c.  if v2 <= 0 then goto L56e232;
  #L56e220.  if v0 < v1 then goto L56e226;
  #L56e224.  goto L56e248;
  #L56e226.  call temp:= `a`(v1, v0, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.a:(III)I` @kind static;
  #L56e22c.  v0:= temp;
  #L56e22e.  v1:= v1 - v0 @kind int;
  #L56e230.  goto L56e248;
  #L56e232.  if v2 >= 0 then goto L56e24a;
  #L56e236.  if v0 > v1 then goto L56e23c;
  #L56e23a.  goto L56e248;
  #L56e23c.  v2:= -v2 @kind int;
  #L56e23e.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.a:(III)I` @kind static;
  #L56e244.  v0:= temp;
  #L56e246.  v1:= v1 + v0 @kind int;
  #L56e248.  return v1;
  #L56e24a.  v0:= new `java.lang.IllegalArgumentException`;
  #L56e24e.  v1:= "Step is zero." @kind object;
  #L56e252.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56e258.  throw v0;
}
procedure `long` `getProgressionLastElement`(`long` v7 , `long` v9 , `long` v11 ) @signature `Lkotlin/internal/ProgressionUtilKt;.getProgressionLastElement:(JJJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L56e2b4.  v0:= 0L;
  #L56e2b8.  v2:= lcmp(v11, v0);
  #L56e2bc.  if v2 <= 0 then goto L56e2dc;
  #L56e2c0.  v0:= lcmp(v7, v9);
  #L56e2c4.  if v0 < 0 then goto L56e2ca;
  #L56e2c8.  goto L56e2fa;
  #L56e2ca.  v0:= v9 @kind wide;
  #L56e2cc.  v2:= v7 @kind wide;
  #L56e2ce.  v4:= v11 @kind wide;
  #L56e2d0.  call temp:= `b`(v0, v2, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.b:(JJJ)J` @kind static;
  #L56e2d6.  v7:= temp @kind wide;
  #L56e2d8.  v9:= v9 - v7 @kind long;
  #L56e2da.  goto L56e2fa;
  #L56e2dc.  if v2 >= 0 then goto L56e2fc;
  #L56e2e0.  v0:= lcmp(v7, v9);
  #L56e2e4.  if v0 > 0 then goto L56e2ea;
  #L56e2e8.  goto L56e2fa;
  #L56e2ea.  v5:= -v11 @kind long;
  #L56e2ec.  v1:= v7 @kind wide;
  #L56e2ee.  v3:= v9 @kind wide;
  #L56e2f0.  call temp:= `b`(v1, v3, v5) @signature `Lkotlin/internal/ProgressionUtilKt;.b:(JJJ)J` @kind static;
  #L56e2f6.  v7:= temp @kind wide;
  #L56e2f8.  v9:= v9 + v7 @kind long;
  #L56e2fa.  return v9 @kind wide;
  #L56e2fc.  v7:= new `java.lang.IllegalArgumentException`;
  #L56e300.  v8:= "Step is zero." @kind object;
  #L56e304.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56e30a.  throw v7;
}
