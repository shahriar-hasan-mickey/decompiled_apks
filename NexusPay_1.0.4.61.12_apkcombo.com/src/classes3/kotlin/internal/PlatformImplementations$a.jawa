record `kotlin.internal.PlatformImplementations$a` @kind class @AccessFlag FINAL {
}
global `java.lang.reflect.Method` `@@kotlin.internal.PlatformImplementations$a.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.reflect.Method` `@@kotlin.internal.PlatformImplementations$a.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/internal/PlatformImplementations$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L56dbc0.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L56dbc4.  call temp:= `getMethods`(v0) @signature `Ljava/lang/Class;.getMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L56dbca.  v1:= temp @kind object;
  #L56dbcc.  v2:= "throwableMethods" @kind object;
  #L56dbd0.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56dbd6.  v2:= length @variable v1;
  #L56dbd8.  v3:= 0I;
  #L56dbda.  v4:= 0I;
  #L56dbdc.  v5:= "it" @kind object;
  #L56dbe0.  v6:= 0I;
  #L56dbe2.  if v4 >= v2 then goto L56dc44;
  #L56dbe6.  v7:= v1[v4] @kind object;
  #L56dbea.  call `checkNotNullExpressionValue`(v7, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56dbf0.  call temp:= `getName`(v7) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L56dbf6.  v8:= temp @kind object;
  #L56dbf8.  v9:= "addSuppressed" @kind object;
  #L56dbfc.  call temp:= `areEqual`(v8, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56dc02.  v8:= temp;
  #L56dc04.  if v8 == 0 then goto L56dc36;
  #L56dc08.  call temp:= `getParameterTypes`(v7) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L56dc0e.  v8:= temp @kind object;
  #L56dc10.  v9:= "it.parameterTypes" @kind object;
  #L56dc14.  call `checkNotNullExpressionValue`(v8, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56dc1a.  call temp:= `singleOrNull`(v8) @signature `Lkotlin/collections/ArraysKt;.singleOrNull:([Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L56dc20.  v8:= temp @kind object;
  #L56dc22.  v8:= (`java.lang.Class`) v8 @kind object;
  #L56dc26.  call temp:= `areEqual`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56dc2c.  v8:= temp;
  #L56dc2e.  if v8 == 0 then goto L56dc36;
  #L56dc32.  v8:= 1I;
  #L56dc34.  goto L56dc38;
  #L56dc36.  v8:= 0I;
  #L56dc38.  if v8 == 0 then goto L56dc3e;
  #L56dc3c.  goto L56dc46;
  #L56dc3e.  v4:= v4 + 1;
  #L56dc42.  goto L56dbdc;
  #L56dc44.  v7:= v6 @kind object;
  #L56dc46.  `@@kotlin.internal.PlatformImplementations$a.a` @type ^`java.lang.reflect.Method` := v7 @kind object;
  #L56dc4a.  v0:= length @variable v1;
  #L56dc4c.  if v3 >= v0 then goto L56dc7c;
  #L56dc50.  v2:= v1[v3] @kind object;
  #L56dc54.  call `checkNotNullExpressionValue`(v2, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56dc5a.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L56dc60.  v4:= temp @kind object;
  #L56dc62.  v7:= "getSuppressed" @kind object;
  #L56dc66.  call temp:= `areEqual`(v4, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56dc6c.  v4:= temp;
  #L56dc6e.  if v4 == 0 then goto L56dc76;
  #L56dc72.  v6:= v2 @kind object;
  #L56dc74.  goto L56dc7c;
  #L56dc76.  v3:= v3 + 1;
  #L56dc7a.  goto L56dc4c;
  #L56dc7c.  `@@kotlin.internal.PlatformImplementations$a.b` @type ^`java.lang.reflect.Method` := v6 @kind object;
  #L56dc80.  return @kind void;
}
