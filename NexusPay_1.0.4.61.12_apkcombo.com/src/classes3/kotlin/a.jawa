record `kotlin.a` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.a` v0 @kind this) @signature `Lkotlin/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L52e18c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52e192.  return @kind void;
}
procedure `void` `addSuppressed`(`java.lang.Throwable` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlin/a;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L52e1a4.  v0:= "$this$addSuppressed" @kind object;
  #L52e1a8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52e1ae.  v0:= "exception" @kind object;
  #L52e1b2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52e1b8.  if v1 == v2 then goto L52e1c6;
  #L52e1bc.  v0:= `@@kotlin.internal.PlatformImplementationsKt.IMPLEMENTATIONS` @type ^`kotlin.internal.PlatformImplementations` @kind object;
  #L52e1c0.  call `addSuppressed`(v0, v1, v2) @signature `Lkotlin/internal/PlatformImplementations;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L52e1c6.  return @kind void;
}
procedure `java.lang.StackTraceElement`[] `getStackTrace`(`java.lang.Throwable` v1 @kind object) @signature `Lkotlin/a;.getStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L52e0e8.  v0:= "$this$stackTrace" @kind object;
  #L52e0ec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52e0f2.  call temp:= `getStackTrace`(v1) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L52e0f8.  v1:= temp @kind object;
  #L52e0fa.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L52e100.  return v1 @kind object;
}
procedure `void` `getStackTrace$annotations`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlin/a;.getStackTrace$annotations:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L52e1d8.  return @kind void;
}
procedure `java.util.List` `getSuppressedExceptions`(`java.lang.Throwable` v1 @kind object) @signature `Lkotlin/a;.getSuppressedExceptions:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L52e164.  v0:= "$this$suppressedExceptions" @kind object;
  #L52e168.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52e16e.  v0:= `@@kotlin.internal.PlatformImplementationsKt.IMPLEMENTATIONS` @type ^`kotlin.internal.PlatformImplementations` @kind object;
  #L52e172.  call temp:= `getSuppressed`(v0, v1) @signature `Lkotlin/internal/PlatformImplementations;.getSuppressed:(Ljava/lang/Throwable;)Ljava/util/List;` @kind virtual;
  #L52e178.  v1:= temp @kind object;
  #L52e17a.  return v1 @kind object;
}
procedure `void` `getSuppressedExceptions$annotations`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlin/a;.getSuppressedExceptions$annotations:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L52e1ec.  return @kind void;
}
procedure `java.lang.String` `stackTraceToString`(`java.lang.Throwable` v2 @kind object) @signature `Lkotlin/a;.stackTraceToString:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L52e114.  v0:= "$this$stackTraceToString" @kind object;
  #L52e118.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52e11e.  v0:= new `java.io.StringWriter`;
  #L52e122.  call `<init>`(v0) @signature `Ljava/io/StringWriter;.<init>:()V` @kind direct;
  #L52e128.  v1:= new `java.io.PrintWriter`;
  #L52e12c.  call `<init>`(v1, v0) @signature `Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L52e132.  call `printStackTrace`(v2, v1) @signature `Ljava/lang/Throwable;.printStackTrace:(Ljava/io/PrintWriter;)V` @kind virtual;
  #L52e138.  call `flush`(v1) @signature `Ljava/io/PrintWriter;.flush:()V` @kind virtual;
  #L52e13e.  call temp:= `toString`(v0) @signature `Ljava/io/StringWriter;.toString:()Ljava/lang/String;` @kind virtual;
  #L52e144.  v2:= temp @kind object;
  #L52e146.  v0:= "sw.toString()" @kind object;
  #L52e14a.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52e150.  return v2 @kind object;
}
