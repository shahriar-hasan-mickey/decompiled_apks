record `kotlin.collections.AbstractList$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.collections.AbstractList$Companion` v0 @kind this) @signature `Lkotlin/collections/AbstractList$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L5325b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5325ba.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.AbstractList$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/collections/AbstractList$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L5325cc.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractList$Companion;.<init>:()V` @kind direct;
  #L5325d2.  return @kind void;
}
procedure `void` `checkBoundsIndexes$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lkotlin/collections/AbstractList$Companion;.checkBoundsIndexes$kotlin_stdlib:(III)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5325e4.  v0:= "startIndex: " @kind object;
  #L5325e8.  if v4 < 0 then goto L532630;
  #L5325ec.  if v5 > v6 then goto L532630;
  #L5325f0.  if v4 > v5 then goto L5325f6;
  #L5325f4.  return @kind void;
  #L5325f6.  v6:= new `java.lang.IllegalArgumentException`;
  #L5325fa.  v1:= new `java.lang.StringBuilder`;
  #L5325fe.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L532604.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53260a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L532610.  v4:= " > endIndex: " @kind object;
  #L532614.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53261a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L532620.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L532626.  v4:= temp @kind object;
  #L532628.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53262e.  throw v6;
  #L532630.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L532634.  v2:= new `java.lang.StringBuilder`;
  #L532638.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53263e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L532644.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53264a.  v4:= ", endIndex: " @kind object;
  #L53264e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L532654.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53265a.  v4:= ", size: " @kind object;
  #L53265e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L532664.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53266a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L532670.  v4:= temp @kind object;
  #L532672.  call `<init>`(v1, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L532678.  throw v1;
}
procedure `void` `checkElementIndex$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/AbstractList$Companion;.checkElementIndex$kotlin_stdlib:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L53268c.  if v4 < 0 then goto L532696;
  #L532690.  if v4 >= v5 then goto L532696;
  #L532694.  return @kind void;
  #L532696.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L53269a.  v1:= new `java.lang.StringBuilder`;
  #L53269e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5326a4.  v2:= "index: " @kind object;
  #L5326a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5326ae.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5326b4.  v4:= ", size: " @kind object;
  #L5326b8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5326be.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5326c4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5326ca.  v4:= temp @kind object;
  #L5326cc.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5326d2.  throw v0;
}
procedure `void` `checkPositionIndex$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/AbstractList$Companion;.checkPositionIndex$kotlin_stdlib:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5326e4.  if v4 < 0 then goto L5326ee;
  #L5326e8.  if v4 > v5 then goto L5326ee;
  #L5326ec.  return @kind void;
  #L5326ee.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L5326f2.  v1:= new `java.lang.StringBuilder`;
  #L5326f6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5326fc.  v2:= "index: " @kind object;
  #L532700.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L532706.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53270c.  v4:= ", size: " @kind object;
  #L532710.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L532716.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53271c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L532722.  v4:= temp @kind object;
  #L532724.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53272a.  throw v0;
}
procedure `void` `checkRangeIndexes$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lkotlin/collections/AbstractList$Companion;.checkRangeIndexes$kotlin_stdlib:(III)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L53273c.  v0:= "fromIndex: " @kind object;
  #L532740.  if v4 < 0 then goto L532788;
  #L532744.  if v5 > v6 then goto L532788;
  #L532748.  if v4 > v5 then goto L53274e;
  #L53274c.  return @kind void;
  #L53274e.  v6:= new `java.lang.IllegalArgumentException`;
  #L532752.  v1:= new `java.lang.StringBuilder`;
  #L532756.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53275c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L532762.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L532768.  v4:= " > toIndex: " @kind object;
  #L53276c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L532772.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L532778.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53277e.  v4:= temp @kind object;
  #L532780.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L532786.  throw v6;
  #L532788.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L53278c.  v2:= new `java.lang.StringBuilder`;
  #L532790.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L532796.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53279c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5327a2.  v4:= ", toIndex: " @kind object;
  #L5327a6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5327ac.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5327b2.  v4:= ", size: " @kind object;
  #L5327b6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5327bc.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5327c2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5327c8.  v4:= temp @kind object;
  #L5327ca.  call `<init>`(v1, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5327d0.  throw v1;
}
procedure `boolean` `orderedEquals$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v4 @kind this, `java.util.Collection` v5 @kind object, `java.util.Collection` v6 @kind object) @signature `Lkotlin/collections/AbstractList$Companion;.orderedEquals$kotlin_stdlib:(Ljava/util/Collection;Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5324e4.  v0:= "c" @kind object;
  #L5324e8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5324ee.  v0:= "other" @kind object;
  #L5324f2.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5324f8.  call temp:= `size`(v5) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L5324fe.  v0:= temp;
  #L532500.  call temp:= `size`(v6) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L532506.  v1:= temp;
  #L532508.  v2:= 0I;
  #L53250a.  if v0 == v1 then goto L532510;
  #L53250e.  return v2;
  #L532510.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L532516.  v6:= temp @kind object;
  #L532518.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L53251e.  v5:= temp @kind object;
  #L532520.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L532526.  v0:= temp;
  #L532528.  v1:= 1I;
  #L53252a.  if v0 == 0 then goto L53254e;
  #L53252e.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L532534.  v0:= temp @kind object;
  #L532536.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L53253c.  v3:= temp @kind object;
  #L53253e.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L532544.  v0:= temp;
  #L532546.  v0:= v0 ^~ v1 @kind int;
  #L532548.  if v0 == 0 then goto L532520;
  #L53254c.  return v2;
  #L53254e.  return v1;
}
procedure `int` `orderedHashCode$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/AbstractList$Companion;.orderedHashCode$kotlin_stdlib:(Ljava/util/Collection;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L532560.  v0:= "c" @kind object;
  #L532564.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L53256a.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L532570.  v3:= temp @kind object;
  #L532572.  v0:= 1I;
  #L532574.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L53257a.  v1:= temp;
  #L53257c.  if v1 == 0 then goto L5325a0;
  #L532580.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L532586.  v1:= temp @kind object;
  #L532588.  v0:= v0 * 31;
  #L53258c.  if v1 == 0 then goto L53259a;
  #L532590.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L532596.  v1:= temp;
  #L532598.  goto L53259c;
  #L53259a.  v1:= 0I;
  #L53259c.  v0:= v0 + v1 @kind int;
  #L53259e.  goto L532574;
  #L5325a0.  return v0;
}
