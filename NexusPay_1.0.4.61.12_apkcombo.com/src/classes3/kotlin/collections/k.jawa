record `kotlin.collections.k` @kind class @AccessFlag  extends `kotlin.collections.j` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.k` v0 @kind this) @signature `Lkotlin/collections/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L557904.  call `<init>`(v0) @signature `Lkotlin/collections/j;.<init>:()V` @kind direct;
  #L55790a.  return @kind void;
}
procedure `java.util.List` `filterIsInstance`(`java.lang.Iterable` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lkotlin/collections/k;.filterIsInstance:(Ljava/lang/Iterable;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L557858.  v0:= "$this$filterIsInstance" @kind object;
  #L55785c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L557862.  v0:= "klass" @kind object;
  #L557866.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55786c.  v0:= new `java.util.ArrayList`;
  #L557870.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L557876.  call temp:= `filterIsInstanceTo`(v1, v0, v2) @signature `Lkotlin/collections/k;.filterIsInstanceTo:(Ljava/lang/Iterable;Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;` @kind static;
  #L55787c.  v1:= temp @kind object;
  #L55787e.  v1:= (`java.util.List`) v1 @kind object;
  #L557882.  return v1 @kind object;
}
procedure `java.util.Collection` `filterIsInstanceTo`(`java.lang.Iterable` v2 @kind object, `java.util.Collection` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lkotlin/collections/k;.filterIsInstanceTo:(Ljava/lang/Iterable;Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5577f8.  v0:= "$this$filterIsInstanceTo" @kind object;
  #L5577fc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L557802.  v0:= "destination" @kind object;
  #L557806.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55780c.  v0:= "klass" @kind object;
  #L557810.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L557816.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55781c.  v2:= temp @kind object;
  #L55781e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L557824.  v0:= temp;
  #L557826.  if v0 == 0 then goto L557846;
  #L55782a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L557830.  v0:= temp @kind object;
  #L557832.  call temp:= `isInstance`(v4, v0) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L557838.  v1:= temp;
  #L55783a.  if v1 == 0 then goto L55781e;
  #L55783e.  call temp:= `add`(v3, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L557844.  goto L55781e;
  #L557846.  return v3 @kind object;
}
procedure `void` `reverse`(`java.util.List` v1 @kind object) @signature `Lkotlin/collections/k;.reverse:(Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L55791c.  v0:= "$this$reverse" @kind object;
  #L557920.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L557926.  call `reverse`(v1) @signature `Ljava/util/Collections;.reverse:(Ljava/util/List;)V` @kind static;
  #L55792c.  return @kind void;
}
procedure `java.util.SortedSet` `toSortedSet`(`java.lang.Iterable` v1 @kind object) @signature `Lkotlin/collections/k;.toSortedSet:(Ljava/lang/Iterable;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L557894.  v0:= "$this$toSortedSet" @kind object;
  #L557898.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55789e.  v0:= new `java.util.TreeSet`;
  #L5578a2.  call `<init>`(v0) @signature `Ljava/util/TreeSet;.<init>:()V` @kind direct;
  #L5578a8.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toCollection:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L5578ae.  v1:= temp @kind object;
  #L5578b0.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L5578b4.  return v1 @kind object;
}
procedure `java.util.SortedSet` `toSortedSet`(`java.lang.Iterable` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/collections/k;.toSortedSet:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5578c8.  v0:= "$this$toSortedSet" @kind object;
  #L5578cc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5578d2.  v0:= "comparator" @kind object;
  #L5578d6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5578dc.  v0:= new `java.util.TreeSet`;
  #L5578e0.  call `<init>`(v0, v2) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L5578e6.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toCollection:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L5578ec.  v1:= temp @kind object;
  #L5578ee.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L5578f2.  return v1 @kind object;
}
