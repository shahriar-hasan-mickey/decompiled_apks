record `kotlin.collections.v` @kind class @AccessFlag FINAL extends `kotlin.collections.u` @kind interface {
  `java.util.Map` `kotlin.collections.v.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function1` `kotlin.collections.v.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.v` v1 @kind this, `java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/v;.<init>:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L560d94.  v0:= "map" @kind object;
  #L560d98.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560d9e.  v0:= "default" @kind object;
  #L560da2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560da8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L560dae.  v1.`kotlin.collections.v.a` @type ^`java.util.Map` := v2 @kind object;
  #L560db2.  v1.`kotlin.collections.v.b` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L560db6.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlin.collections.v` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/v;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L560c10.  call temp:= `getMap`(v2) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560c16.  v0:= temp @kind object;
  #L560c18.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560c1e.  v1:= temp @kind object;
  #L560c20.  if v1 != 0 then goto L560c3c;
  #L560c24.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L560c2a.  v0:= temp;
  #L560c2c.  if v0 != 0 then goto L560c3c;
  #L560c30.  v0:= v2.`kotlin.collections.v.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L560c34.  call temp:= `invoke`(v0, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560c3a.  v1:= temp @kind object;
  #L560c3c.  return v1 @kind object;
}
procedure `java.util.Set` `b`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.b:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560d30.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560d36.  v0:= temp @kind object;
  #L560d38.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560d3e.  v0:= temp @kind object;
  #L560d40.  return v0 @kind object;
}
procedure `java.util.Set` `c`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.c:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560d54.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560d5a.  v0:= temp @kind object;
  #L560d5c.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L560d62.  v0:= temp @kind object;
  #L560d64.  return v0 @kind object;
}
procedure `void` `clear`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560dc8.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560dce.  v0:= temp @kind object;
  #L560dd0.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L560dd6.  return @kind void;
}
procedure `boolean` `containsKey`(`kotlin.collections.v` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/v;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560af8.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560afe.  v0:= temp @kind object;
  #L560b00.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L560b06.  v2:= temp;
  #L560b08.  return v2;
}
procedure `boolean` `containsValue`(`kotlin.collections.v` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/v;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560b1c.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560b22.  v0:= temp @kind object;
  #L560b24.  call temp:= `containsValue`(v0, v2) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L560b2a.  v2:= temp;
  #L560b2c.  return v2;
}
procedure `int` `d`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560b88.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560b8e.  v0:= temp @kind object;
  #L560b90.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L560b96.  v0:= temp;
  #L560b98.  return v0;
}
procedure `java.util.Collection` `e`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.e:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560cbc.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560cc2.  v0:= temp @kind object;
  #L560cc4.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L560cca.  v0:= temp @kind object;
  #L560ccc.  return v0 @kind object;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L560d14.  call temp:= `b`(v1) @signature `Lkotlin/collections/v;.b:()Ljava/util/Set;` @kind virtual;
  #L560d1a.  v0:= temp @kind object;
  #L560d1c.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.collections.v` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/v;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560b40.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560b46.  v0:= temp @kind object;
  #L560b48.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L560b4e.  v2:= temp;
  #L560b50.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.v` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/v;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560bec.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560bf2.  v0:= temp @kind object;
  #L560bf4.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560bfa.  v2:= temp @kind object;
  #L560bfc.  return v2 @kind object;
}
procedure `java.util.Map` `getMap`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560cfc.  v0:= v1.`kotlin.collections.v.a` @type ^`java.util.Map` @kind object;
  #L560d00.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560bac.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560bb2.  v0:= temp @kind object;
  #L560bb4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L560bba.  v0:= temp;
  #L560bbc.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560b64.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560b6a.  v0:= temp @kind object;
  #L560b6c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L560b72.  v0:= temp;
  #L560b74.  return v0;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L560d78.  call temp:= `c`(v1) @signature `Lkotlin/collections/v;.c:()Ljava/util/Set;` @kind virtual;
  #L560d7e.  v0:= temp @kind object;
  #L560d80.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`kotlin.collections.v` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/v;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560c50.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560c56.  v0:= temp @kind object;
  #L560c58.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560c5e.  v2:= temp @kind object;
  #L560c60.  return v2 @kind object;
}
procedure `void` `putAll`(`kotlin.collections.v` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/v;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560de8.  v0:= "from" @kind object;
  #L560dec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560df2.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560df8.  v0:= temp @kind object;
  #L560dfa.  call `putAll`(v0, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L560e00.  return @kind void;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.v` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/v;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560c74.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560c7a.  v0:= temp @kind object;
  #L560c7c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560c82.  v2:= temp @kind object;
  #L560c84.  return v2 @kind object;
}
procedure `int` `size`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L560bd0.  call temp:= `d`(v1) @signature `Lkotlin/collections/v;.d:()I` @kind virtual;
  #L560bd6.  v0:= temp;
  #L560bd8.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560c98.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/v;.getMap:()Ljava/util/Map;` @kind virtual;
  #L560c9e.  v0:= temp @kind object;
  #L560ca0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L560ca6.  v0:= temp @kind object;
  #L560ca8.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`kotlin.collections.v` v1 @kind this) @signature `Lkotlin/collections/v;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L560ce0.  call temp:= `e`(v1) @signature `Lkotlin/collections/v;.e:()Ljava/util/Collection;` @kind virtual;
  #L560ce6.  v0:= temp @kind object;
  #L560ce8.  return v0 @kind object;
}
