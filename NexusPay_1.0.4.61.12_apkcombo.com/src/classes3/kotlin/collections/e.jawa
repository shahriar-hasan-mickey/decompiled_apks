record `kotlin.collections.e` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.collections.e` v0 @kind this) @signature `Lkotlin/collections/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L556590.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L556596.  return @kind void;
}
procedure `java.util.List` `build`(`java.util.List` v1 @kind object) @signature `Lkotlin/collections/e;.build:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5564ac.  v0:= "builder" @kind object;
  #L5564b0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5564b6.  v1:= (`kotlin.collections.builders.ListBuilder`) v1 @kind object;
  #L5564ba.  call temp:= `build`(v1) @signature `Lkotlin/collections/builders/ListBuilder;.build:()Ljava/util/List;` @kind virtual;
  #L5564c0.  v1:= temp @kind object;
  #L5564c2.  return v1 @kind object;
}
procedure `java.lang.Object`[] `copyToArrayOfAny`(`java.lang.Object`[] v2 @kind object, `boolean` v3 ) @signature `Lkotlin/collections/e;.copyToArrayOfAny:([Ljava/lang/Object;Z)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55645c.  v0:= constclass @type ^`java.lang.Object`[] @kind object;
  #L556460.  v1:= "$this$copyToArrayOfAny" @kind object;
  #L556464.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55646a.  if v3 == 0 then goto L556484;
  #L55646e.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L556474.  v3:= temp @kind object;
  #L556476.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L55647c.  v3:= temp;
  #L55647e.  if v3 == 0 then goto L556484;
  #L556482.  goto L556498;
  #L556484.  v3:= length @variable v2;
  #L556486.  call temp:= `copyOf`(v2, v3, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;` @kind static;
  #L55648c.  v2:= temp @kind object;
  #L55648e.  v3:= "java.util.Arrays.copyOf(â€¦ Array<Any?>::class.java)" @kind object;
  #L556492.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556498.  return v2 @kind object;
}
procedure `java.util.List` `createListBuilder`() @signature `Lkotlin/collections/e;.createListBuilder:()Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5564d4.  v0:= new `kotlin.collections.builders.ListBuilder`;
  #L5564d8.  call `<init>`(v0) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:()V` @kind direct;
  #L5564de.  return v0 @kind object;
}
procedure `java.util.List` `createListBuilder`(`int` v1 ) @signature `Lkotlin/collections/e;.createListBuilder:(I)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5564f0.  v0:= new `kotlin.collections.builders.ListBuilder`;
  #L5564f4.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:(I)V` @kind direct;
  #L5564fa.  return v0 @kind object;
}
procedure `java.util.List` `listOf`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/e;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L55650c.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L556512.  v1:= temp @kind object;
  #L556514.  v0:= "java.util.Collections.singletonList(element)" @kind object;
  #L556518.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55651e.  return v1 @kind object;
}
procedure `java.util.List` `shuffled`(`java.lang.Iterable` v1 @kind object) @signature `Lkotlin/collections/e;.shuffled:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L556530.  v0:= "$this$shuffled" @kind object;
  #L556534.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55653a.  call temp:= `toMutableList`(v1) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toMutableList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L556540.  v1:= temp @kind object;
  #L556542.  call `shuffle`(v1) @signature `Ljava/util/Collections;.shuffle:(Ljava/util/List;)V` @kind static;
  #L556548.  return v1 @kind object;
}
procedure `java.util.List` `shuffled`(`java.lang.Iterable` v1 @kind object, `java.util.Random` v2 @kind object) @signature `Lkotlin/collections/e;.shuffled:(Ljava/lang/Iterable;Ljava/util/Random;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55655c.  v0:= "$this$shuffled" @kind object;
  #L556560.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556566.  v0:= "random" @kind object;
  #L55656a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556570.  call temp:= `toMutableList`(v1) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toMutableList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L556576.  v1:= temp @kind object;
  #L556578.  call `shuffle`(v1, v2) @signature `Ljava/util/Collections;.shuffle:(Ljava/util/List;Ljava/util/Random;)V` @kind static;
  #L55657e.  return v1 @kind object;
}
