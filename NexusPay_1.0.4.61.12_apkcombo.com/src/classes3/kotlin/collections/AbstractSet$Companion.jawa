record `kotlin.collections.AbstractSet$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.collections.AbstractSet$Companion` v0 @kind this) @signature `Lkotlin/collections/AbstractSet$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L533768.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53376e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.AbstractSet$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/collections/AbstractSet$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L533780.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractSet$Companion;.<init>:()V` @kind direct;
  #L533786.  return @kind void;
}
procedure `boolean` `setEquals$kotlin_stdlib`(`kotlin.collections.AbstractSet$Companion` v2 @kind this, `java.util.Set` v3 @kind object, `java.util.Set` v4 @kind object) @signature `Lkotlin/collections/AbstractSet$Companion;.setEquals$kotlin_stdlib:(Ljava/util/Set;Ljava/util/Set;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L5336d0.  v0:= "c" @kind object;
  #L5336d4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5336da.  v0:= "other" @kind object;
  #L5336de.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5336e4.  call temp:= `size`(v3) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L5336ea.  v0:= temp;
  #L5336ec.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L5336f2.  v1:= temp;
  #L5336f4.  if v0 == v1 then goto L5336fc;
  #L5336f8.  v3:= 0I;
  #L5336fa.  return v3;
  #L5336fc.  call temp:= `containsAll`(v3, v4) @signature `Ljava/util/Collection;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L533702.  v3:= temp;
  #L533704.  return v3;
}
procedure `int` `unorderedHashCode$kotlin_stdlib`(`kotlin.collections.AbstractSet$Companion` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/AbstractSet$Companion;.unorderedHashCode$kotlin_stdlib:(Ljava/util/Collection;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L533718.  v0:= "c" @kind object;
  #L53371c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L533722.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L533728.  v4:= temp @kind object;
  #L53372a.  v0:= 0I;
  #L53372c.  v1:= 0I;
  #L53372e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L533734.  v2:= temp;
  #L533736.  if v2 == 0 then goto L533756;
  #L53373a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L533740.  v2:= temp @kind object;
  #L533742.  if v2 == 0 then goto L533750;
  #L533746.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L53374c.  v2:= temp;
  #L53374e.  goto L533752;
  #L533750.  v2:= 0I;
  #L533752.  v1:= v1 + v2 @kind int;
  #L533754.  goto L53372e;
  #L533756.  return v1;
}
