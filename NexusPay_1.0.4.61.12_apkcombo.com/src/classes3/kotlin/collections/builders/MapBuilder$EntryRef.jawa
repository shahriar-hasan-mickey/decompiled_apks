record `kotlin.collections.builders.MapBuilder$EntryRef` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Map$Entry` @kind interface, `kotlin.jvm.internal.markers.KMutableMap$Entry` @kind interface {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilder$EntryRef.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.collections.builders.MapBuilder$EntryRef.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder$EntryRef` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.<init>:(Lkotlin/collections/builders/MapBuilder;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L563de4.  v0:= "map" @kind object;
  #L563de8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L563dee.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L563df4.  v1.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L563df8.  v1.`kotlin.collections.builders.MapBuilder$EntryRef.b` @type ^`int` := v3;
  #L563dfc.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563c70.  v0:= instanceof @variable v3 @type ^`java.util.Map$Entry` @kind boolean;
  #L563c74.  if v0 == 0 then goto L563cb8;
  #L563c78.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L563c7c.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L563c82.  v0:= temp @kind object;
  #L563c84.  call temp:= `getKey`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L563c8a.  v1:= temp @kind object;
  #L563c8c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L563c92.  v0:= temp;
  #L563c94.  if v0 == 0 then goto L563cb8;
  #L563c98.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L563c9e.  v3:= temp @kind object;
  #L563ca0.  call temp:= `getValue`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L563ca6.  v0:= temp @kind object;
  #L563ca8.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L563cae.  v3:= temp;
  #L563cb0.  if v3 == 0 then goto L563cb8;
  #L563cb4.  v3:= 1I;
  #L563cb6.  goto L563cba;
  #L563cb8.  v3:= 0I;
  #L563cba.  return v3;
}
procedure `java.lang.Object` `getKey`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563d10.  v0:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563d14.  call temp:= `access$getKeysArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getKeysArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L563d1a.  v0:= temp @kind object;
  #L563d1c.  v1:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.b` @type ^`int`;
  #L563d20.  v0:= v0[v1] @kind object;
  #L563d24.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563d38.  v0:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563d3c.  call temp:= `access$getValuesArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getValuesArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L563d42.  v0:= temp @kind object;
  #L563d44.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L563d4a.  v1:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.b` @type ^`int`;
  #L563d4e.  v0:= v0[v1] @kind object;
  #L563d52.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.builders.MapBuilder$EntryRef` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L563ccc.  call temp:= `getKey`(v3) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L563cd2.  v0:= temp @kind object;
  #L563cd4.  v1:= 0I;
  #L563cd6.  if v0 == 0 then goto L563ce4;
  #L563cda.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L563ce0.  v0:= temp;
  #L563ce2.  goto L563ce6;
  #L563ce4.  v0:= 0I;
  #L563ce6.  call temp:= `getValue`(v3) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L563cec.  v2:= temp @kind object;
  #L563cee.  if v2 == 0 then goto L563cfa;
  #L563cf2.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L563cf8.  v1:= temp;
  #L563cfa.  v0:= v0 ^~ v1 @kind int;
  #L563cfc.  return v0;
}
procedure `java.lang.Object` `setValue`(`kotlin.collections.builders.MapBuilder$EntryRef` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L563d64.  v0:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563d68.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L563d6e.  v0:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563d72.  call temp:= `access$allocateValuesArray`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$allocateValuesArray:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L563d78.  v0:= temp @kind object;
  #L563d7a.  v1:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.b` @type ^`int`;
  #L563d7e.  v2:= v0[v1] @kind object;
  #L563d82.  v0[v1]:= v4 @kind object;
  #L563d86.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563d98.  v0:= new `java.lang.StringBuilder`;
  #L563d9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L563da2.  call temp:= `getKey`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L563da8.  v1:= temp @kind object;
  #L563daa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563db0.  v1:= 61I;
  #L563db4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L563dba.  call temp:= `getValue`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L563dc0.  v1:= temp @kind object;
  #L563dc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563dc8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L563dce.  v0:= temp @kind object;
  #L563dd0.  return v0 @kind object;
}
