record `kotlin.collections.builders.SetBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractMutableSet` @kind class, `java.util.Set` @kind interface, `kotlin.jvm.internal.markers.KMutableSet` @kind interface {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.SetBuilder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L56559c.  v0:= new `kotlin.collections.builders.MapBuilder`;
  #L5655a0.  call `<init>`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:()V` @kind direct;
  #L5655a6.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L5655ac.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L5655c0.  v0:= new `kotlin.collections.builders.MapBuilder`;
  #L5655c4.  call `<init>`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @kind direct;
  #L5655ca.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L5655d0.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L5655e4.  v0:= "backing" @kind object;
  #L5655e8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5655ee.  call `<init>`(v1) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @kind direct;
  #L5655f4.  v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L5655f8.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L565420.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L565424.  call temp:= `addKey$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L56542a.  v2:= temp;
  #L56542c.  if v2 < 0 then goto L565434;
  #L565430.  v2:= 1I;
  #L565432.  goto L565436;
  #L565434.  v2:= 0I;
  #L565436.  return v2;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L565448.  v0:= "elements" @kind object;
  #L56544c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L565452.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L565456.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L56545c.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/AbstractSet;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L565462.  v2:= temp;
  #L565464.  return v2;
}
procedure `java.util.Set` `build`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.build:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L565580.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L565584.  call temp:= `build`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.build:()Ljava/util/Map;` @kind virtual;
  #L56558a.  return v1 @kind object;
}
procedure `void` `clear`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56560c.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L565610.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L565616.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L565478.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L56547c.  call temp:= `containsKey`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L565482.  v2:= temp;
  #L565484.  return v2;
}
procedure `int` `getSize`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L565540.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L565544.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L56554a.  v0:= temp;
  #L56554c.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L565498.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L56549c.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L5654a2.  v0:= temp;
  #L5654a4.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L565560.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L565564.  call temp:= `keysIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.keysIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$KeysItr;` @kind virtual;
  #L56556a.  v0:= temp @kind object;
  #L56556c.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5654b8.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5654bc.  call temp:= `removeKey$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L5654c2.  v2:= temp;
  #L5654c4.  if v2 < 0 then goto L5654cc;
  #L5654c8.  v2:= 1I;
  #L5654ca.  goto L5654ce;
  #L5654cc.  v2:= 0I;
  #L5654ce.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5654e0.  v0:= "elements" @kind object;
  #L5654e4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5654ea.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5654ee.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L5654f4.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L5654fa.  v2:= temp;
  #L5654fc.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L565510.  v0:= "elements" @kind object;
  #L565514.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56551a.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L56551e.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L565524.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L56552a.  v2:= temp;
  #L56552c.  return v2;
}
