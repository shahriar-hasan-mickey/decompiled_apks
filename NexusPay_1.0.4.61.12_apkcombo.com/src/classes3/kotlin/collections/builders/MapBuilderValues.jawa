record `kotlin.collections.builders.MapBuilderValues` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractMutableCollection` @kind class, `java.util.Collection` @kind interface, `kotlin.jvm.internal.markers.KMutableCollection` @kind interface {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilderValues.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderValues;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L5645b4.  v0:= "backing" @kind object;
  #L5645b8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5645be.  call `<init>`(v1) @signature `Lkotlin/collections/AbstractMutableCollection;.<init>:()V` @kind direct;
  #L5645c4.  v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L5645c8.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderValues` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilderValues;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L564458.  v1:= new `java.lang.UnsupportedOperationException`;
  #L56445c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L564462.  throw v1;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderValues;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564474.  v0:= "elements" @kind object;
  #L564478.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56447e.  v2:= new `java.lang.UnsupportedOperationException`;
  #L564482.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L564488.  throw v2;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderValues;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5645dc.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5645e0.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L5645e6.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderValues;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56449c.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5644a0.  call temp:= `containsValue`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsValue:(Ljava/lang/Object;)Z` @kind virtual;
  #L5644a6.  v2:= temp;
  #L5644a8.  return v2;
}
procedure `kotlin.collections.builders.MapBuilder` `getBacking`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderValues;.getBacking:()Lkotlin/collections/builders/MapBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L56459c.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5645a0.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderValues;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56455c.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564560.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L564566.  v0:= temp;
  #L564568.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderValues;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5644bc.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5644c0.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L5644c6.  v0:= temp;
  #L5644c8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderValues;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56457c.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564580.  call temp:= `valuesIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.valuesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$ValuesItr;` @kind virtual;
  #L564586.  v0:= temp @kind object;
  #L564588.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderValues;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5644dc.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5644e0.  call temp:= `removeValue$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeValue$kotlin_stdlib:(Ljava/lang/Object;)Z` @kind virtual;
  #L5644e6.  v2:= temp;
  #L5644e8.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderValues;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5644fc.  v0:= "elements" @kind object;
  #L564500.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L564506.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L56450a.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L564510.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractCollection;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L564516.  v2:= temp;
  #L564518.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.MapBuilderValues` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderValues;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56452c.  v0:= "elements" @kind object;
  #L564530.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L564536.  v0:= v1.`kotlin.collections.builders.MapBuilderValues.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L56453a.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L564540.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractCollection;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L564546.  v2:= temp;
  #L564548.  return v2;
}
