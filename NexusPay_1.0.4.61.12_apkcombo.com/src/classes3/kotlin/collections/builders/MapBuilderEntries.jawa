record `kotlin.collections.builders.MapBuilderEntries` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.builders.AbstractMapBuilderEntrySet` @kind class {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilderEntries.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L564284.  v0:= "backing" @kind object;
  #L564288.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56428e.  call `<init>`(v1) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.<init>:()V` @kind direct;
  #L564294.  v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L564298.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderEntries` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L5640c4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L5640c8.  call temp:= `add`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L5640ce.  v1:= temp;
  #L5640d0.  return v1;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5640e4.  v0:= "element" @kind object;
  #L5640e8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5640ee.  v2:= new `java.lang.UnsupportedOperationException`;
  #L5640f2.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L5640f8.  throw v2;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56410c.  v0:= "elements" @kind object;
  #L564110.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L564116.  v2:= new `java.lang.UnsupportedOperationException`;
  #L56411a.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L564120.  throw v2;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5642ac.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5642b0.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L5642b6.  return @kind void;
}
procedure `boolean` `containsAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564134.  v0:= "elements" @kind object;
  #L564138.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56413e.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564142.  call temp:= `containsAllEntries$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @kind virtual;
  #L564148.  v2:= temp;
  #L56414a.  return v2;
}
procedure `boolean` `containsEntry`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.containsEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56415c.  v0:= "element" @kind object;
  #L564160.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L564166.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L56416a.  call temp:= `containsEntry$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L564170.  v2:= temp;
  #L564172.  return v2;
}
procedure `kotlin.collections.builders.MapBuilder` `getBacking`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.getBacking:()Lkotlin/collections/builders/MapBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L56426c.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564270.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56422c.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564230.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L564236.  v0:= temp;
  #L564238.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564184.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564188.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L56418e.  v0:= temp;
  #L564190.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56424c.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564250.  call temp:= `entriesIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L564256.  v0:= temp @kind object;
  #L564258.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.remove:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5641a4.  v0:= "element" @kind object;
  #L5641a8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5641ae.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5641b2.  call temp:= `removeEntry$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L5641b8.  v2:= temp;
  #L5641ba.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5641cc.  v0:= "elements" @kind object;
  #L5641d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5641d6.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5641da.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L5641e0.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L5641e6.  v2:= temp;
  #L5641e8.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5641fc.  v0:= "elements" @kind object;
  #L564200.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L564206.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L56420a.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L564210.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L564216.  v2:= temp;
  #L564218.  return v2;
}
