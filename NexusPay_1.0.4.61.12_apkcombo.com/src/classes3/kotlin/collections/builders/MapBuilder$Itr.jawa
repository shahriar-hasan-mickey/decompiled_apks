record `kotlin.collections.builders.MapBuilder$Itr` @kind class @AccessFlag PUBLIC {
  `int` `kotlin.collections.builders.MapBuilder$Itr.a` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder$Itr.b` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilder$Itr.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L563e84.  v0:= "map" @kind object;
  #L563e88.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L563e8e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L563e94.  v1.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L563e98.  v2:= -1I;
  #L563e9a.  v1.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int` := v2;
  #L563e9e.  call `initNext$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.initNext$kotlin_stdlib:()V` @kind virtual;
  #L563ea4.  return @kind void;
}
procedure `int` `getIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getIndex$kotlin_stdlib:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L563e3c.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`int`;
  #L563e40.  return v0;
}
procedure `int` `getLastIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getLastIndex$kotlin_stdlib:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L563e54.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int`;
  #L563e58.  return v0;
}
procedure `kotlin.collections.builders.MapBuilder` `getMap$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getMap$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L563e6c.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563e70.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`kotlin.collections.builders.MapBuilder$Itr` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L563e10.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`int`;
  #L563e14.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563e18.  call temp:= `access$getLength$p`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @kind static;
  #L563e1e.  v1:= temp;
  #L563e20.  if v0 >= v1 then goto L563e28;
  #L563e24.  v0:= 1I;
  #L563e26.  goto L563e2a;
  #L563e28.  v0:= 0I;
  #L563e2a.  return v0;
}
procedure `void` `initNext$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.initNext$kotlin_stdlib:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L563eb8.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`int`;
  #L563ebc.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563ec0.  call temp:= `access$getLength$p`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @kind static;
  #L563ec6.  v1:= temp;
  #L563ec8.  if v0 >= v1 then goto L563eee;
  #L563ecc.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563ed0.  call temp:= `access$getPresenceArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getPresenceArray$p:(Lkotlin/collections/builders/MapBuilder;)[I` @kind static;
  #L563ed6.  v0:= temp @kind object;
  #L563ed8.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`int`;
  #L563edc.  v0:= v0[v1];
  #L563ee0.  if v0 >= 0 then goto L563eee;
  #L563ee4.  v1:= v1 + 1;
  #L563ee8.  v2.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`int` := v1;
  #L563eec.  goto L563eb8;
  #L563eee.  return @kind void;
}
procedure `void` `remove`(`kotlin.collections.builders.MapBuilder$Itr` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L563f00.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int`;
  #L563f04.  v1:= -1I;
  #L563f06.  if v0 == v1 then goto L563f0e;
  #L563f0a.  v0:= 1I;
  #L563f0c.  goto L563f10;
  #L563f0e.  v0:= 0I;
  #L563f10.  if v0 == 0 then goto L563f32;
  #L563f14.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563f18.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L563f1e.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L563f22.  v2:= v3.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int`;
  #L563f26.  call `access$removeKeyAt`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.access$removeKeyAt:(Lkotlin/collections/builders/MapBuilder;I)V` @kind static;
  #L563f2c.  v3.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int` := v1;
  #L563f30.  return @kind void;
  #L563f32.  v0:= new `java.lang.IllegalStateException`;
  #L563f36.  v1:= "Call next() before removing element from the iterator." @kind object;
  #L563f3a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L563f40.  v1:= temp @kind object;
  #L563f42.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L563f48.  throw v0;
}
procedure `void` `setIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.setIndex$kotlin_stdlib:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L563f5c.  v0.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`int` := v1;
  #L563f60.  return @kind void;
}
procedure `void` `setLastIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.setLastIndex$kotlin_stdlib:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L563f74.  v0.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int` := v1;
  #L563f78.  return @kind void;
}
