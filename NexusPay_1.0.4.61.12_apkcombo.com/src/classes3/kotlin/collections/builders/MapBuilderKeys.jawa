record `kotlin.collections.builders.MapBuilderKeys` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractMutableSet` @kind class, `java.util.Set` @kind interface, `kotlin.jvm.internal.markers.KMutableSet` @kind interface {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilderKeys.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L564414.  v0:= "backing" @kind object;
  #L564418.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56441e.  call `<init>`(v1) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @kind direct;
  #L564424.  v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L564428.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderKeys` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L5642c8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L5642cc.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L5642d2.  throw v1;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5642e4.  v0:= "elements" @kind object;
  #L5642e8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5642ee.  v2:= new `java.lang.UnsupportedOperationException`;
  #L5642f2.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L5642f8.  throw v2;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderKeys;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56443c.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564440.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L564446.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56430c.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564310.  call temp:= `containsKey`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L564316.  v2:= temp;
  #L564318.  return v2;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderKeys;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5643d4.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5643d8.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L5643de.  v0:= temp;
  #L5643e0.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderKeys;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56432c.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564330.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L564336.  v0:= temp;
  #L564338.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderKeys;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5643f4.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5643f8.  call temp:= `keysIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.keysIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$KeysItr;` @kind virtual;
  #L5643fe.  v0:= temp @kind object;
  #L564400.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56434c.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564350.  call temp:= `removeKey$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L564356.  v2:= temp;
  #L564358.  if v2 < 0 then goto L564360;
  #L56435c.  v2:= 1I;
  #L56435e.  goto L564362;
  #L564360.  v2:= 0I;
  #L564362.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564374.  v0:= "elements" @kind object;
  #L564378.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56437e.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L564382.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L564388.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L56438e.  v2:= temp;
  #L564390.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5643a4.  v0:= "elements" @kind object;
  #L5643a8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5643ae.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L5643b2.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L5643b8.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L5643be.  v2:= temp;
  #L5643c0.  return v2;
}
