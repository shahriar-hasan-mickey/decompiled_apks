record `kotlin.collections.builders.MapBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Map` @kind interface, `kotlin.jvm.internal.markers.KMutableMap` @kind interface {
  `int` `kotlin.collections.builders.MapBuilder.a` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.b` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilderKeys` `kotlin.collections.builders.MapBuilder.c` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilderValues` `kotlin.collections.builders.MapBuilder.d` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilderEntries` `kotlin.collections.builders.MapBuilder.e` @AccessFlag PRIVATE;
  `boolean` `kotlin.collections.builders.MapBuilder.f` @AccessFlag PRIVATE;
  `java.lang.Object`[] `kotlin.collections.builders.MapBuilder.g` @AccessFlag PRIVATE;
  `java.lang.Object`[] `kotlin.collections.builders.MapBuilder.h` @AccessFlag PRIVATE;
  `int`[] `kotlin.collections.builders.MapBuilder.i` @AccessFlag PRIVATE;
  `int`[] `kotlin.collections.builders.MapBuilder.j` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.k` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.l` @AccessFlag PRIVATE;
}
global `kotlin.collections.builders.MapBuilder$a` `@@kotlin.collections.builders.MapBuilder.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/collections/builders/MapBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L564f24.  v0:= new `kotlin.collections.builders.MapBuilder$a`;
  #L564f28.  v1:= 0I;
  #L564f2a.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$a;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L564f30.  `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` := v0 @kind object;
  #L564f34.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L564f48.  v0:= 8I;
  #L564f4c.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @kind direct;
  #L564f52.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v7 @kind this, `int` v8 ) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L564f64.  call temp:= `arrayOfUninitializedElements`(v8) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @kind static;
  #L564f6a.  v1:= temp @kind object;
  #L564f6c.  v3:= new `int`[v8];
  #L564f70.  v0:= `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` @kind object;
  #L564f74.  call temp:= `a`(v0, v8) @signature `Lkotlin/collections/builders/MapBuilder$a;.a:(Lkotlin/collections/builders/MapBuilder$a;I)I` @kind static;
  #L564f7a.  v8:= temp;
  #L564f7c.  v4:= new `int`[v8];
  #L564f80.  v2:= 0I;
  #L564f82.  v5:= 2I;
  #L564f84.  v6:= 0I;
  #L564f86.  v0:= v7 @kind object;
  #L564f88.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:([Ljava/lang/Object;[Ljava/lang/Object;[I[III)V` @kind direct;
  #L564f8e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object`[] v1 @kind object, `java.lang.Object`[] v2 @kind object, `int`[] v3 @kind object, `int`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:([Ljava/lang/Object;[Ljava/lang/Object;[I[III)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L564fa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L564fa6.  v0.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] := v1 @kind object;
  #L564faa.  v0.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] := v2 @kind object;
  #L564fae.  v0.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] := v3 @kind object;
  #L564fb2.  v0.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] := v4 @kind object;
  #L564fb6.  v0.`kotlin.collections.builders.MapBuilder.k` @type ^`int` := v5;
  #L564fba.  v0.`kotlin.collections.builders.MapBuilder.l` @type ^`int` := v6;
  #L564fbe.  v1:= `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` @kind object;
  #L564fc2.  call temp:= `j`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L564fc8.  v2:= temp;
  #L564fca.  call temp:= `b`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder$a;.b:(Lkotlin/collections/builders/MapBuilder$a;I)I` @kind static;
  #L564fd0.  v1:= temp;
  #L564fd2.  v0.`kotlin.collections.builders.MapBuilder.a` @type ^`int` := v1;
  #L564fd6.  return @kind void;
}
procedure `java.lang.Object`[] `access$allocateValuesArray`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$allocateValuesArray:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L564ce4.  call temp:= `b`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.b:()[Ljava/lang/Object;` @kind direct;
  #L564cea.  v0:= temp @kind object;
  #L564cec.  return v0 @kind object;
}
procedure `java.lang.Object`[] `access$getKeysArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getKeysArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L564d00.  v0:= v0.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L564d04.  return v0 @kind object;
}
procedure `int` `access$getLength$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L564964.  v0:= v0.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L564968.  return v0;
}
procedure `int`[] `access$getPresenceArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getPresenceArray$p:(Lkotlin/collections/builders/MapBuilder;)[I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L564c20.  v0:= v0.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L564c24.  return v0 @kind object;
}
procedure `java.lang.Object`[] `access$getValuesArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getValuesArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L564d18.  v0:= v0.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L564d1c.  return v0 @kind object;
}
procedure `void` `access$removeKeyAt`(`kotlin.collections.builders.MapBuilder` v0 @kind object, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder;.access$removeKeyAt:(Lkotlin/collections/builders/MapBuilder;I)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L564fe8.  call `q`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @kind direct;
  #L564fee.  return @kind void;
}
procedure `void` `access$setKeysArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$setKeysArray$p:(Lkotlin/collections/builders/MapBuilder;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L565000.  v0.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] := v1 @kind object;
  #L565004.  return @kind void;
}
procedure `void` `access$setLength$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder;.access$setLength$p:(Lkotlin/collections/builders/MapBuilder;I)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L565018.  v0.`kotlin.collections.builders.MapBuilder.l` @type ^`int` := v1;
  #L56501c.  return @kind void;
}
procedure `void` `access$setPresenceArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object, `int`[] v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$setPresenceArray$p:(Lkotlin/collections/builders/MapBuilder;[I)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L565030.  v0.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] := v1 @kind object;
  #L565034.  return @kind void;
}
procedure `void` `access$setValuesArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$setValuesArray$p:(Lkotlin/collections/builders/MapBuilder;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L565048.  v0.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] := v1 @kind object;
  #L56504c.  return @kind void;
}
procedure `java.lang.Object`[] `b`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.b:()[Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L564d30.  v0:= v1.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L564d34.  if v0 == 0 then goto L564d3a;
  #L564d38.  return v0 @kind object;
  #L564d3a.  call temp:= `i`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L564d40.  v0:= temp;
  #L564d42.  call temp:= `arrayOfUninitializedElements`(v0) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @kind static;
  #L564d48.  v0:= temp @kind object;
  #L564d4a.  v1.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] := v0 @kind object;
  #L564d4e.  return v0 @kind object;
}
procedure `void` `c`(`kotlin.collections.builders.MapBuilder` v5 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5650fc.  v0:= v5.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L565100.  v1:= 0I;
  #L565102.  v2:= 0I;
  #L565104.  v3:= v5.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L565108.  if v1 >= v3 then goto L56513a;
  #L56510c.  v3:= v5.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L565110.  v3:= v3[v1];
  #L565114.  if v3 < 0 then goto L565134;
  #L565118.  v3:= v5.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L56511c.  v4:= v3[v1] @kind object;
  #L565120.  v3[v2]:= v4 @kind object;
  #L565124.  if v0 == 0 then goto L565130;
  #L565128.  v3:= v0[v1] @kind object;
  #L56512c.  v0[v2]:= v3 @kind object;
  #L565130.  v2:= v2 + 1;
  #L565134.  v1:= v1 + 1;
  #L565138.  goto L565104;
  #L56513a.  v1:= v5.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L56513e.  call `resetRange`(v1, v2, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L565144.  if v0 == 0 then goto L565152;
  #L565148.  v1:= v5.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L56514c.  call `resetRange`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L565152.  v5.`kotlin.collections.builders.MapBuilder.l` @type ^`int` := v2;
  #L565156.  return @kind void;
}
procedure `boolean` `d`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.d:(Ljava/util/Map;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L5646f8.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L5646fe.  v0:= temp;
  #L564700.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L564706.  v1:= temp;
  #L564708.  if v0 != v1 then goto L564724;
  #L56470c.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L564712.  v3:= temp @kind object;
  #L564714.  call temp:= `containsAllEntries$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @kind virtual;
  #L56471a.  v3:= temp;
  #L56471c.  if v3 == 0 then goto L564724;
  #L564720.  v3:= 1I;
  #L564722.  goto L564726;
  #L564724.  v3:= 0I;
  #L564726.  return v3;
}
procedure `void` `e`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.e:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L565168.  call temp:= `i`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L56516e.  v0:= temp;
  #L565170.  if v3 <= v0 then goto L5651ee;
  #L565174.  call temp:= `i`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L56517a.  v0:= temp;
  #L56517c.  v0:= v0 * 3;
  #L565180.  v0:= v0 / 2;
  #L565184.  if v3 <= v0 then goto L56518a;
  #L565188.  goto L56518c;
  #L56518a.  v3:= v0;
  #L56518c.  v0:= v2.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L565190.  call temp:= `copyOfUninitializedElements`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L565196.  v0:= temp @kind object;
  #L565198.  v2.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] := v0 @kind object;
  #L56519c.  v0:= v2.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L5651a0.  if v0 == 0 then goto L5651ae;
  #L5651a4.  call temp:= `copyOfUninitializedElements`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L5651aa.  v0:= temp @kind object;
  #L5651ac.  goto L5651b0;
  #L5651ae.  v0:= 0I;
  #L5651b0.  v2.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] := v0 @kind object;
  #L5651b4.  v0:= v2.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L5651b8.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L5651be.  v0:= temp @kind object;
  #L5651c0.  v1:= "java.util.Arrays.copyOf(this, newSize)" @kind object;
  #L5651c4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5651ca.  v2.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] := v0 @kind object;
  #L5651ce.  v0:= `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` @kind object;
  #L5651d2.  call temp:= `a`(v0, v3) @signature `Lkotlin/collections/builders/MapBuilder$a;.a:(Lkotlin/collections/builders/MapBuilder$a;I)I` @kind static;
  #L5651d8.  v3:= temp;
  #L5651da.  call temp:= `j`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L5651e0.  v0:= temp;
  #L5651e2.  if v3 <= v0 then goto L565218;
  #L5651e6.  call `o`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.o:(I)V` @kind direct;
  #L5651ec.  goto L565218;
  #L5651ee.  v0:= v2.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L5651f2.  v0:= v0 + v3 @kind int;
  #L5651f4.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L5651fa.  v3:= temp;
  #L5651fc.  v0:= v0 - v3 @kind int;
  #L5651fe.  call temp:= `i`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L565204.  v3:= temp;
  #L565206.  if v0 <= v3 then goto L565218;
  #L56520a.  call temp:= `j`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L565210.  v3:= temp;
  #L565212.  call `o`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.o:(I)V` @kind direct;
  #L565218.  return @kind void;
}
procedure `void` `f`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/builders/MapBuilder;.f:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L56522c.  v0:= v1.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L565230.  v0:= v0 + v2 @kind int;
  #L565232.  call `e`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder;.e:(I)V` @kind direct;
  #L565238.  return @kind void;
}
procedure `int` `g`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L564a70.  call temp:= `k`(v5, v6) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @kind direct;
  #L564a76.  v0:= temp;
  #L564a78.  v1:= v5.`kotlin.collections.builders.MapBuilder.k` @type ^`int`;
  #L564a7c.  v2:= v5.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L564a80.  v2:= v2[v0];
  #L564a84.  v3:= -1I;
  #L564a86.  if v2 != 0 then goto L564a8c;
  #L564a8a.  return v3;
  #L564a8c.  if v2 <= 0 then goto L564aaa;
  #L564a90.  v4:= v5.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L564a94.  v2:= v2 + -1;
  #L564a98.  v4:= v4[v2] @kind object;
  #L564a9c.  call temp:= `areEqual`(v4, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L564aa2.  v4:= temp;
  #L564aa4.  if v4 == 0 then goto L564aaa;
  #L564aa8.  return v2;
  #L564aaa.  v1:= v1 + v3 @kind int;
  #L564aac.  if v1 >= 0 then goto L564ab2;
  #L564ab0.  return v3;
  #L564ab2.  v2:= v0 + -1;
  #L564ab6.  if v0 != 0 then goto L564ac8;
  #L564aba.  call temp:= `j`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L564ac0.  v0:= temp;
  #L564ac2.  v0:= v0 + -1;
  #L564ac6.  goto L564a7c;
  #L564ac8.  v0:= v2;
  #L564aca.  goto L564a7c;
}
procedure `int` `h`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.h:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L564adc.  v0:= v2.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L564ae0.  v1:= -1I;
  #L564ae2.  v0:= v0 + v1 @kind int;
  #L564ae4.  if v0 < 0 then goto L564b10;
  #L564ae8.  v1:= v2.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L564aec.  v1:= v1[v0];
  #L564af0.  if v1 < 0 then goto L564ae0;
  #L564af4.  v1:= v2.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L564af8.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L564afe.  v1:= v1[v0] @kind object;
  #L564b02.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L564b08.  v1:= temp;
  #L564b0a.  if v1 == 0 then goto L564ae0;
  #L564b0e.  return v0;
  #L564b10.  return v1;
}
procedure `int` `i`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L564b24.  v0:= v1.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L564b28.  v0:= length @variable v0;
  #L564b2a.  return v0;
}
procedure `int` `j`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L564b3c.  v0:= v1.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L564b40.  v0:= length @variable v0;
  #L564b42.  return v0;
}
procedure `int` `k`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L564b6c.  if v2 == 0 then goto L564b7a;
  #L564b70.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L564b76.  v2:= temp;
  #L564b78.  goto L564b7c;
  #L564b7a.  v2:= 0I;
  #L564b7c.  v0:= -1640531527I;
  #L564b82.  v2:= v2 * v0 @kind int;
  #L564b86.  v0:= v1.`kotlin.collections.builders.MapBuilder.a` @type ^`int`;
  #L564b8a.  v2:= v2 ^>> v0 @kind int;
  #L564b8c.  return v2;
}
procedure `boolean` `l`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.l:(Ljava/util/Collection;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L564794.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L56479a.  v0:= temp;
  #L56479c.  v1:= 0I;
  #L56479e.  if v0 == 0 then goto L5647a4;
  #L5647a2.  return v1;
  #L5647a4.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L5647aa.  v0:= temp;
  #L5647ac.  call `f`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.f:(I)V` @kind direct;
  #L5647b2.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5647b8.  v3:= temp @kind object;
  #L5647ba.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5647c0.  v0:= temp;
  #L5647c2.  if v0 == 0 then goto L5647e4;
  #L5647c6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5647cc.  v0:= temp @kind object;
  #L5647ce.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L5647d2.  call temp:= `m`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.m:(Ljava/util/Map$Entry;)Z` @kind direct;
  #L5647d8.  v0:= temp;
  #L5647da.  if v0 == 0 then goto L5647ba;
  #L5647de.  v0:= 1I;
  #L5647e0.  v1:= 1I;
  #L5647e2.  goto L5647ba;
  #L5647e4.  return v1;
}
procedure `boolean` `m`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `java.util.Map$Entry` v6 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.m:(Ljava/util/Map$Entry;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5647f8.  call temp:= `getKey`(v6) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L5647fe.  v0:= temp @kind object;
  #L564800.  call temp:= `addKey$kotlin_stdlib`(v5, v0) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L564806.  v0:= temp;
  #L564808.  call temp:= `b`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.b:()[Ljava/lang/Object;` @kind direct;
  #L56480e.  v1:= temp @kind object;
  #L564810.  v2:= 1I;
  #L564812.  if v0 < 0 then goto L564824;
  #L564816.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L56481c.  v6:= temp @kind object;
  #L56481e.  v1[v0]:= v6 @kind object;
  #L564822.  return v2;
  #L564824.  v0:= -v0 @kind int;
  #L564826.  v0:= v0 - v2 @kind int;
  #L564828.  v3:= v1[v0] @kind object;
  #L56482c.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L564832.  v4:= temp @kind object;
  #L564834.  call temp:= `areEqual`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56483a.  v3:= temp;
  #L56483c.  v3:= v3 ^~ v2 @kind int;
  #L56483e.  if v3 == 0 then goto L564850;
  #L564842.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L564848.  v6:= temp @kind object;
  #L56484a.  v1[v0]:= v6 @kind object;
  #L56484e.  return v2;
  #L564850.  v6:= 0I;
  #L564852.  return v6;
}
procedure `boolean` `n`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `int` v6 ) @signature `Lkotlin/collections/builders/MapBuilder;.n:(I)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L564864.  v0:= v5.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L564868.  v0:= v0[v6] @kind object;
  #L56486c.  call temp:= `k`(v5, v0) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @kind direct;
  #L564872.  v0:= temp;
  #L564874.  v1:= v5.`kotlin.collections.builders.MapBuilder.k` @type ^`int`;
  #L564878.  v2:= v5.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L56487c.  v3:= v2[v0];
  #L564880.  v4:= 1I;
  #L564882.  if v3 != 0 then goto L564898;
  #L564886.  v1:= v6 + 1;
  #L56488a.  v2[v0]:= v1;
  #L56488e.  v1:= v5.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L564892.  v1[v6]:= v0;
  #L564896.  return v4;
  #L564898.  v1:= v1 + -1;
  #L56489c.  if v1 >= 0 then goto L5648a4;
  #L5648a0.  v6:= 0I;
  #L5648a2.  return v6;
  #L5648a4.  v2:= v0 + -1;
  #L5648a8.  if v0 != 0 then goto L5648b8;
  #L5648ac.  call temp:= `j`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L5648b2.  v0:= temp;
  #L5648b4.  v0:= v0 - v4 @kind int;
  #L5648b6.  goto L564878;
  #L5648b8.  v0:= v2;
  #L5648ba.  goto L564878;
}
procedure `void` `o`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.o:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L56527c.  v0:= v2.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L565280.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L565286.  v1:= temp;
  #L565288.  if v0 <= v1 then goto L565292;
  #L56528c.  call `c`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.c:()V` @kind direct;
  #L565292.  call temp:= `j`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L565298.  v0:= temp;
  #L56529a.  v1:= 0I;
  #L56529c.  if v3 == v0 then goto L5652ba;
  #L5652a0.  v0:= new `int`[v3];
  #L5652a4.  v2.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] := v0 @kind object;
  #L5652a8.  v0:= `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` @kind object;
  #L5652ac.  call temp:= `b`(v0, v3) @signature `Lkotlin/collections/builders/MapBuilder$a;.b:(Lkotlin/collections/builders/MapBuilder$a;I)I` @kind static;
  #L5652b2.  v3:= temp;
  #L5652b4.  v2.`kotlin.collections.builders.MapBuilder.a` @type ^`int` := v3;
  #L5652b8.  goto L5652cc;
  #L5652ba.  v3:= v2.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L5652be.  call temp:= `j`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L5652c4.  v0:= temp;
  #L5652c6.  call `fill`(v3, v1, v1, v0) @signature `Lkotlin/collections/ArraysKt;.fill:([IIII)V` @kind static;
  #L5652cc.  v3:= v2.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L5652d0.  if v1 >= v3 then goto L5652f8;
  #L5652d4.  v3:= v1 + 1;
  #L5652d8.  call temp:= `n`(v2, v1) @signature `Lkotlin/collections/builders/MapBuilder;.n:(I)Z` @kind direct;
  #L5652de.  v0:= temp;
  #L5652e0.  if v0 == 0 then goto L5652e8;
  #L5652e4.  v1:= v3;
  #L5652e6.  goto L5652cc;
  #L5652e8.  v3:= new `java.lang.IllegalStateException`;
  #L5652ec.  v0:= "This cannot happen with fixed magic multiplier and grow-only hash array. Have object hashCodes changed?" @kind object;
  #L5652f0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5652f6.  throw v3;
  #L5652f8.  return @kind void;
}
procedure `void` `p`(`kotlin.collections.builders.MapBuilder` v9 @kind this, `int` v10 ) @signature `Lkotlin/collections/builders/MapBuilder;.p:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L56530c.  v0:= v9.`kotlin.collections.builders.MapBuilder.k` @type ^`int`;
  #L565310.  v0:= v0 * 2;
  #L565314.  call temp:= `j`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L56531a.  v1:= temp;
  #L56531c.  v1:= v1 / 2;
  #L565320.  call temp:= `coerceAtMost`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L565326.  v0:= temp;
  #L565328.  v1:= 0I;
  #L56532a.  v2:= v0;
  #L56532c.  v3:= 0I;
  #L56532e.  v0:= v10;
  #L565330.  v4:= v10 + -1;
  #L565334.  if v10 != 0 then goto L565346;
  #L565338.  call temp:= `j`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L56533e.  v10:= temp;
  #L565340.  v10:= v10 + -1;
  #L565344.  goto L565348;
  #L565346.  v10:= v4;
  #L565348.  v3:= v3 + 1;
  #L56534c.  v4:= v9.`kotlin.collections.builders.MapBuilder.k` @type ^`int`;
  #L565350.  if v3 <= v4 then goto L56535e;
  #L565354.  v10:= v9.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L565358.  v10[v0]:= v1;
  #L56535c.  return @kind void;
  #L56535e.  v4:= v9.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L565362.  v5:= v4[v10];
  #L565366.  if v5 != 0 then goto L565370;
  #L56536a.  v4[v0]:= v1;
  #L56536e.  return @kind void;
  #L565370.  v6:= -1I;
  #L565372.  if v5 >= 0 then goto L565380;
  #L565376.  v4[v0]:= v6;
  #L56537a.  v0:= v10;
  #L56537c.  v3:= 0I;
  #L56537e.  goto L5653ba;
  #L565380.  v4:= v9.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L565384.  v7:= v5 + -1;
  #L565388.  v4:= v4[v7] @kind object;
  #L56538c.  call temp:= `k`(v9, v4) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @kind direct;
  #L565392.  v4:= temp;
  #L565394.  v4:= v4 - v10 @kind int;
  #L565396.  call temp:= `j`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L56539c.  v8:= temp;
  #L56539e.  v8:= v8 + -1;
  #L5653a2.  v4:= v4 ^& v8 @kind int;
  #L5653a4.  if v4 < v3 then goto L5653ba;
  #L5653a8.  v3:= v9.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L5653ac.  v3[v0]:= v5;
  #L5653b0.  v3:= v9.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L5653b4.  v3[v7]:= v0;
  #L5653b8.  goto L56537a;
  #L5653ba.  v2:= v2 + v6 @kind int;
  #L5653bc.  if v2 >= 0 then goto L565330;
  #L5653c0.  v10:= v9.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L5653c4.  v10[v0]:= v6;
  #L5653c8.  return @kind void;
}
procedure `void` `q`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L5653dc.  v0:= v2.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L5653e0.  call `resetAt`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L5653e6.  v0:= v2.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L5653ea.  v0:= v0[v3];
  #L5653ee.  call `p`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.p:(I)V` @kind direct;
  #L5653f4.  v0:= v2.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L5653f8.  v1:= -1I;
  #L5653fa.  v0[v3]:= v1;
  #L5653fe.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L565404.  v3:= temp;
  #L565406.  v3:= v3 + v1 @kind int;
  #L565408.  v2.`kotlin.collections.builders.MapBuilder.b` @type ^`int` := v3;
  #L56540c.  return @kind void;
}
procedure `int` `addKey$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L56497c.  call `checkIsMutable$kotlin_stdlib`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L564982.  call temp:= `k`(v7, v8) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @kind direct;
  #L564988.  v0:= temp;
  #L56498a.  v1:= v7.`kotlin.collections.builders.MapBuilder.k` @type ^`int`;
  #L56498e.  v1:= v1 * 2;
  #L564992.  call temp:= `j`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L564998.  v2:= temp;
  #L56499a.  v2:= v2 / 2;
  #L56499e.  call temp:= `coerceAtMost`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L5649a4.  v1:= temp;
  #L5649a6.  v2:= 0I;
  #L5649a8.  v3:= v7.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L5649ac.  v3:= v3[v0];
  #L5649b0.  v4:= 1I;
  #L5649b2.  if v3 > 0 then goto L564a0e;
  #L5649b6.  v1:= v7.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L5649ba.  call temp:= `i`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L5649c0.  v3:= temp;
  #L5649c2.  if v1 < v3 then goto L5649ce;
  #L5649c6.  call `f`(v7, v4) @signature `Lkotlin/collections/builders/MapBuilder;.f:(I)V` @kind direct;
  #L5649cc.  goto L564982;
  #L5649ce.  v1:= v7.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L5649d2.  v3:= v1 + 1;
  #L5649d6.  v7.`kotlin.collections.builders.MapBuilder.l` @type ^`int` := v3;
  #L5649da.  v5:= v7.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L5649de.  v5[v1]:= v8 @kind object;
  #L5649e2.  v8:= v7.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L5649e6.  v8[v1]:= v0;
  #L5649ea.  v8:= v7.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L5649ee.  v8[v0]:= v3;
  #L5649f2.  call temp:= `size`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L5649f8.  v8:= temp;
  #L5649fa.  v8:= v8 + v4 @kind int;
  #L5649fc.  v7.`kotlin.collections.builders.MapBuilder.b` @type ^`int` := v8;
  #L564a00.  v8:= v7.`kotlin.collections.builders.MapBuilder.k` @type ^`int`;
  #L564a04.  if v2 <= v8 then goto L564a0c;
  #L564a08.  v7.`kotlin.collections.builders.MapBuilder.k` @type ^`int` := v2;
  #L564a0c.  return v1;
  #L564a0e.  v5:= v7.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L564a12.  v6:= v3 + -1;
  #L564a16.  v5:= v5[v6] @kind object;
  #L564a1a.  call temp:= `areEqual`(v5, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L564a20.  v5:= temp;
  #L564a22.  if v5 == 0 then goto L564a2a;
  #L564a26.  v8:= -v3 @kind int;
  #L564a28.  return v8;
  #L564a2a.  v2:= v2 + 1;
  #L564a2e.  if v2 <= v1 then goto L564a46;
  #L564a32.  call temp:= `j`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L564a38.  v0:= temp;
  #L564a3a.  v0:= v0 * 2;
  #L564a3e.  call `o`(v7, v0) @signature `Lkotlin/collections/builders/MapBuilder;.o:(I)V` @kind direct;
  #L564a44.  goto L564982;
  #L564a46.  v3:= v0 + -1;
  #L564a4a.  if v0 != 0 then goto L564a5a;
  #L564a4e.  call temp:= `j`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L564a54.  v0:= temp;
  #L564a56.  v0:= v0 - v4 @kind int;
  #L564a58.  goto L5649a8;
  #L564a5a.  v0:= v3;
  #L564a5c.  goto L5649a8;
}
procedure `java.util.Map` `build`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.build:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L564e28.  call `checkIsMutable$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L564e2e.  v0:= 1I;
  #L564e30.  v1.`kotlin.collections.builders.MapBuilder.f` @type ^`boolean` := v0 @kind boolean;
  #L564e34.  return v1 @kind object;
}
procedure `void` `checkIsMutable$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L565060.  v0:= v1.`kotlin.collections.builders.MapBuilder.f` @type ^`boolean` @kind boolean;
  #L565064.  if v0 != 0 then goto L56506a;
  #L565068.  return @kind void;
  #L56506a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L56506e.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L565074.  throw v0;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilder` v6 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L565088.  call `checkIsMutable$kotlin_stdlib`(v6) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L56508e.  v0:= v6.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L565092.  v0:= v0 + -1;
  #L565096.  v1:= 0I;
  #L565098.  if v0 < 0 then goto L5650c2;
  #L56509c.  v2:= 0I;
  #L56509e.  v3:= v6.`kotlin.collections.builders.MapBuilder.i` @type ^`int`[] @kind object;
  #L5650a2.  v4:= v3[v2];
  #L5650a6.  if v4 < 0 then goto L5650b8;
  #L5650aa.  v5:= v6.`kotlin.collections.builders.MapBuilder.j` @type ^`int`[] @kind object;
  #L5650ae.  v5[v4]:= v1;
  #L5650b2.  v4:= -1I;
  #L5650b4.  v3[v2]:= v4;
  #L5650b8.  if v2 == v0 then goto L5650c2;
  #L5650bc.  v2:= v2 + 1;
  #L5650c0.  goto L56509e;
  #L5650c2.  v0:= v6.`kotlin.collections.builders.MapBuilder.g` @type ^`java.lang.Object`[] @kind object;
  #L5650c6.  v2:= v6.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L5650ca.  call `resetRange`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L5650d0.  v0:= v6.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L5650d4.  if v0 == 0 then goto L5650e2;
  #L5650d8.  v2:= v6.`kotlin.collections.builders.MapBuilder.l` @type ^`int`;
  #L5650dc.  call `resetRange`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L5650e2.  v6.`kotlin.collections.builders.MapBuilder.b` @type ^`int` := v1;
  #L5650e6.  v6.`kotlin.collections.builders.MapBuilder.l` @type ^`int` := v1;
  #L5650ea.  return @kind void;
}
procedure `boolean` `containsAllEntries$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L5645f8.  v0:= "m" @kind object;
  #L5645fc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L564602.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L564608.  v3:= temp @kind object;
  #L56460a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L564610.  v0:= temp;
  #L564612.  if v0 == 0 then goto L564638;
  #L564616.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56461c.  v0:= temp @kind object;
  #L56461e.  v1:= 0I;
  #L564620.  if v0 == 0 then goto L564636;
  #L564624.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L564628.  call temp:= `containsEntry$kotlin_stdlib`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L56462e.  v0:= temp;
  #L564630.  if v0 != 0 then goto L56460a;
  #L564634.  
  #L564636.  return v1;
  #L564638.  v3:= 1I;
  #L56463a.  return v3;
  catch `java.lang.ClassCastException` @[L564624..L564630] goto L564636;
}
procedure `boolean` `containsEntry$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L56465c.  v0:= "entry" @kind object;
  #L564660.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L564666.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L56466c.  v0:= temp @kind object;
  #L56466e.  call temp:= `g`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L564674.  v0:= temp;
  #L564676.  if v0 >= 0 then goto L56467e;
  #L56467a.  v3:= 0I;
  #L56467c.  return v3;
  #L56467e.  v1:= v2.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L564682.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L564688.  v0:= v1[v0] @kind object;
  #L56468c.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L564692.  v3:= temp @kind object;
  #L564694.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56469a.  v3:= temp;
  #L56469c.  return v3;
}
procedure `boolean` `containsKey`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L5646b0.  call temp:= `g`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L5646b6.  v1:= temp;
  #L5646b8.  if v1 < 0 then goto L5646c0;
  #L5646bc.  v1:= 1I;
  #L5646be.  goto L5646c2;
  #L5646c0.  v1:= 0I;
  #L5646c2.  return v1;
}
procedure `boolean` `containsValue`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L5646d4.  call temp:= `h`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.h:(Ljava/lang/Object;)I` @kind direct;
  #L5646da.  v1:= temp;
  #L5646dc.  if v1 < 0 then goto L5646e4;
  #L5646e0.  v1:= 1I;
  #L5646e2.  goto L5646e6;
  #L5646e4.  v1:= 0I;
  #L5646e6.  return v1;
}
procedure `kotlin.collections.builders.MapBuilder$EntriesItr` `entriesIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L564ed0.  v0:= new `kotlin.collections.builders.MapBuilder$EntriesItr`;
  #L564ed4.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L564eda.  return v0 @kind object;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L564e48.  call temp:= `getEntries`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getEntries:()Ljava/util/Set;` @kind virtual;
  #L564e4e.  v0:= temp @kind object;
  #L564e50.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564738.  if v2 == v1 then goto L56475a;
  #L56473c.  v0:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L564740.  if v0 == 0 then goto L564756;
  #L564744.  v2:= (`java.util.Map`) v2 @kind object;
  #L564748.  call temp:= `d`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.d:(Ljava/util/Map;)Z` @kind direct;
  #L56474e.  v2:= temp;
  #L564750.  if v2 == 0 then goto L564756;
  #L564754.  goto L56475a;
  #L564756.  v2:= 0I;
  #L564758.  goto L56475c;
  #L56475a.  v2:= 1I;
  #L56475c.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564c38.  call temp:= `g`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L564c3e.  v2:= temp;
  #L564c40.  if v2 >= 0 then goto L564c48;
  #L564c44.  v2:= 0I;
  #L564c46.  return v2 @kind object;
  #L564c48.  v0:= v1.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L564c4c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L564c52.  v2:= v0[v2] @kind object;
  #L564c56.  return v2 @kind object;
}
procedure `java.util.Set` `getEntries`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getEntries:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564e64.  v0:= v1.`kotlin.collections.builders.MapBuilder.e` @type ^`kotlin.collections.builders.MapBuilderEntries` @kind object;
  #L564e68.  if v0 != 0 then goto L564e7a;
  #L564e6c.  v0:= new `kotlin.collections.builders.MapBuilderEntries`;
  #L564e70.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderEntries;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L564e76.  v1.`kotlin.collections.builders.MapBuilder.e` @type ^`kotlin.collections.builders.MapBuilderEntries` := v0 @kind object;
  #L564e7a.  return v0 @kind object;
}
procedure `java.util.Set` `getKeys`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getKeys:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564e8c.  v0:= v1.`kotlin.collections.builders.MapBuilder.c` @type ^`kotlin.collections.builders.MapBuilderKeys` @kind object;
  #L564e90.  if v0 != 0 then goto L564ea2;
  #L564e94.  v0:= new `kotlin.collections.builders.MapBuilderKeys`;
  #L564e98.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderKeys;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L564e9e.  v1.`kotlin.collections.builders.MapBuilder.c` @type ^`kotlin.collections.builders.MapBuilderKeys` := v0 @kind object;
  #L564ea2.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564b54.  v0:= v1.`kotlin.collections.builders.MapBuilder.b` @type ^`int`;
  #L564b58.  return v0;
}
procedure `java.util.Collection` `getValues`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getValues:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564de4.  v0:= v1.`kotlin.collections.builders.MapBuilder.d` @type ^`kotlin.collections.builders.MapBuilderValues` @kind object;
  #L564de8.  if v0 != 0 then goto L564dfa;
  #L564dec.  v0:= new `kotlin.collections.builders.MapBuilderValues`;
  #L564df0.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderValues;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L564df6.  v1.`kotlin.collections.builders.MapBuilder.d` @type ^`kotlin.collections.builders.MapBuilderValues` := v0 @kind object;
  #L564dfa.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.builders.MapBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L564ba0.  call temp:= `entriesIterator$kotlin_stdlib`(v3) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L564ba6.  v0:= temp @kind object;
  #L564ba8.  v1:= 0I;
  #L564baa.  call temp:= `hasNext`(v0) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @kind virtual;
  #L564bb0.  v2:= temp;
  #L564bb2.  if v2 == 0 then goto L564bc2;
  #L564bb6.  call temp:= `nextHashCode$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.nextHashCode$kotlin_stdlib:()I` @kind virtual;
  #L564bbc.  v2:= temp;
  #L564bbe.  v1:= v1 + v2 @kind int;
  #L564bc0.  goto L564baa;
  #L564bc2.  return v1;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L564770.  call temp:= `size`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L564776.  v0:= temp;
  #L564778.  if v0 != 0 then goto L564780;
  #L56477c.  v0:= 1I;
  #L56477e.  goto L564782;
  #L564780.  v0:= 0I;
  #L564782.  return v0;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L564eb4.  call temp:= `getKeys`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getKeys:()Ljava/util/Set;` @kind virtual;
  #L564eba.  v0:= temp @kind object;
  #L564ebc.  return v0 @kind object;
}
procedure `kotlin.collections.builders.MapBuilder$KeysItr` `keysIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.keysIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$KeysItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L564eec.  v0:= new `kotlin.collections.builders.MapBuilder$KeysItr`;
  #L564ef0.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$KeysItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L564ef6.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L564c68.  call `checkIsMutable$kotlin_stdlib`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L564c6e.  call temp:= `addKey$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L564c74.  v3:= temp;
  #L564c76.  call temp:= `b`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.b:()[Ljava/lang/Object;` @kind direct;
  #L564c7c.  v0:= temp @kind object;
  #L564c7e.  if v3 >= 0 then goto L564c92;
  #L564c82.  v3:= -v3 @kind int;
  #L564c84.  v3:= v3 + -1;
  #L564c88.  v1:= v0[v3] @kind object;
  #L564c8c.  v0[v3]:= v4 @kind object;
  #L564c90.  return v1 @kind object;
  #L564c92.  v0[v3]:= v4 @kind object;
  #L564c96.  v3:= 0I;
  #L564c98.  return v3 @kind object;
}
procedure `void` `putAll`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56524c.  v0:= "from" @kind object;
  #L565250.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L565256.  call `checkIsMutable$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L56525c.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L565262.  v2:= temp @kind object;
  #L565264.  call temp:= `l`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.l:(Ljava/util/Collection;)Z` @kind direct;
  #L56526a.  return @kind void;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L564cac.  call temp:= `removeKey$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L564cb2.  v3:= temp;
  #L564cb4.  if v3 >= 0 then goto L564cbc;
  #L564cb8.  v3:= 0I;
  #L564cba.  return v3 @kind object;
  #L564cbc.  v0:= v2.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L564cc0.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L564cc6.  v1:= v0[v3] @kind object;
  #L564cca.  call `resetAt`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L564cd0.  return v1 @kind object;
}
procedure `boolean` `removeEntry$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v3 @kind this, `java.util.Map$Entry` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5648cc.  v0:= "entry" @kind object;
  #L5648d0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5648d6.  call `checkIsMutable$kotlin_stdlib`(v3) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L5648dc.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L5648e2.  v0:= temp @kind object;
  #L5648e4.  call temp:= `g`(v3, v0) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L5648ea.  v0:= temp;
  #L5648ec.  v1:= 0I;
  #L5648ee.  if v0 >= 0 then goto L5648f4;
  #L5648f2.  return v1;
  #L5648f4.  v2:= v3.`kotlin.collections.builders.MapBuilder.h` @type ^`java.lang.Object`[] @kind object;
  #L5648f8.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L5648fe.  v2:= v2[v0] @kind object;
  #L564902.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L564908.  v4:= temp @kind object;
  #L56490a.  call temp:= `areEqual`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L564910.  v4:= temp;
  #L564912.  v2:= 1I;
  #L564914.  v4:= v4 ^~ v2 @kind int;
  #L564916.  if v4 == 0 then goto L56491c;
  #L56491a.  return v1;
  #L56491c.  call `q`(v3, v0) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @kind direct;
  #L564922.  return v2;
}
procedure `int` `removeKey$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L564bd4.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L564bda.  call temp:= `g`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L564be0.  v1:= temp;
  #L564be2.  if v1 >= 0 then goto L564bea;
  #L564be6.  v1:= -1I;
  #L564be8.  return v1;
  #L564bea.  call `q`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @kind direct;
  #L564bf0.  return v1;
}
procedure `boolean` `removeValue$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeValue$kotlin_stdlib:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L564934.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L56493a.  call temp:= `h`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.h:(Ljava/lang/Object;)I` @kind direct;
  #L564940.  v1:= temp;
  #L564942.  if v1 >= 0 then goto L56494a;
  #L564946.  v1:= 0I;
  #L564948.  return v1;
  #L56494a.  call `q`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @kind direct;
  #L564950.  v1:= 1I;
  #L564952.  return v1;
}
procedure `int` `size`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L564c04.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getSize:()I` @kind virtual;
  #L564c0a.  v0:= temp;
  #L564c0c.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.collections.builders.MapBuilder` v4 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L564d60.  v0:= new `java.lang.StringBuilder`;
  #L564d64.  call temp:= `size`(v4) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L564d6a.  v1:= temp;
  #L564d6c.  v1:= v1 * 3;
  #L564d70.  v1:= v1 + 2;
  #L564d74.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L564d7a.  v1:= "{" @kind object;
  #L564d7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L564d84.  call temp:= `entriesIterator$kotlin_stdlib`(v4) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L564d8a.  v1:= temp @kind object;
  #L564d8c.  v2:= 0I;
  #L564d8e.  call temp:= `hasNext`(v1) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @kind virtual;
  #L564d94.  v3:= temp;
  #L564d96.  if v3 == 0 then goto L564db4;
  #L564d9a.  if v2 <= 0 then goto L564da8;
  #L564d9e.  v3:= ", " @kind object;
  #L564da2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L564da8.  call `nextAppendString`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.nextAppendString:(Ljava/lang/StringBuilder;)V` @kind virtual;
  #L564dae.  v2:= v2 + 1;
  #L564db2.  goto L564d8e;
  #L564db4.  v1:= "}" @kind object;
  #L564db8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L564dbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L564dc4.  v0:= temp @kind object;
  #L564dc6.  v1:= "sb.toString()" @kind object;
  #L564dca.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L564dd0.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L564e0c.  call temp:= `getValues`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getValues:()Ljava/util/Collection;` @kind virtual;
  #L564e12.  v0:= temp @kind object;
  #L564e14.  return v0 @kind object;
}
procedure `kotlin.collections.builders.MapBuilder$ValuesItr` `valuesIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.valuesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$ValuesItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L564f08.  v0:= new `kotlin.collections.builders.MapBuilder$ValuesItr`;
  #L564f0c.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$ValuesItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L564f12.  return v0 @kind object;
}
