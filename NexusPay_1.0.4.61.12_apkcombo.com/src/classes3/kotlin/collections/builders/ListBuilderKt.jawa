record `kotlin.collections.builders.ListBuilderKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.lang.Object`[] v5 @kind object, `int` v6 , `int` v7 , `java.util.List` v8 @kind object) @signature `Lkotlin/collections/builders/ListBuilderKt;.a:([Ljava/lang/Object;IILjava/util/List;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L562dd4.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L562dda.  v0:= temp;
  #L562ddc.  v1:= 0I;
  #L562dde.  if v7 == v0 then goto L562de4;
  #L562de2.  return v1;
  #L562de4.  v0:= 0I;
  #L562de6.  v2:= 1I;
  #L562de8.  if v0 >= v7 then goto L562e12;
  #L562dec.  v3:= v6 + v0 @kind int;
  #L562df0.  v3:= v5[v3] @kind object;
  #L562df4.  call temp:= `get`(v8, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L562dfa.  v4:= temp @kind object;
  #L562dfc.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L562e02.  v3:= temp;
  #L562e04.  v2:= v2 ^~ v3 @kind int;
  #L562e06.  if v2 == 0 then goto L562e0c;
  #L562e0a.  return v1;
  #L562e0c.  v0:= v0 + 1;
  #L562e10.  goto L562de6;
  #L562e12.  return v2;
}
procedure `boolean` `access$subarrayContentEquals`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentEquals:([Ljava/lang/Object;IILjava/util/List;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L562db8.  call temp:= `a`(v0, v1, v2, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.a:([Ljava/lang/Object;IILjava/util/List;)Z` @kind static;
  #L562dbe.  v0:= temp;
  #L562dc0.  return v0;
}
procedure `int` `access$subarrayContentHashCode`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentHashCode:([Ljava/lang/Object;II)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L562e24.  call temp:= `b`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.b:([Ljava/lang/Object;II)I` @kind static;
  #L562e2a.  v0:= temp;
  #L562e2c.  return v0;
}
procedure `java.lang.String` `access$subarrayContentToString`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentToString:([Ljava/lang/Object;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L562f00.  call temp:= `c`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.c:([Ljava/lang/Object;II)Ljava/lang/String;` @kind static;
  #L562f06.  v0:= temp @kind object;
  #L562f08.  return v0 @kind object;
}
procedure `java.lang.Object`[] `arrayOfUninitializedElements`(`int` v1 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L562e80.  if v1 < 0 then goto L562e88;
  #L562e84.  v0:= 1I;
  #L562e86.  goto L562e8a;
  #L562e88.  v0:= 0I;
  #L562e8a.  if v0 == 0 then goto L562e94;
  #L562e8e.  v1:= new `java.lang.Object`[v1];
  #L562e92.  return v1 @kind object;
  #L562e94.  v1:= new `java.lang.IllegalArgumentException`;
  #L562e98.  v0:= "capacity must be non-negative." @kind object;
  #L562e9c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L562ea2.  v0:= temp @kind object;
  #L562ea4.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L562eaa.  throw v1;
}
procedure `int` `b`(`java.lang.Object`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.b:([Ljava/lang/Object;II)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L562e40.  v0:= 0I;
  #L562e42.  v1:= 1I;
  #L562e44.  v2:= 0I;
  #L562e46.  if v2 >= v6 then goto L562e6e;
  #L562e4a.  v3:= v5 + v2 @kind int;
  #L562e4e.  v3:= v4[v3] @kind object;
  #L562e52.  v1:= v1 * 31;
  #L562e56.  if v3 == 0 then goto L562e64;
  #L562e5a.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L562e60.  v3:= temp;
  #L562e62.  goto L562e66;
  #L562e64.  v3:= 0I;
  #L562e66.  v1:= v1 + v3 @kind int;
  #L562e68.  v2:= v2 + 1;
  #L562e6c.  goto L562e46;
  #L562e6e.  return v1;
}
procedure `java.lang.String` `c`(`java.lang.Object`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.c:([Ljava/lang/Object;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L562f1c.  v0:= new `java.lang.StringBuilder`;
  #L562f20.  v1:= v5 * 3;
  #L562f24.  v1:= v1 + 2;
  #L562f28.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L562f2e.  v1:= "[" @kind object;
  #L562f32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f38.  v1:= 0I;
  #L562f3a.  if v1 >= v5 then goto L562f60;
  #L562f3e.  if v1 <= 0 then goto L562f4c;
  #L562f42.  v2:= ", " @kind object;
  #L562f46.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f4c.  v2:= v4 + v1 @kind int;
  #L562f50.  v2:= v3[v2] @kind object;
  #L562f54.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f5a.  v1:= v1 + 1;
  #L562f5e.  goto L562f3a;
  #L562f60.  v3:= "]" @kind object;
  #L562f64.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f6a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562f70.  v3:= temp @kind object;
  #L562f72.  v4:= "sb.toString()" @kind object;
  #L562f76.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L562f7c.  return v3 @kind object;
}
procedure `java.lang.Object`[] `copyOfUninitializedElements`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L562ebc.  v0:= "$this$copyOfUninitializedElements" @kind object;
  #L562ec0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L562ec6.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L562ecc.  v1:= temp @kind object;
  #L562ece.  v2:= "java.util.Arrays.copyOf(this, newSize)" @kind object;
  #L562ed2.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L562ed8.  if v1 == 0 then goto L562ede;
  #L562edc.  return v1 @kind object;
  #L562ede.  v1:= new `java.lang.NullPointerException`;
  #L562ee2.  v2:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L562ee6.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L562eec.  throw v1;
}
procedure `void` `resetAt`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L562f90.  v0:= "$this$resetAt" @kind object;
  #L562f94.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L562f9a.  v0:= 0I;
  #L562f9c.  v1[v2]:= v0 @kind object;
  #L562fa0.  return @kind void;
}
procedure `void` `resetRange`(`java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L562fb4.  v0:= "$this$resetRange" @kind object;
  #L562fb8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L562fbe.  if v2 >= v3 then goto L562fce;
  #L562fc2.  call `resetAt`(v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L562fc8.  v2:= v2 + 1;
  #L562fcc.  goto L562fbe;
  #L562fce.  return @kind void;
}
