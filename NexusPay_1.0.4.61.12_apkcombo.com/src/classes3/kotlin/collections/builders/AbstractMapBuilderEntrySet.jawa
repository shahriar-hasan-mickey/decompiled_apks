record `kotlin.collections.builders.AbstractMapBuilderEntrySet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.collections.AbstractMutableSet` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v0 @kind this) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L562b64.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @kind direct;
  #L562b6a.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L562acc.  v0:= instanceof @variable v2 @type ^`java.util.Map$Entry` @kind boolean;
  #L562ad0.  if v0 == 0 then goto L562ae2;
  #L562ad4.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L562ad8.  call temp:= `contains`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L562ade.  v2:= temp;
  #L562ae0.  return v2;
  #L562ae2.  v2:= 0I;
  #L562ae4.  return v2;
}
procedure `boolean` `contains`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L562af8.  v0:= "element" @kind object;
  #L562afc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L562b02.  call temp:= `containsEntry`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.containsEntry:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L562b08.  v2:= temp;
  #L562b0a.  return v2;
}
procedure `boolean` `containsEntry`(`java.util.Map$Entry` v0 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.containsEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `remove`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L562b1c.  v0:= instanceof @variable v2 @type ^`java.util.Map$Entry` @kind boolean;
  #L562b20.  if v0 == 0 then goto L562b32;
  #L562b24.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L562b28.  call temp:= `remove`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L562b2e.  v2:= temp;
  #L562b30.  return v2;
  #L562b32.  v2:= 0I;
  #L562b34.  return v2;
}
procedure `boolean` `remove`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v0 @kind this, `java.util.Map$Entry` v1 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;

  #L562b48.  call temp:= `remove`(v0, v1) @signature `Ljava/util/AbstractSet;.remove:(Ljava/lang/Object;)Z` @kind super;
  #L562b4e.  v1:= temp;
  #L562b50.  return v1;
}
