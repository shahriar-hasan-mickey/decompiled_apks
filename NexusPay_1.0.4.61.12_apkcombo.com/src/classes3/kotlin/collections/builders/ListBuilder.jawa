record `kotlin.collections.builders.ListBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractMutableList` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface, `kotlin.jvm.internal.markers.KMutableList` @kind interface {
  `java.lang.Object`[] `kotlin.collections.builders.ListBuilder.a` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.ListBuilder.b` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.ListBuilder.c` @AccessFlag PRIVATE;
  `boolean` `kotlin.collections.builders.ListBuilder.d` @AccessFlag PRIVATE;
  `kotlin.collections.builders.ListBuilder` `kotlin.collections.builders.ListBuilder.e` @AccessFlag PRIVATE_FINAL;
  `kotlin.collections.builders.ListBuilder` `kotlin.collections.builders.ListBuilder.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L563660.  v0:= 10I;
  #L563664.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:(I)V` @kind direct;
  #L56366a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.ListBuilder` v7 @kind this, `int` v8 ) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L56367c.  call temp:= `arrayOfUninitializedElements`(v8) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @kind static;
  #L563682.  v1:= temp @kind object;
  #L563684.  v2:= 0I;
  #L563686.  v3:= 0I;
  #L563688.  v4:= 0I;
  #L56368a.  v5:= 0I;
  #L56368c.  v6:= 0I;
  #L56368e.  v0:= v7 @kind object;
  #L563690.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:([Ljava/lang/Object;IIZLkotlin/collections/builders/ListBuilder;Lkotlin/collections/builders/ListBuilder;)V` @kind direct;
  #L563696.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.ListBuilder` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `kotlin.collections.builders.ListBuilder` v5 @kind object, `kotlin.collections.builders.ListBuilder` v6 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:([Ljava/lang/Object;IIZLkotlin/collections/builders/ListBuilder;Lkotlin/collections/builders/ListBuilder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L5636a8.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractMutableList;.<init>:()V` @kind direct;
  #L5636ae.  v0.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L5636b2.  v0.`kotlin.collections.builders.ListBuilder.b` @type ^`int` := v2;
  #L5636b6.  v0.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v3;
  #L5636ba.  v0.`kotlin.collections.builders.ListBuilder.d` @type ^`boolean` := v4 @kind boolean;
  #L5636be.  v0.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` := v5 @kind object;
  #L5636c2.  v0.`kotlin.collections.builders.ListBuilder.f` @type ^`kotlin.collections.builders.ListBuilder` := v6 @kind object;
  #L5636c6.  return @kind void;
}
procedure `java.lang.Object`[] `access$getArray$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.access$getArray$p:(Lkotlin/collections/builders/ListBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L563470.  v0:= v0.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563474.  return v0 @kind object;
}
procedure `int` `access$getLength$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.access$getLength$p:(Lkotlin/collections/builders/ListBuilder;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L5631cc.  v0:= v0.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5631d0.  return v0;
}
procedure `int` `access$getOffset$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.access$getOffset$p:(Lkotlin/collections/builders/ListBuilder;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L5631e4.  v0:= v0.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L5631e8.  return v0;
}
procedure `void` `access$setArray$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.access$setArray$p:(Lkotlin/collections/builders/ListBuilder;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L5636d8.  v0.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L5636dc.  return @kind void;
}
procedure `void` `access$setLength$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object, `int` v1 ) @signature `Lkotlin/collections/builders/ListBuilder;.access$setLength$p:(Lkotlin/collections/builders/ListBuilder;I)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L5636f0.  v0.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v1;
  #L5636f4.  return @kind void;
}
procedure `void` `access$setOffset$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object, `int` v1 ) @signature `Lkotlin/collections/builders/ListBuilder;.access$setOffset$p:(Lkotlin/collections/builders/ListBuilder;I)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L563708.  v0.`kotlin.collections.builders.ListBuilder.b` @type ^`int` := v1;
  #L56370c.  return @kind void;
}
procedure `void` `b`(`kotlin.collections.builders.ListBuilder` v4 @kind this, `int` v5 , `java.util.Collection` v6 @kind object, `int` v7 ) @signature `Lkotlin/collections/builders/ListBuilder;.b:(ILjava/util/Collection;I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L563754.  v0:= v4.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L563758.  if v0 == 0 then goto L56377a;
  #L56375c.  call `b`(v0, v5, v6, v7) @signature `Lkotlin/collections/builders/ListBuilder;.b:(ILjava/util/Collection;I)V` @kind direct;
  #L563762.  v5:= v4.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L563766.  v5:= v5.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L56376a.  v4.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L56376e.  v5:= v4.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563772.  v5:= v5 + v7 @kind int;
  #L563774.  v4.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v5;
  #L563778.  goto L5637a8;
  #L56377a.  call `h`(v4, v5, v7) @signature `Lkotlin/collections/builders/ListBuilder;.h:(II)V` @kind direct;
  #L563780.  v0:= 0I;
  #L563782.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L563788.  v6:= temp @kind object;
  #L56378a.  if v0 >= v7 then goto L5637a8;
  #L56378e.  v1:= v4.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563792.  v2:= v5 + v0 @kind int;
  #L563796.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56379c.  v3:= temp @kind object;
  #L56379e.  v1[v2]:= v3 @kind object;
  #L5637a2.  v0:= v0 + 1;
  #L5637a6.  goto L56378a;
  #L5637a8.  return @kind void;
}
procedure `void` `c`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.c:(ILjava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L5637bc.  v0:= v2.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L5637c0.  v1:= 1I;
  #L5637c2.  if v0 == 0 then goto L5637e4;
  #L5637c6.  call `c`(v0, v3, v4) @signature `Lkotlin/collections/builders/ListBuilder;.c:(ILjava/lang/Object;)V` @kind direct;
  #L5637cc.  v3:= v2.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L5637d0.  v3:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L5637d4.  v2.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] := v3 @kind object;
  #L5637d8.  v3:= v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5637dc.  v3:= v3 + v1 @kind int;
  #L5637de.  v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v3;
  #L5637e2.  goto L5637f2;
  #L5637e4.  call `h`(v2, v3, v1) @signature `Lkotlin/collections/builders/ListBuilder;.h:(II)V` @kind direct;
  #L5637ea.  v0:= v2.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L5637ee.  v0[v3]:= v4 @kind object;
  #L5637f2.  return @kind void;
}
procedure `void` `d`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L563804.  v0:= v1.`kotlin.collections.builders.ListBuilder.d` @type ^`boolean` @kind boolean;
  #L563808.  if v0 != 0 then goto L56381e;
  #L56380c.  v0:= v1.`kotlin.collections.builders.ListBuilder.f` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L563810.  if v0 == 0 then goto L56381c;
  #L563814.  v0:= v0.`kotlin.collections.builders.ListBuilder.d` @type ^`boolean` @kind boolean;
  #L563818.  if v0 != 0 then goto L56381e;
  #L56381c.  return @kind void;
  #L56381e.  v0:= new `java.lang.UnsupportedOperationException`;
  #L563822.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L563828.  throw v0;
}
procedure `boolean` `e`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.e:(Ljava/util/List;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5630a0.  v0:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L5630a4.  v1:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L5630a8.  v2:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5630ac.  call temp:= `access$subarrayContentEquals`(v0, v1, v2, v4) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentEquals:([Ljava/lang/Object;IILjava/util/List;)Z` @kind static;
  #L5630b2.  v4:= temp;
  #L5630b4.  return v4;
}
procedure `void` `f`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilder;.f:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L563864.  v0:= v2.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L563868.  if v0 != 0 then goto L563896;
  #L56386c.  v0:= v2.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563870.  v1:= length @variable v0;
  #L563872.  if v3 <= v1 then goto L563894;
  #L563876.  v1:= `@@kotlin.collections.ArrayDeque.Companion` @type ^`kotlin.collections.ArrayDeque$Companion` @kind object;
  #L56387a.  v0:= length @variable v0;
  #L56387c.  call temp:= `newCapacity$kotlin_stdlib`(v1, v0, v3) @signature `Lkotlin/collections/ArrayDeque$Companion;.newCapacity$kotlin_stdlib:(II)I` @kind virtual;
  #L563882.  v3:= temp;
  #L563884.  v0:= v2.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563888.  call temp:= `copyOfUninitializedElements`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L56388e.  v3:= temp @kind object;
  #L563890.  v2.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] := v3 @kind object;
  #L563894.  return @kind void;
  #L563896.  v3:= new `java.lang.IllegalStateException`;
  #L56389a.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L5638a0.  throw v3;
}
procedure `void` `g`(`kotlin.collections.builders.ListBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilder;.g:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L5638b4.  v0:= v1.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5638b8.  v0:= v0 + v2 @kind int;
  #L5638ba.  call `f`(v1, v0) @signature `Lkotlin/collections/builders/ListBuilder;.f:(I)V` @kind direct;
  #L5638c0.  return @kind void;
}
procedure `void` `h`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/builders/ListBuilder;.h:(II)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5638d4.  call `g`(v3, v5) @signature `Lkotlin/collections/builders/ListBuilder;.g:(I)V` @kind direct;
  #L5638da.  v0:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L5638de.  v1:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L5638e2.  v2:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5638e6.  v1:= v1 + v2 @kind int;
  #L5638e8.  v2:= v4 + v5 @kind int;
  #L5638ec.  call temp:= `copyInto`(v0, v0, v2, v4, v1) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L5638f2.  v4:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5638f6.  v4:= v4 + v5 @kind int;
  #L5638f8.  v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v4;
  #L5638fc.  return @kind void;
}
procedure `java.lang.Object` `i`(`kotlin.collections.builders.ListBuilder` v5 @kind this, `int` v6 ) @signature `Lkotlin/collections/builders/ListBuilder;.i:(I)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5633c4.  v0:= v5.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L5633c8.  if v0 == 0 then goto L5633e2;
  #L5633cc.  call temp:= `i`(v0, v6) @signature `Lkotlin/collections/builders/ListBuilder;.i:(I)Ljava/lang/Object;` @kind direct;
  #L5633d2.  v6:= temp @kind object;
  #L5633d4.  v0:= v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5633d8.  v0:= v0 + -1;
  #L5633dc.  v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v0;
  #L5633e0.  return v6 @kind object;
  #L5633e2.  v0:= v5.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L5633e6.  v1:= v0[v6] @kind object;
  #L5633ea.  v2:= v6 + 1;
  #L5633ee.  v3:= v5.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L5633f2.  v4:= v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5633f6.  v3:= v3 + v4 @kind int;
  #L5633f8.  call temp:= `copyInto`(v0, v0, v6, v2, v3) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L5633fe.  v6:= v5.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563402.  v0:= v5.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563406.  v2:= v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56340a.  v0:= v0 + v2 @kind int;
  #L56340c.  v0:= v0 + -1;
  #L563410.  call `resetAt`(v6, v0) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L563416.  v6:= v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56341a.  v6:= v6 + -1;
  #L56341e.  v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v6;
  #L563422.  return v1 @kind object;
}
procedure `void` `j`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/builders/ListBuilder;.j:(II)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L563910.  v0:= v3.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L563914.  if v0 == 0 then goto L563920;
  #L563918.  call `j`(v0, v4, v5) @signature `Lkotlin/collections/builders/ListBuilder;.j:(II)V` @kind direct;
  #L56391e.  goto L563944;
  #L563920.  v0:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563924.  v1:= v4 + v5 @kind int;
  #L563928.  v2:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56392c.  call temp:= `copyInto`(v0, v0, v4, v1, v2) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L563932.  v4:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563936.  v0:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56393a.  v1:= v0 - v5 @kind int;
  #L56393e.  call `resetRange`(v4, v1, v0) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L563944.  v4:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563948.  v4:= v4 - v5 @kind int;
  #L56394a.  v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v4;
  #L56394e.  return @kind void;
}
procedure `int` `k`(`kotlin.collections.builders.ListBuilder` v5 @kind this, `int` v6 , `int` v7 , `java.util.Collection` v8 @kind object, `boolean` v9 ) @signature `Lkotlin/collections/builders/ListBuilder;.k:(IILjava/util/Collection;Z)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5632c0.  v0:= v5.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L5632c4.  if v0 == 0 then goto L5632dc;
  #L5632c8.  call temp:= `k`(v0, v6, v7, v8, v9) @signature `Lkotlin/collections/builders/ListBuilder;.k:(IILjava/util/Collection;Z)I` @kind direct;
  #L5632ce.  v6:= temp;
  #L5632d0.  v7:= v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5632d4.  v7:= v7 - v6 @kind int;
  #L5632d6.  v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v7;
  #L5632da.  return v6;
  #L5632dc.  v0:= 0I;
  #L5632de.  v1:= 0I;
  #L5632e0.  if v0 >= v7 then goto L56331c;
  #L5632e4.  v2:= v5.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L5632e8.  v3:= v6 + v0 @kind int;
  #L5632ec.  v2:= v2[v3] @kind object;
  #L5632f0.  call temp:= `contains`(v8, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L5632f6.  v2:= temp;
  #L5632f8.  if v2 != v9 then goto L563316;
  #L5632fc.  v2:= v5.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563300.  v4:= v1 + 1;
  #L563304.  v1:= v1 + v6 @kind int;
  #L563306.  v0:= v0 + 1;
  #L56330a.  v3:= v2[v3] @kind object;
  #L56330e.  v2[v1]:= v3 @kind object;
  #L563312.  v1:= v4;
  #L563314.  goto L5632e0;
  #L563316.  v0:= v0 + 1;
  #L56331a.  goto L5632e0;
  #L56331c.  v8:= v7 - v1 @kind int;
  #L563320.  v9:= v5.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563324.  v7:= v7 + v6 @kind int;
  #L563326.  v0:= v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56332a.  v6:= v6 + v1 @kind int;
  #L56332c.  call temp:= `copyInto`(v9, v9, v6, v7, v0) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L563332.  v6:= v5.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563336.  v7:= v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56333a.  v9:= v7 - v8 @kind int;
  #L56333e.  call `resetRange`(v6, v9, v7) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L563344.  v6:= v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563348.  v6:= v6 - v8 @kind int;
  #L56334a.  v5.`kotlin.collections.builders.ListBuilder.c` @type ^`int` := v6;
  #L56334e.  return v8;
}
procedure `void` `add`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563720.  call `d`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L563726.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L56372a.  v1:= v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56372e.  call `checkPositionIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkPositionIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L563734.  v0:= v2.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563738.  v0:= v0 + v3 @kind int;
  #L56373a.  call `c`(v2, v0, v4) @signature `Lkotlin/collections/builders/ListBuilder;.c:(ILjava/lang/Object;)V` @kind direct;
  #L563740.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L562fe0.  call `d`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L562fe6.  v0:= v2.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L562fea.  v1:= v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L562fee.  v0:= v0 + v1 @kind int;
  #L562ff0.  call `c`(v2, v0, v3) @signature `Lkotlin/collections/builders/ListBuilder;.c:(ILjava/lang/Object;)V` @kind direct;
  #L562ff6.  v3:= 1I;
  #L562ff8.  return v3;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 , `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L56300c.  v0:= "elements" @kind object;
  #L563010.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L563016.  call `d`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L56301c.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L563020.  v1:= v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563024.  call `checkPositionIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkPositionIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L56302a.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L563030.  v0:= temp;
  #L563032.  v1:= v2.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563036.  v1:= v1 + v3 @kind int;
  #L563038.  call `b`(v2, v1, v4, v0) @signature `Lkotlin/collections/builders/ListBuilder;.b:(ILjava/util/Collection;I)V` @kind direct;
  #L56303e.  if v0 <= 0 then goto L563046;
  #L563042.  v3:= 1I;
  #L563044.  goto L563048;
  #L563046.  v3:= 0I;
  #L563048.  return v3;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L56305c.  v0:= "elements" @kind object;
  #L563060.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L563066.  call `d`(v3) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L56306c.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L563072.  v0:= temp;
  #L563074.  v1:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563078.  v2:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56307c.  v1:= v1 + v2 @kind int;
  #L56307e.  call `b`(v3, v1, v4, v0) @signature `Lkotlin/collections/builders/ListBuilder;.b:(ILjava/util/Collection;I)V` @kind direct;
  #L563084.  if v0 <= 0 then goto L56308c;
  #L563088.  v4:= 1I;
  #L56308a.  goto L56308e;
  #L56308c.  v4:= 0I;
  #L56308e.  return v4;
}
procedure `java.util.List` `build`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.build:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L563590.  v0:= v1.`kotlin.collections.builders.ListBuilder.e` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L563594.  if v0 != 0 then goto L5635a6;
  #L563598.  call `d`(v1) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L56359e.  v0:= 1I;
  #L5635a0.  v1.`kotlin.collections.builders.ListBuilder.d` @type ^`boolean` := v0 @kind boolean;
  #L5635a4.  return v1 @kind object;
  #L5635a6.  v0:= new `java.lang.IllegalStateException`;
  #L5635aa.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L5635b0.  throw v0;
}
procedure `void` `clear`(`kotlin.collections.builders.ListBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L56383c.  call `d`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L563842.  v0:= v2.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563846.  v1:= v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56384a.  call `j`(v2, v0, v1) @signature `Lkotlin/collections/builders/ListBuilder;.j:(II)V` @kind direct;
  #L563850.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.collections.builders.ListBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5630c8.  if v2 == v1 then goto L5630ea;
  #L5630cc.  v0:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L5630d0.  if v0 == 0 then goto L5630e6;
  #L5630d4.  v2:= (`java.util.List`) v2 @kind object;
  #L5630d8.  call temp:= `e`(v1, v2) @signature `Lkotlin/collections/builders/ListBuilder;.e:(Ljava/util/List;)Z` @kind direct;
  #L5630de.  v2:= temp;
  #L5630e0.  if v2 == 0 then goto L5630e6;
  #L5630e4.  goto L5630ea;
  #L5630e6.  v2:= 0I;
  #L5630e8.  goto L5630ec;
  #L5630ea.  v2:= 1I;
  #L5630ec.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilder;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563360.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L563364.  v1:= v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563368.  call `checkElementIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkElementIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L56336e.  v0:= v2.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563372.  v1:= v2.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563376.  v1:= v1 + v3 @kind int;
  #L563378.  v3:= v0[v1] @kind object;
  #L56337c.  return v3 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5631fc.  v0:= v1.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563200.  return v0;
}
procedure `int` `hashCode`(`kotlin.collections.builders.ListBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L563214.  v0:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563218.  v1:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L56321c.  v2:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563220.  call temp:= `access$subarrayContentHashCode`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentHashCode:([Ljava/lang/Object;II)I` @kind static;
  #L563226.  v0:= temp;
  #L563228.  return v0;
}
procedure `int` `indexOf`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L56323c.  v0:= 0I;
  #L56323e.  v1:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563242.  if v0 >= v1 then goto L563268;
  #L563246.  v1:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L56324a.  v2:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L56324e.  v2:= v2 + v0 @kind int;
  #L563250.  v1:= v1[v2] @kind object;
  #L563254.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56325a.  v1:= temp;
  #L56325c.  if v1 == 0 then goto L563262;
  #L563260.  return v0;
  #L563262.  v0:= v0 + 1;
  #L563266.  goto L56323e;
  #L563268.  v4:= -1I;
  #L56326a.  return v4;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L563100.  v0:= v1.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563104.  if v0 != 0 then goto L56310c;
  #L563108.  v0:= 1I;
  #L56310a.  goto L56310e;
  #L56310c.  v0:= 0I;
  #L56310e.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.ListBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563570.  v0:= new `kotlin.collections.builders.ListBuilder$a`;
  #L563574.  v1:= 0I;
  #L563576.  call `<init>`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilder$a;.<init>:(Lkotlin/collections/builders/ListBuilder;I)V` @kind direct;
  #L56357c.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L56327c.  v0:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563280.  v0:= v0 + -1;
  #L563284.  if v0 < 0 then goto L5632aa;
  #L563288.  v1:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L56328c.  v2:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563290.  v2:= v2 + v0 @kind int;
  #L563292.  v1:= v1[v2] @kind object;
  #L563296.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56329c.  v1:= temp;
  #L56329e.  if v1 == 0 then goto L5632a4;
  #L5632a2.  return v0;
  #L5632a4.  v0:= v0 + -1;
  #L5632a8.  goto L563284;
  #L5632aa.  v4:= -1I;
  #L5632ac.  return v4;
}
procedure `java.util.ListIterator` `listIterator`(`kotlin.collections.builders.ListBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563614.  v0:= new `kotlin.collections.builders.ListBuilder$a`;
  #L563618.  v1:= 0I;
  #L56361a.  call `<init>`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilder$a;.<init>:(Lkotlin/collections/builders/ListBuilder;I)V` @kind direct;
  #L563620.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilder;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563634.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L563638.  v1:= v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56363c.  call `checkPositionIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkPositionIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L563642.  v0:= new `kotlin.collections.builders.ListBuilder$a`;
  #L563646.  call `<init>`(v0, v2, v3) @signature `Lkotlin/collections/builders/ListBuilder$a;.<init>:(Lkotlin/collections/builders/ListBuilder;I)V` @kind direct;
  #L56364c.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.ListBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L563120.  call `d`(v0) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L563126.  call temp:= `indexOf`(v0, v1) @signature `Lkotlin/collections/builders/ListBuilder;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L56312c.  v1:= temp;
  #L56312e.  if v1 < 0 then goto L563138;
  #L563132.  call temp:= `remove`(v0, v1) @signature `Lkotlin/collections/AbstractMutableList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L563138.  if v1 < 0 then goto L563140;
  #L56313c.  v1:= 1I;
  #L56313e.  goto L563142;
  #L563140.  v1:= 0I;
  #L563142.  return v1;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L563154.  v0:= "elements" @kind object;
  #L563158.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56315e.  call `d`(v3) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L563164.  v0:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563168.  v1:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56316c.  v2:= 0I;
  #L56316e.  call temp:= `k`(v3, v0, v1, v4, v2) @signature `Lkotlin/collections/builders/ListBuilder;.k:(IILjava/util/Collection;Z)I` @kind direct;
  #L563174.  v4:= temp;
  #L563176.  if v4 <= 0 then goto L56317c;
  #L56317a.  v2:= 1I;
  #L56317c.  return v2;
}
procedure `java.lang.Object` `removeAt`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilder;.removeAt:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L563390.  call `d`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L563396.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L56339a.  v1:= v2.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56339e.  call `checkElementIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkElementIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L5633a4.  v0:= v2.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L5633a8.  v0:= v0 + v3 @kind int;
  #L5633aa.  call temp:= `i`(v2, v0) @signature `Lkotlin/collections/builders/ListBuilder;.i:(I)Ljava/lang/Object;` @kind direct;
  #L5633b0.  v3:= temp @kind object;
  #L5633b2.  return v3 @kind object;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L563190.  v0:= "elements" @kind object;
  #L563194.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56319a.  call `d`(v3) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L5631a0.  v0:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L5631a4.  v1:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5631a8.  v2:= 1I;
  #L5631aa.  call temp:= `k`(v3, v0, v1, v4, v2) @signature `Lkotlin/collections/builders/ListBuilder;.k:(IILjava/util/Collection;Z)I` @kind direct;
  #L5631b0.  v4:= temp;
  #L5631b2.  if v4 <= 0 then goto L5631b8;
  #L5631b6.  goto L5631ba;
  #L5631b8.  v2:= 0I;
  #L5631ba.  return v2;
}
procedure `java.lang.Object` `set`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L563434.  call `d`(v3) @signature `Lkotlin/collections/builders/ListBuilder;.d:()V` @kind direct;
  #L56343a.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L56343e.  v1:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563442.  call `checkElementIndex$kotlin_stdlib`(v0, v4, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkElementIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L563448.  v0:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L56344c.  v1:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563450.  v2:= v1 + v4 @kind int;
  #L563454.  v2:= v0[v2] @kind object;
  #L563458.  v1:= v1 + v4 @kind int;
  #L56345a.  v0[v1]:= v5 @kind object;
  #L56345e.  return v2 @kind object;
}
procedure `java.util.List` `subList`(`kotlin.collections.builders.ListBuilder` v9 @kind this, `int` v10 , `int` v11 ) @signature `Lkotlin/collections/builders/ListBuilder;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L5635c4.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L5635c8.  v1:= v9.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5635cc.  call `checkRangeIndexes$kotlin_stdlib`(v0, v10, v11, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkRangeIndexes$kotlin_stdlib:(III)V` @kind virtual;
  #L5635d2.  v0:= new `kotlin.collections.builders.ListBuilder`;
  #L5635d6.  v3:= v9.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L5635da.  v1:= v9.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L5635de.  v4:= v1 + v10 @kind int;
  #L5635e2.  v5:= v11 - v10 @kind int;
  #L5635e6.  v6:= v9.`kotlin.collections.builders.ListBuilder.d` @type ^`boolean` @kind boolean;
  #L5635ea.  v10:= v9.`kotlin.collections.builders.ListBuilder.f` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L5635ee.  if v10 == 0 then goto L5635f6;
  #L5635f2.  v8:= v10 @kind object;
  #L5635f4.  goto L5635f8;
  #L5635f6.  v8:= v9 @kind object;
  #L5635f8.  v2:= v0 @kind object;
  #L5635fa.  v7:= v9 @kind object;
  #L5635fc.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:([Ljava/lang/Object;IIZLkotlin/collections/builders/ListBuilder;Lkotlin/collections/builders/ListBuilder;)V` @kind direct;
  #L563602.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.builders.ListBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L563488.  v0:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L56348c.  v1:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563490.  v2:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563494.  v2:= v2 + v1 @kind int;
  #L563496.  call temp:= `copyOfRange`(v0, v1, v2) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;` @kind static;
  #L56349c.  v0:= temp @kind object;
  #L56349e.  if v0 == 0 then goto L5634a4;
  #L5634a2.  return v0 @kind object;
  #L5634a4.  v0:= new `java.lang.NullPointerException`;
  #L5634a8.  v1:= "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>" @kind object;
  #L5634ac.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5634b2.  throw v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.builders.ListBuilder` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5634c4.  v0:= "destination" @kind object;
  #L5634c8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5634ce.  v0:= length @variable v5;
  #L5634d0.  v1:= v4.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L5634d4.  if v0 >= v1 then goto L5634fe;
  #L5634d8.  v0:= v4.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L5634dc.  v2:= v4.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L5634e0.  v1:= v1 + v2 @kind int;
  #L5634e2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L5634e8.  v5:= temp @kind object;
  #L5634ea.  call temp:= `copyOfRange`(v0, v2, v1, v5) @signature `Ljava/util/Arrays;.copyOfRange:([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;` @kind static;
  #L5634f0.  v5:= temp @kind object;
  #L5634f2.  v0:= "java.util.Arrays.copyOfR…h, destination.javaClass)" @kind object;
  #L5634f6.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5634fc.  return v5 @kind object;
  #L5634fe.  v0:= v4.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L563502.  if v0 == 0 then goto L563526;
  #L563506.  v2:= 0I;
  #L563508.  v3:= v4.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L56350c.  v1:= v1 + v3 @kind int;
  #L56350e.  call temp:= `copyInto`(v0, v5, v2, v3, v1) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L563514.  v0:= length @variable v5;
  #L563516.  v1:= v4.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L56351a.  if v0 <= v1 then goto L563524;
  #L56351e.  v0:= 0I;
  #L563520.  v5[v1]:= v0 @kind object;
  #L563524.  return v5 @kind object;
  #L563526.  v5:= new `java.lang.NullPointerException`;
  #L56352a.  v0:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L56352e.  call `<init>`(v5, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L563534.  throw v5;
}
procedure `java.lang.String` `toString`(`kotlin.collections.builders.ListBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L563548.  v0:= v3.`kotlin.collections.builders.ListBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L56354c.  v1:= v3.`kotlin.collections.builders.ListBuilder.b` @type ^`int`;
  #L563550.  v2:= v3.`kotlin.collections.builders.ListBuilder.c` @type ^`int`;
  #L563554.  call temp:= `access$subarrayContentToString`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentToString:([Ljava/lang/Object;II)Ljava/lang/String;` @kind static;
  #L56355a.  v0:= temp @kind object;
  #L56355c.  return v0 @kind object;
}
