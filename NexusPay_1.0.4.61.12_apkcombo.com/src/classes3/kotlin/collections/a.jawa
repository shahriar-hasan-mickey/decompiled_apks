record `kotlin.collections.a` @kind class @AccessFlag FINAL extends `java.util.Collection` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `java.lang.Object`[] `kotlin.collections.a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `kotlin.collections.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.a` v1 @kind this, `java.lang.Object`[] v2 @kind object, `boolean` v3 ) @signature `Lkotlin/collections/a;.<init>:([Ljava/lang/Object;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L533a1c.  v0:= "values" @kind object;
  #L533a20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L533a26.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L533a2c.  v1.`kotlin.collections.a.a` @type ^`java.lang.Object`[] := v2 @kind object;
  #L533a30.  v1.`kotlin.collections.a.b` @type ^`boolean` := v3 @kind boolean;
  #L533a34.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/a;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L53384c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L533850.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L533854.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53385a.  throw v2;
}
procedure `boolean` `addAll`(`kotlin.collections.a` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/a;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L53386c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L533870.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L533874.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53387a.  throw v2;
}
procedure `int` `b`(`kotlin.collections.a` v1 @kind this) @signature `Lkotlin/collections/a;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L533988.  v0:= v1.`kotlin.collections.a.a` @type ^`java.lang.Object`[] @kind object;
  #L53398c.  v0:= length @variable v0;
  #L53398e.  return v0;
}
procedure `void` `clear`(`kotlin.collections.a` v2 @kind this) @signature `Lkotlin/collections/a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L533a48.  v0:= new `java.lang.UnsupportedOperationException`;
  #L533a4c.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L533a50.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L533a56.  throw v0;
}
procedure `boolean` `contains`(`kotlin.collections.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/a;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L53388c.  v0:= v1.`kotlin.collections.a.a` @type ^`java.lang.Object`[] @kind object;
  #L533890.  call temp:= `contains`(v0, v2) @signature `Lkotlin/collections/ArraysKt___ArraysKt;.contains:([Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L533896.  v2:= temp;
  #L533898.  return v2;
}
procedure `boolean` `containsAll`(`kotlin.collections.a` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/a;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5338ac.  v0:= "elements" @kind object;
  #L5338b0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5338b6.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L5338bc.  v0:= temp;
  #L5338be.  v1:= 1I;
  #L5338c0.  if v0 == 0 then goto L5338c6;
  #L5338c4.  goto L5338f0;
  #L5338c6.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5338cc.  v3:= temp @kind object;
  #L5338ce.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5338d4.  v0:= temp;
  #L5338d6.  if v0 == 0 then goto L5338f0;
  #L5338da.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5338e0.  v0:= temp @kind object;
  #L5338e2.  call temp:= `contains`(v2, v0) @signature `Lkotlin/collections/a;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L5338e8.  v0:= temp;
  #L5338ea.  if v0 != 0 then goto L5338ce;
  #L5338ee.  v1:= 0I;
  #L5338f0.  return v1;
}
procedure `boolean` `isEmpty`(`kotlin.collections.a` v1 @kind this) @signature `Lkotlin/collections/a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L533904.  v0:= v1.`kotlin.collections.a.a` @type ^`java.lang.Object`[] @kind object;
  #L533908.  v0:= length @variable v0;
  #L53390a.  if v0 != 0 then goto L533912;
  #L53390e.  v0:= 1I;
  #L533910.  goto L533914;
  #L533912.  v0:= 0I;
  #L533914.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.a` v1 @kind this) @signature `Lkotlin/collections/a;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5339fc.  v0:= v1.`kotlin.collections.a.a` @type ^`java.lang.Object`[] @kind object;
  #L533a00.  call temp:= `iterator`(v0) @signature `Lkotlin/jvm/internal/ArrayIteratorKt;.iterator:([Ljava/lang/Object;)Ljava/util/Iterator;` @kind static;
  #L533a06.  v0:= temp @kind object;
  #L533a08.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/a;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L533928.  v2:= new `java.lang.UnsupportedOperationException`;
  #L53392c.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L533930.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L533936.  throw v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.a` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/a;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L533948.  v2:= new `java.lang.UnsupportedOperationException`;
  #L53394c.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L533950.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L533956.  throw v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.a` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/a;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L533968.  v2:= new `java.lang.UnsupportedOperationException`;
  #L53396c.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L533970.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L533976.  throw v2;
}
procedure `int` `size`(`kotlin.collections.a` v1 @kind this) @signature `Lkotlin/collections/a;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L5339a0.  call temp:= `b`(v1) @signature `Lkotlin/collections/a;.b:()I` @kind virtual;
  #L5339a6.  v0:= temp;
  #L5339a8.  return v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.a` v2 @kind this) @signature `Lkotlin/collections/a;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L5339bc.  v0:= v2.`kotlin.collections.a.a` @type ^`java.lang.Object`[] @kind object;
  #L5339c0.  v1:= v2.`kotlin.collections.a.b` @type ^`boolean` @kind boolean;
  #L5339c4.  call temp:= `copyToArrayOfAny`(v0, v1) @signature `Lkotlin/collections/e;.copyToArrayOfAny:([Ljava/lang/Object;Z)[Ljava/lang/Object;` @kind static;
  #L5339ca.  v0:= temp @kind object;
  #L5339cc.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.a` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/a;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L5339e0.  call temp:= `toArray`(v0, v1) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L5339e6.  v1:= temp @kind object;
  #L5339e8.  return v1 @kind object;
}
