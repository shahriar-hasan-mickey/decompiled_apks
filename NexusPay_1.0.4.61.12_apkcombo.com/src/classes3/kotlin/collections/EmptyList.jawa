record `kotlin.collections.EmptyList` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.List` @kind interface, `java.io.Serializable` @kind interface, `java.util.RandomAccess` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
}
global `kotlin.collections.EmptyList` `@@kotlin.collections.EmptyList.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.collections.EmptyList.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/collections/EmptyList;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L55dc8c.  v0:= new `kotlin.collections.EmptyList`;
  #L55dc90.  call `<init>`(v0) @signature `Lkotlin/collections/EmptyList;.<init>:()V` @kind direct;
  #L55dc96.  `@@kotlin.collections.EmptyList.INSTANCE` @type ^`kotlin.collections.EmptyList` := v0 @kind object;
  #L55dc9a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.EmptyList` v0 @kind this) @signature `Lkotlin/collections/EmptyList;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L55dcac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L55dcb2.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L55da8c.  v0:= `@@kotlin.collections.EmptyList.INSTANCE` @type ^`kotlin.collections.EmptyList` @kind object;
  #L55da90.  return v0 @kind object;
}
procedure `void` `add`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L55dcc4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L55dcc8.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L55dccc.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55dcd2.  throw v1;
}
procedure `void` `add`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.add:(ILjava/lang/Void;)V` @AccessFlag PUBLIC {
    temp;

  #L55dce4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L55dce8.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L55dcec.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55dcf2.  throw v1;
}
procedure `boolean` `add`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L55d800.  v2:= new `java.lang.UnsupportedOperationException`;
  #L55d804.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L55d808.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d80e.  throw v2;
}
procedure `boolean` `add`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.add:(Ljava/lang/Void;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d820.  v2:= new `java.lang.UnsupportedOperationException`;
  #L55d824.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L55d828.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d82e.  throw v2;
}
procedure `boolean` `addAll`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L55d840.  v1:= new `java.lang.UnsupportedOperationException`;
  #L55d844.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L55d848.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d84e.  throw v1;
}
procedure `boolean` `addAll`(`kotlin.collections.EmptyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d860.  v2:= new `java.lang.UnsupportedOperationException`;
  #L55d864.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L55d868.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d86e.  throw v2;
}
procedure `void` `clear`(`kotlin.collections.EmptyList` v2 @kind this) @signature `Lkotlin/collections/EmptyList;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55dd04.  v0:= new `java.lang.UnsupportedOperationException`;
  #L55dd08.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L55dd0c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55dd12.  throw v0;
}
procedure `boolean` `contains`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L55d880.  v0:= instanceof @variable v2 @type ^`java.lang.Void` @kind boolean;
  #L55d884.  if v0 == 0 then goto L55d896;
  #L55d888.  v2:= (`java.lang.Void`) v2 @kind object;
  #L55d88c.  call temp:= `contains`(v1, v2) @signature `Lkotlin/collections/EmptyList;.contains:(Ljava/lang/Void;)Z` @kind virtual;
  #L55d892.  v2:= temp;
  #L55d894.  return v2;
  #L55d896.  v2:= 0I;
  #L55d898.  return v2;
}
procedure `boolean` `contains`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.contains:(Ljava/lang/Void;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d8ac.  v0:= "element" @kind object;
  #L55d8b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55d8b6.  v2:= 0I;
  #L55d8b8.  return v2;
}
procedure `boolean` `containsAll`(`kotlin.collections.EmptyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d8cc.  v0:= "elements" @kind object;
  #L55d8d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55d8d6.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L55d8dc.  v2:= temp;
  #L55d8de.  return v2;
}
procedure `boolean` `equals`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d8f0.  v0:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L55d8f4.  if v0 == 0 then goto L55d90c;
  #L55d8f8.  v2:= (`java.util.List`) v2 @kind object;
  #L55d8fc.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L55d902.  v2:= temp;
  #L55d904.  if v2 == 0 then goto L55d90c;
  #L55d908.  v2:= 1I;
  #L55d90a.  goto L55d90e;
  #L55d90c.  v2:= 0I;
  #L55d90e.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/EmptyList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L55da70.  call temp:= `get`(v0, v1) @signature `Lkotlin/collections/EmptyList;.get:(I)Ljava/lang/Void;` @kind virtual;
  #L55da76.  v1:= temp @kind object;
  #L55da78.  return v1 @kind object;
}
procedure `java.lang.Void` `get`(`kotlin.collections.EmptyList` v3 @kind this, `int` v4 ) @signature `Lkotlin/collections/EmptyList;.get:(I)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L55db34.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L55db38.  v1:= new `java.lang.StringBuilder`;
  #L55db3c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55db42.  v2:= "Empty list doesn't contain element at index " @kind object;
  #L55db46.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55db4c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55db52.  v4:= 46I;
  #L55db56.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55db5c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55db62.  v4:= temp @kind object;
  #L55db64.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55db6a.  throw v0;
}
procedure `int` `getSize`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d994.  v0:= 0I;
  #L55d996.  return v0;
}
procedure `int` `hashCode`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d9a8.  v0:= 1I;
  #L55d9aa.  return v0;
}
procedure `int` `indexOf`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L55d9bc.  v0:= instanceof @variable v2 @type ^`java.lang.Void` @kind boolean;
  #L55d9c0.  if v0 == 0 then goto L55d9d2;
  #L55d9c4.  v2:= (`java.lang.Void`) v2 @kind object;
  #L55d9c8.  call temp:= `indexOf`(v1, v2) @signature `Lkotlin/collections/EmptyList;.indexOf:(Ljava/lang/Void;)I` @kind virtual;
  #L55d9ce.  v2:= temp;
  #L55d9d0.  return v2;
  #L55d9d2.  v2:= -1I;
  #L55d9d4.  return v2;
}
procedure `int` `indexOf`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.indexOf:(Ljava/lang/Void;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d9e8.  v0:= "element" @kind object;
  #L55d9ec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55d9f2.  v2:= -1I;
  #L55d9f4.  return v2;
}
procedure `boolean` `isEmpty`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d920.  v0:= 1I;
  #L55d922.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55dbbc.  v0:= `@@kotlin.collections.EmptyIterator.INSTANCE` @type ^`kotlin.collections.EmptyIterator` @kind object;
  #L55dbc0.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L55da08.  v0:= instanceof @variable v2 @type ^`java.lang.Void` @kind boolean;
  #L55da0c.  if v0 == 0 then goto L55da1e;
  #L55da10.  v2:= (`java.lang.Void`) v2 @kind object;
  #L55da14.  call temp:= `lastIndexOf`(v1, v2) @signature `Lkotlin/collections/EmptyList;.lastIndexOf:(Ljava/lang/Void;)I` @kind virtual;
  #L55da1a.  v2:= temp;
  #L55da1c.  return v2;
  #L55da1e.  v2:= -1I;
  #L55da20.  return v2;
}
procedure `int` `lastIndexOf`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.lastIndexOf:(Ljava/lang/Void;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55da34.  v0:= "element" @kind object;
  #L55da38.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55da3e.  v2:= -1I;
  #L55da40.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55dc2c.  v0:= `@@kotlin.collections.EmptyIterator.INSTANCE` @type ^`kotlin.collections.EmptyIterator` @kind object;
  #L55dc30.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`kotlin.collections.EmptyList` v3 @kind this, `int` v4 ) @signature `Lkotlin/collections/EmptyList;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L55dc44.  if v4 != 0 then goto L55dc4e;
  #L55dc48.  v4:= `@@kotlin.collections.EmptyIterator.INSTANCE` @type ^`kotlin.collections.EmptyIterator` @kind object;
  #L55dc4c.  return v4 @kind object;
  #L55dc4e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L55dc52.  v1:= new `java.lang.StringBuilder`;
  #L55dc56.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55dc5c.  v2:= "Index: " @kind object;
  #L55dc60.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dc66.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dc6c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55dc72.  v4:= temp @kind object;
  #L55dc74.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55dc7a.  throw v0;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.EmptyList` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/EmptyList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L55daa4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L55daa8.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L55daac.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55dab2.  throw v2;
}
procedure `java.lang.Void` `remove`(`kotlin.collections.EmptyList` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/EmptyList;.remove:(I)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55db7c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L55db80.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L55db84.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55db8a.  throw v2;
}
procedure `boolean` `remove`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d934.  v2:= new `java.lang.UnsupportedOperationException`;
  #L55d938.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L55d93c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d942.  throw v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.EmptyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d954.  v2:= new `java.lang.UnsupportedOperationException`;
  #L55d958.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L55d95c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d962.  throw v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.EmptyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55d974.  v2:= new `java.lang.UnsupportedOperationException`;
  #L55d978.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L55d97c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d982.  throw v2;
}
procedure `java.lang.Object` `set`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L55dac4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L55dac8.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L55dacc.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55dad2.  throw v1;
}
procedure `java.lang.Void` `set`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.set:(ILjava/lang/Void;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;

  #L55db9c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L55dba0.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L55dba4.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55dbaa.  throw v1;
}
procedure `int` `size`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L55da54.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/EmptyList;.getSize:()I` @kind virtual;
  #L55da5a.  v0:= temp;
  #L55da5c.  return v0;
}
procedure `java.util.List` `subList`(`kotlin.collections.EmptyList` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/EmptyList;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L55dbd4.  if v4 != 0 then goto L55dbde;
  #L55dbd8.  if v5 != 0 then goto L55dbde;
  #L55dbdc.  return v3 @kind object;
  #L55dbde.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L55dbe2.  v1:= new `java.lang.StringBuilder`;
  #L55dbe6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55dbec.  v2:= "fromIndex: " @kind object;
  #L55dbf0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dbf6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dbfc.  v4:= ", toIndex: " @kind object;
  #L55dc00.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dc06.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dc0c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55dc12.  v4:= temp @kind object;
  #L55dc14.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55dc1a.  throw v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55dae4.  call temp:= `toArray`(v1) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @kind static;
  #L55daea.  v0:= temp @kind object;
  #L55daec.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.EmptyList` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/EmptyList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L55db00.  call temp:= `toArray`(v0, v1) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L55db06.  v1:= temp @kind object;
  #L55db08.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55db1c.  v0:= "[]" @kind object;
  #L55db20.  return v0 @kind object;
}
