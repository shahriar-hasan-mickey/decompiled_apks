record `kotlin.collections.SlidingWindowKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `checkWindowSizeStep`(`int` v3 , `int` v4 ) @signature `Lkotlin/collections/SlidingWindowKt;.checkWindowSizeStep:(II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56202c.  if v3 <= 0 then goto L562038;
  #L562030.  if v4 <= 0 then goto L562038;
  #L562034.  v0:= 1I;
  #L562036.  goto L56203a;
  #L562038.  v0:= 0I;
  #L56203a.  if v0 != 0 then goto L5620bc;
  #L56203e.  v0:= " must be greater than zero." @kind object;
  #L562042.  if v3 == v4 then goto L562080;
  #L562046.  v1:= new `java.lang.StringBuilder`;
  #L56204a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562050.  v2:= "Both size " @kind object;
  #L562054.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56205a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L562060.  v3:= " and step " @kind object;
  #L562064.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56206a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L562070.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562076.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56207c.  v3:= temp @kind object;
  #L56207e.  goto L5620a8;
  #L562080.  v4:= new `java.lang.StringBuilder`;
  #L562084.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L56208a.  v1:= "size " @kind object;
  #L56208e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562094.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L56209a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5620a0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5620a6.  v3:= temp @kind object;
  #L5620a8.  v4:= new `java.lang.IllegalArgumentException`;
  #L5620ac.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L5620b2.  v3:= temp @kind object;
  #L5620b4.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5620ba.  throw v4;
  #L5620bc.  return @kind void;
}
procedure `java.util.Iterator` `windowedIterator`(`java.util.Iterator` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 , `boolean` v12 ) @signature `Lkotlin/collections/SlidingWindowKt;.windowedIterator:(Ljava/util/Iterator;IIZZ)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L561fa4.  v0:= "iterator" @kind object;
  #L561fa8.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L561fae.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L561fb4.  v0:= temp;
  #L561fb6.  if v0 != 0 then goto L561fc0;
  #L561fba.  v8:= `@@kotlin.collections.EmptyIterator.INSTANCE` @type ^`kotlin.collections.EmptyIterator` @kind object;
  #L561fbe.  return v8 @kind object;
  #L561fc0.  v7:= new `kotlin.collections.SlidingWindowKt$a`;
  #L561fc4.  v6:= 0I;
  #L561fc6.  v0:= v7 @kind object;
  #L561fc8.  v1:= v9;
  #L561fca.  v2:= v10;
  #L561fcc.  v3:= v8 @kind object;
  #L561fce.  v4:= v12;
  #L561fd0.  v5:= v11;
  #L561fd2.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/SlidingWindowKt$a;.<init>:(IILjava/util/Iterator;ZZLkotlin/coroutines/Continuation;)V` @kind direct;
  #L561fd8.  call temp:= `iterator`(v7) @signature `Lkotlin/sequences/SequencesKt;.iterator:(Lkotlin/jvm/functions/Function2;)Ljava/util/Iterator;` @kind static;
  #L561fde.  v8:= temp @kind object;
  #L561fe0.  return v8 @kind object;
}
procedure `kotlin.sequences.Sequence` `windowedSequence`(`kotlin.sequences.Sequence` v7 @kind object, `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 ) @signature `Lkotlin/collections/SlidingWindowKt;.windowedSequence:(Lkotlin/sequences/Sequence;IIZZ)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L561ff4.  v0:= "$this$windowedSequence" @kind object;
  #L561ff8.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L561ffe.  call `checkWindowSizeStep`(v8, v9) @signature `Lkotlin/collections/SlidingWindowKt;.checkWindowSizeStep:(II)V` @kind static;
  #L562004.  v0:= new `kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1`;
  #L562008.  v1:= v0 @kind object;
  #L56200a.  v2:= v7 @kind object;
  #L56200c.  v3:= v8;
  #L56200e.  v4:= v9;
  #L562010.  v5:= v10;
  #L562012.  v6:= v11;
  #L562014.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/SlidingWindowKt$windowedSequence$$inlined$Sequence$1;.<init>:(Lkotlin/sequences/Sequence;IIZZ)V` @kind direct;
  #L56201a.  return v0 @kind object;
}
