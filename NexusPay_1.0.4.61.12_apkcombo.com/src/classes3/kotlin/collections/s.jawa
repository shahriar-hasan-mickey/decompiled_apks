record `kotlin.collections.s` @kind class @AccessFlag  extends `kotlin.collections.r` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.s` v0 @kind this) @signature `Lkotlin/collections/s;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L55ff90.  call `<init>`(v0) @signature `Lkotlin/collections/r;.<init>:()V` @kind direct;
  #L55ff96.  return @kind void;
}
procedure `java.util.Map` `emptyMap`() @signature `Lkotlin/collections/s;.emptyMap:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L55f488.  v0:= `@@kotlin.collections.l.a` @type ^`kotlin.collections.l` @kind object;
  #L55f48c.  if v0 == 0 then goto L55f492;
  #L55f490.  return v0 @kind object;
  #L55f492.  v0:= new `java.lang.NullPointerException`;
  #L55f496.  v1:= "null cannot be cast to non-null type kotlin.collections.Map<K, V>" @kind object;
  #L55f49a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55f4a0.  throw v0;
}
procedure `java.util.Map` `filter`(`java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.filter:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55f4b4.  v0:= "$this$filter" @kind object;
  #L55f4b8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f4be.  v0:= "predicate" @kind object;
  #L55f4c2.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f4c8.  v0:= new `java.util.LinkedHashMap`;
  #L55f4cc.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L55f4d2.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f4d8.  v3:= temp @kind object;
  #L55f4da.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f4e0.  v3:= temp @kind object;
  #L55f4e2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f4e8.  v1:= temp;
  #L55f4ea.  if v1 == 0 then goto L55f52a;
  #L55f4ee.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f4f4.  v1:= temp @kind object;
  #L55f4f6.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L55f4fa.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f500.  v2:= temp @kind object;
  #L55f502.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L55f506.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L55f50c.  v2:= temp;
  #L55f50e.  if v2 == 0 then goto L55f4e2;
  #L55f512.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f518.  v2:= temp @kind object;
  #L55f51a.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f520.  v1:= temp @kind object;
  #L55f522.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f528.  goto L55f4e2;
  #L55f52a.  return v0 @kind object;
}
procedure `java.util.Map` `filterKeys`(`java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.filterKeys:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55f53c.  v0:= "$this$filterKeys" @kind object;
  #L55f540.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f546.  v0:= "predicate" @kind object;
  #L55f54a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f550.  v0:= new `java.util.LinkedHashMap`;
  #L55f554.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L55f55a.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f560.  v3:= temp @kind object;
  #L55f562.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f568.  v3:= temp @kind object;
  #L55f56a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f570.  v1:= temp;
  #L55f572.  if v1 == 0 then goto L55f5ba;
  #L55f576.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f57c.  v1:= temp @kind object;
  #L55f57e.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L55f582.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f588.  v2:= temp @kind object;
  #L55f58a.  call temp:= `invoke`(v4, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f590.  v2:= temp @kind object;
  #L55f592.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L55f596.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L55f59c.  v2:= temp;
  #L55f59e.  if v2 == 0 then goto L55f56a;
  #L55f5a2.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f5a8.  v2:= temp @kind object;
  #L55f5aa.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f5b0.  v1:= temp @kind object;
  #L55f5b2.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L55f5b8.  goto L55f56a;
  #L55f5ba.  return v0 @kind object;
}
procedure `java.util.Map` `filterNot`(`java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.filterNot:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55f5cc.  v0:= "$this$filterNot" @kind object;
  #L55f5d0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f5d6.  v0:= "predicate" @kind object;
  #L55f5da.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f5e0.  v0:= new `java.util.LinkedHashMap`;
  #L55f5e4.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L55f5ea.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f5f0.  v3:= temp @kind object;
  #L55f5f2.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f5f8.  v3:= temp @kind object;
  #L55f5fa.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f600.  v1:= temp;
  #L55f602.  if v1 == 0 then goto L55f642;
  #L55f606.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f60c.  v1:= temp @kind object;
  #L55f60e.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L55f612.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f618.  v2:= temp @kind object;
  #L55f61a.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L55f61e.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L55f624.  v2:= temp;
  #L55f626.  if v2 != 0 then goto L55f5fa;
  #L55f62a.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f630.  v2:= temp @kind object;
  #L55f632.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f638.  v1:= temp @kind object;
  #L55f63a.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f640.  goto L55f5fa;
  #L55f642.  return v0 @kind object;
}
procedure `java.util.Map` `filterNotTo`(`java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.filterNotTo:(Ljava/util/Map;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55f654.  v0:= "$this$filterNotTo" @kind object;
  #L55f658.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f65e.  v0:= "destination" @kind object;
  #L55f662.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f668.  v0:= "predicate" @kind object;
  #L55f66c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f672.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f678.  v2:= temp @kind object;
  #L55f67a.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f680.  v2:= temp @kind object;
  #L55f682.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f688.  v0:= temp;
  #L55f68a.  if v0 == 0 then goto L55f6ca;
  #L55f68e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f694.  v0:= temp @kind object;
  #L55f696.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L55f69a.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f6a0.  v1:= temp @kind object;
  #L55f6a2.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L55f6a6.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L55f6ac.  v1:= temp;
  #L55f6ae.  if v1 != 0 then goto L55f682;
  #L55f6b2.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f6b8.  v1:= temp @kind object;
  #L55f6ba.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f6c0.  v0:= temp @kind object;
  #L55f6c2.  call temp:= `put`(v3, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f6c8.  goto L55f682;
  #L55f6ca.  return v3 @kind object;
}
procedure `java.util.Map` `filterTo`(`java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.filterTo:(Ljava/util/Map;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55f6dc.  v0:= "$this$filterTo" @kind object;
  #L55f6e0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f6e6.  v0:= "destination" @kind object;
  #L55f6ea.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f6f0.  v0:= "predicate" @kind object;
  #L55f6f4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f6fa.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f700.  v2:= temp @kind object;
  #L55f702.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f708.  v2:= temp @kind object;
  #L55f70a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f710.  v0:= temp;
  #L55f712.  if v0 == 0 then goto L55f752;
  #L55f716.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f71c.  v0:= temp @kind object;
  #L55f71e.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L55f722.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f728.  v1:= temp @kind object;
  #L55f72a.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L55f72e.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L55f734.  v1:= temp;
  #L55f736.  if v1 == 0 then goto L55f70a;
  #L55f73a.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f740.  v1:= temp @kind object;
  #L55f742.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f748.  v0:= temp @kind object;
  #L55f74a.  call temp:= `put`(v3, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f750.  goto L55f70a;
  #L55f752.  return v3 @kind object;
}
procedure `java.util.Map` `filterValues`(`java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.filterValues:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55f764.  v0:= "$this$filterValues" @kind object;
  #L55f768.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f76e.  v0:= "predicate" @kind object;
  #L55f772.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f778.  v0:= new `java.util.LinkedHashMap`;
  #L55f77c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L55f782.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f788.  v3:= temp @kind object;
  #L55f78a.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f790.  v3:= temp @kind object;
  #L55f792.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f798.  v1:= temp;
  #L55f79a.  if v1 == 0 then goto L55f7e2;
  #L55f79e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f7a4.  v1:= temp @kind object;
  #L55f7a6.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L55f7aa.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f7b0.  v2:= temp @kind object;
  #L55f7b2.  call temp:= `invoke`(v4, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f7b8.  v2:= temp @kind object;
  #L55f7ba.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L55f7be.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L55f7c4.  v2:= temp;
  #L55f7c6.  if v2 == 0 then goto L55f792;
  #L55f7ca.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f7d0.  v2:= temp @kind object;
  #L55f7d2.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f7d8.  v1:= temp @kind object;
  #L55f7da.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L55f7e0.  goto L55f792;
  #L55f7e2.  return v0 @kind object;
}
procedure `java.lang.Object` `getOrElseNullable`(`java.util.Map` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/collections/s;.getOrElseNullable:(Ljava/util/Map;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55f368.  v0:= "$this$getOrElseNullable" @kind object;
  #L55f36c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f372.  v0:= "defaultValue" @kind object;
  #L55f376.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f37c.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f382.  v0:= temp @kind object;
  #L55f384.  if v0 != 0 then goto L55f39e;
  #L55f388.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L55f38e.  v1:= temp;
  #L55f390.  if v1 != 0 then goto L55f39e;
  #L55f394.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L55f39a.  v1:= temp @kind object;
  #L55f39c.  return v1 @kind object;
  #L55f39e.  return v0 @kind object;
}
procedure `java.lang.Object` `getOrPut`(`java.util.Map` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/collections/s;.getOrPut:(Ljava/util/Map;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55f3b0.  v0:= "$this$getOrPut" @kind object;
  #L55f3b4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f3ba.  v0:= "defaultValue" @kind object;
  #L55f3be.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f3c4.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f3ca.  v0:= temp @kind object;
  #L55f3cc.  if v0 != 0 then goto L55f3de;
  #L55f3d0.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L55f3d6.  v0:= temp @kind object;
  #L55f3d8.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f3de.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`java.util.Map` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/s;.getValue:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55f3f0.  v0:= "$this$getValue" @kind object;
  #L55f3f4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f3fa.  call temp:= `getOrImplicitDefaultNullable`(v1, v2) @signature `Lkotlin/collections/q;.getOrImplicitDefaultNullable:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L55f400.  v1:= temp @kind object;
  #L55f402.  return v1 @kind object;
}
procedure `java.util.HashMap` `hashMapOf`(`kotlin.Pair`[] v2 @kind object) @signature `Lkotlin/collections/s;.hashMapOf:([Lkotlin/Pair;)Ljava/util/HashMap;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55f414.  v0:= "pairs" @kind object;
  #L55f418.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f41e.  v0:= new `java.util.HashMap`;
  #L55f422.  v1:= length @variable v2;
  #L55f424.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L55f42a.  v1:= temp;
  #L55f42c.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L55f432.  call `putAll`(v0, v2) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;[Lkotlin/Pair;)V` @kind static;
  #L55f438.  return v0 @kind object;
}
procedure `java.util.LinkedHashMap` `linkedMapOf`(`kotlin.Pair`[] v2 @kind object) @signature `Lkotlin/collections/s;.linkedMapOf:([Lkotlin/Pair;)Ljava/util/LinkedHashMap;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55f44c.  v0:= "pairs" @kind object;
  #L55f450.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f456.  v0:= new `java.util.LinkedHashMap`;
  #L55f45a.  v1:= length @variable v2;
  #L55f45c.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L55f462.  v1:= temp;
  #L55f464.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L55f46a.  call temp:= `toMap`(v2, v0) @signature `Lkotlin/collections/s;.toMap:([Lkotlin/Pair;Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55f470.  v2:= temp @kind object;
  #L55f472.  v2:= (`java.util.LinkedHashMap`) v2 @kind object;
  #L55f476.  return v2 @kind object;
}
procedure `java.util.Map` `mapKeys`(`java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.mapKeys:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55f7f4.  v0:= "$this$mapKeys" @kind object;
  #L55f7f8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f7fe.  v0:= "transform" @kind object;
  #L55f802.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f808.  v0:= new `java.util.LinkedHashMap`;
  #L55f80c.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L55f812.  v1:= temp;
  #L55f814.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L55f81a.  v1:= temp;
  #L55f81c.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L55f822.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f828.  v3:= temp @kind object;
  #L55f82a.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f830.  v3:= temp @kind object;
  #L55f832.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f838.  v1:= temp;
  #L55f83a.  if v1 == 0 then goto L55f862;
  #L55f83e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f844.  v1:= temp @kind object;
  #L55f846.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f84c.  v2:= temp @kind object;
  #L55f84e.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L55f852.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f858.  v1:= temp @kind object;
  #L55f85a.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f860.  goto L55f832;
  #L55f862.  return v0 @kind object;
}
procedure `java.util.Map` `mapKeysTo`(`java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.mapKeysTo:(Ljava/util/Map;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55f874.  v0:= "$this$mapKeysTo" @kind object;
  #L55f878.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f87e.  v0:= "destination" @kind object;
  #L55f882.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f888.  v0:= "transform" @kind object;
  #L55f88c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f892.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f898.  v2:= temp @kind object;
  #L55f89a.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f8a0.  v2:= temp @kind object;
  #L55f8a2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f8a8.  v0:= temp;
  #L55f8aa.  if v0 == 0 then goto L55f8d2;
  #L55f8ae.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f8b4.  v0:= temp @kind object;
  #L55f8b6.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f8bc.  v1:= temp @kind object;
  #L55f8be.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L55f8c2.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55f8c8.  v0:= temp @kind object;
  #L55f8ca.  call temp:= `put`(v3, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f8d0.  goto L55f8a2;
  #L55f8d2.  return v3 @kind object;
}
procedure `java.util.Map` `mapOf`(`kotlin.Pair`[] v2 @kind object) @signature `Lkotlin/collections/s;.mapOf:([Lkotlin/Pair;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L55f8e4.  v0:= "pairs" @kind object;
  #L55f8e8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f8ee.  v0:= length @variable v2;
  #L55f8f0.  if v0 <= 0 then goto L55f912;
  #L55f8f4.  v0:= new `java.util.LinkedHashMap`;
  #L55f8f8.  v1:= length @variable v2;
  #L55f8fa.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L55f900.  v1:= temp;
  #L55f902.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L55f908.  call temp:= `toMap`(v2, v0) @signature `Lkotlin/collections/s;.toMap:([Lkotlin/Pair;Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55f90e.  v2:= temp @kind object;
  #L55f910.  goto L55f91a;
  #L55f912.  call temp:= `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @kind static;
  #L55f918.  v2:= temp @kind object;
  #L55f91a.  return v2 @kind object;
}
procedure `java.util.Map` `mapValues`(`java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.mapValues:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55f92c.  v0:= "$this$mapValues" @kind object;
  #L55f930.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f936.  v0:= "transform" @kind object;
  #L55f93a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f940.  v0:= new `java.util.LinkedHashMap`;
  #L55f944.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L55f94a.  v1:= temp;
  #L55f94c.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L55f952.  v1:= temp;
  #L55f954.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L55f95a.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f960.  v3:= temp @kind object;
  #L55f962.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f968.  v3:= temp @kind object;
  #L55f96a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f970.  v1:= temp;
  #L55f972.  if v1 == 0 then goto L55f99c;
  #L55f976.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f97c.  v1:= temp @kind object;
  #L55f97e.  v2:= v1 @kind object;
  #L55f980.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L55f984.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f98a.  v2:= temp @kind object;
  #L55f98c.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f992.  v1:= temp @kind object;
  #L55f994.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55f99a.  goto L55f96a;
  #L55f99c.  return v0 @kind object;
}
procedure `java.util.Map` `mapValuesTo`(`java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/collections/s;.mapValuesTo:(Ljava/util/Map;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55f9b0.  v0:= "$this$mapValuesTo" @kind object;
  #L55f9b4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f9ba.  v0:= "destination" @kind object;
  #L55f9be.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f9c4.  v0:= "transform" @kind object;
  #L55f9c8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55f9ce.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55f9d4.  v2:= temp @kind object;
  #L55f9d6.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55f9dc.  v2:= temp @kind object;
  #L55f9de.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55f9e4.  v0:= temp;
  #L55f9e6.  if v0 == 0 then goto L55fa10;
  #L55f9ea.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55f9f0.  v0:= temp @kind object;
  #L55f9f2.  v1:= v0 @kind object;
  #L55f9f4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L55f9f8.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L55f9fe.  v1:= temp @kind object;
  #L55fa00.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55fa06.  v0:= temp @kind object;
  #L55fa08.  call temp:= `put`(v3, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55fa0e.  goto L55f9de;
  #L55fa10.  return v3 @kind object;
}
procedure `java.util.Map` `minus`(`java.util.Map` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/s;.minus:(Ljava/util/Map;Ljava/lang/Iterable;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fa24.  v0:= "$this$minus" @kind object;
  #L55fa28.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fa2e.  v0:= "keys" @kind object;
  #L55fa32.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fa38.  call temp:= `toMutableMap`(v1) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fa3e.  v1:= temp @kind object;
  #L55fa40.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L55fa46.  v0:= temp @kind object;
  #L55fa48.  call temp:= `removeAll`(v0, v2) @signature `Lkotlin/collections/i;.removeAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L55fa4e.  call temp:= `optimizeReadOnlyMap`(v1) @signature `Lkotlin/collections/s;.optimizeReadOnlyMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fa54.  v1:= temp @kind object;
  #L55fa56.  return v1 @kind object;
}
procedure `java.util.Map` `minus`(`java.util.Map` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/s;.minus:(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fa68.  v0:= "$this$minus" @kind object;
  #L55fa6c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fa72.  call temp:= `toMutableMap`(v1) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fa78.  v1:= temp @kind object;
  #L55fa7a.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55fa80.  call temp:= `optimizeReadOnlyMap`(v1) @signature `Lkotlin/collections/s;.optimizeReadOnlyMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fa86.  v1:= temp @kind object;
  #L55fa88.  return v1 @kind object;
}
procedure `java.util.Map` `minus`(`java.util.Map` v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/collections/s;.minus:(Ljava/util/Map;Lkotlin/sequences/Sequence;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fae0.  v0:= "$this$minus" @kind object;
  #L55fae4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55faea.  v0:= "keys" @kind object;
  #L55faee.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55faf4.  call temp:= `toMutableMap`(v1) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fafa.  v1:= temp @kind object;
  #L55fafc.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L55fb02.  v0:= temp @kind object;
  #L55fb04.  call temp:= `removeAll`(v0, v2) @signature `Lkotlin/collections/i;.removeAll:(Ljava/util/Collection;Lkotlin/sequences/Sequence;)Z` @kind static;
  #L55fb0a.  call temp:= `optimizeReadOnlyMap`(v1) @signature `Lkotlin/collections/s;.optimizeReadOnlyMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fb10.  v1:= temp @kind object;
  #L55fb12.  return v1 @kind object;
}
procedure `java.util.Map` `minus`(`java.util.Map` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/collections/s;.minus:(Ljava/util/Map;[Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fa9c.  v0:= "$this$minus" @kind object;
  #L55faa0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55faa6.  v0:= "keys" @kind object;
  #L55faaa.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fab0.  call temp:= `toMutableMap`(v1) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fab6.  v1:= temp @kind object;
  #L55fab8.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L55fabe.  v0:= temp @kind object;
  #L55fac0.  call temp:= `removeAll`(v0, v2) @signature `Lkotlin/collections/i;.removeAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L55fac6.  call temp:= `optimizeReadOnlyMap`(v1) @signature `Lkotlin/collections/s;.optimizeReadOnlyMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55facc.  v1:= temp @kind object;
  #L55face.  return v1 @kind object;
}
procedure `java.util.Map` `mutableMapOf`(`kotlin.Pair`[] v2 @kind object) @signature `Lkotlin/collections/s;.mutableMapOf:([Lkotlin/Pair;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55fb24.  v0:= "pairs" @kind object;
  #L55fb28.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fb2e.  v0:= new `java.util.LinkedHashMap`;
  #L55fb32.  v1:= length @variable v2;
  #L55fb34.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L55fb3a.  v1:= temp;
  #L55fb3c.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L55fb42.  call `putAll`(v0, v2) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;[Lkotlin/Pair;)V` @kind static;
  #L55fb48.  return v0 @kind object;
}
procedure `java.util.Map` `optimizeReadOnlyMap`(`java.util.Map` v2 @kind object) @signature `Lkotlin/collections/s;.optimizeReadOnlyMap:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55fb5c.  v0:= "$this$optimizeReadOnlyMap" @kind object;
  #L55fb60.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fb66.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L55fb6c.  v0:= temp;
  #L55fb6e.  if v0 == 0 then goto L55fb84;
  #L55fb72.  v1:= 1I;
  #L55fb74.  if v0 == v1 then goto L55fb7a;
  #L55fb78.  goto L55fb8c;
  #L55fb7a.  call temp:= `toSingletonMap`(v2) @signature `Lkotlin/collections/r;.toSingletonMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fb80.  v2:= temp @kind object;
  #L55fb82.  goto L55fb8c;
  #L55fb84.  call temp:= `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @kind static;
  #L55fb8a.  v2:= temp @kind object;
  #L55fb8c.  return v2 @kind object;
}
procedure `java.util.Map` `plus`(`java.util.Map` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/s;.plus:(Ljava/util/Map;Ljava/lang/Iterable;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fba0.  v0:= "$this$plus" @kind object;
  #L55fba4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fbaa.  v0:= "pairs" @kind object;
  #L55fbae.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fbb4.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L55fbba.  v0:= temp;
  #L55fbbc.  if v0 == 0 then goto L55fbca;
  #L55fbc0.  call temp:= `toMap`(v2) @signature `Lkotlin/collections/MapsKt;.toMap:(Ljava/lang/Iterable;)Ljava/util/Map;` @kind static;
  #L55fbc6.  v1:= temp @kind object;
  #L55fbc8.  goto L55fbdc;
  #L55fbca.  v0:= new `java.util.LinkedHashMap`;
  #L55fbce.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L55fbd4.  call `putAll`(v0, v2) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;Ljava/lang/Iterable;)V` @kind static;
  #L55fbda.  v1:= v0 @kind object;
  #L55fbdc.  return v1 @kind object;
}
procedure `java.util.Map` `plus`(`java.util.Map` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/s;.plus:(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fbf0.  v0:= "$this$plus" @kind object;
  #L55fbf4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fbfa.  v0:= "map" @kind object;
  #L55fbfe.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fc04.  v0:= new `java.util.LinkedHashMap`;
  #L55fc08.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L55fc0e.  call `putAll`(v0, v2) @signature `Ljava/util/LinkedHashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L55fc14.  return v0 @kind object;
}
procedure `java.util.Map` `plus`(`java.util.Map` v1 @kind object, `kotlin.Pair` v2 @kind object) @signature `Lkotlin/collections/s;.plus:(Ljava/util/Map;Lkotlin/Pair;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fc28.  v0:= "$this$plus" @kind object;
  #L55fc2c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fc32.  v0:= "pair" @kind object;
  #L55fc36.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fc3c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L55fc42.  v0:= temp;
  #L55fc44.  if v0 == 0 then goto L55fc52;
  #L55fc48.  call temp:= `mapOf`(v2) @signature `Lkotlin/collections/r;.mapOf:(Lkotlin/Pair;)Ljava/util/Map;` @kind static;
  #L55fc4e.  v1:= temp @kind object;
  #L55fc50.  goto L55fc74;
  #L55fc52.  v0:= new `java.util.LinkedHashMap`;
  #L55fc56.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L55fc5c.  call temp:= `getFirst`(v2) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L55fc62.  v1:= temp @kind object;
  #L55fc64.  call temp:= `getSecond`(v2) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L55fc6a.  v2:= temp @kind object;
  #L55fc6c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L55fc72.  v1:= v0 @kind object;
  #L55fc74.  return v1 @kind object;
}
procedure `java.util.Map` `plus`(`java.util.Map` v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/collections/s;.plus:(Ljava/util/Map;Lkotlin/sequences/Sequence;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fcd8.  v0:= "$this$plus" @kind object;
  #L55fcdc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fce2.  v0:= "pairs" @kind object;
  #L55fce6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fcec.  v0:= new `java.util.LinkedHashMap`;
  #L55fcf0.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L55fcf6.  call `putAll`(v0, v2) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;Lkotlin/sequences/Sequence;)V` @kind static;
  #L55fcfc.  call temp:= `optimizeReadOnlyMap`(v0) @signature `Lkotlin/collections/s;.optimizeReadOnlyMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fd02.  v1:= temp @kind object;
  #L55fd04.  return v1 @kind object;
}
procedure `java.util.Map` `plus`(`java.util.Map` v1 @kind object, `kotlin.Pair`[] v2 @kind object) @signature `Lkotlin/collections/s;.plus:(Ljava/util/Map;[Lkotlin/Pair;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fc88.  v0:= "$this$plus" @kind object;
  #L55fc8c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fc92.  v0:= "pairs" @kind object;
  #L55fc96.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fc9c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L55fca2.  v0:= temp;
  #L55fca4.  if v0 == 0 then goto L55fcb2;
  #L55fca8.  call temp:= `toMap`(v2) @signature `Lkotlin/collections/s;.toMap:([Lkotlin/Pair;)Ljava/util/Map;` @kind static;
  #L55fcae.  v1:= temp @kind object;
  #L55fcb0.  goto L55fcc4;
  #L55fcb2.  v0:= new `java.util.LinkedHashMap`;
  #L55fcb6.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L55fcbc.  call `putAll`(v0, v2) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;[Lkotlin/Pair;)V` @kind static;
  #L55fcc2.  v1:= v0 @kind object;
  #L55fcc4.  return v1 @kind object;
}
procedure `void` `putAll`(`java.util.Map` v2 @kind object, `java.lang.Iterable` v3 @kind object) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55ffa8.  v0:= "$this$putAll" @kind object;
  #L55ffac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55ffb2.  v0:= "pairs" @kind object;
  #L55ffb6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55ffbc.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55ffc2.  v3:= temp @kind object;
  #L55ffc4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55ffca.  v0:= temp;
  #L55ffcc.  if v0 == 0 then goto L55fff4;
  #L55ffd0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55ffd6.  v0:= temp @kind object;
  #L55ffd8.  v0:= (`kotlin.Pair`) v0 @kind object;
  #L55ffdc.  call temp:= `component1`(v0) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L55ffe2.  v1:= temp @kind object;
  #L55ffe4.  call temp:= `component2`(v0) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L55ffea.  v0:= temp @kind object;
  #L55ffec.  call temp:= `put`(v2, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55fff2.  goto L55ffc4;
  #L55fff4.  return @kind void;
}
procedure `void` `putAll`(`java.util.Map` v2 @kind object, `kotlin.sequences.Sequence` v3 @kind object) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;Lkotlin/sequences/Sequence;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L560058.  v0:= "$this$putAll" @kind object;
  #L56005c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560062.  v0:= "pairs" @kind object;
  #L560066.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56006c.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L560072.  v3:= temp @kind object;
  #L560074.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56007a.  v0:= temp;
  #L56007c.  if v0 == 0 then goto L5600a4;
  #L560080.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L560086.  v0:= temp @kind object;
  #L560088.  v0:= (`kotlin.Pair`) v0 @kind object;
  #L56008c.  call temp:= `component1`(v0) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L560092.  v1:= temp @kind object;
  #L560094.  call temp:= `component2`(v0) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L56009a.  v0:= temp @kind object;
  #L56009c.  call temp:= `put`(v2, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5600a2.  goto L560074;
  #L5600a4.  return @kind void;
}
procedure `void` `putAll`(`java.util.Map` v4 @kind object, `kotlin.Pair`[] v5 @kind object) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;[Lkotlin/Pair;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L560008.  v0:= "$this$putAll" @kind object;
  #L56000c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560012.  v0:= "pairs" @kind object;
  #L560016.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56001c.  v0:= length @variable v5;
  #L56001e.  v1:= 0I;
  #L560020.  if v1 >= v0 then goto L560044;
  #L560024.  v2:= v5[v1] @kind object;
  #L560028.  call temp:= `component1`(v2) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L56002e.  v3:= temp @kind object;
  #L560030.  call temp:= `component2`(v2) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L560036.  v2:= temp @kind object;
  #L560038.  call temp:= `put`(v4, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56003e.  v1:= v1 + 1;
  #L560042.  goto L560020;
  #L560044.  return @kind void;
}
procedure `java.util.Map` `toMap`(`java.lang.Iterable` v3 @kind object) @signature `Lkotlin/collections/s;.toMap:(Ljava/lang/Iterable;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L55fd18.  v0:= "$this$toMap" @kind object;
  #L55fd1c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fd22.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L55fd26.  if v0 == 0 then goto L55fda6;
  #L55fd2a.  v0:= v3 @kind object;
  #L55fd2c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L55fd30.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L55fd36.  v1:= temp;
  #L55fd38.  if v1 == 0 then goto L55fd9c;
  #L55fd3c.  v2:= 1I;
  #L55fd3e.  if v1 == v2 then goto L55fd66;
  #L55fd42.  v1:= new `java.util.LinkedHashMap`;
  #L55fd46.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L55fd4c.  v0:= temp;
  #L55fd4e.  call temp:= `mapCapacity`(v0) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L55fd54.  v0:= temp;
  #L55fd56.  call `<init>`(v1, v0) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L55fd5c.  call temp:= `toMap`(v3, v1) @signature `Lkotlin/collections/s;.toMap:(Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fd62.  v3:= temp @kind object;
  #L55fd64.  goto L55fda4;
  #L55fd66.  v0:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L55fd6a.  if v0 == 0 then goto L55fd7e;
  #L55fd6e.  v3:= (`java.util.List`) v3 @kind object;
  #L55fd72.  v0:= 0I;
  #L55fd74.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L55fd7a.  v3:= temp @kind object;
  #L55fd7c.  goto L55fd8e;
  #L55fd7e.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55fd84.  v3:= temp @kind object;
  #L55fd86.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55fd8c.  v3:= temp @kind object;
  #L55fd8e.  v3:= (`kotlin.Pair`) v3 @kind object;
  #L55fd92.  call temp:= `mapOf`(v3) @signature `Lkotlin/collections/r;.mapOf:(Lkotlin/Pair;)Ljava/util/Map;` @kind static;
  #L55fd98.  v3:= temp @kind object;
  #L55fd9a.  goto L55fda4;
  #L55fd9c.  call temp:= `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @kind static;
  #L55fda2.  v3:= temp @kind object;
  #L55fda4.  return v3 @kind object;
  #L55fda6.  v0:= new `java.util.LinkedHashMap`;
  #L55fdaa.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L55fdb0.  call temp:= `toMap`(v3, v0) @signature `Lkotlin/collections/s;.toMap:(Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fdb6.  v3:= temp @kind object;
  #L55fdb8.  call temp:= `optimizeReadOnlyMap`(v3) @signature `Lkotlin/collections/s;.optimizeReadOnlyMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fdbe.  v3:= temp @kind object;
  #L55fdc0.  return v3 @kind object;
}
procedure `java.util.Map` `toMap`(`java.lang.Iterable` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/s;.toMap:(Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fdd4.  v0:= "$this$toMap" @kind object;
  #L55fdd8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fdde.  v0:= "destination" @kind object;
  #L55fde2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fde8.  call `putAll`(v2, v1) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;Ljava/lang/Iterable;)V` @kind static;
  #L55fdee.  return v2 @kind object;
}
procedure `java.util.Map` `toMap`(`java.util.Map` v2 @kind object) @signature `Lkotlin/collections/s;.toMap:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L55fe00.  v0:= "$this$toMap" @kind object;
  #L55fe04.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fe0a.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L55fe10.  v0:= temp;
  #L55fe12.  if v0 == 0 then goto L55fe30;
  #L55fe16.  v1:= 1I;
  #L55fe18.  if v0 == v1 then goto L55fe26;
  #L55fe1c.  call temp:= `toMutableMap`(v2) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fe22.  v2:= temp @kind object;
  #L55fe24.  goto L55fe38;
  #L55fe26.  call temp:= `toSingletonMap`(v2) @signature `Lkotlin/collections/r;.toSingletonMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fe2c.  v2:= temp @kind object;
  #L55fe2e.  goto L55fe38;
  #L55fe30.  call temp:= `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @kind static;
  #L55fe36.  v2:= temp @kind object;
  #L55fe38.  return v2 @kind object;
}
procedure `java.util.Map` `toMap`(`java.util.Map` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/s;.toMap:(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fe4c.  v0:= "$this$toMap" @kind object;
  #L55fe50.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fe56.  v0:= "destination" @kind object;
  #L55fe5a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fe60.  call `putAll`(v2, v1) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L55fe66.  return v2 @kind object;
}
procedure `java.util.Map` `toMap`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/collections/s;.toMap:(Lkotlin/sequences/Sequence;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55ff04.  v0:= "$this$toMap" @kind object;
  #L55ff08.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55ff0e.  v0:= new `java.util.LinkedHashMap`;
  #L55ff12.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L55ff18.  call temp:= `toMap`(v1, v0) @signature `Lkotlin/collections/s;.toMap:(Lkotlin/sequences/Sequence;Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55ff1e.  v1:= temp @kind object;
  #L55ff20.  call temp:= `optimizeReadOnlyMap`(v1) @signature `Lkotlin/collections/s;.optimizeReadOnlyMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55ff26.  v1:= temp @kind object;
  #L55ff28.  return v1 @kind object;
}
procedure `java.util.Map` `toMap`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/s;.toMap:(Lkotlin/sequences/Sequence;Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55ff3c.  v0:= "$this$toMap" @kind object;
  #L55ff40.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55ff46.  v0:= "destination" @kind object;
  #L55ff4a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55ff50.  call `putAll`(v2, v1) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;Lkotlin/sequences/Sequence;)V` @kind static;
  #L55ff56.  return v2 @kind object;
}
procedure `java.util.Map` `toMap`(`kotlin.Pair`[] v2 @kind object) @signature `Lkotlin/collections/s;.toMap:([Lkotlin/Pair;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55fe78.  v0:= "$this$toMap" @kind object;
  #L55fe7c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fe82.  v0:= length @variable v2;
  #L55fe84.  if v0 == 0 then goto L55febc;
  #L55fe88.  v1:= 1I;
  #L55fe8a.  if v0 == v1 then goto L55feac;
  #L55fe8e.  v0:= new `java.util.LinkedHashMap`;
  #L55fe92.  v1:= length @variable v2;
  #L55fe94.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L55fe9a.  v1:= temp;
  #L55fe9c.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L55fea2.  call temp:= `toMap`(v2, v0) @signature `Lkotlin/collections/s;.toMap:([Lkotlin/Pair;Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L55fea8.  v2:= temp @kind object;
  #L55feaa.  goto L55fec4;
  #L55feac.  v0:= 0I;
  #L55feae.  v2:= v2[v0] @kind object;
  #L55feb2.  call temp:= `mapOf`(v2) @signature `Lkotlin/collections/r;.mapOf:(Lkotlin/Pair;)Ljava/util/Map;` @kind static;
  #L55feb8.  v2:= temp @kind object;
  #L55feba.  goto L55fec4;
  #L55febc.  call temp:= `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @kind static;
  #L55fec2.  v2:= temp @kind object;
  #L55fec4.  return v2 @kind object;
}
procedure `java.util.Map` `toMap`(`kotlin.Pair`[] v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/s;.toMap:([Lkotlin/Pair;Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55fed8.  v0:= "$this$toMap" @kind object;
  #L55fedc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55fee2.  v0:= "destination" @kind object;
  #L55fee6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55feec.  call `putAll`(v2, v1) @signature `Lkotlin/collections/s;.putAll:(Ljava/util/Map;[Lkotlin/Pair;)V` @kind static;
  #L55fef2.  return v2 @kind object;
}
procedure `java.util.Map` `toMutableMap`(`java.util.Map` v1 @kind object) @signature `Lkotlin/collections/s;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L55ff68.  v0:= "$this$toMutableMap" @kind object;
  #L55ff6c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55ff72.  v0:= new `java.util.LinkedHashMap`;
  #L55ff76.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L55ff7c.  return v0 @kind object;
}
