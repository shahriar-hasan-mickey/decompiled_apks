record `kotlin.collections.b` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.collections.b` v0 @kind this) @signature `Lkotlin/collections/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L534f60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L534f66.  return @kind void;
}
procedure `java.lang.Object`[] `arrayOfNulls`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/b;.arrayOfNulls:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L534ea4.  v0:= "reference" @kind object;
  #L534ea8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L534eae.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L534eb4.  v1:= temp @kind object;
  #L534eb6.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L534ebc.  v1:= temp @kind object;
  #L534ebe.  call temp:= `newInstance`(v1, v2) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L534ec4.  v1:= temp @kind object;
  #L534ec6.  if v1 == 0 then goto L534ed0;
  #L534eca.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L534ece.  return v1 @kind object;
  #L534ed0.  v1:= new `java.lang.NullPointerException`;
  #L534ed4.  v2:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L534ed8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L534ede.  throw v1;
}
procedure `int` `contentDeepHashCode`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/collections/b;.contentDeepHashCode:([Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L534e88.  call temp:= `deepHashCode`(v0) @signature `Ljava/util/Arrays;.deepHashCode:([Ljava/lang/Object;)I` @kind static;
  #L534e8e.  v0:= temp;
  #L534e90.  return v0;
}
procedure `void` `copyOfRangeToIndexCheck`(`int` v3 , `int` v4 ) @signature `Lkotlin/collections/b;.copyOfRangeToIndexCheck:(II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L534f78.  if v3 > v4 then goto L534f7e;
  #L534f7c.  return @kind void;
  #L534f7e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L534f82.  v1:= new `java.lang.StringBuilder`;
  #L534f86.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L534f8c.  v2:= "toIndex (" @kind object;
  #L534f90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L534f96.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L534f9c.  v3:= ") is greater than size (" @kind object;
  #L534fa0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L534fa6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L534fac.  v3:= ")." @kind object;
  #L534fb0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L534fb6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L534fbc.  v3:= temp @kind object;
  #L534fbe.  call `<init>`(v0, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L534fc4.  throw v0;
}
procedure `java.lang.Object`[] `orEmpty`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/b;.orEmpty:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L534ef0.  if v1 == 0 then goto L534ef6;
  #L534ef4.  goto L534f06;
  #L534ef6.  v1:= 0I;
  #L534ef8.  v0:= "T?" @kind object;
  #L534efc.  call `reifiedOperationMarker`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L534f02.  v1:= new `java.lang.Object`[v1];
  #L534f06.  return v1 @kind object;
}
procedure `java.lang.Object`[] `toTypedArray`(`java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/b;.toTypedArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L534f18.  v0:= "$this$toTypedArray" @kind object;
  #L534f1c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L534f22.  v0:= 0I;
  #L534f24.  v1:= "T?" @kind object;
  #L534f28.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L534f2e.  v0:= new `java.lang.Object`[v0];
  #L534f32.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L534f38.  v2:= temp @kind object;
  #L534f3a.  if v2 == 0 then goto L534f40;
  #L534f3e.  return v2 @kind object;
  #L534f40.  v2:= new `java.lang.NullPointerException`;
  #L534f44.  v0:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L534f48.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L534f4e.  throw v2;
}
