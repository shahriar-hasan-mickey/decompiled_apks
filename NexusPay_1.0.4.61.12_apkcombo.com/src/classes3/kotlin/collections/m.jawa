record `kotlin.collections.m` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.collections.m` v0 @kind this) @signature `Lkotlin/collections/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L55e3c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L55e3ca.  return @kind void;
}
procedure `java.util.Map` `eachCount`(`kotlin.collections.Grouping` v6 @kind object) @signature `Lkotlin/collections/m;.eachCount:(Lkotlin/collections/Grouping;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L55e2c8.  v0:= "$this$eachCount" @kind object;
  #L55e2cc.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55e2d2.  v0:= new `java.util.LinkedHashMap`;
  #L55e2d6.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L55e2dc.  call temp:= `sourceIterator`(v6) @signature `Lkotlin/collections/Grouping;.sourceIterator:()Ljava/util/Iterator;` @kind interface;
  #L55e2e2.  v1:= temp @kind object;
  #L55e2e4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55e2ea.  v2:= temp;
  #L55e2ec.  if v2 == 0 then goto L55e344;
  #L55e2f0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55e2f6.  v2:= temp @kind object;
  #L55e2f8.  call temp:= `keyOf`(v6, v2) @signature `Lkotlin/collections/Grouping;.keyOf:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55e2fe.  v2:= temp @kind object;
  #L55e300.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55e306.  v3:= temp @kind object;
  #L55e308.  v4:= 1I;
  #L55e30a.  if v3 != 0 then goto L55e31e;
  #L55e30e.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L55e314.  v5:= temp;
  #L55e316.  if v5 != 0 then goto L55e31e;
  #L55e31a.  v5:= 1I;
  #L55e31c.  goto L55e320;
  #L55e31e.  v5:= 0I;
  #L55e320.  if v5 == 0 then goto L55e32e;
  #L55e324.  v3:= new `kotlin.jvm.internal.Ref$IntRef`;
  #L55e328.  call `<init>`(v3) @signature `Lkotlin/jvm/internal/Ref$IntRef;.<init>:()V` @kind direct;
  #L55e32e.  v3:= (`kotlin.jvm.internal.Ref$IntRef`) v3 @kind object;
  #L55e332.  v5:= v3.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L55e336.  v5:= v5 + v4 @kind int;
  #L55e338.  v3.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int` := v5;
  #L55e33c.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55e342.  goto L55e2e4;
  #L55e344.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L55e34a.  v6:= temp @kind object;
  #L55e34c.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55e352.  v6:= temp @kind object;
  #L55e354.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55e35a.  v1:= temp;
  #L55e35c.  if v1 == 0 then goto L55e3a8;
  #L55e360.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55e366.  v1:= temp @kind object;
  #L55e368.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L55e36c.  if v1 == 0 then goto L55e398;
  #L55e370.  call temp:= `asMutableMapEntry`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableMapEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L55e376.  v2:= temp @kind object;
  #L55e378.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L55e37e.  v1:= temp @kind object;
  #L55e380.  v1:= (`kotlin.jvm.internal.Ref$IntRef`) v1 @kind object;
  #L55e384.  v1:= v1.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L55e388.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55e38e.  v1:= temp @kind object;
  #L55e390.  call temp:= `setValue`(v2, v1) @signature `Ljava/util/Map$Entry;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55e396.  goto L55e354;
  #L55e398.  v6:= new `java.lang.NullPointerException`;
  #L55e39c.  v0:= "null cannot be cast to non-null type kotlin.collections.MutableMap.MutableEntry<K, R>" @kind object;
  #L55e3a0.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55e3a6.  throw v6;
  #L55e3a8.  call temp:= `asMutableMap`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableMap:(Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L55e3ae.  v6:= temp @kind object;
  #L55e3b0.  return v6 @kind object;
}
