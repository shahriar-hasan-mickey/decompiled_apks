record `kotlin.collections.t` @kind class @AccessFlag  extends `kotlin.collections.s` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.t` v0 @kind this) @signature `Lkotlin/collections/t;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L560920.  call `<init>`(v0) @signature `Lkotlin/collections/s;.<init>:()V` @kind direct;
  #L560926.  return @kind void;
}
procedure `boolean` `all`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.all:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5600b8.  v0:= "$this$all" @kind object;
  #L5600bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5600c2.  v0:= "predicate" @kind object;
  #L5600c6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5600cc.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L5600d2.  v0:= temp;
  #L5600d4.  v1:= 1I;
  #L5600d6.  if v0 == 0 then goto L5600dc;
  #L5600da.  return v1;
  #L5600dc.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5600e2.  v2:= temp @kind object;
  #L5600e4.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5600ea.  v2:= temp @kind object;
  #L5600ec.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5600f2.  v0:= temp;
  #L5600f4.  if v0 == 0 then goto L560120;
  #L5600f8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5600fe.  v0:= temp @kind object;
  #L560100.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L560104.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56010a.  v0:= temp @kind object;
  #L56010c.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L560110.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L560116.  v0:= temp;
  #L560118.  if v0 != 0 then goto L5600ec;
  #L56011c.  v2:= 0I;
  #L56011e.  return v2;
  #L560120.  return v1;
}
procedure `boolean` `any`(`java.util.Map` v1 @kind object) @signature `Lkotlin/collections/t;.any:(Ljava/util/Map;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L560134.  v0:= "$this$any" @kind object;
  #L560138.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56013e.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L560144.  v1:= temp;
  #L560146.  v1:= v1 ^~ 1;
  #L56014a.  return v1;
}
procedure `boolean` `any`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.any:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56015c.  v0:= "$this$any" @kind object;
  #L560160.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560166.  v0:= "predicate" @kind object;
  #L56016a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560170.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L560176.  v0:= temp;
  #L560178.  v1:= 0I;
  #L56017a.  if v0 == 0 then goto L560180;
  #L56017e.  return v1;
  #L560180.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560186.  v2:= temp @kind object;
  #L560188.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L56018e.  v2:= temp @kind object;
  #L560190.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L560196.  v0:= temp;
  #L560198.  if v0 == 0 then goto L5601c4;
  #L56019c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5601a2.  v0:= temp @kind object;
  #L5601a4.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L5601a8.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5601ae.  v0:= temp @kind object;
  #L5601b0.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L5601b4.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L5601ba.  v0:= temp;
  #L5601bc.  if v0 == 0 then goto L560190;
  #L5601c0.  v2:= 1I;
  #L5601c2.  return v2;
  #L5601c4.  return v1;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.Map` v1 @kind object) @signature `Lkotlin/collections/t;.asSequence:(Ljava/util/Map;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5608f4.  v0:= "$this$asSequence" @kind object;
  #L5608f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5608fe.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560904.  v1:= temp @kind object;
  #L560906.  call temp:= `asSequence`(v1) @signature `Lkotlin/collections/CollectionsKt;.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @kind static;
  #L56090c.  v1:= temp @kind object;
  #L56090e.  return v1 @kind object;
}
procedure `int` `count`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.count:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L560278.  v0:= "$this$count" @kind object;
  #L56027c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560282.  v0:= "predicate" @kind object;
  #L560286.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56028c.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L560292.  v0:= temp;
  #L560294.  v1:= 0I;
  #L560296.  if v0 == 0 then goto L56029c;
  #L56029a.  return v1;
  #L56029c.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5602a2.  v2:= temp @kind object;
  #L5602a4.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5602aa.  v2:= temp @kind object;
  #L5602ac.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5602b2.  v0:= temp;
  #L5602b4.  if v0 == 0 then goto L5602e2;
  #L5602b8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5602be.  v0:= temp @kind object;
  #L5602c0.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L5602c4.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5602ca.  v0:= temp @kind object;
  #L5602cc.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L5602d0.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L5602d6.  v0:= temp;
  #L5602d8.  if v0 == 0 then goto L5602ac;
  #L5602dc.  v1:= v1 + 1;
  #L5602e0.  goto L5602ac;
  #L5602e2.  return v1;
}
procedure `java.util.List` `flatMap`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.flatMap:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5604a0.  v0:= "$this$flatMap" @kind object;
  #L5604a4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5604aa.  v0:= "transform" @kind object;
  #L5604ae.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5604b4.  v0:= new `java.util.ArrayList`;
  #L5604b8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L5604be.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5604c4.  v2:= temp @kind object;
  #L5604c6.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5604cc.  v2:= temp @kind object;
  #L5604ce.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5604d4.  v1:= temp;
  #L5604d6.  if v1 == 0 then goto L5604fa;
  #L5604da.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5604e0.  v1:= temp @kind object;
  #L5604e2.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L5604e6.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5604ec.  v1:= temp @kind object;
  #L5604ee.  v1:= (`java.lang.Iterable`) v1 @kind object;
  #L5604f2.  call temp:= `addAll`(v0, v1) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L5604f8.  goto L5604ce;
  #L5604fa.  return v0 @kind object;
}
procedure `java.util.List` `flatMapSequence`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.flatMapSequence:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56050c.  v0:= "$this$flatMap" @kind object;
  #L560510.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560516.  v0:= "transform" @kind object;
  #L56051a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560520.  v0:= new `java.util.ArrayList`;
  #L560524.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L56052a.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560530.  v2:= temp @kind object;
  #L560532.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L560538.  v2:= temp @kind object;
  #L56053a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L560540.  v1:= temp;
  #L560542.  if v1 == 0 then goto L560566;
  #L560546.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56054c.  v1:= temp @kind object;
  #L56054e.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L560552.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560558.  v1:= temp @kind object;
  #L56055a.  v1:= (`kotlin.sequences.Sequence`) v1 @kind object;
  #L56055e.  call temp:= `addAll`(v0, v1) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Lkotlin/sequences/Sequence;)Z` @kind static;
  #L560564.  goto L56053a;
  #L560566.  return v0 @kind object;
}
procedure `java.util.Collection` `flatMapSequenceTo`(`java.util.Map` v1 @kind object, `java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.flatMapSequenceTo:(Ljava/util/Map;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5602f4.  v0:= "$this$flatMapTo" @kind object;
  #L5602f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5602fe.  v0:= "destination" @kind object;
  #L560302.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560308.  v0:= "transform" @kind object;
  #L56030c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560312.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560318.  v1:= temp @kind object;
  #L56031a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L560320.  v1:= temp @kind object;
  #L560322.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L560328.  v0:= temp;
  #L56032a.  if v0 == 0 then goto L56034e;
  #L56032e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L560334.  v0:= temp @kind object;
  #L560336.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L56033a.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560340.  v0:= temp @kind object;
  #L560342.  v0:= (`kotlin.sequences.Sequence`) v0 @kind object;
  #L560346.  call temp:= `addAll`(v2, v0) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Lkotlin/sequences/Sequence;)Z` @kind static;
  #L56034c.  goto L560322;
  #L56034e.  return v2 @kind object;
}
procedure `java.util.Collection` `flatMapTo`(`java.util.Map` v1 @kind object, `java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.flatMapTo:(Ljava/util/Map;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L560360.  v0:= "$this$flatMapTo" @kind object;
  #L560364.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56036a.  v0:= "destination" @kind object;
  #L56036e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560374.  v0:= "transform" @kind object;
  #L560378.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56037e.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560384.  v1:= temp @kind object;
  #L560386.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L56038c.  v1:= temp @kind object;
  #L56038e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L560394.  v0:= temp;
  #L560396.  if v0 == 0 then goto L5603ba;
  #L56039a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5603a0.  v0:= temp @kind object;
  #L5603a2.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L5603a6.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5603ac.  v0:= temp @kind object;
  #L5603ae.  v0:= (`java.lang.Iterable`) v0 @kind object;
  #L5603b2.  call temp:= `addAll`(v2, v0) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L5603b8.  goto L56038e;
  #L5603ba.  return v2 @kind object;
}
procedure `void` `forEach`(`java.util.Map` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/collections/t;.forEach:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L560938.  v0:= "$this$forEach" @kind object;
  #L56093c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560942.  v0:= "action" @kind object;
  #L560946.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56094c.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560952.  v1:= temp @kind object;
  #L560954.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L56095a.  v1:= temp @kind object;
  #L56095c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L560962.  v0:= temp;
  #L560964.  if v0 == 0 then goto L56097c;
  #L560968.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56096e.  v0:= temp @kind object;
  #L560970.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L560974.  call temp:= `invoke`(v2, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56097a.  goto L56095c;
  #L56097c.  return @kind void;
}
procedure `java.util.List` `map`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.map:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L560578.  v0:= "$this$map" @kind object;
  #L56057c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560582.  v0:= "transform" @kind object;
  #L560586.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56058c.  v0:= new `java.util.ArrayList`;
  #L560590.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L560596.  v1:= temp;
  #L560598.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L56059e.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5605a4.  v2:= temp @kind object;
  #L5605a6.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5605ac.  v2:= temp @kind object;
  #L5605ae.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5605b4.  v1:= temp;
  #L5605b6.  if v1 == 0 then goto L5605d6;
  #L5605ba.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5605c0.  v1:= temp @kind object;
  #L5605c2.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L5605c6.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5605cc.  v1:= temp @kind object;
  #L5605ce.  call temp:= `add`(v0, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L5605d4.  goto L5605ae;
  #L5605d6.  return v0 @kind object;
}
procedure `java.util.List` `mapNotNull`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.mapNotNull:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5605e8.  v0:= "$this$mapNotNull" @kind object;
  #L5605ec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5605f2.  v0:= "transform" @kind object;
  #L5605f6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5605fc.  v0:= new `java.util.ArrayList`;
  #L560600.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L560606.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L56060c.  v2:= temp @kind object;
  #L56060e.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L560614.  v2:= temp @kind object;
  #L560616.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56061c.  v1:= temp;
  #L56061e.  if v1 == 0 then goto L560642;
  #L560622.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L560628.  v1:= temp @kind object;
  #L56062a.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L56062e.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560634.  v1:= temp @kind object;
  #L560636.  if v1 == 0 then goto L560616;
  #L56063a.  call temp:= `add`(v0, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L560640.  goto L560616;
  #L560642.  return v0 @kind object;
}
procedure `java.util.Collection` `mapNotNullTo`(`java.util.Map` v1 @kind object, `java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.mapNotNullTo:(Ljava/util/Map;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5603cc.  v0:= "$this$mapNotNullTo" @kind object;
  #L5603d0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5603d6.  v0:= "destination" @kind object;
  #L5603da.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5603e0.  v0:= "transform" @kind object;
  #L5603e4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5603ea.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5603f0.  v1:= temp @kind object;
  #L5603f2.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5603f8.  v1:= temp @kind object;
  #L5603fa.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L560400.  v0:= temp;
  #L560402.  if v0 == 0 then goto L560426;
  #L560406.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56040c.  v0:= temp @kind object;
  #L56040e.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L560412.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560418.  v0:= temp @kind object;
  #L56041a.  if v0 == 0 then goto L5603fa;
  #L56041e.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L560424.  goto L5603fa;
  #L560426.  return v2 @kind object;
}
procedure `java.util.Collection` `mapTo`(`java.util.Map` v1 @kind object, `java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.mapTo:(Ljava/util/Map;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L560438.  v0:= "$this$mapTo" @kind object;
  #L56043c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560442.  v0:= "destination" @kind object;
  #L560446.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56044c.  v0:= "transform" @kind object;
  #L560450.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560456.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L56045c.  v1:= temp @kind object;
  #L56045e.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L560464.  v1:= temp @kind object;
  #L560466.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56046c.  v0:= temp;
  #L56046e.  if v0 == 0 then goto L56048e;
  #L560472.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L560478.  v0:= temp @kind object;
  #L56047a.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L56047e.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560484.  v0:= temp @kind object;
  #L560486.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L56048c.  goto L560466;
  #L56048e.  return v2 @kind object;
}
procedure `java.util.Map$Entry` `minBy`(`java.util.Map` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/collections/t;.minBy:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L560818.  v0:= "$this$minBy" @kind object;
  #L56081c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560822.  v0:= "selector" @kind object;
  #L560826.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56082c.  call temp:= `entrySet`(v5) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560832.  v5:= temp @kind object;
  #L560834.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L56083a.  v5:= temp @kind object;
  #L56083c.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L560842.  v0:= temp;
  #L560844.  if v0 != 0 then goto L56084c;
  #L560848.  v5:= 0I;
  #L56084a.  goto L5608a2;
  #L56084c.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L560852.  v0:= temp @kind object;
  #L560854.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56085a.  v1:= temp;
  #L56085c.  if v1 != 0 then goto L560864;
  #L560860.  v5:= v0 @kind object;
  #L560862.  goto L5608a2;
  #L560864.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56086a.  v1:= temp @kind object;
  #L56086c.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L560870.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L560876.  v2:= temp @kind object;
  #L560878.  call temp:= `invoke`(v6, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56087e.  v3:= temp @kind object;
  #L560880.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L560884.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L56088a.  v4:= temp;
  #L56088c.  if v4 <= 0 then goto L560894;
  #L560890.  v0:= v2 @kind object;
  #L560892.  v1:= v3 @kind object;
  #L560894.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56089a.  v2:= temp;
  #L56089c.  if v2 != 0 then goto L560870;
  #L5608a0.  goto L560860;
  #L5608a2.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L5608a6.  return v5 @kind object;
}
procedure `java.util.Map$Entry` `minWith`(`java.util.Map` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/collections/t;.minWith:(Ljava/util/Map;Ljava/util/Comparator;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5608b8.  v0:= "$this$minWith" @kind object;
  #L5608bc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5608c2.  v0:= "comparator" @kind object;
  #L5608c6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5608cc.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5608d2.  v1:= temp @kind object;
  #L5608d4.  call temp:= `minWithOrNull`(v1, v2) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.minWithOrNull:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L5608da.  v1:= temp @kind object;
  #L5608dc.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L5608e0.  return v1 @kind object;
}
procedure `boolean` `none`(`java.util.Map` v1 @kind object) @signature `Lkotlin/collections/t;.none:(Ljava/util/Map;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5601d8.  v0:= "$this$none" @kind object;
  #L5601dc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5601e2.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L5601e8.  v1:= temp;
  #L5601ea.  return v1;
}
procedure `boolean` `none`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.none:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5601fc.  v0:= "$this$none" @kind object;
  #L560200.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560206.  v0:= "predicate" @kind object;
  #L56020a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560210.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L560216.  v0:= temp;
  #L560218.  v1:= 1I;
  #L56021a.  if v0 == 0 then goto L560220;
  #L56021e.  return v1;
  #L560220.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L560226.  v2:= temp @kind object;
  #L560228.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L56022e.  v2:= temp @kind object;
  #L560230.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L560236.  v0:= temp;
  #L560238.  if v0 == 0 then goto L560264;
  #L56023c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L560242.  v0:= temp @kind object;
  #L560244.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L560248.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56024e.  v0:= temp @kind object;
  #L560250.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L560254.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L56025a.  v0:= temp;
  #L56025c.  if v0 == 0 then goto L560230;
  #L560260.  v2:= 0I;
  #L560262.  return v2;
  #L560264.  return v1;
}
procedure `java.util.Map` `onEach`(`java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/t;.onEach:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L560754.  v0:= "$this$onEach" @kind object;
  #L560758.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56075e.  v0:= "action" @kind object;
  #L560762.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L560768.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L56076e.  v0:= temp @kind object;
  #L560770.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L560776.  v0:= temp @kind object;
  #L560778.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56077e.  v1:= temp;
  #L560780.  if v1 == 0 then goto L560798;
  #L560784.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56078a.  v1:= temp @kind object;
  #L56078c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L560790.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560796.  goto L560778;
  #L560798.  return v2 @kind object;
}
procedure `java.util.Map` `onEachIndexed`(`java.util.Map` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlin/collections/t;.onEachIndexed:(Ljava/util/Map;Lkotlin/jvm/functions/Function2;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5607ac.  v0:= "$this$onEachIndexed" @kind object;
  #L5607b0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5607b6.  v0:= "action" @kind object;
  #L5607ba.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5607c0.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5607c6.  v0:= temp @kind object;
  #L5607c8.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5607ce.  v0:= temp @kind object;
  #L5607d0.  v1:= 0I;
  #L5607d2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5607d8.  v2:= temp;
  #L5607da.  if v2 == 0 then goto L560806;
  #L5607de.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5607e4.  v2:= temp @kind object;
  #L5607e6.  v3:= v1 + 1;
  #L5607ea.  if v1 >= 0 then goto L5607f4;
  #L5607ee.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L5607f4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L5607fa.  v1:= temp @kind object;
  #L5607fc.  call temp:= `invoke`(v5, v1, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L560802.  v1:= v3;
  #L560804.  goto L5607d2;
  #L560806.  return v4 @kind object;
}
procedure `java.util.List` `toList`(`java.util.Map` v4 @kind object) @signature `Lkotlin/collections/t;.toList:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L560654.  v0:= "$this$toList" @kind object;
  #L560658.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56065e.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L560664.  v0:= temp;
  #L560666.  if v0 != 0 then goto L560674;
  #L56066a.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L560670.  v4:= temp @kind object;
  #L560672.  return v4 @kind object;
  #L560674.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L56067a.  v0:= temp @kind object;
  #L56067c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L560682.  v0:= temp @kind object;
  #L560684.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56068a.  v1:= temp;
  #L56068c.  if v1 != 0 then goto L56069a;
  #L560690.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L560696.  v4:= temp @kind object;
  #L560698.  return v4 @kind object;
  #L56069a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5606a0.  v1:= temp @kind object;
  #L5606a2.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L5606a6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5606ac.  v2:= temp;
  #L5606ae.  if v2 != 0 then goto L5606d6;
  #L5606b2.  v4:= new `kotlin.Pair`;
  #L5606b6.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L5606bc.  v0:= temp @kind object;
  #L5606be.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L5606c4.  v1:= temp @kind object;
  #L5606c6.  call `<init>`(v4, v0, v1) @signature `Lkotlin/Pair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L5606cc.  call temp:= `listOf`(v4) @signature `Lkotlin/collections/CollectionsKt;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L5606d2.  v4:= temp @kind object;
  #L5606d4.  return v4 @kind object;
  #L5606d6.  v2:= new `java.util.ArrayList`;
  #L5606da.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L5606e0.  v4:= temp;
  #L5606e2.  call `<init>`(v2, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L5606e8.  v4:= new `kotlin.Pair`;
  #L5606ec.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L5606f2.  v3:= temp @kind object;
  #L5606f4.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L5606fa.  v1:= temp @kind object;
  #L5606fc.  call `<init>`(v4, v3, v1) @signature `Lkotlin/Pair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L560702.  call temp:= `add`(v2, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L560708.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56070e.  v4:= temp @kind object;
  #L560710.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L560714.  v1:= new `kotlin.Pair`;
  #L560718.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L56071e.  v3:= temp @kind object;
  #L560720.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L560726.  v4:= temp @kind object;
  #L560728.  call `<init>`(v1, v3, v4) @signature `Lkotlin/Pair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L56072e.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L560734.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56073a.  v4:= temp;
  #L56073c.  if v4 != 0 then goto L560708;
  #L560740.  return v2 @kind object;
}
