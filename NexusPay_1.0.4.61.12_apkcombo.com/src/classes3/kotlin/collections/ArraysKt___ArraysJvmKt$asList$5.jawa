record `kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractList` @kind class, `java.util.RandomAccess` @kind interface {
  `float`[] `kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v0 @kind this, `float`[] v1 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.<init>:([F)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L535e70.  v0.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] := v1 @kind object;
  #L535e74.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractList;.<init>:()V` @kind direct;
  #L535e7a.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v7 @kind this, `float` v8 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.contains:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L535c70.  v0:= v7.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L535c74.  v1:= length @variable v0;
  #L535c76.  v2:= 0I;
  #L535c78.  v3:= 0I;
  #L535c7a.  v4:= 1I;
  #L535c7c.  if v3 >= v1 then goto L535cac;
  #L535c80.  v5:= v0[v3];
  #L535c84.  call temp:= `floatToIntBits`(v5) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L535c8a.  v5:= temp;
  #L535c8c.  call temp:= `floatToIntBits`(v8) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L535c92.  v6:= temp;
  #L535c94.  if v5 != v6 then goto L535c9c;
  #L535c98.  v5:= 1I;
  #L535c9a.  goto L535c9e;
  #L535c9c.  v5:= 0I;
  #L535c9e.  if v5 == 0 then goto L535ca6;
  #L535ca2.  v2:= 1I;
  #L535ca4.  goto L535cac;
  #L535ca6.  v3:= v3 + 1;
  #L535caa.  goto L535c7a;
  #L535cac.  return v2;
}
procedure `boolean` `contains`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L535cc0.  v0:= instanceof @variable v2 @type ^`java.lang.Float` @kind boolean;
  #L535cc4.  if v0 == 0 then goto L535cde;
  #L535cc8.  v2:= (`java.lang.Number`) v2 @kind object;
  #L535ccc.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L535cd2.  v2:= temp;
  #L535cd4.  call temp:= `contains`(v1, v2) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.contains:(F)Z` @kind virtual;
  #L535cda.  v2:= temp;
  #L535cdc.  return v2;
  #L535cde.  v2:= 0I;
  #L535ce0.  return v2;
}
procedure `java.lang.Float` `get`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.get:(I)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L535e30.  v0:= v1.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L535e34.  v2:= v0[v2];
  #L535e38.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L535e3e.  v2:= temp @kind object;
  #L535e40.  return v2 @kind object;
}
procedure `java.lang.Object` `get`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L535e54.  call temp:= `get`(v0, v1) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.get:(I)Ljava/lang/Float;` @kind virtual;
  #L535e5a.  v1:= temp @kind object;
  #L535e5c.  return v1 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L535d18.  v0:= v1.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L535d1c.  v0:= length @variable v0;
  #L535d1e.  return v0;
}
procedure `int` `indexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v6 @kind this, `float` v7 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.indexOf:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L535d30.  v0:= v6.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L535d34.  v1:= length @variable v0;
  #L535d36.  v2:= 0I;
  #L535d38.  v3:= 0I;
  #L535d3a.  if v3 >= v1 then goto L535d68;
  #L535d3e.  v4:= v0[v3];
  #L535d42.  call temp:= `floatToIntBits`(v4) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L535d48.  v4:= temp;
  #L535d4a.  call temp:= `floatToIntBits`(v7) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L535d50.  v5:= temp;
  #L535d52.  if v4 != v5 then goto L535d5a;
  #L535d56.  v4:= 1I;
  #L535d58.  goto L535d5c;
  #L535d5a.  v4:= 0I;
  #L535d5c.  if v4 == 0 then goto L535d62;
  #L535d60.  goto L535d6a;
  #L535d62.  v3:= v3 + 1;
  #L535d66.  goto L535d3a;
  #L535d68.  v3:= -1I;
  #L535d6a.  return v3;
}
procedure `int` `indexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L535d7c.  v0:= instanceof @variable v2 @type ^`java.lang.Float` @kind boolean;
  #L535d80.  if v0 == 0 then goto L535d9a;
  #L535d84.  v2:= (`java.lang.Number`) v2 @kind object;
  #L535d88.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L535d8e.  v2:= temp;
  #L535d90.  call temp:= `indexOf`(v1, v2) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.indexOf:(F)I` @kind virtual;
  #L535d96.  v2:= temp;
  #L535d98.  return v2;
  #L535d9a.  v2:= -1I;
  #L535d9c.  return v2;
}
procedure `boolean` `isEmpty`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L535cf4.  v0:= v1.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L535cf8.  v0:= length @variable v0;
  #L535cfa.  if v0 != 0 then goto L535d02;
  #L535cfe.  v0:= 1I;
  #L535d00.  goto L535d04;
  #L535d02.  v0:= 0I;
  #L535d04.  return v0;
}
procedure `int` `lastIndexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v5 @kind this, `float` v6 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.lastIndexOf:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L535db0.  v0:= v5.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L535db4.  v1:= length @variable v0;
  #L535db6.  v2:= -1I;
  #L535db8.  v1:= v1 + v2 @kind int;
  #L535dba.  if v1 < 0 then goto L535dea;
  #L535dbe.  v3:= v0[v1];
  #L535dc2.  call temp:= `floatToIntBits`(v3) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L535dc8.  v3:= temp;
  #L535dca.  call temp:= `floatToIntBits`(v6) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L535dd0.  v4:= temp;
  #L535dd2.  if v3 != v4 then goto L535dda;
  #L535dd6.  v3:= 1I;
  #L535dd8.  goto L535ddc;
  #L535dda.  v3:= 0I;
  #L535ddc.  if v3 == 0 then goto L535de4;
  #L535de0.  v2:= v1;
  #L535de2.  goto L535dea;
  #L535de4.  v1:= v1 + -1;
  #L535de8.  goto L535dba;
  #L535dea.  return v2;
}
procedure `int` `lastIndexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L535dfc.  v0:= instanceof @variable v2 @type ^`java.lang.Float` @kind boolean;
  #L535e00.  if v0 == 0 then goto L535e1a;
  #L535e04.  v2:= (`java.lang.Number`) v2 @kind object;
  #L535e08.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L535e0e.  v2:= temp;
  #L535e10.  call temp:= `lastIndexOf`(v1, v2) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.lastIndexOf:(F)I` @kind virtual;
  #L535e16.  v2:= temp;
  #L535e18.  return v2;
  #L535e1a.  v2:= -1I;
  #L535e1c.  return v2;
}
