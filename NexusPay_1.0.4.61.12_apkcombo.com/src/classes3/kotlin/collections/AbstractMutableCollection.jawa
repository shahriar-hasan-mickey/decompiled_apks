record `kotlin.collections.AbstractMutableCollection` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.AbstractCollection` @kind class, `java.util.Collection` @kind interface, `kotlin.jvm.internal.markers.KMutableCollection` @kind interface {
}
procedure `void` `<init>`(`kotlin.collections.AbstractMutableCollection` v0 @kind this) @signature `Lkotlin/collections/AbstractMutableCollection;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L533558.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L53355e.  return @kind void;
}
procedure `boolean` `add`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/collections/AbstractMutableCollection;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getSize`() @signature `Lkotlin/collections/AbstractMutableCollection;.getSize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`(`kotlin.collections.AbstractMutableCollection` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableCollection;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L53353c.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/AbstractMutableCollection;.getSize:()I` @kind virtual;
  #L533542.  v0:= temp;
  #L533544.  return v0;
}
