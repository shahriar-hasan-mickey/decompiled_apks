record `kotlin.collections.UByteIterator` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
}
procedure `void` `<init>`(`kotlin.collections.UByteIterator` v0 @kind this) @signature `Lkotlin/collections/UByteIterator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L562600.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L562606.  return @kind void;
}
procedure `java.lang.Object` `next`(`kotlin.collections.UByteIterator` v1 @kind this) @signature `Lkotlin/collections/UByteIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L5625dc.  call temp:= `next-w2LRezQ`(v1) @signature `Lkotlin/collections/UByteIterator;.next-w2LRezQ:()B` @kind virtual;
  #L5625e2.  v0:= temp;
  #L5625e4.  call temp:= `box-impl`(v0) @signature `Lkotlin/UByte;.box-impl:(B)Lkotlin/UByte;` @kind static;
  #L5625ea.  v0:= temp @kind object;
  #L5625ec.  return v0 @kind object;
}
procedure `byte` `next-w2LRezQ`(`kotlin.collections.UByteIterator` v1 @kind this) @signature `Lkotlin/collections/UByteIterator;.next-w2LRezQ:()B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L5625c0.  call temp:= `nextUByte-w2LRezQ`(v1) @signature `Lkotlin/collections/UByteIterator;.nextUByte-w2LRezQ:()B` @kind virtual;
  #L5625c6.  v0:= temp;
  #L5625c8.  return v0;
}
procedure `byte` `nextUByte-w2LRezQ`() @signature `Lkotlin/collections/UByteIterator;.nextUByte-w2LRezQ:()B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `remove`(`kotlin.collections.UByteIterator` v2 @kind this) @signature `Lkotlin/collections/UByteIterator;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L562618.  v0:= new `java.lang.UnsupportedOperationException`;
  #L56261c.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L562620.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L562626.  throw v0;
}
