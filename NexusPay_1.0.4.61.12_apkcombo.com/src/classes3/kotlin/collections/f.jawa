record `kotlin.collections.f` @kind class @AccessFlag  extends `kotlin.collections.CollectionsKt__CollectionsKt` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.f` v0 @kind this) @signature `Lkotlin/collections/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L556ea0.  call `<init>`(v0) @signature `Lkotlin/collections/CollectionsKt__CollectionsKt;.<init>:()V` @kind direct;
  #L556ea6.  return @kind void;
}
procedure `boolean` `b`(`java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/f;.b:(Ljava/util/Collection;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L556c50.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L556c56.  v0:= temp;
  #L556c58.  v1:= 2I;
  #L556c5a.  if v0 <= v1 then goto L556c6a;
  #L556c5e.  v2:= instanceof @variable v2 @type ^`java.util.ArrayList` @kind boolean;
  #L556c62.  if v2 == 0 then goto L556c6a;
  #L556c66.  v2:= 1I;
  #L556c68.  goto L556c6c;
  #L556c6a.  v2:= 0I;
  #L556c6c.  return v2;
}
procedure `int` `collectionSizeOrDefault`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/f;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L556c80.  v0:= "$this$collectionSizeOrDefault" @kind object;
  #L556c84.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556c8a.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L556c8e.  if v0 == 0 then goto L556c9e;
  #L556c92.  v1:= (`java.util.Collection`) v1 @kind object;
  #L556c96.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L556c9c.  v2:= temp;
  #L556c9e.  return v2;
}
procedure `java.lang.Integer` `collectionSizeOrNull`(`java.lang.Iterable` v1 @kind object) @signature `Lkotlin/collections/f;.collectionSizeOrNull:(Ljava/lang/Iterable;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L556cb0.  v0:= "$this$collectionSizeOrNull" @kind object;
  #L556cb4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556cba.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L556cbe.  if v0 == 0 then goto L556cd8;
  #L556cc2.  v1:= (`java.util.Collection`) v1 @kind object;
  #L556cc6.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L556ccc.  v1:= temp;
  #L556cce.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L556cd4.  v1:= temp @kind object;
  #L556cd6.  goto L556cda;
  #L556cd8.  v1:= 0I;
  #L556cda.  return v1 @kind object;
}
procedure `java.util.Collection` `convertToSetForSetOperation`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/f;.convertToSetForSetOperation:(Ljava/lang/Iterable;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L556cec.  v0:= "$this$convertToSetForSetOperation" @kind object;
  #L556cf0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556cf6.  v0:= instanceof @variable v2 @type ^`java.util.Set` @kind boolean;
  #L556cfa.  if v0 == 0 then goto L556d04;
  #L556cfe.  v2:= (`java.util.Collection`) v2 @kind object;
  #L556d02.  goto L556d34;
  #L556d04.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L556d08.  if v0 == 0 then goto L556d2c;
  #L556d0c.  v0:= v2 @kind object;
  #L556d0e.  v0:= (`java.util.Collection`) v0 @kind object;
  #L556d12.  call temp:= `b`(v0) @signature `Lkotlin/collections/f;.b:(Ljava/util/Collection;)Z` @kind static;
  #L556d18.  v1:= temp;
  #L556d1a.  if v1 == 0 then goto L556d28;
  #L556d1e.  call temp:= `toHashSet`(v2) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L556d24.  v2:= temp @kind object;
  #L556d26.  goto L556d34;
  #L556d28.  v2:= v0 @kind object;
  #L556d2a.  goto L556d34;
  #L556d2c.  call temp:= `toHashSet`(v2) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L556d32.  v2:= temp @kind object;
  #L556d34.  return v2 @kind object;
}
procedure `java.util.Collection` `convertToSetForSetOperationWith`(`java.lang.Iterable` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/f;.convertToSetForSetOperationWith:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L556d48.  v0:= "$this$convertToSetForSetOperationWith" @kind object;
  #L556d4c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556d52.  v0:= "source" @kind object;
  #L556d56.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556d5c.  v0:= instanceof @variable v1 @type ^`java.util.Set` @kind boolean;
  #L556d60.  if v0 == 0 then goto L556d6a;
  #L556d64.  v1:= (`java.util.Collection`) v1 @kind object;
  #L556d68.  goto L556dba;
  #L556d6a.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L556d6e.  if v0 == 0 then goto L556db2;
  #L556d72.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L556d76.  if v0 == 0 then goto L556d92;
  #L556d7a.  v2:= (`java.util.Collection`) v2 @kind object;
  #L556d7e.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L556d84.  v2:= temp;
  #L556d86.  v0:= 2I;
  #L556d88.  if v2 >= v0 then goto L556d92;
  #L556d8c.  v1:= (`java.util.Collection`) v1 @kind object;
  #L556d90.  goto L556dba;
  #L556d92.  v2:= v1 @kind object;
  #L556d94.  v2:= (`java.util.Collection`) v2 @kind object;
  #L556d98.  call temp:= `b`(v2) @signature `Lkotlin/collections/f;.b:(Ljava/util/Collection;)Z` @kind static;
  #L556d9e.  v0:= temp;
  #L556da0.  if v0 == 0 then goto L556dae;
  #L556da4.  call temp:= `toHashSet`(v1) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L556daa.  v1:= temp @kind object;
  #L556dac.  goto L556dba;
  #L556dae.  v1:= v2 @kind object;
  #L556db0.  goto L556dba;
  #L556db2.  call temp:= `toHashSet`(v1) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L556db8.  v1:= temp @kind object;
  #L556dba.  return v1 @kind object;
}
procedure `java.util.List` `flatten`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/f;.flatten:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L556dcc.  v0:= "$this$flatten" @kind object;
  #L556dd0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556dd6.  v0:= new `java.util.ArrayList`;
  #L556dda.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L556de0.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L556de6.  v2:= temp @kind object;
  #L556de8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L556dee.  v1:= temp;
  #L556df0.  if v1 == 0 then goto L556e08;
  #L556df4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L556dfa.  v1:= temp @kind object;
  #L556dfc.  v1:= (`java.lang.Iterable`) v1 @kind object;
  #L556e00.  call temp:= `addAll`(v0, v1) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L556e06.  goto L556de8;
  #L556e08.  return v0 @kind object;
}
procedure `kotlin.Pair` `unzip`(`java.lang.Iterable` v4 @kind object) @signature `Lkotlin/collections/f;.unzip:(Ljava/lang/Iterable;)Lkotlin/Pair;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L556e1c.  v0:= "$this$unzip" @kind object;
  #L556e20.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L556e26.  v0:= 10I;
  #L556e2a.  call temp:= `collectionSizeOrDefault`(v4, v0) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L556e30.  v0:= temp;
  #L556e32.  v1:= new `java.util.ArrayList`;
  #L556e36.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L556e3c.  v2:= new `java.util.ArrayList`;
  #L556e40.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L556e46.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L556e4c.  v4:= temp @kind object;
  #L556e4e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L556e54.  v0:= temp;
  #L556e56.  if v0 == 0 then goto L556e84;
  #L556e5a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L556e60.  v0:= temp @kind object;
  #L556e62.  v0:= (`kotlin.Pair`) v0 @kind object;
  #L556e66.  call temp:= `getFirst`(v0) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L556e6c.  v3:= temp @kind object;
  #L556e6e.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L556e74.  call temp:= `getSecond`(v0) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L556e7a.  v0:= temp @kind object;
  #L556e7c.  call temp:= `add`(v2, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L556e82.  goto L556e4e;
  #L556e84.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L556e8a.  v4:= temp @kind object;
  #L556e8c.  return v4 @kind object;
}
