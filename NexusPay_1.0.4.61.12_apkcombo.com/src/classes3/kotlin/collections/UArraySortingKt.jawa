record `kotlin.collections.UArraySortingKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`long`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lkotlin/collections/UArraySortingKt;.a:([JII)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L562224.  v0:= v7 + v8 @kind int;
  #L562228.  v0:= v0 / 2;
  #L56222c.  call temp:= `get-s-VKNKU`(v6, v0) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L562232.  v0:= temp @kind wide;
  #L562234.  if v7 > v8 then goto L562296;
  #L562238.  call temp:= `get-s-VKNKU`(v6, v7) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L56223e.  v2:= temp @kind wide;
  #L562240.  call temp:= `ulongCompare`(v2, v0) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L562246.  v2:= temp;
  #L562248.  if v2 >= 0 then goto L562252;
  #L56224c.  v7:= v7 + 1;
  #L562250.  goto L562238;
  #L562252.  call temp:= `get-s-VKNKU`(v6, v8) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L562258.  v2:= temp @kind wide;
  #L56225a.  call temp:= `ulongCompare`(v2, v0) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L562260.  v2:= temp;
  #L562262.  if v2 <= 0 then goto L56226c;
  #L562266.  v8:= v8 + -1;
  #L56226a.  goto L562252;
  #L56226c.  if v7 > v8 then goto L562234;
  #L562270.  call temp:= `get-s-VKNKU`(v6, v7) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L562276.  v2:= temp @kind wide;
  #L562278.  call temp:= `get-s-VKNKU`(v6, v8) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L56227e.  v4:= temp @kind wide;
  #L562280.  call `set-k8EXiF4`(v6, v7, v4) @signature `Lkotlin/ULongArray;.set-k8EXiF4:([JIJ)V` @kind static;
  #L562286.  call `set-k8EXiF4`(v6, v8, v2) @signature `Lkotlin/ULongArray;.set-k8EXiF4:([JIJ)V` @kind static;
  #L56228c.  v7:= v7 + 1;
  #L562290.  v8:= v8 + -1;
  #L562294.  goto L562234;
  #L562296.  return v7;
}
procedure `int` `b`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/UArraySortingKt;.b:([BII)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5622a8.  v0:= v4 + v5 @kind int;
  #L5622ac.  v0:= v0 / 2;
  #L5622b0.  call temp:= `get-w2LRezQ`(v3, v0) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L5622b6.  v0:= temp;
  #L5622b8.  if v4 > v5 then goto L562326;
  #L5622bc.  call temp:= `get-w2LRezQ`(v3, v4) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L5622c2.  v1:= temp;
  #L5622c4.  v1:= v1 ^& 255;
  #L5622c8.  v2:= v0 ^& 255;
  #L5622cc.  call temp:= `compare`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L5622d2.  v1:= temp;
  #L5622d4.  if v1 >= 0 then goto L5622de;
  #L5622d8.  v4:= v4 + 1;
  #L5622dc.  goto L5622bc;
  #L5622de.  call temp:= `get-w2LRezQ`(v3, v5) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L5622e4.  v1:= temp;
  #L5622e6.  v1:= v1 ^& 255;
  #L5622ea.  call temp:= `compare`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L5622f0.  v1:= temp;
  #L5622f2.  if v1 <= 0 then goto L5622fc;
  #L5622f6.  v5:= v5 + -1;
  #L5622fa.  goto L5622de;
  #L5622fc.  if v4 > v5 then goto L5622b8;
  #L562300.  call temp:= `get-w2LRezQ`(v3, v4) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L562306.  v1:= temp;
  #L562308.  call temp:= `get-w2LRezQ`(v3, v5) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L56230e.  v2:= temp;
  #L562310.  call `set-VurrAj0`(v3, v4, v2) @signature `Lkotlin/UByteArray;.set-VurrAj0:([BIB)V` @kind static;
  #L562316.  call `set-VurrAj0`(v3, v5, v1) @signature `Lkotlin/UByteArray;.set-VurrAj0:([BIB)V` @kind static;
  #L56231c.  v4:= v4 + 1;
  #L562320.  v5:= v5 + -1;
  #L562324.  goto L5622b8;
  #L562326.  return v4;
}
procedure `int` `c`(`short`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lkotlin/collections/UArraySortingKt;.c:([SII)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L562338.  v0:= v5 + v6 @kind int;
  #L56233c.  v0:= v0 / 2;
  #L562340.  call temp:= `get-Mh2AYeg`(v4, v0) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L562346.  v0:= temp;
  #L562348.  if v5 > v6 then goto L5623b8;
  #L56234c.  call temp:= `get-Mh2AYeg`(v4, v5) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L562352.  v1:= temp;
  #L562354.  v2:= 65535I;
  #L56235a.  v1:= v1 ^& v2 @kind int;
  #L56235c.  v3:= v0 ^& v2 @kind int;
  #L562360.  call temp:= `compare`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L562366.  v1:= temp;
  #L562368.  if v1 >= 0 then goto L562372;
  #L56236c.  v5:= v5 + 1;
  #L562370.  goto L56234c;
  #L562372.  call temp:= `get-Mh2AYeg`(v4, v6) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L562378.  v1:= temp;
  #L56237a.  v1:= v1 ^& v2 @kind int;
  #L56237c.  call temp:= `compare`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L562382.  v1:= temp;
  #L562384.  if v1 <= 0 then goto L56238e;
  #L562388.  v6:= v6 + -1;
  #L56238c.  goto L562372;
  #L56238e.  if v5 > v6 then goto L562348;
  #L562392.  call temp:= `get-Mh2AYeg`(v4, v5) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L562398.  v1:= temp;
  #L56239a.  call temp:= `get-Mh2AYeg`(v4, v6) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L5623a0.  v2:= temp;
  #L5623a2.  call `set-01HTLdE`(v4, v5, v2) @signature `Lkotlin/UShortArray;.set-01HTLdE:([SIS)V` @kind static;
  #L5623a8.  call `set-01HTLdE`(v4, v6, v1) @signature `Lkotlin/UShortArray;.set-01HTLdE:([SIS)V` @kind static;
  #L5623ae.  v5:= v5 + 1;
  #L5623b2.  v6:= v6 + -1;
  #L5623b6.  goto L562348;
  #L5623b8.  return v5;
}
procedure `int` `d`(`int`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/UArraySortingKt;.d:([III)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5623cc.  v0:= v4 + v5 @kind int;
  #L5623d0.  v0:= v0 / 2;
  #L5623d4.  call temp:= `get-pVg5ArA`(v3, v0) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L5623da.  v0:= temp;
  #L5623dc.  if v4 > v5 then goto L56243e;
  #L5623e0.  call temp:= `get-pVg5ArA`(v3, v4) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L5623e6.  v1:= temp;
  #L5623e8.  call temp:= `uintCompare`(v1, v0) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L5623ee.  v1:= temp;
  #L5623f0.  if v1 >= 0 then goto L5623fa;
  #L5623f4.  v4:= v4 + 1;
  #L5623f8.  goto L5623e0;
  #L5623fa.  call temp:= `get-pVg5ArA`(v3, v5) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L562400.  v1:= temp;
  #L562402.  call temp:= `uintCompare`(v1, v0) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L562408.  v1:= temp;
  #L56240a.  if v1 <= 0 then goto L562414;
  #L56240e.  v5:= v5 + -1;
  #L562412.  goto L5623fa;
  #L562414.  if v4 > v5 then goto L5623dc;
  #L562418.  call temp:= `get-pVg5ArA`(v3, v4) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L56241e.  v1:= temp;
  #L562420.  call temp:= `get-pVg5ArA`(v3, v5) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L562426.  v2:= temp;
  #L562428.  call `set-VXSXFK8`(v3, v4, v2) @signature `Lkotlin/UIntArray;.set-VXSXFK8:([III)V` @kind static;
  #L56242e.  call `set-VXSXFK8`(v3, v5, v1) @signature `Lkotlin/UIntArray;.set-VXSXFK8:([III)V` @kind static;
  #L562434.  v4:= v4 + 1;
  #L562438.  v5:= v5 + -1;
  #L56243c.  goto L5623dc;
  #L56243e.  return v4;
}
procedure `void` `e`(`long`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/collections/UArraySortingKt;.e:([JII)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L562450.  call temp:= `a`(v2, v3, v4) @signature `Lkotlin/collections/UArraySortingKt;.a:([JII)I` @kind static;
  #L562456.  v0:= temp;
  #L562458.  v1:= v0 + -1;
  #L56245c.  if v3 >= v1 then goto L562466;
  #L562460.  call `e`(v2, v3, v1) @signature `Lkotlin/collections/UArraySortingKt;.e:([JII)V` @kind static;
  #L562466.  if v0 >= v4 then goto L562470;
  #L56246a.  call `e`(v2, v0, v4) @signature `Lkotlin/collections/UArraySortingKt;.e:([JII)V` @kind static;
  #L562470.  return @kind void;
}
procedure `void` `f`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/collections/UArraySortingKt;.f:([BII)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L562484.  call temp:= `b`(v2, v3, v4) @signature `Lkotlin/collections/UArraySortingKt;.b:([BII)I` @kind static;
  #L56248a.  v0:= temp;
  #L56248c.  v1:= v0 + -1;
  #L562490.  if v3 >= v1 then goto L56249a;
  #L562494.  call `f`(v2, v3, v1) @signature `Lkotlin/collections/UArraySortingKt;.f:([BII)V` @kind static;
  #L56249a.  if v0 >= v4 then goto L5624a4;
  #L56249e.  call `f`(v2, v0, v4) @signature `Lkotlin/collections/UArraySortingKt;.f:([BII)V` @kind static;
  #L5624a4.  return @kind void;
}
procedure `void` `g`(`short`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/collections/UArraySortingKt;.g:([SII)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5624b8.  call temp:= `c`(v2, v3, v4) @signature `Lkotlin/collections/UArraySortingKt;.c:([SII)I` @kind static;
  #L5624be.  v0:= temp;
  #L5624c0.  v1:= v0 + -1;
  #L5624c4.  if v3 >= v1 then goto L5624ce;
  #L5624c8.  call `g`(v2, v3, v1) @signature `Lkotlin/collections/UArraySortingKt;.g:([SII)V` @kind static;
  #L5624ce.  if v0 >= v4 then goto L5624d8;
  #L5624d2.  call `g`(v2, v0, v4) @signature `Lkotlin/collections/UArraySortingKt;.g:([SII)V` @kind static;
  #L5624d8.  return @kind void;
}
procedure `void` `h`(`int`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/collections/UArraySortingKt;.h:([III)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5624ec.  call temp:= `d`(v2, v3, v4) @signature `Lkotlin/collections/UArraySortingKt;.d:([III)I` @kind static;
  #L5624f2.  v0:= temp;
  #L5624f4.  v1:= v0 + -1;
  #L5624f8.  if v3 >= v1 then goto L562502;
  #L5624fc.  call `h`(v2, v3, v1) @signature `Lkotlin/collections/UArraySortingKt;.h:([III)V` @kind static;
  #L562502.  if v0 >= v4 then goto L56250c;
  #L562506.  call `h`(v2, v0, v4) @signature `Lkotlin/collections/UArraySortingKt;.h:([III)V` @kind static;
  #L56250c.  return @kind void;
}
procedure `void` `sortArray--nroSd4`(`long`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/UArraySortingKt;.sortArray--nroSd4:([JII)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L562520.  v0:= "array" @kind object;
  #L562524.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56252a.  v3:= v3 + -1;
  #L56252e.  call `e`(v1, v2, v3) @signature `Lkotlin/collections/UArraySortingKt;.e:([JII)V` @kind static;
  #L562534.  return @kind void;
}
procedure `void` `sortArray-4UcCI2c`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/UArraySortingKt;.sortArray-4UcCI2c:([BII)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L562548.  v0:= "array" @kind object;
  #L56254c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L562552.  v3:= v3 + -1;
  #L562556.  call `f`(v1, v2, v3) @signature `Lkotlin/collections/UArraySortingKt;.f:([BII)V` @kind static;
  #L56255c.  return @kind void;
}
procedure `void` `sortArray-Aa5vz7o`(`short`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/UArraySortingKt;.sortArray-Aa5vz7o:([SII)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L562570.  v0:= "array" @kind object;
  #L562574.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56257a.  v3:= v3 + -1;
  #L56257e.  call `g`(v1, v2, v3) @signature `Lkotlin/collections/UArraySortingKt;.g:([SII)V` @kind static;
  #L562584.  return @kind void;
}
procedure `void` `sortArray-oBK06Vg`(`int`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/UArraySortingKt;.sortArray-oBK06Vg:([III)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L562598.  v0:= "array" @kind object;
  #L56259c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5625a2.  v3:= v3 + -1;
  #L5625a6.  call `h`(v1, v2, v3) @signature `Lkotlin/collections/UArraySortingKt;.h:([III)V` @kind static;
  #L5625ac.  return @kind void;
}
