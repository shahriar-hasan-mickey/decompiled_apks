record `kotlin.DeepRecursiveScopeImpl` @kind class @AccessFlag FINAL extends `kotlin.DeepRecursiveScope` @kind class, `kotlin.coroutines.Continuation` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlin.DeepRecursiveScopeImpl.a` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlin.DeepRecursiveScopeImpl.b` @AccessFlag PRIVATE;
  `kotlin.coroutines.Continuation` `kotlin.DeepRecursiveScopeImpl.c` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlin.DeepRecursiveScopeImpl.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `kotlin.jvm.functions.Function3` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.<init>:(Lkotlin/jvm/functions/Function3;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L52df28.  v0:= "block" @kind object;
  #L52df2c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52df32.  v0:= 0I;
  #L52df34.  call `<init>`(v1, v0) @signature `Lkotlin/DeepRecursiveScope;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L52df3a.  v1.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L52df3e.  v1.`kotlin.DeepRecursiveScopeImpl.b` @type ^`java.lang.Object` := v3 @kind object;
  #L52df42.  v1.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L52df46.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L52df4c.  v2:= temp @kind object;
  #L52df4e.  v1.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` := v2 @kind object;
  #L52df52.  return @kind void;
}
procedure `void` `a`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.a:(Lkotlin/DeepRecursiveScopeImpl;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L52df64.  v0.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L52df68.  return @kind void;
}
procedure `void` `b`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `kotlin.jvm.functions.Function3` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.b:(Lkotlin/DeepRecursiveScopeImpl;Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L52df7c.  v0.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L52df80.  return @kind void;
}
procedure `void` `c`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.c:(Lkotlin/DeepRecursiveScopeImpl;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L52df94.  v0.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` := v1 @kind object;
  #L52df98.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `d`(`kotlin.DeepRecursiveScopeImpl` v2 @kind this, `kotlin.jvm.functions.Function3` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.d:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L52def0.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L52def4.  v1:= new `kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1`;
  #L52def8.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lkotlin/DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/DeepRecursiveScopeImpl;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L52defe.  return v1 @kind object;
}
procedure `java.lang.Object` `callRecursive`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.callRecursive:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52dd48.  if v3 == 0 then goto L52dd70;
  #L52dd4c.  v1.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L52dd50.  v1.`kotlin.DeepRecursiveScopeImpl.b` @type ^`java.lang.Object` := v2 @kind object;
  #L52dd54.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L52dd5a.  v2:= temp @kind object;
  #L52dd5c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L52dd62.  v0:= temp @kind object;
  #L52dd64.  if v2 != v0 then goto L52dd6e;
  #L52dd68.  call `probeCoroutineSuspended`(v3) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L52dd6e.  return v2 @kind object;
  #L52dd70.  v2:= new `java.lang.NullPointerException`;
  #L52dd74.  v3:= "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>" @kind object;
  #L52dd78.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52dd7e.  throw v2;
}
procedure `java.lang.Object` `callRecursive`(`kotlin.DeepRecursiveScopeImpl` v2 @kind this, `kotlin.DeepRecursiveFunction` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.callRecursive:(Lkotlin/DeepRecursiveFunction;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L52dd90.  call temp:= `getBlock$kotlin_stdlib`(v3) @signature `Lkotlin/DeepRecursiveFunction;.getBlock$kotlin_stdlib:()Lkotlin/jvm/functions/Function3;` @kind virtual;
  #L52dd96.  v3:= temp @kind object;
  #L52dd98.  if v3 == 0 then goto L52ddfe;
  #L52dd9c.  v0:= v2.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L52dda0.  v1:= "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>" @kind object;
  #L52dda4.  if v3 == v0 then goto L52ddca;
  #L52dda8.  v2.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` := v3 @kind object;
  #L52ddac.  if v5 == 0 then goto L52ddbe;
  #L52ddb0.  call temp:= `d`(v2, v0, v5) @signature `Lkotlin/DeepRecursiveScopeImpl;.d:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind direct;
  #L52ddb6.  v3:= temp @kind object;
  #L52ddb8.  v2.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L52ddbc.  goto L52ddd2;
  #L52ddbe.  v3:= new `java.lang.NullPointerException`;
  #L52ddc2.  call `<init>`(v3, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52ddc8.  throw v3;
  #L52ddca.  if v5 == 0 then goto L52ddf2;
  #L52ddce.  v2.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v5 @kind object;
  #L52ddd2.  v2.`kotlin.DeepRecursiveScopeImpl.b` @type ^`java.lang.Object` := v4 @kind object;
  #L52ddd6.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L52dddc.  v3:= temp @kind object;
  #L52ddde.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L52dde4.  v4:= temp @kind object;
  #L52dde6.  if v3 != v4 then goto L52ddf0;
  #L52ddea.  call `probeCoroutineSuspended`(v5) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L52ddf0.  return v3 @kind object;
  #L52ddf2.  v3:= new `java.lang.NullPointerException`;
  #L52ddf6.  call `<init>`(v3, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52ddfc.  throw v3;
  #L52ddfe.  v3:= new `java.lang.NullPointerException`;
  #L52de02.  v4:= "null cannot be cast to non-null type kotlin.DeepRecursiveFunctionBlock /* = suspend kotlin.DeepRecursiveScope<*, *>.(kotlin.Any?) -> kotlin.Any? */" @kind object;
  #L52de06.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52de0c.  throw v3;
}
procedure `java.lang.Object` `e`(`kotlin.DeepRecursiveScopeImpl` v4 @kind this) @signature `Lkotlin/DeepRecursiveScopeImpl;.e:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L52de20.  v0:= v4.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` @kind object;
  #L52de24.  v1:= v4.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L52de28.  if v1 == 0 then goto L52dec4;
  #L52de2c.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L52de32.  v2:= temp @kind object;
  #L52de34.  call temp:= `equals-impl0`(v2, v0) @signature `Lkotlin/Result;.equals-impl0:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L52de3a.  v2:= temp;
  #L52de3c.  if v2 == 0 then goto L52deb0;
  #L52de40.  v0:= v4.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L52de44.  v2:= v4.`kotlin.DeepRecursiveScopeImpl.b` @type ^`java.lang.Object` @kind object;
  #L52de48.  if v0 == 0 then goto L52de82;
  #L52de4c.  v3:= 3I;
  #L52de4e.  call temp:= `beforeCheckcastToFunctionOfArity`(v0, v3) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L52de54.  v0:= temp @kind object;
  #L52de56.  v0:= (`kotlin.jvm.functions.Function3`) v0 @kind object;
  #L52de5a.  call temp:= `invoke`(v0, v4, v2, v1) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L52de60.  v0:= temp @kind object;
  #L52de62.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L52de68.  v2:= temp @kind object;
  #L52de6a.  if v0 == v2 then goto L52de20;
  #L52de6e.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L52de72.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L52de78.  v0:= temp @kind object;
  #L52de7a.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L52de80.  goto L52de20;
  #L52de82.  v0:= new `java.lang.NullPointerException`;
  #L52de86.  v2:= "null cannot be cast to non-null type (R, P, kotlin.coroutines.Continuation<T>) -> kotlin.Any?" @kind object;
  #L52de8a.  call `<init>`(v0, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52de90.  throw v0;
  #L52de92.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52de94.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L52de98.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L52de9e.  v0:= temp @kind object;
  #L52dea0.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L52dea6.  v0:= temp @kind object;
  #L52dea8.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L52deae.  goto L52de20;
  #L52deb0.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L52deb6.  v2:= temp @kind object;
  #L52deb8.  v4.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` := v2 @kind object;
  #L52debc.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L52dec2.  goto L52de20;
  #L52dec4.  call `throwOnFailure`(v0) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L52deca.  return v0 @kind object;
  catch `java.lang.Throwable` @[L52de40..L52de62] goto L52de92;
  catch `java.lang.Throwable` @[L52de82..L52de92] goto L52de92;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this) @signature `Lkotlin/DeepRecursiveScopeImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52df10.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L52df14.  return v0 @kind object;
}
procedure `void` `resumeWith`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52dfac.  v0:= 0I;
  #L52dfae.  v1.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v0 @kind object;
  #L52dfb2.  v1.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` := v2 @kind object;
  #L52dfb6.  return @kind void;
}
