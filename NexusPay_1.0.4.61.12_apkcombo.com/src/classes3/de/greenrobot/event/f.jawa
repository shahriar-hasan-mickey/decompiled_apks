record `de.greenrobot.event.f` @kind class @AccessFlag FINAL {
  `java.lang.reflect.Method` `de.greenrobot.event.f.a` @AccessFlag FINAL;
  `de.greenrobot.event.ThreadMode` `de.greenrobot.event.f.b` @AccessFlag FINAL;
  `java.lang.Class` `de.greenrobot.event.f.c` @AccessFlag FINAL;
  `java.lang.String` `de.greenrobot.event.f.d` @AccessFlag ;
}
procedure `void` `<init>`(`de.greenrobot.event.f` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `de.greenrobot.event.ThreadMode` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lde/greenrobot/event/f;.<init>:(Ljava/lang/reflect/Method;Lde/greenrobot/event/ThreadMode;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L405de8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L405dee.  v0.`de.greenrobot.event.f.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L405df2.  v0.`de.greenrobot.event.f.b` @type ^`de.greenrobot.event.ThreadMode` := v2 @kind object;
  #L405df6.  v0.`de.greenrobot.event.f.c` @type ^`java.lang.Class` := v3 @kind object;
  #L405dfa.  return @kind void;
}
procedure `void` `a`(`de.greenrobot.event.f` v2 @kind this) @signature `Lde/greenrobot/event/f;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L405e0c.  @monitorenter v2
  #L405e0e.  v0:= v2.`de.greenrobot.event.f.d` @type ^`java.lang.String` @kind object;
  #L405e12.  if v0 != 0 then goto L405e82;
  #L405e16.  v0:= new `java.lang.StringBuilder`;
  #L405e1a.  v1:= 64I;
  #L405e1e.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L405e24.  v1:= v2.`de.greenrobot.event.f.a` @type ^`java.lang.reflect.Method` @kind object;
  #L405e28.  call temp:= `getDeclaringClass`(v1) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L405e2e.  v1:= temp @kind object;
  #L405e30.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L405e36.  v1:= temp @kind object;
  #L405e38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e3e.  v1:= 35I;
  #L405e42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e48.  v1:= v2.`de.greenrobot.event.f.a` @type ^`java.lang.reflect.Method` @kind object;
  #L405e4c.  call temp:= `getName`(v1) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L405e52.  v1:= temp @kind object;
  #L405e54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e5a.  v1:= 40I;
  #L405e5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e64.  v1:= v2.`de.greenrobot.event.f.c` @type ^`java.lang.Class` @kind object;
  #L405e68.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L405e6e.  v1:= temp @kind object;
  #L405e70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405e7c.  v0:= temp @kind object;
  #L405e7e.  v2.`de.greenrobot.event.f.d` @type ^`java.lang.String` := v0 @kind object;
  #L405e82.  @monitorexit v2
  #L405e84.  return @kind void;
  #L405e86.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L405e88.  @monitorexit v2
  #L405e8a.  throw v0;
  catch `java.lang.Throwable` @[L405e0e..L405e82] goto L405e86;
}
procedure `boolean` `equals`(`de.greenrobot.event.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lde/greenrobot/event/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405d88.  v0:= instanceof @variable v2 @type ^`de.greenrobot.event.f` @kind boolean;
  #L405d8c.  if v0 == 0 then goto L405db2;
  #L405d90.  call `a`(v1) @signature `Lde/greenrobot/event/f;.a:()V` @kind direct;
  #L405d96.  v2:= (`de.greenrobot.event.f`) v2 @kind object;
  #L405d9a.  call `a`(v2) @signature `Lde/greenrobot/event/f;.a:()V` @kind direct;
  #L405da0.  v0:= v1.`de.greenrobot.event.f.d` @type ^`java.lang.String` @kind object;
  #L405da4.  v2:= v2.`de.greenrobot.event.f.d` @type ^`java.lang.String` @kind object;
  #L405da8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L405dae.  v2:= temp;
  #L405db0.  return v2;
  #L405db2.  v2:= 0I;
  #L405db4.  return v2;
}
procedure `int` `hashCode`(`de.greenrobot.event.f` v1 @kind this) @signature `Lde/greenrobot/event/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405dc8.  v0:= v1.`de.greenrobot.event.f.a` @type ^`java.lang.reflect.Method` @kind object;
  #L405dcc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/reflect/Method;.hashCode:()I` @kind virtual;
  #L405dd2.  v0:= temp;
  #L405dd4.  return v0;
}
