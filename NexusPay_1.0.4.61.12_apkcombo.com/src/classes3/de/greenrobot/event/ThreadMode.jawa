record `de.greenrobot.event.ThreadMode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `de.greenrobot.event.ThreadMode`[] `@@de.greenrobot.event.ThreadMode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `de.greenrobot.event.ThreadMode` `@@de.greenrobot.event.ThreadMode.Async` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `de.greenrobot.event.ThreadMode` `@@de.greenrobot.event.ThreadMode.BackgroundThread` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `de.greenrobot.event.ThreadMode` `@@de.greenrobot.event.ThreadMode.MainThread` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `de.greenrobot.event.ThreadMode` `@@de.greenrobot.event.ThreadMode.PostThread` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lde/greenrobot/event/ThreadMode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L405f90.  v0:= new `de.greenrobot.event.ThreadMode`;
  #L405f94.  v1:= "PostThread" @kind object;
  #L405f98.  v2:= 0I;
  #L405f9a.  call `<init>`(v0, v1, v2) @signature `Lde/greenrobot/event/ThreadMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L405fa0.  `@@de.greenrobot.event.ThreadMode.PostThread` @type ^`de.greenrobot.event.ThreadMode` := v0 @kind object;
  #L405fa4.  v0:= new `de.greenrobot.event.ThreadMode`;
  #L405fa8.  v1:= "MainThread" @kind object;
  #L405fac.  v3:= 1I;
  #L405fae.  call `<init>`(v0, v1, v3) @signature `Lde/greenrobot/event/ThreadMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L405fb4.  `@@de.greenrobot.event.ThreadMode.MainThread` @type ^`de.greenrobot.event.ThreadMode` := v0 @kind object;
  #L405fb8.  v0:= new `de.greenrobot.event.ThreadMode`;
  #L405fbc.  v1:= "BackgroundThread" @kind object;
  #L405fc0.  v4:= 2I;
  #L405fc2.  call `<init>`(v0, v1, v4) @signature `Lde/greenrobot/event/ThreadMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L405fc8.  `@@de.greenrobot.event.ThreadMode.BackgroundThread` @type ^`de.greenrobot.event.ThreadMode` := v0 @kind object;
  #L405fcc.  v0:= new `de.greenrobot.event.ThreadMode`;
  #L405fd0.  v1:= "Async" @kind object;
  #L405fd4.  v5:= 3I;
  #L405fd6.  call `<init>`(v0, v1, v5) @signature `Lde/greenrobot/event/ThreadMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L405fdc.  `@@de.greenrobot.event.ThreadMode.Async` @type ^`de.greenrobot.event.ThreadMode` := v0 @kind object;
  #L405fe0.  v1:= 4I;
  #L405fe2.  v1:= new `de.greenrobot.event.ThreadMode`[v1];
  #L405fe6.  v6:= `@@de.greenrobot.event.ThreadMode.PostThread` @type ^`de.greenrobot.event.ThreadMode` @kind object;
  #L405fea.  v1[v2]:= v6 @kind object;
  #L405fee.  v2:= `@@de.greenrobot.event.ThreadMode.MainThread` @type ^`de.greenrobot.event.ThreadMode` @kind object;
  #L405ff2.  v1[v3]:= v2 @kind object;
  #L405ff6.  v2:= `@@de.greenrobot.event.ThreadMode.BackgroundThread` @type ^`de.greenrobot.event.ThreadMode` @kind object;
  #L405ffa.  v1[v4]:= v2 @kind object;
  #L405ffe.  v1[v5]:= v0 @kind object;
  #L406002.  `@@de.greenrobot.event.ThreadMode.$VALUES` @type ^`de.greenrobot.event.ThreadMode`[] := v1 @kind object;
  #L406006.  return @kind void;
}
procedure `void` `<init>`(`de.greenrobot.event.ThreadMode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lde/greenrobot/event/ThreadMode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L406018.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40601e.  return @kind void;
}
procedure `de.greenrobot.event.ThreadMode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lde/greenrobot/event/ThreadMode;.valueOf:(Ljava/lang/String;)Lde/greenrobot/event/ThreadMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L405f48.  v0:= constclass @type ^`de.greenrobot.event.ThreadMode` @kind object;
  #L405f4c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L405f52.  v1:= temp @kind object;
  #L405f54.  v1:= (`de.greenrobot.event.ThreadMode`) v1 @kind object;
  #L405f58.  return v1 @kind object;
}
procedure `de.greenrobot.event.ThreadMode`[] `values`() @signature `Lde/greenrobot/event/ThreadMode;.values:()[Lde/greenrobot/event/ThreadMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L405f6c.  v0:= `@@de.greenrobot.event.ThreadMode.$VALUES` @type ^`de.greenrobot.event.ThreadMode`[] @kind object;
  #L405f70.  call temp:= `clone`(v0) @signature `[Lde/greenrobot/event/ThreadMode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L405f76.  v0:= temp @kind object;
  #L405f78.  v0:= (`de.greenrobot.event.ThreadMode`[]) v0 @kind object;
  #L405f7c.  return v0 @kind object;
}
