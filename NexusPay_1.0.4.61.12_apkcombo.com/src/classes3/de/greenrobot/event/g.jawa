record `de.greenrobot.event.g` @kind class @AccessFlag  {
}
global `java.util.Map` `@@de.greenrobot.event.g.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@de.greenrobot.event.g.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lde/greenrobot/event/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L405cb0.  v0:= new `java.util.HashMap`;
  #L405cb4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L405cba.  `@@de.greenrobot.event.g.a` @type ^`java.util.Map` := v0 @kind object;
  #L405cbe.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L405cc2.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L405cc8.  `@@de.greenrobot.event.g.b` @type ^`java.util.Map` := v0 @kind object;
  #L405ccc.  return @kind void;
}
procedure `void` `<init>`(`de.greenrobot.event.g` v0 @kind this) @signature `Lde/greenrobot/event/g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L405ce0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L405ce6.  return @kind void;
}
procedure `void` `a`() @signature `Lde/greenrobot/event/g;.a:()V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L405cf8.  v0:= `@@de.greenrobot.event.g.a` @type ^`java.util.Map` @kind object;
  #L405cfc.  @monitorenter v0
  #L405cfe.  v1:= `@@de.greenrobot.event.g.a` @type ^`java.util.Map` @kind object;
  #L405d02.  call `clear`(v1) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L405d08.  @monitorexit v0
  #L405d0a.  return @kind void;
  #L405d0c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L405d0e.  @monitorexit v0
  #L405d10.  throw v1;
  catch `java.lang.Throwable` @[L405cfe..L405d10] goto L405d0c;
}
procedure `void` `b`() @signature `Lde/greenrobot/event/g;.b:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L405d30.  v0:= `@@de.greenrobot.event.g.b` @type ^`java.util.Map` @kind object;
  #L405d34.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L405d3a.  return @kind void;
}
procedure `void` `d`(`java.lang.Class` v1 @kind object) @signature `Lde/greenrobot/event/g;.d:(Ljava/lang/Class;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L405d4c.  v0:= `@@de.greenrobot.event.g.a` @type ^`java.util.Map` @kind object;
  #L405d50.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L405d56.  v0:= temp;
  #L405d58.  if v0 == 0 then goto L405d68;
  #L405d5c.  v0:= `@@de.greenrobot.event.g.b` @type ^`java.util.Map` @kind object;
  #L405d60.  call temp:= `put`(v0, v1, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L405d66.  return @kind void;
  #L405d68.  v1:= new `java.lang.IllegalStateException`;
  #L405d6c.  v0:= "This method must be called before registering anything" @kind object;
  #L405d70.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405d76.  throw v1;
}
procedure `java.util.List` `c`(`de.greenrobot.event.g` v15 @kind this, `java.lang.Class` v16 @kind object, `java.lang.String` v17 @kind object) @signature `Lde/greenrobot/event/g;.c:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L4059bc.  v0:= v17 @kind object;
  #L4059c0.  v1:= new `java.lang.StringBuilder`;
  #L4059c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4059ca.  call temp:= `getName`(v16) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4059d0.  v2:= temp @kind object;
  #L4059d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4059d8.  v2:= 46I;
  #L4059dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4059e2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4059e8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4059ee.  v1:= temp @kind object;
  #L4059f0.  v2:= `@@de.greenrobot.event.g.a` @type ^`java.util.Map` @kind object;
  #L4059f4.  @monitorenter v2
  #L4059f6.  v3:= `@@de.greenrobot.event.g.a` @type ^`java.util.Map` @kind object;
  #L4059fa.  call temp:= `get`(v3, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L405a00.  v3:= temp @kind object;
  #L405a02.  v3:= (`java.util.List`) v3 @kind object;
  #L405a06.  @monitorexit v2
  #L405a08.  if v3 == 0 then goto L405a0e;
  #L405a0c.  return v3 @kind object;
  #L405a0e.  v2:= new `java.util.ArrayList`;
  #L405a12.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L405a18.  v3:= new `java.util.HashSet`;
  #L405a1c.  call `<init>`(v3) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L405a22.  v4:= new `java.lang.StringBuilder`;
  #L405a26.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405a2c.  v5:= v16 @kind object;
  #L405a30.  if v5 == 0 then goto L405c12;
  #L405a34.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L405a3a.  v6:= temp @kind object;
  #L405a3c.  v7:= "java." @kind object;
  #L405a40.  call temp:= `startsWith`(v6, v7) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L405a46.  v7:= temp;
  #L405a48.  if v7 != 0 then goto L405c12;
  #L405a4c.  v7:= "javax." @kind object;
  #L405a50.  call temp:= `startsWith`(v6, v7) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L405a56.  v7:= temp;
  #L405a58.  if v7 != 0 then goto L405c12;
  #L405a5c.  v7:= "android." @kind object;
  #L405a60.  call temp:= `startsWith`(v6, v7) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L405a66.  v6:= temp;
  #L405a68.  if v6 == 0 then goto L405a70;
  #L405a6c.  goto L405c12;
  #L405a70.  call temp:= `getMethods`(v5) @signature `Ljava/lang/Class;.getMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L405a76.  v6:= temp @kind object;
  #L405a78.  v7:= length @variable v6;
  #L405a7a.  v8:= 0I;
  #L405a7c.  v9:= 0I;
  #L405a7e.  if v9 >= v7 then goto L405c06;
  #L405a82.  v10:= v6[v9] @kind object;
  #L405a86.  call temp:= `getName`(v10) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L405a8c.  v11:= temp @kind object;
  #L405a8e.  call temp:= `startsWith`(v11, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L405a94.  v12:= temp;
  #L405a96.  if v12 == 0 then goto L405bfe;
  #L405a9a.  call temp:= `getModifiers`(v10) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L405aa0.  v12:= temp;
  #L405aa2.  v13:= v12 ^& 1;
  #L405aa6.  if v13 == 0 then goto L405bb2;
  #L405aaa.  v12:= v12 ^& 1032;
  #L405aae.  if v12 != 0 then goto L405bb2;
  #L405ab2.  call temp:= `getParameterTypes`(v10) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L405ab8.  v12:= temp @kind object;
  #L405aba.  v13:= length @variable v12;
  #L405abc.  v14:= 1I;
  #L405abe.  if v13 != v14 then goto L405bfe;
  #L405ac2.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L405ac8.  v13:= temp;
  #L405aca.  call temp:= `substring`(v11, v13) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L405ad0.  v13:= temp @kind object;
  #L405ad2.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L405ad8.  v14:= temp;
  #L405ada.  if v14 != 0 then goto L405ae4;
  #L405ade.  v13:= `@@de.greenrobot.event.ThreadMode.PostThread` @type ^`de.greenrobot.event.ThreadMode` @kind object;
  #L405ae2.  goto L405b24;
  #L405ae4.  v14:= "MainThread" @kind object;
  #L405ae8.  call temp:= `equals`(v13, v14) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L405aee.  v14:= temp;
  #L405af0.  if v14 == 0 then goto L405afa;
  #L405af4.  v13:= `@@de.greenrobot.event.ThreadMode.MainThread` @type ^`de.greenrobot.event.ThreadMode` @kind object;
  #L405af8.  goto L405b24;
  #L405afa.  v14:= "BackgroundThread" @kind object;
  #L405afe.  call temp:= `equals`(v13, v14) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L405b04.  v14:= temp;
  #L405b06.  if v14 == 0 then goto L405b10;
  #L405b0a.  v13:= `@@de.greenrobot.event.ThreadMode.BackgroundThread` @type ^`de.greenrobot.event.ThreadMode` @kind object;
  #L405b0e.  goto L405b24;
  #L405b10.  v14:= "Async" @kind object;
  #L405b14.  call temp:= `equals`(v13, v14) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L405b1a.  v13:= temp;
  #L405b1c.  if v13 == 0 then goto L405b72;
  #L405b20.  v13:= `@@de.greenrobot.event.ThreadMode.Async` @type ^`de.greenrobot.event.ThreadMode` @kind object;
  #L405b24.  v12:= v12[v8] @kind object;
  #L405b28.  call `setLength`(v4, v8) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L405b2e.  call temp:= `append`(v4, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405b34.  v11:= 62I;
  #L405b38.  call temp:= `append`(v4, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L405b3e.  call temp:= `getName`(v12) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L405b44.  v11:= temp @kind object;
  #L405b46.  call temp:= `append`(v4, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405b4c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405b52.  v11:= temp @kind object;
  #L405b54.  call temp:= `add`(v3, v11) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L405b5a.  v11:= temp;
  #L405b5c.  if v11 == 0 then goto L405bfe;
  #L405b60.  v11:= new `de.greenrobot.event.f`;
  #L405b64.  call `<init>`(v11, v10, v13, v12) @signature `Lde/greenrobot/event/f;.<init>:(Ljava/lang/reflect/Method;Lde/greenrobot/event/ThreadMode;Ljava/lang/Class;)V` @kind direct;
  #L405b6a.  call temp:= `add`(v2, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L405b70.  goto L405bfe;
  #L405b72.  v11:= `@@de.greenrobot.event.g.b` @type ^`java.util.Map` @kind object;
  #L405b76.  call temp:= `containsKey`(v11, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L405b7c.  v11:= temp;
  #L405b7e.  if v11 == 0 then goto L405b84;
  #L405b82.  goto L405bfe;
  #L405b84.  v0:= new `de.greenrobot.event.EventBusException`;
  #L405b88.  v1:= new `java.lang.StringBuilder`;
  #L405b8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405b92.  v2:= "Illegal onEvent method, check for typos: " @kind object;
  #L405b96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405b9c.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405ba2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405ba8.  v1:= temp @kind object;
  #L405baa.  call `<init>`(v0, v1) @signature `Lde/greenrobot/event/EventBusException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405bb0.  throw v0;
  #L405bb2.  v10:= `@@de.greenrobot.event.g.b` @type ^`java.util.Map` @kind object;
  #L405bb6.  call temp:= `containsKey`(v10, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L405bbc.  v10:= temp;
  #L405bbe.  if v10 != 0 then goto L405bfe;
  #L405bc2.  v10:= `@@de.greenrobot.event.EventBus.TAG` @type ^`java.lang.String` @kind object;
  #L405bc6.  v12:= new `java.lang.StringBuilder`;
  #L405bca.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405bd0.  v13:= "Skipping method (not public, static or abstract): " @kind object;
  #L405bd4.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405bda.  call temp:= `append`(v12, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405be0.  v13:= "." @kind object;
  #L405be4.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405bea.  call temp:= `append`(v12, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405bf0.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405bf6.  v11:= temp @kind object;
  #L405bf8.  call temp:= `d`(v10, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L405bfe.  v9:= v9 + 1;
  #L405c02.  goto L405a7e;
  #L405c06.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L405c0c.  v5:= temp @kind object;
  #L405c0e.  goto L405a30;
  #L405c12.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L405c18.  v3:= temp;
  #L405c1a.  if v3 != 0 then goto L405c38;
  #L405c1e.  v3:= `@@de.greenrobot.event.g.a` @type ^`java.util.Map` @kind object;
  #L405c22.  @monitorenter v3
  #L405c24.  v0:= `@@de.greenrobot.event.g.a` @type ^`java.util.Map` @kind object;
  #L405c28.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L405c2e.  @monitorexit v3
  #L405c30.  return v2 @kind object;
  #L405c32.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L405c34.  @monitorexit v3
  #L405c36.  throw v0;
  #L405c38.  v1:= new `de.greenrobot.event.EventBusException`;
  #L405c3c.  v2:= new `java.lang.StringBuilder`;
  #L405c40.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405c46.  v3:= "Subscriber " @kind object;
  #L405c4a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405c50.  v3:= v16 @kind object;
  #L405c54.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405c5a.  v3:= " has no public methods called " @kind object;
  #L405c5e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405c64.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405c6a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405c70.  v0:= temp @kind object;
  #L405c72.  call `<init>`(v1, v0) @signature `Lde/greenrobot/event/EventBusException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405c78.  throw v1;
  #L405c7a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L405c7c.  @monitorexit v2
  #L405c7e.  throw v0;
  catch `java.lang.Throwable` @[L4059f6..L405a08] goto L405c7a;
  catch `java.lang.Throwable` @[L405c24..L405c36] goto L405c32;
  catch `java.lang.Throwable` @[L405c7c..L405c7e] goto L405c7a;
}
