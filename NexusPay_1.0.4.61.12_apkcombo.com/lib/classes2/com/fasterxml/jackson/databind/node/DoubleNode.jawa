record `com.fasterxml.jackson.databind.node.DoubleNode` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.node.NumericNode` @kind class {
  `double` `com.fasterxml.jackson.databind.node.DoubleNode._value` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.node.DoubleNode` v0 @kind this, `double` v1 ) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.<init>:(D)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.node.DoubleNode` `valueOf`(`double` v1 ) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.valueOf:(D)Lcom/fasterxml/jackson/databind/node/DoubleNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `asText`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.asText:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `asToken`(`com.fasterxml.jackson.databind.node.DoubleNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.asToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger` `bigIntegerValue`(`com.fasterxml.jackson.databind.node.DoubleNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.bigIntegerValue:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `canConvertToInt`(`com.fasterxml.jackson.databind.node.DoubleNode` v5 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.canConvertToInt:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `canConvertToLong`(`com.fasterxml.jackson.databind.node.DoubleNode` v5 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.canConvertToLong:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigDecimal` `decimalValue`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.decimalValue:()Ljava/math/BigDecimal;` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `doubleValue`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.doubleValue:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.fasterxml.jackson.databind.node.DoubleNode` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `floatValue`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.floatValue:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.fasterxml.jackson.databind.node.DoubleNode` v4 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `intValue`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.intValue:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDouble`(`com.fasterxml.jackson.databind.node.DoubleNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.isDouble:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isFloatingPointNumber`(`com.fasterxml.jackson.databind.node.DoubleNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.isFloatingPointNumber:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `longValue`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.longValue:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser$NumberType` `numberType`(`com.fasterxml.jackson.databind.node.DoubleNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.numberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Number` `numberValue`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.numberValue:()Ljava/lang/Number;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this, `com.fasterxml.jackson.core.JsonGenerator` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.serialize:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `short` `shortValue`(`com.fasterxml.jackson.databind.node.DoubleNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/DoubleNode;.shortValue:()S` @AccessFlag PUBLIC {

  # return;
}
