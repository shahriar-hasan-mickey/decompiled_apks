record `com.fasterxml.jackson.databind.node.NumericNode` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.fasterxml.jackson.databind.node.ValueNode` @kind class {
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.node.NumericNode` v0 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `double` `asDouble`(`com.fasterxml.jackson.databind.node.NumericNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.asDouble:()D` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `double` `asDouble`(`com.fasterxml.jackson.databind.node.NumericNode` v0 @kind this, `double` v1 ) @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.asDouble:(D)D` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `asInt`(`com.fasterxml.jackson.databind.node.NumericNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.asInt:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `asInt`(`com.fasterxml.jackson.databind.node.NumericNode` v0 @kind this, `int` v1 ) @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.asInt:(I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `long` `asLong`(`com.fasterxml.jackson.databind.node.NumericNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.asLong:()J` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `long` `asLong`(`com.fasterxml.jackson.databind.node.NumericNode` v0 @kind this, `long` v1 ) @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.asLong:(J)J` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `asText`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.asText:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.math.BigInteger` `bigIntegerValue`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.bigIntegerValue:()Ljava/math/BigInteger;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `canConvertToInt`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.canConvertToInt:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `canConvertToLong`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.canConvertToLong:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.math.BigDecimal` `decimalValue`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.decimalValue:()Ljava/math/BigDecimal;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double` `doubleValue`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.doubleValue:()D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.databind.node.JsonNodeType` `getNodeType`(`com.fasterxml.jackson.databind.node.NumericNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.getNodeType:()Lcom/fasterxml/jackson/databind/node/JsonNodeType;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `intValue`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.intValue:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `longValue`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.longValue:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser$NumberType` `numberType`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.numberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Number` `numberValue`() @signature `Lcom/fasterxml/jackson/databind/node/NumericNode;.numberValue:()Ljava/lang/Number;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
