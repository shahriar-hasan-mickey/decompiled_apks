record `com.fasterxml.jackson.databind.ser.std.UUIDSerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.StdScalarSerializer` @kind class {
}
global `char`[] `@@com.fasterxml.jackson.databind.ser.std.UUIDSerializer.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.UUIDSerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`int` v1 , `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.a:(I[BI)V` @AccessFlag PRIVATE_STATIC_FINAL {

  # return;
}
procedure `void` `b`(`int` v1 , `char`[] v2 @kind object, `int` v3 ) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.b:(I[CI)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `c`(`int` v2 , `char`[] v3 @kind object, `int` v4 ) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.c:(I[CI)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `d`(`java.util.UUID` v7 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.d:(Ljava/util/UUID;)[B` @AccessFlag PRIVATE_STATIC_FINAL {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.UUIDSerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.UUIDSerializer` v5 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v6 @kind object, `java.util.UUID` v7 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/util/UUID;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.UUIDSerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.UUIDSerializer` v9 @kind this, `java.util.UUID` v10 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v11 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v12 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/UUIDSerializer;.serialize:(Ljava/util/UUID;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
