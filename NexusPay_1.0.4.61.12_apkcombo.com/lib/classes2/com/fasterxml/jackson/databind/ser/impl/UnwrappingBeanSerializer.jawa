record `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.BeanSerializerBase` @kind class, `java.io.Serializable` @kind interface {
  `com.fasterxml.jackson.databind.util.NameTransformer` `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer._nameTransformer` @AccessFlag PROTECTED_FINAL;
}
global `long` `@@com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v0 @kind this, `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v1 @kind object, `com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v0 @kind this, `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v1 @kind object, `com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v0 @kind this, `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;Ljava/util/Set;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v0 @kind this, `com.fasterxml.jackson.databind.ser.std.BeanSerializerBase` v1 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;Lcom/fasterxml/jackson/databind/util/NameTransformer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.BeanSerializerBase` `asArraySerializer`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v0 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.asArraySerializer:()Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isUnwrappingSerializer`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.isUnwrappingSerializer:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v1 @kind this, `java.lang.Object` v2 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v2 @kind this, `java.lang.Object` v3 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v5 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v6 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.serializeWithType:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `unwrappingSerializer`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v1 @kind this, `com.fasterxml.jackson.databind.util.NameTransformer` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.unwrappingSerializer:(Lcom/fasterxml/jackson/databind/util/NameTransformer;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `withFilterId`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.withFilterId:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.BeanSerializerBase` `withFilterId`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.withFilterId:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.BeanSerializerBase` `withIgnorals`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v1 @kind this, `java.util.Set` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.withIgnorals:(Ljava/util/Set;)Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.BeanSerializerBase` `withObjectIdWriter`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer` v1 @kind this, `com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer;.withObjectIdWriter:(Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;)Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;` @AccessFlag PUBLIC {

  # return;
}
