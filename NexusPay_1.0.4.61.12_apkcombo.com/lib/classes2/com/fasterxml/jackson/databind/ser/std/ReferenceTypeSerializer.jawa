record `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.fasterxml.jackson.databind.ser.std.StdSerializer` @kind class, `com.fasterxml.jackson.databind.ser.ContextualSerializer` @kind interface {
  `com.fasterxml.jackson.annotation.JsonInclude$Include` `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._contentInclusion` @AccessFlag PROTECTED_FINAL;
  `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap` `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._dynamicSerializers` @AccessFlag PROTECTED_TRANSIENT;
  `com.fasterxml.jackson.databind.BeanProperty` `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._property` @AccessFlag PROTECTED_FINAL;
  `com.fasterxml.jackson.databind.JavaType` `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._referredType` @AccessFlag PROTECTED_FINAL;
  `com.fasterxml.jackson.databind.util.NameTransformer` `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._unwrapper` @AccessFlag PROTECTED_FINAL;
  `com.fasterxml.jackson.databind.JsonSerializer` `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._valueSerializer` @AccessFlag PROTECTED_FINAL;
  `com.fasterxml.jackson.databind.jsontype.TypeSerializer` `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._valueTypeSerializer` @AccessFlag PROTECTED_FINAL;
}
global `long` `@@com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v1 @kind this, `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v2 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v3 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v4 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v5 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v6 @kind object, `com.fasterxml.jackson.annotation.JsonInclude$Include` v7 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v0 @kind this, `com.fasterxml.jackson.databind.type.ReferenceType` v1 @kind object, `boolean` v2 , `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v3 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.<init>:(Lcom/fasterxml/jackson/databind/type/ReferenceType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `a`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v1 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.a:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PRIVATE_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `b`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v1 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object, `com.fasterxml.jackson.databind.JavaType` v3 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.b:(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PRIVATE_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `c`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v1 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object, `java.lang.Class` v3 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.c:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PRIVATE_FINAL {

  # return;
}
procedure `java.lang.Object` `_getReferenced`(`java.lang.Object` v0 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;._getReferenced:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `_getReferencedIfPresent`(`java.lang.Object` v0 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;._getReferencedIfPresent:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `_isValueEmpty`(`java.lang.Object` v0 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;._isValueEmpty:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `_useStatic`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v3 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v5 @kind object, `com.fasterxml.jackson.databind.JavaType` v6 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;._useStatic:(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/JavaType;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `acceptJsonFormatVisitor`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v2 @kind this, `com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper` v3 @kind object, `com.fasterxml.jackson.databind.JavaType` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.acceptJsonFormatVisitor:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `createContextual`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v7 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v8 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v9 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.createContextual:(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v1 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isUnwrappingSerializer`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.isUnwrappingSerializer:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v2 @kind this, `java.lang.Object` v3 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v1 @kind this, `java.lang.Object` v2 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.serializeWithType:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `unwrappingSerializer`(`com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` v7 @kind this, `com.fasterxml.jackson.databind.util.NameTransformer` v8 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.unwrappingSerializer:(Lcom/fasterxml/jackson/databind/util/NameTransformer;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` `withResolved`(`com.fasterxml.jackson.databind.BeanProperty` v0 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v1 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v2 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v3 @kind object, `com.fasterxml.jackson.annotation.JsonInclude$Include` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;.withResolved:(Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
