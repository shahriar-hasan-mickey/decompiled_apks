record `com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` @kind class {
}
global `long` `@@com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v1 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v2 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v3 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v4 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v5 @kind object, `com.fasterxml.jackson.annotation.JsonInclude$Include` v6 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `com.fasterxml.jackson.databind.type.ReferenceType` v1 @kind object, `boolean` v2 , `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v3 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;.<init>:(Lcom/fasterxml/jackson/databind/type/ReferenceType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `_getReferenced`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._getReferenced:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `_getReferenced`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._getReferenced:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.Object` `_getReferencedIfPresent`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._getReferencedIfPresent:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `_getReferencedIfPresent`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._getReferencedIfPresent:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `_isValueEmpty`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._isValueEmpty:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `boolean` `_isValueEmpty`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._isValueEmpty:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` `withResolved`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v8 @kind this, `com.fasterxml.jackson.databind.BeanProperty` v9 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v10 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v11 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v12 @kind object, `com.fasterxml.jackson.annotation.JsonInclude$Include` v13 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;.withResolved:(Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` `withResolved`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `com.fasterxml.jackson.databind.BeanProperty` v1 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v2 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v3 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v4 @kind object, `com.fasterxml.jackson.annotation.JsonInclude$Include` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;.withResolved:(Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
