record `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.BeanPropertyWriter` @kind class, `java.io.Serializable` @kind interface {
  `com.fasterxml.jackson.databind.util.NameTransformer` `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter._nameTransformer` @AccessFlag PROTECTED_FINAL;
}
global `long` `@@com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v0 @kind this, `com.fasterxml.jackson.databind.ser.BeanPropertyWriter` v1 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;.<init>:(Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;Lcom/fasterxml/jackson/databind/util/NameTransformer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v0 @kind this, `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v1 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v2 @kind object, `com.fasterxml.jackson.core.io.SerializedString` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;.<init>:(Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/core/io/SerializedString;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `_depositSchemaProperty`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v3 @kind this, `com.fasterxml.jackson.databind.node.ObjectNode` v4 @kind object, `com.fasterxml.jackson.databind.JsonNode` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;._depositSchemaProperty:(Lcom/fasterxml/jackson/databind/node/ObjectNode;Lcom/fasterxml/jackson/databind/JsonNode;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `_findAndAddDynamic`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v1 @kind this, `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap` v2 @kind object, `java.lang.Class` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;._findAndAddDynamic:(Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/SerializerProvider;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` `_new`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v1 @kind this, `com.fasterxml.jackson.databind.util.NameTransformer` v2 @kind object, `com.fasterxml.jackson.core.io.SerializedString` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;._new:(Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/core/io/SerializedString;)Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `assignSerializer`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v1 @kind this, `com.fasterxml.jackson.databind.JsonSerializer` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;.assignSerializer:(Lcom/fasterxml/jackson/databind/JsonSerializer;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `depositSchemaProperty`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v2 @kind this, `com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;.depositSchemaProperty:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonObjectFormatVisitor;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isUnwrapping`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;.isUnwrapping:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.BeanPropertyWriter` `rename`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v0 @kind this, `com.fasterxml.jackson.databind.util.NameTransformer` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;.rename:(Lcom/fasterxml/jackson/databind/util/NameTransformer;)Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` `rename`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v2 @kind this, `com.fasterxml.jackson.databind.util.NameTransformer` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;.rename:(Lcom/fasterxml/jackson/databind/util/NameTransformer;)Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serializeAsField`(`com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter` v4 @kind this, `java.lang.Object` v5 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v6 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v7 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter;.serializeAsField:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
