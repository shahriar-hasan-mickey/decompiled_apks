record `com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver` @kind class {
  `java.lang.String` `com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver._basePackageName` @AccessFlag PROTECTED_FINAL;
  `java.lang.String` `com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver._basePackagePrefix` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver` v2 @kind this, `com.fasterxml.jackson.databind.JavaType` v3 @kind object, `com.fasterxml.jackson.databind.type.TypeFactory` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/jsontype/impl/MinimalClassNameIdResolver;.<init>:(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/type/TypeFactory;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.JavaType` `_typeFromId`(`com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver` v3 @kind this, `java.lang.String` v4 @kind object, `com.fasterxml.jackson.databind.DatabindContext` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/jsontype/impl/MinimalClassNameIdResolver;._typeFromId:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DatabindContext;)Lcom/fasterxml/jackson/databind/JavaType;` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.annotation.JsonTypeInfo$Id` `getMechanism`(`com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/jsontype/impl/MinimalClassNameIdResolver;.getMechanism:()Lcom/fasterxml/jackson/annotation/JsonTypeInfo$Id;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `idFromValue`(`com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/jsontype/impl/MinimalClassNameIdResolver;.idFromValue:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
