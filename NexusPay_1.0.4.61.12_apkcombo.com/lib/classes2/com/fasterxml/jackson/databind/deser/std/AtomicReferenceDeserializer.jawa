record `com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer` @kind class {
}
global `long` `@@com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` v1 @kind this, `com.fasterxml.jackson.databind.JavaType` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;.<init>:(Lcom/fasterxml/jackson/databind/JavaType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` v0 @kind this, `com.fasterxml.jackson.databind.JavaType` v1 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeDeserializer` v2 @kind object, `com.fasterxml.jackson.databind.JsonDeserializer` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;.<init>:(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `getNullValue`(`com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` v0 @kind this, `com.fasterxml.jackson.databind.DeserializationContext` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;.getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.concurrent.atomic.AtomicReference` `getNullValue`(`com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` v0 @kind this, `com.fasterxml.jackson.databind.DeserializationContext` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;.getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/util/concurrent/atomic/AtomicReference;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `referenceValue`(`com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;.referenceValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.concurrent.atomic.AtomicReference` `referenceValue`(`com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;.referenceValue:(Ljava/lang/Object;)Ljava/util/concurrent/atomic/AtomicReference;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` `withResolved`(`com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` v2 @kind this, `com.fasterxml.jackson.databind.jsontype.TypeDeserializer` v3 @kind object, `com.fasterxml.jackson.databind.JsonDeserializer` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;.withResolved:(Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer` `withResolved`(`com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer` v0 @kind this, `com.fasterxml.jackson.databind.jsontype.TypeDeserializer` v1 @kind object, `com.fasterxml.jackson.databind.JsonDeserializer` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;.withResolved:(Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lcom/fasterxml/jackson/databind/deser/std/ReferenceTypeDeserializer;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
