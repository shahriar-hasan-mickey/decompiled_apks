record `com.fasterxml.jackson.databind.deser.std.MapDeserializer$a` @kind class @AccessFlag  extends `com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring` @kind class {
  `com.fasterxml.jackson.databind.deser.std.MapDeserializer$b` `com.fasterxml.jackson.databind.deser.std.MapDeserializer$a.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.fasterxml.jackson.databind.deser.std.MapDeserializer$a.d` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `com.fasterxml.jackson.databind.deser.std.MapDeserializer$a.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.deser.std.MapDeserializer$a` v0 @kind this, `com.fasterxml.jackson.databind.deser.std.MapDeserializer$b` v1 @kind object, `com.fasterxml.jackson.databind.deser.UnresolvedForwardReference` v2 @kind object, `java.lang.Class` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/MapDeserializer$a;.<init>:(Lcom/fasterxml/jackson/databind/deser/std/MapDeserializer$b;Lcom/fasterxml/jackson/databind/deser/UnresolvedForwardReference;Ljava/lang/Class;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `handleResolvedForwardReference`(`com.fasterxml.jackson.databind.deser.std.MapDeserializer$a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/MapDeserializer$a;.handleResolvedForwardReference:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
