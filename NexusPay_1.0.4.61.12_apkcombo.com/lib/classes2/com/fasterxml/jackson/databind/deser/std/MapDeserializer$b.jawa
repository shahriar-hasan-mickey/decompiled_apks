record `com.fasterxml.jackson.databind.deser.std.MapDeserializer$b` @kind class @AccessFlag FINAL {
  `java.lang.Class` `com.fasterxml.jackson.databind.deser.std.MapDeserializer$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.fasterxml.jackson.databind.deser.std.MapDeserializer$b.b` @AccessFlag PRIVATE;
  `java.util.List` `com.fasterxml.jackson.databind.deser.std.MapDeserializer$b.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.deser.std.MapDeserializer$b` v1 @kind this, `java.lang.Class` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/MapDeserializer$b;.<init>:(Ljava/lang/Class;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring` `a`(`com.fasterxml.jackson.databind.deser.std.MapDeserializer$b` v2 @kind this, `com.fasterxml.jackson.databind.deser.UnresolvedForwardReference` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/MapDeserializer$b;.a:(Lcom/fasterxml/jackson/databind/deser/UnresolvedForwardReference;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/deser/impl/ReadableObjectId$Referring;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `b`(`com.fasterxml.jackson.databind.deser.std.MapDeserializer$b` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/MapDeserializer$b;.b:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `c`(`com.fasterxml.jackson.databind.deser.std.MapDeserializer$b` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/fasterxml/jackson/databind/deser/std/MapDeserializer$b;.c:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
