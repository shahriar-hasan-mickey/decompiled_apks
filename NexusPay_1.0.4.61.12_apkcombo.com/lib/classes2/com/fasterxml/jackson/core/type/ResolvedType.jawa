record `com.fasterxml.jackson.core.type.ResolvedType` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.type.ResolvedType` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.core.type.ResolvedType` `containedType`(`int` v0 ) @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.containedType:(I)Lcom/fasterxml/jackson/core/type/ResolvedType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `containedTypeCount`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.containedTypeCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `containedTypeName`(`int` v0 ) @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.containedTypeName:(I)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.type.ResolvedType` `getContentType`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.getContentType:()Lcom/fasterxml/jackson/core/type/ResolvedType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.type.ResolvedType` `getKeyType`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.getKeyType:()Lcom/fasterxml/jackson/core/type/ResolvedType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Class` `getParameterSource`(`com.fasterxml.jackson.core.type.ResolvedType` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.getParameterSource:()Ljava/lang/Class;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Class` `getRawClass`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.getRawClass:()Ljava/lang/Class;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.type.ResolvedType` `getReferencedType`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.getReferencedType:()Lcom/fasterxml/jackson/core/type/ResolvedType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasGenericTypes`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.hasGenericTypes:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasRawClass`(`java.lang.Class` v0 @kind object) @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.hasRawClass:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAbstract`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isAbstract:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isArrayType`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isArrayType:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isCollectionLikeType`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isCollectionLikeType:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isConcrete`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isConcrete:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isContainerType`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isContainerType:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEnumType`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isEnumType:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isFinal`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isFinal:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isInterface`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isInterface:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isMapLikeType`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isMapLikeType:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isPrimitive`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isPrimitive:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isReferenceType`(`com.fasterxml.jackson.core.type.ResolvedType` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isReferenceType:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isThrowable`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.isThrowable:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toCanonical`() @signature `Lcom/fasterxml/jackson/core/type/ResolvedType;.toCanonical:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
