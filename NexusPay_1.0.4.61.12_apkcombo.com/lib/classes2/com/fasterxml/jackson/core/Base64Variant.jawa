record `com.fasterxml.jackson.core.Base64Variant` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `int`[] `com.fasterxml.jackson.core.Base64Variant.a` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `char`[] `com.fasterxml.jackson.core.Base64Variant.b` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `byte`[] `com.fasterxml.jackson.core.Base64Variant.c` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.String` `com.fasterxml.jackson.core.Base64Variant.d` @AccessFlag FINAL;
  `boolean` `com.fasterxml.jackson.core.Base64Variant.e` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `char` `com.fasterxml.jackson.core.Base64Variant.f` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `com.fasterxml.jackson.core.Base64Variant.g` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `int` `@@com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_INVALID` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@com.fasterxml.jackson.core.Base64Variant.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.core.Base64Variant` v6 @kind this, `com.fasterxml.jackson.core.Base64Variant` v7 @kind object, `java.lang.String` v8 @kind object, `int` v9 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.<init>:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.Base64Variant` v3 @kind this, `com.fasterxml.jackson.core.Base64Variant` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 , `char` v7 , `int` v8 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.<init>:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.Base64Variant` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `boolean` v5 , `char` v6 , `int` v7 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.<init>:(Ljava/lang/String;Ljava/lang/String;ZCI)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `_reportBase64EOF`(`com.fasterxml.jackson.core.Base64Variant` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;._reportBase64EOF:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidBase64`(`com.fasterxml.jackson.core.Base64Variant` v2 @kind this, `char` v3 , `int` v4 , `java.lang.String` v5 @kind object) @signature `Lcom/fasterxml/jackson/core/Base64Variant;._reportInvalidBase64:(CILjava/lang/String;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `decode`(`com.fasterxml.jackson.core.Base64Variant` v10 @kind this, `java.lang.String` v11 @kind object, `com.fasterxml.jackson.core.util.ByteArrayBuilder` v12 @kind object) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `decode`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `decodeBase64Byte`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `byte` v2 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.decodeBase64Byte:(B)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `decodeBase64Char`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `char` v2 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.decodeBase64Char:(C)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `decodeBase64Char`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.decodeBase64Char:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `encode`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `encode`(`com.fasterxml.jackson.core.Base64Variant` v9 @kind this, `byte`[] v10 @kind object, `boolean` v11 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encode:([BZ)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `encodeBase64BitsAsByte`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encodeBase64BitsAsByte:(I)B` @AccessFlag PUBLIC {

  # return;
}
procedure `char` `encodeBase64BitsAsChar`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encodeBase64BitsAsChar:(I)C` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `encodeBase64Chunk`(`com.fasterxml.jackson.core.Base64Variant` v3 @kind this, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encodeBase64Chunk:(I[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `encodeBase64Chunk`(`com.fasterxml.jackson.core.Base64Variant` v3 @kind this, `int` v4 , `char`[] v5 @kind object, `int` v6 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encodeBase64Chunk:(I[CI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `encodeBase64Chunk`(`com.fasterxml.jackson.core.Base64Variant` v2 @kind this, `java.lang.StringBuilder` v3 @kind object, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `encodeBase64Partial`(`com.fasterxml.jackson.core.Base64Variant` v4 @kind this, `int` v5 , `int` v6 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encodeBase64Partial:(II[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `encodeBase64Partial`(`com.fasterxml.jackson.core.Base64Variant` v3 @kind this, `int` v4 , `int` v5 , `char`[] v6 @kind object, `int` v7 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encodeBase64Partial:(II[CI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `encodeBase64Partial`(`com.fasterxml.jackson.core.Base64Variant` v2 @kind this, `java.lang.StringBuilder` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.encodeBase64Partial:(Ljava/lang/StringBuilder;II)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.fasterxml.jackson.core.Base64Variant` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMaxLineLength`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.getMaxLineLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getName`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `getPaddingByte`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.getPaddingByte:()B` @AccessFlag PUBLIC {

  # return;
}
procedure `char` `getPaddingChar`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.getPaddingChar:()C` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `readResolve`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.readResolve:()Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `usesPadding`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.usesPadding:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `usesPaddingChar`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `char` v2 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.usesPaddingChar:(C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `usesPaddingChar`(`com.fasterxml.jackson.core.Base64Variant` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/Base64Variant;.usesPaddingChar:(I)Z` @AccessFlag PUBLIC {

  # return;
}
