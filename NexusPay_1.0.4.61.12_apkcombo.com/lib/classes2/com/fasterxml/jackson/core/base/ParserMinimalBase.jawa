record `com.fasterxml.jackson.core.base.ParserMinimalBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.fasterxml.jackson.core.JsonParser` @kind class {
  `com.fasterxml.jackson.core.JsonToken` `com.fasterxml.jackson.core.base.ParserMinimalBase._currToken` @AccessFlag PROTECTED;
  `com.fasterxml.jackson.core.JsonToken` `com.fasterxml.jackson.core.base.ParserMinimalBase._lastClearedToken` @AccessFlag PROTECTED;
}
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_BACKSLASH` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COLON` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COMMA` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_CR` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_E` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_HASH` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LBRACKET` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LCURLY` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LF` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_PERIOD` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_QUOTE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RBRACKET` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RCURLY` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SLASH` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SPACE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_TAB` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.base.ParserMinimalBase.INT_e` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v0 @kind this, `int` v1 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.<init>:(I)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `_ascii`(`byte`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._ascii:([B)Ljava/lang/String;` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `byte`[] `_asciiBytes`(`java.lang.String` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._asciiBytes:(Ljava/lang/String;)[B` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `java.lang.String` `_getCharDesc`(`int` v5 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._getCharDesc:(I)Ljava/lang/String;` @AccessFlag PROTECTED_STATIC_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParseException` `_constructError`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `_decodeBase64`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v0 @kind this, `java.lang.String` v1 @kind object, `com.fasterxml.jackson.core.util.ByteArrayBuilder` v2 @kind object, `com.fasterxml.jackson.core.Base64Variant` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_handleEOF`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._handleEOF:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `char` `_handleUnrecognizedCharacterEscape`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this, `char` v3 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._handleUnrecognizedCharacterEscape:(C)C` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `_hasTextualNull`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._hasTextualNull:(Ljava/lang/String;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportError`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._reportError:(Ljava/lang/String;)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `_reportInvalidEOF`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._reportInvalidEOF:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidEOF`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._reportInvalidEOF:(Ljava/lang/String;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidEOF`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v3 @kind this, `java.lang.String` v4 @kind object, `com.fasterxml.jackson.core.JsonToken` v5 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidEOFInValue`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._reportInvalidEOFInValue:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidEOFInValue`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this, `com.fasterxml.jackson.core.JsonToken` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._reportInvalidEOFInValue:(Lcom/fasterxml/jackson/core/JsonToken;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportMissingRootWS`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._reportMissingRootWS:(I)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportUnexpectedChar`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._reportUnexpectedChar:(ILjava/lang/String;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_throwInternal`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._throwInternal:()V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `_throwInvalidSpace`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this, `int` v3 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._throwInvalidSpace:(I)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_throwUnquotedSpace`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._throwUnquotedSpace:(ILjava/lang/String;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_wrapError`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;._wrapError:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `clearCurrentToken`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.clearCurrentToken:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.close:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `currentToken`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `currentTokenId`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.currentTokenId:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getBinaryValue`(`com.fasterxml.jackson.core.Base64Variant` v0 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getCurrentName`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getCurrentName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `getCurrentToken`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getCurrentToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getCurrentTokenId`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getCurrentTokenId:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `getLastClearedToken`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getLastClearedToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonStreamContext` `getParsingContext`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getParsingContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getText`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getText:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `char`[] `getTextCharacters`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getTextCharacters:()[C` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTextLength`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getTextLength:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTextOffset`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getTextOffset:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `getValueAsBoolean`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v4 @kind this, `boolean` v5 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getValueAsBoolean:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getValueAsDouble`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v4 @kind this, `double` v5 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getValueAsDouble:(D)D` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getValueAsInt`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getValueAsInt:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getValueAsInt`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v3 @kind this, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getValueAsInt:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getValueAsLong`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getValueAsLong:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getValueAsLong`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v4 @kind this, `long` v5 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getValueAsLong:(J)J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getValueAsString`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getValueAsString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getValueAsString`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasCurrentToken`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.hasCurrentToken:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasTextCharacters`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.hasTextCharacters:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasToken`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v1 @kind this, `com.fasterxml.jackson.core.JsonToken` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.hasToken:(Lcom/fasterxml/jackson/core/JsonToken;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasTokenId`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v3 @kind this, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.hasTokenId:(I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isClosed`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.isClosed:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isExpectedStartArrayToken`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.isExpectedStartArrayToken:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isExpectedStartObjectToken`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.isExpectedStartObjectToken:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `nextToken`() @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `nextValue`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.nextValue:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `overrideCurrentName`(`java.lang.String` v0 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.overrideCurrentName:(Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser` `skipChildren`(`com.fasterxml.jackson.core.base.ParserMinimalBase` v3 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserMinimalBase;.skipChildren:()Lcom/fasterxml/jackson/core/JsonParser;` @AccessFlag PUBLIC {

  # return;
}
