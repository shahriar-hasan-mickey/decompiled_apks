record `com.fasterxml.jackson.core.io.MergedStream` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.InputStream` @kind class {
  `com.fasterxml.jackson.core.io.IOContext` `com.fasterxml.jackson.core.io.MergedStream.a` @AccessFlag PRIVATE_FINAL;
  `java.io.InputStream` `com.fasterxml.jackson.core.io.MergedStream.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.fasterxml.jackson.core.io.MergedStream.c` @AccessFlag PRIVATE;
  `int` `com.fasterxml.jackson.core.io.MergedStream.d` @AccessFlag PRIVATE;
  `int` `com.fasterxml.jackson.core.io.MergedStream.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.io.MergedStream` v0 @kind this, `com.fasterxml.jackson.core.io.IOContext` v1 @kind object, `java.io.InputStream` v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.<init>:(Lcom/fasterxml/jackson/core/io/IOContext;Ljava/io/InputStream;[BII)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.fasterxml.jackson.core.io.MergedStream` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.a:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `available`(`com.fasterxml.jackson.core.io.MergedStream` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`com.fasterxml.jackson.core.io.MergedStream` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mark`(`com.fasterxml.jackson.core.io.MergedStream` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.mark:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `markSupported`(`com.fasterxml.jackson.core.io.MergedStream` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.markSupported:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.fasterxml.jackson.core.io.MergedStream` v3 @kind this) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.fasterxml.jackson.core.io.MergedStream` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.read:([B)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.fasterxml.jackson.core.io.MergedStream` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.fasterxml.jackson.core.io.MergedStream` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `skip`(`com.fasterxml.jackson.core.io.MergedStream` v8 @kind this, `long` v9 ) @signature `Lcom/fasterxml/jackson/core/io/MergedStream;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
