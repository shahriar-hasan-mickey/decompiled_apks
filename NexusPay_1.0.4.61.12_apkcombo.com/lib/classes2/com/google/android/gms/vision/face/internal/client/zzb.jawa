record `com.google.android.gms.vision.face.internal.client.zzb` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.android.gms.internal.vision.zzn` @kind class {
  `com.google.android.gms.vision.face.internal.client.zzf` `com.google.android.gms.vision.face.internal.client.zzb.zzcy` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.gms.vision.face.internal.client.zzb` v2 @kind this, `android.content.Context` v3 @kind object, `com.google.android.gms.vision.face.internal.client.zzf` v4 @kind object) @signature `Lcom/google/android/gms/vision/face/internal/client/zzb;.<init>:(Landroid/content/Context;Lcom/google/android/gms/vision/face/internal/client/zzf;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `zza`(`com.google.android.gms.vision.face.internal.client.zzb` v1 @kind this, `com.google.android.gms.dynamite.DynamiteModule` v2 @kind object, `android.content.Context` v3 @kind object) @signature `Lcom/google/android/gms/vision/face/internal/client/zzb;.zza:(Lcom/google/android/gms/dynamite/DynamiteModule;Landroid/content/Context;)Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.vision.face.Face`[] `zzb`(`com.google.android.gms.vision.face.internal.client.zzb` v20 @kind this, `java.nio.ByteBuffer` v21 @kind object, `com.google.android.gms.internal.vision.zzp` v22 @kind object) @signature `Lcom/google/android/gms/vision/face/internal/client/zzb;.zzb:(Ljava/nio/ByteBuffer;Lcom/google/android/gms/internal/vision/zzp;)[Lcom/google/android/gms/vision/face/Face;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `zzd`(`com.google.android.gms.vision.face.internal.client.zzb` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/gms/vision/face/internal/client/zzb;.zzd:(I)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `zzn`(`com.google.android.gms.vision.face.internal.client.zzb` v1 @kind this) @signature `Lcom/google/android/gms/vision/face/internal/client/zzb;.zzn:()V` @AccessFlag PROTECTED_FINAL {

  # return;
}
