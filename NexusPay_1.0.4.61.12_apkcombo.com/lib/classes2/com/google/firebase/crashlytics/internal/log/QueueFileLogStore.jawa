record `com.google.firebase.crashlytics.internal.log.QueueFileLogStore` @kind class @AccessFlag  extends `com.google.firebase.crashlytics.internal.log.FileLogStore` @kind interface {
  `com.google.firebase.crashlytics.internal.log.QueueFile` `com.google.firebase.crashlytics.internal.log.QueueFileLogStore.logFile` @AccessFlag PRIVATE;
  `int` `com.google.firebase.crashlytics.internal.log.QueueFileLogStore.maxLogSize` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `com.google.firebase.crashlytics.internal.log.QueueFileLogStore.workingFile` @AccessFlag PRIVATE_FINAL;
}
global `java.nio.charset.Charset` `@@com.google.firebase.crashlytics.internal.log.QueueFileLogStore.UTF_8` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v0 @kind this, `java.io.File` v1 @kind object, `int` v2 ) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.<init>:(Ljava/io/File;I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `doWriteToLog`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v4 @kind this, `long` v5 , `java.lang.String` v7 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.doWriteToLog:(JLjava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes` `getLogBytes`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v6 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.getLogBytes:()Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore$LogBytes;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `openLogFile`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v4 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.openLogFile:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `closeLogFile`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v2 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.closeLogFile:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `deleteLogFile`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v1 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.deleteLogFile:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getLogAsBytes`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v4 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.getLogAsBytes:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getLogAsString`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v3 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.getLogAsString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeToLog`(`com.google.firebase.crashlytics.internal.log.QueueFileLogStore` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/log/QueueFileLogStore;.writeToLog:(JLjava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
