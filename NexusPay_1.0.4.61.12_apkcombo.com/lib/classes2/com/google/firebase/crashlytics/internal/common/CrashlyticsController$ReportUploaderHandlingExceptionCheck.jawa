record `com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderHandlingExceptionCheck` @kind class @AccessFlag FINAL extends `com.google.firebase.crashlytics.internal.report.ReportUploader$HandlingExceptionCheck` @kind interface {
  `com.google.firebase.crashlytics.internal.common.CrashlyticsController` `com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderHandlingExceptionCheck.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderHandlingExceptionCheck` v0 @kind this, `com.google.firebase.crashlytics.internal.common.CrashlyticsController` v1 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsController$ReportUploaderHandlingExceptionCheck;.<init>:(Lcom/google/firebase/crashlytics/internal/common/CrashlyticsController;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderHandlingExceptionCheck` v0 @kind this, `com.google.firebase.crashlytics.internal.common.CrashlyticsController` v1 @kind object, `com.google.firebase.crashlytics.internal.common.CrashlyticsController$1` v2 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsController$ReportUploaderHandlingExceptionCheck;.<init>:(Lcom/google/firebase/crashlytics/internal/common/CrashlyticsController;Lcom/google/firebase/crashlytics/internal/common/CrashlyticsController$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isHandlingException`(`com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderHandlingExceptionCheck` v1 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsController$ReportUploaderHandlingExceptionCheck;.isHandlingException:()Z` @AccessFlag PUBLIC {

  # return;
}
