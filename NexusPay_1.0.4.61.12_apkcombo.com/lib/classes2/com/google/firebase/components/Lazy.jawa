record `com.google.firebase.components.Lazy` @kind class @AccessFlag PUBLIC extends `com.google.firebase.inject.Provider` @kind interface {
  `java.lang.Object` `com.google.firebase.components.Lazy.instance` @AccessFlag PRIVATE_VOLATILE;
  `com.google.firebase.inject.Provider` `com.google.firebase.components.Lazy.provider` @AccessFlag PRIVATE_VOLATILE;
}
global `java.lang.Object` `@@com.google.firebase.components.Lazy.UNINITIALIZED` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/components/Lazy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.components.Lazy` v1 @kind this, `com.google.firebase.inject.Provider` v2 @kind object) @signature `Lcom/google/firebase/components/Lazy;.<init>:(Lcom/google/firebase/inject/Provider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.components.Lazy` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/firebase/components/Lazy;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.firebase.components.Lazy` v2 @kind this) @signature `Lcom/google/firebase/components/Lazy;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isInitialized`(`com.google.firebase.components.Lazy` v2 @kind this) @signature `Lcom/google/firebase/components/Lazy;.isInitialized:()Z` @AccessFlag  {

  # return;
}
