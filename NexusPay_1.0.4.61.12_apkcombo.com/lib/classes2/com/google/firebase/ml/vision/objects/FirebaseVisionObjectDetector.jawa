record `com.google.firebase.ml.vision.objects.FirebaseVisionObjectDetector` @kind class @AccessFlag PUBLIC extends `com.google.android.gms.internal.firebase_ml.zzri` @kind class, `java.io.Closeable` @kind interface {
}
global `java.util.Map` `@@com.google.firebase.ml.vision.objects.FirebaseVisionObjectDetector.zzbbn` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/ml/vision/objects/FirebaseVisionObjectDetector;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.ml.vision.objects.FirebaseVisionObjectDetector` v1 @kind this, `com.google.android.gms.internal.firebase_ml.zzpn` v2 @kind object, `com.google.firebase.ml.vision.objects.FirebaseVisionObjectDetectorOptions` v3 @kind object) @signature `Lcom/google/firebase/ml/vision/objects/FirebaseVisionObjectDetector;.<init>:(Lcom/google/android/gms/internal/firebase_ml/zzpn;Lcom/google/firebase/ml/vision/objects/FirebaseVisionObjectDetectorOptions;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.ml.vision.objects.FirebaseVisionObjectDetector` `zza`(`com.google.android.gms.internal.firebase_ml.zzpn` v3 @kind object, `com.google.firebase.ml.vision.objects.FirebaseVisionObjectDetectorOptions` v4 @kind object) @signature `Lcom/google/firebase/ml/vision/objects/FirebaseVisionObjectDetector;.zza:(Lcom/google/android/gms/internal/firebase_ml/zzpn;Lcom/google/firebase/ml/vision/objects/FirebaseVisionObjectDetectorOptions;)Lcom/google/firebase/ml/vision/objects/FirebaseVisionObjectDetector;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `processImage`(`com.google.firebase.ml.vision.objects.FirebaseVisionObjectDetector` v2 @kind this, `com.google.firebase.ml.vision.common.FirebaseVisionImage` v3 @kind object) @signature `Lcom/google/firebase/ml/vision/objects/FirebaseVisionObjectDetector;.processImage:(Lcom/google/firebase/ml/vision/common/FirebaseVisionImage;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
