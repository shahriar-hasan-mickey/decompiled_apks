record `com.google.firebase.installations.remote.RequestLimiter` @kind class @AccessFlag  {
  `int` `com.google.firebase.installations.remote.RequestLimiter.attemptCount` @AccessFlag PRIVATE;
  `long` `com.google.firebase.installations.remote.RequestLimiter.nextRequestTime` @AccessFlag PRIVATE;
  `com.google.firebase.installations.Utils` `com.google.firebase.installations.remote.RequestLimiter.utils` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.google.firebase.installations.remote.RequestLimiter.MAXIMUM_BACKOFF_DURATION_FOR_CONFIGURATION_ERRORS` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.firebase.installations.remote.RequestLimiter.MAXIMUM_BACKOFF_DURATION_FOR_SERVER_ERRORS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.installations.remote.RequestLimiter` v1 @kind this) @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.installations.remote.RequestLimiter` v0 @kind this, `com.google.firebase.installations.Utils` v1 @kind object) @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.<init>:(Lcom/google/firebase/installations/Utils;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `long` `getBackoffDuration`(`com.google.firebase.installations.remote.RequestLimiter` v4 @kind this, `int` v5 ) @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.getBackoffDuration:(I)J` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isRetryableError`(`int` v1 ) @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.isRetryableError:(I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isSuccessfulOrRequiresNewFidCreation`(`int` v1 ) @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.isSuccessfulOrRequiresNewFidCreation:(I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `resetBackoffStrategy`(`com.google.firebase.installations.remote.RequestLimiter` v1 @kind this) @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.resetBackoffStrategy:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isRequestAllowed`(`com.google.firebase.installations.remote.RequestLimiter` v5 @kind this) @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.isRequestAllowed:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setNextRequestTime`(`com.google.firebase.installations.remote.RequestLimiter` v4 @kind this, `int` v5 ) @signature `Lcom/google/firebase/installations/remote/RequestLimiter;.setNextRequestTime:(I)V` @AccessFlag PUBLIC {

  # return;
}
