record `com.google.gson.internal.bind.JsonTreeReader` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.gson.stream.JsonReader` @kind class {
  `int`[] `com.google.gson.internal.bind.JsonTreeReader.pathIndices` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.google.gson.internal.bind.JsonTreeReader.pathNames` @AccessFlag PRIVATE;
  `java.lang.Object`[] `com.google.gson.internal.bind.JsonTreeReader.stack` @AccessFlag PRIVATE;
  `int` `com.google.gson.internal.bind.JsonTreeReader.stackSize` @AccessFlag PRIVATE;
}
global `java.lang.Object` `@@com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.io.Reader` `@@com.google.gson.internal.bind.JsonTreeReader.UNREADABLE_READER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.gson.internal.bind.JsonTreeReader` v2 @kind this, `com.google.gson.JsonElement` v3 @kind object) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.<init>:(Lcom/google/gson/JsonElement;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `expect`(`com.google.gson.internal.bind.JsonTreeReader` v3 @kind this, `com.google.gson.stream.JsonToken` v4 @kind object) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.expect:(Lcom/google/gson/stream/JsonToken;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `locationString`(`com.google.gson.internal.bind.JsonTreeReader` v2 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.locationString:()Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `peekStack`(`com.google.gson.internal.bind.JsonTreeReader` v2 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.peekStack:()Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `popStack`(`com.google.gson.internal.bind.JsonTreeReader` v4 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.popStack:()Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `push`(`com.google.gson.internal.bind.JsonTreeReader` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.push:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `beginArray`(`com.google.gson.internal.bind.JsonTreeReader` v3 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.beginArray:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `beginObject`(`com.google.gson.internal.bind.JsonTreeReader` v1 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.beginObject:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`com.google.gson.internal.bind.JsonTreeReader` v4 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `endArray`(`com.google.gson.internal.bind.JsonTreeReader` v3 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.endArray:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `endObject`(`com.google.gson.internal.bind.JsonTreeReader` v3 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.endObject:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getPath`(`com.google.gson.internal.bind.JsonTreeReader` v4 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasNext`(`com.google.gson.internal.bind.JsonTreeReader` v2 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `nextBoolean`(`com.google.gson.internal.bind.JsonTreeReader` v4 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.nextBoolean:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `nextDouble`(`com.google.gson.internal.bind.JsonTreeReader` v5 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.nextDouble:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `nextInt`(`com.google.gson.internal.bind.JsonTreeReader` v4 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.nextInt:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `nextLong`(`com.google.gson.internal.bind.JsonTreeReader` v5 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.nextLong:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `nextName`(`com.google.gson.internal.bind.JsonTreeReader` v4 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.nextName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `nextNull`(`com.google.gson.internal.bind.JsonTreeReader` v3 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.nextNull:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `nextString`(`com.google.gson.internal.bind.JsonTreeReader` v4 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.nextString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.gson.stream.JsonToken` `peek`(`com.google.gson.internal.bind.JsonTreeReader` v3 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.peek:()Lcom/google/gson/stream/JsonToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `promoteNameToValue`(`com.google.gson.internal.bind.JsonTreeReader` v2 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.promoteNameToValue:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `skipValue`(`com.google.gson.internal.bind.JsonTreeReader` v3 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.skipValue:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.gson.internal.bind.JsonTreeReader` v1 @kind this) @signature `Lcom/google/gson/internal/bind/JsonTreeReader;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
