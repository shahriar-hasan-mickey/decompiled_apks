record `com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory` @kind class @AccessFlag FINAL extends `com.google.gson.TypeAdapterFactory` @kind interface {
  `com.google.gson.JsonDeserializer` `com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory.deserializer` @AccessFlag PRIVATE_FINAL;
  `com.google.gson.reflect.TypeToken` `com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory.exactType` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory.hierarchyType` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory.matchRawType` @AccessFlag PRIVATE_FINAL;
  `com.google.gson.JsonSerializer` `com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory.serializer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory` v2 @kind this, `java.lang.Object` v3 @kind object, `com.google.gson.reflect.TypeToken` v4 @kind object, `boolean` v5 , `java.lang.Class` v6 @kind object) @signature `Lcom/google/gson/internal/bind/TreeTypeAdapter$SingleTypeFactory;.<init>:(Ljava/lang/Object;Lcom/google/gson/reflect/TypeToken;ZLjava/lang/Class;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.gson.TypeAdapter` `create`(`com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory` v7 @kind this, `com.google.gson.Gson` v8 @kind object, `com.google.gson.reflect.TypeToken` v9 @kind object) @signature `Lcom/google/gson/internal/bind/TreeTypeAdapter$SingleTypeFactory;.create:(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;` @AccessFlag PUBLIC {

  # return;
}
