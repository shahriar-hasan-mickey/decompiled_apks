record `org.bouncycastle.ocsp.Req` @kind class @AccessFlag PUBLIC extends `java.security.cert.X509Extension` @kind interface {
  `org.bouncycastle.asn1.ocsp.Request` `org.bouncycastle.ocsp.Req.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.ocsp.Req` v0 @kind this, `org.bouncycastle.asn1.ocsp.Request` v1 @kind object) @signature `Lorg/bouncycastle/ocsp/Req;.<init>:(Lorg/bouncycastle/asn1/ocsp/Request;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Set` `a`(`org.bouncycastle.ocsp.Req` v5 @kind this, `boolean` v6 ) @signature `Lorg/bouncycastle/ocsp/Req;.a:(Z)Ljava/util/Set;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.bouncycastle.ocsp.CertificateID` `getCertID`(`org.bouncycastle.ocsp.Req` v2 @kind this) @signature `Lorg/bouncycastle/ocsp/Req;.getCertID:()Lorg/bouncycastle/ocsp/CertificateID;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `getCriticalExtensionOIDs`(`org.bouncycastle.ocsp.Req` v1 @kind this) @signature `Lorg/bouncycastle/ocsp/Req;.getCriticalExtensionOIDs:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getExtensionValue`(`org.bouncycastle.ocsp.Req` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/bouncycastle/ocsp/Req;.getExtensionValue:(Ljava/lang/String;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `getNonCriticalExtensionOIDs`(`org.bouncycastle.ocsp.Req` v1 @kind this) @signature `Lorg/bouncycastle/ocsp/Req;.getNonCriticalExtensionOIDs:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.asn1.x509.X509Extensions` `getSingleRequestExtensions`(`org.bouncycastle.ocsp.Req` v1 @kind this) @signature `Lorg/bouncycastle/ocsp/Req;.getSingleRequestExtensions:()Lorg/bouncycastle/asn1/x509/X509Extensions;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasUnsupportedCriticalExtension`(`org.bouncycastle.ocsp.Req` v1 @kind this) @signature `Lorg/bouncycastle/ocsp/Req;.hasUnsupportedCriticalExtension:()Z` @AccessFlag PUBLIC {

  # return;
}
