record `org.bouncycastle.crypto.BlockCipher` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.lang.String` `getAlgorithmName`() @signature `Lorg/bouncycastle/crypto/BlockCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getBlockSize`() @signature `Lorg/bouncycastle/crypto/BlockCipher;.getBlockSize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `init`(`boolean` v0 , `org.bouncycastle.crypto.CipherParameters` v1 @kind object) @signature `Lorg/bouncycastle/crypto/BlockCipher;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `processBlock`(`byte`[] v0 @kind object, `int` v1 , `byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/bouncycastle/crypto/BlockCipher;.processBlock:([BI[BI)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `reset`() @signature `Lorg/bouncycastle/crypto/BlockCipher;.reset:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
