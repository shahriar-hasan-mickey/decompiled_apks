record `org.bouncycastle.crypto.prng.ThreadedSeedGenerator$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `int` `org.bouncycastle.crypto.prng.ThreadedSeedGenerator$b.a` @AccessFlag PRIVATE_VOLATILE;
  `boolean` `org.bouncycastle.crypto.prng.ThreadedSeedGenerator$b.b` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.prng.ThreadedSeedGenerator$b` v0 @kind this, `org.bouncycastle.crypto.prng.ThreadedSeedGenerator` v1 @kind object) @signature `Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator$b;.<init>:(Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.prng.ThreadedSeedGenerator$b` v0 @kind this, `org.bouncycastle.crypto.prng.ThreadedSeedGenerator` v1 @kind object, `org.bouncycastle.crypto.prng.ThreadedSeedGenerator$a` v2 @kind object) @signature `Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator$b;.<init>:(Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator;Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`org.bouncycastle.crypto.prng.ThreadedSeedGenerator$b` v6 @kind this, `int` v7 , `boolean` v8 ) @signature `Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator$b;.a:(IZ)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `run`(`org.bouncycastle.crypto.prng.ThreadedSeedGenerator$b` v1 @kind this) @signature `Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator$b;.run:()V` @AccessFlag PUBLIC {

  # return;
}
