record `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.prng.drbg.SP80090DRBG` @kind interface {
  `org.bouncycastle.crypto.prng.EntropySource` `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.a` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.BlockCipher` `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.d` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.e` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.f` @AccessFlag PRIVATE;
  `long` `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.g` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.h` @AccessFlag PRIVATE;
}
global `byte`[] `@@org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v2 @kind this, `org.bouncycastle.crypto.BlockCipher` v3 @kind object, `int` v4 , `int` v5 , `org.bouncycastle.crypto.prng.EntropySource` v6 @kind object, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;IILorg/bouncycastle/crypto/prng/EntropySource;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object, `byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.a:([B[B[B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `b`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v16 @kind this, `byte`[] v17 @kind object, `int` v18 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.b:([BI)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `c`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.c:([B[B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v1 @kind this, `org.bouncycastle.crypto.prng.EntropySource` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.d:(Lorg/bouncycastle/crypto/prng/EntropySource;[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v8 @kind this, `byte`[] v9 @kind object, `byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.e:([B[B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `f`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.f:([B[B[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v5 @kind this, `byte`[] v6 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.g:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `h`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.h:([BII)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `j`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v1 @kind this, `org.bouncycastle.crypto.BlockCipher` v2 @kind object, `int` v3 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.j:(Lorg/bouncycastle/crypto/BlockCipher;I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `k`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v2 @kind this, `org.bouncycastle.crypto.BlockCipher` v3 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.k:(Lorg/bouncycastle/crypto/BlockCipher;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `l`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.l:([BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `generate`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object, `boolean` v9 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.generate:([B[BZ)I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `i`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.i:([B)[B` @AccessFlag  {

  # return;
}
procedure `void` `reseed`(`org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/CTRSP800DRBG;.reseed:([B)V` @AccessFlag PUBLIC {

  # return;
}
