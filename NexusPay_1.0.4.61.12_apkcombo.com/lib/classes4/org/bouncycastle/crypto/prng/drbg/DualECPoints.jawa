record `org.bouncycastle.crypto.prng.drbg.DualECPoints` @kind class @AccessFlag PUBLIC {
  `org.bouncycastle.math.ec.ECPoint` `org.bouncycastle.crypto.prng.drbg.DualECPoints.a` @AccessFlag PRIVATE_FINAL;
  `org.bouncycastle.math.ec.ECPoint` `org.bouncycastle.crypto.prng.drbg.DualECPoints.b` @AccessFlag PRIVATE_FINAL;
  `int` `org.bouncycastle.crypto.prng.drbg.DualECPoints.c` @AccessFlag PRIVATE_FINAL;
  `int` `org.bouncycastle.crypto.prng.drbg.DualECPoints.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.prng.drbg.DualECPoints` v2 @kind this, `int` v3 , `org.bouncycastle.math.ec.ECPoint` v4 @kind object, `org.bouncycastle.math.ec.ECPoint` v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;.<init>:(ILorg/bouncycastle/math/ec/ECPoint;Lorg/bouncycastle/math/ec/ECPoint;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`int` v1 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;.a:(I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `getCofactor`(`org.bouncycastle.crypto.prng.drbg.DualECPoints` v1 @kind this) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;.getCofactor:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMaxOutlen`(`org.bouncycastle.crypto.prng.drbg.DualECPoints` v2 @kind this) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;.getMaxOutlen:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.math.ec.ECPoint` `getP`(`org.bouncycastle.crypto.prng.drbg.DualECPoints` v1 @kind this) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;.getP:()Lorg/bouncycastle/math/ec/ECPoint;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.math.ec.ECPoint` `getQ`(`org.bouncycastle.crypto.prng.drbg.DualECPoints` v1 @kind this) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;.getQ:()Lorg/bouncycastle/math/ec/ECPoint;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getSecurityStrength`(`org.bouncycastle.crypto.prng.drbg.DualECPoints` v1 @kind this) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;.getSecurityStrength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getSeedLen`(`org.bouncycastle.crypto.prng.drbg.DualECPoints` v1 @kind this) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;.getSeedLen:()I` @AccessFlag PUBLIC {

  # return;
}
