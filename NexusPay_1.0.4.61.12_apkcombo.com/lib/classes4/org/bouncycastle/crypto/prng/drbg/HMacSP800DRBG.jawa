record `org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.prng.drbg.SP80090DRBG` @kind interface {
  `byte`[] `org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG.a` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG.b` @AccessFlag PRIVATE;
  `long` `org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG.c` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.prng.EntropySource` `org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG.d` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.Mac` `org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG` v1 @kind this, `org.bouncycastle.crypto.Mac` v2 @kind object, `int` v3 , `org.bouncycastle.crypto.prng.EntropySource` v4 @kind object, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/HMacSP800DRBG;.<init>:(Lorg/bouncycastle/crypto/Mac;ILorg/bouncycastle/crypto/prng/EntropySource;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/HMacSP800DRBG;.a:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `b`(`org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG` v4 @kind this, `byte`[] v5 @kind object, `byte` v6 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/HMacSP800DRBG;.b:([BB)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `generate`(`org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG` v8 @kind this, `byte`[] v9 @kind object, `byte`[] v10 @kind object, `boolean` v11 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/HMacSP800DRBG;.generate:([B[BZ)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reseed`(`org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/HMacSP800DRBG;.reseed:([B)V` @AccessFlag PUBLIC {

  # return;
}
