record `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.prng.drbg.SP80090DRBG` @kind interface {
  `org.bouncycastle.crypto.Digest` `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.a` @AccessFlag PRIVATE;
  `long` `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.b` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.prng.EntropySource` `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.d` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.e` @AccessFlag PRIVATE;
  `org.bouncycastle.math.ec.ECPoint` `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.f` @AccessFlag PRIVATE;
  `org.bouncycastle.math.ec.ECPoint` `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.g` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.h` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.i` @AccessFlag PRIVATE;
}
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.q` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.r` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.t` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.u` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.bouncycastle.crypto.prng.drbg.DualECPoints`[] `@@org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.v` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECSP800DRBG;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG` v7 @kind this, `org.bouncycastle.crypto.Digest` v8 @kind object, `int` v9 , `org.bouncycastle.crypto.prng.EntropySource` v10 @kind object, `byte`[] v11 @kind object, `byte`[] v12 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECSP800DRBG;.<init>:(Lorg/bouncycastle/crypto/Digest;ILorg/bouncycastle/crypto/prng/EntropySource;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG` v2 @kind this, `org.bouncycastle.crypto.prng.drbg.DualECPoints`[] v3 @kind object, `org.bouncycastle.crypto.Digest` v4 @kind object, `int` v5 , `org.bouncycastle.crypto.prng.EntropySource` v6 @kind object, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECSP800DRBG;.<init>:([Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;Lorg/bouncycastle/crypto/Digest;ILorg/bouncycastle/crypto/prng/EntropySource;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `a`(`org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG` v0 @kind this, `org.bouncycastle.math.ec.ECPoint` v1 @kind object, `java.math.BigInteger` v2 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECSP800DRBG;.a:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `b`(`org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECSP800DRBG;.b:([BI)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `c`(`org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG` v5 @kind this, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECSP800DRBG;.c:([B[B)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `generate`(`org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG` v9 @kind this, `byte`[] v10 @kind object, `byte`[] v11 @kind object, `boolean` v12 ) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECSP800DRBG;.generate:([B[BZ)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reseed`(`org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/prng/drbg/DualECSP800DRBG;.reseed:([B)V` @AccessFlag PUBLIC {

  # return;
}
