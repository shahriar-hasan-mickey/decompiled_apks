record `org.bouncycastle.crypto.commitments.GeneralHashCommitter` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.Committer` @kind interface {
  `org.bouncycastle.crypto.Digest` `org.bouncycastle.crypto.commitments.GeneralHashCommitter.a` @AccessFlag PRIVATE_FINAL;
  `int` `org.bouncycastle.crypto.commitments.GeneralHashCommitter.b` @AccessFlag PRIVATE_FINAL;
  `java.security.SecureRandom` `org.bouncycastle.crypto.commitments.GeneralHashCommitter.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.commitments.GeneralHashCommitter` v0 @kind this, `org.bouncycastle.crypto.ExtendedDigest` v1 @kind object, `java.security.SecureRandom` v2 @kind object) @signature `Lorg/bouncycastle/crypto/commitments/GeneralHashCommitter;.<init>:(Lorg/bouncycastle/crypto/ExtendedDigest;Ljava/security/SecureRandom;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`org.bouncycastle.crypto.commitments.GeneralHashCommitter` v4 @kind this, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/bouncycastle/crypto/commitments/GeneralHashCommitter;.a:([B[B)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `org.bouncycastle.crypto.Commitment` `commit`(`org.bouncycastle.crypto.commitments.GeneralHashCommitter` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/commitments/GeneralHashCommitter;.commit:([B)Lorg/bouncycastle/crypto/Commitment;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isRevealed`(`org.bouncycastle.crypto.commitments.GeneralHashCommitter` v2 @kind this, `org.bouncycastle.crypto.Commitment` v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/commitments/GeneralHashCommitter;.isRevealed:(Lorg/bouncycastle/crypto/Commitment;[B)Z` @AccessFlag PUBLIC {

  # return;
}
