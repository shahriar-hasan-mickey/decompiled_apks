record `org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` @kind class @AccessFlag PUBLIC {
  `org.bouncycastle.crypto.AsymmetricBlockCipher` `org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.buf` @AccessFlag PROTECTED;
  `int` `org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.bufOff` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v0 @kind this, `org.bouncycastle.crypto.AsymmetricBlockCipher` v1 @kind object) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.<init>:(Lorg/bouncycastle/crypto/AsymmetricBlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `doFinal`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v4 @kind this) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.doFinal:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBufferPosition`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.getBufferPosition:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getInputBlockSize`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.getInputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOutputBlockSize`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.getOutputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.AsymmetricBlockCipher` `getUnderlyingCipher`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.getUnderlyingCipher:()Lorg/bouncycastle/crypto/AsymmetricBlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v1 @kind this, `boolean` v2 , `org.bouncycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processByte`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v3 @kind this, `byte` v4 ) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.processByte:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processBytes`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.processBytes:([BII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.BufferedAsymmetricBlockCipher` v4 @kind this) @signature `Lorg/bouncycastle/crypto/BufferedAsymmetricBlockCipher;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
