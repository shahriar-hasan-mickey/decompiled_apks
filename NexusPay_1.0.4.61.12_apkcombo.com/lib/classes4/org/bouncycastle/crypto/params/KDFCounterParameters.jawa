record `org.bouncycastle.crypto.params.KDFCounterParameters` @kind class @AccessFlag PUBLIC_FINAL extends `org.bouncycastle.crypto.DerivationParameters` @kind interface {
  `byte`[] `org.bouncycastle.crypto.params.KDFCounterParameters.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.bouncycastle.crypto.params.KDFCounterParameters.b` @AccessFlag PRIVATE_FINAL;
  `int` `org.bouncycastle.crypto.params.KDFCounterParameters.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.params.KDFCounterParameters` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/bouncycastle/crypto/params/KDFCounterParameters;.<init>:([B[BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `getFixedInputData`(`org.bouncycastle.crypto.params.KDFCounterParameters` v1 @kind this) @signature `Lorg/bouncycastle/crypto/params/KDFCounterParameters;.getFixedInputData:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getKI`(`org.bouncycastle.crypto.params.KDFCounterParameters` v1 @kind this) @signature `Lorg/bouncycastle/crypto/params/KDFCounterParameters;.getKI:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getR`(`org.bouncycastle.crypto.params.KDFCounterParameters` v1 @kind this) @signature `Lorg/bouncycastle/crypto/params/KDFCounterParameters;.getR:()I` @AccessFlag PUBLIC {

  # return;
}
