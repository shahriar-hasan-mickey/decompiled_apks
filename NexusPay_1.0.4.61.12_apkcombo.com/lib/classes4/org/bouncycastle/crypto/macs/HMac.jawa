record `org.bouncycastle.crypto.macs.HMac` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.Mac` @kind interface {
  `org.bouncycastle.crypto.Digest` `org.bouncycastle.crypto.macs.HMac.a` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.HMac.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.HMac.c` @AccessFlag PRIVATE;
  `org.bouncycastle.util.Memoable` `org.bouncycastle.crypto.macs.HMac.d` @AccessFlag PRIVATE;
  `org.bouncycastle.util.Memoable` `org.bouncycastle.crypto.macs.HMac.e` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.macs.HMac.f` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.macs.HMac.g` @AccessFlag PRIVATE;
}
global `java.util.Hashtable` `@@org.bouncycastle.crypto.macs.HMac.h` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/macs/HMac;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.macs.HMac` v1 @kind this, `org.bouncycastle.crypto.Digest` v2 @kind object) @signature `Lorg/bouncycastle/crypto/macs/HMac;.<init>:(Lorg/bouncycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.macs.HMac` v1 @kind this, `org.bouncycastle.crypto.Digest` v2 @kind object, `int` v3 ) @signature `Lorg/bouncycastle/crypto/macs/HMac;.<init>:(Lorg/bouncycastle/crypto/Digest;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`org.bouncycastle.crypto.Digest` v3 @kind object) @signature `Lorg/bouncycastle/crypto/macs/HMac;.a:(Lorg/bouncycastle/crypto/Digest;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `b`(`byte`[] v2 @kind object, `int` v3 , `byte` v4 ) @signature `Lorg/bouncycastle/crypto/macs/HMac;.b:([BIB)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `doFinal`(`org.bouncycastle.crypto.macs.HMac` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/bouncycastle/crypto/macs/HMac;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.macs.HMac` v2 @kind this) @signature `Lorg/bouncycastle/crypto/macs/HMac;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMacSize`(`org.bouncycastle.crypto.macs.HMac` v1 @kind this) @signature `Lorg/bouncycastle/crypto/macs/HMac;.getMacSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.Digest` `getUnderlyingDigest`(`org.bouncycastle.crypto.macs.HMac` v1 @kind this) @signature `Lorg/bouncycastle/crypto/macs/HMac;.getUnderlyingDigest:()Lorg/bouncycastle/crypto/Digest;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.macs.HMac` v3 @kind this, `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/macs/HMac;.init:(Lorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.macs.HMac` v4 @kind this) @signature `Lorg/bouncycastle/crypto/macs/HMac;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.macs.HMac` v1 @kind this, `byte` v2 ) @signature `Lorg/bouncycastle/crypto/macs/HMac;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.macs.HMac` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/macs/HMac;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
