record `org.bouncycastle.crypto.macs.SipHash` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.Mac` @kind interface {
  `byte`[] `org.bouncycastle.crypto.macs.SipHash.buf` @AccessFlag PROTECTED;
  `int` `org.bouncycastle.crypto.macs.SipHash.bufPos` @AccessFlag PROTECTED;
  `int` `org.bouncycastle.crypto.macs.SipHash.c` @AccessFlag PROTECTED_FINAL;
  `int` `org.bouncycastle.crypto.macs.SipHash.d` @AccessFlag PROTECTED_FINAL;
  `long` `org.bouncycastle.crypto.macs.SipHash.k0` @AccessFlag PROTECTED;
  `long` `org.bouncycastle.crypto.macs.SipHash.k1` @AccessFlag PROTECTED;
  `long` `org.bouncycastle.crypto.macs.SipHash.v0` @AccessFlag PROTECTED;
  `long` `org.bouncycastle.crypto.macs.SipHash.v1` @AccessFlag PROTECTED;
  `long` `org.bouncycastle.crypto.macs.SipHash.v2` @AccessFlag PROTECTED;
  `long` `org.bouncycastle.crypto.macs.SipHash.v3` @AccessFlag PROTECTED;
  `long` `org.bouncycastle.crypto.macs.SipHash.v4` @AccessFlag PROTECTED;
  `int` `org.bouncycastle.crypto.macs.SipHash.wordCount` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.macs.SipHash` v1 @kind this) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.macs.SipHash` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `long` `rotateLeft`(`long` v2 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.rotateLeft:(JI)J` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `applySipRounds`(`org.bouncycastle.crypto.macs.SipHash` v8 @kind this, `int` v9 ) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.applySipRounds:(I)V` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `doFinal`(`org.bouncycastle.crypto.macs.SipHash` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `doFinal`(`org.bouncycastle.crypto.macs.SipHash` v4 @kind this) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.doFinal:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.macs.SipHash` v2 @kind this) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMacSize`(`org.bouncycastle.crypto.macs.SipHash` v1 @kind this) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.getMacSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.macs.SipHash` v2 @kind this, `org.bouncycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.init:(Lorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processMessageWord`(`org.bouncycastle.crypto.macs.SipHash` v4 @kind this) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.processMessageWord:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.macs.SipHash` v6 @kind this) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.macs.SipHash` v2 @kind this, `byte` v3 ) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.macs.SipHash` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/bouncycastle/crypto/macs/SipHash;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
