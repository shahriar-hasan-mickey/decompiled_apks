record `org.bouncycastle.crypto.macs.Poly1305` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.Mac` @kind interface {
  `org.bouncycastle.crypto.BlockCipher` `org.bouncycastle.crypto.macs.Poly1305.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.bouncycastle.crypto.macs.Poly1305.b` @AccessFlag PRIVATE_FINAL;
  `int` `org.bouncycastle.crypto.macs.Poly1305.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.d` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.e` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.f` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.g` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.h` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.i` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.j` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.k` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.l` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.m` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.n` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.o` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.macs.Poly1305.p` @AccessFlag PRIVATE_FINAL;
  `int` `org.bouncycastle.crypto.macs.Poly1305.q` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.r` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.s` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.t` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.u` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.macs.Poly1305.v` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.macs.Poly1305` v2 @kind this, `org.bouncycastle.crypto.BlockCipher` v3 @kind object) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `long` `a`(`int` v2 , `int` v3 ) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.a:(II)J` @AccessFlag PRIVATE_STATIC_FINAL {

  # return;
}
procedure `void` `b`(`org.bouncycastle.crypto.macs.Poly1305` v18 @kind this) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.b:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `c`(`org.bouncycastle.crypto.macs.Poly1305` v7 @kind this, `byte`[] v8 @kind object, `byte`[] v9 @kind object) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.c:([B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `doFinal`(`org.bouncycastle.crypto.macs.Poly1305` v13 @kind this, `byte`[] v14 @kind object, `int` v15 ) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.macs.Poly1305` v2 @kind this) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMacSize`(`org.bouncycastle.crypto.macs.Poly1305` v1 @kind this) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.getMacSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.macs.Poly1305` v1 @kind this, `org.bouncycastle.crypto.CipherParameters` v2 @kind object) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.init:(Lorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.macs.Poly1305` v1 @kind this) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.macs.Poly1305` v2 @kind this, `byte` v3 ) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.macs.Poly1305` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/bouncycastle/crypto/macs/Poly1305;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
