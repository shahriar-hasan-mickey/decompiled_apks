record `org.bouncycastle.crypto.modes.OFBBlockCipher` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `byte`[] `org.bouncycastle.crypto.modes.OFBBlockCipher.a` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.OFBBlockCipher.b` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.OFBBlockCipher.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.modes.OFBBlockCipher.d` @AccessFlag PRIVATE_FINAL;
  `org.bouncycastle.crypto.BlockCipher` `org.bouncycastle.crypto.modes.OFBBlockCipher.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.modes.OFBBlockCipher` v0 @kind this, `org.bouncycastle.crypto.BlockCipher` v1 @kind object, `int` v2 ) @signature `Lorg/bouncycastle/crypto/modes/OFBBlockCipher;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.modes.OFBBlockCipher` v2 @kind this) @signature `Lorg/bouncycastle/crypto/modes/OFBBlockCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.modes.OFBBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/modes/OFBBlockCipher;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.BlockCipher` `getUnderlyingCipher`(`org.bouncycastle.crypto.modes.OFBBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/modes/OFBBlockCipher;.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.modes.OFBBlockCipher` v6 @kind this, `boolean` v7 , `org.bouncycastle.crypto.CipherParameters` v8 @kind object) @signature `Lorg/bouncycastle/crypto/modes/OFBBlockCipher;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.modes.OFBBlockCipher` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/modes/OFBBlockCipher;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.modes.OFBBlockCipher` v4 @kind this) @signature `Lorg/bouncycastle/crypto/modes/OFBBlockCipher;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
