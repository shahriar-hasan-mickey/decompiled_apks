record `org.bouncycastle.crypto.modes.PGPCFBBlockCipher` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `byte`[] `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.a` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.b` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.c` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.d` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.BlockCipher` `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.e` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.f` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.g` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.h` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.modes.PGPCFBBlockCipher.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v0 @kind this, `org.bouncycastle.crypto.BlockCipher` v1 @kind object, `boolean` v2 ) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.a:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.b:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `c`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.c:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `d`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.d:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `e`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v1 @kind this, `byte` v2 , `int` v3 ) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.e:(BI)B` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v2 @kind this) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.BlockCipher` `getUnderlyingCipher`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v6 @kind this, `boolean` v7 , `org.bouncycastle.crypto.CipherParameters` v8 @kind object) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.modes.PGPCFBBlockCipher` v4 @kind this) @signature `Lorg/bouncycastle/crypto/modes/PGPCFBBlockCipher;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
