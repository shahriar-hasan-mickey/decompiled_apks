record `org.bouncycastle.crypto.modes.EAXBlockCipher` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.modes.AEADBlockCipher` @kind interface {
  `org.bouncycastle.crypto.modes.SICBlockCipher` `org.bouncycastle.crypto.modes.EAXBlockCipher.a` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.modes.EAXBlockCipher.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.modes.EAXBlockCipher.c` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.Mac` `org.bouncycastle.crypto.modes.EAXBlockCipher.d` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.EAXBlockCipher.e` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.EAXBlockCipher.f` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.EAXBlockCipher.g` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.modes.EAXBlockCipher.h` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.EAXBlockCipher.i` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.modes.EAXBlockCipher.j` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.modes.EAXBlockCipher.k` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.modes.EAXBlockCipher.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v3 @kind this, `org.bouncycastle.crypto.BlockCipher` v4 @kind object) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v5 @kind this) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.a:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `b`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v5 @kind this) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.b:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `c`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v3 @kind this, `byte` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.c:(B[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v4 @kind this, `boolean` v5 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.d:(Z)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `e`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.e:([BI)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `doFinal`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v7 @kind this, `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v2 @kind this) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getMac`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v4 @kind this) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.getMac:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOutputSize`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.getOutputSize:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.BlockCipher` `getUnderlyingCipher`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getUpdateOutputSize`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.getUpdateOutputSize:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v4 @kind this, `boolean` v5 , `org.bouncycastle.crypto.CipherParameters` v6 @kind object) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processAADByte`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v1 @kind this, `byte` v2 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.processAADByte:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processAADBytes`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.processAADBytes:([BII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processByte`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v0 @kind this, `byte` v1 , `byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.processByte:(B[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBytes`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.processBytes:([BII[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.modes.EAXBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/modes/EAXBlockCipher;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
