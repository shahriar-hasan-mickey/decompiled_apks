record `org.bouncycastle.crypto.modes.GCFBBlockCipher` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `org.bouncycastle.crypto.modes.CFBBlockCipher` `org.bouncycastle.crypto.modes.GCFBBlockCipher.a` @AccessFlag PRIVATE_FINAL;
  `org.bouncycastle.crypto.params.KeyParameter` `org.bouncycastle.crypto.modes.GCFBBlockCipher.b` @AccessFlag PRIVATE;
  `long` `org.bouncycastle.crypto.modes.GCFBBlockCipher.c` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.modes.GCFBBlockCipher.d` @AccessFlag PRIVATE;
}
global `byte`[] `@@org.bouncycastle.crypto.modes.GCFBBlockCipher.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/modes/GCFBBlockCipher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.modes.GCFBBlockCipher` v2 @kind this, `org.bouncycastle.crypto.BlockCipher` v3 @kind object) @signature `Lorg/bouncycastle/crypto/modes/GCFBBlockCipher;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.modes.GCFBBlockCipher` v2 @kind this) @signature `Lorg/bouncycastle/crypto/modes/GCFBBlockCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.modes.GCFBBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/modes/GCFBBlockCipher;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.modes.GCFBBlockCipher` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/modes/GCFBBlockCipher;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.modes.GCFBBlockCipher` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/bouncycastle/crypto/modes/GCFBBlockCipher;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.modes.GCFBBlockCipher` v2 @kind this) @signature `Lorg/bouncycastle/crypto/modes/GCFBBlockCipher;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
