record `org.bouncycastle.crypto.tls.TlsSRPKeyExchange` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.tls.AbstractTlsKeyExchange` @kind class {
  `java.math.BigInteger` `org.bouncycastle.crypto.tls.TlsSRPKeyExchange.B` @AccessFlag PROTECTED;
  `byte`[] `org.bouncycastle.crypto.tls.TlsSRPKeyExchange.identity` @AccessFlag PROTECTED;
  `byte`[] `org.bouncycastle.crypto.tls.TlsSRPKeyExchange.password` @AccessFlag PROTECTED;
  `byte`[] `org.bouncycastle.crypto.tls.TlsSRPKeyExchange.s` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.params.AsymmetricKeyParameter` `org.bouncycastle.crypto.tls.TlsSRPKeyExchange.serverPublicKey` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.agreement.srp.SRP6Client` `org.bouncycastle.crypto.tls.TlsSRPKeyExchange.srpClient` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.tls.TlsSigner` `org.bouncycastle.crypto.tls.TlsSRPKeyExchange.tlsSigner` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this, `int` v2 , `java.util.Vector` v3 @kind object, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.<init>:(ILjava/util/Vector;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `generateClientKeyExchange`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v4 @kind this, `java.io.OutputStream` v5 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.generateClientKeyExchange:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `generatePremasterSecret`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.generatePremasterSecret:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this, `org.bouncycastle.crypto.tls.TlsContext` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.init:(Lorg/bouncycastle/crypto/tls/TlsContext;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.Signer` `initVerifyer`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v2 @kind this, `org.bouncycastle.crypto.tls.TlsSigner` v3 @kind object, `org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm` v4 @kind object, `org.bouncycastle.crypto.tls.SecurityParameters` v5 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.initVerifyer:(Lorg/bouncycastle/crypto/tls/TlsSigner;Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;Lorg/bouncycastle/crypto/tls/SecurityParameters;)Lorg/bouncycastle/crypto/Signer;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processClientCredentials`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this, `org.bouncycastle.crypto.tls.TlsCredentials` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.processClientCredentials:(Lorg/bouncycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerCertificate`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v3 @kind this, `org.bouncycastle.crypto.tls.Certificate` v4 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.processServerCertificate:(Lorg/bouncycastle/crypto/tls/Certificate;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerKeyExchange`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v8 @kind this, `java.io.InputStream` v9 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.processServerKeyExchange:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `requiresServerKeyExchange`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.requiresServerKeyExchange:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `skipServerCredentials`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.skipServerCredentials:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `validateCertificateRequest`(`org.bouncycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this, `org.bouncycastle.crypto.tls.CertificateRequest` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPKeyExchange;.validateCertificateRequest:(Lorg/bouncycastle/crypto/tls/CertificateRequest;)V` @AccessFlag PUBLIC {

  # return;
}
