record `org.bouncycastle.crypto.tls.CertificateURL` @kind class @AccessFlag PUBLIC {
  `short` `org.bouncycastle.crypto.tls.CertificateURL.type` @AccessFlag PROTECTED;
  `java.util.Vector` `org.bouncycastle.crypto.tls.CertificateURL.urlAndHashList` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.CertificateURL` v1 @kind this, `short` v2 , `java.util.Vector` v3 @kind object) @signature `Lorg/bouncycastle/crypto/tls/CertificateURL;.<init>:(SLjava/util/Vector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.tls.CertificateURL` `parse`(`org.bouncycastle.crypto.tls.TlsContext` v4 @kind object, `java.io.InputStream` v5 @kind object) @signature `Lorg/bouncycastle/crypto/tls/CertificateURL;.parse:(Lorg/bouncycastle/crypto/tls/TlsContext;Ljava/io/InputStream;)Lorg/bouncycastle/crypto/tls/CertificateURL;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `encode`(`org.bouncycastle.crypto.tls.CertificateURL` v3 @kind this, `java.io.OutputStream` v4 @kind object) @signature `Lorg/bouncycastle/crypto/tls/CertificateURL;.encode:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `short` `getType`(`org.bouncycastle.crypto.tls.CertificateURL` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/CertificateURL;.getType:()S` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Vector` `getURLAndHashList`(`org.bouncycastle.crypto.tls.CertificateURL` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/CertificateURL;.getURLAndHashList:()Ljava/util/Vector;` @AccessFlag PUBLIC {

  # return;
}
