record `org.bouncycastle.crypto.tls.r` @kind class @AccessFlag  extends `org.bouncycastle.crypto.tls.TlsSession` @kind interface {
  `byte`[] `org.bouncycastle.crypto.tls.r.a` @AccessFlag FINAL;
  `org.bouncycastle.crypto.tls.SessionParameters` `org.bouncycastle.crypto.tls.r.b` @AccessFlag ;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.r` v2 @kind this, `byte`[] v3 @kind object, `org.bouncycastle.crypto.tls.SessionParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/tls/r;.<init>:([BLorg/bouncycastle/crypto/tls/SessionParameters;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.tls.SessionParameters` `exportSessionParameters`(`org.bouncycastle.crypto.tls.r` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/r;.exportSessionParameters:()Lorg/bouncycastle/crypto/tls/SessionParameters;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSessionID`(`org.bouncycastle.crypto.tls.r` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/r;.getSessionID:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `invalidate`(`org.bouncycastle.crypto.tls.r` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/r;.invalidate:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isResumable`(`org.bouncycastle.crypto.tls.r` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/r;.isResumable:()Z` @AccessFlag PUBLIC {

  # return;
}
