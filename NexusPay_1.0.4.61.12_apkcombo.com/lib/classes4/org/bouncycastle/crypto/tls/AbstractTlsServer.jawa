record `org.bouncycastle.crypto.tls.AbstractTlsServer` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.bouncycastle.crypto.tls.AbstractTlsPeer` @kind class, `org.bouncycastle.crypto.tls.TlsServer` @kind interface {
  `org.bouncycastle.crypto.tls.TlsCipherFactory` `org.bouncycastle.crypto.tls.AbstractTlsServer.cipherFactory` @AccessFlag PROTECTED;
  `short`[] `org.bouncycastle.crypto.tls.AbstractTlsServer.clientECPointFormats` @AccessFlag PROTECTED;
  `java.util.Hashtable` `org.bouncycastle.crypto.tls.AbstractTlsServer.clientExtensions` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.tls.ProtocolVersion` `org.bouncycastle.crypto.tls.AbstractTlsServer.clientVersion` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.tls.TlsServerContext` `org.bouncycastle.crypto.tls.AbstractTlsServer.context` @AccessFlag PROTECTED;
  `boolean` `org.bouncycastle.crypto.tls.AbstractTlsServer.eccCipherSuitesOffered` @AccessFlag PROTECTED;
  `short` `org.bouncycastle.crypto.tls.AbstractTlsServer.maxFragmentLengthOffered` @AccessFlag PROTECTED;
  `int`[] `org.bouncycastle.crypto.tls.AbstractTlsServer.namedCurves` @AccessFlag PROTECTED;
  `int`[] `org.bouncycastle.crypto.tls.AbstractTlsServer.offeredCipherSuites` @AccessFlag PROTECTED;
  `short`[] `org.bouncycastle.crypto.tls.AbstractTlsServer.offeredCompressionMethods` @AccessFlag PROTECTED;
  `int` `org.bouncycastle.crypto.tls.AbstractTlsServer.selectedCipherSuite` @AccessFlag PROTECTED;
  `short` `org.bouncycastle.crypto.tls.AbstractTlsServer.selectedCompressionMethod` @AccessFlag PROTECTED;
  `short`[] `org.bouncycastle.crypto.tls.AbstractTlsServer.serverECPointFormats` @AccessFlag PROTECTED;
  `java.util.Hashtable` `org.bouncycastle.crypto.tls.AbstractTlsServer.serverExtensions` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.tls.ProtocolVersion` `org.bouncycastle.crypto.tls.AbstractTlsServer.serverVersion` @AccessFlag PROTECTED;
  `java.util.Vector` `org.bouncycastle.crypto.tls.AbstractTlsServer.supportedSignatureAlgorithms` @AccessFlag PROTECTED;
  `boolean` `org.bouncycastle.crypto.tls.AbstractTlsServer.truncatedHMacOffered` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v0 @kind this, `org.bouncycastle.crypto.tls.TlsCipherFactory` v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.<init>:(Lorg/bouncycastle/crypto/tls/TlsCipherFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `allowTruncatedHMac`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.allowTruncatedHMac:()Z` @AccessFlag PROTECTED {

  # return;
}
procedure `java.util.Hashtable` `checkServerExtensions`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.checkServerExtensions:()Ljava/util/Hashtable;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.bouncycastle.crypto.tls.CertificateRequest` `getCertificateRequest`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getCertificateRequest:()Lorg/bouncycastle/crypto/tls/CertificateRequest;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.tls.CertificateStatus` `getCertificateStatus`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getCertificateStatus:()Lorg/bouncycastle/crypto/tls/CertificateStatus;` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getCipherSuites`() @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getCipherSuites:()[I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `org.bouncycastle.crypto.tls.TlsCompression` `getCompression`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getCompression:()Lorg/bouncycastle/crypto/tls/TlsCompression;` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[] `getCompressionMethods`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getCompressionMethods:()[S` @AccessFlag PROTECTED {

  # return;
}
procedure `org.bouncycastle.crypto.tls.ProtocolVersion` `getMaximumVersion`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getMaximumVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.bouncycastle.crypto.tls.ProtocolVersion` `getMinimumVersion`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getMinimumVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.bouncycastle.crypto.tls.NewSessionTicket` `getNewSessionTicket`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v4 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getNewSessionTicket:()Lorg/bouncycastle/crypto/tls/NewSessionTicket;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getSelectedCipherSuite`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v5 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getSelectedCipherSuite:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `short` `getSelectedCompressionMethod`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v4 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getSelectedCompressionMethod:()S` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Hashtable` `getServerExtensions`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getServerExtensions:()Ljava/util/Hashtable;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Vector` `getServerSupplementalData`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getServerSupplementalData:()Ljava/util/Vector;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.tls.ProtocolVersion` `getServerVersion`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v0 @kind this, `org.bouncycastle.crypto.tls.TlsServerContext` v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.init:(Lorg/bouncycastle/crypto/tls/TlsServerContext;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `notifyClientCertificate`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this, `org.bouncycastle.crypto.tls.Certificate` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.notifyClientCertificate:(Lorg/bouncycastle/crypto/tls/Certificate;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `notifyClientVersion`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v0 @kind this, `org.bouncycastle.crypto.tls.ProtocolVersion` v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.notifyClientVersion:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `notifyOfferedCipherSuites`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v0 @kind this, `int`[] v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.notifyOfferedCipherSuites:([I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `notifyOfferedCompressionMethods`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v0 @kind this, `short`[] v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.notifyOfferedCompressionMethods:([S)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processClientExtensions`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v2 @kind this, `java.util.Hashtable` v3 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.processClientExtensions:(Ljava/util/Hashtable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processClientSupplementalData`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v1 @kind this, `java.util.Vector` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.processClientSupplementalData:(Ljava/util/Vector;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `supportsClientECCCapabilities`(`org.bouncycastle.crypto.tls.AbstractTlsServer` v3 @kind this, `int`[] v4 @kind object, `short`[] v5 @kind object) @signature `Lorg/bouncycastle/crypto/tls/AbstractTlsServer;.supportsClientECCCapabilities:([I[S)Z` @AccessFlag PROTECTED {

  # return;
}
