record `org.bouncycastle.crypto.tls.TlsSRPUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.Integer` `@@org.bouncycastle.crypto.tls.TlsSRPUtils.EXT_SRP` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/tls/TlsSRPUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.TlsSRPUtils` v0 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addSRPExtension`(`java.util.Hashtable` v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPUtils;.addSRPExtension:(Ljava/util/Hashtable;[B)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `createSRPExtension`(`byte`[] v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPUtils;.createSRPExtension:([B)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `getSRPExtension`(`java.util.Hashtable` v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPUtils;.getSRPExtension:(Ljava/util/Hashtable;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `readSRPExtension`(`byte`[] v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsSRPUtils;.readSRPExtension:([B)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
