record `org.bouncycastle.crypto.tls.TlsAEADCipher` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.tls.TlsCipher` @kind interface {
  `org.bouncycastle.crypto.tls.TlsContext` `org.bouncycastle.crypto.tls.TlsAEADCipher.context` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.modes.AEADBlockCipher` `org.bouncycastle.crypto.tls.TlsAEADCipher.decryptCipher` @AccessFlag PROTECTED;
  `byte`[] `org.bouncycastle.crypto.tls.TlsAEADCipher.decryptImplicitNonce` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.modes.AEADBlockCipher` `org.bouncycastle.crypto.tls.TlsAEADCipher.encryptCipher` @AccessFlag PROTECTED;
  `byte`[] `org.bouncycastle.crypto.tls.TlsAEADCipher.encryptImplicitNonce` @AccessFlag PROTECTED;
  `int` `org.bouncycastle.crypto.tls.TlsAEADCipher.macSize` @AccessFlag PROTECTED;
  `int` `org.bouncycastle.crypto.tls.TlsAEADCipher.nonce_explicit_length` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.TlsAEADCipher` v10 @kind this, `org.bouncycastle.crypto.tls.TlsContext` v11 @kind object, `org.bouncycastle.crypto.modes.AEADBlockCipher` v12 @kind object, `org.bouncycastle.crypto.modes.AEADBlockCipher` v13 @kind object, `int` v14 , `int` v15 ) @signature `Lorg/bouncycastle/crypto/tls/TlsAEADCipher;.<init>:(Lorg/bouncycastle/crypto/tls/TlsContext;Lorg/bouncycastle/crypto/modes/AEADBlockCipher;Lorg/bouncycastle/crypto/modes/AEADBlockCipher;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `decodeCiphertext`(`org.bouncycastle.crypto.tls.TlsAEADCipher` v13 @kind this, `long` v14 , `short` v16 , `byte`[] v17 @kind object, `int` v18 , `int` v19 ) @signature `Lorg/bouncycastle/crypto/tls/TlsAEADCipher;.decodeCiphertext:(JS[BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `encodePlaintext`(`org.bouncycastle.crypto.tls.TlsAEADCipher` v11 @kind this, `long` v12 , `short` v14 , `byte`[] v15 @kind object, `int` v16 , `int` v17 ) @signature `Lorg/bouncycastle/crypto/tls/TlsAEADCipher;.encodePlaintext:(JS[BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getAdditionalData`(`org.bouncycastle.crypto.tls.TlsAEADCipher` v2 @kind this, `long` v3 , `short` v5 , `int` v6 ) @signature `Lorg/bouncycastle/crypto/tls/TlsAEADCipher;.getAdditionalData:(JSI)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `getPlaintextLimit`(`org.bouncycastle.crypto.tls.TlsAEADCipher` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/crypto/tls/TlsAEADCipher;.getPlaintextLimit:(I)I` @AccessFlag PUBLIC {

  # return;
}
