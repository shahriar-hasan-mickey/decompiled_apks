record `org.bouncycastle.crypto.tls.URLAndHash` @kind class @AccessFlag PUBLIC {
  `byte`[] `org.bouncycastle.crypto.tls.URLAndHash.sha1Hash` @AccessFlag PROTECTED;
  `java.lang.String` `org.bouncycastle.crypto.tls.URLAndHash.url` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.URLAndHash` v2 @kind this, `java.lang.String` v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/tls/URLAndHash;.<init>:(Ljava/lang/String;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.tls.URLAndHash` `parse`(`org.bouncycastle.crypto.tls.TlsContext` v5 @kind object, `java.io.InputStream` v6 @kind object) @signature `Lorg/bouncycastle/crypto/tls/URLAndHash;.parse:(Lorg/bouncycastle/crypto/tls/TlsContext;Ljava/io/InputStream;)Lorg/bouncycastle/crypto/tls/URLAndHash;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `encode`(`org.bouncycastle.crypto.tls.URLAndHash` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/URLAndHash;.encode:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSHA1Hash`(`org.bouncycastle.crypto.tls.URLAndHash` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/URLAndHash;.getSHA1Hash:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getURL`(`org.bouncycastle.crypto.tls.URLAndHash` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/URLAndHash;.getURL:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
