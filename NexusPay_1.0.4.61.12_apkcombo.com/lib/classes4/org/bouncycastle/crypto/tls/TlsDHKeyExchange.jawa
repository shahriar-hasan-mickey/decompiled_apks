record `org.bouncycastle.crypto.tls.TlsDHKeyExchange` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.tls.AbstractTlsKeyExchange` @kind class {
  `org.bouncycastle.crypto.tls.TlsAgreementCredentials` `org.bouncycastle.crypto.tls.TlsDHKeyExchange.agreementCredentials` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.params.DHPrivateKeyParameters` `org.bouncycastle.crypto.tls.TlsDHKeyExchange.dhAgreeClientPrivateKey` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.params.DHPublicKeyParameters` `org.bouncycastle.crypto.tls.TlsDHKeyExchange.dhAgreeClientPublicKey` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.params.DHPrivateKeyParameters` `org.bouncycastle.crypto.tls.TlsDHKeyExchange.dhAgreeServerPrivateKey` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.params.DHPublicKeyParameters` `org.bouncycastle.crypto.tls.TlsDHKeyExchange.dhAgreeServerPublicKey` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.params.DHParameters` `org.bouncycastle.crypto.tls.TlsDHKeyExchange.dhParameters` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.params.AsymmetricKeyParameter` `org.bouncycastle.crypto.tls.TlsDHKeyExchange.serverPublicKey` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.tls.TlsSigner` `org.bouncycastle.crypto.tls.TlsDHKeyExchange.tlsSigner` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@org.bouncycastle.crypto.tls.TlsDHKeyExchange.ONE` @AccessFlag PROTECTED_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.tls.TlsDHKeyExchange.TWO` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v0 @kind this, `int` v1 , `java.util.Vector` v2 @kind object, `org.bouncycastle.crypto.params.DHParameters` v3 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.<init>:(ILjava/util/Vector;Lorg/bouncycastle/crypto/params/DHParameters;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `generateClientKeyExchange`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v2 @kind this, `java.io.OutputStream` v3 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.generateClientKeyExchange:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `generatePremasterSecret`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.generatePremasterSecret:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v1 @kind this, `org.bouncycastle.crypto.tls.TlsContext` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.init:(Lorg/bouncycastle/crypto/tls/TlsContext;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processClientCredentials`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v1 @kind this, `org.bouncycastle.crypto.tls.TlsCredentials` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.processClientCredentials:(Lorg/bouncycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerCertificate`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v4 @kind this, `org.bouncycastle.crypto.tls.Certificate` v5 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.processServerCertificate:(Lorg/bouncycastle/crypto/tls/Certificate;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `requiresServerKeyExchange`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.requiresServerKeyExchange:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `skipServerCredentials`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v2 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.skipServerCredentials:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `validateCertificateRequest`(`org.bouncycastle.crypto.tls.TlsDHKeyExchange` v3 @kind this, `org.bouncycastle.crypto.tls.CertificateRequest` v4 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHKeyExchange;.validateCertificateRequest:(Lorg/bouncycastle/crypto/tls/CertificateRequest;)V` @AccessFlag PUBLIC {

  # return;
}
