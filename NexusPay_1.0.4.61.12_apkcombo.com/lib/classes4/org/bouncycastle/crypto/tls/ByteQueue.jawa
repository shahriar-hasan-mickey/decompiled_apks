record `org.bouncycastle.crypto.tls.ByteQueue` @kind class @AccessFlag PUBLIC {
  `byte`[] `org.bouncycastle.crypto.tls.ByteQueue.a` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.tls.ByteQueue.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.tls.ByteQueue.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.ByteQueue` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.ByteQueue` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `nextTwoPow`(`int` v1 ) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.nextTwoPow:(I)I` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `void` `addData`(`org.bouncycastle.crypto.tls.ByteQueue` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.addData:([BII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `read`(`org.bouncycastle.crypto.tls.ByteQueue` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.read:([BIII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeData`(`org.bouncycastle.crypto.tls.ByteQueue` v3 @kind this, `int` v4 ) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.removeData:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeData`(`org.bouncycastle.crypto.tls.ByteQueue` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.removeData:([BIII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `removeData`(`org.bouncycastle.crypto.tls.ByteQueue` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.removeData:(II)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`org.bouncycastle.crypto.tls.ByteQueue` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/ByteQueue;.size:()I` @AccessFlag PUBLIC {

  # return;
}
