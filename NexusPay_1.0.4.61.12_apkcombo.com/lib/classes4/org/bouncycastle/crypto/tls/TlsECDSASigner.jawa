record `org.bouncycastle.crypto.tls.TlsECDSASigner` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.tls.TlsDSASigner` @kind class {
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.TlsECDSASigner` v0 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsECDSASigner;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.DSA` `createDSAImpl`(`org.bouncycastle.crypto.tls.TlsECDSASigner` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsECDSASigner;.createDSAImpl:()Lorg/bouncycastle/crypto/DSA;` @AccessFlag PROTECTED {

  # return;
}
procedure `short` `getSignatureAlgorithm`(`org.bouncycastle.crypto.tls.TlsECDSASigner` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsECDSASigner;.getSignatureAlgorithm:()S` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isValidPublicKey`(`org.bouncycastle.crypto.tls.TlsECDSASigner` v0 @kind this, `org.bouncycastle.crypto.params.AsymmetricKeyParameter` v1 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsECDSASigner;.isValidPublicKey:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)Z` @AccessFlag PUBLIC {

  # return;
}
