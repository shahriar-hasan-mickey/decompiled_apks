record `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` @kind class @AccessFlag PUBLIC {
  `org.bouncycastle.crypto.tls.TlsServer` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.a` @AccessFlag ;
  `org.bouncycastle.crypto.tls.q` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.b` @AccessFlag ;
  `int`[] `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.c` @AccessFlag ;
  `short`[] `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.d` @AccessFlag ;
  `java.util.Hashtable` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.e` @AccessFlag ;
  `int` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.f` @AccessFlag ;
  `short` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.g` @AccessFlag ;
  `boolean` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.h` @AccessFlag ;
  `short` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.i` @AccessFlag ;
  `boolean` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.j` @AccessFlag ;
  `boolean` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.k` @AccessFlag ;
  `java.util.Hashtable` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.l` @AccessFlag ;
  `org.bouncycastle.crypto.tls.TlsKeyExchange` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.m` @AccessFlag ;
  `org.bouncycastle.crypto.tls.TlsCredentials` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.n` @AccessFlag ;
  `org.bouncycastle.crypto.tls.CertificateRequest` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.o` @AccessFlag ;
  `short` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.p` @AccessFlag ;
  `org.bouncycastle.crypto.tls.Certificate` `org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState.q` @AccessFlag ;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v3 @kind this) @signature `Lorg/bouncycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
