record `org.bouncycastle.crypto.tls.TlsDHEKeyExchange` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.tls.TlsDHKeyExchange` @kind class {
  `org.bouncycastle.crypto.tls.TlsSignerCredentials` `org.bouncycastle.crypto.tls.TlsDHEKeyExchange.serverCredentials` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.TlsDHEKeyExchange` v0 @kind this, `int` v1 , `java.util.Vector` v2 @kind object, `org.bouncycastle.crypto.params.DHParameters` v3 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHEKeyExchange;.<init>:(ILjava/util/Vector;Lorg/bouncycastle/crypto/params/DHParameters;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `generateServerKeyExchange`(`org.bouncycastle.crypto.tls.TlsDHEKeyExchange` v7 @kind this) @signature `Lorg/bouncycastle/crypto/tls/TlsDHEKeyExchange;.generateServerKeyExchange:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.Signer` `initVerifyer`(`org.bouncycastle.crypto.tls.TlsDHEKeyExchange` v2 @kind this, `org.bouncycastle.crypto.tls.TlsSigner` v3 @kind object, `org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm` v4 @kind object, `org.bouncycastle.crypto.tls.SecurityParameters` v5 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHEKeyExchange;.initVerifyer:(Lorg/bouncycastle/crypto/tls/TlsSigner;Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;Lorg/bouncycastle/crypto/tls/SecurityParameters;)Lorg/bouncycastle/crypto/Signer;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processServerCredentials`(`org.bouncycastle.crypto.tls.TlsDHEKeyExchange` v1 @kind this, `org.bouncycastle.crypto.tls.TlsCredentials` v2 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHEKeyExchange;.processServerCredentials:(Lorg/bouncycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerKeyExchange`(`org.bouncycastle.crypto.tls.TlsDHEKeyExchange` v5 @kind this, `java.io.InputStream` v6 @kind object) @signature `Lorg/bouncycastle/crypto/tls/TlsDHEKeyExchange;.processServerKeyExchange:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {

  # return;
}
