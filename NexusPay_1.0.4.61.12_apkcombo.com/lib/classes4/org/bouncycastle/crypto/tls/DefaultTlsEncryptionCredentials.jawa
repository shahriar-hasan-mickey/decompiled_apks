record `org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.tls.AbstractTlsEncryptionCredentials` @kind class {
  `org.bouncycastle.crypto.tls.Certificate` `org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials.certificate` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.tls.TlsContext` `org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials.context` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.params.AsymmetricKeyParameter` `org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials.privateKey` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials` v1 @kind this, `org.bouncycastle.crypto.tls.TlsContext` v2 @kind object, `org.bouncycastle.crypto.tls.Certificate` v3 @kind object, `org.bouncycastle.crypto.params.AsymmetricKeyParameter` v4 @kind object) @signature `Lorg/bouncycastle/crypto/tls/DefaultTlsEncryptionCredentials;.<init>:(Lorg/bouncycastle/crypto/tls/TlsContext;Lorg/bouncycastle/crypto/tls/Certificate;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `decryptPreMasterSecret`(`org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials` v4 @kind this, `byte`[] v5 @kind object) @signature `Lorg/bouncycastle/crypto/tls/DefaultTlsEncryptionCredentials;.decryptPreMasterSecret:([B)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.tls.Certificate` `getCertificate`(`org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials` v1 @kind this) @signature `Lorg/bouncycastle/crypto/tls/DefaultTlsEncryptionCredentials;.getCertificate:()Lorg/bouncycastle/crypto/tls/Certificate;` @AccessFlag PUBLIC {

  # return;
}
