record `org.bouncycastle.crypto.StreamCipher` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.lang.String` `getAlgorithmName`() @signature `Lorg/bouncycastle/crypto/StreamCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `init`(`boolean` v0 , `org.bouncycastle.crypto.CipherParameters` v1 @kind object) @signature `Lorg/bouncycastle/crypto/StreamCipher;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processBytes`(`byte`[] v0 @kind object, `int` v1 , `int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/bouncycastle/crypto/StreamCipher;.processBytes:([BII[BI)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `reset`() @signature `Lorg/bouncycastle/crypto/StreamCipher;.reset:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `returnByte`(`byte` v0 ) @signature `Lorg/bouncycastle/crypto/StreamCipher;.returnByte:(B)B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
