record `org.bouncycastle.crypto.signers.ECNRSigner` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.DSA` @kind interface {
  `boolean` `org.bouncycastle.crypto.signers.ECNRSigner.a` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.params.ECKeyParameters` `org.bouncycastle.crypto.signers.ECNRSigner.b` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.bouncycastle.crypto.signers.ECNRSigner.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.signers.ECNRSigner` v0 @kind this) @signature `Lorg/bouncycastle/crypto/signers/ECNRSigner;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger`[] `generateSignature`(`org.bouncycastle.crypto.signers.ECNRSigner` v7 @kind this, `byte`[] v8 @kind object) @signature `Lorg/bouncycastle/crypto/signers/ECNRSigner;.generateSignature:([B)[Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.signers.ECNRSigner` v0 @kind this, `boolean` v1 , `org.bouncycastle.crypto.CipherParameters` v2 @kind object) @signature `Lorg/bouncycastle/crypto/signers/ECNRSigner;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `verifySignature`(`org.bouncycastle.crypto.signers.ECNRSigner` v5 @kind this, `byte`[] v6 @kind object, `java.math.BigInteger` v7 @kind object, `java.math.BigInteger` v8 @kind object) @signature `Lorg/bouncycastle/crypto/signers/ECNRSigner;.verifySignature:([BLjava/math/BigInteger;Ljava/math/BigInteger;)Z` @AccessFlag PUBLIC {

  # return;
}
