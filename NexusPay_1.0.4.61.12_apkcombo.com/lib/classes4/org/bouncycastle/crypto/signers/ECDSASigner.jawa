record `org.bouncycastle.crypto.signers.ECDSASigner` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.math.ec.ECConstants` @kind interface, `org.bouncycastle.crypto.DSA` @kind interface {
  `org.bouncycastle.crypto.signers.DSAKCalculator` `org.bouncycastle.crypto.signers.ECDSASigner.a` @AccessFlag PRIVATE_FINAL;
  `org.bouncycastle.crypto.params.ECKeyParameters` `org.bouncycastle.crypto.signers.ECDSASigner.b` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.bouncycastle.crypto.signers.ECDSASigner.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.signers.ECDSASigner` v1 @kind this) @signature `Lorg/bouncycastle/crypto/signers/ECDSASigner;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.signers.ECDSASigner` v0 @kind this, `org.bouncycastle.crypto.signers.DSAKCalculator` v1 @kind object) @signature `Lorg/bouncycastle/crypto/signers/ECDSASigner;.<init>:(Lorg/bouncycastle/crypto/signers/DSAKCalculator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `a`(`org.bouncycastle.crypto.signers.ECDSASigner` v3 @kind this, `java.math.BigInteger` v4 @kind object, `byte`[] v5 @kind object) @signature `Lorg/bouncycastle/crypto/signers/ECDSASigner;.a:(Ljava/math/BigInteger;[B)Ljava/math/BigInteger;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.math.BigInteger`[] `generateSignature`(`org.bouncycastle.crypto.signers.ECDSASigner` v4 @kind this, `byte`[] v5 @kind object) @signature `Lorg/bouncycastle/crypto/signers/ECDSASigner;.generateSignature:([B)[Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.signers.ECDSASigner` v0 @kind this, `boolean` v1 , `org.bouncycastle.crypto.CipherParameters` v2 @kind object) @signature `Lorg/bouncycastle/crypto/signers/ECDSASigner;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `verifySignature`(`org.bouncycastle.crypto.signers.ECDSASigner` v4 @kind this, `byte`[] v5 @kind object, `java.math.BigInteger` v6 @kind object, `java.math.BigInteger` v7 @kind object) @signature `Lorg/bouncycastle/crypto/signers/ECDSASigner;.verifySignature:([BLjava/math/BigInteger;Ljava/math/BigInteger;)Z` @AccessFlag PUBLIC {

  # return;
}
