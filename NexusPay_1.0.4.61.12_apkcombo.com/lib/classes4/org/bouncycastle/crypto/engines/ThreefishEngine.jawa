record `org.bouncycastle.crypto.engines.ThreefishEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `int` `org.bouncycastle.crypto.engines.ThreefishEngine.a` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.ThreefishEngine.b` @AccessFlag PRIVATE;
  `long`[] `org.bouncycastle.crypto.engines.ThreefishEngine.c` @AccessFlag PRIVATE;
  `long`[] `org.bouncycastle.crypto.engines.ThreefishEngine.d` @AccessFlag PRIVATE;
  `long`[] `org.bouncycastle.crypto.engines.ThreefishEngine.e` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.engines.ThreefishEngine$d` `org.bouncycastle.crypto.engines.ThreefishEngine.f` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.ThreefishEngine.g` @AccessFlag PRIVATE;
}
global `int` `@@org.bouncycastle.crypto.engines.ThreefishEngine.BLOCKSIZE_1024` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.bouncycastle.crypto.engines.ThreefishEngine.BLOCKSIZE_256` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.bouncycastle.crypto.engines.ThreefishEngine.BLOCKSIZE_512` @AccessFlag PUBLIC_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.ThreefishEngine.h` @AccessFlag PRIVATE_STATIC;
global `int`[] `@@org.bouncycastle.crypto.engines.ThreefishEngine.i` @AccessFlag PRIVATE_STATIC;
global `int`[] `@@org.bouncycastle.crypto.engines.ThreefishEngine.j` @AccessFlag PRIVATE_STATIC;
global `int`[] `@@org.bouncycastle.crypto.engines.ThreefishEngine.k` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.ThreefishEngine` v3 @kind this, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int`[] `a`() @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.a:()[I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int`[] `b`() @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.b:()[I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `long` `bytesToWord`(`byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.bytesToWord:([BI)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `c`() @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.c:()[I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int`[] `d`() @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.d:()[I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `long` `e`(`long` v2 , `int` v4 , `long` v5 ) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.e:(JIJ)J` @AccessFlag STATIC {

  # return;
}
procedure `void` `f`(`org.bouncycastle.crypto.engines.ThreefishEngine` v7 @kind this, `long`[] v8 @kind object) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.f:([J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`org.bouncycastle.crypto.engines.ThreefishEngine` v8 @kind this, `long`[] v9 @kind object) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.g:([J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `h`(`long` v0 , `int` v2 , `long` v3 ) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.h:(JIJ)J` @AccessFlag STATIC {

  # return;
}
procedure `void` `wordToBytes`(`long` v3 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.wordToBytes:(J[BI)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.ThreefishEngine` v2 @kind this) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.ThreefishEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.ThreefishEngine` v8 @kind this, `boolean` v9 , `org.bouncycastle.crypto.CipherParameters` v10 @kind object) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.ThreefishEngine` v0 @kind this, `boolean` v1 , `long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.init:(Z[J[J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.ThreefishEngine` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.ThreefishEngine` v6 @kind this, `long`[] v7 @kind object, `long`[] v8 @kind object) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.processBlock:([J[J)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.ThreefishEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/ThreefishEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
