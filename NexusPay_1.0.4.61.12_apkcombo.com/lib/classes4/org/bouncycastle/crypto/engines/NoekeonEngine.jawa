record `org.bouncycastle.crypto.engines.NoekeonEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `int`[] `org.bouncycastle.crypto.engines.NoekeonEngine.a` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.NoekeonEngine.b` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.NoekeonEngine.c` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.NoekeonEngine.d` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.NoekeonEngine.e` @AccessFlag PRIVATE;
}
global `int`[] `@@org.bouncycastle.crypto.engines.NoekeonEngine.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.NoekeonEngine.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.NoekeonEngine` v2 @kind this) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`org.bouncycastle.crypto.engines.NoekeonEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.a:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.engines.NoekeonEngine` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.b:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `c`(`org.bouncycastle.crypto.engines.NoekeonEngine` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.c:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`org.bouncycastle.crypto.engines.NoekeonEngine` v7 @kind this, `int`[] v8 @kind object) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.d:([I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`org.bouncycastle.crypto.engines.NoekeonEngine` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.e:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `f`(`org.bouncycastle.crypto.engines.NoekeonEngine` v3 @kind this, `int`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.f:([I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`org.bouncycastle.crypto.engines.NoekeonEngine` v3 @kind this, `int`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.g:([I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `h`(`org.bouncycastle.crypto.engines.NoekeonEngine` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.h:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `i`(`org.bouncycastle.crypto.engines.NoekeonEngine` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.i:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `j`(`org.bouncycastle.crypto.engines.NoekeonEngine` v9 @kind this, `int`[] v10 @kind object, `int`[] v11 @kind object) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.j:([I[I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.NoekeonEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.NoekeonEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.NoekeonEngine` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.NoekeonEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.NoekeonEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/NoekeonEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
