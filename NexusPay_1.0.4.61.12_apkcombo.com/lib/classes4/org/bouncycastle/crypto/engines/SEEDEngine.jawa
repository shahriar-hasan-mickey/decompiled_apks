record `org.bouncycastle.crypto.engines.SEEDEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `int`[] `org.bouncycastle.crypto.engines.SEEDEngine.a` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.SEEDEngine.b` @AccessFlag PRIVATE;
}
global `int`[] `@@org.bouncycastle.crypto.engines.SEEDEngine.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.SEEDEngine.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.SEEDEngine.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.SEEDEngine.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.SEEDEngine.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.SEEDEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `long` `a`(`org.bouncycastle.crypto.engines.SEEDEngine` v3 @kind this, `int` v4 , `int` v5 , `long` v6 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.a:(IIJ)J` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.engines.SEEDEngine` v3 @kind this, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.b:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `c`(`org.bouncycastle.crypto.engines.SEEDEngine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.c:([BI)J` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `d`(`org.bouncycastle.crypto.engines.SEEDEngine` v12 @kind this, `byte`[] v13 @kind object) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.d:([B)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `e`(`org.bouncycastle.crypto.engines.SEEDEngine` v1 @kind this, `long` v2 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.e:(J)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `f`(`org.bouncycastle.crypto.engines.SEEDEngine` v0 @kind this, `long` v1 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.f:(J)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`org.bouncycastle.crypto.engines.SEEDEngine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `long` v8 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.g:([BIJ)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `h`(`org.bouncycastle.crypto.engines.SEEDEngine` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.h:(IIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `i`(`org.bouncycastle.crypto.engines.SEEDEngine` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.i:(IIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `j`(`org.bouncycastle.crypto.engines.SEEDEngine` v3 @kind this, `long` v4 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.j:(J)J` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `k`(`org.bouncycastle.crypto.engines.SEEDEngine` v3 @kind this, `long` v4 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.k:(J)J` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.SEEDEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.SEEDEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.SEEDEngine` v0 @kind this, `boolean` v1 , `org.bouncycastle.crypto.CipherParameters` v2 @kind object) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.SEEDEngine` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `byte`[] v12 @kind object, `int` v13 ) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.SEEDEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/SEEDEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
