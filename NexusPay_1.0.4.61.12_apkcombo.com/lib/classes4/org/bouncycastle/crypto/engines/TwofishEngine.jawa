record `org.bouncycastle.crypto.engines.TwofishEngine` @kind class @AccessFlag PUBLIC_FINAL extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `boolean` `org.bouncycastle.crypto.engines.TwofishEngine.a` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.TwofishEngine.b` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.TwofishEngine.c` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.TwofishEngine.d` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.TwofishEngine.e` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.TwofishEngine.f` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.TwofishEngine.g` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.TwofishEngine.h` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.engines.TwofishEngine.i` @AccessFlag PRIVATE;
}
global `byte`[][] `@@org.bouncycastle.crypto.engines.TwofishEngine.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.TwofishEngine` v10 @kind this) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.bouncycastle.crypto.engines.TwofishEngine` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.a:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.engines.TwofishEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.b:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `c`(`org.bouncycastle.crypto.engines.TwofishEngine` v11 @kind this, `int` v12 , `int`[] v13 @kind object) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.c:(I[I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `d`(`org.bouncycastle.crypto.engines.TwofishEngine` v3 @kind this, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.d:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `e`(`org.bouncycastle.crypto.engines.TwofishEngine` v3 @kind this, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.e:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `f`(`org.bouncycastle.crypto.engines.TwofishEngine` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.f:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `g`(`org.bouncycastle.crypto.engines.TwofishEngine` v3 @kind this, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.g:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `h`(`org.bouncycastle.crypto.engines.TwofishEngine` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.h:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `i`(`org.bouncycastle.crypto.engines.TwofishEngine` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.i:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `j`(`org.bouncycastle.crypto.engines.TwofishEngine` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.j:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `k`(`org.bouncycastle.crypto.engines.TwofishEngine` v5 @kind this, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.k:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `l`(`org.bouncycastle.crypto.engines.TwofishEngine` v0 @kind this, `int` v1 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.l:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `m`(`org.bouncycastle.crypto.engines.TwofishEngine` v0 @kind this, `int` v1 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.m:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `n`(`org.bouncycastle.crypto.engines.TwofishEngine` v0 @kind this, `int` v1 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.n:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `o`(`org.bouncycastle.crypto.engines.TwofishEngine` v0 @kind this, `int` v1 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.o:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `p`(`org.bouncycastle.crypto.engines.TwofishEngine` v10 @kind this, `byte`[] v11 @kind object, `int` v12 , `byte`[] v13 @kind object, `int` v14 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.p:([BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `q`(`org.bouncycastle.crypto.engines.TwofishEngine` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `byte`[] v14 @kind object, `int` v15 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.q:([BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `r`(`org.bouncycastle.crypto.engines.TwofishEngine` v18 @kind this, `byte`[] v19 @kind object) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.r:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.TwofishEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.TwofishEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.TwofishEngine` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.TwofishEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.TwofishEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/TwofishEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
