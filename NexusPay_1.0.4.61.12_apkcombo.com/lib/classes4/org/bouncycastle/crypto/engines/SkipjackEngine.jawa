record `org.bouncycastle.crypto.engines.SkipjackEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `int`[] `org.bouncycastle.crypto.engines.SkipjackEngine.a` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.SkipjackEngine.b` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.SkipjackEngine.c` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.SkipjackEngine.d` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.SkipjackEngine.e` @AccessFlag PRIVATE;
}
global `short`[] `@@org.bouncycastle.crypto.engines.SkipjackEngine.f` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.SkipjackEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`org.bouncycastle.crypto.engines.SkipjackEngine` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.a:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.engines.SkipjackEngine` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.b:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `decryptBlock`(`org.bouncycastle.crypto.engines.SkipjackEngine` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `byte`[] v12 @kind object, `int` v13 ) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.decryptBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `encryptBlock`(`org.bouncycastle.crypto.engines.SkipjackEngine` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `byte`[] v12 @kind object, `int` v13 ) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.encryptBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.SkipjackEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.SkipjackEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.SkipjackEngine` v4 @kind this, `boolean` v5 , `org.bouncycastle.crypto.CipherParameters` v6 @kind object) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.SkipjackEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.SkipjackEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/SkipjackEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
