record `org.bouncycastle.crypto.engines.DESEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `int`[] `org.bouncycastle.crypto.engines.DESEngine.a` @AccessFlag PRIVATE;
}
global `int` `@@org.bouncycastle.crypto.engines.DESEngine.BLOCK_SIZE` @AccessFlag PROTECTED_STATIC_FINAL;
global `short`[] `@@org.bouncycastle.crypto.engines.DESEngine.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.bouncycastle.crypto.engines.DESEngine.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.bouncycastle.crypto.engines.DESEngine.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.bouncycastle.crypto.engines.DESEngine.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.DESEngine.n` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.DESEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `desFunc`(`org.bouncycastle.crypto.engines.DESEngine` v20 @kind this, `int`[] v21 @kind object, `byte`[] v22 @kind object, `int` v23 , `byte`[] v24 @kind object, `int` v25 ) @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.desFunc:([I[BI[BI)V` @AccessFlag PROTECTED {

  # return;
}
procedure `int`[] `generateWorkingKey`(`org.bouncycastle.crypto.engines.DESEngine` v12 @kind this, `boolean` v13 , `byte`[] v14 @kind object) @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.generateWorkingKey:(Z[B)[I` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.DESEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.DESEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.DESEngine` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.DESEngine` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.DESEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
