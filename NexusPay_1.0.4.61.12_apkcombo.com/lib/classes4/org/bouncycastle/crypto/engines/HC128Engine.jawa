record `org.bouncycastle.crypto.engines.HC128Engine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.StreamCipher` @kind interface {
  `int`[] `org.bouncycastle.crypto.engines.HC128Engine.a` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.HC128Engine.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.HC128Engine.c` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.engines.HC128Engine.d` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.engines.HC128Engine.e` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.HC128Engine.f` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.engines.HC128Engine.g` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.HC128Engine.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.HC128Engine` v2 @kind this) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.a:(II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `b`(`int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.b:(I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `c`(`int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.c:(I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `d`(`org.bouncycastle.crypto.engines.HC128Engine` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.d:(III)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `e`(`org.bouncycastle.crypto.engines.HC128Engine` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.e:(III)I` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `f`(`org.bouncycastle.crypto.engines.HC128Engine` v6 @kind this) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.f:()B` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `g`(`org.bouncycastle.crypto.engines.HC128Engine` v2 @kind this, `int` v3 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.g:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `h`(`org.bouncycastle.crypto.engines.HC128Engine` v2 @kind this, `int` v3 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.h:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `i`(`org.bouncycastle.crypto.engines.HC128Engine` v11 @kind this) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.i:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `j`(`int` v0 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.j:(I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `k`(`int` v0 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.k:(I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `l`(`int` v1 , `int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.l:(II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `m`(`int` v1 , `int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.m:(II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `n`(`org.bouncycastle.crypto.engines.HC128Engine` v8 @kind this) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.n:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.HC128Engine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.HC128Engine` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processBytes`(`org.bouncycastle.crypto.engines.HC128Engine` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.processBytes:([BII[BI)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.HC128Engine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `returnByte`(`org.bouncycastle.crypto.engines.HC128Engine` v1 @kind this, `byte` v2 ) @signature `Lorg/bouncycastle/crypto/engines/HC128Engine;.returnByte:(B)B` @AccessFlag PUBLIC {

  # return;
}
