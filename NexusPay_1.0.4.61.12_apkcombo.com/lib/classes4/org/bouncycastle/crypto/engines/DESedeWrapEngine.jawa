record `org.bouncycastle.crypto.engines.DESedeWrapEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.Wrapper` @kind interface {
  `org.bouncycastle.crypto.modes.CBCBlockCipher` `org.bouncycastle.crypto.engines.DESedeWrapEngine.a` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.params.KeyParameter` `org.bouncycastle.crypto.engines.DESedeWrapEngine.b` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.params.ParametersWithIV` `org.bouncycastle.crypto.engines.DESedeWrapEngine.c` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.engines.DESedeWrapEngine.d` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.DESedeWrapEngine.e` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.Digest` `org.bouncycastle.crypto.engines.DESedeWrapEngine.f` @AccessFlag ;
  `byte`[] `org.bouncycastle.crypto.engines.DESedeWrapEngine.g` @AccessFlag ;
}
global `byte`[] `@@org.bouncycastle.crypto.engines.DESedeWrapEngine.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.DESedeWrapEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`org.bouncycastle.crypto.engines.DESedeWrapEngine` v5 @kind this, `byte`[] v6 @kind object) @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.a:([B)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `b`(`org.bouncycastle.crypto.engines.DESedeWrapEngine` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.b:([B[B)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `c`(`byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.c:([B)[B` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.DESedeWrapEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.DESedeWrapEngine` v3 @kind this, `boolean` v4 , `org.bouncycastle.crypto.CipherParameters` v5 @kind object) @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `unwrap`(`org.bouncycastle.crypto.engines.DESedeWrapEngine` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.unwrap:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `wrap`(`org.bouncycastle.crypto.engines.DESedeWrapEngine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/bouncycastle/crypto/engines/DESedeWrapEngine;.wrap:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
