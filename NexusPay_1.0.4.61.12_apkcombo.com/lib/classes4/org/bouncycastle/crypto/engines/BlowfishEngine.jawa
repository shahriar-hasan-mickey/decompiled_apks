record `org.bouncycastle.crypto.engines.BlowfishEngine` @kind class @AccessFlag PUBLIC_FINAL extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `int`[] `org.bouncycastle.crypto.engines.BlowfishEngine.a` @AccessFlag PRIVATE_FINAL;
  `int`[] `org.bouncycastle.crypto.engines.BlowfishEngine.b` @AccessFlag PRIVATE_FINAL;
  `int`[] `org.bouncycastle.crypto.engines.BlowfishEngine.c` @AccessFlag PRIVATE_FINAL;
  `int`[] `org.bouncycastle.crypto.engines.BlowfishEngine.d` @AccessFlag PRIVATE_FINAL;
  `int`[] `org.bouncycastle.crypto.engines.BlowfishEngine.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.bouncycastle.crypto.engines.BlowfishEngine.f` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.engines.BlowfishEngine.g` @AccessFlag PRIVATE;
}
global `int`[] `@@org.bouncycastle.crypto.engines.BlowfishEngine.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.BlowfishEngine.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.BlowfishEngine.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.BlowfishEngine.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.BlowfishEngine.l` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.BlowfishEngine` v2 @kind this) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.bouncycastle.crypto.engines.BlowfishEngine` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.a:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.engines.BlowfishEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.b:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `c`(`org.bouncycastle.crypto.engines.BlowfishEngine` v3 @kind this, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.c:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`org.bouncycastle.crypto.engines.BlowfishEngine` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.d:([BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`org.bouncycastle.crypto.engines.BlowfishEngine` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.e:([BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `f`(`org.bouncycastle.crypto.engines.BlowfishEngine` v8 @kind this, `int` v9 , `int` v10 , `int`[] v11 @kind object) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.f:(II[I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`org.bouncycastle.crypto.engines.BlowfishEngine` v9 @kind this, `byte`[] v10 @kind object) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.g:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.BlowfishEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.BlowfishEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.BlowfishEngine` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.BlowfishEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.BlowfishEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/BlowfishEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
