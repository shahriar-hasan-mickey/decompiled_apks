record `org.bouncycastle.crypto.engines.Grain128Engine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.StreamCipher` @kind interface {
  `byte`[] `org.bouncycastle.crypto.engines.Grain128Engine.a` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.engines.Grain128Engine.b` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.engines.Grain128Engine.c` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.Grain128Engine.d` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.Grain128Engine.e` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.Grain128Engine.f` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.Grain128Engine.g` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.Grain128Engine.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.Grain128Engine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte` `a`(`org.bouncycastle.crypto.engines.Grain128Engine` v3 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.a:()B` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.engines.Grain128Engine` v22 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.b:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `c`(`org.bouncycastle.crypto.engines.Grain128Engine` v8 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.c:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `d`(`org.bouncycastle.crypto.engines.Grain128Engine` v22 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.d:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`org.bouncycastle.crypto.engines.Grain128Engine` v5 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.e:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `f`(`org.bouncycastle.crypto.engines.Grain128Engine` v5 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.f:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`org.bouncycastle.crypto.engines.Grain128Engine` v9 @kind this, `byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.g:([B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `h`(`org.bouncycastle.crypto.engines.Grain128Engine` v3 @kind this, `int`[] v4 @kind object, `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.h:([II)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.Grain128Engine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.Grain128Engine` v3 @kind this, `boolean` v4 , `org.bouncycastle.crypto.CipherParameters` v5 @kind object) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processBytes`(`org.bouncycastle.crypto.engines.Grain128Engine` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.processBytes:([BII[BI)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.Grain128Engine` v2 @kind this) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `returnByte`(`org.bouncycastle.crypto.engines.Grain128Engine` v2 @kind this, `byte` v3 ) @signature `Lorg/bouncycastle/crypto/engines/Grain128Engine;.returnByte:(B)B` @AccessFlag PUBLIC {

  # return;
}
