record `org.bouncycastle.crypto.engines.TEAEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `int` `org.bouncycastle.crypto.engines.TEAEngine.a` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.TEAEngine.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.TEAEngine.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.engines.TEAEngine.d` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.TEAEngine.e` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.TEAEngine.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.TEAEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`org.bouncycastle.crypto.engines.TEAEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.a:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.engines.TEAEngine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.b:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `c`(`org.bouncycastle.crypto.engines.TEAEngine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.c:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`org.bouncycastle.crypto.engines.TEAEngine` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.d:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`org.bouncycastle.crypto.engines.TEAEngine` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.e:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.TEAEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.TEAEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.TEAEngine` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.TEAEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.TEAEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/TEAEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
