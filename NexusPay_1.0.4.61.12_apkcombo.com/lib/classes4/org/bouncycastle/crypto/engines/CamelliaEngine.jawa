record `org.bouncycastle.crypto.engines.CamelliaEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.BlockCipher` @kind interface {
  `boolean` `org.bouncycastle.crypto.engines.CamelliaEngine.a` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.CamelliaEngine.b` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.CamelliaEngine.c` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.CamelliaEngine.d` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.CamelliaEngine.e` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.CamelliaEngine.f` @AccessFlag PRIVATE;
}
global `int`[] `@@org.bouncycastle.crypto.engines.CamelliaEngine.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.CamelliaEngine.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.CamelliaEngine.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.CamelliaEngine.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.bouncycastle.crypto.engines.CamelliaEngine.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.CamelliaEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`org.bouncycastle.crypto.engines.CamelliaEngine` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.a:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `b`(`org.bouncycastle.crypto.engines.CamelliaEngine` v10 @kind this, `int`[] v11 @kind object, `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.b:([I[II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `c`(`org.bouncycastle.crypto.engines.CamelliaEngine` v6 @kind this, `int`[] v7 @kind object, `int`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.c:([I[II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`int` v9 , `int`[] v10 @kind object, `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.d:(I[II[II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `e`(`int` v9 , `int`[] v10 @kind object, `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.e:(I[II[II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `f`(`org.bouncycastle.crypto.engines.CamelliaEngine` v3 @kind this, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.f:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `g`(`int` v1 , `int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.g:(II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `h`(`org.bouncycastle.crypto.engines.CamelliaEngine` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `byte`[] v11 @kind object, `int` v12 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.h:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `i`(`org.bouncycastle.crypto.engines.CamelliaEngine` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `byte`[] v11 @kind object, `int` v12 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.i:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `j`(`int` v1 , `int` v2 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.j:(II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `k`(`int` v9 , `int`[] v10 @kind object, `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.k:(I[II[II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `l`(`int` v9 , `int`[] v10 @kind object, `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.l:(I[II[II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `m`(`org.bouncycastle.crypto.engines.CamelliaEngine` v23 @kind this, `boolean` v24 , `byte`[] v25 @kind object) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.m:(Z[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.CamelliaEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.CamelliaEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.CamelliaEngine` v1 @kind this, `boolean` v2 , `org.bouncycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.CamelliaEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.CamelliaEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/CamelliaEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
