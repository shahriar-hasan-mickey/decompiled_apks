record `org.bouncycastle.crypto.engines.DESedeEngine` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.engines.DESEngine` @kind class {
  `int`[] `org.bouncycastle.crypto.engines.DESedeEngine.o` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.DESedeEngine.p` @AccessFlag PRIVATE;
  `int`[] `org.bouncycastle.crypto.engines.DESedeEngine.q` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.engines.DESedeEngine.r` @AccessFlag PRIVATE;
}
global `int` `@@org.bouncycastle.crypto.engines.DESedeEngine.BLOCK_SIZE` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.DESedeEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESedeEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.engines.DESedeEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESedeEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.bouncycastle.crypto.engines.DESedeEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESedeEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.DESedeEngine` v6 @kind this, `boolean` v7 , `org.bouncycastle.crypto.CipherParameters` v8 @kind object) @signature `Lorg/bouncycastle/crypto/engines/DESedeEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.bouncycastle.crypto.engines.DESedeEngine` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `byte`[] v11 @kind object, `int` v12 ) @signature `Lorg/bouncycastle/crypto/engines/DESedeEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.engines.DESedeEngine` v0 @kind this) @signature `Lorg/bouncycastle/crypto/engines/DESedeEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
