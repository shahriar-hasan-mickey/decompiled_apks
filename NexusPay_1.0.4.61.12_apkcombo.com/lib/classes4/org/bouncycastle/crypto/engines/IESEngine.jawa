record `org.bouncycastle.crypto.engines.IESEngine` @kind class @AccessFlag PUBLIC {
  `org.bouncycastle.crypto.BasicAgreement` `org.bouncycastle.crypto.engines.IESEngine.a` @AccessFlag ;
  `org.bouncycastle.crypto.DerivationFunction` `org.bouncycastle.crypto.engines.IESEngine.b` @AccessFlag ;
  `org.bouncycastle.crypto.Mac` `org.bouncycastle.crypto.engines.IESEngine.c` @AccessFlag ;
  `org.bouncycastle.crypto.BufferedBlockCipher` `org.bouncycastle.crypto.engines.IESEngine.d` @AccessFlag ;
  `boolean` `org.bouncycastle.crypto.engines.IESEngine.e` @AccessFlag ;
  `org.bouncycastle.crypto.CipherParameters` `org.bouncycastle.crypto.engines.IESEngine.f` @AccessFlag ;
  `org.bouncycastle.crypto.CipherParameters` `org.bouncycastle.crypto.engines.IESEngine.g` @AccessFlag ;
  `org.bouncycastle.crypto.params.IESParameters` `org.bouncycastle.crypto.engines.IESEngine.h` @AccessFlag ;
  `byte`[] `org.bouncycastle.crypto.engines.IESEngine.i` @AccessFlag ;
  `org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator` `org.bouncycastle.crypto.engines.IESEngine.j` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.KeyParser` `org.bouncycastle.crypto.engines.IESEngine.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.IESEngine` v0 @kind this, `org.bouncycastle.crypto.BasicAgreement` v1 @kind object, `org.bouncycastle.crypto.DerivationFunction` v2 @kind object, `org.bouncycastle.crypto.Mac` v3 @kind object) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.<init>:(Lorg/bouncycastle/crypto/BasicAgreement;Lorg/bouncycastle/crypto/DerivationFunction;Lorg/bouncycastle/crypto/Mac;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.engines.IESEngine` v0 @kind this, `org.bouncycastle.crypto.BasicAgreement` v1 @kind object, `org.bouncycastle.crypto.DerivationFunction` v2 @kind object, `org.bouncycastle.crypto.Mac` v3 @kind object, `org.bouncycastle.crypto.BufferedBlockCipher` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.<init>:(Lorg/bouncycastle/crypto/BasicAgreement;Lorg/bouncycastle/crypto/DerivationFunction;Lorg/bouncycastle/crypto/Mac;Lorg/bouncycastle/crypto/BufferedBlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`org.bouncycastle.crypto.engines.IESEngine` v12 @kind this, `byte`[] v13 @kind object, `int` v14 , `int` v15 ) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.a:([BII)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `b`(`org.bouncycastle.crypto.engines.IESEngine` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.b:([BII)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `org.bouncycastle.crypto.BufferedBlockCipher` `getCipher`(`org.bouncycastle.crypto.engines.IESEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.getCipher:()Lorg/bouncycastle/crypto/BufferedBlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.Mac` `getMac`(`org.bouncycastle.crypto.engines.IESEngine` v1 @kind this) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.getMac:()Lorg/bouncycastle/crypto/Mac;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.IESEngine` v1 @kind this, `org.bouncycastle.crypto.params.AsymmetricKeyParameter` v2 @kind object, `org.bouncycastle.crypto.CipherParameters` v3 @kind object, `org.bouncycastle.crypto.KeyParser` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.init:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/crypto/CipherParameters;Lorg/bouncycastle/crypto/KeyParser;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.IESEngine` v1 @kind this, `org.bouncycastle.crypto.params.AsymmetricKeyParameter` v2 @kind object, `org.bouncycastle.crypto.CipherParameters` v3 @kind object, `org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.init:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/crypto/CipherParameters;Lorg/bouncycastle/crypto/generators/EphemeralKeyPairGenerator;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.engines.IESEngine` v0 @kind this, `boolean` v1 , `org.bouncycastle.crypto.CipherParameters` v2 @kind object, `org.bouncycastle.crypto.CipherParameters` v3 @kind object, `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.init:(ZLorg/bouncycastle/crypto/CipherParameters;Lorg/bouncycastle/crypto/CipherParameters;Lorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `processBlock`(`org.bouncycastle.crypto.engines.IESEngine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/bouncycastle/crypto/engines/IESEngine;.processBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
