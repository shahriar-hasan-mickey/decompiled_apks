record `org.bouncycastle.crypto.StreamBlockCipher` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.StreamCipher` @kind interface {
  `org.bouncycastle.crypto.BlockCipher` `org.bouncycastle.crypto.StreamBlockCipher.a` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.StreamBlockCipher.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.StreamBlockCipher` v2 @kind this, `org.bouncycastle.crypto.BlockCipher` v3 @kind object) @signature `Lorg/bouncycastle/crypto/StreamBlockCipher;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.StreamBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/StreamBlockCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.StreamBlockCipher` v1 @kind this, `boolean` v2 , `org.bouncycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/bouncycastle/crypto/StreamBlockCipher;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processBytes`(`org.bouncycastle.crypto.StreamBlockCipher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/bouncycastle/crypto/StreamBlockCipher;.processBytes:([BII[BI)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.StreamBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/crypto/StreamBlockCipher;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `returnByte`(`org.bouncycastle.crypto.StreamBlockCipher` v2 @kind this, `byte` v3 ) @signature `Lorg/bouncycastle/crypto/StreamBlockCipher;.returnByte:(B)B` @AccessFlag PUBLIC {

  # return;
}
