record `org.bouncycastle.crypto.digests.SHA3Digest` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.ExtendedDigest` @kind interface {
  `byte`[] `org.bouncycastle.crypto.digests.SHA3Digest.a` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.digests.SHA3Digest.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.digests.SHA3Digest.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.digests.SHA3Digest.d` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.digests.SHA3Digest.e` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.digests.SHA3Digest.f` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.digests.SHA3Digest.g` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.digests.SHA3Digest.h` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.digests.SHA3Digest.i` @AccessFlag PRIVATE;
  `long`[] `org.bouncycastle.crypto.digests.SHA3Digest.j` @AccessFlag ;
  `long`[] `org.bouncycastle.crypto.digests.SHA3Digest.k` @AccessFlag ;
  `long`[] `org.bouncycastle.crypto.digests.SHA3Digest.l` @AccessFlag ;
}
global `long`[] `@@org.bouncycastle.crypto.digests.SHA3Digest.m` @AccessFlag PRIVATE_STATIC;
global `int`[] `@@org.bouncycastle.crypto.digests.SHA3Digest.n` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.digests.SHA3Digest` v2 @kind this) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.digests.SHA3Digest` v2 @kind this, `int` v3 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.digests.SHA3Digest` v4 @kind this, `org.bouncycastle.crypto.digests.SHA3Digest` v5 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.<init>:(Lorg/bouncycastle/crypto/digests/SHA3Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `A`(`org.bouncycastle.crypto.digests.SHA3Digest` v8 @kind this, `long`[] v9 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.A:([J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `B`(`org.bouncycastle.crypto.digests.SHA3Digest` v10 @kind this, `long`[] v11 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.B:([J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `C`(`org.bouncycastle.crypto.digests.SHA3Digest` v10 @kind this, `byte`[] v11 @kind object, `int` v12 , `long` v13 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.C:([BIJ)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `D`(`org.bouncycastle.crypto.digests.SHA3Digest` v10 @kind this, `long`[] v11 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.D:([J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`org.bouncycastle.crypto.digests.SHA3Digest` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.g:([B[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `h`(`org.bouncycastle.crypto.digests.SHA3Digest` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.h:([B[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `i`(`org.bouncycastle.crypto.digests.SHA3Digest` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.i:([B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `j`(`byte`[] v4 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.j:([B)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `k`(`org.bouncycastle.crypto.digests.SHA3Digest` v18 @kind this, `byte`[] v19 @kind object, `int` v20 , `long` v21 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.k:([BIJ)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `l`(`org.bouncycastle.crypto.digests.SHA3Digest` v3 @kind this) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.l:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `m`(`org.bouncycastle.crypto.digests.SHA3Digest` v13 @kind this, `long`[] v14 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.m:([J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `n`(`org.bouncycastle.crypto.digests.SHA3Digest` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.n:(II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `o`(`org.bouncycastle.crypto.digests.SHA3Digest` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `long` v10 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.o:([BIJ)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `p`(`org.bouncycastle.crypto.digests.SHA3Digest` v10 @kind this, `long`[] v11 @kind object, `byte`[] v12 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.p:([J[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `q`(`org.bouncycastle.crypto.digests.SHA3Digest` v9 @kind this, `byte`[] v10 @kind object, `long`[] v11 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.q:([B[J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `r`(`org.bouncycastle.crypto.digests.SHA3Digest` v4 @kind this, `int` v5 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.r:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `s`(`org.bouncycastle.crypto.digests.SHA3Digest` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.s:(II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `t`(`org.bouncycastle.crypto.digests.SHA3Digest` v6 @kind this, `long`[] v7 @kind object, `int` v8 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.t:([JI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `u`() @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.u:()[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long`[] `v`() @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.v:()[J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `w`(`org.bouncycastle.crypto.digests.SHA3Digest` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.w:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `x`(`org.bouncycastle.crypto.digests.SHA3Digest` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.x:([B[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `y`(`org.bouncycastle.crypto.digests.SHA3Digest` v2 @kind this, `long`[] v3 @kind object) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.y:([J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `z`(`org.bouncycastle.crypto.digests.SHA3Digest` v5 @kind this) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.z:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `doFinal`(`org.bouncycastle.crypto.digests.SHA3Digest` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.digests.SHA3Digest` v2 @kind this) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getByteLength`(`org.bouncycastle.crypto.digests.SHA3Digest` v1 @kind this) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.getByteLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getDigestSize`(`org.bouncycastle.crypto.digests.SHA3Digest` v1 @kind this) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.getDigestSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.digests.SHA3Digest` v1 @kind this) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.digests.SHA3Digest` v4 @kind this, `byte` v5 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.digests.SHA3Digest` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/bouncycastle/crypto/digests/SHA3Digest;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
