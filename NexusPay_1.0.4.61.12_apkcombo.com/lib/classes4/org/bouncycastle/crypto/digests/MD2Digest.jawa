record `org.bouncycastle.crypto.digests.MD2Digest` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.ExtendedDigest` @kind interface, `org.bouncycastle.util.Memoable` @kind interface {
  `byte`[] `org.bouncycastle.crypto.digests.MD2Digest.a` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.digests.MD2Digest.b` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.digests.MD2Digest.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.digests.MD2Digest.d` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.digests.MD2Digest.e` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.digests.MD2Digest.f` @AccessFlag PRIVATE;
}
global `byte`[] `@@org.bouncycastle.crypto.digests.MD2Digest.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.digests.MD2Digest` v2 @kind this) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.digests.MD2Digest` v2 @kind this, `org.bouncycastle.crypto.digests.MD2Digest` v3 @kind object) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.<init>:(Lorg/bouncycastle/crypto/digests/MD2Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `g`(`org.bouncycastle.crypto.digests.MD2Digest` v4 @kind this, `org.bouncycastle.crypto.digests.MD2Digest` v5 @kind object) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.g:(Lorg/bouncycastle/crypto/digests/MD2Digest;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `org.bouncycastle.util.Memoable` `copy`(`org.bouncycastle.crypto.digests.MD2Digest` v1 @kind this) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.copy:()Lorg/bouncycastle/util/Memoable;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `doFinal`(`org.bouncycastle.crypto.digests.MD2Digest` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.bouncycastle.crypto.digests.MD2Digest` v1 @kind this) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getByteLength`(`org.bouncycastle.crypto.digests.MD2Digest` v1 @kind this) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.getByteLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getDigestSize`(`org.bouncycastle.crypto.digests.MD2Digest` v1 @kind this) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.getDigestSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processBlock`(`org.bouncycastle.crypto.digests.MD2Digest` v6 @kind this, `byte`[] v7 @kind object) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.processBlock:([B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processCheckSum`(`org.bouncycastle.crypto.digests.MD2Digest` v6 @kind this, `byte`[] v7 @kind object) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.processCheckSum:([B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.digests.MD2Digest` v4 @kind this) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.digests.MD2Digest` v0 @kind this, `org.bouncycastle.util.Memoable` v1 @kind object) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.reset:(Lorg/bouncycastle/util/Memoable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.digests.MD2Digest` v3 @kind this, `byte` v4 ) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.bouncycastle.crypto.digests.MD2Digest` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lorg/bouncycastle/crypto/digests/MD2Digest;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
