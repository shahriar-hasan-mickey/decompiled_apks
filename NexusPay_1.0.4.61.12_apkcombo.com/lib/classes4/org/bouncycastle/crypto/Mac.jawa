record `org.bouncycastle.crypto.Mac` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `int` `doFinal`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lorg/bouncycastle/crypto/Mac;.doFinal:([BI)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`() @signature `Lorg/bouncycastle/crypto/Mac;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getMacSize`() @signature `Lorg/bouncycastle/crypto/Mac;.getMacSize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.CipherParameters` v0 @kind object) @signature `Lorg/bouncycastle/crypto/Mac;.init:(Lorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `reset`() @signature `Lorg/bouncycastle/crypto/Mac;.reset:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `update`(`byte` v0 ) @signature `Lorg/bouncycastle/crypto/Mac;.update:(B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `update`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lorg/bouncycastle/crypto/Mac;.update:([BII)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
