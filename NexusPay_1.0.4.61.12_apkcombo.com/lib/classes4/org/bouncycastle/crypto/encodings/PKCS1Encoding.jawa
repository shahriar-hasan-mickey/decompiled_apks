record `org.bouncycastle.crypto.encodings.PKCS1Encoding` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.AsymmetricBlockCipher` @kind interface {
  `java.security.SecureRandom` `org.bouncycastle.crypto.encodings.PKCS1Encoding.a` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.AsymmetricBlockCipher` `org.bouncycastle.crypto.encodings.PKCS1Encoding.b` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.encodings.PKCS1Encoding.c` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.encodings.PKCS1Encoding.d` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.encodings.PKCS1Encoding.e` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@org.bouncycastle.crypto.encodings.PKCS1Encoding.STRICT_LENGTH_ENABLED_PROPERTY` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v0 @kind this, `org.bouncycastle.crypto.AsymmetricBlockCipher` v1 @kind object) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.<init>:(Lorg/bouncycastle/crypto/AsymmetricBlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.a:([BII)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `b`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.b:([BII)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `c`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v2 @kind this) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.c:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getInputBlockSize`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v2 @kind this) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.getInputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOutputBlockSize`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v2 @kind this) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.getOutputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.AsymmetricBlockCipher` `getUnderlyingCipher`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v1 @kind this) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.getUnderlyingCipher:()Lorg/bouncycastle/crypto/AsymmetricBlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `processBlock`(`org.bouncycastle.crypto.encodings.PKCS1Encoding` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;.processBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
