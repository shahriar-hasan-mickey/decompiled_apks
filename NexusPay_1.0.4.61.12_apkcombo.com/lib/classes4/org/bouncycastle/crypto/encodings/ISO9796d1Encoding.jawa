record `org.bouncycastle.crypto.encodings.ISO9796d1Encoding` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.AsymmetricBlockCipher` @kind interface {
  `org.bouncycastle.crypto.AsymmetricBlockCipher` `org.bouncycastle.crypto.encodings.ISO9796d1Encoding.a` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.encodings.ISO9796d1Encoding.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.encodings.ISO9796d1Encoding.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.encodings.ISO9796d1Encoding.d` @AccessFlag PRIVATE;
  `java.math.BigInteger` `org.bouncycastle.crypto.encodings.ISO9796d1Encoding.e` @AccessFlag PRIVATE;
}
global `java.math.BigInteger` `@@org.bouncycastle.crypto.encodings.ISO9796d1Encoding.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.encodings.ISO9796d1Encoding.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.bouncycastle.crypto.encodings.ISO9796d1Encoding.h` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@org.bouncycastle.crypto.encodings.ISO9796d1Encoding.i` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v1 @kind this, `org.bouncycastle.crypto.AsymmetricBlockCipher` v2 @kind object) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.<init>:(Lorg/bouncycastle/crypto/AsymmetricBlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`java.math.BigInteger` v4 @kind object) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.a:(Ljava/math/BigInteger;)[B` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `b`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.b:([BII)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `c`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.c:([BII)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getInputBlockSize`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v2 @kind this) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.getInputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOutputBlockSize`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v2 @kind this) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.getOutputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPadBits`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v1 @kind this) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.getPadBits:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.AsymmetricBlockCipher` `getUnderlyingCipher`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v1 @kind this) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.getUnderlyingCipher:()Lorg/bouncycastle/crypto/AsymmetricBlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v2 @kind this, `boolean` v3 , `org.bouncycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `processBlock`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.processBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setPadBits`(`org.bouncycastle.crypto.encodings.ISO9796d1Encoding` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/crypto/encodings/ISO9796d1Encoding;.setPadBits:(I)V` @AccessFlag PUBLIC {

  # return;
}
