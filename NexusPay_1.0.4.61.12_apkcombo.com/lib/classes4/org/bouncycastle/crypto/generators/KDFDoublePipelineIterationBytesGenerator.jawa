record `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.MacDerivationFunction` @kind interface {
  `org.bouncycastle.crypto.Mac` `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.a` @AccessFlag PRIVATE_FINAL;
  `int` `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.c` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.d` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.e` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.f` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.g` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.h` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.i` @AccessFlag PRIVATE;
}
global `java.math.BigInteger` `@@org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/generators/KDFDoublePipelineIterationBytesGenerator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator` v1 @kind this, `org.bouncycastle.crypto.Mac` v2 @kind object) @signature `Lorg/bouncycastle/crypto/generators/KDFDoublePipelineIterationBytesGenerator;.<init>:(Lorg/bouncycastle/crypto/Mac;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator` v8 @kind this) @signature `Lorg/bouncycastle/crypto/generators/KDFDoublePipelineIterationBytesGenerator;.a:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `generateBytes`(`org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/bouncycastle/crypto/generators/KDFDoublePipelineIterationBytesGenerator;.generateBytes:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.Mac` `getMac`(`org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator` v1 @kind this) @signature `Lorg/bouncycastle/crypto/generators/KDFDoublePipelineIterationBytesGenerator;.getMac:()Lorg/bouncycastle/crypto/Mac;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator` v5 @kind this, `org.bouncycastle.crypto.DerivationParameters` v6 @kind object) @signature `Lorg/bouncycastle/crypto/generators/KDFDoublePipelineIterationBytesGenerator;.init:(Lorg/bouncycastle/crypto/DerivationParameters;)V` @AccessFlag PUBLIC {

  # return;
}
