record `org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator` @kind interface {
  `org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters` `org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator.a` @AccessFlag PRIVATE;
}
global `int`[] `@@org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator.b` @AccessFlag PRIVATE_STATIC;
global `java.math.BigInteger` `@@org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/crypto/generators/NaccacheSternKeyPairGenerator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator` v0 @kind this) @signature `Lorg/bouncycastle/crypto/generators/NaccacheSternKeyPairGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Vector` `a`(`int` v4 ) @signature `Lorg/bouncycastle/crypto/generators/NaccacheSternKeyPairGenerator;.a:(I)Ljava/util/Vector;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.math.BigInteger` `b`(`int` v2 , `int` v3 , `java.security.SecureRandom` v4 @kind object) @signature `Lorg/bouncycastle/crypto/generators/NaccacheSternKeyPairGenerator;.b:(IILjava/security/SecureRandom;)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `c`(`java.security.SecureRandom` v4 @kind object, `int` v5 ) @signature `Lorg/bouncycastle/crypto/generators/NaccacheSternKeyPairGenerator;.c:(Ljava/security/SecureRandom;I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Vector` `d`(`java.util.Vector` v5 @kind object, `java.security.SecureRandom` v6 @kind object) @signature `Lorg/bouncycastle/crypto/generators/NaccacheSternKeyPairGenerator;.d:(Ljava/util/Vector;Ljava/security/SecureRandom;)Ljava/util/Vector;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.bouncycastle.crypto.AsymmetricCipherKeyPair` `generateKeyPair`(`org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator` v28 @kind this) @signature `Lorg/bouncycastle/crypto/generators/NaccacheSternKeyPairGenerator;.generateKeyPair:()Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator` v0 @kind this, `org.bouncycastle.crypto.KeyGenerationParameters` v1 @kind object) @signature `Lorg/bouncycastle/crypto/generators/NaccacheSternKeyPairGenerator;.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V` @AccessFlag PUBLIC {

  # return;
}
