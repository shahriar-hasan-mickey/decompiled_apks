record `org.bouncycastle.crypto.generators.MGF1BytesGenerator` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.crypto.DerivationFunction` @kind interface {
  `org.bouncycastle.crypto.Digest` `org.bouncycastle.crypto.generators.MGF1BytesGenerator.a` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.generators.MGF1BytesGenerator.b` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.generators.MGF1BytesGenerator.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.generators.MGF1BytesGenerator` v0 @kind this, `org.bouncycastle.crypto.Digest` v1 @kind object) @signature `Lorg/bouncycastle/crypto/generators/MGF1BytesGenerator;.<init>:(Lorg/bouncycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.bouncycastle.crypto.generators.MGF1BytesGenerator` v3 @kind this, `int` v4 , `byte`[] v5 @kind object) @signature `Lorg/bouncycastle/crypto/generators/MGF1BytesGenerator;.a:(I[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `generateBytes`(`org.bouncycastle.crypto.generators.MGF1BytesGenerator` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lorg/bouncycastle/crypto/generators/MGF1BytesGenerator;.generateBytes:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.crypto.Digest` `getDigest`(`org.bouncycastle.crypto.generators.MGF1BytesGenerator` v1 @kind this) @signature `Lorg/bouncycastle/crypto/generators/MGF1BytesGenerator;.getDigest:()Lorg/bouncycastle/crypto/Digest;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.bouncycastle.crypto.generators.MGF1BytesGenerator` v1 @kind this, `org.bouncycastle.crypto.DerivationParameters` v2 @kind object) @signature `Lorg/bouncycastle/crypto/generators/MGF1BytesGenerator;.init:(Lorg/bouncycastle/crypto/DerivationParameters;)V` @AccessFlag PUBLIC {

  # return;
}
