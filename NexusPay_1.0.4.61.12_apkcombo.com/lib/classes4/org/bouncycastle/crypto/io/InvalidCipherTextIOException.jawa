record `org.bouncycastle.crypto.io.InvalidCipherTextIOException` @kind class @AccessFlag PUBLIC extends `java.io.IOException` @kind class {
  `java.lang.Throwable` `org.bouncycastle.crypto.io.InvalidCipherTextIOException.a` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.bouncycastle.crypto.io.InvalidCipherTextIOException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.bouncycastle.crypto.io.InvalidCipherTextIOException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lorg/bouncycastle/crypto/io/InvalidCipherTextIOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Throwable` `getCause`(`org.bouncycastle.crypto.io.InvalidCipherTextIOException` v1 @kind this) @signature `Lorg/bouncycastle/crypto/io/InvalidCipherTextIOException;.getCause:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {

  # return;
}
