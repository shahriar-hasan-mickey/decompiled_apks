record `org.bouncycastle.crypto.io.CipherInputStream` @kind class @AccessFlag PUBLIC extends `java.io.FilterInputStream` @kind class {
  `org.bouncycastle.crypto.BufferedBlockCipher` `org.bouncycastle.crypto.io.CipherInputStream.a` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.StreamCipher` `org.bouncycastle.crypto.io.CipherInputStream.b` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.modes.AEADBlockCipher` `org.bouncycastle.crypto.io.CipherInputStream.c` @AccessFlag PRIVATE;
  `byte`[] `org.bouncycastle.crypto.io.CipherInputStream.d` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.bouncycastle.crypto.io.CipherInputStream.e` @AccessFlag PRIVATE_FINAL;
  `int` `org.bouncycastle.crypto.io.CipherInputStream.f` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.crypto.io.CipherInputStream.g` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.crypto.io.CipherInputStream.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.io.CipherInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `org.bouncycastle.crypto.BufferedBlockCipher` v2 @kind object) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.<init>:(Ljava/io/InputStream;Lorg/bouncycastle/crypto/BufferedBlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.io.CipherInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `org.bouncycastle.crypto.StreamCipher` v2 @kind object) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.<init>:(Ljava/io/InputStream;Lorg/bouncycastle/crypto/StreamCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.io.CipherInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `org.bouncycastle.crypto.modes.AEADBlockCipher` v2 @kind object) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.<init>:(Ljava/io/InputStream;Lorg/bouncycastle/crypto/modes/AEADBlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.bouncycastle.crypto.io.CipherInputStream` v4 @kind this) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.a:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.bouncycastle.crypto.io.CipherInputStream` v9 @kind this) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.b:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `available`(`org.bouncycastle.crypto.io.CipherInputStream` v2 @kind this) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`org.bouncycastle.crypto.io.CipherInputStream` v2 @kind this) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mark`(`org.bouncycastle.crypto.io.CipherInputStream` v0 @kind this, `int` v1 ) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.mark:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `markSupported`(`org.bouncycastle.crypto.io.CipherInputStream` v1 @kind this) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.markSupported:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.bouncycastle.crypto.io.CipherInputStream` v3 @kind this) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.bouncycastle.crypto.io.CipherInputStream` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.read:([B)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.bouncycastle.crypto.io.CipherInputStream` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.bouncycastle.crypto.io.CipherInputStream` v0 @kind this) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `skip`(`org.bouncycastle.crypto.io.CipherInputStream` v3 @kind this, `long` v4 ) @signature `Lorg/bouncycastle/crypto/io/CipherInputStream;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
