record `org.bouncycastle.math.ec.WTauNafMultiplier` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.math.ec.AbstractECMultiplier` @kind class {
}
procedure `void` `<init>`(`org.bouncycastle.math.ec.WTauNafMultiplier` v0 @kind this) @signature `Lorg/bouncycastle/math/ec/WTauNafMultiplier;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.math.ec.ECPoint$F2m` `a`(`org.bouncycastle.math.ec.ECPoint$F2m` v3 @kind object, `byte`[] v4 @kind object, `org.bouncycastle.math.ec.PreCompInfo` v5 @kind object) @signature `Lorg/bouncycastle/math/ec/WTauNafMultiplier;.a:(Lorg/bouncycastle/math/ec/ECPoint$F2m;[BLorg/bouncycastle/math/ec/PreCompInfo;)Lorg/bouncycastle/math/ec/ECPoint$F2m;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.bouncycastle.math.ec.ECPoint$F2m` `b`(`org.bouncycastle.math.ec.WTauNafMultiplier` v6 @kind this, `org.bouncycastle.math.ec.ECPoint$F2m` v7 @kind object, `org.bouncycastle.math.ec.e` v8 @kind object, `org.bouncycastle.math.ec.PreCompInfo` v9 @kind object, `byte` v10 , `byte` v11 ) @signature `Lorg/bouncycastle/math/ec/WTauNafMultiplier;.b:(Lorg/bouncycastle/math/ec/ECPoint$F2m;Lorg/bouncycastle/math/ec/e;Lorg/bouncycastle/math/ec/PreCompInfo;BB)Lorg/bouncycastle/math/ec/ECPoint$F2m;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.bouncycastle.math.ec.ECPoint` `multiplyPositive`(`org.bouncycastle.math.ec.WTauNafMultiplier` v10 @kind this, `org.bouncycastle.math.ec.ECPoint` v11 @kind object, `java.math.BigInteger` v12 @kind object) @signature `Lorg/bouncycastle/math/ec/WTauNafMultiplier;.multiplyPositive:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;` @AccessFlag PROTECTED {

  # return;
}
