record `org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.asn1.ASN1Object` @kind class, `org.bouncycastle.asn1.ASN1Choice` @kind interface {
  `org.bouncycastle.asn1.ASN1Encodable` `org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData.a` @AccessFlag ;
}
global `int` `@@org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData.HANDWRITTEN_SIGNATURE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData.PICTURE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData` v3 @kind this, `int` v4 ) @signature `Lorg/bouncycastle/asn1/x509/qualified/TypeOfBiometricData;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData` v0 @kind this, `org.bouncycastle.asn1.ASN1ObjectIdentifier` v1 @kind object) @signature `Lorg/bouncycastle/asn1/x509/qualified/TypeOfBiometricData;.<init>:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData` `getInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/bouncycastle/asn1/x509/qualified/TypeOfBiometricData;.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/qualified/TypeOfBiometricData;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.bouncycastle.asn1.ASN1ObjectIdentifier` `getBiometricDataOid`(`org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData` v1 @kind this) @signature `Lorg/bouncycastle/asn1/x509/qualified/TypeOfBiometricData;.getBiometricDataOid:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPredefinedBiometricType`(`org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData` v1 @kind this) @signature `Lorg/bouncycastle/asn1/x509/qualified/TypeOfBiometricData;.getPredefinedBiometricType:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isPredefined`(`org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData` v1 @kind this) @signature `Lorg/bouncycastle/asn1/x509/qualified/TypeOfBiometricData;.isPredefined:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.asn1.ASN1Primitive` `toASN1Primitive`(`org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData` v1 @kind this) @signature `Lorg/bouncycastle/asn1/x509/qualified/TypeOfBiometricData;.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;` @AccessFlag PUBLIC {

  # return;
}
