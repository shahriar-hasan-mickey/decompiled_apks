record `org.bouncycastle.asn1.x9.X9FieldElement` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.asn1.ASN1Object` @kind class {
  `org.bouncycastle.math.ec.ECFieldElement` `org.bouncycastle.asn1.x9.X9FieldElement.f` @AccessFlag PROTECTED;
}
global `org.bouncycastle.asn1.x9.X9IntegerConverter` `@@org.bouncycastle.asn1.x9.X9FieldElement.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/asn1/x9/X9FieldElement;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.asn1.x9.X9FieldElement` v7 @kind this, `int` v8 , `int` v9 , `int` v10 , `int` v11 , `org.bouncycastle.asn1.ASN1OctetString` v12 @kind object) @signature `Lorg/bouncycastle/asn1/x9/X9FieldElement;.<init>:(IIIILorg/bouncycastle/asn1/ASN1OctetString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.asn1.x9.X9FieldElement` v3 @kind this, `java.math.BigInteger` v4 @kind object, `org.bouncycastle.asn1.ASN1OctetString` v5 @kind object) @signature `Lorg/bouncycastle/asn1/x9/X9FieldElement;.<init>:(Ljava/math/BigInteger;Lorg/bouncycastle/asn1/ASN1OctetString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.asn1.x9.X9FieldElement` v0 @kind this, `org.bouncycastle.math.ec.ECFieldElement` v1 @kind object) @signature `Lorg/bouncycastle/asn1/x9/X9FieldElement;.<init>:(Lorg/bouncycastle/math/ec/ECFieldElement;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.math.ec.ECFieldElement` `getValue`(`org.bouncycastle.asn1.x9.X9FieldElement` v1 @kind this) @signature `Lorg/bouncycastle/asn1/x9/X9FieldElement;.getValue:()Lorg/bouncycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.asn1.ASN1Primitive` `toASN1Primitive`(`org.bouncycastle.asn1.x9.X9FieldElement` v3 @kind this) @signature `Lorg/bouncycastle/asn1/x9/X9FieldElement;.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;` @AccessFlag PUBLIC {

  # return;
}
