record `org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil` @kind class @AccessFlag PUBLIC {
}
global `org.bouncycastle.asn1.ASN1ObjectIdentifier`[] `@@org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil.rsaOids` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/rsa/RSAUtil;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil` v0 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/rsa/RSAUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.params.RSAKeyParameters` `a`(`java.security.interfaces.RSAPrivateKey` v10 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/rsa/RSAUtil;.a:(Ljava/security/interfaces/RSAPrivateKey;)Lorg/bouncycastle/crypto/params/RSAKeyParameters;` @AccessFlag STATIC {

  # return;
}
procedure `org.bouncycastle.crypto.params.RSAKeyParameters` `b`(`java.security.interfaces.RSAPublicKey` v3 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/rsa/RSAUtil;.b:(Ljava/security/interfaces/RSAPublicKey;)Lorg/bouncycastle/crypto/params/RSAKeyParameters;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `isRsaOid`(`org.bouncycastle.asn1.ASN1ObjectIdentifier` v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/rsa/RSAUtil;.isRsaOid:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
