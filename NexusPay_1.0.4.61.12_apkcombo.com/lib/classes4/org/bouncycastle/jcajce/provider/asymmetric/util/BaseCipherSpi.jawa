record `org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` @kind class @AccessFlag PUBLIC_ABSTRACT extends `javax.crypto.CipherSpi` @kind class {
  `java.security.AlgorithmParameters` `org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi.engineParams` @AccessFlag PROTECTED;
  `org.bouncycastle.crypto.Wrapper` `org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi.wrapEngine` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v1 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `int` `engineGetBlockSize`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v1 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineGetBlockSize:()I` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `engineGetIV`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v1 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineGetIV:()[B` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `engineGetKeySize`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v0 @kind this, `java.security.Key` v1 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineGetKeySize:(Ljava/security/Key;)I` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `engineGetOutputSize`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v0 @kind this, `int` v1 ) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineGetOutputSize:(I)I` @AccessFlag PROTECTED {

  # return;
}
procedure `java.security.AlgorithmParameters` `engineGetParameters`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v1 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineGetParameters:()Ljava/security/AlgorithmParameters;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineSetMode`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineSetMode:(Ljava/lang/String;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineSetPadding`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineSetPadding:(Ljava/lang/String;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `java.security.Key` `engineUnwrap`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v4 @kind this, `byte`[] v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 ) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineUnwrap:([BLjava/lang/String;I)Ljava/security/Key;` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `engineWrap`(`org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi` v3 @kind this, `java.security.Key` v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/util/BaseCipherSpi;.engineWrap:(Ljava/security/Key;)[B` @AccessFlag PROTECTED {

  # return;
}
