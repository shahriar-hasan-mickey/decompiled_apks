record `org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$c` @kind class @AccessFlag  extends `org.bouncycastle.jcajce.provider.asymmetric.util.DSAEncoder` @kind interface {
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$c` v0 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/ec/SignatureSpi$c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$c` v0 @kind this, `org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$a` v1 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/ec/SignatureSpi$c;.<init>:(Lorg/bouncycastle/jcajce/provider/asymmetric/ec/SignatureSpi$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger`[] `decode`(`org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$c` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/ec/SignatureSpi$c;.decode:([B)[Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `encode`(`org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$c` v2 @kind this, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/asymmetric/ec/SignatureSpi$c;.encode:(Ljava/math/BigInteger;Ljava/math/BigInteger;)[B` @AccessFlag PUBLIC {

  # return;
}
