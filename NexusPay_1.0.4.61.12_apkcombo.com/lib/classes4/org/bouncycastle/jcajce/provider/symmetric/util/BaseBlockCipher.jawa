record `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher` @kind class, `org.bouncycastle.jcajce.provider.symmetric.util.PBE` @kind interface {
  `java.lang.Class`[] `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.d` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.BlockCipher` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.e` @AccessFlag PRIVATE;
  `org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.f` @AccessFlag PRIVATE;
  `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$c` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.g` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.params.ParametersWithIV` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.h` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.params.AEADParameters` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.i` @AccessFlag PRIVATE;
  `int` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.j` @AccessFlag PRIVATE;
  `boolean` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.k` @AccessFlag PRIVATE;
  `javax.crypto.spec.PBEParameterSpec` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.l` @AccessFlag PRIVATE;
  `java.lang.String` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.m` @AccessFlag PRIVATE;
  `java.lang.String` `org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.n` @AccessFlag PRIVATE;
}
global `java.lang.Class` `@@org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.o` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v4 @kind this, `org.bouncycastle.crypto.BlockCipher` v5 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v4 @kind this, `org.bouncycastle.crypto.BlockCipher` v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.<init>:(Lorg/bouncycastle/crypto/BlockCipher;I)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v4 @kind this, `org.bouncycastle.crypto.BufferedBlockCipher` v5 @kind object, `int` v6 ) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.<init>:(Lorg/bouncycastle/crypto/BufferedBlockCipher;I)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v4 @kind this, `org.bouncycastle.crypto.modes.AEADBlockCipher` v5 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.<init>:(Lorg/bouncycastle/crypto/modes/AEADBlockCipher;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v4 @kind this, `org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider` v5 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.<init>:(Lorg/bouncycastle/jcajce/provider/symmetric/util/BlockCipherProvider;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Class` `b`(`java.lang.String` v1 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.b:(Ljava/lang/String;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `engineDoFinal`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 , `byte`[] v11 @kind object, `int` v12 ) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineDoFinal:([BII[BI)I` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `engineDoFinal`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineDoFinal:([BII)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `engineGetBlockSize`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineGetBlockSize:()I` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `engineGetIV`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v1 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineGetIV:()[B` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `engineGetKeySize`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v0 @kind this, `java.security.Key` v1 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineGetKeySize:(Ljava/security/Key;)I` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `engineGetOutputSize`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineGetOutputSize:(I)I` @AccessFlag PROTECTED {

  # return;
}
procedure `java.security.AlgorithmParameters` `engineGetParameters`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v4 @kind this) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineGetParameters:()Ljava/security/AlgorithmParameters;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineInit`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v4 @kind this, `int` v5 , `java.security.Key` v6 @kind object, `java.security.AlgorithmParameters` v7 @kind object, `java.security.SecureRandom` v8 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineInit:(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineInit`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v1 @kind this, `int` v2 , `java.security.Key` v3 @kind object, `java.security.SecureRandom` v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineInit:(ILjava/security/Key;Ljava/security/SecureRandom;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineInit`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v6 @kind this, `int` v7 , `java.security.Key` v8 @kind object, `java.security.spec.AlgorithmParameterSpec` v9 @kind object, `java.security.SecureRandom` v10 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineInit:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineSetMode`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineSetMode:(Ljava/lang/String;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineSetPadding`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineSetPadding:(Ljava/lang/String;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `engineUpdate`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineUpdate:([BII[BI)I` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `engineUpdate`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineUpdate:([BII)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineUpdateAAD`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineUpdateAAD:(Ljava/nio/ByteBuffer;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `engineUpdateAAD`(`org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher;.engineUpdateAAD:([BII)V` @AccessFlag PROTECTED {

  # return;
}
