record `org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder$a$a` @kind class @AccessFlag  extends `org.bouncycastle.openssl.PEMDecryptor` @kind interface {
  `java.lang.String` `org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder$a$a.a` @AccessFlag FINAL_SYNTHETIC;
  `org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder$a` `org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder$a$a` v0 @kind this, `org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder$a` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/bouncycastle/openssl/jcajce/JcePEMDecryptorProviderBuilder$a$a;.<init>:(Lorg/bouncycastle/openssl/jcajce/JcePEMDecryptorProviderBuilder$a;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `byte`[] `decrypt`(`org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder$a$a` v8 @kind this, `byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lorg/bouncycastle/openssl/jcajce/JcePEMDecryptorProviderBuilder$a$a;.decrypt:([B[B)[B` @AccessFlag PUBLIC {

  # return;
}
