record `org.bouncycastle.pqc.math.linearalgebra.Permutation` @kind class @AccessFlag PUBLIC {
  `int`[] `org.bouncycastle.pqc.math.linearalgebra.Permutation.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v6 @kind this, `int` v7 , `java.security.SecureRandom` v8 @kind object) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.<init>:(ILjava/security/SecureRandom;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v7 @kind this, `byte`[] v8 @kind object) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v1 @kind this, `int`[] v2 @kind object) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.<init>:([I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v6 @kind this, `int`[] v7 @kind object) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.a:([I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `org.bouncycastle.pqc.math.linearalgebra.Permutation` `computeInverse`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v4 @kind this) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.computeInverse:()Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getEncoded`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v6 @kind this) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.getEncoded:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getVector`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v1 @kind this) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.getVector:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v1 @kind this) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.pqc.math.linearalgebra.Permutation` `rightMultiply`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v5 @kind this, `org.bouncycastle.pqc.math.linearalgebra.Permutation` v6 @kind object) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.bouncycastle.pqc.math.linearalgebra.Permutation` v3 @kind this) @signature `Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
