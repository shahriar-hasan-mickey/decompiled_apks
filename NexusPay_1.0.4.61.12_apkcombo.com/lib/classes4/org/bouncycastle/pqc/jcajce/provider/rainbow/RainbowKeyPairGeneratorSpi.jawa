record `org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi` @kind class @AccessFlag PUBLIC extends `java.security.KeyPairGenerator` @kind class {
  `org.bouncycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters` `org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.a` @AccessFlag ;
  `org.bouncycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` `org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.b` @AccessFlag ;
  `java.security.SecureRandom` `org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.c` @AccessFlag ;
  `boolean` `org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.d` @AccessFlag ;
}
procedure `void` `<init>`(`org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi` v1 @kind this) @signature `Lorg/bouncycastle/pqc/jcajce/provider/rainbow/RainbowKeyPairGeneratorSpi;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.security.KeyPair` `generateKeyPair`(`org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi` v4 @kind this) @signature `Lorg/bouncycastle/pqc/jcajce/provider/rainbow/RainbowKeyPairGeneratorSpi;.generateKeyPair:()Ljava/security/KeyPair;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `initialize`(`org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi` v0 @kind this, `int` v1 , `java.security.SecureRandom` v2 @kind object) @signature `Lorg/bouncycastle/pqc/jcajce/provider/rainbow/RainbowKeyPairGeneratorSpi;.initialize:(ILjava/security/SecureRandom;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `initialize`(`org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi` v2 @kind this, `java.security.spec.AlgorithmParameterSpec` v3 @kind object, `java.security.SecureRandom` v4 @kind object) @signature `Lorg/bouncycastle/pqc/jcajce/provider/rainbow/RainbowKeyPairGeneratorSpi;.initialize:(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V` @AccessFlag PUBLIC {

  # return;
}
