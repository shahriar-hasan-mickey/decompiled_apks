record `org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil` v0 @kind this) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `convertArray`(`short`[] v3 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.convertArray:([S)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `convertArray`(`byte`[] v3 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.convertArray:([B)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[][] `convertArray`(`short`[][] v6 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.convertArray:([[S)[[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[][] `convertArray`(`byte`[][] v6 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.convertArray:([[B)[[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[][][] `convertArray`(`short`[][][] v7 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.convertArray:([[[S)[[[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[][][] `convertArray`(`byte`[][][] v7 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.convertArray:([[[B)[[[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `convertArraytoInt`(`byte`[] v3 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.convertArraytoInt:([B)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `convertIntArray`(`int`[] v3 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.convertIntArray:([I)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`short`[] v6 @kind object, `short`[] v7 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.equals:([S[S)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`short`[][] v4 @kind object, `short`[][] v5 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.equals:([[S[[S)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`short`[][][] v4 @kind object, `short`[][][] v5 @kind object) @signature `Lorg/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil;.equals:([[[S[[[S)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
