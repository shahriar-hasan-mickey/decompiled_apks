record `org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder$b` @kind class @AccessFlag  extends `org.bouncycastle.operator.ContentVerifierProvider` @kind interface {
  `org.bouncycastle.crypto.params.AsymmetricKeyParameter` `org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder$b.a` @AccessFlag FINAL_SYNTHETIC;
  `org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder` `org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder$b` v0 @kind this, `org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder` v1 @kind object, `org.bouncycastle.crypto.params.AsymmetricKeyParameter` v2 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcContentVerifierProviderBuilder$b;.<init>:(Lorg/bouncycastle/operator/bc/BcContentVerifierProviderBuilder;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.operator.ContentVerifier` `get`(`org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder$b` v3 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v4 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcContentVerifierProviderBuilder$b;.get:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;)Lorg/bouncycastle/operator/ContentVerifier;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.cert.X509CertificateHolder` `getAssociatedCertificate`(`org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder$b` v1 @kind this) @signature `Lorg/bouncycastle/operator/bc/BcContentVerifierProviderBuilder$b;.getAssociatedCertificate:()Lorg/bouncycastle/cert/X509CertificateHolder;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasAssociatedCertificate`(`org.bouncycastle.operator.bc.BcContentVerifierProviderBuilder$b` v1 @kind this) @signature `Lorg/bouncycastle/operator/bc/BcContentVerifierProviderBuilder$b;.hasAssociatedCertificate:()Z` @AccessFlag PUBLIC {

  # return;
}
