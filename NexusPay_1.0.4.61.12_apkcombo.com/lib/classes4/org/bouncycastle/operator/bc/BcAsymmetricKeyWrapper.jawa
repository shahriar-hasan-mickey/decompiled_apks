record `org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.bouncycastle.operator.AsymmetricKeyWrapper` @kind class {
  `org.bouncycastle.crypto.params.AsymmetricKeyParameter` `org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper.b` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper` v0 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v1 @kind object, `org.bouncycastle.crypto.params.AsymmetricKeyParameter` v2 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcAsymmetricKeyWrapper;.<init>:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.AsymmetricBlockCipher` `createAsymmetricWrapper`(`org.bouncycastle.asn1.ASN1ObjectIdentifier` v0 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcAsymmetricKeyWrapper;.createAsymmetricWrapper:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Lorg/bouncycastle/crypto/AsymmetricBlockCipher;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `byte`[] `generateWrappedKey`(`org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper` v4 @kind this, `org.bouncycastle.operator.GenericKey` v5 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcAsymmetricKeyWrapper;.generateWrappedKey:(Lorg/bouncycastle/operator/GenericKey;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper` `setSecureRandom`(`org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper` v0 @kind this, `java.security.SecureRandom` v1 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcAsymmetricKeyWrapper;.setSecureRandom:(Ljava/security/SecureRandom;)Lorg/bouncycastle/operator/bc/BcAsymmetricKeyWrapper;` @AccessFlag PUBLIC {

  # return;
}
