record `org.bouncycastle.operator.bc.BcAsymmetricKeyUnwrapper` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.bouncycastle.operator.AsymmetricKeyUnwrapper` @kind class {
  `org.bouncycastle.crypto.params.AsymmetricKeyParameter` `org.bouncycastle.operator.bc.BcAsymmetricKeyUnwrapper.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.operator.bc.BcAsymmetricKeyUnwrapper` v0 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v1 @kind object, `org.bouncycastle.crypto.params.AsymmetricKeyParameter` v2 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcAsymmetricKeyUnwrapper;.<init>:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.AsymmetricBlockCipher` `createAsymmetricUnwrapper`(`org.bouncycastle.asn1.ASN1ObjectIdentifier` v0 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcAsymmetricKeyUnwrapper;.createAsymmetricUnwrapper:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Lorg/bouncycastle/crypto/AsymmetricBlockCipher;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `org.bouncycastle.operator.GenericKey` `generateUnwrappedKey`(`org.bouncycastle.operator.bc.BcAsymmetricKeyUnwrapper` v3 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v4 @kind object, `byte`[] v5 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcAsymmetricKeyUnwrapper;.generateUnwrappedKey:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;[B)Lorg/bouncycastle/operator/GenericKey;` @AccessFlag PUBLIC {

  # return;
}
