record `org.bouncycastle.operator.bc.BcSymmetricKeyUnwrapper` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.operator.SymmetricKeyUnwrapper` @kind class {
  `org.bouncycastle.crypto.Wrapper` `org.bouncycastle.operator.bc.BcSymmetricKeyUnwrapper.b` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.params.KeyParameter` `org.bouncycastle.operator.bc.BcSymmetricKeyUnwrapper.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.operator.bc.BcSymmetricKeyUnwrapper` v0 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v1 @kind object, `org.bouncycastle.crypto.Wrapper` v2 @kind object, `org.bouncycastle.crypto.params.KeyParameter` v3 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcSymmetricKeyUnwrapper;.<init>:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/crypto/Wrapper;Lorg/bouncycastle/crypto/params/KeyParameter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.operator.GenericKey` `generateUnwrappedKey`(`org.bouncycastle.operator.bc.BcSymmetricKeyUnwrapper` v4 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcSymmetricKeyUnwrapper;.generateUnwrappedKey:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;[B)Lorg/bouncycastle/operator/GenericKey;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.operator.bc.BcSymmetricKeyUnwrapper` `setSecureRandom`(`org.bouncycastle.operator.bc.BcSymmetricKeyUnwrapper` v0 @kind this, `java.security.SecureRandom` v1 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcSymmetricKeyUnwrapper;.setSecureRandom:(Ljava/security/SecureRandom;)Lorg/bouncycastle/operator/bc/BcSymmetricKeyUnwrapper;` @AccessFlag PUBLIC {

  # return;
}
