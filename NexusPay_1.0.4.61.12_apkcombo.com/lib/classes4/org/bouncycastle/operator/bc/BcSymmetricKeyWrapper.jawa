record `org.bouncycastle.operator.bc.BcSymmetricKeyWrapper` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.operator.SymmetricKeyWrapper` @kind class {
  `java.security.SecureRandom` `org.bouncycastle.operator.bc.BcSymmetricKeyWrapper.b` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.Wrapper` `org.bouncycastle.operator.bc.BcSymmetricKeyWrapper.c` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.params.KeyParameter` `org.bouncycastle.operator.bc.BcSymmetricKeyWrapper.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.operator.bc.BcSymmetricKeyWrapper` v0 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v1 @kind object, `org.bouncycastle.crypto.Wrapper` v2 @kind object, `org.bouncycastle.crypto.params.KeyParameter` v3 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcSymmetricKeyWrapper;.<init>:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/crypto/Wrapper;Lorg/bouncycastle/crypto/params/KeyParameter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `generateWrappedKey`(`org.bouncycastle.operator.bc.BcSymmetricKeyWrapper` v5 @kind this, `org.bouncycastle.operator.GenericKey` v6 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcSymmetricKeyWrapper;.generateWrappedKey:(Lorg/bouncycastle/operator/GenericKey;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.operator.bc.BcSymmetricKeyWrapper` `setSecureRandom`(`org.bouncycastle.operator.bc.BcSymmetricKeyWrapper` v0 @kind this, `java.security.SecureRandom` v1 @kind object) @signature `Lorg/bouncycastle/operator/bc/BcSymmetricKeyWrapper;.setSecureRandom:(Ljava/security/SecureRandom;)Lorg/bouncycastle/operator/bc/BcSymmetricKeyWrapper;` @AccessFlag PUBLIC {

  # return;
}
