record `org.bouncycastle.operator.DefaultSecretKeySizeProvider` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.operator.SecretKeySizeProvider` @kind interface {
}
global `org.bouncycastle.operator.SecretKeySizeProvider` `@@org.bouncycastle.operator.DefaultSecretKeySizeProvider.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Map` `@@org.bouncycastle.operator.DefaultSecretKeySizeProvider.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/bouncycastle/operator/DefaultSecretKeySizeProvider;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.operator.DefaultSecretKeySizeProvider` v0 @kind this) @signature `Lorg/bouncycastle/operator/DefaultSecretKeySizeProvider;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `getKeySize`(`org.bouncycastle.operator.DefaultSecretKeySizeProvider` v1 @kind this, `org.bouncycastle.asn1.ASN1ObjectIdentifier` v2 @kind object) @signature `Lorg/bouncycastle/operator/DefaultSecretKeySizeProvider;.getKeySize:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getKeySize`(`org.bouncycastle.operator.DefaultSecretKeySizeProvider` v0 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v1 @kind object) @signature `Lorg/bouncycastle/operator/DefaultSecretKeySizeProvider;.getKeySize:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;)I` @AccessFlag PUBLIC {

  # return;
}
