record `org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.operator.SymmetricKeyWrapper` @kind class {
  `org.bouncycastle.operator.jcajce.a` `org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper.b` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper.c` @AccessFlag PRIVATE;
  `javax.crypto.SecretKey` `org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` v2 @kind this, `javax.crypto.SecretKey` v3 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;.<init>:(Ljavax/crypto/SecretKey;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.asn1.x509.AlgorithmIdentifier` `a`(`javax.crypto.SecretKey` v5 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;.a:(Ljavax/crypto/SecretKey;)Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `generateWrappedKey`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` v4 @kind this, `org.bouncycastle.operator.GenericKey` v5 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;.generateWrappedKey:(Lorg/bouncycastle/operator/GenericKey;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` `setProvider`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;.setProvider:(Ljava/lang/String;)Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` `setProvider`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` v2 @kind this, `java.security.Provider` v3 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;.setProvider:(Ljava/security/Provider;)Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` `setSecureRandom`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyWrapper` v0 @kind this, `java.security.SecureRandom` v1 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;.setSecureRandom:(Ljava/security/SecureRandom;)Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyWrapper;` @AccessFlag PUBLIC {

  # return;
}
