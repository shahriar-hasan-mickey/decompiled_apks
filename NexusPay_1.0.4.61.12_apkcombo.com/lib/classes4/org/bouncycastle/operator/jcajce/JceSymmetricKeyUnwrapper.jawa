record `org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.operator.SymmetricKeyUnwrapper` @kind class {
  `org.bouncycastle.operator.jcajce.a` `org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper.b` @AccessFlag PRIVATE;
  `javax.crypto.SecretKey` `org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper` v1 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v2 @kind object, `javax.crypto.SecretKey` v3 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyUnwrapper;.<init>:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Ljavax/crypto/SecretKey;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.operator.GenericKey` `generateUnwrappedKey`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper` v4 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyUnwrapper;.generateUnwrappedKey:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;[B)Lorg/bouncycastle/operator/GenericKey;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper` `setProvider`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyUnwrapper;.setProvider:(Ljava/lang/String;)Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyUnwrapper;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper` `setProvider`(`org.bouncycastle.operator.jcajce.JceSymmetricKeyUnwrapper` v2 @kind this, `java.security.Provider` v3 @kind object) @signature `Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyUnwrapper;.setProvider:(Ljava/security/Provider;)Lorg/bouncycastle/operator/jcajce/JceSymmetricKeyUnwrapper;` @AccessFlag PUBLIC {

  # return;
}
