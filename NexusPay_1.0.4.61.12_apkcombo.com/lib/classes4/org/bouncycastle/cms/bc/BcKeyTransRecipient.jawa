record `org.bouncycastle.cms.bc.BcKeyTransRecipient` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.bouncycastle.cms.KeyTransRecipient` @kind interface {
  `org.bouncycastle.crypto.params.AsymmetricKeyParameter` `org.bouncycastle.cms.bc.BcKeyTransRecipient.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.cms.bc.BcKeyTransRecipient` v0 @kind this, `org.bouncycastle.crypto.params.AsymmetricKeyParameter` v1 @kind object) @signature `Lorg/bouncycastle/cms/bc/BcKeyTransRecipient;.<init>:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.CipherParameters` `extractSecretKey`(`org.bouncycastle.cms.bc.BcKeyTransRecipient` v2 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v3 @kind object, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v4 @kind object, `byte`[] v5 @kind object) @signature `Lorg/bouncycastle/cms/bc/BcKeyTransRecipient;.extractSecretKey:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;[B)Lorg/bouncycastle/crypto/CipherParameters;` @AccessFlag PROTECTED {

  # return;
}
