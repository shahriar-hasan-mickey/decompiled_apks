record `org.bouncycastle.cms.bc.BcPasswordRecipient` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.bouncycastle.cms.PasswordRecipient` @kind interface {
  `int` `org.bouncycastle.cms.bc.BcPasswordRecipient.a` @AccessFlag PRIVATE;
  `char`[] `org.bouncycastle.cms.bc.BcPasswordRecipient.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.cms.bc.BcPasswordRecipient` v1 @kind this, `char`[] v2 @kind object) @signature `Lorg/bouncycastle/cms/bc/BcPasswordRecipient;.<init>:([C)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `org.bouncycastle.crypto.params.KeyParameter` `extractSecretKey`(`org.bouncycastle.cms.bc.BcPasswordRecipient` v2 @kind this, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v3 @kind object, `org.bouncycastle.asn1.x509.AlgorithmIdentifier` v4 @kind object, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/bouncycastle/cms/bc/BcPasswordRecipient;.extractSecretKey:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;[B[B)Lorg/bouncycastle/crypto/params/KeyParameter;` @AccessFlag PROTECTED {

  # return;
}
procedure `char`[] `getPassword`(`org.bouncycastle.cms.bc.BcPasswordRecipient` v1 @kind this) @signature `Lorg/bouncycastle/cms/bc/BcPasswordRecipient;.getPassword:()[C` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPasswordConversionScheme`(`org.bouncycastle.cms.bc.BcPasswordRecipient` v1 @kind this) @signature `Lorg/bouncycastle/cms/bc/BcPasswordRecipient;.getPasswordConversionScheme:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.cms.bc.BcPasswordRecipient` `setPasswordConversionScheme`(`org.bouncycastle.cms.bc.BcPasswordRecipient` v0 @kind this, `int` v1 ) @signature `Lorg/bouncycastle/cms/bc/BcPasswordRecipient;.setPasswordConversionScheme:(I)Lorg/bouncycastle/cms/bc/BcPasswordRecipient;` @AccessFlag PUBLIC {

  # return;
}
