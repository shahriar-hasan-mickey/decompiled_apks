record `org.bouncycastle.cert.crmf.FixedLengthMGF1Padder` @kind class @AccessFlag PUBLIC extends `org.bouncycastle.cert.crmf.EncryptedValuePadder` @kind interface {
  `int` `org.bouncycastle.cert.crmf.FixedLengthMGF1Padder.a` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.bouncycastle.cert.crmf.FixedLengthMGF1Padder.b` @AccessFlag PRIVATE;
  `org.bouncycastle.crypto.Digest` `org.bouncycastle.cert.crmf.FixedLengthMGF1Padder.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.bouncycastle.cert.crmf.FixedLengthMGF1Padder` v1 @kind this, `int` v2 ) @signature `Lorg/bouncycastle/cert/crmf/FixedLengthMGF1Padder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.bouncycastle.cert.crmf.FixedLengthMGF1Padder` v1 @kind this, `int` v2 , `java.security.SecureRandom` v3 @kind object) @signature `Lorg/bouncycastle/cert/crmf/FixedLengthMGF1Padder;.<init>:(ILjava/security/SecureRandom;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `getPaddedData`(`org.bouncycastle.cert.crmf.FixedLengthMGF1Padder` v8 @kind this, `byte`[] v9 @kind object) @signature `Lorg/bouncycastle/cert/crmf/FixedLengthMGF1Padder;.getPaddedData:([B)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getUnpaddedData`(`org.bouncycastle.cert.crmf.FixedLengthMGF1Padder` v8 @kind this, `byte`[] v9 @kind object) @signature `Lorg/bouncycastle/cert/crmf/FixedLengthMGF1Padder;.getUnpaddedData:([B)[B` @AccessFlag PUBLIC {

  # return;
}
