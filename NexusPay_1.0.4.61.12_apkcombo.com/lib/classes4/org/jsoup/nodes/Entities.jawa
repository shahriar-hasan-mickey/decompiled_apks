record `org.jsoup.nodes.Entities` @kind class @AccessFlag PUBLIC {
}
global `char`[] `@@org.jsoup.nodes.Entities.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@org.jsoup.nodes.Entities.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.jsoup.nodes.Document$OutputSettings` `@@org.jsoup.nodes.Entities.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/jsoup/nodes/Entities;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.jsoup.nodes.Entities` v0 @kind this) @signature `Lorg/jsoup/nodes/Entities;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.jsoup.nodes.Entities$EscapeMode` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/jsoup/nodes/Entities;.a:(Lorg/jsoup/nodes/Entities$EscapeMode;Ljava/lang/String;I)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`java.lang.Appendable` v2 @kind object, `org.jsoup.nodes.Entities$EscapeMode` v3 @kind object, `int` v4 ) @signature `Lorg/jsoup/nodes/Entities;.b:(Ljava/lang/Appendable;Lorg/jsoup/nodes/Entities$EscapeMode;I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `c`(`org.jsoup.nodes.Entities$b` v2 @kind object, `char` v3 , `java.nio.charset.CharsetEncoder` v4 @kind object) @signature `Lorg/jsoup/nodes/Entities;.c:(Lorg/jsoup/nodes/Entities$b;CLjava/nio/charset/CharsetEncoder;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `codepointsForName`(`java.lang.String` v3 @kind object, `int`[] v4 @kind object) @signature `Lorg/jsoup/nodes/Entities;.codepointsForName:(Ljava/lang/String;[I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `d`(`java.lang.Appendable` v10 @kind object, `java.lang.String` v11 @kind object, `org.jsoup.nodes.Document$OutputSettings` v12 @kind object, `boolean` v13 , `boolean` v14 , `boolean` v15 ) @signature `Lorg/jsoup/nodes/Entities;.d:(Ljava/lang/Appendable;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;ZZZ)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `e`(`org.jsoup.nodes.Entities$EscapeMode` v10 @kind object, `java.lang.String` v11 @kind object, `int` v12 ) @signature `Lorg/jsoup/nodes/Entities;.e:(Lorg/jsoup/nodes/Entities$EscapeMode;Ljava/lang/String;I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `escape`(`java.lang.String` v1 @kind object) @signature `Lorg/jsoup/nodes/Entities;.escape:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `escape`(`java.lang.String` v7 @kind object, `org.jsoup.nodes.Document$OutputSettings` v8 @kind object) @signature `Lorg/jsoup/nodes/Entities;.escape:(Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `f`(`java.lang.String` v0 @kind object, `boolean` v1 ) @signature `Lorg/jsoup/nodes/Entities;.f:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `getByName`(`java.lang.String` v4 @kind object) @signature `Lorg/jsoup/nodes/Entities;.getByName:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Character` `getCharacterByName`(`java.lang.String` v1 @kind object) @signature `Lorg/jsoup/nodes/Entities;.getCharacterByName:(Ljava/lang/String;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isBaseNamedEntity`(`java.lang.String` v1 @kind object) @signature `Lorg/jsoup/nodes/Entities;.isBaseNamedEntity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNamedEntity`(`java.lang.String` v1 @kind object) @signature `Lorg/jsoup/nodes/Entities;.isNamedEntity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `unescape`(`java.lang.String` v1 @kind object) @signature `Lorg/jsoup/nodes/Entities;.unescape:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
