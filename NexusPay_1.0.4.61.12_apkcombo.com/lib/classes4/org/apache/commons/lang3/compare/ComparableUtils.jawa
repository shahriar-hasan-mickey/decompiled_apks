record `org.apache.commons.lang3.compare.ComparableUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.apache.commons.lang3.compare.ComparableUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.a:(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `b`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.b:(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.function.Predicate` `between`(`java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.between:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/function/Predicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Predicate` `betweenExclusive`(`java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.betweenExclusive:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/function/Predicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `c`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.c:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `d`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.d:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `e`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.e:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `f`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.f:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.function.Predicate` `ge`(`java.lang.Comparable` v1 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.ge:(Ljava/lang/Comparable;)Ljava/util/function/Predicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Predicate` `gt`(`java.lang.Comparable` v1 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.gt:(Ljava/lang/Comparable;)Ljava/util/function/Predicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder` `is`(`java.lang.Comparable` v2 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.is:(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Predicate` `le`(`java.lang.Comparable` v1 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.le:(Ljava/lang/Comparable;)Ljava/util/function/Predicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Predicate` `lt`(`java.lang.Comparable` v1 @kind object) @signature `Lorg/apache/commons/lang3/compare/ComparableUtils;.lt:(Ljava/lang/Comparable;)Ljava/util/function/Predicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
