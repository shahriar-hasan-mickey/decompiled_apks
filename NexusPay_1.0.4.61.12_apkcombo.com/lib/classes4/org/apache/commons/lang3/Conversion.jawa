record `org.apache.commons.lang3.Conversion` @kind class @AccessFlag PUBLIC {
}
global `boolean`[] `@@org.apache.commons.lang3.Conversion.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.apache.commons.lang3.Conversion.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/Conversion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.Conversion` v0 @kind this) @signature `Lorg/apache/commons/lang3/Conversion;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `char` `binaryBeMsb0ToHexDigit`(`boolean`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/Conversion;.binaryBeMsb0ToHexDigit:([Z)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char` `binaryBeMsb0ToHexDigit`(`boolean`[] v4 @kind object, `int` v5 ) @signature `Lorg/apache/commons/lang3/Conversion;.binaryBeMsb0ToHexDigit:([ZI)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `binaryToByte`(`boolean`[] v4 @kind object, `int` v5 , `byte` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.binaryToByte:([ZIBII)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char` `binaryToHexDigit`(`boolean`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/Conversion;.binaryToHexDigit:([Z)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char` `binaryToHexDigit`(`boolean`[] v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/Conversion;.binaryToHexDigit:([ZI)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char` `binaryToHexDigitMsb0_4bits`(`boolean`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/Conversion;.binaryToHexDigitMsb0_4bits:([Z)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char` `binaryToHexDigitMsb0_4bits`(`boolean`[] v3 @kind object, `int` v4 ) @signature `Lorg/apache/commons/lang3/Conversion;.binaryToHexDigitMsb0_4bits:([ZI)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `binaryToInt`(`boolean`[] v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.binaryToInt:([ZIIII)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `binaryToLong`(`boolean`[] v7 @kind object, `int` v8 , `long` v9 , `int` v11 , `int` v12 ) @signature `Lorg/apache/commons/lang3/Conversion;.binaryToLong:([ZIJII)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `binaryToShort`(`boolean`[] v4 @kind object, `int` v5 , `short` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.binaryToShort:([ZISII)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `byteArrayToInt`(`byte`[] v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.byteArrayToInt:([BIIII)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `byteArrayToLong`(`byte`[] v6 @kind object, `int` v7 , `long` v8 , `int` v10 , `int` v11 ) @signature `Lorg/apache/commons/lang3/Conversion;.byteArrayToLong:([BIJII)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `byteArrayToShort`(`byte`[] v4 @kind object, `int` v5 , `short` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.byteArrayToShort:([BISII)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.UUID` `byteArrayToUuid`(`byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/apache/commons/lang3/Conversion;.byteArrayToUuid:([BI)Ljava/util/UUID;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `byteToBinary`(`byte` v5 , `int` v6 , `boolean`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/apache/commons/lang3/Conversion;.byteToBinary:(BI[ZII)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `byteToHex`(`byte` v4 , `int` v5 , `java.lang.String` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.byteToHex:(BILjava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `hexDigitMsb0ToBinary`(`char` v3 ) @signature `Lorg/apache/commons/lang3/Conversion;.hexDigitMsb0ToBinary:(C)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hexDigitMsb0ToInt`(`char` v3 ) @signature `Lorg/apache/commons/lang3/Conversion;.hexDigitMsb0ToInt:(C)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `hexDigitToBinary`(`char` v3 ) @signature `Lorg/apache/commons/lang3/Conversion;.hexDigitToBinary:(C)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hexDigitToInt`(`char` v3 ) @signature `Lorg/apache/commons/lang3/Conversion;.hexDigitToInt:(C)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `hexToByte`(`java.lang.String` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.hexToByte:(Ljava/lang/String;IBII)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hexToInt`(`java.lang.String` v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.hexToInt:(Ljava/lang/String;IIII)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `hexToLong`(`java.lang.String` v6 @kind object, `int` v7 , `long` v8 , `int` v10 , `int` v11 ) @signature `Lorg/apache/commons/lang3/Conversion;.hexToLong:(Ljava/lang/String;IJII)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `hexToShort`(`java.lang.String` v4 @kind object, `int` v5 , `short` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.hexToShort:(Ljava/lang/String;ISII)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `intArrayToLong`(`int`[] v6 @kind object, `int` v7 , `long` v8 , `int` v10 , `int` v11 ) @signature `Lorg/apache/commons/lang3/Conversion;.intArrayToLong:([IIJII)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `intToBinary`(`int` v5 , `int` v6 , `boolean`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/apache/commons/lang3/Conversion;.intToBinary:(II[ZII)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `intToByteArray`(`int` v3 , `int` v4 , `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/apache/commons/lang3/Conversion;.intToByteArray:(II[BII)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `intToHex`(`int` v4 , `int` v5 , `java.lang.String` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.intToHex:(IILjava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char` `intToHexDigit`(`int` v3 ) @signature `Lorg/apache/commons/lang3/Conversion;.intToHexDigit:(I)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char` `intToHexDigitMsb0`(`int` v3 ) @signature `Lorg/apache/commons/lang3/Conversion;.intToHexDigitMsb0:(I)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `intToShortArray`(`int` v4 , `int` v5 , `short`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.intToShortArray:(II[SII)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `longToBinary`(`long` v8 , `int` v10 , `boolean`[] v11 @kind object, `int` v12 , `int` v13 ) @signature `Lorg/apache/commons/lang3/Conversion;.longToBinary:(JI[ZII)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `longToByteArray`(`long` v7 , `int` v9 , `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/apache/commons/lang3/Conversion;.longToByteArray:(JI[BII)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `longToHex`(`long` v7 , `int` v9 , `java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/apache/commons/lang3/Conversion;.longToHex:(JILjava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `longToIntArray`(`long` v7 , `int` v9 , `int`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/apache/commons/lang3/Conversion;.longToIntArray:(JI[III)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `longToShortArray`(`long` v7 , `int` v9 , `short`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/apache/commons/lang3/Conversion;.longToShortArray:(JI[SII)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `shortArrayToInt`(`short`[] v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.shortArrayToInt:([SIIII)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `shortArrayToLong`(`short`[] v6 @kind object, `int` v7 , `long` v8 , `int` v10 , `int` v11 ) @signature `Lorg/apache/commons/lang3/Conversion;.shortArrayToLong:([SIJII)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `shortToBinary`(`short` v5 , `int` v6 , `boolean`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/apache/commons/lang3/Conversion;.shortToBinary:(SI[ZII)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `shortToByteArray`(`short` v3 , `int` v4 , `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/apache/commons/lang3/Conversion;.shortToByteArray:(SI[BII)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `shortToHex`(`short` v4 , `int` v5 , `java.lang.String` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/Conversion;.shortToHex:(SILjava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `uuidToByteArray`(`java.util.UUID` v7 @kind object, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/apache/commons/lang3/Conversion;.uuidToByteArray:(Ljava/util/UUID;[BII)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
