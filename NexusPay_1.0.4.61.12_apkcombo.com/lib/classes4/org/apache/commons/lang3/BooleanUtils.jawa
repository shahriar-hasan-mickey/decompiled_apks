record `org.apache.commons.lang3.BooleanUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@org.apache.commons.lang3.BooleanUtils.FALSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.apache.commons.lang3.BooleanUtils.NO` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.apache.commons.lang3.BooleanUtils.OFF` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.apache.commons.lang3.BooleanUtils.ON` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.apache.commons.lang3.BooleanUtils.TRUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.apache.commons.lang3.BooleanUtils.YES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.BooleanUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/BooleanUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Boolean` `and`(`java.lang.Boolean`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.and:([Ljava/lang/Boolean;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `and`(`boolean`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.and:([Z)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean`[] `booleanValues`() @signature `Lorg/apache/commons/lang3/BooleanUtils;.booleanValues:()[Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`boolean` v0 , `boolean` v1 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.compare:(ZZ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isFalse`(`java.lang.Boolean` v1 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.isFalse:(Ljava/lang/Boolean;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotFalse`(`java.lang.Boolean` v0 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.isNotFalse:(Ljava/lang/Boolean;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotTrue`(`java.lang.Boolean` v0 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.isNotTrue:(Ljava/lang/Boolean;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isTrue`(`java.lang.Boolean` v1 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.isTrue:(Ljava/lang/Boolean;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `negate`(`java.lang.Boolean` v0 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.negate:(Ljava/lang/Boolean;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `or`(`java.lang.Boolean`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.or:([Ljava/lang/Boolean;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `or`(`boolean`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.or:([Z)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `primitiveValues`() @signature `Lorg/apache/commons/lang3/BooleanUtils;.primitiveValues:()[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `toBoolean`(`int` v0 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBoolean:(I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `toBoolean`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBoolean:(III)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `toBoolean`(`java.lang.Boolean` v0 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBoolean:(Ljava/lang/Boolean;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `toBoolean`(`java.lang.Integer` v2 @kind object, `java.lang.Integer` v3 @kind object, `java.lang.Integer` v4 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBoolean:(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `toBoolean`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBoolean:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `toBoolean`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBoolean:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `toBooleanDefaultIfNull`(`java.lang.Boolean` v0 @kind object, `boolean` v1 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBooleanDefaultIfNull:(Ljava/lang/Boolean;Z)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `toBooleanObject`(`int` v0 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBooleanObject:(I)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `toBooleanObject`(`int` v0 , `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBooleanObject:(IIII)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `toBooleanObject`(`java.lang.Integer` v0 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBooleanObject:(Ljava/lang/Integer;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `toBooleanObject`(`java.lang.Integer` v1 @kind object, `java.lang.Integer` v2 @kind object, `java.lang.Integer` v3 @kind object, `java.lang.Integer` v4 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBooleanObject:(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `toBooleanObject`(`java.lang.String` v16 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `toBooleanObject`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toBooleanObject:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `toInteger`(`java.lang.Boolean` v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toInteger:(Ljava/lang/Boolean;III)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `toInteger`(`boolean` v0 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toInteger:(Z)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `toInteger`(`boolean` v0 , `int` v1 , `int` v2 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toInteger:(ZII)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer` `toIntegerObject`(`java.lang.Boolean` v0 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toIntegerObject:(Ljava/lang/Boolean;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer` `toIntegerObject`(`java.lang.Boolean` v0 @kind object, `java.lang.Integer` v1 @kind object, `java.lang.Integer` v2 @kind object, `java.lang.Integer` v3 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toIntegerObject:(Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer` `toIntegerObject`(`boolean` v0 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toIntegerObject:(Z)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer` `toIntegerObject`(`boolean` v0 , `java.lang.Integer` v1 @kind object, `java.lang.Integer` v2 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toIntegerObject:(ZLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`java.lang.Boolean` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`boolean` v0 , `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toStringOnOff`(`java.lang.Boolean` v3 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toStringOnOff:(Ljava/lang/Boolean;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toStringOnOff`(`boolean` v2 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toStringOnOff:(Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toStringTrueFalse`(`java.lang.Boolean` v3 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toStringTrueFalse:(Ljava/lang/Boolean;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toStringTrueFalse`(`boolean` v2 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toStringTrueFalse:(Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toStringYesNo`(`java.lang.Boolean` v3 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toStringYesNo:(Ljava/lang/Boolean;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toStringYesNo`(`boolean` v2 ) @signature `Lorg/apache/commons/lang3/BooleanUtils;.toStringYesNo:(Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean` `xor`(`java.lang.Boolean`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.xor:([Ljava/lang/Boolean;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `xor`(`boolean`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/BooleanUtils;.xor:([Z)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
