record `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$c` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$c` v0 @kind this) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$c` v0 @kind this, `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$a` v1 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$c;.<init>:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `long` `a`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker` v0 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$c;.a:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `b`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$c` v2 @kind this, `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker` v3 @kind object, `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` v4 @kind object, `long` v5 ) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$c;.b:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$b;J)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `c`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker` v0 @kind object, `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` v1 @kind object, `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` v2 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$c;.c:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$b;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$b;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
