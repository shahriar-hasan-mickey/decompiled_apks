record `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` @kind class @AccessFlag  {
  `int` `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b.a` @AccessFlag PRIVATE_FINAL;
  `long` `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` v0 @kind this, `int` v1 , `long` v2 ) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$b;.<init>:(IJ)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `long` `a`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` v2 @kind this) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$b;.a:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `b`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` v1 @kind this) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$b;.b:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` `c`(`org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$b` v4 @kind this, `int` v5 ) @signature `Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$b;.c:(I)Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$b;` @AccessFlag PUBLIC {

  # return;
}
