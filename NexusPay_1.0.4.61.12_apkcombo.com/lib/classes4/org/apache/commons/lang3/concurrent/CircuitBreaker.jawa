record `org.apache.commons.lang3.concurrent.CircuitBreaker` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `boolean` `checkState`() @signature `Lorg/apache/commons/lang3/concurrent/CircuitBreaker;.checkState:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `close`() @signature `Lorg/apache/commons/lang3/concurrent/CircuitBreaker;.close:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `incrementAndCheckState`(`java.lang.Object` v0 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/CircuitBreaker;.incrementAndCheckState:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isClosed`() @signature `Lorg/apache/commons/lang3/concurrent/CircuitBreaker;.isClosed:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isOpen`() @signature `Lorg/apache/commons/lang3/concurrent/CircuitBreaker;.isOpen:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `open`() @signature `Lorg/apache/commons/lang3/concurrent/CircuitBreaker;.open:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
