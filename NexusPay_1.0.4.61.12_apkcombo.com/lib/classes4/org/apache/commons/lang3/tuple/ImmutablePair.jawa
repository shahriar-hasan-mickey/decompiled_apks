record `org.apache.commons.lang3.tuple.ImmutablePair` @kind class @AccessFlag PUBLIC_FINAL extends `org.apache.commons.lang3.tuple.Pair` @kind class {
  `java.lang.Object` `org.apache.commons.lang3.tuple.ImmutablePair.left` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `org.apache.commons.lang3.tuple.ImmutablePair.right` @AccessFlag PUBLIC_FINAL;
}
global `org.apache.commons.lang3.tuple.ImmutablePair`[] `@@org.apache.commons.lang3.tuple.ImmutablePair.EMPTY_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.apache.commons.lang3.tuple.ImmutablePair` `@@org.apache.commons.lang3.tuple.ImmutablePair.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.apache.commons.lang3.tuple.ImmutablePair.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.tuple.ImmutablePair` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.tuple.ImmutablePair`[] `emptyArray`() @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.emptyArray:()[Lorg/apache/commons/lang3/tuple/ImmutablePair;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.tuple.Pair` `left`(`java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.left:(Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Pair;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.tuple.ImmutablePair` `nullPair`() @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.nullPair:()Lorg/apache/commons/lang3/tuple/ImmutablePair;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.tuple.ImmutablePair` `of`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/ImmutablePair;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.tuple.ImmutablePair` `of`(`java.util.Map$Entry` v2 @kind object) @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.of:(Ljava/util/Map$Entry;)Lorg/apache/commons/lang3/tuple/ImmutablePair;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.tuple.Pair` `right`(`java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.right:(Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Pair;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getLeft`(`org.apache.commons.lang3.tuple.ImmutablePair` v1 @kind this) @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.getLeft:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getRight`(`org.apache.commons.lang3.tuple.ImmutablePair` v1 @kind this) @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.getRight:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `setValue`(`org.apache.commons.lang3.tuple.ImmutablePair` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/tuple/ImmutablePair;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
