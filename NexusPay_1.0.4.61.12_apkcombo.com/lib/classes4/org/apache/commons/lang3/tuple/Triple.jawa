record `org.apache.commons.lang3.tuple.Triple` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
}
global `org.apache.commons.lang3.tuple.Triple`[] `@@org.apache.commons.lang3.tuple.Triple.EMPTY_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.apache.commons.lang3.tuple.Triple.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/tuple/Triple;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.tuple.Triple` v0 @kind this) @signature `Lorg/apache/commons/lang3/tuple/Triple;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.tuple.Triple`[] `emptyArray`() @signature `Lorg/apache/commons/lang3/tuple/Triple;.emptyArray:()[Lorg/apache/commons/lang3/tuple/Triple;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.tuple.Triple` `of`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/tuple/Triple;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Triple;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.tuple.Triple` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/tuple/Triple;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.tuple.Triple` v3 @kind this, `org.apache.commons.lang3.tuple.Triple` v4 @kind object) @signature `Lorg/apache/commons/lang3/tuple/Triple;.compareTo:(Lorg/apache/commons/lang3/tuple/Triple;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.tuple.Triple` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/apache/commons/lang3/tuple/Triple;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getLeft`() @signature `Lorg/apache/commons/lang3/tuple/Triple;.getLeft:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getMiddle`() @signature `Lorg/apache/commons/lang3/tuple/Triple;.getMiddle:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getRight`() @signature `Lorg/apache/commons/lang3/tuple/Triple;.getRight:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.tuple.Triple` v2 @kind this) @signature `Lorg/apache/commons/lang3/tuple/Triple;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.tuple.Triple` v3 @kind this) @signature `Lorg/apache/commons/lang3/tuple/Triple;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.tuple.Triple` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/tuple/Triple;.toString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
