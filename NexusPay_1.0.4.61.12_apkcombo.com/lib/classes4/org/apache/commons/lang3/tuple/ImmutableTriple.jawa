record `org.apache.commons.lang3.tuple.ImmutableTriple` @kind class @AccessFlag PUBLIC_FINAL extends `org.apache.commons.lang3.tuple.Triple` @kind class {
  `java.lang.Object` `org.apache.commons.lang3.tuple.ImmutableTriple.left` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `org.apache.commons.lang3.tuple.ImmutableTriple.middle` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `org.apache.commons.lang3.tuple.ImmutableTriple.right` @AccessFlag PUBLIC_FINAL;
}
global `org.apache.commons.lang3.tuple.ImmutableTriple`[] `@@org.apache.commons.lang3.tuple.ImmutableTriple.EMPTY_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.apache.commons.lang3.tuple.ImmutableTriple` `@@org.apache.commons.lang3.tuple.ImmutableTriple.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.apache.commons.lang3.tuple.ImmutableTriple.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/tuple/ImmutableTriple;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.tuple.ImmutableTriple` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/tuple/ImmutableTriple;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.tuple.ImmutableTriple`[] `emptyArray`() @signature `Lorg/apache/commons/lang3/tuple/ImmutableTriple;.emptyArray:()[Lorg/apache/commons/lang3/tuple/ImmutableTriple;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.tuple.ImmutableTriple` `nullTriple`() @signature `Lorg/apache/commons/lang3/tuple/ImmutableTriple;.nullTriple:()Lorg/apache/commons/lang3/tuple/ImmutableTriple;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.tuple.ImmutableTriple` `of`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/tuple/ImmutableTriple;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/ImmutableTriple;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getLeft`(`org.apache.commons.lang3.tuple.ImmutableTriple` v1 @kind this) @signature `Lorg/apache/commons/lang3/tuple/ImmutableTriple;.getLeft:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getMiddle`(`org.apache.commons.lang3.tuple.ImmutableTriple` v1 @kind this) @signature `Lorg/apache/commons/lang3/tuple/ImmutableTriple;.getMiddle:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getRight`(`org.apache.commons.lang3.tuple.ImmutableTriple` v1 @kind this) @signature `Lorg/apache/commons/lang3/tuple/ImmutableTriple;.getRight:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
