record `org.apache.commons.lang3.Functions` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.apache.commons.lang3.Functions` v0 @kind this) @signature `Lorg/apache/commons/lang3/Functions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`org.apache.commons.lang3.function.FailableBooleanSupplier` v0 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.a:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.Functions$FailableBiConsumer` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.accept:(Lorg/apache/commons/lang3/Functions$FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.Functions$FailableConsumer` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.accept:(Lorg/apache/commons/lang3/Functions$FailableConsumer;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `apply`(`org.apache.commons.lang3.Functions$FailableBiFunction` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.apply:(Lorg/apache/commons/lang3/Functions$FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `apply`(`org.apache.commons.lang3.Functions$FailableFunction` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.apply:(Lorg/apache/commons/lang3/Functions$FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.BiConsumer` `asBiConsumer`(`org.apache.commons.lang3.Functions$FailableBiConsumer` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asBiConsumer:(Lorg/apache/commons/lang3/Functions$FailableBiConsumer;)Ljava/util/function/BiConsumer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.BiFunction` `asBiFunction`(`org.apache.commons.lang3.Functions$FailableBiFunction` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asBiFunction:(Lorg/apache/commons/lang3/Functions$FailableBiFunction;)Ljava/util/function/BiFunction;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.BiPredicate` `asBiPredicate`(`org.apache.commons.lang3.Functions$FailableBiPredicate` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asBiPredicate:(Lorg/apache/commons/lang3/Functions$FailableBiPredicate;)Ljava/util/function/BiPredicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.Callable` `asCallable`(`org.apache.commons.lang3.Functions$FailableCallable` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asCallable:(Lorg/apache/commons/lang3/Functions$FailableCallable;)Ljava/util/concurrent/Callable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Consumer` `asConsumer`(`org.apache.commons.lang3.Functions$FailableConsumer` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asConsumer:(Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Function` `asFunction`(`org.apache.commons.lang3.Functions$FailableFunction` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asFunction:(Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Predicate` `asPredicate`(`org.apache.commons.lang3.Functions$FailablePredicate` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Runnable` `asRunnable`(`org.apache.commons.lang3.Functions$FailableRunnable` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asRunnable:(Lorg/apache/commons/lang3/Functions$FailableRunnable;)Ljava/lang/Runnable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Supplier` `asSupplier`(`org.apache.commons.lang3.Functions$FailableSupplier` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.asSupplier:(Lorg/apache/commons/lang3/Functions$FailableSupplier;)Ljava/util/function/Supplier;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `b`(`org.apache.commons.lang3.Functions$FailableBiConsumer` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.b:(Lorg/apache/commons/lang3/Functions$FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`org.apache.commons.lang3.Functions$FailableConsumer` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.c:(Lorg/apache/commons/lang3/Functions$FailableConsumer;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `call`(`org.apache.commons.lang3.Functions$FailableCallable` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.call:(Lorg/apache/commons/lang3/Functions$FailableCallable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `d`(`org.apache.commons.lang3.Functions$FailableBiFunction` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.d:(Lorg/apache/commons/lang3/Functions$FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `e`(`org.apache.commons.lang3.Functions$FailableFunction` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.e:(Lorg/apache/commons/lang3/Functions$FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `f`(`org.apache.commons.lang3.Functions$FailableBiConsumer` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.f:(Lorg/apache/commons/lang3/Functions$FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `g`(`org.apache.commons.lang3.Functions$FailableBiFunction` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.g:(Lorg/apache/commons/lang3/Functions$FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `get`(`org.apache.commons.lang3.Functions$FailableSupplier` v0 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.get:(Lorg/apache/commons/lang3/Functions$FailableSupplier;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `h`(`org.apache.commons.lang3.Functions$FailableBiPredicate` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.h:(Lorg/apache/commons/lang3/Functions$FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `i`(`org.apache.commons.lang3.Functions$FailableCallable` v0 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.i:(Lorg/apache/commons/lang3/Functions$FailableCallable;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `j`(`org.apache.commons.lang3.Functions$FailableConsumer` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.j:(Lorg/apache/commons/lang3/Functions$FailableConsumer;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `k`(`org.apache.commons.lang3.Functions$FailableFunction` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.k:(Lorg/apache/commons/lang3/Functions$FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `l`(`org.apache.commons.lang3.Functions$FailablePredicate` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.l:(Lorg/apache/commons/lang3/Functions$FailablePredicate;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `m`(`org.apache.commons.lang3.Functions$FailableRunnable` v0 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.m:(Lorg/apache/commons/lang3/Functions$FailableRunnable;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `n`(`org.apache.commons.lang3.Functions$FailableSupplier` v0 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.n:(Lorg/apache/commons/lang3/Functions$FailableSupplier;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `o`(`org.apache.commons.lang3.Functions$FailableBiPredicate` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.o:(Lorg/apache/commons/lang3/Functions$FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `p`(`org.apache.commons.lang3.Functions$FailablePredicate` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.p:(Lorg/apache/commons/lang3/Functions$FailablePredicate;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.RuntimeException` `rethrow`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `run`(`org.apache.commons.lang3.Functions$FailableRunnable` v0 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.run:(Lorg/apache/commons/lang3/Functions$FailableRunnable;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.Streams$FailableStream` `stream`(`java.util.Collection` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.stream:(Ljava/util/Collection;)Lorg/apache/commons/lang3/Streams$FailableStream;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.Streams$FailableStream` `stream`(`java.util.stream.Stream` v1 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.stream:(Ljava/util/stream/Stream;)Lorg/apache/commons/lang3/Streams$FailableStream;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `test`(`org.apache.commons.lang3.Functions$FailableBiPredicate` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.test:(Lorg/apache/commons/lang3/Functions$FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `test`(`org.apache.commons.lang3.Functions$FailablePredicate` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.test:(Lorg/apache/commons/lang3/Functions$FailablePredicate;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `tryWithResources`(`org.apache.commons.lang3.Functions$FailableRunnable` v5 @kind object, `org.apache.commons.lang3.Functions$FailableConsumer` v6 @kind object, `org.apache.commons.lang3.Functions$FailableRunnable`[] v7 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.tryWithResources:(Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `tryWithResources`(`org.apache.commons.lang3.Functions$FailableRunnable` v1 @kind object, `org.apache.commons.lang3.Functions$FailableRunnable`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/Functions;.tryWithResources:(Lorg/apache/commons/lang3/Functions$FailableRunnable;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
