record `org.apache.commons.lang3.function.FailableObjDoubleConsumer` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `org.apache.commons.lang3.function.FailableObjDoubleConsumer` `@@org.apache.commons.lang3.function.FailableObjDoubleConsumer.NOP` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `accept`(`java.lang.Object` v0 @kind object, `double` v1 ) @signature `Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;.accept:(Ljava/lang/Object;D)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
