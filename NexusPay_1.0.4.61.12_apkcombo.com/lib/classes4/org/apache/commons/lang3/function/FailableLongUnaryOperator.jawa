record `org.apache.commons.lang3.function.FailableLongUnaryOperator` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `org.apache.commons.lang3.function.FailableLongUnaryOperator` `@@org.apache.commons.lang3.function.FailableLongUnaryOperator.NOP` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/function/FailableLongUnaryOperator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongUnaryOperator` `andThen`(`org.apache.commons.lang3.function.FailableLongUnaryOperator` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/FailableLongUnaryOperator;.andThen:(Lorg/apache/commons/lang3/function/FailableLongUnaryOperator;)Lorg/apache/commons/lang3/function/FailableLongUnaryOperator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `applyAsLong`(`long` v0 ) @signature `Lorg/apache/commons/lang3/function/FailableLongUnaryOperator;.applyAsLong:(J)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongUnaryOperator` `compose`(`org.apache.commons.lang3.function.FailableLongUnaryOperator` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/FailableLongUnaryOperator;.compose:(Lorg/apache/commons/lang3/function/FailableLongUnaryOperator;)Lorg/apache/commons/lang3/function/FailableLongUnaryOperator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
