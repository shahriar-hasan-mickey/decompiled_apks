record `org.apache.commons.lang3.function.Failable` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.apache.commons.lang3.function.Failable` v0 @kind this) @signature `Lorg/apache/commons/lang3/function/Failable;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.apache.commons.lang3.function.FailableBiConsumer` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.a:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.function.FailableBiConsumer` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.function.FailableConsumer` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.function.FailableDoubleConsumer` v1 @kind object, `double` v2 ) @signature `Lorg/apache/commons/lang3/function/Failable;.accept:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.function.FailableIntConsumer` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/function/Failable;.accept:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.function.FailableLongConsumer` v1 @kind object, `long` v2 ) @signature `Lorg/apache/commons/lang3/function/Failable;.accept:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `apply`(`org.apache.commons.lang3.function.FailableBiFunction` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `apply`(`org.apache.commons.lang3.function.FailableFunction` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.apply:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `applyAsDouble`(`org.apache.commons.lang3.function.FailableDoubleBinaryOperator` v7 @kind object, `double` v8 , `double` v10 ) @signature `Lorg/apache/commons/lang3/function/Failable;.applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.BiConsumer` `asBiConsumer`(`org.apache.commons.lang3.function.FailableBiConsumer` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asBiConsumer:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.BiFunction` `asBiFunction`(`org.apache.commons.lang3.function.FailableBiFunction` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asBiFunction:(Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.BiPredicate` `asBiPredicate`(`org.apache.commons.lang3.function.FailableBiPredicate` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asBiPredicate:(Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.Callable` `asCallable`(`org.apache.commons.lang3.function.FailableCallable` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asCallable:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Consumer` `asConsumer`(`org.apache.commons.lang3.function.FailableConsumer` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asConsumer:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Function` `asFunction`(`org.apache.commons.lang3.function.FailableFunction` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asFunction:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Predicate` `asPredicate`(`org.apache.commons.lang3.function.FailablePredicate` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Runnable` `asRunnable`(`org.apache.commons.lang3.function.FailableRunnable` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asRunnable:(Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.function.Supplier` `asSupplier`(`org.apache.commons.lang3.function.FailableSupplier` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.asSupplier:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `b`(`org.apache.commons.lang3.function.FailableConsumer` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.b:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`org.apache.commons.lang3.function.FailableDoubleConsumer` v0 @kind object, `double` v1 ) @signature `Lorg/apache/commons/lang3/function/Failable;.c:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `call`(`org.apache.commons.lang3.function.FailableCallable` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `d`(`org.apache.commons.lang3.function.FailableIntConsumer` v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/function/Failable;.d:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `e`(`org.apache.commons.lang3.function.FailableLongConsumer` v0 @kind object, `long` v1 ) @signature `Lorg/apache/commons/lang3/function/Failable;.e:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `f`(`org.apache.commons.lang3.function.FailableBiFunction` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.f:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `g`(`org.apache.commons.lang3.function.FailableFunction` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.g:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `get`(`org.apache.commons.lang3.function.FailableSupplier` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `getAsBoolean`(`org.apache.commons.lang3.function.FailableBooleanSupplier` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `getAsDouble`(`org.apache.commons.lang3.function.FailableDoubleSupplier` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getAsInt`(`org.apache.commons.lang3.function.FailableIntSupplier` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.getAsInt:(Lorg/apache/commons/lang3/function/FailableIntSupplier;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `getAsLong`(`org.apache.commons.lang3.function.FailableLongSupplier` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.getAsLong:(Lorg/apache/commons/lang3/function/FailableLongSupplier;)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `getAsShort`(`org.apache.commons.lang3.function.FailableShortSupplier` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.getAsShort:(Lorg/apache/commons/lang3/function/FailableShortSupplier;)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `h`(`org.apache.commons.lang3.function.FailableDoubleBinaryOperator` v0 @kind object, `double` v1 , `double` v3 ) @signature `Lorg/apache/commons/lang3/function/Failable;.h:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `i`(`org.apache.commons.lang3.function.FailableBiConsumer` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.i:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `j`(`org.apache.commons.lang3.function.FailableBiFunction` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.j:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `k`(`org.apache.commons.lang3.function.FailableBiPredicate` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.k:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `l`(`org.apache.commons.lang3.function.FailableCallable` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.l:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `m`(`org.apache.commons.lang3.function.FailableConsumer` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.m:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `n`(`org.apache.commons.lang3.function.FailableFunction` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.n:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `o`(`org.apache.commons.lang3.function.FailablePredicate` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.o:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `p`(`org.apache.commons.lang3.function.FailableRunnable` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.p:(Lorg/apache/commons/lang3/function/FailableRunnable;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `q`(`org.apache.commons.lang3.function.FailableSupplier` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.q:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `r`(`org.apache.commons.lang3.function.FailableBiPredicate` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.r:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.RuntimeException` `rethrow`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `run`(`org.apache.commons.lang3.function.FailableRunnable` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `s`(`org.apache.commons.lang3.function.FailablePredicate` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.s:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `org.apache.commons.lang3.stream.Streams$FailableStream` `stream`(`java.util.Collection` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.stream:(Ljava/util/Collection;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.stream.Streams$FailableStream` `stream`(`java.util.stream.Stream` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.stream:(Ljava/util/stream/Stream;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `test`(`org.apache.commons.lang3.function.FailableBiPredicate` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `test`(`org.apache.commons.lang3.function.FailablePredicate` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.test:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `tryWithResources`(`org.apache.commons.lang3.function.FailableRunnable` v5 @kind object, `org.apache.commons.lang3.function.FailableConsumer` v6 @kind object, `org.apache.commons.lang3.function.FailableRunnable`[] v7 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `tryWithResources`(`org.apache.commons.lang3.function.FailableRunnable` v1 @kind object, `org.apache.commons.lang3.function.FailableRunnable`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/function/Failable;.tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;[Lorg/apache/commons/lang3/function/FailableRunnable;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
