record `org.apache.commons.lang3.function.y0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `org.apache.commons.lang3.function.FailableIntPredicate` @kind interface {
  `org.apache.commons.lang3.function.FailableIntPredicate` `org.apache.commons.lang3.function.y0.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `org.apache.commons.lang3.function.FailableIntPredicate` `org.apache.commons.lang3.function.y0.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.apache.commons.lang3.function.y0` v0 @kind this, `org.apache.commons.lang3.function.FailableIntPredicate` v1 @kind object, `org.apache.commons.lang3.function.FailableIntPredicate` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/y0;.<init>:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableIntPredicate` `and`(`org.apache.commons.lang3.function.y0` v0 @kind this, `org.apache.commons.lang3.function.FailableIntPredicate` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/y0;.and:(Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableIntPredicate` `negate`(`org.apache.commons.lang3.function.y0` v1 @kind this) @signature `Lorg/apache/commons/lang3/function/y0;.negate:()Lorg/apache/commons/lang3/function/FailableIntPredicate;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableIntPredicate` `or`(`org.apache.commons.lang3.function.y0` v0 @kind this, `org.apache.commons.lang3.function.FailableIntPredicate` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/y0;.or:(Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `test`(`org.apache.commons.lang3.function.y0` v2 @kind this, `int` v3 ) @signature `Lorg/apache/commons/lang3/function/y0;.test:(I)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
