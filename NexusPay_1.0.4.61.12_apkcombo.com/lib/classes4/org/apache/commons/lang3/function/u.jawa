record `org.apache.commons.lang3.function.u` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `org.apache.commons.lang3.function.FailableBiConsumer` @kind interface {
}
global `org.apache.commons.lang3.function.u` `@@org.apache.commons.lang3.function.u.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/function/u;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.function.u` v0 @kind this) @signature `Lorg/apache/commons/lang3/function/u;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.function.u` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/u;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableBiConsumer` `andThen`(`org.apache.commons.lang3.function.u` v0 @kind this, `org.apache.commons.lang3.function.FailableBiConsumer` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/u;.andThen:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Lorg/apache/commons/lang3/function/FailableBiConsumer;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
