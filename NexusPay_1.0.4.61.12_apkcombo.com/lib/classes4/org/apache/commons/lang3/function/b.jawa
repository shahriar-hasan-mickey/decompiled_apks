record `org.apache.commons.lang3.function.b` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `org.apache.commons.lang3.function.FailableDoubleSupplier` @kind interface {
  `org.apache.commons.lang3.function.FailableDoubleBinaryOperator` `org.apache.commons.lang3.function.b.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `double` `org.apache.commons.lang3.function.b.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `double` `org.apache.commons.lang3.function.b.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.apache.commons.lang3.function.b` v0 @kind this, `org.apache.commons.lang3.function.FailableDoubleBinaryOperator` v1 @kind object, `double` v2 , `double` v4 ) @signature `Lorg/apache/commons/lang3/function/b;.<init>:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `double` `getAsDouble`(`org.apache.commons.lang3.function.b` v5 @kind this) @signature `Lorg/apache/commons/lang3/function/b;.getAsDouble:()D` @AccessFlag PUBLIC_FINAL {

  # return;
}
