record `org.apache.commons.lang3.function.i1` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `org.apache.commons.lang3.function.FailableLongConsumer` @kind interface {
  `org.apache.commons.lang3.function.FailableLongConsumer` `org.apache.commons.lang3.function.i1.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `org.apache.commons.lang3.function.FailableLongConsumer` `org.apache.commons.lang3.function.i1.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.apache.commons.lang3.function.i1` v0 @kind this, `org.apache.commons.lang3.function.FailableLongConsumer` v1 @kind object, `org.apache.commons.lang3.function.FailableLongConsumer` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/i1;.<init>:(Lorg/apache/commons/lang3/function/FailableLongConsumer;Lorg/apache/commons/lang3/function/FailableLongConsumer;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `accept`(`org.apache.commons.lang3.function.i1` v2 @kind this, `long` v3 ) @signature `Lorg/apache/commons/lang3/function/i1;.accept:(J)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongConsumer` `andThen`(`org.apache.commons.lang3.function.i1` v0 @kind this, `org.apache.commons.lang3.function.FailableLongConsumer` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/i1;.andThen:(Lorg/apache/commons/lang3/function/FailableLongConsumer;)Lorg/apache/commons/lang3/function/FailableLongConsumer;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
