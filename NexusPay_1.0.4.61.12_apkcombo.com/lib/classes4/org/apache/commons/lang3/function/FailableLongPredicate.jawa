record `org.apache.commons.lang3.function.FailableLongPredicate` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `org.apache.commons.lang3.function.FailableLongPredicate` `@@org.apache.commons.lang3.function.FailableLongPredicate.FALSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.apache.commons.lang3.function.FailableLongPredicate` `@@org.apache.commons.lang3.function.FailableLongPredicate.TRUE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/function/FailableLongPredicate;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongPredicate` `and`(`org.apache.commons.lang3.function.FailableLongPredicate` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/FailableLongPredicate;.and:(Lorg/apache/commons/lang3/function/FailableLongPredicate;)Lorg/apache/commons/lang3/function/FailableLongPredicate;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongPredicate` `negate`() @signature `Lorg/apache/commons/lang3/function/FailableLongPredicate;.negate:()Lorg/apache/commons/lang3/function/FailableLongPredicate;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongPredicate` `or`(`org.apache.commons.lang3.function.FailableLongPredicate` v0 @kind object) @signature `Lorg/apache/commons/lang3/function/FailableLongPredicate;.or:(Lorg/apache/commons/lang3/function/FailableLongPredicate;)Lorg/apache/commons/lang3/function/FailableLongPredicate;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `test`(`long` v0 ) @signature `Lorg/apache/commons/lang3/function/FailableLongPredicate;.test:(J)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
