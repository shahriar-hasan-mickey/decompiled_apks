record `org.apache.commons.lang3.function.k1` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `org.apache.commons.lang3.function.FailableLongPredicate` @kind interface {
}
global `org.apache.commons.lang3.function.k1` `@@org.apache.commons.lang3.function.k1.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/function/k1;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.function.k1` v0 @kind this) @signature `Lorg/apache/commons/lang3/function/k1;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongPredicate` `and`(`org.apache.commons.lang3.function.k1` v0 @kind this, `org.apache.commons.lang3.function.FailableLongPredicate` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/k1;.and:(Lorg/apache/commons/lang3/function/FailableLongPredicate;)Lorg/apache/commons/lang3/function/FailableLongPredicate;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongPredicate` `negate`(`org.apache.commons.lang3.function.k1` v1 @kind this) @signature `Lorg/apache/commons/lang3/function/k1;.negate:()Lorg/apache/commons/lang3/function/FailableLongPredicate;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableLongPredicate` `or`(`org.apache.commons.lang3.function.k1` v0 @kind this, `org.apache.commons.lang3.function.FailableLongPredicate` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/k1;.or:(Lorg/apache/commons/lang3/function/FailableLongPredicate;)Lorg/apache/commons/lang3/function/FailableLongPredicate;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `test`(`org.apache.commons.lang3.function.k1` v0 @kind this, `long` v1 ) @signature `Lorg/apache/commons/lang3/function/k1;.test:(J)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
