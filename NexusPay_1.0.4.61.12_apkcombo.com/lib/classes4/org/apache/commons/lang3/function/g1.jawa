record `org.apache.commons.lang3.function.g1` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `org.apache.commons.lang3.function.FailableIntUnaryOperator` @kind interface {
  `org.apache.commons.lang3.function.FailableIntUnaryOperator` `org.apache.commons.lang3.function.g1.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `org.apache.commons.lang3.function.FailableIntUnaryOperator` `org.apache.commons.lang3.function.g1.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.apache.commons.lang3.function.g1` v0 @kind this, `org.apache.commons.lang3.function.FailableIntUnaryOperator` v1 @kind object, `org.apache.commons.lang3.function.FailableIntUnaryOperator` v2 @kind object) @signature `Lorg/apache/commons/lang3/function/g1;.<init>:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableIntUnaryOperator` `andThen`(`org.apache.commons.lang3.function.g1` v0 @kind this, `org.apache.commons.lang3.function.FailableIntUnaryOperator` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/g1;.andThen:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `applyAsInt`(`org.apache.commons.lang3.function.g1` v2 @kind this, `int` v3 ) @signature `Lorg/apache/commons/lang3/function/g1;.applyAsInt:(I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableIntUnaryOperator` `compose`(`org.apache.commons.lang3.function.g1` v0 @kind this, `org.apache.commons.lang3.function.FailableIntUnaryOperator` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/g1;.compose:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
