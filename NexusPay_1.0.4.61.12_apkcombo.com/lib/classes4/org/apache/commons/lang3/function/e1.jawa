record `org.apache.commons.lang3.function.e1` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `org.apache.commons.lang3.function.FailableIntUnaryOperator` @kind interface {
}
global `org.apache.commons.lang3.function.e1` `@@org.apache.commons.lang3.function.e1.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/function/e1;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.function.e1` v0 @kind this) @signature `Lorg/apache/commons/lang3/function/e1;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableIntUnaryOperator` `andThen`(`org.apache.commons.lang3.function.e1` v0 @kind this, `org.apache.commons.lang3.function.FailableIntUnaryOperator` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/e1;.andThen:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `applyAsInt`(`org.apache.commons.lang3.function.e1` v0 @kind this, `int` v1 ) @signature `Lorg/apache/commons/lang3/function/e1;.applyAsInt:(I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `org.apache.commons.lang3.function.FailableIntUnaryOperator` `compose`(`org.apache.commons.lang3.function.e1` v0 @kind this, `org.apache.commons.lang3.function.FailableIntUnaryOperator` v1 @kind object) @signature `Lorg/apache/commons/lang3/function/e1;.compose:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
