record `org.apache.commons.lang3.math.NumberUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.Byte` `@@org.apache.commons.lang3.math.NumberUtils.BYTE_MINUS_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Byte` `@@org.apache.commons.lang3.math.NumberUtils.BYTE_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Byte` `@@org.apache.commons.lang3.math.NumberUtils.BYTE_ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Double` `@@org.apache.commons.lang3.math.NumberUtils.DOUBLE_MINUS_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Double` `@@org.apache.commons.lang3.math.NumberUtils.DOUBLE_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Double` `@@org.apache.commons.lang3.math.NumberUtils.DOUBLE_ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Float` `@@org.apache.commons.lang3.math.NumberUtils.FLOAT_MINUS_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Float` `@@org.apache.commons.lang3.math.NumberUtils.FLOAT_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Float` `@@org.apache.commons.lang3.math.NumberUtils.FLOAT_ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Integer` `@@org.apache.commons.lang3.math.NumberUtils.INTEGER_MINUS_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Integer` `@@org.apache.commons.lang3.math.NumberUtils.INTEGER_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Integer` `@@org.apache.commons.lang3.math.NumberUtils.INTEGER_TWO` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Integer` `@@org.apache.commons.lang3.math.NumberUtils.INTEGER_ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Long` `@@org.apache.commons.lang3.math.NumberUtils.LONG_INT_MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Long` `@@org.apache.commons.lang3.math.NumberUtils.LONG_INT_MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Long` `@@org.apache.commons.lang3.math.NumberUtils.LONG_MINUS_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Long` `@@org.apache.commons.lang3.math.NumberUtils.LONG_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Long` `@@org.apache.commons.lang3.math.NumberUtils.LONG_ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Short` `@@org.apache.commons.lang3.math.NumberUtils.SHORT_MINUS_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Short` `@@org.apache.commons.lang3.math.NumberUtils.SHORT_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Short` `@@org.apache.commons.lang3.math.NumberUtils.SHORT_ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/math/NumberUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.math.NumberUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `b`(`java.lang.String` v4 @kind object, `int` v5 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.b:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `c`(`java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.c:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `compare`(`byte` v0 , `byte` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.compare:(BB)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`int` v0 , `int` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.compare:(II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`long` v1 , `long` v3 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.compare:(JJ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`short` v0 , `short` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.compare:(SS)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `createBigDecimal`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `createBigInteger`(`java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Double` `createDouble`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.createDouble:(Ljava/lang/String;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Float` `createFloat`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.createFloat:(Ljava/lang/String;)Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer` `createInteger`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Long` `createLong`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.createLong:(Ljava/lang/String;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Number` `createNumber`(`java.lang.String` v15 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.createNumber:(Ljava/lang/String;)Ljava/lang/Number;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `d`(`java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.d:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `e`(`java.lang.String` v5 @kind object, `int` v6 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.e:(Ljava/lang/String;I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isCreatable`(`java.lang.String` v16 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.isCreatable:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isDigits`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.isDigits:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNumber`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.isNumber:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isParsable`(`java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.isParsable:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `max`(`byte` v0 , `byte` v1 , `byte` v2 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:(BBB)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `max`(`byte`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:([B)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `max`(`double` v0 , `double` v2 , `double` v4 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:(DDD)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `max`(`double`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:([D)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float` `max`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:(FFF)F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float` `max`(`float`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:([F)F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `max`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:(III)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `max`(`int`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:([I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `max`(`long` v1 , `long` v3 , `long` v5 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:(JJJ)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `max`(`long`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:([J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `max`(`short` v0 , `short` v1 , `short` v2 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:(SSS)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `max`(`short`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.max:([S)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `min`(`byte` v0 , `byte` v1 , `byte` v2 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:(BBB)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `min`(`byte`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:([B)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `min`(`double` v0 , `double` v2 , `double` v4 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:(DDD)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `min`(`double`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:([D)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float` `min`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:(FFF)F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float` `min`(`float`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:([F)F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `min`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:(III)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `min`(`int`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:([I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `min`(`long` v1 , `long` v3 , `long` v5 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:(JJJ)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `min`(`long`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:([J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `min`(`short` v0 , `short` v1 , `short` v2 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:(SSS)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `min`(`short`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.min:([S)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `toByte`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toByte:(Ljava/lang/String;)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `toByte`(`java.lang.String` v0 @kind object, `byte` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toByte:(Ljava/lang/String;B)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `toDouble`(`java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toDouble:(Ljava/lang/String;)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `toDouble`(`java.lang.String` v0 @kind object, `double` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toDouble:(Ljava/lang/String;D)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `toDouble`(`java.math.BigDecimal` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toDouble:(Ljava/math/BigDecimal;)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `toDouble`(`java.math.BigDecimal` v0 @kind object, `double` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toDouble:(Ljava/math/BigDecimal;D)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float` `toFloat`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toFloat:(Ljava/lang/String;)F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float` `toFloat`(`java.lang.String` v0 @kind object, `float` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toFloat:(Ljava/lang/String;F)F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `toInt`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toInt:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `toInt`(`java.lang.String` v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toInt:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `toLong`(`java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toLong:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `toLong`(`java.lang.String` v0 @kind object, `long` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toLong:(Ljava/lang/String;J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `toScaledBigDecimal`(`java.lang.Double` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toScaledBigDecimal:(Ljava/lang/Double;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `toScaledBigDecimal`(`java.lang.Double` v2 @kind object, `int` v3 , `java.math.RoundingMode` v4 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `toScaledBigDecimal`(`java.lang.Float` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toScaledBigDecimal:(Ljava/lang/Float;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `toScaledBigDecimal`(`java.lang.Float` v2 @kind object, `int` v3 , `java.math.RoundingMode` v4 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `toScaledBigDecimal`(`java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toScaledBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `toScaledBigDecimal`(`java.lang.String` v0 @kind object, `int` v1 , `java.math.RoundingMode` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `toScaledBigDecimal`(`java.math.BigDecimal` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toScaledBigDecimal:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigDecimal` `toScaledBigDecimal`(`java.math.BigDecimal` v0 @kind object, `int` v1 , `java.math.RoundingMode` v2 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `toShort`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toShort:(Ljava/lang/String;)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `toShort`(`java.lang.String` v0 @kind object, `short` v1 ) @signature `Lorg/apache/commons/lang3/math/NumberUtils;.toShort:(Ljava/lang/String;S)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
