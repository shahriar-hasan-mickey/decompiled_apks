record `org.apache.commons.lang3.mutable.MutableFloat` @kind class @AccessFlag PUBLIC extends `java.lang.Number` @kind class, `java.lang.Comparable` @kind interface, `org.apache.commons.lang3.mutable.Mutable` @kind interface {
  `float` `org.apache.commons.lang3.mutable.MutableFloat.a` @AccessFlag PRIVATE;
}
global `long` `@@org.apache.commons.lang3.mutable.MutableFloat.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableFloat` v0 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableFloat` v0 @kind this, `float` v1 ) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.<init>:(F)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableFloat` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.<init>:(Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableFloat` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `float` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.add:(F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.add:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `addAndGet`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `float` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.addAndGet:(F)F` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `addAndGet`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.addAndGet:(Ljava/lang/Number;)F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.mutable.MutableFloat` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `org.apache.commons.lang3.mutable.MutableFloat` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.compareTo:(Lorg/apache/commons/lang3/mutable/MutableFloat;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `decrement`(`org.apache.commons.lang3.mutable.MutableFloat` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.decrement:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `decrementAndGet`(`org.apache.commons.lang3.mutable.MutableFloat` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.decrementAndGet:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `doubleValue`(`org.apache.commons.lang3.mutable.MutableFloat` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.doubleValue:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `floatValue`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.floatValue:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getAndAdd`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `float` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.getAndAdd:(F)F` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getAndAdd`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.getAndAdd:(Ljava/lang/Number;)F` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getAndDecrement`(`org.apache.commons.lang3.mutable.MutableFloat` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.getAndDecrement:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getAndIncrement`(`org.apache.commons.lang3.mutable.MutableFloat` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.getAndIncrement:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Float` `getValue`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.getValue:()Ljava/lang/Float;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `increment`(`org.apache.commons.lang3.mutable.MutableFloat` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.increment:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `incrementAndGet`(`org.apache.commons.lang3.mutable.MutableFloat` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.incrementAndGet:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `intValue`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.intValue:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isInfinite`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.isInfinite:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isNaN`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.isNaN:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `longValue`(`org.apache.commons.lang3.mutable.MutableFloat` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.longValue:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableFloat` v0 @kind this, `float` v1 ) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.setValue:(F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableFloat` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.setValue:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableFloat` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `subtract`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `float` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.subtract:(F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `subtract`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.subtract:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Float` `toFloat`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.toFloat:()Ljava/lang/Float;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.mutable.MutableFloat` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableFloat;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
