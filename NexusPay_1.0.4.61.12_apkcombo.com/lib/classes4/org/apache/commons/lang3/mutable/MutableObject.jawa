record `org.apache.commons.lang3.mutable.MutableObject` @kind class @AccessFlag PUBLIC extends `org.apache.commons.lang3.mutable.Mutable` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.Object` `org.apache.commons.lang3.mutable.MutableObject.a` @AccessFlag PRIVATE;
}
global `long` `@@org.apache.commons.lang3.mutable.MutableObject.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableObject` v0 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableObject;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableObject` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableObject;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.mutable.MutableObject` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableObject;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`org.apache.commons.lang3.mutable.MutableObject` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableObject;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.mutable.MutableObject` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableObject;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableObject` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableObject;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.mutable.MutableObject` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableObject;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
