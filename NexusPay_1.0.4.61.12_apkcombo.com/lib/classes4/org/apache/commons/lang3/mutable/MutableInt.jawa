record `org.apache.commons.lang3.mutable.MutableInt` @kind class @AccessFlag PUBLIC extends `java.lang.Number` @kind class, `java.lang.Comparable` @kind interface, `org.apache.commons.lang3.mutable.Mutable` @kind interface {
  `int` `org.apache.commons.lang3.mutable.MutableInt.a` @AccessFlag PRIVATE;
}
global `long` `@@org.apache.commons.lang3.mutable.MutableInt.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableInt` v0 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableInt` v0 @kind this, `int` v1 ) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableInt` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.<init>:(Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableInt` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `int` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.add:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.add:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `addAndGet`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `int` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.addAndGet:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `addAndGet`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.addAndGet:(Ljava/lang/Number;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.mutable.MutableInt` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `org.apache.commons.lang3.mutable.MutableInt` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `decrement`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.decrement:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `decrementAndGet`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.decrementAndGet:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `doubleValue`(`org.apache.commons.lang3.mutable.MutableInt` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.doubleValue:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.mutable.MutableInt` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `floatValue`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.floatValue:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getAndAdd`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `int` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.getAndAdd:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getAndAdd`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.getAndAdd:(Ljava/lang/Number;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getAndDecrement`(`org.apache.commons.lang3.mutable.MutableInt` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.getAndDecrement:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getAndIncrement`(`org.apache.commons.lang3.mutable.MutableInt` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.getAndIncrement:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Integer` `getValue`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.getValue:()Ljava/lang/Integer;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `increment`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.increment:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `incrementAndGet`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.incrementAndGet:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `intValue`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.intValue:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `longValue`(`org.apache.commons.lang3.mutable.MutableInt` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.longValue:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableInt` v0 @kind this, `int` v1 ) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.setValue:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableInt` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.setValue:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableInt` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `subtract`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `int` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.subtract:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `subtract`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.subtract:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Integer` `toInteger`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.toInteger:()Ljava/lang/Integer;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.mutable.MutableInt` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableInt;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
