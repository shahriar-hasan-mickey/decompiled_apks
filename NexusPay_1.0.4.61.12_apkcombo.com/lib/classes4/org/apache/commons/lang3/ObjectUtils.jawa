record `org.apache.commons.lang3.ObjectUtils` @kind class @AccessFlag PUBLIC {
}
global `org.apache.commons.lang3.ObjectUtils$Null` `@@org.apache.commons.lang3.ObjectUtils.NULL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/ObjectUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.ObjectUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/ObjectUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte` `CONST`(`byte` v0 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(B)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char` `CONST`(`char` v0 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(C)C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `CONST`(`double` v0 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(D)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float` `CONST`(`float` v0 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(F)F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `CONST`(`int` v0 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `CONST`(`long` v0 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `CONST`(`java.lang.Object` v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `CONST`(`short` v0 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(S)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `CONST`(`boolean` v0 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST:(Z)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `CONST_BYTE`(`int` v3 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST_BYTE:(I)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `CONST_SHORT`(`int` v3 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.CONST_SHORT:(I)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `allNotNull`(`java.lang.Object`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.allNotNull:([Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `allNull`(`java.lang.Object`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.allNull:([Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `anyNotNull`(`java.lang.Object`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.anyNotNull:([Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `anyNull`(`java.lang.Object`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.anyNull:([Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `clone`(`java.lang.Object` v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.clone:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `cloneIfPossible`(`java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.cloneIfPossible:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.compare:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`java.lang.Comparable` v2 @kind object, `java.lang.Comparable` v3 @kind object, `boolean` v4 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.compare:(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `defaultIfNull`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `firstNonNull`(`java.lang.Object`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.firstNonNull:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getFirstNonNull`(`java.util.function.Supplier`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.getFirstNonNull:([Ljava/util/function/Supplier;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getIfNull`(`java.lang.Object` v0 @kind object, `java.util.function.Supplier` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.getIfNull:(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCode`(`java.lang.Object` v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.hashCode:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCodeMulti`(`java.lang.Object`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.hashCodeMulti:([Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `identityToString`(`java.lang.Object` v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.identityToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `identityToString`(`java.lang.Appendable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.identityToString:(Ljava/lang/Appendable;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `identityToString`(`java.lang.StringBuffer` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.identityToString:(Ljava/lang/StringBuffer;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `identityToString`(`java.lang.StringBuilder` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.identityToString:(Ljava/lang/StringBuilder;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `identityToString`(`org.apache.commons.lang3.text.StrBuilder` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.identityToString:(Lorg/apache/commons/lang3/text/StrBuilder;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.isEmpty:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`java.lang.Object` v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.isNotEmpty:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Comparable` `max`(`java.lang.Comparable`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.max:([Ljava/lang/Comparable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Comparable` `median`(`java.lang.Comparable`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.median:([Ljava/lang/Comparable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `median`(`java.util.Comparator` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.median:(Ljava/util/Comparator;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Comparable` `min`(`java.lang.Comparable`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.min:([Ljava/lang/Comparable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `mode`(`java.lang.Object`[] v8 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.mode:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `notEqual`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.notEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `requireNonEmpty`(`java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.requireNonEmpty:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `requireNonEmpty`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.requireNonEmpty:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`java.lang.Object` v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.toString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`java.lang.Object` v0 @kind object, `java.util.function.Supplier` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.toString:(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `wait`(`java.lang.Object` v1 @kind object, `java.time.Duration` v2 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.wait:(Ljava/lang/Object;Ljava/time/Duration;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
