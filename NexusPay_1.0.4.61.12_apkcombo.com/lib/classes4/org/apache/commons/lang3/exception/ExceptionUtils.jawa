record `org.apache.commons.lang3.exception.ExceptionUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String`[] `@@org.apache.commons.lang3.exception.ExceptionUtils.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.exception.ExceptionUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Throwable` `a`(`java.lang.Throwable` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.a:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.List` `b`(`java.lang.Throwable` v6 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.b:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String`[] `c`(`java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.c:(Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `int` `d`(`java.lang.Throwable` v2 @kind object, `java.lang.Class` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.d:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Throwable` `e`(`java.lang.Throwable` v2 @kind object, `java.lang.Class` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.e:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `f`(`java.lang.Throwable` v0 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.f:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Throwable` `getCause`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Throwable` `getCause`(`java.lang.Throwable` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `getDefaultCauseMethodNames`() @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getDefaultCauseMethodNames:()[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `getMessage`(`java.lang.Throwable` v2 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Throwable` `getRootCause`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `getRootCauseMessage`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getRootCauseMessage:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `getRootCauseStackTrace`(`java.lang.Throwable` v7 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `getStackFrames`(`java.lang.Throwable` v0 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getStackFrames:(Ljava/lang/Throwable;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `getStackTrace`(`java.lang.Throwable` v3 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getThrowableCount`(`java.lang.Throwable` v0 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getThrowableCount:(Ljava/lang/Throwable;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.List` `getThrowableList`(`java.lang.Throwable` v2 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Throwable`[] `getThrowables`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `hasCause`(`java.lang.Throwable` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.hasCause:(Ljava/lang/Throwable;Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfThrowable`(`java.lang.Throwable` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.indexOfThrowable:(Ljava/lang/Throwable;Ljava/lang/Class;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfThrowable`(`java.lang.Throwable` v1 @kind object, `java.lang.Class` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.indexOfThrowable:(Ljava/lang/Throwable;Ljava/lang/Class;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfType`(`java.lang.Throwable` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.indexOfType:(Ljava/lang/Throwable;Ljava/lang/Class;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfType`(`java.lang.Throwable` v1 @kind object, `java.lang.Class` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.indexOfType:(Ljava/lang/Throwable;Ljava/lang/Class;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `printRootCauseStackTrace`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.printRootCauseStackTrace:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `printRootCauseStackTrace`(`java.lang.Throwable` v3 @kind object, `java.io.PrintStream` v4 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `printRootCauseStackTrace`(`java.lang.Throwable` v3 @kind object, `java.io.PrintWriter` v4 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintWriter;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `removeCommonFrames`(`java.util.List` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `rethrow`(`java.lang.Throwable` v0 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.rethrow:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Throwable` `throwableOfThrowable`(`java.lang.Throwable` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.throwableOfThrowable:(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Throwable` `throwableOfThrowable`(`java.lang.Throwable` v1 @kind object, `java.lang.Class` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.throwableOfThrowable:(Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Throwable` `throwableOfType`(`java.lang.Throwable` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.throwableOfType:(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Throwable` `throwableOfType`(`java.lang.Throwable` v1 @kind object, `java.lang.Class` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.throwableOfType:(Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `wrapAndThrow`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/exception/ExceptionUtils;.wrapAndThrow:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
