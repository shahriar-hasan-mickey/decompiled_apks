record `org.apache.commons.lang3.reflect.TypeUtils$d` @kind class @AccessFlag FINAL extends `java.lang.reflect.WildcardType` @kind interface {
  `java.lang.reflect.Type`[] `org.apache.commons.lang3.reflect.TypeUtils$d.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type`[] `org.apache.commons.lang3.reflect.TypeUtils$d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.apache.commons.lang3.reflect.TypeUtils$d` v1 @kind this, `java.lang.reflect.Type`[] v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$d;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.reflect.TypeUtils$d` v0 @kind this, `java.lang.reflect.Type`[] v1 @kind object, `java.lang.reflect.Type`[] v2 @kind object, `org.apache.commons.lang3.reflect.TypeUtils$a` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$d;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;Lorg/apache/commons/lang3/reflect/TypeUtils$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.reflect.TypeUtils$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.reflect.Type`[] `getLowerBounds`(`org.apache.commons.lang3.reflect.TypeUtils$d` v1 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$d;.getLowerBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.reflect.Type`[] `getUpperBounds`(`org.apache.commons.lang3.reflect.TypeUtils$d` v1 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$d;.getUpperBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.reflect.TypeUtils$d` v2 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$d;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.reflect.TypeUtils$d` v1 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
