record `org.apache.commons.lang3.reflect.MethodUtils` @kind class @AccessFlag PUBLIC {
}
global `java.util.Comparator` `@@org.apache.commons.lang3.reflect.MethodUtils.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.reflect.MethodUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`java.lang.Class`[] v7 @kind object, `java.lang.Class`[] v8 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.a:([Ljava/lang/Class;[Ljava/lang/Class;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.reflect.Method` `b`(`java.lang.Class` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.Class`[] v7 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.b:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.reflect.Method` `c`(`java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.c:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.List` `d`(`java.lang.Class` v6 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.d:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object`[] `e`(`java.lang.Object`[] v6 @kind object, `java.lang.Class`[] v7 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.e:([Ljava/lang/Object;[Ljava/lang/Class;)[Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `f`(`java.lang.String` v0 @kind object, `java.lang.reflect.Method` v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.f:(Ljava/lang/String;Ljava/lang/reflect/Method;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `g`(`java.lang.String` v0 @kind object, `java.lang.reflect.Method` v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.g:(Ljava/lang/String;Ljava/lang/reflect/Method;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.reflect.Method` `getAccessibleMethod`(`java.lang.Class` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getAccessibleMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Method` `getAccessibleMethod`(`java.lang.reflect.Method` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getAccessibleMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`java.lang.reflect.Method` v4 @kind object, `java.lang.Class` v5 @kind object, `boolean` v6 , `boolean` v7 ) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;ZZ)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Method` `getMatchingAccessibleMethod`(`java.lang.Class` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.Class`[] v7 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getMatchingAccessibleMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Method` `getMatchingMethod`(`java.lang.Class` v8 @kind object, `java.lang.String` v9 @kind object, `java.lang.Class`[] v10 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getMatchingMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.List` `getMethodsListWithAnnotation`(`java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getMethodsListWithAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.List` `getMethodsListWithAnnotation`(`java.lang.Class` v6 @kind object, `java.lang.Class` v7 @kind object, `boolean` v8 , `boolean` v9 ) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getMethodsListWithAnnotation:(Ljava/lang/Class;Ljava/lang/Class;ZZ)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Method`[] `getMethodsWithAnnotation`(`java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getMethodsWithAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Method`[] `getMethodsWithAnnotation`(`java.lang.Class` v0 @kind object, `java.lang.Class` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getMethodsWithAnnotation:(Ljava/lang/Class;Ljava/lang/Class;ZZ)[Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `getOverrideHierarchy`(`java.lang.reflect.Method` v8 @kind object, `org.apache.commons.lang3.ClassUtils$Interfaces` v9 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.getOverrideHierarchy:(Ljava/lang/reflect/Method;Lorg/apache/commons/lang3/ClassUtils$Interfaces;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `h`(`java.lang.Class`[] v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.h:([Ljava/lang/Class;Ljava/lang/reflect/Method;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `i`(`java.lang.Class`[] v1 @kind object, `java.util.TreeMap` v2 @kind object, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.i:([Ljava/lang/Class;Ljava/util/TreeMap;Ljava/lang/reflect/Method;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `invokeExactMethod`(`java.lang.Object` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeExactMethod:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeExactMethod`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeExactMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeExactMethod`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeExactMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeExactStaticMethod`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeExactStaticMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeExactStaticMethod`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeExactStaticMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeMethod`(`java.lang.Object` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeMethod:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeMethod`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeMethod`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeMethod`(`java.lang.Object` v2 @kind object, `boolean` v3 , `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeMethod:(Ljava/lang/Object;ZLjava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeMethod`(`java.lang.Object` v1 @kind object, `boolean` v2 , `java.lang.String` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeMethod:(Ljava/lang/Object;ZLjava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeMethod`(`java.lang.Object` v0 @kind object, `boolean` v1 , `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeMethod:(Ljava/lang/Object;ZLjava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeStaticMethod`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeStaticMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeStaticMethod`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.invokeStaticMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.List` `j`(`java.lang.Integer` v0 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.j:(Ljava/lang/Integer;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object`[] `k`(`java.lang.reflect.Method` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MethodUtils;.k:(Ljava/lang/reflect/Method;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
