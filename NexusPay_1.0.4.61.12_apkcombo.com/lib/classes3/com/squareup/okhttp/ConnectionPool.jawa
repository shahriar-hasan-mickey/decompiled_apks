record `com.squareup.okhttp.ConnectionPool` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Runnable` `com.squareup.okhttp.ConnectionPool.cleanupRunnable` @AccessFlag PRIVATE;
  `java.util.Deque` `com.squareup.okhttp.ConnectionPool.connections` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.squareup.okhttp.ConnectionPool.executor` @AccessFlag PRIVATE_FINAL;
  `long` `com.squareup.okhttp.ConnectionPool.keepAliveDurationNs` @AccessFlag PRIVATE_FINAL;
  `int` `com.squareup.okhttp.ConnectionPool.maxIdleConnections` @AccessFlag PRIVATE_FINAL;
  `com.squareup.okhttp.internal.RouteDatabase` `com.squareup.okhttp.ConnectionPool.routeDatabase` @AccessFlag FINAL;
}
global `boolean` `@@com.squareup.okhttp.ConnectionPool.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@com.squareup.okhttp.ConnectionPool.DEFAULT_KEEP_ALIVE_DURATION_MS` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.squareup.okhttp.ConnectionPool` `@@com.squareup.okhttp.ConnectionPool.systemDefault` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/squareup/okhttp/ConnectionPool;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.ConnectionPool` v1 @kind this, `int` v2 , `long` v3 ) @signature `Lcom/squareup/okhttp/ConnectionPool;.<init>:(IJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.ConnectionPool` v9 @kind this, `int` v10 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lcom/squareup/okhttp/ConnectionPool;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.squareup.okhttp.ConnectionPool` `getDefault`() @signature `Lcom/squareup/okhttp/ConnectionPool;.getDefault:()Lcom/squareup/okhttp/ConnectionPool;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `pruneAndGetAllocationCount`(`com.squareup.okhttp.ConnectionPool` v6 @kind this, `com.squareup.okhttp.internal.io.RealConnection` v7 @kind object, `long` v8 ) @signature `Lcom/squareup/okhttp/ConnectionPool;.pruneAndGetAllocationCount:(Lcom/squareup/okhttp/internal/io/RealConnection;J)I` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `cleanup`(`com.squareup.okhttp.ConnectionPool` v10 @kind this, `long` v11 ) @signature `Lcom/squareup/okhttp/ConnectionPool;.cleanup:(J)J` @AccessFlag  {

  # return;
}
procedure `boolean` `connectionBecameIdle`(`com.squareup.okhttp.ConnectionPool` v1 @kind this, `com.squareup.okhttp.internal.io.RealConnection` v2 @kind object) @signature `Lcom/squareup/okhttp/ConnectionPool;.connectionBecameIdle:(Lcom/squareup/okhttp/internal/io/RealConnection;)Z` @AccessFlag  {

  # return;
}
procedure `void` `evictAll`(`com.squareup.okhttp.ConnectionPool` v4 @kind this) @signature `Lcom/squareup/okhttp/ConnectionPool;.evictAll:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.internal.io.RealConnection` `get`(`com.squareup.okhttp.ConnectionPool` v4 @kind this, `com.squareup.okhttp.Address` v5 @kind object, `com.squareup.okhttp.internal.http.StreamAllocation` v6 @kind object) @signature `Lcom/squareup/okhttp/ConnectionPool;.get:(Lcom/squareup/okhttp/Address;Lcom/squareup/okhttp/internal/http/StreamAllocation;)Lcom/squareup/okhttp/internal/io/RealConnection;` @AccessFlag  {

  # return;
}
procedure `int` `getConnectionCount`(`com.squareup.okhttp.ConnectionPool` v1 @kind this) @signature `Lcom/squareup/okhttp/ConnectionPool;.getConnectionCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getHttpConnectionCount`(`com.squareup.okhttp.ConnectionPool` v2 @kind this) @signature `Lcom/squareup/okhttp/ConnectionPool;.getHttpConnectionCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getIdleConnectionCount`(`com.squareup.okhttp.ConnectionPool` v3 @kind this) @signature `Lcom/squareup/okhttp/ConnectionPool;.getIdleConnectionCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMultiplexedConnectionCount`(`com.squareup.okhttp.ConnectionPool` v3 @kind this) @signature `Lcom/squareup/okhttp/ConnectionPool;.getMultiplexedConnectionCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getSpdyConnectionCount`(`com.squareup.okhttp.ConnectionPool` v1 @kind this) @signature `Lcom/squareup/okhttp/ConnectionPool;.getSpdyConnectionCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `put`(`com.squareup.okhttp.ConnectionPool` v2 @kind this, `com.squareup.okhttp.internal.io.RealConnection` v3 @kind object) @signature `Lcom/squareup/okhttp/ConnectionPool;.put:(Lcom/squareup/okhttp/internal/io/RealConnection;)V` @AccessFlag  {

  # return;
}
procedure `void` `setCleanupRunnableForTest`(`com.squareup.okhttp.ConnectionPool` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lcom/squareup/okhttp/ConnectionPool;.setCleanupRunnableForTest:(Ljava/lang/Runnable;)V` @AccessFlag  {

  # return;
}
