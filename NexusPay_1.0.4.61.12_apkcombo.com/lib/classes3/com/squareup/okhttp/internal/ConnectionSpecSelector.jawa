record `com.squareup.okhttp.internal.ConnectionSpecSelector` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `com.squareup.okhttp.internal.ConnectionSpecSelector.connectionSpecs` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.squareup.okhttp.internal.ConnectionSpecSelector.isFallback` @AccessFlag PRIVATE;
  `boolean` `com.squareup.okhttp.internal.ConnectionSpecSelector.isFallbackPossible` @AccessFlag PRIVATE;
  `int` `com.squareup.okhttp.internal.ConnectionSpecSelector.nextModeIndex` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.squareup.okhttp.internal.ConnectionSpecSelector` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/squareup/okhttp/internal/ConnectionSpecSelector;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isFallbackPossible`(`com.squareup.okhttp.internal.ConnectionSpecSelector` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object) @signature `Lcom/squareup/okhttp/internal/ConnectionSpecSelector;.isFallbackPossible:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.squareup.okhttp.ConnectionSpec` `configureSecureSocket`(`com.squareup.okhttp.internal.ConnectionSpecSelector` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lcom/squareup/okhttp/internal/ConnectionSpecSelector;.configureSecureSocket:(Ljavax/net/ssl/SSLSocket;)Lcom/squareup/okhttp/ConnectionSpec;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `connectionFailed`(`com.squareup.okhttp.internal.ConnectionSpecSelector` v4 @kind this, `java.io.IOException` v5 @kind object) @signature `Lcom/squareup/okhttp/internal/ConnectionSpecSelector;.connectionFailed:(Ljava/io/IOException;)Z` @AccessFlag PUBLIC {

  # return;
}
