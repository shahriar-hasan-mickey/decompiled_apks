record `com.squareup.okhttp.internal.OptionalMethod` @kind class @AccessFlag  {
  `java.lang.String` `com.squareup.okhttp.internal.OptionalMethod.methodName` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class`[] `com.squareup.okhttp.internal.OptionalMethod.methodParams` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.squareup.okhttp.internal.OptionalMethod.returnType` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.squareup.okhttp.internal.OptionalMethod` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Class`[] v3 @kind object) @signature `Lcom/squareup/okhttp/internal/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.reflect.Method` `getMethod`(`com.squareup.okhttp.internal.OptionalMethod` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/squareup/okhttp/internal/OptionalMethod;.getMethod:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.reflect.Method` `getPublicMethod`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Class`[] v3 @kind object) @signature `Lcom/squareup/okhttp/internal/OptionalMethod;.getPublicMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `invoke`(`com.squareup.okhttp.internal.OptionalMethod` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lcom/squareup/okhttp/internal/OptionalMethod;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `invokeOptional`(`com.squareup.okhttp.internal.OptionalMethod` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lcom/squareup/okhttp/internal/OptionalMethod;.invokeOptional:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `invokeOptionalWithoutCheckedException`(`com.squareup.okhttp.internal.OptionalMethod` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/squareup/okhttp/internal/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `invokeWithoutCheckedException`(`com.squareup.okhttp.internal.OptionalMethod` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/squareup/okhttp/internal/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isSupported`(`com.squareup.okhttp.internal.OptionalMethod` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/squareup/okhttp/internal/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
