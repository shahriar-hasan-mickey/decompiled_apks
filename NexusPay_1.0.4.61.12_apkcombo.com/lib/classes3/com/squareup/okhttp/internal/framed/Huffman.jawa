record `com.squareup.okhttp.internal.framed.Huffman` @kind class @AccessFlag  {
  `com.squareup.okhttp.internal.framed.Huffman$Node` `com.squareup.okhttp.internal.framed.Huffman.root` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@com.squareup.okhttp.internal.framed.Huffman.CODES` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@com.squareup.okhttp.internal.framed.Huffman.CODE_LENGTHS` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.squareup.okhttp.internal.framed.Huffman` `@@com.squareup.okhttp.internal.framed.Huffman.INSTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/squareup/okhttp/internal/framed/Huffman;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.internal.framed.Huffman` v1 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Huffman;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `addCode`(`com.squareup.okhttp.internal.framed.Huffman` v4 @kind this, `int` v5 , `int` v6 , `byte` v7 ) @signature `Lcom/squareup/okhttp/internal/framed/Huffman;.addCode:(IIB)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `buildTree`(`com.squareup.okhttp.internal.framed.Huffman` v3 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Huffman;.buildTree:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.squareup.okhttp.internal.framed.Huffman` `get`() @signature `Lcom/squareup/okhttp/internal/framed/Huffman;.get:()Lcom/squareup/okhttp/internal/framed/Huffman;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `decode`(`com.squareup.okhttp.internal.framed.Huffman` v6 @kind this, `byte`[] v7 @kind object) @signature `Lcom/squareup/okhttp/internal/framed/Huffman;.decode:([B)[B` @AccessFlag  {

  # return;
}
procedure `void` `encode`(`com.squareup.okhttp.internal.framed.Huffman` v7 @kind this, `byte`[] v8 @kind object, `java.io.OutputStream` v9 @kind object) @signature `Lcom/squareup/okhttp/internal/framed/Huffman;.encode:([BLjava/io/OutputStream;)V` @AccessFlag  {

  # return;
}
procedure `int` `encodedLength`(`com.squareup.okhttp.internal.framed.Huffman` v5 @kind this, `byte`[] v6 @kind object) @signature `Lcom/squareup/okhttp/internal/framed/Huffman;.encodedLength:([B)I` @AccessFlag  {

  # return;
}
