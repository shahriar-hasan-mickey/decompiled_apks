record `com.squareup.okhttp.internal.framed.Hpack$Reader` @kind class @AccessFlag FINAL {
  `com.squareup.okhttp.internal.framed.Header`[] `com.squareup.okhttp.internal.framed.Hpack$Reader.dynamicTable` @AccessFlag ;
  `int` `com.squareup.okhttp.internal.framed.Hpack$Reader.dynamicTableByteCount` @AccessFlag ;
  `int` `com.squareup.okhttp.internal.framed.Hpack$Reader.headerCount` @AccessFlag ;
  `java.util.List` `com.squareup.okhttp.internal.framed.Hpack$Reader.headerList` @AccessFlag PRIVATE_FINAL;
  `int` `com.squareup.okhttp.internal.framed.Hpack$Reader.headerTableSizeSetting` @AccessFlag PRIVATE;
  `int` `com.squareup.okhttp.internal.framed.Hpack$Reader.maxDynamicTableByteCount` @AccessFlag PRIVATE;
  `int` `com.squareup.okhttp.internal.framed.Hpack$Reader.nextHeaderIndex` @AccessFlag ;
  `okio.BufferedSource` `com.squareup.okhttp.internal.framed.Hpack$Reader.source` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v1 @kind this, `int` v2 , `okio.Source` v3 @kind object) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.<init>:(ILokio/Source;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `adjustDynamicTableByteCount`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v2 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.adjustDynamicTableByteCount:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `clearDynamicTable`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v2 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.clearDynamicTable:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `dynamicTableIndex`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v1 @kind this, `int` v2 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.dynamicTableIndex:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `evictToRecoverBytes`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v4 @kind this, `int` v5 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.evictToRecoverBytes:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `okio.ByteString` `getName`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v2 @kind this, `int` v3 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.getName:(I)Lokio/ByteString;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `insertIntoDynamicTable`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v5 @kind this, `int` v6 , `com.squareup.okhttp.internal.framed.Header` v7 @kind object) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.insertIntoDynamicTable:(ILcom/squareup/okhttp/internal/framed/Header;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isStaticHeader`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v2 @kind this, `int` v3 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.isStaticHeader:(I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `readByte`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v1 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readByte:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `readIndexedHeader`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v3 @kind this, `int` v4 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readIndexedHeader:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `readLiteralHeaderWithIncrementalIndexingIndexedName`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v2 @kind this, `int` v3 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readLiteralHeaderWithIncrementalIndexingIndexedName:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `readLiteralHeaderWithIncrementalIndexingNewName`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v3 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readLiteralHeaderWithIncrementalIndexingNewName:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `readLiteralHeaderWithoutIndexingIndexedName`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v3 @kind this, `int` v4 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readLiteralHeaderWithoutIndexingIndexedName:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `readLiteralHeaderWithoutIndexingNewName`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v4 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readLiteralHeaderWithoutIndexingNewName:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.List` `getAndResetHeaderList`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v2 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.getAndResetHeaderList:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `headerTableSizeSetting`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v0 @kind this, `int` v1 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.headerTableSizeSetting:(I)V` @AccessFlag  {

  # return;
}
procedure `int` `maxDynamicTableByteCount`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v1 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.maxDynamicTableByteCount:()I` @AccessFlag  {

  # return;
}
procedure `okio.ByteString` `readByteString`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v5 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readByteString:()Lokio/ByteString;` @AccessFlag  {

  # return;
}
procedure `void` `readHeaders`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v3 @kind this) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readHeaders:()V` @AccessFlag  {

  # return;
}
procedure `int` `readInt`(`com.squareup.okhttp.internal.framed.Hpack$Reader` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/squareup/okhttp/internal/framed/Hpack$Reader;.readInt:(II)I` @AccessFlag  {

  # return;
}
