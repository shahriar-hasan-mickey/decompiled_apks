record `com.squareup.okhttp.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.squareup.okhttp.HttpUrl.fragment` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.host` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.password` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.squareup.okhttp.HttpUrl.pathSegments` @AccessFlag PRIVATE_FINAL;
  `int` `com.squareup.okhttp.HttpUrl.port` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.squareup.okhttp.HttpUrl.queryNamesAndValues` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.scheme` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.url` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.username` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.FORM_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `char`[] `@@com.squareup.okhttp.HttpUrl.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.QUERY_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.squareup.okhttp.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/squareup/okhttp/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.HttpUrl` v4 @kind this, `com.squareup.okhttp.HttpUrl$Builder` v5 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.<init>:(Lcom/squareup/okhttp/HttpUrl$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.HttpUrl` v0 @kind this, `com.squareup.okhttp.HttpUrl$Builder` v1 @kind object, `com.squareup.okhttp.HttpUrl$1` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.<init>:(Lcom/squareup/okhttp/HttpUrl$Builder;Lcom/squareup/okhttp/HttpUrl$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `access$100`(`com.squareup.okhttp.HttpUrl` v0 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.access$100:(Lcom/squareup/okhttp/HttpUrl;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$200`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.access$200:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `access$300`(`com.squareup.okhttp.HttpUrl` v0 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.access$300:(Lcom/squareup/okhttp/HttpUrl;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$400`(`com.squareup.okhttp.HttpUrl` v0 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.access$400:(Lcom/squareup/okhttp/HttpUrl;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 , `java.lang.String` v12 @kind object, `boolean` v13 , `boolean` v14 , `boolean` v15 ) @signature `Lcom/squareup/okhttp/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZ)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `boolean` v9 , `boolean` v10 , `boolean` v11 ) @signature `Lcom/squareup/okhttp/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZ)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `void` `canonicalize`(`okio.Buffer` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 ) @signature `Lcom/squareup/okhttp/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZ)V` @AccessFlag STATIC {

  # return;
}
procedure `int` `decodeHexDigit`(`char` v2 ) @signature `Lcom/squareup/okhttp/HttpUrl;.decodeHexDigit:(C)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `delimiterOffset`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.lang.String` v5 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl` `get`(`java.net.URI` v0 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.get:(Ljava/net/URI;)Lcom/squareup/okhttp/HttpUrl;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl` `get`(`java.net.URL` v0 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.get:(Ljava/net/URL;)Lcom/squareup/okhttp/HttpUrl;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl` `getChecked`(`java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.getChecked:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl;` @AccessFlag STATIC {

  # return;
}
procedure `void` `namesAndValuesToQueryString`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl` `parse`(`java.lang.String` v3 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.parse:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `pathSegmentsToString`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lcom/squareup/okhttp/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lcom/squareup/okhttp/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.List` `percentDecode`(`com.squareup.okhttp.HttpUrl` v2 @kind this, `java.util.List` v3 @kind object, `boolean` v4 ) @signature `Lcom/squareup/okhttp/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `percentDecode`(`okio.Buffer` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lcom/squareup/okhttp/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {

  # return;
}
procedure `java.util.List` `queryStringToNamesAndValues`(`java.lang.String` v5 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `encodedFragment`(`com.squareup.okhttp.HttpUrl` v2 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `encodedPassword`(`com.squareup.okhttp.HttpUrl` v3 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `encodedPath`(`com.squareup.okhttp.HttpUrl` v4 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `encodedPathSegments`(`com.squareup.okhttp.HttpUrl` v5 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `encodedQuery`(`com.squareup.okhttp.HttpUrl` v5 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `encodedUsername`(`com.squareup.okhttp.HttpUrl` v4 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.squareup.okhttp.HttpUrl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `fragment`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `host`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isHttps`(`com.squareup.okhttp.HttpUrl` v2 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `newBuilder`(`com.squareup.okhttp.HttpUrl` v3 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.newBuilder:()Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `password`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `pathSegments`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `pathSize`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `port`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.port:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `query`(`com.squareup.okhttp.HttpUrl` v2 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `queryParameter`(`com.squareup.okhttp.HttpUrl` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `queryParameterName`(`com.squareup.okhttp.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lcom/squareup/okhttp/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `queryParameterNames`(`com.squareup.okhttp.HttpUrl` v4 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `queryParameterValue`(`com.squareup.okhttp.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lcom/squareup/okhttp/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `queryParameterValues`(`com.squareup.okhttp.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `querySize`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.querySize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl` `resolve`(`com.squareup.okhttp.HttpUrl` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.resolve:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `scheme`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.net.URI` `uri`(`com.squareup.okhttp.HttpUrl` v3 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.net.URL` `url`(`com.squareup.okhttp.HttpUrl` v2 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `username`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
