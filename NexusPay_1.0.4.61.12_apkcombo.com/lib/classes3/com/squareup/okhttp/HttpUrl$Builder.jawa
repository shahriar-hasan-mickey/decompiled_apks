record `com.squareup.okhttp.HttpUrl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.squareup.okhttp.HttpUrl$Builder.encodedFragment` @AccessFlag ;
  `java.lang.String` `com.squareup.okhttp.HttpUrl$Builder.encodedPassword` @AccessFlag ;
  `java.util.List` `com.squareup.okhttp.HttpUrl$Builder.encodedPathSegments` @AccessFlag FINAL;
  `java.util.List` `com.squareup.okhttp.HttpUrl$Builder.encodedQueryNamesAndValues` @AccessFlag ;
  `java.lang.String` `com.squareup.okhttp.HttpUrl$Builder.encodedUsername` @AccessFlag ;
  `java.lang.String` `com.squareup.okhttp.HttpUrl$Builder.host` @AccessFlag ;
  `int` `com.squareup.okhttp.HttpUrl$Builder.port` @AccessFlag ;
  `java.lang.String` `com.squareup.okhttp.HttpUrl$Builder.scheme` @AccessFlag ;
}
procedure `void` `<init>`(`com.squareup.okhttp.HttpUrl$Builder` v2 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `containsInvalidHostnameAsciiCodes`(`java.lang.String` v5 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `decodeIpv4Suffix`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.net.InetAddress` `decodeIpv6`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `domainToAscii`(`java.lang.String` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.domainToAscii:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `inet6AddressToAscii`(`byte`[] v8 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.inet6AddressToAscii:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isDot`(`com.squareup.okhttp.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isDotDot`(`com.squareup.okhttp.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `parsePort`(`java.lang.String` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `pop`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.pop:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `portColonOffset`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `push`(`com.squareup.okhttp.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 , `boolean` v12 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeAllCanonicalQueryParameters`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `resolvePath`(`com.squareup.okhttp.HttpUrl$Builder` v10 @kind this, `java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `schemeDelimiterOffset`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `skipLeadingAsciiWhitespace`(`com.squareup.okhttp.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `skipTrailingAsciiWhitespace`(`com.squareup.okhttp.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `slashCount`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `addEncodedPathSegment`(`com.squareup.okhttp.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.addEncodedPathSegment:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `addEncodedQueryParameter`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `addPathSegment`(`com.squareup.okhttp.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.addPathSegment:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `addQueryParameter`(`com.squareup.okhttp.HttpUrl$Builder` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl` `build`(`com.squareup.okhttp.HttpUrl$Builder` v2 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.build:()Lcom/squareup/okhttp/HttpUrl;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `effectivePort`(`com.squareup.okhttp.HttpUrl$Builder` v2 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.effectivePort:()I` @AccessFlag  {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `encodedFragment`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.encodedFragment:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `encodedPassword`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.encodedPassword:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `encodedPath`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.encodedPath:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `encodedQuery`(`com.squareup.okhttp.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `encodedUsername`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.encodedUsername:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `fragment`(`com.squareup.okhttp.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.fragment:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `host`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.host:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder$ParseResult` `parse`(`com.squareup.okhttp.HttpUrl$Builder` v19 @kind this, `com.squareup.okhttp.HttpUrl` v20 @kind object, `java.lang.String` v21 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.parse:(Lcom/squareup/okhttp/HttpUrl;Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder$ParseResult;` @AccessFlag  {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `password`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.password:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `port`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `int` v4 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.port:(I)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `query`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.query:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `reencodeForUri`(`com.squareup.okhttp.HttpUrl$Builder` v7 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.reencodeForUri:()Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag  {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `removeAllEncodedQueryParameters`(`com.squareup.okhttp.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `removeAllQueryParameters`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `removePathSegment`(`com.squareup.okhttp.HttpUrl$Builder` v1 @kind this, `int` v2 ) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.removePathSegment:(I)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `scheme`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `setEncodedPathSegment`(`com.squareup.okhttp.HttpUrl$Builder` v7 @kind this, `int` v8 , `java.lang.String` v9 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.setEncodedPathSegment:(ILjava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `setEncodedQueryParameter`(`com.squareup.okhttp.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.setEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `setPathSegment`(`com.squareup.okhttp.HttpUrl$Builder` v7 @kind this, `int` v8 , `java.lang.String` v9 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.setPathSegment:(ILjava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `setQueryParameter`(`com.squareup.okhttp.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.setQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.squareup.okhttp.HttpUrl$Builder` v4 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.HttpUrl$Builder` `username`(`com.squareup.okhttp.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl$Builder;.username:(Ljava/lang/String;)Lcom/squareup/okhttp/HttpUrl$Builder;` @AccessFlag PUBLIC {

  # return;
}
