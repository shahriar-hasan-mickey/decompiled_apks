record `androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker` @kind class @AccessFlag PUBLIC extends `androidx.emoji2.text.EmojiCompat$GlyphChecker` @kind interface {
  `android.text.TextPaint` `androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker.mTextPaint` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker.PAINT_TEXT_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker.sStringBuilder` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/emoji2/text/EmojiProcessor$DefaultGlyphChecker;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker` v2 @kind this) @signature `Landroidx/emoji2/text/EmojiProcessor$DefaultGlyphChecker;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.StringBuilder` `getStringBuilder`() @signature `Landroidx/emoji2/text/EmojiProcessor$DefaultGlyphChecker;.getStringBuilder:()Ljava/lang/StringBuilder;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `hasGlyph`(`androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Landroidx/emoji2/text/EmojiProcessor$DefaultGlyphChecker;.hasGlyph:(Ljava/lang/CharSequence;III)Z` @AccessFlag PUBLIC {

  # return;
}
