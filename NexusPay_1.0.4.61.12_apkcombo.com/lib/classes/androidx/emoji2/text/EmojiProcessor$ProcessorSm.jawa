record `androidx.emoji2.text.EmojiProcessor$ProcessorSm` @kind class @AccessFlag FINAL {
  `int` `androidx.emoji2.text.EmojiProcessor$ProcessorSm.mCurrentDepth` @AccessFlag PRIVATE;
  `androidx.emoji2.text.MetadataRepo$Node` `androidx.emoji2.text.EmojiProcessor$ProcessorSm.mCurrentNode` @AccessFlag PRIVATE;
  `int`[] `androidx.emoji2.text.EmojiProcessor$ProcessorSm.mEmojiAsDefaultStyleExceptions` @AccessFlag PRIVATE_FINAL;
  `androidx.emoji2.text.MetadataRepo$Node` `androidx.emoji2.text.EmojiProcessor$ProcessorSm.mFlushNode` @AccessFlag PRIVATE;
  `int` `androidx.emoji2.text.EmojiProcessor$ProcessorSm.mLastCodepoint` @AccessFlag PRIVATE;
  `androidx.emoji2.text.MetadataRepo$Node` `androidx.emoji2.text.EmojiProcessor$ProcessorSm.mRootNode` @AccessFlag PRIVATE_FINAL;
  `int` `androidx.emoji2.text.EmojiProcessor$ProcessorSm.mState` @AccessFlag PRIVATE;
  `boolean` `androidx.emoji2.text.EmojiProcessor$ProcessorSm.mUseEmojiAsDefaultStyle` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@androidx.emoji2.text.EmojiProcessor$ProcessorSm.STATE_DEFAULT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.emoji2.text.EmojiProcessor$ProcessorSm.STATE_WALKING` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.emoji2.text.EmojiProcessor$ProcessorSm` v1 @kind this, `androidx.emoji2.text.MetadataRepo$Node` v2 @kind object, `boolean` v3 , `int`[] v4 @kind object) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.<init>:(Landroidx/emoji2/text/MetadataRepo$Node;Z[I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `isEmojiStyle`(`int` v1 ) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.isEmojiStyle:(I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isTextStyle`(`int` v1 ) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.isTextStyle:(I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `reset`(`androidx.emoji2.text.EmojiProcessor$ProcessorSm` v2 @kind this) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.reset:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `shouldUseEmojiPresentationStyleForSingleCodepoint`(`androidx.emoji2.text.EmojiProcessor$ProcessorSm` v4 @kind this) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.shouldUseEmojiPresentationStyleForSingleCodepoint:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `check`(`androidx.emoji2.text.EmojiProcessor$ProcessorSm` v5 @kind this, `int` v6 ) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.check:(I)I` @AccessFlag  {

  # return;
}
procedure `androidx.emoji2.text.EmojiMetadata` `getCurrentMetadata`(`androidx.emoji2.text.EmojiProcessor$ProcessorSm` v1 @kind this) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.getCurrentMetadata:()Landroidx/emoji2/text/EmojiMetadata;` @AccessFlag  {

  # return;
}
procedure `androidx.emoji2.text.EmojiMetadata` `getFlushMetadata`(`androidx.emoji2.text.EmojiProcessor$ProcessorSm` v1 @kind this) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.getFlushMetadata:()Landroidx/emoji2/text/EmojiMetadata;` @AccessFlag  {

  # return;
}
procedure `boolean` `isInFlushableState`(`androidx.emoji2.text.EmojiProcessor$ProcessorSm` v3 @kind this) @signature `Landroidx/emoji2/text/EmojiProcessor$ProcessorSm;.isInFlushableState:()Z` @AccessFlag  {

  # return;
}
