record `androidx.emoji2.text.flatbuffer.ReadWriteBuf` @kind interface @AccessFlag ABSTRACT_INTERFACE extends `androidx.emoji2.text.flatbuffer.ReadBuf` @kind interface {
}
procedure `int` `limit`() @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.limit:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `put`(`byte` v0 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.put:(B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `put`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.put:([BII)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putBoolean`(`boolean` v0 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.putBoolean:(Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putDouble`(`double` v0 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.putDouble:(D)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putFloat`(`float` v0 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.putFloat:(F)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putInt`(`int` v0 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.putInt:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putLong`(`long` v0 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.putLong:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putShort`(`short` v0 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.putShort:(S)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `requestCapacity`(`int` v0 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.requestCapacity:(I)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `set`(`int` v0 , `byte` v1 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.set:(IB)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `set`(`int` v0 , `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.set:(I[BII)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setBoolean`(`int` v0 , `boolean` v1 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.setBoolean:(IZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setDouble`(`int` v0 , `double` v1 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.setDouble:(ID)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setFloat`(`int` v0 , `float` v1 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.setFloat:(IF)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setInt`(`int` v0 , `int` v1 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.setInt:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setLong`(`int` v0 , `long` v1 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.setLong:(IJ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setShort`(`int` v0 , `short` v1 ) @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.setShort:(IS)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `writePosition`() @signature `Landroidx/emoji2/text/flatbuffer/ReadWriteBuf;.writePosition:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
