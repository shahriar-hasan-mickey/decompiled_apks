record `androidx.core.view.DisplayCompat$Api23Impl` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`androidx.core.view.DisplayCompat$Api23Impl` v0 @kind this) @signature `Landroidx/core/view/DisplayCompat$Api23Impl;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `androidx.core.view.DisplayCompat$ModeCompat` `getMode`(`android.content.Context` v1 @kind object, `android.view.Display` v2 @kind object) @signature `Landroidx/core/view/DisplayCompat$Api23Impl;.getMode:(Landroid/content/Context;Landroid/view/Display;)Landroidx/core/view/DisplayCompat$ModeCompat;` @AccessFlag STATIC {

  # return;
}
procedure `androidx.core.view.DisplayCompat$ModeCompat`[] `getSupportedModes`(`android.content.Context` v6 @kind object, `android.view.Display` v7 @kind object) @signature `Landroidx/core/view/DisplayCompat$Api23Impl;.getSupportedModes:(Landroid/content/Context;Landroid/view/Display;)[Landroidx/core/view/DisplayCompat$ModeCompat;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isCurrentModeTheLargestMode`(`android.view.Display` v5 @kind object) @signature `Landroidx/core/view/DisplayCompat$Api23Impl;.isCurrentModeTheLargestMode:(Landroid/view/Display;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `physicalSizeEquals`(`android.view.Display$Mode` v2 @kind object, `android.graphics.Point` v3 @kind object) @signature `Landroidx/core/view/DisplayCompat$Api23Impl;.physicalSizeEquals:(Landroid/view/Display$Mode;Landroid/graphics/Point;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `physicalSizeEquals`(`android.view.Display$Mode` v2 @kind object, `android.view.Display$Mode` v3 @kind object) @signature `Landroidx/core/view/DisplayCompat$Api23Impl;.physicalSizeEquals:(Landroid/view/Display$Mode;Landroid/view/Display$Mode;)Z` @AccessFlag STATIC {

  # return;
}
