record `androidx.sqlite.db.framework.FrameworkSQLiteStatement` @kind class @AccessFlag  extends `androidx.sqlite.db.framework.FrameworkSQLiteProgram` @kind class, `androidx.sqlite.db.SupportSQLiteStatement` @kind interface {
  `android.database.sqlite.SQLiteStatement` `androidx.sqlite.db.framework.FrameworkSQLiteStatement.mDelegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.sqlite.db.framework.FrameworkSQLiteStatement` v0 @kind this, `android.database.sqlite.SQLiteStatement` v1 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteStatement;.<init>:(Landroid/database/sqlite/SQLiteStatement;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `execute`(`androidx.sqlite.db.framework.FrameworkSQLiteStatement` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteStatement;.execute:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `executeInsert`(`androidx.sqlite.db.framework.FrameworkSQLiteStatement` v2 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteStatement;.executeInsert:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `executeUpdateDelete`(`androidx.sqlite.db.framework.FrameworkSQLiteStatement` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteStatement;.executeUpdateDelete:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `simpleQueryForLong`(`androidx.sqlite.db.framework.FrameworkSQLiteStatement` v2 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteStatement;.simpleQueryForLong:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `simpleQueryForString`(`androidx.sqlite.db.framework.FrameworkSQLiteStatement` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteStatement;.simpleQueryForString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
