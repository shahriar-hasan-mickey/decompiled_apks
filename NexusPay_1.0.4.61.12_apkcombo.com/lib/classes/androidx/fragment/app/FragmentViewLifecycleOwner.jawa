record `androidx.fragment.app.FragmentViewLifecycleOwner` @kind class @AccessFlag  extends `androidx.lifecycle.HasDefaultViewModelProviderFactory` @kind interface, `androidx.savedstate.SavedStateRegistryOwner` @kind interface, `androidx.lifecycle.ViewModelStoreOwner` @kind interface {
  `androidx.lifecycle.ViewModelProvider$Factory` `androidx.fragment.app.FragmentViewLifecycleOwner.mDefaultFactory` @AccessFlag PRIVATE;
  `androidx.fragment.app.Fragment` `androidx.fragment.app.FragmentViewLifecycleOwner.mFragment` @AccessFlag PRIVATE_FINAL;
  `androidx.lifecycle.LifecycleRegistry` `androidx.fragment.app.FragmentViewLifecycleOwner.mLifecycleRegistry` @AccessFlag PRIVATE;
  `androidx.savedstate.SavedStateRegistryController` `androidx.fragment.app.FragmentViewLifecycleOwner.mSavedStateRegistryController` @AccessFlag PRIVATE;
  `androidx.lifecycle.ViewModelStore` `androidx.fragment.app.FragmentViewLifecycleOwner.mViewModelStore` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object, `androidx.lifecycle.ViewModelStore` v3 @kind object) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.<init>:(Landroidx/fragment/app/Fragment;Landroidx/lifecycle/ViewModelStore;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `androidx.lifecycle.ViewModelProvider$Factory` `getDefaultViewModelProviderFactory`(`androidx.fragment.app.FragmentViewLifecycleOwner` v3 @kind this) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.getDefaultViewModelProviderFactory:()Landroidx/lifecycle/ViewModelProvider$Factory;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.lifecycle.Lifecycle` `getLifecycle`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.getLifecycle:()Landroidx/lifecycle/Lifecycle;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.savedstate.SavedStateRegistry` `getSavedStateRegistry`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.getSavedStateRegistry:()Landroidx/savedstate/SavedStateRegistry;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.lifecycle.ViewModelStore` `getViewModelStore`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.getViewModelStore:()Landroidx/lifecycle/ViewModelStore;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleLifecycleEvent`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this, `androidx.lifecycle.Lifecycle$Event` v2 @kind object) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.handleLifecycleEvent:(Landroidx/lifecycle/Lifecycle$Event;)V` @AccessFlag  {

  # return;
}
procedure `void` `initialize`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.initialize:()V` @AccessFlag  {

  # return;
}
procedure `boolean` `isInitialized`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.isInitialized:()Z` @AccessFlag  {

  # return;
}
procedure `void` `performRestore`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this, `android.os.Bundle` v2 @kind object) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.performRestore:(Landroid/os/Bundle;)V` @AccessFlag  {

  # return;
}
procedure `void` `performSave`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this, `android.os.Bundle` v2 @kind object) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.performSave:(Landroid/os/Bundle;)V` @AccessFlag  {

  # return;
}
procedure `void` `setCurrentState`(`androidx.fragment.app.FragmentViewLifecycleOwner` v1 @kind this, `androidx.lifecycle.Lifecycle$State` v2 @kind object) @signature `Landroidx/fragment/app/FragmentViewLifecycleOwner;.setCurrentState:(Landroidx/lifecycle/Lifecycle$State;)V` @AccessFlag  {

  # return;
}
