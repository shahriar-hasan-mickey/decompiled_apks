record `androidx.work.Data` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `androidx.work.Data.mValues` @AccessFlag ;
}
global `androidx.work.Data` `@@androidx.work.Data.EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.work.Data.MAX_DATA_BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@androidx.work.Data.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/work/Data;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.Data` v0 @kind this) @signature `Landroidx/work/Data;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.Data` v1 @kind this, `androidx.work.Data` v2 @kind object) @signature `Landroidx/work/Data;.<init>:(Landroidx/work/Data;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.Data` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Landroidx/work/Data;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Boolean`[] `convertPrimitiveBooleanArray`(`boolean`[] v3 @kind object) @signature `Landroidx/work/Data;.convertPrimitiveBooleanArray:([Z)[Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Byte`[] `convertPrimitiveByteArray`(`byte`[] v3 @kind object) @signature `Landroidx/work/Data;.convertPrimitiveByteArray:([B)[Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Double`[] `convertPrimitiveDoubleArray`(`double`[] v4 @kind object) @signature `Landroidx/work/Data;.convertPrimitiveDoubleArray:([D)[Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Float`[] `convertPrimitiveFloatArray`(`float`[] v3 @kind object) @signature `Landroidx/work/Data;.convertPrimitiveFloatArray:([F)[Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer`[] `convertPrimitiveIntArray`(`int`[] v3 @kind object) @signature `Landroidx/work/Data;.convertPrimitiveIntArray:([I)[Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Long`[] `convertPrimitiveLongArray`(`long`[] v4 @kind object) @signature `Landroidx/work/Data;.convertPrimitiveLongArray:([J)[Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `convertToPrimitiveArray`(`java.lang.Byte`[] v3 @kind object) @signature `Landroidx/work/Data;.convertToPrimitiveArray:([Ljava/lang/Byte;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `convertToPrimitiveArray`(`java.lang.Double`[] v4 @kind object) @signature `Landroidx/work/Data;.convertToPrimitiveArray:([Ljava/lang/Double;)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `convertToPrimitiveArray`(`java.lang.Float`[] v3 @kind object) @signature `Landroidx/work/Data;.convertToPrimitiveArray:([Ljava/lang/Float;)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `convertToPrimitiveArray`(`java.lang.Integer`[] v3 @kind object) @signature `Landroidx/work/Data;.convertToPrimitiveArray:([Ljava/lang/Integer;)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `convertToPrimitiveArray`(`java.lang.Long`[] v4 @kind object) @signature `Landroidx/work/Data;.convertToPrimitiveArray:([Ljava/lang/Long;)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `convertToPrimitiveArray`(`java.lang.Boolean`[] v3 @kind object) @signature `Landroidx/work/Data;.convertToPrimitiveArray:([Ljava/lang/Boolean;)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.work.Data` `fromByteArray`(`byte`[] v7 @kind object) @signature `Landroidx/work/Data;.fromByteArray:([B)Landroidx/work/Data;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `toByteArrayInternal`(`androidx.work.Data` v5 @kind object) @signature `Landroidx/work/Data;.toByteArrayInternal:(Landroidx/work/Data;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`androidx.work.Data` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Landroidx/work/Data;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `getBoolean`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Landroidx/work/Data;.getBoolean:(Ljava/lang/String;Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean`[] `getBooleanArray`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/Data;.getBooleanArray:(Ljava/lang/String;)[Z` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `getByte`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object, `byte` v3 ) @signature `Landroidx/work/Data;.getByte:(Ljava/lang/String;B)B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getByteArray`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/Data;.getByteArray:(Ljava/lang/String;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getDouble`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object, `double` v3 ) @signature `Landroidx/work/Data;.getDouble:(Ljava/lang/String;D)D` @AccessFlag PUBLIC {

  # return;
}
procedure `double`[] `getDoubleArray`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/Data;.getDoubleArray:(Ljava/lang/String;)[D` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getFloat`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object, `float` v3 ) @signature `Landroidx/work/Data;.getFloat:(Ljava/lang/String;F)F` @AccessFlag PUBLIC {

  # return;
}
procedure `float`[] `getFloatArray`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/Data;.getFloatArray:(Ljava/lang/String;)[F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getInt`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Landroidx/work/Data;.getInt:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getIntArray`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/Data;.getIntArray:(Ljava/lang/String;)[I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `getKeyValueMap`(`androidx.work.Data` v1 @kind this) @signature `Landroidx/work/Data;.getKeyValueMap:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getLong`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object, `long` v3 ) @signature `Landroidx/work/Data;.getLong:(Ljava/lang/String;J)J` @AccessFlag PUBLIC {

  # return;
}
procedure `long`[] `getLongArray`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/Data;.getLongArray:(Ljava/lang/String;)[J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getString`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/Data;.getString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String`[] `getStringArray`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/Data;.getStringArray:(Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasKeyWithValueOfType`(`androidx.work.Data` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Landroidx/work/Data;.hasKeyWithValueOfType:(Ljava/lang/String;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`androidx.work.Data` v1 @kind this) @signature `Landroidx/work/Data;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`androidx.work.Data` v1 @kind this) @signature `Landroidx/work/Data;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `toByteArray`(`androidx.work.Data` v1 @kind this) @signature `Landroidx/work/Data;.toByteArray:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.work.Data` v4 @kind this) @signature `Landroidx/work/Data;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
