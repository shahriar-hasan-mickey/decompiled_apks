record `androidx.work.impl.background.systemalarm.CommandHandler` @kind class @AccessFlag PUBLIC extends `androidx.work.impl.ExecutionListener` @kind interface {
  `android.content.Context` `androidx.work.impl.background.systemalarm.CommandHandler.mContext` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `androidx.work.impl.background.systemalarm.CommandHandler.mLock` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `androidx.work.impl.background.systemalarm.CommandHandler.mPendingDelayMet` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.ACTION_CONSTRAINTS_CHANGED` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.ACTION_DELAY_MET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.ACTION_EXECUTION_COMPLETED` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.ACTION_RESCHEDULE` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.ACTION_SCHEDULE_WORK` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.ACTION_STOP_WORK` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.KEY_NEEDS_RESCHEDULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.KEY_WORKSPEC_ID` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.background.systemalarm.CommandHandler.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@androidx.work.impl.background.systemalarm.CommandHandler.WORK_PROCESSING_TIME_IN_MS` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.impl.background.systemalarm.CommandHandler` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.<init>:(Landroid/content/Context;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `android.content.Intent` `createConstraintsChangedIntent`(`android.content.Context` v2 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.createConstraintsChangedIntent:(Landroid/content/Context;)Landroid/content/Intent;` @AccessFlag STATIC {

  # return;
}
procedure `android.content.Intent` `createDelayMetIntent`(`android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.createDelayMetIntent:(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;` @AccessFlag STATIC {

  # return;
}
procedure `android.content.Intent` `createExecutionCompletedIntent`(`android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.createExecutionCompletedIntent:(Landroid/content/Context;Ljava/lang/String;Z)Landroid/content/Intent;` @AccessFlag STATIC {

  # return;
}
procedure `android.content.Intent` `createRescheduleIntent`(`android.content.Context` v2 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.createRescheduleIntent:(Landroid/content/Context;)Landroid/content/Intent;` @AccessFlag STATIC {

  # return;
}
procedure `android.content.Intent` `createScheduleWorkIntent`(`android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.createScheduleWorkIntent:(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;` @AccessFlag STATIC {

  # return;
}
procedure `android.content.Intent` `createStopWorkIntent`(`android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.createStopWorkIntent:(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;` @AccessFlag STATIC {

  # return;
}
procedure `void` `handleConstraintsChanged`(`androidx.work.impl.background.systemalarm.CommandHandler` v4 @kind this, `android.content.Intent` v5 @kind object, `int` v6 , `androidx.work.impl.background.systemalarm.SystemAlarmDispatcher` v7 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.handleConstraintsChanged:(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/SystemAlarmDispatcher;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `handleDelayMet`(`androidx.work.impl.background.systemalarm.CommandHandler` v7 @kind this, `android.content.Intent` v8 @kind object, `int` v9 , `androidx.work.impl.background.systemalarm.SystemAlarmDispatcher` v10 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.handleDelayMet:(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/SystemAlarmDispatcher;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `handleExecutionCompleted`(`androidx.work.impl.background.systemalarm.CommandHandler` v6 @kind this, `android.content.Intent` v7 @kind object, `int` v8 ) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.handleExecutionCompleted:(Landroid/content/Intent;I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `handleReschedule`(`androidx.work.impl.background.systemalarm.CommandHandler` v4 @kind this, `android.content.Intent` v5 @kind object, `int` v6 , `androidx.work.impl.background.systemalarm.SystemAlarmDispatcher` v7 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.handleReschedule:(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/SystemAlarmDispatcher;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `handleScheduleWorkIntent`(`androidx.work.impl.background.systemalarm.CommandHandler` v10 @kind this, `android.content.Intent` v11 @kind object, `int` v12 , `androidx.work.impl.background.systemalarm.SystemAlarmDispatcher` v13 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.handleScheduleWorkIntent:(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/SystemAlarmDispatcher;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `handleStopWork`(`androidx.work.impl.background.systemalarm.CommandHandler` v5 @kind this, `android.content.Intent` v6 @kind object, `androidx.work.impl.background.systemalarm.SystemAlarmDispatcher` v7 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.handleStopWork:(Landroid/content/Intent;Landroidx/work/impl/background/systemalarm/SystemAlarmDispatcher;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `hasKeys`(`android.os.Bundle` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.hasKeys:(Landroid/os/Bundle;[Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `hasPendingCommands`(`androidx.work.impl.background.systemalarm.CommandHandler` v2 @kind this) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.hasPendingCommands:()Z` @AccessFlag  {

  # return;
}
procedure `void` `onExecuted`(`androidx.work.impl.background.systemalarm.CommandHandler` v2 @kind this, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.onExecuted:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onHandleIntent`(`androidx.work.impl.background.systemalarm.CommandHandler` v5 @kind this, `android.content.Intent` v6 @kind object, `int` v7 , `androidx.work.impl.background.systemalarm.SystemAlarmDispatcher` v8 @kind object) @signature `Landroidx/work/impl/background/systemalarm/CommandHandler;.onHandleIntent:(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/SystemAlarmDispatcher;)V` @AccessFlag  {

  # return;
}
