record `androidx.work.impl.workers.ConstraintTrackingWorker` @kind class @AccessFlag PUBLIC extends `androidx.work.ListenableWorker` @kind class, `androidx.work.impl.constraints.WorkConstraintsCallback` @kind interface {
  `boolean` `androidx.work.impl.workers.ConstraintTrackingWorker.mAreConstraintsUnmet` @AccessFlag VOLATILE;
  `androidx.work.ListenableWorker` `androidx.work.impl.workers.ConstraintTrackingWorker.mDelegate` @AccessFlag PRIVATE;
  `androidx.work.impl.utils.futures.SettableFuture` `androidx.work.impl.workers.ConstraintTrackingWorker.mFuture` @AccessFlag ;
  `java.lang.Object` `androidx.work.impl.workers.ConstraintTrackingWorker.mLock` @AccessFlag FINAL;
  `androidx.work.WorkerParameters` `androidx.work.impl.workers.ConstraintTrackingWorker.mWorkerParameters` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@androidx.work.impl.workers.ConstraintTrackingWorker.ARGUMENT_CLASS_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.workers.ConstraintTrackingWorker.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.impl.workers.ConstraintTrackingWorker` v0 @kind this, `android.content.Context` v1 @kind object, `androidx.work.WorkerParameters` v2 @kind object) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.<init>:(Landroid/content/Context;Landroidx/work/WorkerParameters;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `androidx.work.ListenableWorker` `getDelegate`(`androidx.work.impl.workers.ConstraintTrackingWorker` v1 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.getDelegate:()Landroidx/work/ListenableWorker;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.work.impl.utils.taskexecutor.TaskExecutor` `getTaskExecutor`(`androidx.work.impl.workers.ConstraintTrackingWorker` v1 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.getTaskExecutor:()Landroidx/work/impl/utils/taskexecutor/TaskExecutor;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.work.impl.WorkDatabase` `getWorkDatabase`(`androidx.work.impl.workers.ConstraintTrackingWorker` v1 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.getWorkDatabase:()Landroidx/work/impl/WorkDatabase;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isRunInForeground`(`androidx.work.impl.workers.ConstraintTrackingWorker` v1 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.isRunInForeground:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onAllConstraintsMet`(`androidx.work.impl.workers.ConstraintTrackingWorker` v0 @kind this, `java.util.List` v1 @kind object) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.onAllConstraintsMet:(Ljava/util/List;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onAllConstraintsNotMet`(`androidx.work.impl.workers.ConstraintTrackingWorker` v6 @kind this, `java.util.List` v7 @kind object) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.onAllConstraintsNotMet:(Ljava/util/List;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onStopped`(`androidx.work.impl.workers.ConstraintTrackingWorker` v1 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.onStopped:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFutureFailed`(`androidx.work.impl.workers.ConstraintTrackingWorker` v2 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.setFutureFailed:()V` @AccessFlag  {

  # return;
}
procedure `void` `setFutureRetry`(`androidx.work.impl.workers.ConstraintTrackingWorker` v2 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.setFutureRetry:()V` @AccessFlag  {

  # return;
}
procedure `void` `setupAndRunConstraintTrackingWork`(`androidx.work.impl.workers.ConstraintTrackingWorker` v8 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.setupAndRunConstraintTrackingWork:()V` @AccessFlag  {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `startWork`(`androidx.work.impl.workers.ConstraintTrackingWorker` v2 @kind this) @signature `Landroidx/work/impl/workers/ConstraintTrackingWorker;.startWork:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC {

  # return;
}
