record `androidx.work.impl.Schedulers` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@androidx.work.impl.Schedulers.GCM_SCHEDULER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@androidx.work.impl.Schedulers.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/work/impl/Schedulers;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.impl.Schedulers` v0 @kind this) @signature `Landroidx/work/impl/Schedulers;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `androidx.work.impl.Scheduler` `createBestAvailableBackgroundScheduler`(`android.content.Context` v4 @kind object, `androidx.work.impl.WorkManagerImpl` v5 @kind object) @signature `Landroidx/work/impl/Schedulers;.createBestAvailableBackgroundScheduler:(Landroid/content/Context;Landroidx/work/impl/WorkManagerImpl;)Landroidx/work/impl/Scheduler;` @AccessFlag STATIC {

  # return;
}
procedure `void` `schedule`(`androidx.work.Configuration` v6 @kind object, `androidx.work.impl.WorkDatabase` v7 @kind object, `java.util.List` v8 @kind object) @signature `Landroidx/work/impl/Schedulers;.schedule:(Landroidx/work/Configuration;Landroidx/work/impl/WorkDatabase;Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.work.impl.Scheduler` `tryCreateGcmBasedScheduler`(`android.content.Context` v7 @kind object) @signature `Landroidx/work/impl/Schedulers;.tryCreateGcmBasedScheduler:(Landroid/content/Context;)Landroidx/work/impl/Scheduler;` @AccessFlag PRIVATE_STATIC {

  # return;
}
