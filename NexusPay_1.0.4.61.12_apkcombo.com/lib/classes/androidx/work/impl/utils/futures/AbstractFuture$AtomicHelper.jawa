record `androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper` v0 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture$AtomicHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper` v0 @kind this, `androidx.work.impl.utils.futures.AbstractFuture$1` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture$AtomicHelper;.<init>:(Landroidx/work/impl/utils/futures/AbstractFuture$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `casListeners`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind object, `androidx.work.impl.utils.futures.AbstractFuture$Listener` v1 @kind object, `androidx.work.impl.utils.futures.AbstractFuture$Listener` v2 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture$AtomicHelper;.casListeners:(Landroidx/work/impl/utils/futures/AbstractFuture;Landroidx/work/impl/utils/futures/AbstractFuture$Listener;Landroidx/work/impl/utils/futures/AbstractFuture$Listener;)Z` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `casValue`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture$AtomicHelper;.casValue:(Landroidx/work/impl/utils/futures/AbstractFuture;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `casWaiters`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind object, `androidx.work.impl.utils.futures.AbstractFuture$Waiter` v1 @kind object, `androidx.work.impl.utils.futures.AbstractFuture$Waiter` v2 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture$AtomicHelper;.casWaiters:(Landroidx/work/impl/utils/futures/AbstractFuture;Landroidx/work/impl/utils/futures/AbstractFuture$Waiter;Landroidx/work/impl/utils/futures/AbstractFuture$Waiter;)Z` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `putNext`(`androidx.work.impl.utils.futures.AbstractFuture$Waiter` v0 @kind object, `androidx.work.impl.utils.futures.AbstractFuture$Waiter` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture$AtomicHelper;.putNext:(Landroidx/work/impl/utils/futures/AbstractFuture$Waiter;Landroidx/work/impl/utils/futures/AbstractFuture$Waiter;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `putThread`(`androidx.work.impl.utils.futures.AbstractFuture$Waiter` v0 @kind object, `java.lang.Thread` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture$AtomicHelper;.putThread:(Landroidx/work/impl/utils/futures/AbstractFuture$Waiter;Ljava/lang/Thread;)V` @AccessFlag ABSTRACT {

  # return;
}
