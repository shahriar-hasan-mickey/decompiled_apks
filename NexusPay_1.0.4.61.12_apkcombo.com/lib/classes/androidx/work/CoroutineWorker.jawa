record `androidx.work.CoroutineWorker` @kind class @AccessFlag PUBLIC_ABSTRACT extends `androidx.work.ListenableWorker` @kind class {
  `kotlinx.coroutines.CoroutineDispatcher` `androidx.work.CoroutineWorker.coroutineContext` @AccessFlag PRIVATE_FINAL;
  `androidx.work.impl.utils.futures.SettableFuture` `androidx.work.CoroutineWorker.future` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.CompletableJob` `androidx.work.CoroutineWorker.job` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.work.CoroutineWorker` v1 @kind this, `android.content.Context` v2 @kind object, `androidx.work.WorkerParameters` v3 @kind object) @signature `Landroidx/work/CoroutineWorker;.<init>:(Landroid/content/Context;Landroidx/work/WorkerParameters;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `getCoroutineContext$annotations`() @signature `Landroidx/work/CoroutineWorker;.getCoroutineContext$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `getForegroundInfo$suspendImpl`(`androidx.work.CoroutineWorker` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Landroidx/work/CoroutineWorker;.getForegroundInfo$suspendImpl:(Landroidx/work/CoroutineWorker;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `doWork`(`kotlin.coroutines.Continuation` v0 @kind object) @signature `Landroidx/work/CoroutineWorker;.doWork:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `getCoroutineContext`(`androidx.work.CoroutineWorker` v1 @kind this) @signature `Landroidx/work/CoroutineWorker;.getCoroutineContext:()Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getForegroundInfo`(`androidx.work.CoroutineWorker` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Landroidx/work/CoroutineWorker;.getForegroundInfo:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `getForegroundInfoAsync`(`androidx.work.CoroutineWorker` v9 @kind this) @signature `Landroidx/work/CoroutineWorker;.getForegroundInfoAsync:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.impl.utils.futures.SettableFuture` `getFuture$work_runtime_ktx_release`(`androidx.work.CoroutineWorker` v1 @kind this) @signature `Landroidx/work/CoroutineWorker;.getFuture$work_runtime_ktx_release:()Landroidx/work/impl/utils/futures/SettableFuture;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `kotlinx.coroutines.CompletableJob` `getJob$work_runtime_ktx_release`(`androidx.work.CoroutineWorker` v1 @kind this) @signature `Landroidx/work/CoroutineWorker;.getJob$work_runtime_ktx_release:()Lkotlinx/coroutines/CompletableJob;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `onStopped`(`androidx.work.CoroutineWorker` v2 @kind this) @signature `Landroidx/work/CoroutineWorker;.onStopped:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `setForeground`(`androidx.work.CoroutineWorker` v3 @kind this, `androidx.work.ForegroundInfo` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Landroidx/work/CoroutineWorker;.setForeground:(Landroidx/work/ForegroundInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `setProgress`(`androidx.work.CoroutineWorker` v3 @kind this, `androidx.work.Data` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Landroidx/work/CoroutineWorker;.setProgress:(Landroidx/work/Data;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `startWork`(`androidx.work.CoroutineWorker` v7 @kind this) @signature `Landroidx/work/CoroutineWorker;.startWork:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_FINAL {

  # return;
}
