record `androidx.work.WorkRequest$Builder` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `boolean` `androidx.work.WorkRequest$Builder.mBackoffCriteriaSet` @AccessFlag ;
  `java.util.UUID` `androidx.work.WorkRequest$Builder.mId` @AccessFlag ;
  `java.util.Set` `androidx.work.WorkRequest$Builder.mTags` @AccessFlag ;
  `androidx.work.impl.model.WorkSpec` `androidx.work.WorkRequest$Builder.mWorkSpec` @AccessFlag ;
  `java.lang.Class` `androidx.work.WorkRequest$Builder.mWorkerClass` @AccessFlag ;
}
procedure `void` `<init>`(`androidx.work.WorkRequest$Builder` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `addTag`(`androidx.work.WorkRequest$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.addTag:(Ljava/lang/String;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest` `build`(`androidx.work.WorkRequest$Builder` v4 @kind this) @signature `Landroidx/work/WorkRequest$Builder;.build:()Landroidx/work/WorkRequest;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest` `buildInternal`() @signature `Landroidx/work/WorkRequest$Builder;.buildInternal:()Landroidx/work/WorkRequest;` @AccessFlag ABSTRACT {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `getThis`() @signature `Landroidx/work/WorkRequest$Builder;.getThis:()Landroidx/work/WorkRequest$Builder;` @AccessFlag ABSTRACT {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `keepResultsForAtLeast`(`androidx.work.WorkRequest$Builder` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.keepResultsForAtLeast:(JLjava/util/concurrent/TimeUnit;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `keepResultsForAtLeast`(`androidx.work.WorkRequest$Builder` v3 @kind this, `java.time.Duration` v4 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.keepResultsForAtLeast:(Ljava/time/Duration;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setBackoffCriteria`(`androidx.work.WorkRequest$Builder` v1 @kind this, `androidx.work.BackoffPolicy` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setBackoffCriteria:(Landroidx/work/BackoffPolicy;JLjava/util/concurrent/TimeUnit;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setBackoffCriteria`(`androidx.work.WorkRequest$Builder` v1 @kind this, `androidx.work.BackoffPolicy` v2 @kind object, `java.time.Duration` v3 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setBackoffCriteria:(Landroidx/work/BackoffPolicy;Ljava/time/Duration;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setConstraints`(`androidx.work.WorkRequest$Builder` v1 @kind this, `androidx.work.Constraints` v2 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setConstraints:(Landroidx/work/Constraints;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setExpedited`(`androidx.work.WorkRequest$Builder` v2 @kind this, `androidx.work.OutOfQuotaPolicy` v3 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setExpedited:(Landroidx/work/OutOfQuotaPolicy;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setInitialDelay`(`androidx.work.WorkRequest$Builder` v2 @kind this, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setInitialDelay:(JLjava/util/concurrent/TimeUnit;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setInitialDelay`(`androidx.work.WorkRequest$Builder` v4 @kind this, `java.time.Duration` v5 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setInitialDelay:(Ljava/time/Duration;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setInitialRunAttemptCount`(`androidx.work.WorkRequest$Builder` v1 @kind this, `int` v2 ) @signature `Landroidx/work/WorkRequest$Builder;.setInitialRunAttemptCount:(I)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setInitialState`(`androidx.work.WorkRequest$Builder` v1 @kind this, `androidx.work.WorkInfo$State` v2 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setInitialState:(Landroidx/work/WorkInfo$State;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setInputData`(`androidx.work.WorkRequest$Builder` v1 @kind this, `androidx.work.Data` v2 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setInputData:(Landroidx/work/Data;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setPeriodStartTime`(`androidx.work.WorkRequest$Builder` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setPeriodStartTime:(JLjava/util/concurrent/TimeUnit;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.work.WorkRequest$Builder` `setScheduleRequestedAt`(`androidx.work.WorkRequest$Builder` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Landroidx/work/WorkRequest$Builder;.setScheduleRequestedAt:(JLjava/util/concurrent/TimeUnit;)Landroidx/work/WorkRequest$Builder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
