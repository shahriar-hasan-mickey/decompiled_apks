record `androidx.constraintlayout.helper.widget.CircularFlow` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.widget.VirtualLayout` @kind class {
  `float`[] `androidx.constraintlayout.helper.widget.CircularFlow.mAngles` @AccessFlag PRIVATE;
  `androidx.constraintlayout.widget.ConstraintLayout` `androidx.constraintlayout.helper.widget.CircularFlow.mContainer` @AccessFlag ;
  `int` `androidx.constraintlayout.helper.widget.CircularFlow.mCountAngle` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.helper.widget.CircularFlow.mCountRadius` @AccessFlag PRIVATE;
  `int`[] `androidx.constraintlayout.helper.widget.CircularFlow.mRadius` @AccessFlag PRIVATE;
  `java.lang.String` `androidx.constraintlayout.helper.widget.CircularFlow.mReferenceAngles` @AccessFlag PRIVATE;
  `java.lang.Float` `androidx.constraintlayout.helper.widget.CircularFlow.mReferenceDefaultAngle` @AccessFlag PRIVATE;
  `java.lang.Integer` `androidx.constraintlayout.helper.widget.CircularFlow.mReferenceDefaultRadius` @AccessFlag PRIVATE;
  `java.lang.String` `androidx.constraintlayout.helper.widget.CircularFlow.mReferenceRadius` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.helper.widget.CircularFlow.mViewCenter` @AccessFlag ;
}
global `float` `@@androidx.constraintlayout.helper.widget.CircularFlow.DEFAULT_ANGLE` @AccessFlag PRIVATE_STATIC;
global `int` `@@androidx.constraintlayout.helper.widget.CircularFlow.DEFAULT_RADIUS` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@androidx.constraintlayout.helper.widget.CircularFlow.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.constraintlayout.helper.widget.CircularFlow` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.constraintlayout.helper.widget.CircularFlow` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.constraintlayout.helper.widget.CircularFlow` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addAngle`(`androidx.constraintlayout.helper.widget.CircularFlow` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.addAngle:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addRadius`(`androidx.constraintlayout.helper.widget.CircularFlow` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.addRadius:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `anchorReferences`(`androidx.constraintlayout.helper.widget.CircularFlow` v9 @kind this) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.anchorReferences:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `float`[] `removeAngle`(`androidx.constraintlayout.helper.widget.CircularFlow` v1 @kind this, `float`[] v2 @kind object, `int` v3 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.removeAngle:([FI)[F` @AccessFlag PRIVATE {

  # return;
}
procedure `float`[] `removeElementFromArray`(`float`[] v5 @kind object, `int` v6 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.removeElementFromArray:([FI)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `removeElementFromArray`(`int`[] v5 @kind object, `int` v6 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.removeElementFromArray:([II)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `removeRadius`(`androidx.constraintlayout.helper.widget.CircularFlow` v1 @kind this, `int`[] v2 @kind object, `int` v3 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.removeRadius:([II)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setAngles`(`androidx.constraintlayout.helper.widget.CircularFlow` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.setAngles:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setRadius`(`androidx.constraintlayout.helper.widget.CircularFlow` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.setRadius:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addViewToCircularFlow`(`androidx.constraintlayout.helper.widget.CircularFlow` v1 @kind this, `android.view.View` v2 @kind object, `int` v3 , `float` v4 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.addViewToCircularFlow:(Landroid/view/View;IF)V` @AccessFlag PUBLIC {

  # return;
}
procedure `float`[] `getAngles`(`androidx.constraintlayout.helper.widget.CircularFlow` v2 @kind this) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.getAngles:()[F` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getRadius`(`androidx.constraintlayout.helper.widget.CircularFlow` v2 @kind this) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.getRadius:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`androidx.constraintlayout.helper.widget.CircularFlow` v5 @kind this, `android.util.AttributeSet` v6 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.init:(Landroid/util/AttributeSet;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isUpdatable`(`androidx.constraintlayout.helper.widget.CircularFlow` v2 @kind this, `android.view.View` v3 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.isUpdatable:(Landroid/view/View;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onAttachedToWindow`(`androidx.constraintlayout.helper.widget.CircularFlow` v3 @kind this) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.onAttachedToWindow:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `removeView`(`androidx.constraintlayout.helper.widget.CircularFlow` v3 @kind this, `android.view.View` v4 @kind object) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.removeView:(Landroid/view/View;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setDefaultAngle`(`androidx.constraintlayout.helper.widget.CircularFlow` v0 @kind this, `float` v1 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.setDefaultAngle:(F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setDefaultRadius`(`androidx.constraintlayout.helper.widget.CircularFlow` v0 @kind this, `int` v1 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.setDefaultRadius:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateAngle`(`androidx.constraintlayout.helper.widget.CircularFlow` v1 @kind this, `android.view.View` v2 @kind object, `float` v3 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.updateAngle:(Landroid/view/View;F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateRadius`(`androidx.constraintlayout.helper.widget.CircularFlow` v2 @kind this, `android.view.View` v3 @kind object, `int` v4 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.updateRadius:(Landroid/view/View;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateReference`(`androidx.constraintlayout.helper.widget.CircularFlow` v1 @kind this, `android.view.View` v2 @kind object, `int` v3 , `float` v4 ) @signature `Landroidx/constraintlayout/helper/widget/CircularFlow;.updateReference:(Landroid/view/View;IF)V` @AccessFlag PUBLIC {

  # return;
}
