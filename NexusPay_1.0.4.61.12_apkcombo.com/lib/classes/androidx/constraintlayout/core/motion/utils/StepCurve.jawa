record `androidx.constraintlayout.core.motion.utils.StepCurve` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.core.motion.utils.Easing` @kind class {
  `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` `androidx.constraintlayout.core.motion.utils.StepCurve.mCurveFit` @AccessFlag ;
}
global `boolean` `@@androidx.constraintlayout.core.motion.utils.StepCurve.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.constraintlayout.core.motion.utils.StepCurve` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/StepCurve;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` `genSpline`(`java.lang.String` v5 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/StepCurve;.genSpline:(Ljava/lang/String;)Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` `genSpline`(`double`[] v18 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/StepCurve;.genSpline:([D)Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `double` `get`(`androidx.constraintlayout.core.motion.utils.StepCurve` v2 @kind this, `double` v3 ) @signature `Landroidx/constraintlayout/core/motion/utils/StepCurve;.get:(D)D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getDiff`(`androidx.constraintlayout.core.motion.utils.StepCurve` v2 @kind this, `double` v3 ) @signature `Landroidx/constraintlayout/core/motion/utils/StepCurve;.getDiff:(D)D` @AccessFlag PUBLIC {

  # return;
}
