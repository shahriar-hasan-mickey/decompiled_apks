record `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.core.motion.utils.CurveFit` @kind class {
  `boolean` `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mExtrapolate` @AccessFlag PRIVATE;
  `double`[] `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mSlopeTemp` @AccessFlag ;
  `double`[] `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mT` @AccessFlag PRIVATE;
  `double`[][] `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mTangent` @AccessFlag PRIVATE;
  `double`[][] `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` v22 @kind this, `double`[] v23 @kind object, `double`[][] v24 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.<init>:([D[[D)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` `buildWave`(`java.lang.String` v8 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.buildWave:(Ljava/lang/String;)Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` `buildWave`(`double`[] v18 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.buildWave:([D)Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `double` `diff`(`double` v10 , `double` v12 , `double` v14 , `double` v16 , `double` v18 , `double` v20 ) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.diff:(DDDDDD)D` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `double` `interpolate`(`double` v12 , `double` v14 , `double` v16 , `double` v18 , `double` v20 , `double` v22 ) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.interpolate:(DDDDDD)D` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `double` `getPos`(`androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` v22 @kind this, `double` v23 , `int` v25 ) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.getPos:(DI)D` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `getPos`(`androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` v23 @kind this, `double` v24 , `double`[] v26 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.getPos:(D[D)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `getPos`(`androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` v23 @kind this, `double` v24 , `float`[] v26 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.getPos:(D[F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getSlope`(`androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` v23 @kind this, `double` v24 , `int` v26 ) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.getSlope:(DI)D` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `getSlope`(`androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` v25 @kind this, `double` v26 , `double`[] v28 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.getSlope:(D[D)V` @AccessFlag PUBLIC {

  # return;
}
procedure `double`[] `getTimePoints`(`androidx.constraintlayout.core.motion.utils.MonotonicCurveFit` v1 @kind this) @signature `Landroidx/constraintlayout/core/motion/utils/MonotonicCurveFit;.getTimePoints:()[D` @AccessFlag PUBLIC {

  # return;
}
