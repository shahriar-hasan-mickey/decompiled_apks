record `androidx.constraintlayout.core.motion.utils.Utils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`androidx.constraintlayout.core.motion.utils.Utils` v0 @kind this) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `clamp`(`int` v1 ) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.clamp:(I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `log`(`java.lang.String` v5 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.log:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `log`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.log:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `logStack`(`java.lang.String` v7 @kind object, `int` v8 ) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.logStack:(Ljava/lang/String;I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `loge`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.loge:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `rgbaTocColor`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.rgbaTocColor:(FFFF)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `socketSend`(`java.lang.String` v3 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.socketSend:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getInterpolatedColor`(`androidx.constraintlayout.core.motion.utils.Utils` v7 @kind this, `float`[] v8 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/Utils;.getInterpolatedColor:([F)I` @AccessFlag PUBLIC {

  # return;
}
