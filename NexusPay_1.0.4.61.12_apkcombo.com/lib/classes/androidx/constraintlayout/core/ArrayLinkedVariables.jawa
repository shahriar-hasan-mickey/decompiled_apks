record `androidx.constraintlayout.core.ArrayLinkedVariables` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.core.ArrayRow$ArrayRowVariables` @kind interface {
  `int` `androidx.constraintlayout.core.ArrayLinkedVariables.ROW_SIZE` @AccessFlag PRIVATE;
  `androidx.constraintlayout.core.SolverVariable` `androidx.constraintlayout.core.ArrayLinkedVariables.candidate` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.core.ArrayLinkedVariables.currentSize` @AccessFlag ;
  `int`[] `androidx.constraintlayout.core.ArrayLinkedVariables.mArrayIndices` @AccessFlag PRIVATE;
  `int`[] `androidx.constraintlayout.core.ArrayLinkedVariables.mArrayNextIndices` @AccessFlag PRIVATE;
  `float`[] `androidx.constraintlayout.core.ArrayLinkedVariables.mArrayValues` @AccessFlag PRIVATE;
  `androidx.constraintlayout.core.Cache` `androidx.constraintlayout.core.ArrayLinkedVariables.mCache` @AccessFlag PROTECTED_FINAL;
  `boolean` `androidx.constraintlayout.core.ArrayLinkedVariables.mDidFillOnce` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.core.ArrayLinkedVariables.mHead` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.core.ArrayLinkedVariables.mLast` @AccessFlag PRIVATE;
  `androidx.constraintlayout.core.ArrayRow` `androidx.constraintlayout.core.ArrayLinkedVariables.mRow` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@androidx.constraintlayout.core.ArrayLinkedVariables.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@androidx.constraintlayout.core.ArrayLinkedVariables.FULL_NEW_CHECK` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.core.ArrayLinkedVariables.NONE` @AccessFlag STATIC_FINAL;
global `float` `@@androidx.constraintlayout.core.ArrayLinkedVariables.epsilon` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.constraintlayout.core.ArrayLinkedVariables` v3 @kind this, `androidx.constraintlayout.core.ArrayRow` v4 @kind object, `androidx.constraintlayout.core.Cache` v5 @kind object) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.<init>:(Landroidx/constraintlayout/core/ArrayRow;Landroidx/constraintlayout/core/Cache;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`androidx.constraintlayout.core.ArrayLinkedVariables` v9 @kind this, `androidx.constraintlayout.core.SolverVariable` v10 @kind object, `float` v11 , `boolean` v12 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.add:(Landroidx/constraintlayout/core/SolverVariable;FZ)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clear`(`androidx.constraintlayout.core.ArrayLinkedVariables` v5 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.clear:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `contains`(`androidx.constraintlayout.core.ArrayLinkedVariables` v6 @kind this, `androidx.constraintlayout.core.SolverVariable` v7 @kind object) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.contains:(Landroidx/constraintlayout/core/SolverVariable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `display`(`androidx.constraintlayout.core.ArrayLinkedVariables` v5 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.display:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `divideByAmount`(`androidx.constraintlayout.core.ArrayLinkedVariables` v4 @kind this, `float` v5 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.divideByAmount:(F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `get`(`androidx.constraintlayout.core.ArrayLinkedVariables` v4 @kind this, `androidx.constraintlayout.core.SolverVariable` v5 @kind object) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.get:(Landroidx/constraintlayout/core/SolverVariable;)F` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `getCurrentSize`(`androidx.constraintlayout.core.ArrayLinkedVariables` v1 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.getCurrentSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getHead`(`androidx.constraintlayout.core.ArrayLinkedVariables` v1 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.getHead:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getId`(`androidx.constraintlayout.core.ArrayLinkedVariables` v1 @kind this, `int` v2 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.getId:(I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `getNextIndice`(`androidx.constraintlayout.core.ArrayLinkedVariables` v1 @kind this, `int` v2 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.getNextIndice:(I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `getPivotCandidate`(`androidx.constraintlayout.core.ArrayLinkedVariables` v6 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.getPivotCandidate:()Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag  {

  # return;
}
procedure `float` `getValue`(`androidx.constraintlayout.core.ArrayLinkedVariables` v1 @kind this, `int` v2 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.getValue:(I)F` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `getVariable`(`androidx.constraintlayout.core.ArrayLinkedVariables` v3 @kind this, `int` v4 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.getVariable:(I)Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getVariableValue`(`androidx.constraintlayout.core.ArrayLinkedVariables` v3 @kind this, `int` v4 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.getVariableValue:(I)F` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasAtLeastOnePositiveVariable`(`androidx.constraintlayout.core.ArrayLinkedVariables` v5 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.hasAtLeastOnePositiveVariable:()Z` @AccessFlag  {

  # return;
}
procedure `int` `indexOf`(`androidx.constraintlayout.core.ArrayLinkedVariables` v5 @kind this, `androidx.constraintlayout.core.SolverVariable` v6 @kind object) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.indexOf:(Landroidx/constraintlayout/core/SolverVariable;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `invert`(`androidx.constraintlayout.core.ArrayLinkedVariables` v5 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.invert:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `put`(`androidx.constraintlayout.core.ArrayLinkedVariables` v9 @kind this, `androidx.constraintlayout.core.SolverVariable` v10 @kind object, `float` v11 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.put:(Landroidx/constraintlayout/core/SolverVariable;F)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `float` `remove`(`androidx.constraintlayout.core.ArrayLinkedVariables` v8 @kind this, `androidx.constraintlayout.core.SolverVariable` v9 @kind object, `boolean` v10 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.remove:(Landroidx/constraintlayout/core/SolverVariable;Z)F` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `sizeInBytes`(`androidx.constraintlayout.core.ArrayLinkedVariables` v1 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.sizeInBytes:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.constraintlayout.core.ArrayLinkedVariables` v5 @kind this) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `use`(`androidx.constraintlayout.core.ArrayLinkedVariables` v5 @kind this, `androidx.constraintlayout.core.ArrayRow` v6 @kind object, `boolean` v7 ) @signature `Landroidx/constraintlayout/core/ArrayLinkedVariables;.use:(Landroidx/constraintlayout/core/ArrayRow;Z)F` @AccessFlag PUBLIC {

  # return;
}
