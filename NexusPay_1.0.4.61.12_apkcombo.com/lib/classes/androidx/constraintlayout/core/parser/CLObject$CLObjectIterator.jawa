record `androidx.constraintlayout.core.parser.CLObject$CLObjectIterator` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `int` `androidx.constraintlayout.core.parser.CLObject$CLObjectIterator.index` @AccessFlag ;
  `androidx.constraintlayout.core.parser.CLObject` `androidx.constraintlayout.core.parser.CLObject$CLObjectIterator.myObject` @AccessFlag ;
  `androidx.constraintlayout.core.parser.CLObject` `androidx.constraintlayout.core.parser.CLObject$CLObjectIterator.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`androidx.constraintlayout.core.parser.CLObject$CLObjectIterator` v0 @kind this, `androidx.constraintlayout.core.parser.CLObject` v1 @kind object, `androidx.constraintlayout.core.parser.CLObject` v2 @kind object) @signature `Landroidx/constraintlayout/core/parser/CLObject$CLObjectIterator;.<init>:(Landroidx/constraintlayout/core/parser/CLObject;Landroidx/constraintlayout/core/parser/CLObject;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`androidx.constraintlayout.core.parser.CLObject$CLObjectIterator` v2 @kind this) @signature `Landroidx/constraintlayout/core/parser/CLObject$CLObjectIterator;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`androidx.constraintlayout.core.parser.CLObject$CLObjectIterator` v2 @kind this) @signature `Landroidx/constraintlayout/core/parser/CLObject$CLObjectIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
