record `androidx.constraintlayout.core.LinearSystem$Row` @kind interface @AccessFlag ABSTRACT_INTERFACE {
}
procedure `void` `addError`(`androidx.constraintlayout.core.SolverVariable` v0 @kind object) @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.addError:(Landroidx/constraintlayout/core/SolverVariable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `getKey`() @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.getKey:()Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `getPivotCandidate`(`androidx.constraintlayout.core.LinearSystem` v0 @kind object, `boolean`[] v1 @kind object) @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.getPivotCandidate:(Landroidx/constraintlayout/core/LinearSystem;[Z)Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `initFromRow`(`androidx.constraintlayout.core.LinearSystem$Row` v0 @kind object) @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.initFromRow:(Landroidx/constraintlayout/core/LinearSystem$Row;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `updateFromFinalVariable`(`androidx.constraintlayout.core.LinearSystem` v0 @kind object, `androidx.constraintlayout.core.SolverVariable` v1 @kind object, `boolean` v2 ) @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.updateFromFinalVariable:(Landroidx/constraintlayout/core/LinearSystem;Landroidx/constraintlayout/core/SolverVariable;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `updateFromRow`(`androidx.constraintlayout.core.LinearSystem` v0 @kind object, `androidx.constraintlayout.core.ArrayRow` v1 @kind object, `boolean` v2 ) @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.updateFromRow:(Landroidx/constraintlayout/core/LinearSystem;Landroidx/constraintlayout/core/ArrayRow;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `updateFromSystem`(`androidx.constraintlayout.core.LinearSystem` v0 @kind object) @signature `Landroidx/constraintlayout/core/LinearSystem$Row;.updateFromSystem:(Landroidx/constraintlayout/core/LinearSystem;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
