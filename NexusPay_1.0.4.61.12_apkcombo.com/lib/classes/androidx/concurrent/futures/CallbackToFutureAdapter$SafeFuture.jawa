record `androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.ListenableFuture` @kind interface {
  `java.lang.ref.WeakReference` `androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture.completerWeakReference` @AccessFlag FINAL;
  `androidx.concurrent.futures.AbstractResolvableFuture` `androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this, `androidx.concurrent.futures.CallbackToFutureAdapter$Completer` v2 @kind object) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.<init>:(Landroidx/concurrent/futures/CallbackToFutureAdapter$Completer;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addListener`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this, `java.lang.Runnable` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `cancel`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v2 @kind this, `boolean` v3 ) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.cancel:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `cancelWithoutNotifyingCompleter`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this, `boolean` v2 ) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.cancelWithoutNotifyingCompleter:(Z)Z` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCancelled`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.isCancelled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDone`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.isDone:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `set`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.set:(Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `setException`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.setException:(Ljava/lang/Throwable;)Z` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind this) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
