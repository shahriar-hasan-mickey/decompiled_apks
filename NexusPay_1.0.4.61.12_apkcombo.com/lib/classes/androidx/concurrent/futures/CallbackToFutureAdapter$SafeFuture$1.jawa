record `androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1` @kind class @AccessFlag  extends `androidx.concurrent.futures.AbstractResolvableFuture` @kind class {
  `androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` `androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1` v0 @kind this, `androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture` v1 @kind object) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture$1;.<init>:(Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `pendingToString`(`androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1` v3 @kind this) @signature `Landroidx/concurrent/futures/CallbackToFutureAdapter$SafeFuture$1;.pendingToString:()Ljava/lang/String;` @AccessFlag PROTECTED {

  # return;
}
