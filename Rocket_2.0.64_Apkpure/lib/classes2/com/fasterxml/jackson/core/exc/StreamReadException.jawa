record `com.fasterxml.jackson.core.exc.StreamReadException` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.fasterxml.jackson.core.JsonProcessingException` @kind class {
  `com.fasterxml.jackson.core.JsonParser` `com.fasterxml.jackson.core.exc.StreamReadException._processor` @AccessFlag PROTECTED_TRANSIENT;
  `com.fasterxml.jackson.core.util.RequestPayload` `com.fasterxml.jackson.core.exc.StreamReadException._requestPayload` @AccessFlag PROTECTED;
}
global `long` `@@com.fasterxml.jackson.core.exc.StreamReadException.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.core.exc.StreamReadException` v1 @kind this, `com.fasterxml.jackson.core.JsonParser` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.<init>:(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.exc.StreamReadException` v1 @kind this, `com.fasterxml.jackson.core.JsonParser` v2 @kind object, `java.lang.String` v3 @kind object, `com.fasterxml.jackson.core.JsonLocation` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.<init>:(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonLocation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.exc.StreamReadException` v1 @kind this, `com.fasterxml.jackson.core.JsonParser` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.<init>:(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.exc.StreamReadException` v0 @kind this, `java.lang.String` v1 @kind object, `com.fasterxml.jackson.core.JsonLocation` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.<init>:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonLocation;Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `getMessage`(`com.fasterxml.jackson.core.exc.StreamReadException` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser` `getProcessor`(`com.fasterxml.jackson.core.exc.StreamReadException` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.getProcessor:()Lcom/fasterxml/jackson/core/JsonParser;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getProcessor`(`com.fasterxml.jackson.core.exc.StreamReadException` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.getProcessor:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.fasterxml.jackson.core.util.RequestPayload` `getRequestPayload`(`com.fasterxml.jackson.core.exc.StreamReadException` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.getRequestPayload:()Lcom/fasterxml/jackson/core/util/RequestPayload;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getRequestPayloadAsString`(`com.fasterxml.jackson.core.exc.StreamReadException` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.getRequestPayloadAsString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.exc.StreamReadException` `withParser`(`com.fasterxml.jackson.core.JsonParser` v0 @kind object) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.withParser:(Lcom/fasterxml/jackson/core/JsonParser;)Lcom/fasterxml/jackson/core/exc/StreamReadException;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.exc.StreamReadException` `withRequestPayload`(`com.fasterxml.jackson.core.util.RequestPayload` v0 @kind object) @signature `Lcom/fasterxml/jackson/core/exc/StreamReadException;.withRequestPayload:(Lcom/fasterxml/jackson/core/util/RequestPayload;)Lcom/fasterxml/jackson/core/exc/StreamReadException;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
