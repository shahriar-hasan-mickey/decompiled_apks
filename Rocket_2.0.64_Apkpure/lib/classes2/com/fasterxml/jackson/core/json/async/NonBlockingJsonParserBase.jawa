record `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.fasterxml.jackson.core.base.ParserBase` @kind class {
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._currBufferStart` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._currInputRowAlt` @AccessFlag PROTECTED;
  `boolean` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._endOfInput` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorState` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorStateAfterValue` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._minorState` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._minorStateAfterSplit` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdTokenType` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._pending32` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._pendingBytes` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quad1` @AccessFlag PROTECTED;
  `int`[] `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quadBuffer` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quadLength` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quoted32` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quotedDigits` @AccessFlag PROTECTED;
  `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` `com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._symbols` @AccessFlag PROTECTED_FINAL;
}
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_FIRST` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_NEXT` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_CLOSED` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_INITIAL` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_FIRST` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_NEXT` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_VALUE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ROOT` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_C` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_CLOSING_ASTERISK` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_CPP` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_LEADING_SLASH` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_YAML` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_APOS_NAME` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_LEADING_COMMA` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_LEADING_WS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_NAME` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_NAME_ESCAPE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_UNQUOTED_NAME` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_DIGITS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_MARKER` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_FRACTION_DIGITS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_INTEGER_DIGITS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_MINUS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_MINUSZERO` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_ZERO` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_BOM` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_GOT_SEPARATOR` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_NEED_SEPARATOR` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_APOS_STRING` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COLON` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COMMA` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_LEADING_WS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_ESCAPE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_2` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_3` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_4` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_ERROR` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_FALSE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NON_STD` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NULL` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_TRUE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_WS_AFTER_COMMA` @AccessFlag PROTECTED_STATIC_FINAL;
global `java.lang.String`[] `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKENS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_INFINITY` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_MINUS_INFINITY` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_NAN` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_PLUS_INFINITY` @AccessFlag PROTECTED_STATIC_FINAL;
global `double`[] `@@com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_VALUES` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v0 @kind this, `com.fasterxml.jackson.core.io.IOContext` v1 @kind object, `int` v2 , `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.<init>:(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `_padLastQuad`(`int` v1 , `int` v2 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._padLastQuad:(II)I` @AccessFlag PROTECTED_STATIC_FINAL {

  # return;
}
procedure `java.lang.String` `_addName`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v16 @kind this, `int`[] v17 @kind object, `int` v18 , `int` v19 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._addName:([III)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_closeArrayScope`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._closeArrayScope:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `_closeInput`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._closeInput:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_closeObjectScope`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._closeObjectScope:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_eofAsNextToken`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._eofAsNextToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_fieldComplete`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._fieldComplete:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `java.lang.String` `_findName`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._findName:(II)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `java.lang.String` `_findName`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._findName:(III)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `java.lang.String` `_findName`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._findName:(IIII)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `java.lang.String` `_getText2`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v3 @kind this, `com.fasterxml.jackson.core.JsonToken` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `java.lang.String` `_nonStdToken`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._nonStdToken:(I)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `_releaseBuffers`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._releaseBuffers:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidChar`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._reportInvalidChar:(I)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidInitial`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this, `int` v3 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._reportInvalidInitial:(I)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidOther`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this, `int` v3 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._reportInvalidOther:(I)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportInvalidOther`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._reportInvalidOther:(II)V` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_startArrayScope`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._startArrayScope:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_startObjectScope`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._startObjectScope:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `_updateTokenLocation`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v5 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._updateTokenLocation:()V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_valueComplete`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this, `com.fasterxml.jackson.core.JsonToken` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._valueComplete:(Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_valueCompleteInt`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._valueCompleteInt:(ILjava/lang/String;)Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `_valueNonStdNumberComplete`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v3 @kind this, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;._valueNonStdNumberComplete:(I)Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `boolean` `canParseAsync`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.canParseAsync:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getBinaryValue`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this, `com.fasterxml.jackson.core.Base64Variant` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.ObjectCodec` `getCodec`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getCodec:()Lcom/fasterxml/jackson/core/ObjectCodec;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonLocation` `getCurrentLocation`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v9 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getCurrentLocation:()Lcom/fasterxml/jackson/core/JsonLocation;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getEmbeddedObject`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getEmbeddedObject:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getInputSource`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getInputSource:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getText`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this, `java.io.Writer` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getText:(Ljava/io/Writer;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getText`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getText:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `char`[] `getTextCharacters`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v4 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getTextCharacters:()[C` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getTextLength`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getTextLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getTextOffset`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getTextOffset:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonLocation` `getTokenLocation`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v9 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getTokenLocation:()Lcom/fasterxml/jackson/core/JsonLocation;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getValueAsString`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getValueAsString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getValueAsString`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasTextCharacters`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.hasTextCharacters:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `readBinaryValue`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v0 @kind this, `com.fasterxml.jackson.core.Base64Variant` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.readBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `releaseBuffered`(`java.io.OutputStream` v0 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.releaseBuffered:(Ljava/io/OutputStream;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setCodec`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this, `com.fasterxml.jackson.core.ObjectCodec` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.setCodec:(Lcom/fasterxml/jackson/core/ObjectCodec;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` `symbolTableForTests`(`com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase;.symbolTableForTests:()Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;` @AccessFlag PROTECTED {

  # return;
}
