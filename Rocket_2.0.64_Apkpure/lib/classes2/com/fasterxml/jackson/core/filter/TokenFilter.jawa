record `com.fasterxml.jackson.core.filter.TokenFilter` @kind class @AccessFlag PUBLIC {
}
global `com.fasterxml.jackson.core.filter.TokenFilter` `@@com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `boolean` `_includeScalar`(`com.fasterxml.jackson.core.filter.TokenFilter` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;._includeScalar:()Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `filterFinishArray`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.filterFinishArray:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `filterFinishObject`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.filterFinishObject:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.filter.TokenFilter` `filterStartArray`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.filterStartArray:()Lcom/fasterxml/jackson/core/filter/TokenFilter;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.filter.TokenFilter` `filterStartObject`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.filterStartObject:()Lcom/fasterxml/jackson/core/filter/TokenFilter;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeBinary`(`com.fasterxml.jackson.core.filter.TokenFilter` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeBinary:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeBoolean`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `boolean` v1 ) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeBoolean:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.filter.TokenFilter` `includeElement`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `int` v1 ) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeElement:(I)Lcom/fasterxml/jackson/core/filter/TokenFilter;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeEmbeddedValue`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeEmbeddedValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeNull`(`com.fasterxml.jackson.core.filter.TokenFilter` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeNull:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeNumber`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `double` v1 ) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeNumber:(D)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeNumber`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `float` v1 ) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeNumber:(F)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeNumber`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `int` v1 ) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeNumber:(I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeNumber`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `long` v1 ) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeNumber:(J)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeNumber`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `java.math.BigDecimal` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeNumber:(Ljava/math/BigDecimal;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeNumber`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `java.math.BigInteger` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeNumber:(Ljava/math/BigInteger;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.filter.TokenFilter` `includeProperty`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeProperty:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/filter/TokenFilter;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeRawValue`(`com.fasterxml.jackson.core.filter.TokenFilter` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeRawValue:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.filter.TokenFilter` `includeRootValue`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `int` v1 ) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeRootValue:(I)Lcom/fasterxml/jackson/core/filter/TokenFilter;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeString`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `java.io.Reader` v1 @kind object, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeString:(Ljava/io/Reader;I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeString`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeString:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `includeValue`(`com.fasterxml.jackson.core.filter.TokenFilter` v0 @kind this, `com.fasterxml.jackson.core.JsonParser` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.includeValue:(Lcom/fasterxml/jackson/core/JsonParser;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.fasterxml.jackson.core.filter.TokenFilter` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/filter/TokenFilter;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
