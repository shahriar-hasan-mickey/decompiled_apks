record `com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.StdSerializer` @kind class {
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v3 @kind this, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `char`[] v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.a:(Lcom/fasterxml/jackson/core/JsonGenerator;[C)V` @AccessFlag PRIVATE_FINAL {

  # return;
}
procedure `void` `acceptJsonFormatVisitor`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v1 @kind this, `com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper` v2 @kind object, `com.fasterxml.jackson.databind.JavaType` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.acceptJsonFormatVisitor:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonNode` `getSchema`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v2 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object, `java.lang.reflect.Type` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.getSchema:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `char`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;[C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v1 @kind this, `char`[] v2 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.serialize:([CLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.serializeWithType:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer` v2 @kind this, `char`[] v3 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v5 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v6 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer;.serializeWithType:([CLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC {

  # return;
}
