record `com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer` @kind class {
}
global `com.fasterxml.jackson.databind.JavaType` `@@com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v1 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v2 @kind object, `java.lang.Boolean` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `_withResolved`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v1 @kind this, `com.fasterxml.jackson.databind.BeanProperty` v2 @kind object, `java.lang.Boolean` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;._withResolved:(Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `acceptJsonFormatVisitor`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v1 @kind this, `com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper` v2 @kind object, `com.fasterxml.jackson.databind.JavaType` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.acceptJsonFormatVisitor:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `getContentSerializer`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.getContentSerializer:()Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JavaType` `getContentType`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.getContentType:()Lcom/fasterxml/jackson/databind/JavaType;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonNode` `getSchema`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v1 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.getSchema:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasSingleElement`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.hasSingleElement:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `hasSingleElement`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v1 @kind this, `float`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.hasSingleElement:([F)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `float`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;[F)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v2 @kind this, `float`[] v3 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.serialize:([FLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `serializeContents`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.serializeContents:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serializeContents`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer` v2 @kind this, `float`[] v3 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer;.serializeContents:([FLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
