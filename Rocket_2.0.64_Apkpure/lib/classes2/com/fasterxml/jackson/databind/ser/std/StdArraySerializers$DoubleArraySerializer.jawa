record `com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` @kind class {
}
global `com.fasterxml.jackson.databind.JavaType` `@@com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v1 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v2 @kind object, `java.lang.Boolean` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `_withResolved`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v1 @kind this, `com.fasterxml.jackson.databind.BeanProperty` v2 @kind object, `java.lang.Boolean` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;._withResolved:(Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.ContainerSerializer` `_withValueTypeSerializer`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;._withValueTypeSerializer:(Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)Lcom/fasterxml/jackson/databind/ser/ContainerSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `acceptJsonFormatVisitor`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v1 @kind this, `com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper` v2 @kind object, `com.fasterxml.jackson.databind.JavaType` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.acceptJsonFormatVisitor:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `getContentSerializer`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.getContentSerializer:()Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JavaType` `getContentType`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.getContentType:()Lcom/fasterxml/jackson/databind/JavaType;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonNode` `getSchema`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v1 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.getSchema:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasSingleElement`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.hasSingleElement:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `hasSingleElement`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v1 @kind this, `double`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.hasSingleElement:([D)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `double`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;[D)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v2 @kind this, `double`[] v3 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.serialize:([DLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `serializeContents`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.serializeContents:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serializeContents`(`com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer` v3 @kind this, `double`[] v4 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v5 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v6 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer;.serializeContents:([DLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
