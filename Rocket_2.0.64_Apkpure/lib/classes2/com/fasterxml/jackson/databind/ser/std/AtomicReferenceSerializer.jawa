record `com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` @kind class {
}
global `long` `@@com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v1 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v2 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v3 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v4 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v5 @kind object, `java.lang.Object` v6 @kind object, `boolean` v7 ) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;.<init>:(Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Ljava/lang/Object;Z)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `com.fasterxml.jackson.databind.type.ReferenceType` v1 @kind object, `boolean` v2 , `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v3 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;.<init>:(Lcom/fasterxml/jackson/databind/type/ReferenceType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `_getReferenced`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._getReferenced:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `_getReferenced`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._getReferenced:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.Object` `_getReferencedIfPresent`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._getReferencedIfPresent:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `_getReferencedIfPresent`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._getReferencedIfPresent:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `_isValuePresent`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._isValuePresent:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `boolean` `_isValuePresent`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;._isValuePresent:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` `withContentInclusion`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v9 @kind this, `java.lang.Object` v10 @kind object, `boolean` v11 ) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;.withContentInclusion:(Ljava/lang/Object;Z)Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer` `withResolved`(`com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer` v9 @kind this, `com.fasterxml.jackson.databind.BeanProperty` v10 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v11 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v12 @kind object, `com.fasterxml.jackson.databind.util.NameTransformer` v13 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;.withResolved:(Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;)Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;` @AccessFlag PROTECTED {

  # return;
}
