record `com.fasterxml.jackson.databind.node.BinaryNode` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.node.ValueNode` @kind class {
  `byte`[] `com.fasterxml.jackson.databind.node.BinaryNode._data` @AccessFlag PROTECTED_FINAL;
}
global `com.fasterxml.jackson.databind.node.BinaryNode` `@@com.fasterxml.jackson.databind.node.BinaryNode.a` @AccessFlag STATIC_FINAL;
global `long` `@@com.fasterxml.jackson.databind.node.BinaryNode.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.node.BinaryNode` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.node.BinaryNode` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.<init>:([BII)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.node.BinaryNode` `valueOf`(`byte`[] v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.valueOf:([B)Lcom/fasterxml/jackson/databind/node/BinaryNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.node.BinaryNode` `valueOf`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.valueOf:([BII)Lcom/fasterxml/jackson/databind/node/BinaryNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `asText`(`com.fasterxml.jackson.databind.node.BinaryNode` v3 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.asText:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `asToken`(`com.fasterxml.jackson.databind.node.BinaryNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.asToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `binaryValue`(`com.fasterxml.jackson.databind.node.BinaryNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.binaryValue:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.fasterxml.jackson.databind.node.BinaryNode` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.node.JsonNodeType` `getNodeType`(`com.fasterxml.jackson.databind.node.BinaryNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.getNodeType:()Lcom/fasterxml/jackson/databind/node/JsonNodeType;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.fasterxml.jackson.databind.node.BinaryNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.node.BinaryNode` v3 @kind this, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BinaryNode;.serialize:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
