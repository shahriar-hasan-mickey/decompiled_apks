record `com.fasterxml.jackson.databind.node.BaseJsonNode` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.fasterxml.jackson.databind.JsonNode` @kind class, `java.io.Serializable` @kind interface {
}
global `long` `@@com.fasterxml.jackson.databind.node.BaseJsonNode.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v0 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `asToken`() @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.asToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonNode` `findPath`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.findPath:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `hashCode`() @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.hashCode:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser$NumberType` `numberType`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.numberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonNode` `required`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v2 @kind this, `int` v3 ) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.required:(I)Lcom/fasterxml/jackson/databind/JsonNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonNode` `required`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.required:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.core.JsonGenerator` v0 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.serialize:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.core.JsonGenerator` v0 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.serializeWithType:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toPrettyString`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.toPrettyString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser` `traverse`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.traverse:()Lcom/fasterxml/jackson/core/JsonParser;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser` `traverse`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v1 @kind this, `com.fasterxml.jackson.core.ObjectCodec` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.traverse:(Lcom/fasterxml/jackson/core/ObjectCodec;)Lcom/fasterxml/jackson/core/JsonParser;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.fasterxml.jackson.databind.node.BaseJsonNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BaseJsonNode;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
