record `com.fasterxml.jackson.databind.util.LinkedNode` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `com.fasterxml.jackson.databind.util.LinkedNode.a` @AccessFlag PRIVATE_FINAL;
  `com.fasterxml.jackson.databind.util.LinkedNode` `com.fasterxml.jackson.databind.util.LinkedNode.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.util.LinkedNode` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.databind.util.LinkedNode` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/LinkedNode;.<init>:(Ljava/lang/Object;Lcom/fasterxml/jackson/databind/util/LinkedNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `contains`(`com.fasterxml.jackson.databind.util.LinkedNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/LinkedNode;.contains:(Lcom/fasterxml/jackson/databind/util/LinkedNode;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `linkNext`(`com.fasterxml.jackson.databind.util.LinkedNode` v1 @kind this, `com.fasterxml.jackson.databind.util.LinkedNode` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/LinkedNode;.linkNext:(Lcom/fasterxml/jackson/databind/util/LinkedNode;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.util.LinkedNode` `next`(`com.fasterxml.jackson.databind.util.LinkedNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/util/LinkedNode;.next:()Lcom/fasterxml/jackson/databind/util/LinkedNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `value`(`com.fasterxml.jackson.databind.util.LinkedNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/util/LinkedNode;.value:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
