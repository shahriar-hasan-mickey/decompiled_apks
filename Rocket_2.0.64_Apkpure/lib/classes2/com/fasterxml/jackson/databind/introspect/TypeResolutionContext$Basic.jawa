record `com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.introspect.TypeResolutionContext` @kind interface {
  `com.fasterxml.jackson.databind.type.TypeFactory` `com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic.a` @AccessFlag PRIVATE_FINAL;
  `com.fasterxml.jackson.databind.type.TypeBindings` `com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic` v0 @kind this, `com.fasterxml.jackson.databind.type.TypeFactory` v1 @kind object, `com.fasterxml.jackson.databind.type.TypeBindings` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/introspect/TypeResolutionContext$Basic;.<init>:(Lcom/fasterxml/jackson/databind/type/TypeFactory;Lcom/fasterxml/jackson/databind/type/TypeBindings;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.JavaType` `resolveType`(`com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic` v2 @kind this, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/introspect/TypeResolutionContext$Basic;.resolveType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;` @AccessFlag PUBLIC {

  # return;
}
