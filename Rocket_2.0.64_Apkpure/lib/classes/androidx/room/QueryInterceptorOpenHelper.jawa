record `androidx.room.QueryInterceptorOpenHelper` @kind class @AccessFlag FINAL extends `androidx.sqlite.db.SupportSQLiteOpenHelper` @kind interface, `androidx.room.DelegatingOpenHelper` @kind interface {
  `androidx.sqlite.db.SupportSQLiteOpenHelper` `androidx.room.QueryInterceptorOpenHelper.mDelegate` @AccessFlag PRIVATE_FINAL;
  `androidx.room.RoomDatabase$QueryCallback` `androidx.room.QueryInterceptorOpenHelper.mQueryCallback` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `androidx.room.QueryInterceptorOpenHelper.mQueryCallbackExecutor` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.room.QueryInterceptorOpenHelper` v0 @kind this, `androidx.sqlite.db.SupportSQLiteOpenHelper` v1 @kind object, `androidx.room.RoomDatabase$QueryCallback` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Landroidx/room/QueryInterceptorOpenHelper;.<init>:(Landroidx/sqlite/db/SupportSQLiteOpenHelper;Landroidx/room/RoomDatabase$QueryCallback;Ljava/util/concurrent/Executor;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `close`(`androidx.room.QueryInterceptorOpenHelper` v1 @kind this) @signature `Landroidx/room/QueryInterceptorOpenHelper;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getDatabaseName`(`androidx.room.QueryInterceptorOpenHelper` v1 @kind this) @signature `Landroidx/room/QueryInterceptorOpenHelper;.getDatabaseName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.sqlite.db.SupportSQLiteOpenHelper` `getDelegate`(`androidx.room.QueryInterceptorOpenHelper` v1 @kind this) @signature `Landroidx/room/QueryInterceptorOpenHelper;.getDelegate:()Landroidx/sqlite/db/SupportSQLiteOpenHelper;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.sqlite.db.SupportSQLiteDatabase` `getReadableDatabase`(`androidx.room.QueryInterceptorOpenHelper` v4 @kind this) @signature `Landroidx/room/QueryInterceptorOpenHelper;.getReadableDatabase:()Landroidx/sqlite/db/SupportSQLiteDatabase;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.sqlite.db.SupportSQLiteDatabase` `getWritableDatabase`(`androidx.room.QueryInterceptorOpenHelper` v4 @kind this) @signature `Landroidx/room/QueryInterceptorOpenHelper;.getWritableDatabase:()Landroidx/sqlite/db/SupportSQLiteDatabase;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setWriteAheadLoggingEnabled`(`androidx.room.QueryInterceptorOpenHelper` v1 @kind this, `boolean` v2 ) @signature `Landroidx/room/QueryInterceptorOpenHelper;.setWriteAheadLoggingEnabled:(Z)V` @AccessFlag PUBLIC {

  # return;
}
