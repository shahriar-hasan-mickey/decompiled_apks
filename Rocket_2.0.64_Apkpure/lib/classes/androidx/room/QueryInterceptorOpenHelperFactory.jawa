record `androidx.room.QueryInterceptorOpenHelperFactory` @kind class @AccessFlag FINAL extends `androidx.sqlite.db.SupportSQLiteOpenHelper$Factory` @kind interface {
  `androidx.sqlite.db.SupportSQLiteOpenHelper$Factory` `androidx.room.QueryInterceptorOpenHelperFactory.mDelegate` @AccessFlag PRIVATE_FINAL;
  `androidx.room.RoomDatabase$QueryCallback` `androidx.room.QueryInterceptorOpenHelperFactory.mQueryCallback` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `androidx.room.QueryInterceptorOpenHelperFactory.mQueryCallbackExecutor` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.room.QueryInterceptorOpenHelperFactory` v0 @kind this, `androidx.sqlite.db.SupportSQLiteOpenHelper$Factory` v1 @kind object, `androidx.room.RoomDatabase$QueryCallback` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Landroidx/room/QueryInterceptorOpenHelperFactory;.<init>:(Landroidx/sqlite/db/SupportSQLiteOpenHelper$Factory;Landroidx/room/RoomDatabase$QueryCallback;Ljava/util/concurrent/Executor;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `androidx.sqlite.db.SupportSQLiteOpenHelper` `create`(`androidx.room.QueryInterceptorOpenHelperFactory` v3 @kind this, `androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration` v4 @kind object) @signature `Landroidx/room/QueryInterceptorOpenHelperFactory;.create:(Landroidx/sqlite/db/SupportSQLiteOpenHelper$Configuration;)Landroidx/sqlite/db/SupportSQLiteOpenHelper;` @AccessFlag PUBLIC {

  # return;
}
