record `androidx.core.math.MathUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`androidx.core.math.MathUtils` v0 @kind this) @signature `Landroidx/core/math/MathUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `addExact`(`int` v1 , `int` v2 ) @signature `Landroidx/core/math/MathUtils;.addExact:(II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `addExact`(`long` v3 , `long` v5 ) @signature `Landroidx/core/math/MathUtils;.addExact:(JJ)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `clamp`(`double` v1 , `double` v3 , `double` v5 ) @signature `Landroidx/core/math/MathUtils;.clamp:(DDD)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float` `clamp`(`float` v1 , `float` v2 , `float` v3 ) @signature `Landroidx/core/math/MathUtils;.clamp:(FFF)F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `clamp`(`int` v0 , `int` v1 , `int` v2 ) @signature `Landroidx/core/math/MathUtils;.clamp:(III)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `clamp`(`long` v1 , `long` v3 , `long` v5 ) @signature `Landroidx/core/math/MathUtils;.clamp:(JJJ)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `decrementExact`(`int` v1 ) @signature `Landroidx/core/math/MathUtils;.decrementExact:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `decrementExact`(`long` v3 ) @signature `Landroidx/core/math/MathUtils;.decrementExact:(J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `incrementExact`(`int` v1 ) @signature `Landroidx/core/math/MathUtils;.incrementExact:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `incrementExact`(`long` v3 ) @signature `Landroidx/core/math/MathUtils;.incrementExact:(J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `multiplyExact`(`int` v4 , `int` v5 ) @signature `Landroidx/core/math/MathUtils;.multiplyExact:(II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `multiplyExact`(`long` v7 , `long` v9 ) @signature `Landroidx/core/math/MathUtils;.multiplyExact:(JJ)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `negateExact`(`int` v1 ) @signature `Landroidx/core/math/MathUtils;.negateExact:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `negateExact`(`long` v3 ) @signature `Landroidx/core/math/MathUtils;.negateExact:(J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `subtractExact`(`int` v1 , `int` v2 ) @signature `Landroidx/core/math/MathUtils;.subtractExact:(II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `subtractExact`(`long` v3 , `long` v5 ) @signature `Landroidx/core/math/MathUtils;.subtractExact:(JJ)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `toIntExact`(`long` v4 ) @signature `Landroidx/core/math/MathUtils;.toIntExact:(J)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
