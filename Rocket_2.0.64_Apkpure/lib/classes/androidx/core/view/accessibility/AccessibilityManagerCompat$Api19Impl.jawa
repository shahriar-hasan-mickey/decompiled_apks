record `androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl` v0 @kind this) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat$Api19Impl;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `addTouchExplorationStateChangeListenerWrapper`(`android.view.accessibility.AccessibilityManager` v1 @kind object, `androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener` v2 @kind object) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat$Api19Impl;.addTouchExplorationStateChangeListenerWrapper:(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$TouchExplorationStateChangeListener;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `removeTouchExplorationStateChangeListenerWrapper`(`android.view.accessibility.AccessibilityManager` v1 @kind object, `androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener` v2 @kind object) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat$Api19Impl;.removeTouchExplorationStateChangeListenerWrapper:(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$TouchExplorationStateChangeListener;)Z` @AccessFlag STATIC {

  # return;
}
