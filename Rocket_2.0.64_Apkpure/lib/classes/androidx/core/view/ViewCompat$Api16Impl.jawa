record `androidx.core.view.ViewCompat$Api16Impl` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`androidx.core.view.ViewCompat$Api16Impl` v0 @kind this) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `android.view.accessibility.AccessibilityNodeProvider` `getAccessibilityNodeProvider`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.getAccessibilityNodeProvider:(Landroid/view/View;)Landroid/view/accessibility/AccessibilityNodeProvider;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `getFitsSystemWindows`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.getFitsSystemWindows:(Landroid/view/View;)Z` @AccessFlag STATIC {

  # return;
}
procedure `int` `getImportantForAccessibility`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.getImportantForAccessibility:(Landroid/view/View;)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `getMinimumHeight`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.getMinimumHeight:(Landroid/view/View;)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `getMinimumWidth`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.getMinimumWidth:(Landroid/view/View;)I` @AccessFlag STATIC {

  # return;
}
procedure `android.view.ViewParent` `getParentForAccessibility`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.getParentForAccessibility:(Landroid/view/View;)Landroid/view/ViewParent;` @AccessFlag STATIC {

  # return;
}
procedure `int` `getWindowSystemUiVisibility`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.getWindowSystemUiVisibility:(Landroid/view/View;)I` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `hasOverlappingRendering`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.hasOverlappingRendering:(Landroid/view/View;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `hasTransientState`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.hasTransientState:(Landroid/view/View;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `performAccessibilityAction`(`android.view.View` v0 @kind object, `int` v1 , `android.os.Bundle` v2 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.performAccessibilityAction:(Landroid/view/View;ILandroid/os/Bundle;)Z` @AccessFlag STATIC {

  # return;
}
procedure `void` `postInvalidateOnAnimation`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.postInvalidateOnAnimation:(Landroid/view/View;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `postInvalidateOnAnimation`(`android.view.View` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.postInvalidateOnAnimation:(Landroid/view/View;IIII)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `postOnAnimation`(`android.view.View` v0 @kind object, `java.lang.Runnable` v1 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.postOnAnimation:(Landroid/view/View;Ljava/lang/Runnable;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `postOnAnimationDelayed`(`android.view.View` v0 @kind object, `java.lang.Runnable` v1 @kind object, `long` v2 ) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.postOnAnimationDelayed:(Landroid/view/View;Ljava/lang/Runnable;J)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `removeOnGlobalLayoutListener`(`android.view.ViewTreeObserver` v0 @kind object, `android.view.ViewTreeObserver$OnGlobalLayoutListener` v1 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.removeOnGlobalLayoutListener:(Landroid/view/ViewTreeObserver;Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `requestFitSystemWindows`(`android.view.View` v0 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.requestFitSystemWindows:(Landroid/view/View;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `setBackground`(`android.view.View` v0 @kind object, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.setBackground:(Landroid/view/View;Landroid/graphics/drawable/Drawable;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `setHasTransientState`(`android.view.View` v0 @kind object, `boolean` v1 ) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.setHasTransientState:(Landroid/view/View;Z)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `setImportantForAccessibility`(`android.view.View` v0 @kind object, `int` v1 ) @signature `Landroidx/core/view/ViewCompat$Api16Impl;.setImportantForAccessibility:(Landroid/view/View;I)V` @AccessFlag STATIC {

  # return;
}
