record `androidx.core.graphics.BitmapCompat` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`androidx.core.graphics.BitmapCompat` v0 @kind this) @signature `Landroidx/core/graphics/BitmapCompat;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `android.graphics.Bitmap` `createScaledBitmap`(`android.graphics.Bitmap` v21 @kind object, `int` v22 , `int` v23 , `android.graphics.Rect` v24 @kind object, `boolean` v25 ) @signature `Landroidx/core/graphics/BitmapCompat;.createScaledBitmap:(Landroid/graphics/Bitmap;IILandroid/graphics/Rect;Z)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getAllocationByteCount`(`android.graphics.Bitmap` v0 @kind object) @signature `Landroidx/core/graphics/BitmapCompat;.getAllocationByteCount:(Landroid/graphics/Bitmap;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `hasMipMap`(`android.graphics.Bitmap` v0 @kind object) @signature `Landroidx/core/graphics/BitmapCompat;.hasMipMap:(Landroid/graphics/Bitmap;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `setHasMipMap`(`android.graphics.Bitmap` v0 @kind object, `boolean` v1 ) @signature `Landroidx/core/graphics/BitmapCompat;.setHasMipMap:(Landroid/graphics/Bitmap;Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `sizeAtStep`(`int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Landroidx/core/graphics/BitmapCompat;.sizeAtStep:(IIII)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
