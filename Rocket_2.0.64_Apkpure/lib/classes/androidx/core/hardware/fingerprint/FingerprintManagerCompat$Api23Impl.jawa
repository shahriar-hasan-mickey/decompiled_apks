record `androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl` v0 @kind this) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$Api23Impl;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `authenticate`(`java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `android.os.CancellationSignal` v8 @kind object, `int` v9 , `java.lang.Object` v10 @kind object, `android.os.Handler` v11 @kind object) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$Api23Impl;.authenticate:(Ljava/lang/Object;Ljava/lang/Object;Landroid/os/CancellationSignal;ILjava/lang/Object;Landroid/os/Handler;)V` @AccessFlag STATIC {

  # return;
}
procedure `android.hardware.fingerprint.FingerprintManager$CryptoObject` `getCryptoObject`(`java.lang.Object` v0 @kind object) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$Api23Impl;.getCryptoObject:(Ljava/lang/Object;)Landroid/hardware/fingerprint/FingerprintManager$CryptoObject;` @AccessFlag STATIC {

  # return;
}
procedure `android.hardware.fingerprint.FingerprintManager` `getFingerprintManagerOrNull`(`android.content.Context` v2 @kind object) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$Api23Impl;.getFingerprintManagerOrNull:(Landroid/content/Context;)Landroid/hardware/fingerprint/FingerprintManager;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `hasEnrolledFingerprints`(`java.lang.Object` v0 @kind object) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$Api23Impl;.hasEnrolledFingerprints:(Ljava/lang/Object;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `isHardwareDetected`(`java.lang.Object` v0 @kind object) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$Api23Impl;.isHardwareDetected:(Ljava/lang/Object;)Z` @AccessFlag STATIC {

  # return;
}
procedure `androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` `unwrapCryptoObject`(`java.lang.Object` v2 @kind object) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$Api23Impl;.unwrapCryptoObject:(Ljava/lang/Object;)Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `android.hardware.fingerprint.FingerprintManager$CryptoObject` `wrapCryptoObject`(`androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` v2 @kind object) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$Api23Impl;.wrapCryptoObject:(Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;)Landroid/hardware/fingerprint/FingerprintManager$CryptoObject;` @AccessFlag PUBLIC_STATIC {

  # return;
}
