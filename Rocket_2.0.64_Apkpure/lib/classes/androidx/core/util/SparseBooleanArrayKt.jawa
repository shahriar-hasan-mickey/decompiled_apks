record `androidx.core.util.SparseBooleanArrayKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `contains`(`android.util.SparseBooleanArray` v1 @kind object, `int` v2 ) @signature `Landroidx/core/util/SparseBooleanArrayKt;.contains:(Landroid/util/SparseBooleanArray;I)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `boolean` `containsKey`(`android.util.SparseBooleanArray` v1 @kind object, `int` v2 ) @signature `Landroidx/core/util/SparseBooleanArrayKt;.containsKey:(Landroid/util/SparseBooleanArray;I)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `boolean` `containsValue`(`android.util.SparseBooleanArray` v1 @kind object, `boolean` v2 ) @signature `Landroidx/core/util/SparseBooleanArrayKt;.containsValue:(Landroid/util/SparseBooleanArray;Z)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `void` `forEach`(`android.util.SparseBooleanArray` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.forEach:(Landroid/util/SparseBooleanArray;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `boolean` `getOrDefault`(`android.util.SparseBooleanArray` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Landroidx/core/util/SparseBooleanArrayKt;.getOrDefault:(Landroid/util/SparseBooleanArray;IZ)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `boolean` `getOrElse`(`android.util.SparseBooleanArray` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.getOrElse:(Landroid/util/SparseBooleanArray;ILkotlin/jvm/functions/Function0;)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `int` `getSize`(`android.util.SparseBooleanArray` v1 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.getSize:(Landroid/util/SparseBooleanArray;)I` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `boolean` `isEmpty`(`android.util.SparseBooleanArray` v1 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.isEmpty:(Landroid/util/SparseBooleanArray;)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `boolean` `isNotEmpty`(`android.util.SparseBooleanArray` v1 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.isNotEmpty:(Landroid/util/SparseBooleanArray;)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `kotlin.collections.IntIterator` `keyIterator`(`android.util.SparseBooleanArray` v1 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.keyIterator:(Landroid/util/SparseBooleanArray;)Lkotlin/collections/IntIterator;` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `android.util.SparseBooleanArray` `plus`(`android.util.SparseBooleanArray` v3 @kind object, `android.util.SparseBooleanArray` v4 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.plus:(Landroid/util/SparseBooleanArray;Landroid/util/SparseBooleanArray;)Landroid/util/SparseBooleanArray;` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `void` `putAll`(`android.util.SparseBooleanArray` v4 @kind object, `android.util.SparseBooleanArray` v5 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.putAll:(Landroid/util/SparseBooleanArray;Landroid/util/SparseBooleanArray;)V` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `boolean` `remove`(`android.util.SparseBooleanArray` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Landroidx/core/util/SparseBooleanArrayKt;.remove:(Landroid/util/SparseBooleanArray;IZ)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `void` `set`(`android.util.SparseBooleanArray` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Landroidx/core/util/SparseBooleanArrayKt;.set:(Landroid/util/SparseBooleanArray;IZ)V` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
procedure `kotlin.collections.BooleanIterator` `valueIterator`(`android.util.SparseBooleanArray` v1 @kind object) @signature `Landroidx/core/util/SparseBooleanArrayKt;.valueIterator:(Landroid/util/SparseBooleanArray;)Lkotlin/collections/BooleanIterator;` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
