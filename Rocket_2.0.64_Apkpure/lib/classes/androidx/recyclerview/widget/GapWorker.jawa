record `androidx.recyclerview.widget.GapWorker` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `androidx.recyclerview.widget.GapWorker.mFrameIntervalNs` @AccessFlag ;
  `long` `androidx.recyclerview.widget.GapWorker.mPostTimeNs` @AccessFlag ;
  `java.util.ArrayList` `androidx.recyclerview.widget.GapWorker.mRecyclerViews` @AccessFlag ;
  `java.util.ArrayList` `androidx.recyclerview.widget.GapWorker.mTasks` @AccessFlag PRIVATE;
}
global `java.lang.ThreadLocal` `@@androidx.recyclerview.widget.GapWorker.sGapWorker` @AccessFlag STATIC_FINAL;
global `java.util.Comparator` `@@androidx.recyclerview.widget.GapWorker.sTaskComparator` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Landroidx/recyclerview/widget/GapWorker;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.recyclerview.widget.GapWorker` v1 @kind this) @signature `Landroidx/recyclerview/widget/GapWorker;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `buildTaskList`(`androidx.recyclerview.widget.GapWorker` v12 @kind this) @signature `Landroidx/recyclerview/widget/GapWorker;.buildTaskList:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `flushTaskWithDeadline`(`androidx.recyclerview.widget.GapWorker` v3 @kind this, `androidx.recyclerview.widget.GapWorker$Task` v4 @kind object, `long` v5 ) @signature `Landroidx/recyclerview/widget/GapWorker;.flushTaskWithDeadline:(Landroidx/recyclerview/widget/GapWorker$Task;J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `flushTasksWithDeadline`(`androidx.recyclerview.widget.GapWorker` v3 @kind this, `long` v4 ) @signature `Landroidx/recyclerview/widget/GapWorker;.flushTasksWithDeadline:(J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isPrefetchPositionAttached`(`androidx.recyclerview.widget.RecyclerView` v5 @kind object, `int` v6 ) @signature `Landroidx/recyclerview/widget/GapWorker;.isPrefetchPositionAttached:(Landroidx/recyclerview/widget/RecyclerView;I)Z` @AccessFlag STATIC {

  # return;
}
procedure `void` `prefetchInnerRecyclerViewWithDeadline`(`androidx.recyclerview.widget.GapWorker` v3 @kind this, `androidx.recyclerview.widget.RecyclerView` v4 @kind object, `long` v5 ) @signature `Landroidx/recyclerview/widget/GapWorker;.prefetchInnerRecyclerViewWithDeadline:(Landroidx/recyclerview/widget/RecyclerView;J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `androidx.recyclerview.widget.RecyclerView$ViewHolder` `prefetchPositionWithDeadline`(`androidx.recyclerview.widget.GapWorker` v2 @kind this, `androidx.recyclerview.widget.RecyclerView` v3 @kind object, `int` v4 , `long` v5 ) @signature `Landroidx/recyclerview/widget/GapWorker;.prefetchPositionWithDeadline:(Landroidx/recyclerview/widget/RecyclerView;IJ)Landroidx/recyclerview/widget/RecyclerView$ViewHolder;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`androidx.recyclerview.widget.GapWorker` v1 @kind this, `androidx.recyclerview.widget.RecyclerView` v2 @kind object) @signature `Landroidx/recyclerview/widget/GapWorker;.add:(Landroidx/recyclerview/widget/RecyclerView;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `postFromTraversal`(`androidx.recyclerview.widget.GapWorker` v5 @kind this, `androidx.recyclerview.widget.RecyclerView` v6 @kind object, `int` v7 , `int` v8 ) @signature `Landroidx/recyclerview/widget/GapWorker;.postFromTraversal:(Landroidx/recyclerview/widget/RecyclerView;II)V` @AccessFlag  {

  # return;
}
procedure `void` `prefetch`(`androidx.recyclerview.widget.GapWorker` v0 @kind this, `long` v1 ) @signature `Landroidx/recyclerview/widget/GapWorker;.prefetch:(J)V` @AccessFlag  {

  # return;
}
procedure `void` `remove`(`androidx.recyclerview.widget.GapWorker` v1 @kind this, `androidx.recyclerview.widget.RecyclerView` v2 @kind object) @signature `Landroidx/recyclerview/widget/GapWorker;.remove:(Landroidx/recyclerview/widget/RecyclerView;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `run`(`androidx.recyclerview.widget.GapWorker` v8 @kind this) @signature `Landroidx/recyclerview/widget/GapWorker;.run:()V` @AccessFlag PUBLIC {

  # return;
}
