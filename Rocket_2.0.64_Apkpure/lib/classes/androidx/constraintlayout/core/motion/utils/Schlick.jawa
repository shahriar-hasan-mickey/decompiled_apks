record `androidx.constraintlayout.core.motion.utils.Schlick` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.core.motion.utils.Easing` @kind class {
  `double` `androidx.constraintlayout.core.motion.utils.Schlick.eps` @AccessFlag ;
  `double` `androidx.constraintlayout.core.motion.utils.Schlick.mS` @AccessFlag ;
  `double` `androidx.constraintlayout.core.motion.utils.Schlick.mT` @AccessFlag ;
}
global `boolean` `@@androidx.constraintlayout.core.motion.utils.Schlick.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.constraintlayout.core.motion.utils.Schlick` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/Schlick;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `double` `dfunc`(`androidx.constraintlayout.core.motion.utils.Schlick` v12 @kind this, `double` v13 ) @signature `Landroidx/constraintlayout/core/motion/utils/Schlick;.dfunc:(D)D` @AccessFlag PRIVATE {

  # return;
}
procedure `double` `func`(`androidx.constraintlayout.core.motion.utils.Schlick` v8 @kind this, `double` v9 ) @signature `Landroidx/constraintlayout/core/motion/utils/Schlick;.func:(D)D` @AccessFlag PRIVATE {

  # return;
}
procedure `double` `get`(`androidx.constraintlayout.core.motion.utils.Schlick` v0 @kind this, `double` v1 ) @signature `Landroidx/constraintlayout/core/motion/utils/Schlick;.get:(D)D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getDiff`(`androidx.constraintlayout.core.motion.utils.Schlick` v0 @kind this, `double` v1 ) @signature `Landroidx/constraintlayout/core/motion/utils/Schlick;.getDiff:(D)D` @AccessFlag PUBLIC {

  # return;
}
