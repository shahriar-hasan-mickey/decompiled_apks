record `androidx.constraintlayout.core.motion.utils.CurveFit` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int` `@@androidx.constraintlayout.core.motion.utils.CurveFit.CONSTANT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.core.motion.utils.CurveFit.LINEAR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.core.motion.utils.CurveFit.SPLINE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`androidx.constraintlayout.core.motion.utils.CurveFit` v0 @kind this) @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `androidx.constraintlayout.core.motion.utils.CurveFit` `get`(`int` v3 , `double`[] v4 @kind object, `double`[][] v5 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.get:(I[D[[D)Landroidx/constraintlayout/core/motion/utils/CurveFit;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.constraintlayout.core.motion.utils.CurveFit` `getArc`(`int`[] v1 @kind object, `double`[] v2 @kind object, `double`[][] v3 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.getArc:([I[D[[D)Landroidx/constraintlayout/core/motion/utils/CurveFit;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `getPos`(`double` v0 , `int` v2 ) @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.getPos:(DI)D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `getPos`(`double` v0 , `double`[] v2 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.getPos:(D[D)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `getPos`(`double` v0 , `float`[] v2 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.getPos:(D[F)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double` `getSlope`(`double` v0 , `int` v2 ) @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.getSlope:(DI)D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `getSlope`(`double` v0 , `double`[] v2 @kind object) @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.getSlope:(D[D)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double`[] `getTimePoints`() @signature `Landroidx/constraintlayout/core/motion/utils/CurveFit;.getTimePoints:()[D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
