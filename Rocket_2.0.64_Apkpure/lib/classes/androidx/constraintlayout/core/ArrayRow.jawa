record `androidx.constraintlayout.core.ArrayRow` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.core.LinearSystem$Row` @kind interface {
  `float` `androidx.constraintlayout.core.ArrayRow.constantValue` @AccessFlag ;
  `boolean` `androidx.constraintlayout.core.ArrayRow.isSimpleDefinition` @AccessFlag ;
  `boolean` `androidx.constraintlayout.core.ArrayRow.used` @AccessFlag ;
  `androidx.constraintlayout.core.SolverVariable` `androidx.constraintlayout.core.ArrayRow.variable` @AccessFlag ;
  `androidx.constraintlayout.core.ArrayRow$ArrayRowVariables` `androidx.constraintlayout.core.ArrayRow.variables` @AccessFlag PUBLIC;
  `java.util.ArrayList` `androidx.constraintlayout.core.ArrayRow.variablesToUpdate` @AccessFlag ;
}
global `boolean` `@@androidx.constraintlayout.core.ArrayRow.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@androidx.constraintlayout.core.ArrayRow.FULL_NEW_CHECK` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this, `androidx.constraintlayout.core.Cache` v3 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.<init>:(Landroidx/constraintlayout/core/Cache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isNew`(`androidx.constraintlayout.core.ArrayRow` v0 @kind this, `androidx.constraintlayout.core.SolverVariable` v1 @kind object, `androidx.constraintlayout.core.LinearSystem` v2 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.isNew:(Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/LinearSystem;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `pickPivotInVariables`(`androidx.constraintlayout.core.ArrayRow` v9 @kind this, `boolean`[] v10 @kind object, `androidx.constraintlayout.core.SolverVariable` v11 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.pickPivotInVariables:([ZLandroidx/constraintlayout/core/SolverVariable;)Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag PRIVATE {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `addError`(`androidx.constraintlayout.core.ArrayRow` v3 @kind this, `androidx.constraintlayout.core.LinearSystem` v4 @kind object, `int` v5 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.addError:(Landroidx/constraintlayout/core/LinearSystem;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addError`(`androidx.constraintlayout.core.ArrayRow` v3 @kind this, `androidx.constraintlayout.core.SolverVariable` v4 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.addError:(Landroidx/constraintlayout/core/SolverVariable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `addSingleError`(`androidx.constraintlayout.core.ArrayRow` v1 @kind this, `androidx.constraintlayout.core.SolverVariable` v2 @kind object, `int` v3 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.addSingleError:(Landroidx/constraintlayout/core/SolverVariable;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag  {

  # return;
}
procedure `boolean` `chooseSubject`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this, `androidx.constraintlayout.core.LinearSystem` v3 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.chooseSubject:(Landroidx/constraintlayout/core/LinearSystem;)Z` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `chooseSubjectInVariables`(`androidx.constraintlayout.core.ArrayRow` v14 @kind this, `androidx.constraintlayout.core.LinearSystem` v15 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.chooseSubjectInVariables:(Landroidx/constraintlayout/core/LinearSystem;)Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`androidx.constraintlayout.core.ArrayRow` v1 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowCentering`(`androidx.constraintlayout.core.ArrayRow` v5 @kind this, `androidx.constraintlayout.core.SolverVariable` v6 @kind object, `androidx.constraintlayout.core.SolverVariable` v7 @kind object, `int` v8 , `float` v9 , `androidx.constraintlayout.core.SolverVariable` v10 @kind object, `androidx.constraintlayout.core.SolverVariable` v11 @kind object, `int` v12 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowCentering:(Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;IFLandroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowDefinition`(`androidx.constraintlayout.core.ArrayRow` v0 @kind this, `androidx.constraintlayout.core.SolverVariable` v1 @kind object, `int` v2 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowDefinition:(Landroidx/constraintlayout/core/SolverVariable;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowDimensionPercent`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this, `androidx.constraintlayout.core.SolverVariable` v3 @kind object, `androidx.constraintlayout.core.SolverVariable` v4 @kind object, `float` v5 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowDimensionPercent:(Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;F)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowDimensionRatio`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this, `androidx.constraintlayout.core.SolverVariable` v3 @kind object, `androidx.constraintlayout.core.SolverVariable` v4 @kind object, `androidx.constraintlayout.core.SolverVariable` v5 @kind object, `androidx.constraintlayout.core.SolverVariable` v6 @kind object, `float` v7 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowDimensionRatio:(Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;F)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowEqualDimension`(`androidx.constraintlayout.core.ArrayRow` v3 @kind this, `float` v4 , `float` v5 , `float` v6 , `androidx.constraintlayout.core.SolverVariable` v7 @kind object, `int` v8 , `androidx.constraintlayout.core.SolverVariable` v9 @kind object, `int` v10 , `androidx.constraintlayout.core.SolverVariable` v11 @kind object, `int` v12 , `androidx.constraintlayout.core.SolverVariable` v13 @kind object, `int` v14 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowEqualDimension:(FFFLandroidx/constraintlayout/core/SolverVariable;ILandroidx/constraintlayout/core/SolverVariable;ILandroidx/constraintlayout/core/SolverVariable;ILandroidx/constraintlayout/core/SolverVariable;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowEqualMatchDimensions`(`androidx.constraintlayout.core.ArrayRow` v4 @kind this, `float` v5 , `float` v6 , `float` v7 , `androidx.constraintlayout.core.SolverVariable` v8 @kind object, `androidx.constraintlayout.core.SolverVariable` v9 @kind object, `androidx.constraintlayout.core.SolverVariable` v10 @kind object, `androidx.constraintlayout.core.SolverVariable` v11 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowEqualMatchDimensions:(FFFLandroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowEquals`(`androidx.constraintlayout.core.ArrayRow` v1 @kind this, `androidx.constraintlayout.core.SolverVariable` v2 @kind object, `int` v3 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowEquals:(Landroidx/constraintlayout/core/SolverVariable;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowEquals`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this, `androidx.constraintlayout.core.SolverVariable` v3 @kind object, `androidx.constraintlayout.core.SolverVariable` v4 @kind object, `int` v5 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowEquals:(Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowGreaterThan`(`androidx.constraintlayout.core.ArrayRow` v0 @kind this, `androidx.constraintlayout.core.SolverVariable` v1 @kind object, `int` v2 , `androidx.constraintlayout.core.SolverVariable` v3 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowGreaterThan:(Landroidx/constraintlayout/core/SolverVariable;ILandroidx/constraintlayout/core/SolverVariable;)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowGreaterThan`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this, `androidx.constraintlayout.core.SolverVariable` v3 @kind object, `androidx.constraintlayout.core.SolverVariable` v4 @kind object, `androidx.constraintlayout.core.SolverVariable` v5 @kind object, `int` v6 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowGreaterThan:(Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowLowerThan`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this, `androidx.constraintlayout.core.SolverVariable` v3 @kind object, `androidx.constraintlayout.core.SolverVariable` v4 @kind object, `androidx.constraintlayout.core.SolverVariable` v5 @kind object, `int` v6 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowLowerThan:(Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;I)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.ArrayRow` `createRowWithAngle`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this, `androidx.constraintlayout.core.SolverVariable` v3 @kind object, `androidx.constraintlayout.core.SolverVariable` v4 @kind object, `androidx.constraintlayout.core.SolverVariable` v5 @kind object, `androidx.constraintlayout.core.SolverVariable` v6 @kind object, `float` v7 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.createRowWithAngle:(Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;Landroidx/constraintlayout/core/SolverVariable;F)Landroidx/constraintlayout/core/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `ensurePositiveConstant`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.ensurePositiveConstant:()V` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `getKey`(`androidx.constraintlayout.core.ArrayRow` v1 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.getKey:()Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `getPivotCandidate`(`androidx.constraintlayout.core.ArrayRow` v0 @kind this, `androidx.constraintlayout.core.LinearSystem` v1 @kind object, `boolean`[] v2 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.getPivotCandidate:(Landroidx/constraintlayout/core/LinearSystem;[Z)Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasKeyVariable`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.hasKeyVariable:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `hasVariable`(`androidx.constraintlayout.core.ArrayRow` v1 @kind this, `androidx.constraintlayout.core.SolverVariable` v2 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.hasVariable:(Landroidx/constraintlayout/core/SolverVariable;)Z` @AccessFlag  {

  # return;
}
procedure `void` `initFromRow`(`androidx.constraintlayout.core.ArrayRow` v5 @kind this, `androidx.constraintlayout.core.LinearSystem$Row` v6 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.initFromRow:(Landroidx/constraintlayout/core/LinearSystem$Row;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `pickPivot`(`androidx.constraintlayout.core.ArrayRow` v1 @kind this, `androidx.constraintlayout.core.SolverVariable` v2 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.pickPivot:(Landroidx/constraintlayout/core/SolverVariable;)Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `pivot`(`androidx.constraintlayout.core.ArrayRow` v3 @kind this, `androidx.constraintlayout.core.SolverVariable` v4 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.pivot:(Landroidx/constraintlayout/core/SolverVariable;)V` @AccessFlag  {

  # return;
}
procedure `void` `reset`(`androidx.constraintlayout.core.ArrayRow` v1 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `sizeInBytes`(`androidx.constraintlayout.core.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.sizeInBytes:()I` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toReadableString`(`androidx.constraintlayout.core.ArrayRow` v10 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.toReadableString:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.constraintlayout.core.ArrayRow` v1 @kind this) @signature `Landroidx/constraintlayout/core/ArrayRow;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateFromFinalVariable`(`androidx.constraintlayout.core.ArrayRow` v3 @kind this, `androidx.constraintlayout.core.LinearSystem` v4 @kind object, `androidx.constraintlayout.core.SolverVariable` v5 @kind object, `boolean` v6 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.updateFromFinalVariable:(Landroidx/constraintlayout/core/LinearSystem;Landroidx/constraintlayout/core/SolverVariable;Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateFromRow`(`androidx.constraintlayout.core.ArrayRow` v3 @kind this, `androidx.constraintlayout.core.LinearSystem` v4 @kind object, `androidx.constraintlayout.core.ArrayRow` v5 @kind object, `boolean` v6 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.updateFromRow:(Landroidx/constraintlayout/core/LinearSystem;Landroidx/constraintlayout/core/ArrayRow;Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateFromSynonymVariable`(`androidx.constraintlayout.core.ArrayRow` v3 @kind this, `androidx.constraintlayout.core.LinearSystem` v4 @kind object, `androidx.constraintlayout.core.SolverVariable` v5 @kind object, `boolean` v6 ) @signature `Landroidx/constraintlayout/core/ArrayRow;.updateFromSynonymVariable:(Landroidx/constraintlayout/core/LinearSystem;Landroidx/constraintlayout/core/SolverVariable;Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateFromSystem`(`androidx.constraintlayout.core.ArrayRow` v8 @kind this, `androidx.constraintlayout.core.LinearSystem` v9 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow;.updateFromSystem:(Landroidx/constraintlayout/core/LinearSystem;)V` @AccessFlag PUBLIC {

  # return;
}
