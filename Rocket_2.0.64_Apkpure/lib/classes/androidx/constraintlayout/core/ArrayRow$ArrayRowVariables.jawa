record `androidx.constraintlayout.core.ArrayRow$ArrayRowVariables` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `add`(`androidx.constraintlayout.core.SolverVariable` v0 @kind object, `float` v1 , `boolean` v2 ) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.add:(Landroidx/constraintlayout/core/SolverVariable;FZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `contains`(`androidx.constraintlayout.core.SolverVariable` v0 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.contains:(Landroidx/constraintlayout/core/SolverVariable;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `display`() @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.display:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `divideByAmount`(`float` v0 ) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.divideByAmount:(F)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `get`(`androidx.constraintlayout.core.SolverVariable` v0 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.get:(Landroidx/constraintlayout/core/SolverVariable;)F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getCurrentSize`() @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.getCurrentSize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.constraintlayout.core.SolverVariable` `getVariable`(`int` v0 ) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.getVariable:(I)Landroidx/constraintlayout/core/SolverVariable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `getVariableValue`(`int` v0 ) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.getVariableValue:(I)F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `indexOf`(`androidx.constraintlayout.core.SolverVariable` v0 @kind object) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.indexOf:(Landroidx/constraintlayout/core/SolverVariable;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `invert`() @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.invert:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `put`(`androidx.constraintlayout.core.SolverVariable` v0 @kind object, `float` v1 ) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.put:(Landroidx/constraintlayout/core/SolverVariable;F)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `remove`(`androidx.constraintlayout.core.SolverVariable` v0 @kind object, `boolean` v1 ) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.remove:(Landroidx/constraintlayout/core/SolverVariable;Z)F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `sizeInBytes`() @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.sizeInBytes:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `use`(`androidx.constraintlayout.core.ArrayRow` v0 @kind object, `boolean` v1 ) @signature `Landroidx/constraintlayout/core/ArrayRow$ArrayRowVariables;.use:(Landroidx/constraintlayout/core/ArrayRow;Z)F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
