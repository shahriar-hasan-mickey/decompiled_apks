record `androidx.constraintlayout.widget.ConstraintLayoutStates$State` @kind class @AccessFlag  {
  `int` `androidx.constraintlayout.widget.ConstraintLayoutStates$State.mConstraintID` @AccessFlag ;
  `androidx.constraintlayout.widget.ConstraintSet` `androidx.constraintlayout.widget.ConstraintLayoutStates$State.mConstraintSet` @AccessFlag ;
  `int` `androidx.constraintlayout.widget.ConstraintLayoutStates$State.mId` @AccessFlag ;
  `java.util.ArrayList` `androidx.constraintlayout.widget.ConstraintLayoutStates$State.mVariants` @AccessFlag ;
}
procedure `void` `<init>`(`androidx.constraintlayout.widget.ConstraintLayoutStates$State` v5 @kind this, `android.content.Context` v6 @kind object, `org.xmlpull.v1.XmlPullParser` v7 @kind object) @signature `Landroidx/constraintlayout/widget/ConstraintLayoutStates$State;.<init>:(Landroid/content/Context;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`androidx.constraintlayout.widget.ConstraintLayoutStates$State` v1 @kind this, `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant` v2 @kind object) @signature `Landroidx/constraintlayout/widget/ConstraintLayoutStates$State;.add:(Landroidx/constraintlayout/widget/ConstraintLayoutStates$Variant;)V` @AccessFlag  {

  # return;
}
procedure `int` `findMatch`(`androidx.constraintlayout.widget.ConstraintLayoutStates$State` v2 @kind this, `float` v3 , `float` v4 ) @signature `Landroidx/constraintlayout/widget/ConstraintLayoutStates$State;.findMatch:(FF)I` @AccessFlag PUBLIC {

  # return;
}
