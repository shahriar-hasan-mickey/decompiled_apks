record `androidx.work.impl.constraints.trackers.NetworkStateTracker` @kind class @AccessFlag PUBLIC extends `androidx.work.impl.constraints.trackers.ConstraintTracker` @kind class {
  `androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateBroadcastReceiver` `androidx.work.impl.constraints.trackers.NetworkStateTracker.mBroadcastReceiver` @AccessFlag PRIVATE;
  `android.net.ConnectivityManager` `androidx.work.impl.constraints.trackers.NetworkStateTracker.mConnectivityManager` @AccessFlag PRIVATE_FINAL;
  `androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateCallback` `androidx.work.impl.constraints.trackers.NetworkStateTracker.mNetworkCallback` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@androidx.work.impl.constraints.trackers.NetworkStateTracker.TAG` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.impl.constraints.trackers.NetworkStateTracker` v0 @kind this, `android.content.Context` v1 @kind object, `androidx.work.impl.utils.taskexecutor.TaskExecutor` v2 @kind object) @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.<init>:(Landroid/content/Context;Landroidx/work/impl/utils/taskexecutor/TaskExecutor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isNetworkCallbackSupported`() @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.isNetworkCallbackSupported:()Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `androidx.work.impl.constraints.NetworkState` `getActiveNetworkState`(`androidx.work.impl.constraints.trackers.NetworkStateTracker` v6 @kind this) @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.getActiveNetworkState:()Landroidx/work/impl/constraints/NetworkState;` @AccessFlag  {

  # return;
}
procedure `androidx.work.impl.constraints.NetworkState` `getInitialState`(`androidx.work.impl.constraints.trackers.NetworkStateTracker` v1 @kind this) @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.getInitialState:()Landroidx/work/impl/constraints/NetworkState;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getInitialState`(`androidx.work.impl.constraints.trackers.NetworkStateTracker` v1 @kind this) @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.getInitialState:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isActiveNetworkValidated`(`androidx.work.impl.constraints.trackers.NetworkStateTracker` v5 @kind this) @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.isActiveNetworkValidated:()Z` @AccessFlag  {

  # return;
}
procedure `void` `startTracking`(`androidx.work.impl.constraints.trackers.NetworkStateTracker` v5 @kind this) @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.startTracking:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `stopTracking`(`androidx.work.impl.constraints.trackers.NetworkStateTracker` v5 @kind this) @signature `Landroidx/work/impl/constraints/trackers/NetworkStateTracker;.stopTracking:()V` @AccessFlag PUBLIC {

  # return;
}
