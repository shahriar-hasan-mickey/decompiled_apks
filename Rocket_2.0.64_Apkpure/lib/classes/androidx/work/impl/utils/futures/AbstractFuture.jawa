record `androidx.work.impl.utils.futures.AbstractFuture` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.util.concurrent.ListenableFuture` @kind interface {
  `androidx.work.impl.utils.futures.AbstractFuture$Listener` `androidx.work.impl.utils.futures.AbstractFuture.listeners` @AccessFlag VOLATILE;
  `java.lang.Object` `androidx.work.impl.utils.futures.AbstractFuture.value` @AccessFlag VOLATILE;
  `androidx.work.impl.utils.futures.AbstractFuture$Waiter` `androidx.work.impl.utils.futures.AbstractFuture.waiters` @AccessFlag VOLATILE;
}
global `androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper` `@@androidx.work.impl.utils.futures.AbstractFuture.ATOMIC_HELPER` @AccessFlag STATIC_FINAL;
global `boolean` `@@androidx.work.impl.utils.futures.AbstractFuture.GENERATE_CANCELLATION_CAUSES` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@androidx.work.impl.utils.futures.AbstractFuture.NULL` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@androidx.work.impl.utils.futures.AbstractFuture.SPIN_THRESHOLD_NANOS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@androidx.work.impl.utils.futures.AbstractFuture.log` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `addDoneString`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.addDoneString:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.concurrent.CancellationException` `cancellationExceptionWithCause`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.cancellationExceptionWithCause:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `checkNotNull`(`java.lang.Object` v0 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `androidx.work.impl.utils.futures.AbstractFuture$Listener` `clearListeners`(`androidx.work.impl.utils.futures.AbstractFuture` v4 @kind this, `androidx.work.impl.utils.futures.AbstractFuture$Listener` v5 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.clearListeners:(Landroidx/work/impl/utils/futures/AbstractFuture$Listener;)Landroidx/work/impl/utils/futures/AbstractFuture$Listener;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `complete`(`androidx.work.impl.utils.futures.AbstractFuture` v4 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.complete:(Landroidx/work/impl/utils/futures/AbstractFuture;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `executeListener`(`java.lang.Runnable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.executeListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `getDoneValue`(`androidx.work.impl.utils.futures.AbstractFuture` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.getDoneValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `getFutureValue`(`com.google.common.util.concurrent.ListenableFuture` v5 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.getFutureValue:(Lcom/google/common/util/concurrent/ListenableFuture;)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object` `getUninterruptibly`(`java.util.concurrent.Future` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.getUninterruptibly:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `releaseWaiters`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.releaseWaiters:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeWaiter`(`androidx.work.impl.utils.futures.AbstractFuture` v4 @kind this, `androidx.work.impl.utils.futures.AbstractFuture$Waiter` v5 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.removeWaiter:(Landroidx/work/impl/utils/futures/AbstractFuture$Waiter;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `userObjectToString`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.userObjectToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addListener`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this, `java.lang.Runnable` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `afterDone`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.afterDone:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `cancel`(`androidx.work.impl.utils.futures.AbstractFuture` v7 @kind this, `boolean` v8 ) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.cancel:(Z)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.work.impl.utils.futures.AbstractFuture` v6 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.work.impl.utils.futures.AbstractFuture` v19 @kind this, `long` v20 , `java.util.concurrent.TimeUnit` v22 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `interruptTask`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.interruptTask:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isCancelled`(`androidx.work.impl.utils.futures.AbstractFuture` v1 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isDone`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.isDone:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `maybePropagateCancellationTo`(`androidx.work.impl.utils.futures.AbstractFuture` v2 @kind this, `java.util.concurrent.Future` v3 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.maybePropagateCancellationTo:(Ljava/util/concurrent/Future;)V` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.String` `pendingToString`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.pendingToString:()Ljava/lang/String;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `set`(`androidx.work.impl.utils.futures.AbstractFuture` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.set:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `setException`(`androidx.work.impl.utils.futures.AbstractFuture` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.setException:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `setFuture`(`androidx.work.impl.utils.futures.AbstractFuture` v5 @kind this, `com.google.common.util.concurrent.ListenableFuture` v6 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.setFuture:(Lcom/google/common/util/concurrent/ListenableFuture;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.work.impl.utils.futures.AbstractFuture` v5 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `wasInterrupted`(`androidx.work.impl.utils.futures.AbstractFuture` v2 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.wasInterrupted:()Z` @AccessFlag PROTECTED_FINAL {

  # return;
}
