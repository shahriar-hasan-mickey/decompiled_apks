record `androidx.work.impl.utils.WorkTimer` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.ThreadFactory` `androidx.work.impl.utils.WorkTimer.mBackgroundThreadFactory` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ScheduledExecutorService` `androidx.work.impl.utils.WorkTimer.mExecutorService` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `androidx.work.impl.utils.WorkTimer.mListeners` @AccessFlag FINAL;
  `java.lang.Object` `androidx.work.impl.utils.WorkTimer.mLock` @AccessFlag FINAL;
  `java.util.Map` `androidx.work.impl.utils.WorkTimer.mTimerMap` @AccessFlag FINAL;
}
global `java.lang.String` `@@androidx.work.impl.utils.WorkTimer.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/work/impl/utils/WorkTimer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.impl.utils.WorkTimer` v2 @kind this) @signature `Landroidx/work/impl/utils/WorkTimer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.concurrent.ScheduledExecutorService` `getExecutorService`(`androidx.work.impl.utils.WorkTimer` v1 @kind this) @signature `Landroidx/work/impl/utils/WorkTimer;.getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `getListeners`(`androidx.work.impl.utils.WorkTimer` v1 @kind this) @signature `Landroidx/work/impl/utils/WorkTimer;.getListeners:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `getTimerMap`(`androidx.work.impl.utils.WorkTimer` v1 @kind this) @signature `Landroidx/work/impl/utils/WorkTimer;.getTimerMap:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onDestroy`(`androidx.work.impl.utils.WorkTimer` v1 @kind this) @signature `Landroidx/work/impl/utils/WorkTimer;.onDestroy:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `startTimer`(`androidx.work.impl.utils.WorkTimer` v6 @kind this, `java.lang.String` v7 @kind object, `long` v8 , `androidx.work.impl.utils.WorkTimer$TimeLimitExceededListener` v10 @kind object) @signature `Landroidx/work/impl/utils/WorkTimer;.startTimer:(Ljava/lang/String;JLandroidx/work/impl/utils/WorkTimer$TimeLimitExceededListener;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `stopTimer`(`androidx.work.impl.utils.WorkTimer` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Landroidx/work/impl/utils/WorkTimer;.stopTimer:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
