record `androidx.lifecycle.BlockRunner` @kind class @AccessFlag PUBLIC_FINAL {
  `kotlin.jvm.functions.Function2` `androidx.lifecycle.BlockRunner.block` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.Job` `androidx.lifecycle.BlockRunner.cancellationJob` @AccessFlag PRIVATE;
  `androidx.lifecycle.CoroutineLiveData` `androidx.lifecycle.BlockRunner.liveData` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function0` `androidx.lifecycle.BlockRunner.onDone` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.Job` `androidx.lifecycle.BlockRunner.runningJob` @AccessFlag PRIVATE;
  `kotlinx.coroutines.CoroutineScope` `androidx.lifecycle.BlockRunner.scope` @AccessFlag PRIVATE_FINAL;
  `long` `androidx.lifecycle.BlockRunner.timeoutInMs` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.lifecycle.BlockRunner` v1 @kind this, `androidx.lifecycle.CoroutineLiveData` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `long` v4 , `kotlinx.coroutines.CoroutineScope` v6 @kind object, `kotlin.jvm.functions.Function0` v7 @kind object) @signature `Landroidx/lifecycle/BlockRunner;.<init>:(Landroidx/lifecycle/CoroutineLiveData;Lkotlin/jvm/functions/Function2;JLkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `kotlin.jvm.functions.Function2` `access$getBlock$p`(`androidx.lifecycle.BlockRunner` v0 @kind object) @signature `Landroidx/lifecycle/BlockRunner;.access$getBlock$p:(Landroidx/lifecycle/BlockRunner;)Lkotlin/jvm/functions/Function2;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {

  # return;
}
procedure `androidx.lifecycle.CoroutineLiveData` `access$getLiveData$p`(`androidx.lifecycle.BlockRunner` v0 @kind object) @signature `Landroidx/lifecycle/BlockRunner;.access$getLiveData$p:(Landroidx/lifecycle/BlockRunner;)Landroidx/lifecycle/CoroutineLiveData;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {

  # return;
}
procedure `kotlin.jvm.functions.Function0` `access$getOnDone$p`(`androidx.lifecycle.BlockRunner` v0 @kind object) @signature `Landroidx/lifecycle/BlockRunner;.access$getOnDone$p:(Landroidx/lifecycle/BlockRunner;)Lkotlin/jvm/functions/Function0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {

  # return;
}
procedure `kotlinx.coroutines.Job` `access$getRunningJob$p`(`androidx.lifecycle.BlockRunner` v0 @kind object) @signature `Landroidx/lifecycle/BlockRunner;.access$getRunningJob$p:(Landroidx/lifecycle/BlockRunner;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {

  # return;
}
procedure `long` `access$getTimeoutInMs$p`(`androidx.lifecycle.BlockRunner` v2 @kind object) @signature `Landroidx/lifecycle/BlockRunner;.access$getTimeoutInMs$p:(Landroidx/lifecycle/BlockRunner;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {

  # return;
}
procedure `void` `access$setRunningJob$p`(`androidx.lifecycle.BlockRunner` v0 @kind object, `kotlinx.coroutines.Job` v1 @kind object) @signature `Landroidx/lifecycle/BlockRunner;.access$setRunningJob$p:(Landroidx/lifecycle/BlockRunner;Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {

  # return;
}
procedure `void` `cancel`(`androidx.lifecycle.BlockRunner` v7 @kind this) @signature `Landroidx/lifecycle/BlockRunner;.cancel:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `maybeRun`(`androidx.lifecycle.BlockRunner` v8 @kind this) @signature `Landroidx/lifecycle/BlockRunner;.maybeRun:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
