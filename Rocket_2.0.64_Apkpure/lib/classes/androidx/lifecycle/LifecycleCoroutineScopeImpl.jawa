record `androidx.lifecycle.LifecycleCoroutineScopeImpl` @kind class @AccessFlag PUBLIC_FINAL extends `androidx.lifecycle.LifecycleCoroutineScope` @kind class, `androidx.lifecycle.LifecycleEventObserver` @kind interface {
  `kotlin.coroutines.CoroutineContext` `androidx.lifecycle.LifecycleCoroutineScopeImpl.coroutineContext` @AccessFlag PRIVATE_FINAL;
  `androidx.lifecycle.Lifecycle` `androidx.lifecycle.LifecycleCoroutineScopeImpl.lifecycle` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.lifecycle.LifecycleCoroutineScopeImpl` v1 @kind this, `androidx.lifecycle.Lifecycle` v2 @kind object, `kotlin.coroutines.CoroutineContext` v3 @kind object) @signature `Landroidx/lifecycle/LifecycleCoroutineScopeImpl;.<init>:(Landroidx/lifecycle/Lifecycle;Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `kotlin.coroutines.CoroutineContext` `getCoroutineContext`(`androidx.lifecycle.LifecycleCoroutineScopeImpl` v1 @kind this) @signature `Landroidx/lifecycle/LifecycleCoroutineScopeImpl;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.lifecycle.Lifecycle` `getLifecycle$lifecycle_runtime_ktx_release`(`androidx.lifecycle.LifecycleCoroutineScopeImpl` v1 @kind this) @signature `Landroidx/lifecycle/LifecycleCoroutineScopeImpl;.getLifecycle$lifecycle_runtime_ktx_release:()Landroidx/lifecycle/Lifecycle;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onStateChanged`(`androidx.lifecycle.LifecycleCoroutineScopeImpl` v1 @kind this, `androidx.lifecycle.LifecycleOwner` v2 @kind object, `androidx.lifecycle.Lifecycle$Event` v3 @kind object) @signature `Landroidx/lifecycle/LifecycleCoroutineScopeImpl;.onStateChanged:(Landroidx/lifecycle/LifecycleOwner;Landroidx/lifecycle/Lifecycle$Event;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `register`(`androidx.lifecycle.LifecycleCoroutineScopeImpl` v7 @kind this) @signature `Landroidx/lifecycle/LifecycleCoroutineScopeImpl;.register:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
