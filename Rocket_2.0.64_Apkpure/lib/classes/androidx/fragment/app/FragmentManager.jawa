record `androidx.fragment.app.FragmentManager` @kind class @AccessFlag PUBLIC_ABSTRACT extends `androidx.fragment.app.FragmentResultOwner` @kind interface {
  `java.util.ArrayList` `androidx.fragment.app.FragmentManager.mBackStack` @AccessFlag ;
  `java.util.ArrayList` `androidx.fragment.app.FragmentManager.mBackStackChangeListeners` @AccessFlag PRIVATE;
  `java.util.concurrent.atomic.AtomicInteger` `androidx.fragment.app.FragmentManager.mBackStackIndex` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `androidx.fragment.app.FragmentManager.mBackStackStates` @AccessFlag PRIVATE_FINAL;
  `androidx.fragment.app.FragmentContainer` `androidx.fragment.app.FragmentManager.mContainer` @AccessFlag PRIVATE;
  `java.util.ArrayList` `androidx.fragment.app.FragmentManager.mCreatedMenus` @AccessFlag PRIVATE;
  `int` `androidx.fragment.app.FragmentManager.mCurState` @AccessFlag ;
  `androidx.fragment.app.SpecialEffectsControllerFactory` `androidx.fragment.app.FragmentManager.mDefaultSpecialEffectsControllerFactory` @AccessFlag PRIVATE;
  `boolean` `androidx.fragment.app.FragmentManager.mDestroyed` @AccessFlag PRIVATE;
  `java.lang.Runnable` `androidx.fragment.app.FragmentManager.mExecCommit` @AccessFlag PRIVATE;
  `boolean` `androidx.fragment.app.FragmentManager.mExecutingActions` @AccessFlag PRIVATE;
  `androidx.fragment.app.FragmentFactory` `androidx.fragment.app.FragmentManager.mFragmentFactory` @AccessFlag PRIVATE;
  `androidx.fragment.app.FragmentStore` `androidx.fragment.app.FragmentManager.mFragmentStore` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.fragment.app.FragmentManager.mHavePendingDeferredStart` @AccessFlag PRIVATE;
  `androidx.fragment.app.FragmentHostCallback` `androidx.fragment.app.FragmentManager.mHost` @AccessFlag PRIVATE;
  `androidx.fragment.app.FragmentFactory` `androidx.fragment.app.FragmentManager.mHostFragmentFactory` @AccessFlag PRIVATE;
  `java.util.ArrayDeque` `androidx.fragment.app.FragmentManager.mLaunchedFragments` @AccessFlag ;
  `androidx.fragment.app.FragmentLayoutInflaterFactory` `androidx.fragment.app.FragmentManager.mLayoutInflaterFactory` @AccessFlag PRIVATE_FINAL;
  `androidx.fragment.app.FragmentLifecycleCallbacksDispatcher` `androidx.fragment.app.FragmentManager.mLifecycleCallbacksDispatcher` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.fragment.app.FragmentManager.mNeedMenuInvalidate` @AccessFlag PRIVATE;
  `androidx.fragment.app.FragmentManagerViewModel` `androidx.fragment.app.FragmentManager.mNonConfig` @AccessFlag PRIVATE;
  `java.util.concurrent.CopyOnWriteArrayList` `androidx.fragment.app.FragmentManager.mOnAttachListeners` @AccessFlag PRIVATE_FINAL;
  `androidx.activity.OnBackPressedCallback` `androidx.fragment.app.FragmentManager.mOnBackPressedCallback` @AccessFlag PRIVATE_FINAL;
  `androidx.activity.OnBackPressedDispatcher` `androidx.fragment.app.FragmentManager.mOnBackPressedDispatcher` @AccessFlag PRIVATE;
  `androidx.fragment.app.Fragment` `androidx.fragment.app.FragmentManager.mParent` @AccessFlag PRIVATE;
  `java.util.ArrayList` `androidx.fragment.app.FragmentManager.mPendingActions` @AccessFlag PRIVATE_FINAL;
  `androidx.fragment.app.Fragment` `androidx.fragment.app.FragmentManager.mPrimaryNav` @AccessFlag ;
  `androidx.activity.result.ActivityResultLauncher` `androidx.fragment.app.FragmentManager.mRequestPermissions` @AccessFlag PRIVATE;
  `java.util.Map` `androidx.fragment.app.FragmentManager.mResultListeners` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `androidx.fragment.app.FragmentManager.mResults` @AccessFlag PRIVATE_FINAL;
  `androidx.fragment.app.SpecialEffectsControllerFactory` `androidx.fragment.app.FragmentManager.mSpecialEffectsControllerFactory` @AccessFlag PRIVATE;
  `androidx.activity.result.ActivityResultLauncher` `androidx.fragment.app.FragmentManager.mStartActivityForResult` @AccessFlag PRIVATE;
  `androidx.activity.result.ActivityResultLauncher` `androidx.fragment.app.FragmentManager.mStartIntentSenderForResult` @AccessFlag PRIVATE;
  `boolean` `androidx.fragment.app.FragmentManager.mStateSaved` @AccessFlag PRIVATE;
  `boolean` `androidx.fragment.app.FragmentManager.mStopped` @AccessFlag PRIVATE;
  `androidx.fragment.app.strictmode.FragmentStrictMode$Policy` `androidx.fragment.app.FragmentManager.mStrictModePolicy` @AccessFlag PRIVATE;
  `java.util.ArrayList` `androidx.fragment.app.FragmentManager.mTmpAddedFragments` @AccessFlag PRIVATE;
  `java.util.ArrayList` `androidx.fragment.app.FragmentManager.mTmpIsPop` @AccessFlag PRIVATE;
  `java.util.ArrayList` `androidx.fragment.app.FragmentManager.mTmpRecords` @AccessFlag PRIVATE;
}
global `boolean` `@@androidx.fragment.app.FragmentManager.DEBUG` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@androidx.fragment.app.FragmentManager.EXTRA_CREATED_FILLIN_INTENT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.fragment.app.FragmentManager.POP_BACK_STACK_INCLUSIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@androidx.fragment.app.FragmentManager.SAVED_STATE_TAG` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@androidx.fragment.app.FragmentManager.TAG` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/fragment/app/FragmentManager;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `android.os.Bundle` `a`(`androidx.fragment.app.FragmentManager` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.a:(Landroidx/fragment/app/FragmentManager;)Landroid/os/Bundle;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `access$000`(`androidx.fragment.app.FragmentManager` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.access$000:(Landroidx/fragment/app/FragmentManager;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `access$100`(`androidx.fragment.app.FragmentManager` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.access$100:(Landroidx/fragment/app/FragmentManager;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `androidx.fragment.app.FragmentStore` `access$200`(`androidx.fragment.app.FragmentManager` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.access$200:(Landroidx/fragment/app/FragmentManager;)Landroidx/fragment/app/FragmentStore;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `checkStateLoss`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.checkStateLoss:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `cleanupExec`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.cleanupExec:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `clearBackStackStateViewModels`(`androidx.fragment.app.FragmentManager` v4 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.clearBackStackStateViewModels:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Set` `collectAllSpecialEffectsController`(`androidx.fragment.app.FragmentManager` v4 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.collectAllSpecialEffectsController:()Ljava/util/Set;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Set` `collectChangedControllers`(`androidx.fragment.app.FragmentManager` v3 @kind this, `java.util.ArrayList` v4 @kind object, `int` v5 , `int` v6 ) @signature `Landroidx/fragment/app/FragmentManager;.collectChangedControllers:(Ljava/util/ArrayList;II)Ljava/util/Set;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `dispatchParentPrimaryNavigationFragmentChanged`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dispatchParentPrimaryNavigationFragmentChanged:(Landroidx/fragment/app/Fragment;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `dispatchStateChange`(`androidx.fragment.app.FragmentManager` v3 @kind this, `int` v4 ) @signature `Landroidx/fragment/app/FragmentManager;.dispatchStateChange:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `doPendingDeferredStart`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.doPendingDeferredStart:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `enableDebugLogging`(`boolean` v0 ) @signature `Landroidx/fragment/app/FragmentManager;.enableDebugLogging:(Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `endAnimatingAwayFragments`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.endAnimatingAwayFragments:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `ensureExecReady`(`androidx.fragment.app.FragmentManager` v2 @kind this, `boolean` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.ensureExecReady:(Z)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `executeOps`(`java.util.ArrayList` v2 @kind object, `java.util.ArrayList` v3 @kind object, `int` v4 , `int` v5 ) @signature `Landroidx/fragment/app/FragmentManager;.executeOps:(Ljava/util/ArrayList;Ljava/util/ArrayList;II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `executeOpsTogether`(`androidx.fragment.app.FragmentManager` v8 @kind this, `java.util.ArrayList` v9 @kind object, `java.util.ArrayList` v10 @kind object, `int` v11 , `int` v12 ) @signature `Landroidx/fragment/app/FragmentManager;.executeOpsTogether:(Ljava/util/ArrayList;Ljava/util/ArrayList;II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `findBackStackIndex`(`androidx.fragment.app.FragmentManager` v4 @kind this, `java.lang.String` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Landroidx/fragment/app/FragmentManager;.findBackStackIndex:(Ljava/lang/String;IZ)I` @AccessFlag PRIVATE {

  # return;
}
procedure `androidx.fragment.app.Fragment` `findFragment`(`android.view.View` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.findFragment:(Landroid/view/View;)Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.fragment.app.FragmentManager` `findFragmentManager`(`android.view.View` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.findFragmentManager:(Landroid/view/View;)Landroidx/fragment/app/FragmentManager;` @AccessFlag STATIC {

  # return;
}
procedure `androidx.fragment.app.Fragment` `findViewFragment`(`android.view.View` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.findViewFragment:(Landroid/view/View;)Landroidx/fragment/app/Fragment;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `forcePostponedTransactions`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.forcePostponedTransactions:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `generateOpsForPendingActions`(`androidx.fragment.app.FragmentManager` v5 @kind this, `java.util.ArrayList` v6 @kind object, `java.util.ArrayList` v7 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.generateOpsForPendingActions:(Ljava/util/ArrayList;Ljava/util/ArrayList;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `androidx.fragment.app.FragmentManagerViewModel` `getChildNonConfig`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.getChildNonConfig:(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/FragmentManagerViewModel;` @AccessFlag PRIVATE {

  # return;
}
procedure `android.view.ViewGroup` `getFragmentContainer`(`androidx.fragment.app.FragmentManager` v2 @kind this, `androidx.fragment.app.Fragment` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.getFragmentContainer:(Landroidx/fragment/app/Fragment;)Landroid/view/ViewGroup;` @AccessFlag PRIVATE {

  # return;
}
procedure `androidx.fragment.app.Fragment` `getViewFragment`(`android.view.View` v1 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.getViewFragment:(Landroid/view/View;)Landroidx/fragment/app/Fragment;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `isLoggingEnabled`(`int` v1 ) @signature `Landroidx/fragment/app/FragmentManager;.isLoggingEnabled:(I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isMenuAvailable`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.isMenuAvailable:(Landroidx/fragment/app/Fragment;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `android.os.Bundle` `lambda$attachController$0`(`androidx.fragment.app.FragmentManager` v3 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.lambda$attachController$0:()Landroid/os/Bundle;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `boolean` `popBackStackImmediate`(`androidx.fragment.app.FragmentManager` v8 @kind this, `java.lang.String` v9 @kind object, `int` v10 , `int` v11 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStackImmediate:(Ljava/lang/String;II)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeRedundantOperationsAndExecute`(`androidx.fragment.app.FragmentManager` v4 @kind this, `java.util.ArrayList` v5 @kind object, `java.util.ArrayList` v6 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.removeRedundantOperationsAndExecute:(Ljava/util/ArrayList;Ljava/util/ArrayList;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `reportBackStackChanged`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.reportBackStackChanged:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `reverseTransit`(`int` v5 ) @signature `Landroidx/fragment/app/FragmentManager;.reverseTransit:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `void` `setVisibleRemovingFragment`(`androidx.fragment.app.FragmentManager` v3 @kind this, `androidx.fragment.app.Fragment` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.setVisibleRemovingFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `startPendingDeferredFragments`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.startPendingDeferredFragments:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `throwException`(`androidx.fragment.app.FragmentManager` v7 @kind this, `java.lang.RuntimeException` v8 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.throwException:(Ljava/lang/RuntimeException;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateOnBackPressedCallbackEnabled`(`androidx.fragment.app.FragmentManager` v3 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.updateOnBackPressedCallbackEnabled:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addBackStackState`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.BackStackRecord` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.addBackStackState:(Landroidx/fragment/app/BackStackRecord;)V` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.FragmentStateManager` `addFragment`(`androidx.fragment.app.FragmentManager` v3 @kind this, `androidx.fragment.app.Fragment` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.addFragment:(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/FragmentStateManager;` @AccessFlag  {

  # return;
}
procedure `void` `addFragmentOnAttachListener`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.FragmentOnAttachListener` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.addFragmentOnAttachListener:(Landroidx/fragment/app/FragmentOnAttachListener;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addOnBackStackChangedListener`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.FragmentManager$OnBackStackChangedListener` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.addOnBackStackChangedListener:(Landroidx/fragment/app/FragmentManager$OnBackStackChangedListener;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addRetainedFragment`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.addRetainedFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `int` `allocBackStackIndex`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.allocBackStackIndex:()I` @AccessFlag  {

  # return;
}
procedure `void` `attachController`(`androidx.fragment.app.FragmentManager` v2 @kind this, `androidx.fragment.app.FragmentHostCallback` v3 @kind object, `androidx.fragment.app.FragmentContainer` v4 @kind object, `androidx.fragment.app.Fragment` v5 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.attachController:(Landroidx/fragment/app/FragmentHostCallback;Landroidx/fragment/app/FragmentContainer;Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `void` `attachFragment`(`androidx.fragment.app.FragmentManager` v4 @kind this, `androidx.fragment.app.Fragment` v5 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.attachFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.FragmentTransaction` `beginTransaction`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.beginTransaction:()Landroidx/fragment/app/FragmentTransaction;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `checkForMenus`(`androidx.fragment.app.FragmentManager` v4 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.checkForMenus:()Z` @AccessFlag  {

  # return;
}
procedure `void` `clearBackStack`(`androidx.fragment.app.FragmentManager` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.clearBackStack:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `clearBackStackState`(`androidx.fragment.app.FragmentManager` v6 @kind this, `java.util.ArrayList` v7 @kind object, `java.util.ArrayList` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.clearBackStackState:(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `void` `clearFragmentResult`(`androidx.fragment.app.FragmentManager` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.clearFragmentResult:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `clearFragmentResultListener`(`androidx.fragment.app.FragmentManager` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.clearFragmentResultListener:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.fragment.app.FragmentStateManager` `createOrGetFragmentStateManager`(`androidx.fragment.app.FragmentManager` v3 @kind this, `androidx.fragment.app.Fragment` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.createOrGetFragmentStateManager:(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/FragmentStateManager;` @AccessFlag  {

  # return;
}
procedure `void` `detachFragment`(`androidx.fragment.app.FragmentManager` v4 @kind this, `androidx.fragment.app.Fragment` v5 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.detachFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchActivityCreated`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchActivityCreated:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchAttach`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchAttach:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchConfigurationChanged`(`androidx.fragment.app.FragmentManager` v2 @kind this, `android.content.res.Configuration` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dispatchConfigurationChanged:(Landroid/content/res/Configuration;)V` @AccessFlag  {

  # return;
}
procedure `boolean` `dispatchContextItemSelected`(`androidx.fragment.app.FragmentManager` v4 @kind this, `android.view.MenuItem` v5 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dispatchContextItemSelected:(Landroid/view/MenuItem;)Z` @AccessFlag  {

  # return;
}
procedure `void` `dispatchCreate`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchCreate:()V` @AccessFlag  {

  # return;
}
procedure `boolean` `dispatchCreateOptionsMenu`(`androidx.fragment.app.FragmentManager` v7 @kind this, `android.view.Menu` v8 @kind object, `android.view.MenuInflater` v9 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dispatchCreateOptionsMenu:(Landroid/view/Menu;Landroid/view/MenuInflater;)Z` @AccessFlag  {

  # return;
}
procedure `void` `dispatchDestroy`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchDestroy:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchDestroyView`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchDestroyView:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchLowMemory`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchLowMemory:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchMultiWindowModeChanged`(`androidx.fragment.app.FragmentManager` v2 @kind this, `boolean` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.dispatchMultiWindowModeChanged:(Z)V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchOnAttachFragment`(`androidx.fragment.app.FragmentManager` v2 @kind this, `androidx.fragment.app.Fragment` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dispatchOnAttachFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchOnHiddenChanged`(`androidx.fragment.app.FragmentManager` v3 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchOnHiddenChanged:()V` @AccessFlag  {

  # return;
}
procedure `boolean` `dispatchOptionsItemSelected`(`androidx.fragment.app.FragmentManager` v4 @kind this, `android.view.MenuItem` v5 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dispatchOptionsItemSelected:(Landroid/view/MenuItem;)Z` @AccessFlag  {

  # return;
}
procedure `void` `dispatchOptionsMenuClosed`(`androidx.fragment.app.FragmentManager` v2 @kind this, `android.view.Menu` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dispatchOptionsMenuClosed:(Landroid/view/Menu;)V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchPause`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchPause:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchPictureInPictureModeChanged`(`androidx.fragment.app.FragmentManager` v2 @kind this, `boolean` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.dispatchPictureInPictureModeChanged:(Z)V` @AccessFlag  {

  # return;
}
procedure `boolean` `dispatchPrepareOptionsMenu`(`androidx.fragment.app.FragmentManager` v5 @kind this, `android.view.Menu` v6 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dispatchPrepareOptionsMenu:(Landroid/view/Menu;)Z` @AccessFlag  {

  # return;
}
procedure `void` `dispatchPrimaryNavigationFragmentChanged`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchPrimaryNavigationFragmentChanged:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchResume`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchResume:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchStart`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchStart:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchStop`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchStop:()V` @AccessFlag  {

  # return;
}
procedure `void` `dispatchViewCreated`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.dispatchViewCreated:()V` @AccessFlag  {

  # return;
}
procedure `void` `dump`(`androidx.fragment.app.FragmentManager` v4 @kind this, `java.lang.String` v5 @kind object, `java.io.FileDescriptor` v6 @kind object, `java.io.PrintWriter` v7 @kind object, `java.lang.String`[] v8 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dump:(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `enqueueAction`(`androidx.fragment.app.FragmentManager` v2 @kind this, `androidx.fragment.app.FragmentManager$OpGenerator` v3 @kind object, `boolean` v4 ) @signature `Landroidx/fragment/app/FragmentManager;.enqueueAction:(Landroidx/fragment/app/FragmentManager$OpGenerator;Z)V` @AccessFlag  {

  # return;
}
procedure `boolean` `execPendingActions`(`androidx.fragment.app.FragmentManager` v3 @kind this, `boolean` v4 ) @signature `Landroidx/fragment/app/FragmentManager;.execPendingActions:(Z)Z` @AccessFlag  {

  # return;
}
procedure `void` `execSingleAction`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.FragmentManager$OpGenerator` v2 @kind object, `boolean` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.execSingleAction:(Landroidx/fragment/app/FragmentManager$OpGenerator;Z)V` @AccessFlag  {

  # return;
}
procedure `boolean` `executePendingTransactions`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.executePendingTransactions:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.Fragment` `findActiveFragment`(`androidx.fragment.app.FragmentManager` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.findActiveFragment:(Ljava/lang/String;)Landroidx/fragment/app/Fragment;` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.Fragment` `findFragmentById`(`androidx.fragment.app.FragmentManager` v1 @kind this, `int` v2 ) @signature `Landroidx/fragment/app/FragmentManager;.findFragmentById:(I)Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.Fragment` `findFragmentByTag`(`androidx.fragment.app.FragmentManager` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.findFragmentByTag:(Ljava/lang/String;)Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.Fragment` `findFragmentByWho`(`androidx.fragment.app.FragmentManager` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.findFragmentByWho:(Ljava/lang/String;)Landroidx/fragment/app/Fragment;` @AccessFlag  {

  # return;
}
procedure `int` `getActiveFragmentCount`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getActiveFragmentCount:()I` @AccessFlag  {

  # return;
}
procedure `java.util.List` `getActiveFragments`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getActiveFragments:()Ljava/util/List;` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.FragmentManager$BackStackEntry` `getBackStackEntryAt`(`androidx.fragment.app.FragmentManager` v1 @kind this, `int` v2 ) @signature `Landroidx/fragment/app/FragmentManager;.getBackStackEntryAt:(I)Landroidx/fragment/app/FragmentManager$BackStackEntry;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBackStackEntryCount`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getBackStackEntryCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.FragmentContainer` `getContainer`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getContainer:()Landroidx/fragment/app/FragmentContainer;` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.Fragment` `getFragment`(`androidx.fragment.app.FragmentManager` v4 @kind this, `android.os.Bundle` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.getFragment:(Landroid/os/Bundle;Ljava/lang/String;)Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.FragmentFactory` `getFragmentFactory`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getFragmentFactory:()Landroidx/fragment/app/FragmentFactory;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.FragmentStore` `getFragmentStore`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getFragmentStore:()Landroidx/fragment/app/FragmentStore;` @AccessFlag  {

  # return;
}
procedure `java.util.List` `getFragments`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getFragments:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.FragmentHostCallback` `getHost`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getHost:()Landroidx/fragment/app/FragmentHostCallback;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.view.LayoutInflater$Factory2` `getLayoutInflaterFactory`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getLayoutInflaterFactory:()Landroid/view/LayoutInflater$Factory2;` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.FragmentLifecycleCallbacksDispatcher` `getLifecycleCallbacksDispatcher`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getLifecycleCallbacksDispatcher:()Landroidx/fragment/app/FragmentLifecycleCallbacksDispatcher;` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.Fragment` `getParent`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getParent:()Landroidx/fragment/app/Fragment;` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.Fragment` `getPrimaryNavigationFragment`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getPrimaryNavigationFragment:()Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.SpecialEffectsControllerFactory` `getSpecialEffectsControllerFactory`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getSpecialEffectsControllerFactory:()Landroidx/fragment/app/SpecialEffectsControllerFactory;` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.strictmode.FragmentStrictMode$Policy` `getStrictModePolicy`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getStrictModePolicy:()Landroidx/fragment/app/strictmode/FragmentStrictMode$Policy;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.lifecycle.ViewModelStore` `getViewModelStore`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.getViewModelStore:(Landroidx/fragment/app/Fragment;)Landroidx/lifecycle/ViewModelStore;` @AccessFlag  {

  # return;
}
procedure `void` `handleOnBackPressed`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.handleOnBackPressed:()V` @AccessFlag  {

  # return;
}
procedure `void` `hideFragment`(`androidx.fragment.app.FragmentManager` v2 @kind this, `androidx.fragment.app.Fragment` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.hideFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `void` `invalidateMenuForFragment`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.invalidateMenuForFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `boolean` `isDestroyed`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.isDestroyed:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isParentHidden`(`androidx.fragment.app.FragmentManager` v0 @kind this, `androidx.fragment.app.Fragment` v1 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.isParentHidden:(Landroidx/fragment/app/Fragment;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isParentMenuVisible`(`androidx.fragment.app.FragmentManager` v0 @kind this, `androidx.fragment.app.Fragment` v1 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.isParentMenuVisible:(Landroidx/fragment/app/Fragment;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isPrimaryNavigation`(`androidx.fragment.app.FragmentManager` v3 @kind this, `androidx.fragment.app.Fragment` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.isPrimaryNavigation:(Landroidx/fragment/app/Fragment;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isStateAtLeast`(`androidx.fragment.app.FragmentManager` v1 @kind this, `int` v2 ) @signature `Landroidx/fragment/app/FragmentManager;.isStateAtLeast:(I)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isStateSaved`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.isStateSaved:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `launchRequestPermissions`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object, `java.lang.String`[] v3 @kind object, `int` v4 ) @signature `Landroidx/fragment/app/FragmentManager;.launchRequestPermissions:(Landroidx/fragment/app/Fragment;[Ljava/lang/String;I)V` @AccessFlag  {

  # return;
}
procedure `void` `launchStartActivityForResult`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object, `android.content.Intent` v3 @kind object, `int` v4 , `android.os.Bundle` v5 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.launchStartActivityForResult:(Landroidx/fragment/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)V` @AccessFlag  {

  # return;
}
procedure `void` `launchStartIntentSenderForResult`(`androidx.fragment.app.FragmentManager` v11 @kind this, `androidx.fragment.app.Fragment` v12 @kind object, `android.content.IntentSender` v13 @kind object, `int` v14 , `android.content.Intent` v15 @kind object, `int` v16 , `int` v17 , `int` v18 , `android.os.Bundle` v19 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.launchStartIntentSenderForResult:(Landroidx/fragment/app/Fragment;Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V` @AccessFlag  {

  # return;
}
procedure `void` `moveToState`(`androidx.fragment.app.FragmentManager` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.moveToState:(IZ)V` @AccessFlag  {

  # return;
}
procedure `void` `noteStateNotSaved`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.noteStateNotSaved:()V` @AccessFlag  {

  # return;
}
procedure `void` `onContainerAvailable`(`androidx.fragment.app.FragmentManager` v5 @kind this, `androidx.fragment.app.FragmentContainerView` v6 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.onContainerAvailable:(Landroidx/fragment/app/FragmentContainerView;)V` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.FragmentTransaction` `openTransaction`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.openTransaction:()Landroidx/fragment/app/FragmentTransaction;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `performPendingDeferredStart`(`androidx.fragment.app.FragmentManager` v2 @kind this, `androidx.fragment.app.FragmentStateManager` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.performPendingDeferredStart:(Landroidx/fragment/app/FragmentStateManager;)V` @AccessFlag  {

  # return;
}
procedure `void` `popBackStack`(`androidx.fragment.app.FragmentManager` v4 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.popBackStack:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `popBackStack`(`androidx.fragment.app.FragmentManager` v1 @kind this, `int` v2 , `int` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStack:(II)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `popBackStack`(`androidx.fragment.app.FragmentManager` v2 @kind this, `int` v3 , `int` v4 , `boolean` v5 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStack:(IIZ)V` @AccessFlag  {

  # return;
}
procedure `void` `popBackStack`(`androidx.fragment.app.FragmentManager` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStack:(Ljava/lang/String;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `popBackStackImmediate`(`androidx.fragment.app.FragmentManager` v3 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.popBackStackImmediate:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `popBackStackImmediate`(`androidx.fragment.app.FragmentManager` v2 @kind this, `int` v3 , `int` v4 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStackImmediate:(II)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `popBackStackImmediate`(`androidx.fragment.app.FragmentManager` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStackImmediate:(Ljava/lang/String;I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `popBackStackState`(`androidx.fragment.app.FragmentManager` v2 @kind this, `java.util.ArrayList` v3 @kind object, `java.util.ArrayList` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStackState:(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;II)Z` @AccessFlag  {

  # return;
}
procedure `void` `putFragment`(`androidx.fragment.app.FragmentManager` v3 @kind this, `android.os.Bundle` v4 @kind object, `java.lang.String` v5 @kind object, `androidx.fragment.app.Fragment` v6 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.putFragment:(Landroid/os/Bundle;Ljava/lang/String;Landroidx/fragment/app/Fragment;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `registerFragmentLifecycleCallbacks`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks` v2 @kind object, `boolean` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.registerFragmentLifecycleCallbacks:(Landroidx/fragment/app/FragmentManager$FragmentLifecycleCallbacks;Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeFragment`(`androidx.fragment.app.FragmentManager` v3 @kind this, `androidx.fragment.app.Fragment` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.removeFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `void` `removeFragmentOnAttachListener`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.FragmentOnAttachListener` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.removeFragmentOnAttachListener:(Landroidx/fragment/app/FragmentOnAttachListener;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeOnBackStackChangedListener`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.FragmentManager$OnBackStackChangedListener` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.removeOnBackStackChangedListener:(Landroidx/fragment/app/FragmentManager$OnBackStackChangedListener;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeRetainedFragment`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.removeRetainedFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `void` `restoreAllState`(`androidx.fragment.app.FragmentManager` v2 @kind this, `android.os.Parcelable` v3 @kind object, `androidx.fragment.app.FragmentManagerNonConfig` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.restoreAllState:(Landroid/os/Parcelable;Landroidx/fragment/app/FragmentManagerNonConfig;)V` @AccessFlag  {

  # return;
}
procedure `void` `restoreBackStack`(`androidx.fragment.app.FragmentManager` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.restoreBackStack:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `restoreBackStackState`(`androidx.fragment.app.FragmentManager` v6 @kind this, `java.util.ArrayList` v7 @kind object, `java.util.ArrayList` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.restoreBackStackState:(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `void` `restoreSaveState`(`androidx.fragment.app.FragmentManager` v2 @kind this, `android.os.Parcelable` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.restoreSaveState:(Landroid/os/Parcelable;)V` @AccessFlag  {

  # return;
}
procedure `void` `restoreSaveStateInternal`(`androidx.fragment.app.FragmentManager` v13 @kind this, `android.os.Parcelable` v14 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.restoreSaveStateInternal:(Landroid/os/Parcelable;)V` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.FragmentManagerNonConfig` `retainNonConfig`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.retainNonConfig:()Landroidx/fragment/app/FragmentManagerNonConfig;` @AccessFlag  {

  # return;
}
procedure `android.os.Parcelable` `saveAllState`(`androidx.fragment.app.FragmentManager` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.saveAllState:()Landroid/os/Parcelable;` @AccessFlag  {

  # return;
}
procedure `android.os.Parcelable` `saveAllStateInternal`(`androidx.fragment.app.FragmentManager` v10 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.saveAllStateInternal:()Landroid/os/Parcelable;` @AccessFlag  {

  # return;
}
procedure `void` `saveBackStack`(`androidx.fragment.app.FragmentManager` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.saveBackStack:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `saveBackStackState`(`androidx.fragment.app.FragmentManager` v16 @kind this, `java.util.ArrayList` v17 @kind object, `java.util.ArrayList` v18 @kind object, `java.lang.String` v19 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.saveBackStackState:(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.Fragment$SavedState` `saveFragmentInstanceState`(`androidx.fragment.app.FragmentManager` v4 @kind this, `androidx.fragment.app.Fragment` v5 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.saveFragmentInstanceState:(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/Fragment$SavedState;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `scheduleCommit`(`androidx.fragment.app.FragmentManager` v3 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.scheduleCommit:()V` @AccessFlag  {

  # return;
}
procedure `void` `setExitAnimationOrder`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object, `boolean` v3 ) @signature `Landroidx/fragment/app/FragmentManager;.setExitAnimationOrder:(Landroidx/fragment/app/Fragment;Z)V` @AccessFlag  {

  # return;
}
procedure `void` `setFragmentFactory`(`androidx.fragment.app.FragmentManager` v0 @kind this, `androidx.fragment.app.FragmentFactory` v1 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.setFragmentFactory:(Landroidx/fragment/app/FragmentFactory;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFragmentResult`(`androidx.fragment.app.FragmentManager` v2 @kind this, `java.lang.String` v3 @kind object, `android.os.Bundle` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.setFragmentResult:(Ljava/lang/String;Landroid/os/Bundle;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `setFragmentResultListener`(`androidx.fragment.app.FragmentManager` v3 @kind this, `java.lang.String` v4 @kind object, `androidx.lifecycle.LifecycleOwner` v5 @kind object, `androidx.fragment.app.FragmentResultListener` v6 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.setFragmentResultListener:(Ljava/lang/String;Landroidx/lifecycle/LifecycleOwner;Landroidx/fragment/app/FragmentResultListener;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `setMaxLifecycle`(`androidx.fragment.app.FragmentManager` v2 @kind this, `androidx.fragment.app.Fragment` v3 @kind object, `androidx.lifecycle.Lifecycle$State` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.setMaxLifecycle:(Landroidx/fragment/app/Fragment;Landroidx/lifecycle/Lifecycle$State;)V` @AccessFlag  {

  # return;
}
procedure `void` `setPrimaryNavigationFragment`(`androidx.fragment.app.FragmentManager` v3 @kind this, `androidx.fragment.app.Fragment` v4 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.setPrimaryNavigationFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `void` `setSpecialEffectsControllerFactory`(`androidx.fragment.app.FragmentManager` v0 @kind this, `androidx.fragment.app.SpecialEffectsControllerFactory` v1 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.setSpecialEffectsControllerFactory:(Landroidx/fragment/app/SpecialEffectsControllerFactory;)V` @AccessFlag  {

  # return;
}
procedure `void` `setStrictModePolicy`(`androidx.fragment.app.FragmentManager` v0 @kind this, `androidx.fragment.app.strictmode.FragmentStrictMode$Policy` v1 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.setStrictModePolicy:(Landroidx/fragment/app/strictmode/FragmentStrictMode$Policy;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `showFragment`(`androidx.fragment.app.FragmentManager` v2 @kind this, `androidx.fragment.app.Fragment` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.showFragment:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.fragment.app.FragmentManager` v4 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `unregisterFragmentLifecycleCallbacks`(`androidx.fragment.app.FragmentManager` v1 @kind this, `androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.unregisterFragmentLifecycleCallbacks:(Landroidx/fragment/app/FragmentManager$FragmentLifecycleCallbacks;)V` @AccessFlag PUBLIC {

  # return;
}
