record `androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper` @kind class @AccessFlag FINAL extends `androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper` @kind class {
}
procedure `void` `<init>`(`androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper` v1 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture$SynchronizedHelper;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `casListeners`(`androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper` v1 @kind this, `androidx.concurrent.futures.AbstractResolvableFuture` v2 @kind object, `androidx.concurrent.futures.AbstractResolvableFuture$Listener` v3 @kind object, `androidx.concurrent.futures.AbstractResolvableFuture$Listener` v4 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture$SynchronizedHelper;.casListeners:(Landroidx/concurrent/futures/AbstractResolvableFuture;Landroidx/concurrent/futures/AbstractResolvableFuture$Listener;Landroidx/concurrent/futures/AbstractResolvableFuture$Listener;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `casValue`(`androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper` v1 @kind this, `androidx.concurrent.futures.AbstractResolvableFuture` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture$SynchronizedHelper;.casValue:(Landroidx/concurrent/futures/AbstractResolvableFuture;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `casWaiters`(`androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper` v1 @kind this, `androidx.concurrent.futures.AbstractResolvableFuture` v2 @kind object, `androidx.concurrent.futures.AbstractResolvableFuture$Waiter` v3 @kind object, `androidx.concurrent.futures.AbstractResolvableFuture$Waiter` v4 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture$SynchronizedHelper;.casWaiters:(Landroidx/concurrent/futures/AbstractResolvableFuture;Landroidx/concurrent/futures/AbstractResolvableFuture$Waiter;Landroidx/concurrent/futures/AbstractResolvableFuture$Waiter;)Z` @AccessFlag  {

  # return;
}
procedure `void` `putNext`(`androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper` v0 @kind this, `androidx.concurrent.futures.AbstractResolvableFuture$Waiter` v1 @kind object, `androidx.concurrent.futures.AbstractResolvableFuture$Waiter` v2 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture$SynchronizedHelper;.putNext:(Landroidx/concurrent/futures/AbstractResolvableFuture$Waiter;Landroidx/concurrent/futures/AbstractResolvableFuture$Waiter;)V` @AccessFlag  {

  # return;
}
procedure `void` `putThread`(`androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper` v0 @kind this, `androidx.concurrent.futures.AbstractResolvableFuture$Waiter` v1 @kind object, `java.lang.Thread` v2 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture$SynchronizedHelper;.putThread:(Landroidx/concurrent/futures/AbstractResolvableFuture$Waiter;Ljava/lang/Thread;)V` @AccessFlag  {

  # return;
}
