record `androidx.concurrent.futures.ResolvableFuture` @kind class @AccessFlag PUBLIC_FINAL extends `androidx.concurrent.futures.AbstractResolvableFuture` @kind class {
}
procedure `void` `<init>`(`androidx.concurrent.futures.ResolvableFuture` v0 @kind this) @signature `Landroidx/concurrent/futures/ResolvableFuture;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `androidx.concurrent.futures.ResolvableFuture` `create`() @signature `Landroidx/concurrent/futures/ResolvableFuture;.create:()Landroidx/concurrent/futures/ResolvableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `set`(`androidx.concurrent.futures.ResolvableFuture` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Landroidx/concurrent/futures/ResolvableFuture;.set:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `setException`(`androidx.concurrent.futures.ResolvableFuture` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Landroidx/concurrent/futures/ResolvableFuture;.setException:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `setFuture`(`androidx.concurrent.futures.ResolvableFuture` v0 @kind this, `com.google.common.util.concurrent.ListenableFuture` v1 @kind object) @signature `Landroidx/concurrent/futures/ResolvableFuture;.setFuture:(Lcom/google/common/util/concurrent/ListenableFuture;)Z` @AccessFlag PUBLIC {

  # return;
}
