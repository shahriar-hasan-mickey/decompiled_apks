record `androidx.concurrent.futures.AbstractResolvableFuture` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.util.concurrent.ListenableFuture` @kind interface {
  `androidx.concurrent.futures.AbstractResolvableFuture$Listener` `androidx.concurrent.futures.AbstractResolvableFuture.listeners` @AccessFlag VOLATILE;
  `java.lang.Object` `androidx.concurrent.futures.AbstractResolvableFuture.value` @AccessFlag VOLATILE;
  `androidx.concurrent.futures.AbstractResolvableFuture$Waiter` `androidx.concurrent.futures.AbstractResolvableFuture.waiters` @AccessFlag VOLATILE;
}
global `androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper` `@@androidx.concurrent.futures.AbstractResolvableFuture.ATOMIC_HELPER` @AccessFlag STATIC_FINAL;
global `boolean` `@@androidx.concurrent.futures.AbstractResolvableFuture.GENERATE_CANCELLATION_CAUSES` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@androidx.concurrent.futures.AbstractResolvableFuture.NULL` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@androidx.concurrent.futures.AbstractResolvableFuture.log` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.concurrent.futures.AbstractResolvableFuture` v0 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `addDoneString`(`androidx.concurrent.futures.AbstractResolvableFuture` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.addDoneString:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.concurrent.CancellationException` `cancellationExceptionWithCause`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.cancellationExceptionWithCause:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `checkNotNull`(`java.lang.Object` v0 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `androidx.concurrent.futures.AbstractResolvableFuture$Listener` `clearListeners`(`androidx.concurrent.futures.AbstractResolvableFuture` v4 @kind this, `androidx.concurrent.futures.AbstractResolvableFuture$Listener` v5 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.clearListeners:(Landroidx/concurrent/futures/AbstractResolvableFuture$Listener;)Landroidx/concurrent/futures/AbstractResolvableFuture$Listener;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `complete`(`androidx.concurrent.futures.AbstractResolvableFuture` v4 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.complete:(Landroidx/concurrent/futures/AbstractResolvableFuture;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `executeListener`(`java.lang.Runnable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.executeListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `getDoneValue`(`androidx.concurrent.futures.AbstractResolvableFuture` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.getDoneValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `getFutureValue`(`com.google.common.util.concurrent.ListenableFuture` v5 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.getFutureValue:(Lcom/google/common/util/concurrent/ListenableFuture;)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object` `getUninterruptibly`(`java.util.concurrent.Future` v1 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.getUninterruptibly:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `releaseWaiters`(`androidx.concurrent.futures.AbstractResolvableFuture` v3 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.releaseWaiters:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeWaiter`(`androidx.concurrent.futures.AbstractResolvableFuture` v4 @kind this, `androidx.concurrent.futures.AbstractResolvableFuture$Waiter` v5 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.removeWaiter:(Landroidx/concurrent/futures/AbstractResolvableFuture$Waiter;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `userObjectToString`(`androidx.concurrent.futures.AbstractResolvableFuture` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.userObjectToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addListener`(`androidx.concurrent.futures.AbstractResolvableFuture` v3 @kind this, `java.lang.Runnable` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `afterDone`(`androidx.concurrent.futures.AbstractResolvableFuture` v0 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.afterDone:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `cancel`(`androidx.concurrent.futures.AbstractResolvableFuture` v7 @kind this, `boolean` v8 ) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.cancel:(Z)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.concurrent.futures.AbstractResolvableFuture` v6 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.concurrent.futures.AbstractResolvableFuture` v19 @kind this, `long` v20 , `java.util.concurrent.TimeUnit` v22 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `interruptTask`(`androidx.concurrent.futures.AbstractResolvableFuture` v0 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.interruptTask:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isCancelled`(`androidx.concurrent.futures.AbstractResolvableFuture` v1 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isDone`(`androidx.concurrent.futures.AbstractResolvableFuture` v3 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.isDone:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `maybePropagateCancellationTo`(`androidx.concurrent.futures.AbstractResolvableFuture` v2 @kind this, `java.util.concurrent.Future` v3 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.maybePropagateCancellationTo:(Ljava/util/concurrent/Future;)V` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.String` `pendingToString`(`androidx.concurrent.futures.AbstractResolvableFuture` v3 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.pendingToString:()Ljava/lang/String;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `set`(`androidx.concurrent.futures.AbstractResolvableFuture` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.set:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `setException`(`androidx.concurrent.futures.AbstractResolvableFuture` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.setException:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `setFuture`(`androidx.concurrent.futures.AbstractResolvableFuture` v5 @kind this, `com.google.common.util.concurrent.ListenableFuture` v6 @kind object) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.setFuture:(Lcom/google/common/util/concurrent/ListenableFuture;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.concurrent.futures.AbstractResolvableFuture` v5 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `wasInterrupted`(`androidx.concurrent.futures.AbstractResolvableFuture` v2 @kind this) @signature `Landroidx/concurrent/futures/AbstractResolvableFuture;.wasInterrupted:()Z` @AccessFlag PROTECTED_FINAL {

  # return;
}
