record `org.apache.commons.lang3.ArrayUtils` @kind class @AccessFlag PUBLIC {
}
global `boolean`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Boolean`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Byte`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Character`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `char`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Class`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `double`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Double`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `float`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Float`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Integer`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `long`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Long`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Object`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `short`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Short`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/ArrayUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.ArrayUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/ArrayUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.a:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `add`(`byte`[] v1 @kind object, `byte` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([BB)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `add`(`byte`[] v1 @kind object, `int` v2 , `byte` v3 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([BIB)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `add`(`char`[] v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([CC)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `add`(`char`[] v1 @kind object, `int` v2 , `char` v3 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([CIC)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `add`(`double`[] v1 @kind object, `double` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([DD)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `add`(`double`[] v0 @kind object, `int` v1 , `double` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([DID)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `add`(`float`[] v1 @kind object, `float` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([FF)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `add`(`float`[] v1 @kind object, `int` v2 , `float` v3 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([FIF)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `add`(`int`[] v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([II)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `add`(`int`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([III)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `add`(`long`[] v0 @kind object, `int` v1 , `long` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([JIJ)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `add`(`long`[] v1 @kind object, `long` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([JJ)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `add`(`java.lang.Object`[] v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `add`(`java.lang.Object`[] v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `add`(`short`[] v1 @kind object, `int` v2 , `short` v3 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([SIS)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `add`(`short`[] v1 @kind object, `short` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([SS)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `add`(`boolean`[] v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([ZIZ)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `add`(`boolean`[] v1 @kind object, `boolean` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.add:([ZZ)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `addAll`(`byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([B[B)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `addAll`(`char`[] v3 @kind object, `char`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([C[C)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `addAll`(`double`[] v3 @kind object, `double`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([D[D)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `addAll`(`float`[] v3 @kind object, `float`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([F[F)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `addAll`(`int`[] v3 @kind object, `int`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([I[I)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `addAll`(`long`[] v3 @kind object, `long`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([J[J)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `addAll`(`java.lang.Object`[] v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `addAll`(`short`[] v3 @kind object, `short`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([S[S)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `addAll`(`boolean`[] v3 @kind object, `boolean`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.addAll:([Z[Z)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.b:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v4 @kind object, `int` v5 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.c:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `clone`(`byte`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([B)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `clone`(`char`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([C)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `clone`(`double`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([D)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `clone`(`float`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([F)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `clone`(`int`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([I)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `clone`(`long`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([J)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `clone`(`java.lang.Object`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `clone`(`short`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([S)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `clone`(`boolean`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.clone:([Z)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`byte`[] v0 @kind object, `byte` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([BB)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`char`[] v0 @kind object, `char` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([CC)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`double`[] v0 @kind object, `double` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([DD)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`double`[] v6 @kind object, `double` v7 , `double` v9 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([DDD)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`float`[] v0 @kind object, `float` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([FF)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`int`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([II)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`long`[] v0 @kind object, `long` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([JJ)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`java.lang.Object`[] v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`short`[] v0 @kind object, `short` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([SS)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`boolean`[] v0 @kind object, `boolean` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.contains:([ZZ)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getLength`(`java.lang.Object` v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.getLength:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCode`(`java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.hashCode:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`byte`[] v1 @kind object, `byte` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([BB)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`byte`[] v2 @kind object, `byte` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([BBI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`char`[] v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([CC)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`char`[] v2 @kind object, `char` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([CCI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`double`[] v1 @kind object, `double` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([DD)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`double`[] v6 @kind object, `double` v7 , `double` v9 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([DDD)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`double`[] v4 @kind object, `double` v5 , `int` v7 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([DDI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`double`[] v4 @kind object, `double` v5 , `int` v7 , `double` v8 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([DDID)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`float`[] v1 @kind object, `float` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([FF)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`float`[] v2 @kind object, `float` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([FFI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`int`[] v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`int`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([III)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`long`[] v1 @kind object, `long` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([JJ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`long`[] v4 @kind object, `long` v5 , `int` v7 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([JJI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`java.lang.Object`[] v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`java.lang.Object`[] v2 @kind object, `java.lang.Object` v3 @kind object, `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([Ljava/lang/Object;Ljava/lang/Object;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`short`[] v1 @kind object, `short` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([SS)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`short`[] v2 @kind object, `short` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([SSI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`boolean`[] v1 @kind object, `boolean` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([ZZ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`boolean`[] v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.indexOf:([ZZI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`byte`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([B)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`char`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([C)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`double`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([D)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`float`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([F)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`int`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`long`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([J)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`java.lang.Object`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`short`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([S)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`boolean`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEmpty:([Z)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEquals`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`byte`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([B)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`char`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([C)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`double`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([D)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`float`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([F)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`int`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`long`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([J)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`java.lang.Object`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`short`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([S)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`boolean`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isNotEmpty:([Z)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([B[B)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`char`[] v1 @kind object, `char`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([C[C)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`double`[] v1 @kind object, `double`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([D[D)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`float`[] v1 @kind object, `float`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([F[F)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([I[I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`long`[] v1 @kind object, `long`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([J[J)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`java.lang.Object`[] v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`short`[] v1 @kind object, `short`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([S[S)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameLength`(`boolean`[] v1 @kind object, `boolean`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameLength:([Z[Z)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSameType`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.isSameType:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`byte`[] v1 @kind object, `byte` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([BB)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`byte`[] v2 @kind object, `byte` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([BBI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`char`[] v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([CC)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`char`[] v2 @kind object, `char` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([CCI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`double`[] v1 @kind object, `double` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([DD)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`double`[] v6 @kind object, `double` v7 , `double` v9 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([DDD)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`double`[] v4 @kind object, `double` v5 , `int` v7 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([DDI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`double`[] v4 @kind object, `double` v5 , `int` v7 , `double` v8 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([DDID)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`float`[] v1 @kind object, `float` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([FF)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`float`[] v2 @kind object, `float` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([FFI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`int`[] v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`int`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([III)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`long`[] v1 @kind object, `long` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([JJ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`long`[] v4 @kind object, `long` v5 , `int` v7 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([JJI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`java.lang.Object`[] v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`java.lang.Object`[] v2 @kind object, `java.lang.Object` v3 @kind object, `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([Ljava/lang/Object;Ljava/lang/Object;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`short`[] v1 @kind object, `short` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([SS)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`short`[] v2 @kind object, `short` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([SSI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`boolean`[] v1 @kind object, `boolean` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([ZZ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`boolean`[] v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.lastIndexOf:([ZZI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `nullToEmpty`(`byte`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([B)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `nullToEmpty`(`char`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([C)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `nullToEmpty`(`double`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([D)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `nullToEmpty`(`float`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([F)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `nullToEmpty`(`int`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([I)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `nullToEmpty`(`long`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([J)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean`[] `nullToEmpty`(`java.lang.Boolean`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Boolean;)[Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Byte`[] `nullToEmpty`(`java.lang.Byte`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Byte;)[Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Character`[] `nullToEmpty`(`java.lang.Character`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Character;)[Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Double`[] `nullToEmpty`(`java.lang.Double`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Double;)[Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Float`[] `nullToEmpty`(`java.lang.Float`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Float;)[Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer`[] `nullToEmpty`(`java.lang.Integer`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Integer;)[Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Long`[] `nullToEmpty`(`java.lang.Long`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Long;)[Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `nullToEmpty`(`java.lang.Object`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Short`[] `nullToEmpty`(`java.lang.Short`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/Short;)[Ljava/lang/Short;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `nullToEmpty`(`java.lang.String`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `nullToEmpty`(`short`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([S)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `nullToEmpty`(`boolean`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.nullToEmpty:([Z)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `remove`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([BI)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `remove`(`char`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([CI)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `remove`(`double`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([DI)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `remove`(`float`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([FI)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `remove`(`int`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([II)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `remove`(`long`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([JI)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `remove`(`java.lang.Object`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `remove`(`short`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([SI)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `remove`(`boolean`[] v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.remove:([ZI)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `removeElement`(`byte`[] v1 @kind object, `byte` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([BB)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `removeElement`(`char`[] v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([CC)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `removeElement`(`double`[] v0 @kind object, `double` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([DD)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `removeElement`(`float`[] v1 @kind object, `float` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([FF)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `removeElement`(`int`[] v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([II)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `removeElement`(`long`[] v0 @kind object, `long` v1 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([JJ)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `removeElement`(`java.lang.Object`[] v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `removeElement`(`short`[] v1 @kind object, `short` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([SS)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `removeElement`(`boolean`[] v1 @kind object, `boolean` v2 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.removeElement:([ZZ)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`byte`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([B)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`char`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([C)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`double`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([D)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`float`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([F)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`int`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`long`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`java.lang.Object`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`short`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([S)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`boolean`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.reverse:([Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `subarray`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([BII)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `subarray`(`char`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([CII)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `subarray`(`double`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([DII)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `subarray`(`float`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([FII)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `subarray`(`int`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([III)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `subarray`(`long`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([JII)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `subarray`(`java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([Ljava/lang/Object;II)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `subarray`(`short`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([SII)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `subarray`(`boolean`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.subarray:([ZII)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`java.lang.Object`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Map` `toMap`(`java.lang.Object`[] v9 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toMap:([Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Boolean`[] `toObject`(`boolean`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toObject:([Z)[Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Byte`[] `toObject`(`byte`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toObject:([B)[Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Character`[] `toObject`(`char`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toObject:([C)[Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Double`[] `toObject`(`double`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toObject:([D)[Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Float`[] `toObject`(`float`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toObject:([F)[Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer`[] `toObject`(`int`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toObject:([I)[Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Long`[] `toObject`(`long`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toObject:([J)[Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Short`[] `toObject`(`short`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toObject:([S)[Ljava/lang/Short;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `toPrimitive`(`java.lang.Byte`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Byte;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `toPrimitive`(`java.lang.Byte`[] v3 @kind object, `byte` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Byte;B)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `toPrimitive`(`java.lang.Character`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Character;)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `char`[] `toPrimitive`(`java.lang.Character`[] v3 @kind object, `char` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Character;C)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `toPrimitive`(`java.lang.Double`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Double;)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double`[] `toPrimitive`(`java.lang.Double`[] v4 @kind object, `double` v5 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Double;D)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `toPrimitive`(`java.lang.Float`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Float;)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `float`[] `toPrimitive`(`java.lang.Float`[] v3 @kind object, `float` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Float;F)[F` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `toPrimitive`(`java.lang.Integer`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Integer;)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `toPrimitive`(`java.lang.Integer`[] v3 @kind object, `int` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Integer;I)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `toPrimitive`(`java.lang.Long`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Long;)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `toPrimitive`(`java.lang.Long`[] v4 @kind object, `long` v5 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Long;J)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `toPrimitive`(`java.lang.Short`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Short;)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `toPrimitive`(`java.lang.Short`[] v3 @kind object, `short` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Short;S)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `toPrimitive`(`java.lang.Boolean`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Boolean;)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `toPrimitive`(`java.lang.Boolean`[] v3 @kind object, `boolean` v4 ) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toPrimitive:([Ljava/lang/Boolean;Z)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/ArrayUtils;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
