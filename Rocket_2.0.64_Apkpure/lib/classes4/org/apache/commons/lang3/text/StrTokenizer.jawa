record `org.apache.commons.lang3.text.StrTokenizer` @kind class @AccessFlag PUBLIC extends `java.util.ListIterator` @kind interface, `java.lang.Cloneable` @kind interface {
  `char`[] `org.apache.commons.lang3.text.StrTokenizer.a` @AccessFlag PRIVATE;
  `java.lang.String`[] `org.apache.commons.lang3.text.StrTokenizer.b` @AccessFlag PRIVATE;
  `int` `org.apache.commons.lang3.text.StrTokenizer.c` @AccessFlag PRIVATE;
  `org.apache.commons.lang3.text.StrMatcher` `org.apache.commons.lang3.text.StrTokenizer.d` @AccessFlag PRIVATE;
  `org.apache.commons.lang3.text.StrMatcher` `org.apache.commons.lang3.text.StrTokenizer.e` @AccessFlag PRIVATE;
  `org.apache.commons.lang3.text.StrMatcher` `org.apache.commons.lang3.text.StrTokenizer.f` @AccessFlag PRIVATE;
  `org.apache.commons.lang3.text.StrMatcher` `org.apache.commons.lang3.text.StrTokenizer.g` @AccessFlag PRIVATE;
  `boolean` `org.apache.commons.lang3.text.StrTokenizer.h` @AccessFlag PRIVATE;
  `boolean` `org.apache.commons.lang3.text.StrTokenizer.i` @AccessFlag PRIVATE;
}
global `org.apache.commons.lang3.text.StrTokenizer` `@@org.apache.commons.lang3.text.StrTokenizer.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrTokenizer` `@@org.apache.commons.lang3.text.StrTokenizer.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.String` v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:(Ljava/lang/String;C)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.String` v1 @kind object, `char` v2 , `char` v3 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:(Ljava/lang/String;CC)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.String` v1 @kind object, `org.apache.commons.lang3.text.StrMatcher` v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrMatcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.String` v1 @kind object, `org.apache.commons.lang3.text.StrMatcher` v2 @kind object, `org.apache.commons.lang3.text.StrMatcher` v3 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this, `char`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:([C)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char`[] v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:([CC)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char`[] v1 @kind object, `char` v2 , `char` v3 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:([CCC)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:([CLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char`[] v1 @kind object, `org.apache.commons.lang3.text.StrMatcher` v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:([CLorg/apache/commons/lang3/text/StrMatcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char`[] v1 @kind object, `org.apache.commons.lang3.text.StrMatcher` v2 @kind object, `org.apache.commons.lang3.text.StrMatcher` v3 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.<init>:([CLorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this, `java.util.List` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.a:(Ljava/util/List;Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `b`(`org.apache.commons.lang3.text.StrTokenizer` v3 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.b:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `d`() @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.d:()Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `e`() @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.e:()Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `f`(`org.apache.commons.lang3.text.StrTokenizer` v4 @kind this, `char`[] v5 @kind object, `int` v6 , `int` v7 , `int` v8 , `int` v9 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.f:([CIIII)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `g`(`org.apache.commons.lang3.text.StrTokenizer` v8 @kind this, `char`[] v9 @kind object, `int` v10 , `int` v11 , `org.apache.commons.lang3.text.StrBuilder` v12 @kind object, `java.util.List` v13 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.g:([CIILorg/apache/commons/lang3/text/StrBuilder;Ljava/util/List;)I` @AccessFlag PRIVATE {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `getCSVInstance`() @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getCSVInstance:()Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `getCSVInstance`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getCSVInstance:(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `getCSVInstance`(`char`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getCSVInstance:([C)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `getTSVInstance`() @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getTSVInstance:()Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `getTSVInstance`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getTSVInstance:(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `getTSVInstance`(`char`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getTSVInstance:([C)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `h`(`org.apache.commons.lang3.text.StrTokenizer` v17 @kind this, `char`[] v18 @kind object, `int` v19 , `int` v20 , `org.apache.commons.lang3.text.StrBuilder` v21 @kind object, `java.util.List` v22 @kind object, `int` v23 , `int` v24 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.h:([CIILorg/apache/commons/lang3/text/StrBuilder;Ljava/util/List;II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.add:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `c`(`org.apache.commons.lang3.text.StrTokenizer` v2 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.c:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `clone`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getContent`(`org.apache.commons.lang3.text.StrTokenizer` v2 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getContent:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `getDelimiterMatcher`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getDelimiterMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `getIgnoredMatcher`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getIgnoredMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `getQuoteMatcher`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getQuoteMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String`[] `getTokenArray`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getTokenArray:()[Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getTokenList`(`org.apache.commons.lang3.text.StrTokenizer` v5 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getTokenList:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `getTrimmerMatcher`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.getTrimmerMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasNext`(`org.apache.commons.lang3.text.StrTokenizer` v2 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasPrevious`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.hasPrevious:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmptyTokenAsNull`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.isEmptyTokenAsNull:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isIgnoreEmptyTokens`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.isIgnoreEmptyTokens:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `next`(`org.apache.commons.lang3.text.StrTokenizer` v3 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `nextIndex`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.nextIndex:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `nextToken`(`org.apache.commons.lang3.text.StrTokenizer` v3 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.nextToken:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `previous`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `previous`(`org.apache.commons.lang3.text.StrTokenizer` v2 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.previous:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `previousIndex`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.previousIndex:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `previousToken`(`org.apache.commons.lang3.text.StrTokenizer` v2 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.previousToken:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`org.apache.commons.lang3.text.StrTokenizer` v2 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `reset`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.reset:()Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `reset`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.reset:(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `reset`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.reset:([C)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `set`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `set`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.set:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setDelimiterChar`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char` v1 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setDelimiterChar:(C)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setDelimiterMatcher`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `org.apache.commons.lang3.text.StrMatcher` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setDelimiterMatcher:(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setDelimiterString`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setDelimiterString:(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setEmptyTokenAsNull`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `boolean` v1 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setEmptyTokenAsNull:(Z)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setIgnoreEmptyTokens`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `boolean` v1 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setIgnoreEmptyTokens:(Z)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setIgnoredChar`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char` v1 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setIgnoredChar:(C)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setIgnoredMatcher`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `org.apache.commons.lang3.text.StrMatcher` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setIgnoredMatcher:(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setQuoteChar`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `char` v1 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setQuoteChar:(C)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setQuoteMatcher`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `org.apache.commons.lang3.text.StrMatcher` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setQuoteMatcher:(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrTokenizer` `setTrimmerMatcher`(`org.apache.commons.lang3.text.StrTokenizer` v0 @kind this, `org.apache.commons.lang3.text.StrMatcher` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.setTrimmerMatcher:(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`org.apache.commons.lang3.text.StrTokenizer` v1 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.text.StrTokenizer` v2 @kind this) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `tokenize`(`org.apache.commons.lang3.text.StrTokenizer` v8 @kind this, `char`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lorg/apache/commons/lang3/text/StrTokenizer;.tokenize:([CII)Ljava/util/List;` @AccessFlag PROTECTED {

  # return;
}
