record `org.apache.commons.lang3.ObjectUtils` @kind class @AccessFlag PUBLIC {
}
global `org.apache.commons.lang3.ObjectUtils$Null` `@@org.apache.commons.lang3.ObjectUtils.NULL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/ObjectUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.ObjectUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/ObjectUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `clone`(`java.lang.Object` v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.clone:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `cloneIfPossible`(`java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.cloneIfPossible:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.compare:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`java.lang.Comparable` v2 @kind object, `java.lang.Comparable` v3 @kind object, `boolean` v4 ) @signature `Lorg/apache/commons/lang3/ObjectUtils;.compare:(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `defaultIfNull`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `firstNonNull`(`java.lang.Object`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.firstNonNull:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCode`(`java.lang.Object` v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.hashCode:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCodeMulti`(`java.lang.Object`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.hashCodeMulti:([Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `identityToString`(`java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.identityToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `identityToString`(`java.lang.StringBuffer` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.identityToString:(Ljava/lang/StringBuffer;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Comparable` `max`(`java.lang.Comparable`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.max:([Ljava/lang/Comparable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Comparable` `min`(`java.lang.Comparable`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.min:([Ljava/lang/Comparable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `notEqual`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.notEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`java.lang.Object` v0 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.toString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/ObjectUtils;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
