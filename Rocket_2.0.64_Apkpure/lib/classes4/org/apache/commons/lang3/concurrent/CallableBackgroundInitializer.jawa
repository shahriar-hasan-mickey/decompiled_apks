record `org.apache.commons.lang3.concurrent.CallableBackgroundInitializer` @kind class @AccessFlag PUBLIC extends `org.apache.commons.lang3.concurrent.BackgroundInitializer` @kind class {
  `java.util.concurrent.Callable` `org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.CallableBackgroundInitializer` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/CallableBackgroundInitializer;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.CallableBackgroundInitializer` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `java.util.concurrent.ExecutorService` v2 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/CallableBackgroundInitializer;.<init>:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `c`(`org.apache.commons.lang3.concurrent.CallableBackgroundInitializer` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/CallableBackgroundInitializer;.c:(Ljava/util/concurrent/Callable;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `initialize`(`org.apache.commons.lang3.concurrent.CallableBackgroundInitializer` v1 @kind this) @signature `Lorg/apache/commons/lang3/concurrent/CallableBackgroundInitializer;.initialize:()Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
