record `org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v0 @kind this, `java.util.Map` v1 @kind object, `java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.<init>:(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v0 @kind this, `java.util.Map` v1 @kind object, `java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object, `org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$a` v4 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.<init>:(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.concurrent.BackgroundInitializer` `a`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.a:(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.apache.commons.lang3.concurrent.ConcurrentException` `getException`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.getException:(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.concurrent.BackgroundInitializer` `getInitializer`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.getInitializer:(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getResultObject`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.getResultObject:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `initializerNames`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v1 @kind this) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.initializerNames:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isException`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.isException:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isSuccessful`(`org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults` v1 @kind this) @signature `Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;.isSuccessful:()Z` @AccessFlag PUBLIC {

  # return;
}
