record `org.apache.commons.lang3.reflect.a` @kind class @AccessFlag ABSTRACT {
}
global `java.lang.Class`[] `@@org.apache.commons.lang3.reflect.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/reflect/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`java.lang.Class`[] v0 @kind object, `java.lang.Class`[] v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/a;.a:([Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;)I` @AccessFlag STATIC {

  # return;
}
procedure `float` `b`(`java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/a;.b:(Ljava/lang/Class;Ljava/lang/Class;)F` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `float` `c`(`java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lorg/apache/commons/lang3/reflect/a;.c:(Ljava/lang/Class;Ljava/lang/Class;)F` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `float` `d`(`java.lang.Class`[] v4 @kind object, `java.lang.Class`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/reflect/a;.d:([Ljava/lang/Class;[Ljava/lang/Class;)F` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `e`(`java.lang.reflect.Member` v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/a;.e:(Ljava/lang/reflect/Member;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `f`(`int` v0 ) @signature `Lorg/apache/commons/lang3/reflect/a;.f:(I)Z` @AccessFlag STATIC {

  # return;
}
procedure `void` `g`(`java.lang.reflect.AccessibleObject` v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/a;.g:(Ljava/lang/reflect/AccessibleObject;)V` @AccessFlag STATIC {

  # return;
}
