record `com.squareup.picasso.NetworkPolicy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `com.squareup.picasso.NetworkPolicy.a` @AccessFlag FINAL;
}
global `com.squareup.picasso.NetworkPolicy` `@@com.squareup.picasso.NetworkPolicy.NO_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.squareup.picasso.NetworkPolicy` `@@com.squareup.picasso.NetworkPolicy.NO_STORE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.squareup.picasso.NetworkPolicy` `@@com.squareup.picasso.NetworkPolicy.OFFLINE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.squareup.picasso.NetworkPolicy`[] `@@com.squareup.picasso.NetworkPolicy.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/squareup/picasso/NetworkPolicy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.picasso.NetworkPolicy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/squareup/picasso/NetworkPolicy;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isOfflineOnly`(`int` v1 ) @signature `Lcom/squareup/picasso/NetworkPolicy;.isOfflineOnly:(I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `shouldReadFromDiskCache`(`int` v1 ) @signature `Lcom/squareup/picasso/NetworkPolicy;.shouldReadFromDiskCache:(I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `shouldWriteToDiskCache`(`int` v1 ) @signature `Lcom/squareup/picasso/NetworkPolicy;.shouldWriteToDiskCache:(I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.squareup.picasso.NetworkPolicy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/squareup/picasso/NetworkPolicy;.valueOf:(Ljava/lang/String;)Lcom/squareup/picasso/NetworkPolicy;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.squareup.picasso.NetworkPolicy`[] `values`() @signature `Lcom/squareup/picasso/NetworkPolicy;.values:()[Lcom/squareup/picasso/NetworkPolicy;` @AccessFlag PUBLIC_STATIC {

  # return;
}
