record `com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.Executor` `com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker.a` @AccessFlag PRIVATE_FINAL;
  `com.google.android.gms.tasks.Task` `com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker.b` @AccessFlag PRIVATE;
  `java.lang.Object` `com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.ThreadLocal` `com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.ThreadLocal` `a`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v0 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.a:(Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;)Ljava/lang/ThreadLocal;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `b`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v2 @kind this, `com.google.android.gms.tasks.Task` v3 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.b:(Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `c`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v2 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.c:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Continuation` `d`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.d:(Ljava/util/concurrent/Callable;)Lcom/google/android/gms/tasks/Continuation;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `checkRunningOnThread`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v2 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.checkRunningOnThread:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `e`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.e:(Ljava/lang/Runnable;)Lcom/google/android/gms/tasks/Task;` @AccessFlag  {

  # return;
}
procedure `java.util.concurrent.Executor` `getExecutor`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v1 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.getExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `submit`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v3 @kind this, `java.util.concurrent.Callable` v4 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.submit:(Ljava/util/concurrent/Callable;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `submitTask`(`com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker` v3 @kind this, `java.util.concurrent.Callable` v4 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/CrashlyticsBackgroundWorker;.submitTask:(Ljava/util/concurrent/Callable;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
