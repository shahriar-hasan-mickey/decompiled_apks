record `com.google.firebase.crashlytics.internal.common.d` @kind class @AccessFlag  {
}
global `java.util.concurrent.atomic.AtomicLong` `@@com.google.firebase.crashlytics.internal.common.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.crashlytics.internal.common.d.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/crashlytics/internal/common/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.internal.common.d` v8 @kind this, `com.google.firebase.crashlytics.internal.common.IdManager` v9 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/d;.<init>:(Lcom/google/firebase/crashlytics/internal/common/IdManager;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`long` v1 ) @signature `Lcom/google/firebase/crashlytics/internal/common/d;.a:(J)[B` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `b`(`long` v1 ) @signature `Lcom/google/firebase/crashlytics/internal/common/d;.b:(J)[B` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.crashlytics.internal.common.d` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/d;.c:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`com.google.firebase.crashlytics.internal.common.d` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/d;.d:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`com.google.firebase.crashlytics.internal.common.d` v7 @kind this, `byte`[] v8 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/d;.e:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.crashlytics.internal.common.d` v1 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/common/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
