record `com.google.firebase.installations.remote.TokenResult$ResponseCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.google.firebase.installations.remote.TokenResult$ResponseCode` `@@com.google.firebase.installations.remote.TokenResult$ResponseCode.AUTH_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.firebase.installations.remote.TokenResult$ResponseCode` `@@com.google.firebase.installations.remote.TokenResult$ResponseCode.BAD_CONFIG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.firebase.installations.remote.TokenResult$ResponseCode` `@@com.google.firebase.installations.remote.TokenResult$ResponseCode.OK` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.firebase.installations.remote.TokenResult$ResponseCode`[] `@@com.google.firebase.installations.remote.TokenResult$ResponseCode.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/installations/remote/TokenResult$ResponseCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.installations.remote.TokenResult$ResponseCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/google/firebase/installations/remote/TokenResult$ResponseCode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.installations.remote.TokenResult$ResponseCode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/firebase/installations/remote/TokenResult$ResponseCode;.valueOf:(Ljava/lang/String;)Lcom/google/firebase/installations/remote/TokenResult$ResponseCode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.installations.remote.TokenResult$ResponseCode`[] `values`() @signature `Lcom/google/firebase/installations/remote/TokenResult$ResponseCode;.values:()[Lcom/google/firebase/installations/remote/TokenResult$ResponseCode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
