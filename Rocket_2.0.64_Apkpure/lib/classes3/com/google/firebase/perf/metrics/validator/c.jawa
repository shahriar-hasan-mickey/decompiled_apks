record `com.google.firebase.perf.metrics.validator.c` @kind class @AccessFlag FINAL extends `com.google.firebase.perf.metrics.validator.PerfMetricValidator` @kind class {
  `com.google.firebase.perf.v1.TraceMetric` `com.google.firebase.perf.metrics.validator.c.a` @AccessFlag PRIVATE_FINAL;
}
global `com.google.firebase.perf.logging.AndroidLogger` `@@com.google.firebase.perf.metrics.validator.c.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/perf/metrics/validator/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.perf.metrics.validator.c` v0 @kind this, `com.google.firebase.perf.v1.TraceMetric` v1 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.<init>:(Lcom/google/firebase/perf/v1/TraceMetric;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `b`(`com.google.firebase.perf.metrics.validator.c` v1 @kind this, `com.google.firebase.perf.v1.TraceMetric` v2 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.b:(Lcom/google/firebase/perf/v1/TraceMetric;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `c`(`com.google.firebase.perf.metrics.validator.c` v5 @kind this, `com.google.firebase.perf.v1.TraceMetric` v6 @kind object, `int` v7 ) @signature `Lcom/google/firebase/perf/metrics/validator/c;.c:(Lcom/google/firebase/perf/v1/TraceMetric;I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `d`(`com.google.firebase.perf.metrics.validator.c` v3 @kind this, `com.google.firebase.perf.v1.TraceMetric` v4 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.d:(Lcom/google/firebase/perf/v1/TraceMetric;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `e`(`com.google.firebase.perf.metrics.validator.c` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.e:(Ljava/util/Map;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `f`(`com.google.firebase.perf.metrics.validator.c` v1 @kind this, `com.google.firebase.perf.v1.TraceMetric` v2 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.f:(Lcom/google/firebase/perf/v1/TraceMetric;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `g`(`com.google.firebase.perf.metrics.validator.c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `h`(`com.google.firebase.perf.metrics.validator.c` v0 @kind this, `java.lang.Long` v1 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.h:(Ljava/lang/Long;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `i`(`com.google.firebase.perf.metrics.validator.c` v2 @kind this, `com.google.firebase.perf.v1.TraceMetric` v3 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.i:(Lcom/google/firebase/perf/v1/TraceMetric;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `j`(`com.google.firebase.perf.metrics.validator.c` v5 @kind this, `com.google.firebase.perf.v1.TraceMetric` v6 @kind object, `int` v7 ) @signature `Lcom/google/firebase/perf/metrics/validator/c;.j:(Lcom/google/firebase/perf/v1/TraceMetric;I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `k`(`com.google.firebase.perf.metrics.validator.c` v4 @kind this, `com.google.firebase.perf.v1.TraceMetric` v5 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.k:(Lcom/google/firebase/perf/v1/TraceMetric;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `l`(`com.google.firebase.perf.metrics.validator.c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/firebase/perf/metrics/validator/c;.l:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isValidPerfMetric`(`com.google.firebase.perf.metrics.validator.c` v4 @kind this) @signature `Lcom/google/firebase/perf/metrics/validator/c;.isValidPerfMetric:()Z` @AccessFlag PUBLIC {

  # return;
}
