record `com.google.firebase.database.tubesock.WebSocket` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.database.tubesock.WebSocket$d` `com.google.firebase.database.tubesock.WebSocket.a` @AccessFlag PRIVATE_VOLATILE;
  `java.net.Socket` `com.google.firebase.database.tubesock.WebSocket.b` @AccessFlag PRIVATE_VOLATILE;
  `com.google.firebase.database.tubesock.WebSocketEventHandler` `com.google.firebase.database.tubesock.WebSocket.c` @AccessFlag PRIVATE;
  `java.net.URI` `com.google.firebase.database.tubesock.WebSocket.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.database.tubesock.WebSocket.e` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.tubesock.c` `com.google.firebase.database.tubesock.WebSocket.f` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.tubesock.d` `com.google.firebase.database.tubesock.WebSocket.g` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.tubesock.b` `com.google.firebase.database.tubesock.WebSocket.h` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.logging.LogWrapper` `com.google.firebase.database.tubesock.WebSocket.i` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.firebase.database.tubesock.WebSocket.j` @AccessFlag PRIVATE_FINAL;
  `java.lang.Thread` `com.google.firebase.database.tubesock.WebSocket.k` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.atomic.AtomicInteger` `@@com.google.firebase.database.tubesock.WebSocket.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@com.google.firebase.database.tubesock.WebSocket.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ThreadFactory` `@@com.google.firebase.database.tubesock.WebSocket.n` @AccessFlag PRIVATE_STATIC;
global `com.google.firebase.database.tubesock.ThreadInitializer` `@@com.google.firebase.database.tubesock.WebSocket.o` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/tubesock/WebSocket;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.tubesock.WebSocket` v1 @kind this, `com.google.firebase.database.connection.ConnectionContext` v2 @kind object, `java.net.URI` v3 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.<init>:(Lcom/google/firebase/database/connection/ConnectionContext;Ljava/net/URI;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.tubesock.WebSocket` v1 @kind this, `com.google.firebase.database.connection.ConnectionContext` v2 @kind object, `java.net.URI` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.<init>:(Lcom/google/firebase/database/connection/ConnectionContext;Ljava/net/URI;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.tubesock.WebSocket` v4 @kind this, `com.google.firebase.database.connection.ConnectionContext` v5 @kind object, `java.net.URI` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.Map` v8 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.<init>:(Lcom/google/firebase/database/connection/ConnectionContext;Ljava/net/URI;Ljava/lang/String;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.database.tubesock.WebSocket` v0 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.a:(Lcom/google/firebase/database/tubesock/WebSocket;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.database.tubesock.WebSocket` v4 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.b:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.net.Socket` `c`(`com.google.firebase.database.tubesock.WebSocket` v8 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.c:()Ljava/net/Socket;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.database.tubesock.ThreadInitializer` `f`() @signature `Lcom/google/firebase/database/tubesock/WebSocket;.f:()Lcom/google/firebase/database/tubesock/ThreadInitializer;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.concurrent.ThreadFactory` `g`() @signature `Lcom/google/firebase/database/tubesock/WebSocket;.g:()Ljava/util/concurrent/ThreadFactory;` @AccessFlag STATIC {

  # return;
}
procedure `void` `k`(`com.google.firebase.database.tubesock.WebSocket` v11 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.k:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `l`(`com.google.firebase.database.tubesock.WebSocket` v2 @kind this, `byte` v3 , `byte`[] v4 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.l:(B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `m`(`com.google.firebase.database.tubesock.WebSocket` v4 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.m:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setThreadFactory`(`java.util.concurrent.ThreadFactory` v0 @kind object, `com.google.firebase.database.tubesock.ThreadInitializer` v1 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;Lcom/google/firebase/database/tubesock/ThreadInitializer;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `blockClose`(`com.google.firebase.database.tubesock.WebSocket` v2 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.blockClose:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`com.google.firebase.database.tubesock.WebSocket` v2 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `connect`(`com.google.firebase.database.tubesock.WebSocket` v4 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.connect:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.tubesock.WebSocketEventHandler` `d`(`com.google.firebase.database.tubesock.WebSocket` v1 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.d:()Lcom/google/firebase/database/tubesock/WebSocketEventHandler;` @AccessFlag  {

  # return;
}
procedure `java.lang.Thread` `e`(`com.google.firebase.database.tubesock.WebSocket` v1 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.e:()Ljava/lang/Thread;` @AccessFlag  {

  # return;
}
procedure `void` `h`(`com.google.firebase.database.tubesock.WebSocket` v1 @kind this, `com.google.firebase.database.tubesock.WebSocketException` v2 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.h:(Lcom/google/firebase/database/tubesock/WebSocketException;)V` @AccessFlag  {

  # return;
}
procedure `void` `i`(`com.google.firebase.database.tubesock.WebSocket` v0 @kind this) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.i:()V` @AccessFlag  {

  # return;
}
procedure `void` `j`(`com.google.firebase.database.tubesock.WebSocket` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.j:([B)V` @AccessFlag  {

  # return;
}
procedure `void` `send`(`com.google.firebase.database.tubesock.WebSocket` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.send:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `send`(`com.google.firebase.database.tubesock.WebSocket` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.send:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setEventHandler`(`com.google.firebase.database.tubesock.WebSocket` v0 @kind this, `com.google.firebase.database.tubesock.WebSocketEventHandler` v1 @kind object) @signature `Lcom/google/firebase/database/tubesock/WebSocket;.setEventHandler:(Lcom/google/firebase/database/tubesock/WebSocketEventHandler;)V` @AccessFlag PUBLIC {

  # return;
}
