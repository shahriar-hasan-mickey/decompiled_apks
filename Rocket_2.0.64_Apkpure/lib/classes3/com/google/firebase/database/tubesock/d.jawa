record `com.google.firebase.database.tubesock.d` @kind class @AccessFlag  {
  `java.util.concurrent.BlockingQueue` `com.google.firebase.database.tubesock.d.a` @AccessFlag PRIVATE;
  `java.util.Random` `com.google.firebase.database.tubesock.d.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.firebase.database.tubesock.d.c` @AccessFlag PRIVATE_VOLATILE;
  `boolean` `com.google.firebase.database.tubesock.d.d` @AccessFlag PRIVATE;
  `com.google.firebase.database.tubesock.WebSocket` `com.google.firebase.database.tubesock.d.e` @AccessFlag PRIVATE;
  `java.nio.channels.WritableByteChannel` `com.google.firebase.database.tubesock.d.f` @AccessFlag PRIVATE;
  `java.lang.Thread` `com.google.firebase.database.tubesock.d.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.tubesock.d` v3 @kind this, `com.google.firebase.database.tubesock.WebSocket` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lcom/google/firebase/database/tubesock/d;.<init>:(Lcom/google/firebase/database/tubesock/WebSocket;Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.database.tubesock.d` v0 @kind object) @signature `Lcom/google/firebase/database/tubesock/d;.a:(Lcom/google/firebase/database/tubesock/d;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.nio.ByteBuffer` `b`(`com.google.firebase.database.tubesock.d` v5 @kind this, `byte` v6 , `boolean` v7 , `byte`[] v8 @kind object) @signature `Lcom/google/firebase/database/tubesock/d;.b:(BZ[B)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `c`(`com.google.firebase.database.tubesock.d` v2 @kind this) @signature `Lcom/google/firebase/database/tubesock/d;.c:()[B` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`com.google.firebase.database.tubesock.d` v1 @kind this, `com.google.firebase.database.tubesock.WebSocketException` v2 @kind object) @signature `Lcom/google/firebase/database/tubesock/d;.e:(Lcom/google/firebase/database/tubesock/WebSocketException;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `f`(`com.google.firebase.database.tubesock.d` v3 @kind this) @signature `Lcom/google/firebase/database/tubesock/d;.f:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `j`(`com.google.firebase.database.tubesock.d` v2 @kind this) @signature `Lcom/google/firebase/database/tubesock/d;.j:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Thread` `d`(`com.google.firebase.database.tubesock.d` v1 @kind this) @signature `Lcom/google/firebase/database/tubesock/d;.d:()Ljava/lang/Thread;` @AccessFlag  {

  # return;
}
procedure `void` `g`(`com.google.firebase.database.tubesock.d` v1 @kind this, `byte` v2 , `boolean` v3 , `byte`[] v4 @kind object) @signature `Lcom/google/firebase/database/tubesock/d;.g:(BZ[B)V` @AccessFlag  {

  # return;
}
procedure `void` `h`(`com.google.firebase.database.tubesock.d` v0 @kind this, `java.io.OutputStream` v1 @kind object) @signature `Lcom/google/firebase/database/tubesock/d;.h:(Ljava/io/OutputStream;)V` @AccessFlag  {

  # return;
}
procedure `void` `i`(`com.google.firebase.database.tubesock.d` v1 @kind this) @signature `Lcom/google/firebase/database/tubesock/d;.i:()V` @AccessFlag  {

  # return;
}
