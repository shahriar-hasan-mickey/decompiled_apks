record `com.google.firebase.database.connection.WebsocketConnection$d` @kind class @AccessFlag  extends `com.google.firebase.database.connection.WebsocketConnection$c` @kind interface, `com.google.firebase.database.tubesock.WebSocketEventHandler` @kind interface {
  `com.google.firebase.database.tubesock.WebSocket` `com.google.firebase.database.connection.WebsocketConnection$d.a` @AccessFlag PRIVATE;
  `com.google.firebase.database.connection.WebsocketConnection` `com.google.firebase.database.connection.WebsocketConnection$d.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.database.connection.WebsocketConnection$d` v0 @kind this, `com.google.firebase.database.connection.WebsocketConnection` v1 @kind object, `com.google.firebase.database.tubesock.WebSocket` v2 @kind object) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.<init>:(Lcom/google/firebase/database/connection/WebsocketConnection;Lcom/google/firebase/database/tubesock/WebSocket;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.connection.WebsocketConnection$d` v0 @kind this, `com.google.firebase.database.connection.WebsocketConnection` v1 @kind object, `com.google.firebase.database.tubesock.WebSocket` v2 @kind object, `com.google.firebase.database.connection.WebsocketConnection$a` v3 @kind object) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.<init>:(Lcom/google/firebase/database/connection/WebsocketConnection;Lcom/google/firebase/database/tubesock/WebSocket;Lcom/google/firebase/database/connection/WebsocketConnection$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `b`(`com.google.firebase.database.connection.WebsocketConnection$d` v3 @kind this) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.b:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `a`(`com.google.firebase.database.connection.WebsocketConnection$d` v4 @kind this) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.a:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`com.google.firebase.database.connection.WebsocketConnection$d` v1 @kind this) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onClose`(`com.google.firebase.database.connection.WebsocketConnection$d` v2 @kind this) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.onClose:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onError`(`com.google.firebase.database.connection.WebsocketConnection$d` v2 @kind this, `com.google.firebase.database.tubesock.WebSocketException` v3 @kind object) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.onError:(Lcom/google/firebase/database/tubesock/WebSocketException;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onLogMessage`(`com.google.firebase.database.connection.WebsocketConnection$d` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.onLogMessage:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onMessage`(`com.google.firebase.database.connection.WebsocketConnection$d` v3 @kind this, `com.google.firebase.database.tubesock.WebSocketMessage` v4 @kind object) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.onMessage:(Lcom/google/firebase/database/tubesock/WebSocketMessage;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onOpen`(`com.google.firebase.database.connection.WebsocketConnection$d` v2 @kind this) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.onOpen:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `send`(`com.google.firebase.database.connection.WebsocketConnection$d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/database/connection/WebsocketConnection$d;.send:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
