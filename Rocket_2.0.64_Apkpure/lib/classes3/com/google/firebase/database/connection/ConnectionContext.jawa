record `com.google.firebase.database.connection.ConnectionContext` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.ScheduledExecutorService` `com.google.firebase.database.connection.ConnectionContext.a` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.connection.ConnectionTokenProvider` `com.google.firebase.database.connection.ConnectionContext.b` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.connection.ConnectionTokenProvider` `com.google.firebase.database.connection.ConnectionContext.c` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.logging.Logger` `com.google.firebase.database.connection.ConnectionContext.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.firebase.database.connection.ConnectionContext.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.database.connection.ConnectionContext.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.database.connection.ConnectionContext.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.database.connection.ConnectionContext.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.database.connection.ConnectionContext.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.connection.ConnectionContext` v0 @kind this, `com.google.firebase.database.logging.Logger` v1 @kind object, `com.google.firebase.database.connection.ConnectionTokenProvider` v2 @kind object, `com.google.firebase.database.connection.ConnectionTokenProvider` v3 @kind object, `java.util.concurrent.ScheduledExecutorService` v4 @kind object, `boolean` v5 , `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.<init>:(Lcom/google/firebase/database/logging/Logger;Lcom/google/firebase/database/connection/ConnectionTokenProvider;Lcom/google/firebase/database/connection/ConnectionTokenProvider;Ljava/util/concurrent/ScheduledExecutorService;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.connection.ConnectionTokenProvider` `getAppCheckTokenProvider`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.getAppCheckTokenProvider:()Lcom/google/firebase/database/connection/ConnectionTokenProvider;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getApplicationId`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.getApplicationId:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.connection.ConnectionTokenProvider` `getAuthTokenProvider`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.getAuthTokenProvider:()Lcom/google/firebase/database/connection/ConnectionTokenProvider;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getClientSdkVersion`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.getClientSdkVersion:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.concurrent.ScheduledExecutorService` `getExecutorService`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.logging.Logger` `getLogger`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.getLogger:()Lcom/google/firebase/database/logging/Logger;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getSslCacheDirectory`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.getSslCacheDirectory:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getUserAgent`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.getUserAgent:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isPersistenceEnabled`(`com.google.firebase.database.connection.ConnectionContext` v1 @kind this) @signature `Lcom/google/firebase/database/connection/ConnectionContext;.isPersistenceEnabled:()Z` @AccessFlag PUBLIC {

  # return;
}
