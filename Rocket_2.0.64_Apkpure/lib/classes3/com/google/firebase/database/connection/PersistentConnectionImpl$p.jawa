record `com.google.firebase.database.connection.PersistentConnectionImpl$p` @kind class @AccessFlag  {
  `java.util.List` `com.google.firebase.database.connection.PersistentConnectionImpl$p.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.database.connection.PersistentConnectionImpl$p.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.connection.PersistentConnectionImpl$p` v0 @kind this, `java.util.List` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lcom/google/firebase/database/connection/PersistentConnectionImpl$p;.<init>:(Ljava/util/List;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.List` `a`(`com.google.firebase.database.connection.PersistentConnectionImpl$p` v0 @kind object) @signature `Lcom/google/firebase/database/connection/PersistentConnectionImpl$p;.a:(Lcom/google/firebase/database/connection/PersistentConnectionImpl$p;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `b`(`com.google.firebase.database.connection.PersistentConnectionImpl$p` v0 @kind object) @signature `Lcom/google/firebase/database/connection/PersistentConnectionImpl$p;.b:(Lcom/google/firebase/database/connection/PersistentConnectionImpl$p;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.database.connection.PersistentConnectionImpl$p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/firebase/database/connection/PersistentConnectionImpl$p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.database.connection.PersistentConnectionImpl$p` v2 @kind this) @signature `Lcom/google/firebase/database/connection/PersistentConnectionImpl$p;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.database.connection.PersistentConnectionImpl$p` v2 @kind this) @signature `Lcom/google/firebase/database/connection/PersistentConnectionImpl$p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
