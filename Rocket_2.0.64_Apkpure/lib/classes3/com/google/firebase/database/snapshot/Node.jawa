record `com.google.firebase.database.snapshot.Node` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.lang.Comparable` @kind interface, `java.lang.Iterable` @kind interface {
}
global `com.google.firebase.database.snapshot.ChildrenNode` `@@com.google.firebase.database.snapshot.Node.MAX_NODE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/snapshot/Node;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getChild`(`com.google.firebase.database.core.Path` v0 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.getChild:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getChildCount`() @signature `Lcom/google/firebase/database/snapshot/Node;.getChildCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getHash`() @signature `Lcom/google/firebase/database/snapshot/Node;.getHash:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getHashRepresentation`(`com.google.firebase.database.snapshot.Node$HashVersion` v0 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.getHashRepresentation:(Lcom/google/firebase/database/snapshot/Node$HashVersion;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getImmediateChild`(`com.google.firebase.database.snapshot.ChildKey` v0 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.getImmediateChild:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.snapshot.ChildKey` `getPredecessorChildKey`(`com.google.firebase.database.snapshot.ChildKey` v0 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.getPredecessorChildKey:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/snapshot/ChildKey;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getPriority`() @signature `Lcom/google/firebase/database/snapshot/Node;.getPriority:()Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.snapshot.ChildKey` `getSuccessorChildKey`(`com.google.firebase.database.snapshot.ChildKey` v0 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.getSuccessorChildKey:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/snapshot/ChildKey;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Lcom/google/firebase/database/snapshot/Node;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`(`boolean` v0 ) @signature `Lcom/google/firebase/database/snapshot/Node;.getValue:(Z)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasChild`(`com.google.firebase.database.snapshot.ChildKey` v0 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.hasChild:(Lcom/google/firebase/database/snapshot/ChildKey;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lcom/google/firebase/database/snapshot/Node;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isLeafNode`() @signature `Lcom/google/firebase/database/snapshot/Node;.isLeafNode:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `reverseIterator`() @signature `Lcom/google/firebase/database/snapshot/Node;.reverseIterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `updateChild`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.updateChild:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `updateImmediateChild`(`com.google.firebase.database.snapshot.ChildKey` v0 @kind object, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.updateImmediateChild:(Lcom/google/firebase/database/snapshot/ChildKey;Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `updatePriority`(`com.google.firebase.database.snapshot.Node` v0 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node;.updatePriority:(Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
