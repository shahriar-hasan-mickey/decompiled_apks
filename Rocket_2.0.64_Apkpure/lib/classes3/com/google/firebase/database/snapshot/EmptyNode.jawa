record `com.google.firebase.database.snapshot.EmptyNode` @kind class @AccessFlag PUBLIC extends `com.google.firebase.database.snapshot.ChildrenNode` @kind class {
}
global `com.google.firebase.database.snapshot.EmptyNode` `@@com.google.firebase.database.snapshot.EmptyNode.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.snapshot.EmptyNode` `Empty`() @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.Empty:()Lcom/google/firebase/database/snapshot/EmptyNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.compareTo:(Lcom/google/firebase/database/snapshot/Node;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.database.snapshot.EmptyNode` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getChild`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.core.Path` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getChild:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getChildCount`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getChildCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getHash`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getHash:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getHashRepresentation`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.snapshot.Node$HashVersion` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getHashRepresentation:(Lcom/google/firebase/database/snapshot/Node$HashVersion;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getImmediateChild`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.snapshot.ChildKey` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getImmediateChild:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.ChildKey` `getPredecessorChildKey`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.snapshot.ChildKey` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getPredecessorChildKey:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/snapshot/ChildKey;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getPriority`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getPriority:()Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.ChildKey` `getSuccessorChildKey`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.snapshot.ChildKey` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getSuccessorChildKey:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/snapshot/ChildKey;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.getValue:(Z)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasChild`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.snapshot.ChildKey` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.hasChild:(Lcom/google/firebase/database/snapshot/ChildKey;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isLeafNode`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.isLeafNode:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `reverseIterator`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.reverseIterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `updateChild`(`com.google.firebase.database.snapshot.EmptyNode` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object, `com.google.firebase.database.snapshot.Node` v4 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.updateChild:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `updateImmediateChild`(`com.google.firebase.database.snapshot.EmptyNode` v1 @kind this, `com.google.firebase.database.snapshot.ChildKey` v2 @kind object, `com.google.firebase.database.snapshot.Node` v3 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.updateImmediateChild:(Lcom/google/firebase/database/snapshot/ChildKey;Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.EmptyNode` `updatePriority`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.updatePriority:(Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/EmptyNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `updatePriority`(`com.google.firebase.database.snapshot.EmptyNode` v0 @kind this, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/EmptyNode;.updatePriority:(Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
