record `com.google.firebase.database.snapshot.ChildrenNode$c` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `com.google.firebase.database.snapshot.ChildrenNode$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.snapshot.ChildrenNode$c` v0 @kind this, `java.util.Iterator` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/ChildrenNode$c;.<init>:(Ljava/util/Iterator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.snapshot.NamedNode` `a`(`com.google.firebase.database.snapshot.ChildrenNode$c` v3 @kind this) @signature `Lcom/google/firebase/database/snapshot/ChildrenNode$c;.a:()Lcom/google/firebase/database/snapshot/NamedNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasNext`(`com.google.firebase.database.snapshot.ChildrenNode$c` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/ChildrenNode$c;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.firebase.database.snapshot.ChildrenNode$c` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/ChildrenNode$c;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `remove`(`com.google.firebase.database.snapshot.ChildrenNode$c` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/ChildrenNode$c;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
