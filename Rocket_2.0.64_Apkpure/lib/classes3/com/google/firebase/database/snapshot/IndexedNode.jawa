record `com.google.firebase.database.snapshot.IndexedNode` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface {
  `com.google.firebase.database.snapshot.Node` `com.google.firebase.database.snapshot.IndexedNode.a` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.collection.ImmutableSortedSet` `com.google.firebase.database.snapshot.IndexedNode.b` @AccessFlag PRIVATE;
  `com.google.firebase.database.snapshot.Index` `com.google.firebase.database.snapshot.IndexedNode.c` @AccessFlag PRIVATE_FINAL;
}
global `com.google.firebase.database.collection.ImmutableSortedSet` `@@com.google.firebase.database.snapshot.IndexedNode.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.snapshot.IndexedNode` v0 @kind this, `com.google.firebase.database.snapshot.Node` v1 @kind object, `com.google.firebase.database.snapshot.Index` v2 @kind object) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.<init>:(Lcom/google/firebase/database/snapshot/Node;Lcom/google/firebase/database/snapshot/Index;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.snapshot.IndexedNode` v0 @kind this, `com.google.firebase.database.snapshot.Node` v1 @kind object, `com.google.firebase.database.snapshot.Index` v2 @kind object, `com.google.firebase.database.collection.ImmutableSortedSet` v3 @kind object) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.<init>:(Lcom/google/firebase/database/snapshot/Node;Lcom/google/firebase/database/snapshot/Index;Lcom/google/firebase/database/collection/ImmutableSortedSet;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.database.snapshot.IndexedNode` v7 @kind this) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.a:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.database.snapshot.IndexedNode` `from`(`com.google.firebase.database.snapshot.Node` v2 @kind object) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.from:(Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/IndexedNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.IndexedNode` `from`(`com.google.firebase.database.snapshot.Node` v1 @kind object, `com.google.firebase.database.snapshot.Index` v2 @kind object) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.from:(Lcom/google/firebase/database/snapshot/Node;Lcom/google/firebase/database/snapshot/Index;)Lcom/google/firebase/database/snapshot/IndexedNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.NamedNode` `getFirstChild`(`com.google.firebase.database.snapshot.IndexedNode` v3 @kind this) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.getFirstChild:()Lcom/google/firebase/database/snapshot/NamedNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.NamedNode` `getLastChild`(`com.google.firebase.database.snapshot.IndexedNode` v3 @kind this) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.getLastChild:()Lcom/google/firebase/database/snapshot/NamedNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getNode`(`com.google.firebase.database.snapshot.IndexedNode` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.getNode:()Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.ChildKey` `getPredecessorChildName`(`com.google.firebase.database.snapshot.IndexedNode` v2 @kind this, `com.google.firebase.database.snapshot.ChildKey` v3 @kind object, `com.google.firebase.database.snapshot.Node` v4 @kind object, `com.google.firebase.database.snapshot.Index` v5 @kind object) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.getPredecessorChildName:(Lcom/google/firebase/database/snapshot/ChildKey;Lcom/google/firebase/database/snapshot/Node;Lcom/google/firebase/database/snapshot/Index;)Lcom/google/firebase/database/snapshot/ChildKey;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasIndex`(`com.google.firebase.database.snapshot.IndexedNode` v1 @kind this, `com.google.firebase.database.snapshot.Index` v2 @kind object) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.hasIndex:(Lcom/google/firebase/database/snapshot/Index;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.firebase.database.snapshot.IndexedNode` v2 @kind this) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `reverseIterator`(`com.google.firebase.database.snapshot.IndexedNode` v2 @kind this) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.reverseIterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.IndexedNode` `updateChild`(`com.google.firebase.database.snapshot.IndexedNode` v4 @kind this, `com.google.firebase.database.snapshot.ChildKey` v5 @kind object, `com.google.firebase.database.snapshot.Node` v6 @kind object) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.updateChild:(Lcom/google/firebase/database/snapshot/ChildKey;Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/IndexedNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.IndexedNode` `updatePriority`(`com.google.firebase.database.snapshot.IndexedNode` v3 @kind this, `com.google.firebase.database.snapshot.Node` v4 @kind object) @signature `Lcom/google/firebase/database/snapshot/IndexedNode;.updatePriority:(Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/IndexedNode;` @AccessFlag PUBLIC {

  # return;
}
