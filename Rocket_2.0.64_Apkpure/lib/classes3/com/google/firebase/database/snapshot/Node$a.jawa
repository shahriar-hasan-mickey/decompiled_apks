record `com.google.firebase.database.snapshot.Node$a` @kind class @AccessFlag  extends `com.google.firebase.database.snapshot.ChildrenNode` @kind class {
}
procedure `void` `<init>`(`com.google.firebase.database.snapshot.Node$a` v0 @kind this) @signature `Lcom/google/firebase/database/snapshot/Node$a;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.database.snapshot.Node$a` v0 @kind this, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node$a;.compareTo:(Lcom/google/firebase/database/snapshot/Node;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.database.snapshot.Node$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node$a;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.database.snapshot.Node$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getImmediateChild`(`com.google.firebase.database.snapshot.Node$a` v0 @kind this, `com.google.firebase.database.snapshot.ChildKey` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node$a;.getImmediateChild:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getPriority`(`com.google.firebase.database.snapshot.Node$a` v0 @kind this) @signature `Lcom/google/firebase/database/snapshot/Node$a;.getPriority:()Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasChild`(`com.google.firebase.database.snapshot.Node$a` v0 @kind this, `com.google.firebase.database.snapshot.ChildKey` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/Node$a;.hasChild:(Lcom/google/firebase/database/snapshot/ChildKey;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.firebase.database.snapshot.Node$a` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/Node$a;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.database.snapshot.Node$a` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/Node$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
