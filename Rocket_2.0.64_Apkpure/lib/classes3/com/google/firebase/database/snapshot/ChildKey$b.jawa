record `com.google.firebase.database.snapshot.ChildKey$b` @kind class @AccessFlag  extends `com.google.firebase.database.snapshot.ChildKey` @kind class {
  `int` `com.google.firebase.database.snapshot.ChildKey$b.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.snapshot.ChildKey$b` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/google/firebase/database/snapshot/ChildKey$b;.<init>:(Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.database.snapshot.ChildKey$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/database/snapshot/ChildKey$b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `intValue`(`com.google.firebase.database.snapshot.ChildKey$b` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/ChildKey$b;.intValue:()I` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isInt`(`com.google.firebase.database.snapshot.ChildKey$b` v1 @kind this) @signature `Lcom/google/firebase/database/snapshot/ChildKey$b;.isInt:()Z` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.database.snapshot.ChildKey$b` v2 @kind this) @signature `Lcom/google/firebase/database/snapshot/ChildKey$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
