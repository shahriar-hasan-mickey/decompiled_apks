record `com.google.firebase.database.core.persistence.CachePolicy$a` @kind class @AccessFlag  extends `com.google.firebase.database.core.persistence.CachePolicy` @kind interface {
}
procedure `void` `<init>`(`com.google.firebase.database.core.persistence.CachePolicy$a` v0 @kind this) @signature `Lcom/google/firebase/database/core/persistence/CachePolicy$a;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `long` `getMaxNumberOfQueriesToKeep`(`com.google.firebase.database.core.persistence.CachePolicy$a` v2 @kind this) @signature `Lcom/google/firebase/database/core/persistence/CachePolicy$a;.getMaxNumberOfQueriesToKeep:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getPercentOfQueriesToPruneAtOnce`(`com.google.firebase.database.core.persistence.CachePolicy$a` v1 @kind this) @signature `Lcom/google/firebase/database/core/persistence/CachePolicy$a;.getPercentOfQueriesToPruneAtOnce:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `shouldCheckCacheSize`(`com.google.firebase.database.core.persistence.CachePolicy$a` v0 @kind this, `long` v1 ) @signature `Lcom/google/firebase/database/core/persistence/CachePolicy$a;.shouldCheckCacheSize:(J)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `shouldPrune`(`com.google.firebase.database.core.persistence.CachePolicy$a` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lcom/google/firebase/database/core/persistence/CachePolicy$a;.shouldPrune:(JJ)Z` @AccessFlag PUBLIC {

  # return;
}
