record `com.google.firebase.database.core.persistence.TrackedQuery` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `com.google.firebase.database.core.persistence.TrackedQuery.active` @AccessFlag PUBLIC_FINAL;
  `boolean` `com.google.firebase.database.core.persistence.TrackedQuery.complete` @AccessFlag PUBLIC_FINAL;
  `long` `com.google.firebase.database.core.persistence.TrackedQuery.id` @AccessFlag PUBLIC_FINAL;
  `long` `com.google.firebase.database.core.persistence.TrackedQuery.lastUse` @AccessFlag PUBLIC_FINAL;
  `com.google.firebase.database.core.view.QuerySpec` `com.google.firebase.database.core.persistence.TrackedQuery.querySpec` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.core.persistence.TrackedQuery` v0 @kind this, `long` v1 , `com.google.firebase.database.core.view.QuerySpec` v3 @kind object, `long` v4 , `boolean` v6 , `boolean` v7 ) @signature `Lcom/google/firebase/database/core/persistence/TrackedQuery;.<init>:(JLcom/google/firebase/database/core/view/QuerySpec;JZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.database.core.persistence.TrackedQuery` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQuery;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.database.core.persistence.TrackedQuery` v3 @kind this) @signature `Lcom/google/firebase/database/core/persistence/TrackedQuery;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.TrackedQuery` `setActiveState`(`com.google.firebase.database.core.persistence.TrackedQuery` v9 @kind this, `boolean` v10 ) @signature `Lcom/google/firebase/database/core/persistence/TrackedQuery;.setActiveState:(Z)Lcom/google/firebase/database/core/persistence/TrackedQuery;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.TrackedQuery` `setComplete`(`com.google.firebase.database.core.persistence.TrackedQuery` v9 @kind this) @signature `Lcom/google/firebase/database/core/persistence/TrackedQuery;.setComplete:()Lcom/google/firebase/database/core/persistence/TrackedQuery;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.database.core.persistence.TrackedQuery` v3 @kind this) @signature `Lcom/google/firebase/database/core/persistence/TrackedQuery;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.TrackedQuery` `updateLastUse`(`com.google.firebase.database.core.persistence.TrackedQuery` v9 @kind this, `long` v10 ) @signature `Lcom/google/firebase/database/core/persistence/TrackedQuery;.updateLastUse:(J)Lcom/google/firebase/database/core/persistence/TrackedQuery;` @AccessFlag PUBLIC {

  # return;
}
