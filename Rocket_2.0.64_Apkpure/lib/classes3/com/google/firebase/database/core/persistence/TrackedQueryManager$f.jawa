record `com.google.firebase.database.core.persistence.TrackedQueryManager$f` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
  `com.google.firebase.database.core.persistence.TrackedQueryManager` `com.google.firebase.database.core.persistence.TrackedQueryManager$f.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.database.core.persistence.TrackedQueryManager$f` v0 @kind this, `com.google.firebase.database.core.persistence.TrackedQueryManager` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager$f;.<init>:(Lcom/google/firebase/database/core/persistence/TrackedQueryManager;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`com.google.firebase.database.core.persistence.TrackedQueryManager$f` v2 @kind this, `com.google.firebase.database.core.persistence.TrackedQuery` v3 @kind object, `com.google.firebase.database.core.persistence.TrackedQuery` v4 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager$f;.a:(Lcom/google/firebase/database/core/persistence/TrackedQuery;Lcom/google/firebase/database/core/persistence/TrackedQuery;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compare`(`com.google.firebase.database.core.persistence.TrackedQueryManager$f` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager$f;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
