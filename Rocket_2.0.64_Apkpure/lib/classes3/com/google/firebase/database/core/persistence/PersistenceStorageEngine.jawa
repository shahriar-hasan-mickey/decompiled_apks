record `com.google.firebase.database.core.persistence.PersistenceStorageEngine` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `beginTransaction`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.beginTransaction:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `close`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.close:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `deleteTrackedQuery`(`long` v0 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.deleteTrackedQuery:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `endTransaction`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.endTransaction:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `loadTrackedQueries`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.loadTrackedQueries:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `loadTrackedQueryKeys`(`long` v0 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.loadTrackedQueryKeys:(J)Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `loadTrackedQueryKeys`(`java.util.Set` v0 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.loadTrackedQueryKeys:(Ljava/util/Set;)Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `loadUserWrites`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.loadUserWrites:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `mergeIntoServerCache`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.core.CompoundWrite` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.mergeIntoServerCache:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/CompoundWrite;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `mergeIntoServerCache`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.mergeIntoServerCache:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `overwriteServerCache`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.overwriteServerCache:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `pruneCache`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.core.persistence.PruneForest` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.pruneCache:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/persistence/PruneForest;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `removeAllUserWrites`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.removeAllUserWrites:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `removeUserWrite`(`long` v0 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.removeUserWrite:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resetPreviouslyActiveTrackedQueries`(`long` v0 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.resetPreviouslyActiveTrackedQueries:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `saveTrackedQuery`(`com.google.firebase.database.core.persistence.TrackedQuery` v0 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.saveTrackedQuery:(Lcom/google/firebase/database/core/persistence/TrackedQuery;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `saveTrackedQueryKeys`(`long` v0 , `java.util.Set` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.saveTrackedQueryKeys:(JLjava/util/Set;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `saveUserMerge`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.core.CompoundWrite` v1 @kind object, `long` v2 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.saveUserMerge:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/CompoundWrite;J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `saveUserOverwrite`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.snapshot.Node` v1 @kind object, `long` v2 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.saveUserOverwrite:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `serverCache`(`com.google.firebase.database.core.Path` v0 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.serverCache:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `serverCacheEstimatedSizeInBytes`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.serverCacheEstimatedSizeInBytes:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setTransactionSuccessful`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.setTransactionSuccessful:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `updateTrackedQueryKeys`(`long` v0 , `java.util.Set` v2 @kind object, `java.util.Set` v3 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;.updateTrackedQueryKeys:(JLjava/util/Set;Ljava/util/Set;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
