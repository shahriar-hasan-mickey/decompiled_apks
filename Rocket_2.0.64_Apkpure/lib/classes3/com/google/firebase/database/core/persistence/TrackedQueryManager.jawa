record `com.google.firebase.database.core.persistence.TrackedQueryManager` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.database.core.utilities.ImmutableTree` `com.google.firebase.database.core.persistence.TrackedQueryManager.a` @AccessFlag PRIVATE;
  `com.google.firebase.database.core.persistence.PersistenceStorageEngine` `com.google.firebase.database.core.persistence.TrackedQueryManager.b` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.logging.LogWrapper` `com.google.firebase.database.core.persistence.TrackedQueryManager.c` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.core.utilities.Clock` `com.google.firebase.database.core.persistence.TrackedQueryManager.d` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.database.core.persistence.TrackedQueryManager.e` @AccessFlag PRIVATE;
}
global `com.google.firebase.database.core.utilities.Predicate` `@@com.google.firebase.database.core.persistence.TrackedQueryManager.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.database.core.utilities.Predicate` `@@com.google.firebase.database.core.persistence.TrackedQueryManager.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.database.core.utilities.Predicate` `@@com.google.firebase.database.core.persistence.TrackedQueryManager.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.database.core.utilities.Predicate` `@@com.google.firebase.database.core.persistence.TrackedQueryManager.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v4 @kind this, `com.google.firebase.database.core.persistence.PersistenceStorageEngine` v5 @kind object, `com.google.firebase.database.logging.LogWrapper` v6 @kind object, `com.google.firebase.database.core.utilities.Clock` v7 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.<init>:(Lcom/google/firebase/database/core/persistence/PersistenceStorageEngine;Lcom/google/firebase/database/logging/LogWrapper;Lcom/google/firebase/database/core/utilities/Clock;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.core.utilities.Predicate` `a`() @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.a:()Lcom/google/firebase/database/core/utilities/Predicate;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v0 @kind object, `com.google.firebase.database.core.persistence.TrackedQuery` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.b:(Lcom/google/firebase/database/core/persistence/TrackedQueryManager;Lcom/google/firebase/database/core/persistence/TrackedQuery;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.database.core.view.QuerySpec` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.c:(Lcom/google/firebase/database/core/view/QuerySpec;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `d`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v6 @kind this, `com.google.firebase.database.core.persistence.TrackedQuery` v7 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.d:(Lcom/google/firebase/database/core/persistence/TrackedQuery;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `e`(`com.google.firebase.database.core.persistence.CachePolicy` v4 @kind object, `long` v5 ) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.e:(Lcom/google/firebase/database/core/persistence/CachePolicy;J)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Set` `f`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v3 @kind this, `com.google.firebase.database.core.Path` v4 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.f:(Lcom/google/firebase/database/core/Path;)Ljava/util/Set;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.List` `g`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v5 @kind this, `com.google.firebase.database.core.utilities.Predicate` v6 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.g:(Lcom/google/firebase/database/core/utilities/Predicate;)Ljava/util/List;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `h`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.h:(Lcom/google/firebase/database/core/Path;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.database.core.view.QuerySpec` `i`(`com.google.firebase.database.core.view.QuerySpec` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.i:(Lcom/google/firebase/database/core/view/QuerySpec;)Lcom/google/firebase/database/core/view/QuerySpec;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `j`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v3 @kind this) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.j:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `k`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v1 @kind this, `com.google.firebase.database.core.persistence.TrackedQuery` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.k:(Lcom/google/firebase/database/core/persistence/TrackedQuery;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `l`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v8 @kind this, `com.google.firebase.database.core.view.QuerySpec` v9 @kind object, `boolean` v10 ) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.l:(Lcom/google/firebase/database/core/view/QuerySpec;Z)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `countOfPrunableQueries`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v2 @kind this) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.countOfPrunableQueries:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `ensureCompleteTrackedQuery`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v9 @kind this, `com.google.firebase.database.core.Path` v10 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.ensureCompleteTrackedQuery:(Lcom/google/firebase/database/core/Path;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.TrackedQuery` `findTrackedQuery`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v2 @kind this, `com.google.firebase.database.core.view.QuerySpec` v3 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.findTrackedQuery:(Lcom/google/firebase/database/core/view/QuerySpec;)Lcom/google/firebase/database/core/persistence/TrackedQuery;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `getKnownCompleteChildren`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v4 @kind this, `com.google.firebase.database.core.Path` v5 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.getKnownCompleteChildren:(Lcom/google/firebase/database/core/Path;)Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasActiveDefaultQuery`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.hasActiveDefaultQuery:(Lcom/google/firebase/database/core/Path;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isQueryComplete`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v4 @kind this, `com.google.firebase.database.core.view.QuerySpec` v5 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.isQueryComplete:(Lcom/google/firebase/database/core/view/QuerySpec;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PruneForest` `pruneOldQueries`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v8 @kind this, `com.google.firebase.database.core.persistence.CachePolicy` v9 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.pruneOldQueries:(Lcom/google/firebase/database/core/persistence/CachePolicy;)Lcom/google/firebase/database/core/persistence/PruneForest;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeTrackedQuery`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v4 @kind this, `com.google.firebase.database.core.view.QuerySpec` v5 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.removeTrackedQuery:(Lcom/google/firebase/database/core/view/QuerySpec;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setQueriesComplete`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.setQueriesComplete:(Lcom/google/firebase/database/core/Path;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setQueryActive`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v1 @kind this, `com.google.firebase.database.core.view.QuerySpec` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.setQueryActive:(Lcom/google/firebase/database/core/view/QuerySpec;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setQueryCompleteIfExists`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v1 @kind this, `com.google.firebase.database.core.view.QuerySpec` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.setQueryCompleteIfExists:(Lcom/google/firebase/database/core/view/QuerySpec;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setQueryInactive`(`com.google.firebase.database.core.persistence.TrackedQueryManager` v1 @kind this, `com.google.firebase.database.core.view.QuerySpec` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/TrackedQueryManager;.setQueryInactive:(Lcom/google/firebase/database/core/view/QuerySpec;)V` @AccessFlag PUBLIC {

  # return;
}
