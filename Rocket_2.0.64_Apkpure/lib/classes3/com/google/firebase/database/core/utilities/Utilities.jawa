record `com.google.firebase.database.core.utilities.Utilities` @kind class @AccessFlag PUBLIC {
}
global `char`[] `@@com.google.firebase.database.core.utilities.Utilities.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/core/utilities/Utilities;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.core.utilities.Utilities` v0 @kind this) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `castOrNull`(`java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.castOrNull:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compareInts`(`int` v0 , `int` v1 ) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.compareInts:(II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compareLongs`(`long` v1 , `long` v3 ) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.compareLongs:(JJ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `doubleToHashString`(`double` v6 ) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.doubleToHashString:(D)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getOrNull`(`java.lang.Object` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.getOrNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `hardAssert`(`boolean` v1 ) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.hardAssert:(Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `hardAssert`(`boolean` v1 , `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.hardAssert:(ZLjava/lang/String;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.database.core.utilities.ParsedUrl` `parseUrl`(`java.lang.String` v8 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.parseUrl:(Ljava/lang/String;)Lcom/google/firebase/database/core/utilities/ParsedUrl;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `sha1HexDigest`(`java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.sha1HexDigest:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `stringHashV2Representation`(`java.lang.String` v3 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.stringHashV2Representation:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Integer` `tryParseInt`(`java.lang.String` v8 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.tryParseInt:(Ljava/lang/String;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.database.core.utilities.Pair` `wrapOnComplete`(`com.google.firebase.database.DatabaseReference$CompletionListener` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Utilities;.wrapOnComplete:(Lcom/google/firebase/database/DatabaseReference$CompletionListener;)Lcom/google/firebase/database/core/utilities/Pair;` @AccessFlag PUBLIC_STATIC {

  # return;
}
