record `com.google.firebase.database.core.CompoundWrite$b` @kind class @AccessFlag  extends `com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor` @kind interface {
  `java.util.Map` `com.google.firebase.database.core.CompoundWrite$b.a` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `com.google.firebase.database.core.CompoundWrite$b.b` @AccessFlag FINAL_SYNTHETIC;
  `com.google.firebase.database.core.CompoundWrite` `com.google.firebase.database.core.CompoundWrite$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.database.core.CompoundWrite$b` v0 @kind this, `com.google.firebase.database.core.CompoundWrite` v1 @kind object, `java.util.Map` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/firebase/database/core/CompoundWrite$b;.<init>:(Lcom/google/firebase/database/core/CompoundWrite;Ljava/util/Map;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Void` `a`(`com.google.firebase.database.core.CompoundWrite$b` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object, `com.google.firebase.database.snapshot.Node` v3 @kind object, `java.lang.Void` v4 @kind object) @signature `Lcom/google/firebase/database/core/CompoundWrite$b;.a:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;Ljava/lang/Void;)Ljava/lang/Void;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `onNodeValue`(`com.google.firebase.database.core.CompoundWrite$b` v0 @kind this, `com.google.firebase.database.core.Path` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/firebase/database/core/CompoundWrite$b;.onNodeValue:(Lcom/google/firebase/database/core/Path;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
