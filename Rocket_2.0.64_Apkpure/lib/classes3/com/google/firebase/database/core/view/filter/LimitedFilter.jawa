record `com.google.firebase.database.core.view.filter.LimitedFilter` @kind class @AccessFlag PUBLIC extends `com.google.firebase.database.core.view.filter.NodeFilter` @kind interface {
  `com.google.firebase.database.core.view.filter.RangedFilter` `com.google.firebase.database.core.view.filter.LimitedFilter.a` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.snapshot.Index` `com.google.firebase.database.core.view.filter.LimitedFilter.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.firebase.database.core.view.filter.LimitedFilter.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.firebase.database.core.view.filter.LimitedFilter.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.core.view.filter.LimitedFilter` v1 @kind this, `com.google.firebase.database.core.view.QueryParams` v2 @kind object) @signature `Lcom/google/firebase/database/core/view/filter/LimitedFilter;.<init>:(Lcom/google/firebase/database/core/view/QueryParams;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.snapshot.IndexedNode` `a`(`com.google.firebase.database.core.view.filter.LimitedFilter` v8 @kind this, `com.google.firebase.database.snapshot.IndexedNode` v9 @kind object, `com.google.firebase.database.snapshot.ChildKey` v10 @kind object, `com.google.firebase.database.snapshot.Node` v11 @kind object, `com.google.firebase.database.core.view.filter.NodeFilter$CompleteChildSource` v12 @kind object, `com.google.firebase.database.core.view.filter.ChildChangeAccumulator` v13 @kind object) @signature `Lcom/google/firebase/database/core/view/filter/LimitedFilter;.a:(Lcom/google/firebase/database/snapshot/IndexedNode;Lcom/google/firebase/database/snapshot/ChildKey;Lcom/google/firebase/database/snapshot/Node;Lcom/google/firebase/database/core/view/filter/NodeFilter$CompleteChildSource;Lcom/google/firebase/database/core/view/filter/ChildChangeAccumulator;)Lcom/google/firebase/database/snapshot/IndexedNode;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `filtersNodes`(`com.google.firebase.database.core.view.filter.LimitedFilter` v1 @kind this) @signature `Lcom/google/firebase/database/core/view/filter/LimitedFilter;.filtersNodes:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Index` `getIndex`(`com.google.firebase.database.core.view.filter.LimitedFilter` v1 @kind this) @signature `Lcom/google/firebase/database/core/view/filter/LimitedFilter;.getIndex:()Lcom/google/firebase/database/snapshot/Index;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.view.filter.NodeFilter` `getIndexedFilter`(`com.google.firebase.database.core.view.filter.LimitedFilter` v1 @kind this) @signature `Lcom/google/firebase/database/core/view/filter/LimitedFilter;.getIndexedFilter:()Lcom/google/firebase/database/core/view/filter/NodeFilter;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.IndexedNode` `updateChild`(`com.google.firebase.database.core.view.filter.LimitedFilter` v7 @kind this, `com.google.firebase.database.snapshot.IndexedNode` v8 @kind object, `com.google.firebase.database.snapshot.ChildKey` v9 @kind object, `com.google.firebase.database.snapshot.Node` v10 @kind object, `com.google.firebase.database.core.Path` v11 @kind object, `com.google.firebase.database.core.view.filter.NodeFilter$CompleteChildSource` v12 @kind object, `com.google.firebase.database.core.view.filter.ChildChangeAccumulator` v13 @kind object) @signature `Lcom/google/firebase/database/core/view/filter/LimitedFilter;.updateChild:(Lcom/google/firebase/database/snapshot/IndexedNode;Lcom/google/firebase/database/snapshot/ChildKey;Lcom/google/firebase/database/snapshot/Node;Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/view/filter/NodeFilter$CompleteChildSource;Lcom/google/firebase/database/core/view/filter/ChildChangeAccumulator;)Lcom/google/firebase/database/snapshot/IndexedNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.IndexedNode` `updateFullNode`(`com.google.firebase.database.core.view.filter.LimitedFilter` v10 @kind this, `com.google.firebase.database.snapshot.IndexedNode` v11 @kind object, `com.google.firebase.database.snapshot.IndexedNode` v12 @kind object, `com.google.firebase.database.core.view.filter.ChildChangeAccumulator` v13 @kind object) @signature `Lcom/google/firebase/database/core/view/filter/LimitedFilter;.updateFullNode:(Lcom/google/firebase/database/snapshot/IndexedNode;Lcom/google/firebase/database/snapshot/IndexedNode;Lcom/google/firebase/database/core/view/filter/ChildChangeAccumulator;)Lcom/google/firebase/database/snapshot/IndexedNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.IndexedNode` `updatePriority`(`com.google.firebase.database.core.view.filter.LimitedFilter` v0 @kind this, `com.google.firebase.database.snapshot.IndexedNode` v1 @kind object, `com.google.firebase.database.snapshot.Node` v2 @kind object) @signature `Lcom/google/firebase/database/core/view/filter/LimitedFilter;.updatePriority:(Lcom/google/firebase/database/snapshot/IndexedNode;Lcom/google/firebase/database/snapshot/Node;)Lcom/google/firebase/database/snapshot/IndexedNode;` @AccessFlag PUBLIC {

  # return;
}
