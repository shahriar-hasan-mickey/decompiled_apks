record `com.google.firebase.database.core.utilities.DefaultRunLoop$b` @kind class @AccessFlag  extends `java.util.concurrent.ThreadFactory` @kind interface {
  `com.google.firebase.database.core.utilities.DefaultRunLoop` `com.google.firebase.database.core.utilities.DefaultRunLoop$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.database.core.utilities.DefaultRunLoop$b` v0 @kind this, `com.google.firebase.database.core.utilities.DefaultRunLoop` v1 @kind object) @signature `Lcom/google/firebase/database/core/utilities/DefaultRunLoop$b;.<init>:(Lcom/google/firebase/database/core/utilities/DefaultRunLoop;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.core.utilities.DefaultRunLoop$b` v0 @kind this, `com.google.firebase.database.core.utilities.DefaultRunLoop` v1 @kind object, `com.google.firebase.database.core.utilities.DefaultRunLoop$a` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/DefaultRunLoop$b;.<init>:(Lcom/google/firebase/database/core/utilities/DefaultRunLoop;Lcom/google/firebase/database/core/utilities/DefaultRunLoop$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Thread` `newThread`(`com.google.firebase.database.core.utilities.DefaultRunLoop$b` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/google/firebase/database/core/utilities/DefaultRunLoop$b;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {

  # return;
}
