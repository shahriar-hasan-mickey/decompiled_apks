record `com.google.firebase.database.core.ValueProvider$ExistingValueProvider` @kind class @AccessFlag PUBLIC extends `com.google.firebase.database.core.ValueProvider` @kind class {
  `com.google.firebase.database.snapshot.Node` `com.google.firebase.database.core.ValueProvider$ExistingValueProvider.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.core.ValueProvider$ExistingValueProvider` v0 @kind this, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/core/ValueProvider$ExistingValueProvider;.<init>:(Lcom/google/firebase/database/snapshot/Node;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.core.ValueProvider` `getImmediateChild`(`com.google.firebase.database.core.ValueProvider$ExistingValueProvider` v1 @kind this, `com.google.firebase.database.snapshot.ChildKey` v2 @kind object) @signature `Lcom/google/firebase/database/core/ValueProvider$ExistingValueProvider;.getImmediateChild:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/core/ValueProvider;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `node`(`com.google.firebase.database.core.ValueProvider$ExistingValueProvider` v1 @kind this) @signature `Lcom/google/firebase/database/core/ValueProvider$ExistingValueProvider;.node:()Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
