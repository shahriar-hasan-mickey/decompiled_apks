record `com.google.firebase.database.core.persistence.PersistenceManager` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `applyUserWriteToServerCache`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.core.CompoundWrite` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.applyUserWriteToServerCache:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/CompoundWrite;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `applyUserWriteToServerCache`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.applyUserWriteToServerCache:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `loadUserWrites`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.loadUserWrites:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `removeAllUserWrites`() @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.removeAllUserWrites:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `removeUserWrite`(`long` v0 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.removeUserWrite:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `runInTransaction`(`java.util.concurrent.Callable` v0 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.runInTransaction:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `saveUserMerge`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.core.CompoundWrite` v1 @kind object, `long` v2 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.saveUserMerge:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/CompoundWrite;J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `saveUserOverwrite`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.snapshot.Node` v1 @kind object, `long` v2 ) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.saveUserOverwrite:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.core.view.CacheNode` `serverCache`(`com.google.firebase.database.core.view.QuerySpec` v0 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.serverCache:(Lcom/google/firebase/database/core/view/QuerySpec;)Lcom/google/firebase/database/core/view/CacheNode;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setQueryActive`(`com.google.firebase.database.core.view.QuerySpec` v0 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.setQueryActive:(Lcom/google/firebase/database/core/view/QuerySpec;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setQueryComplete`(`com.google.firebase.database.core.view.QuerySpec` v0 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.setQueryComplete:(Lcom/google/firebase/database/core/view/QuerySpec;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setQueryInactive`(`com.google.firebase.database.core.view.QuerySpec` v0 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.setQueryInactive:(Lcom/google/firebase/database/core/view/QuerySpec;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setTrackedQueryKeys`(`com.google.firebase.database.core.view.QuerySpec` v0 @kind object, `java.util.Set` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.setTrackedQueryKeys:(Lcom/google/firebase/database/core/view/QuerySpec;Ljava/util/Set;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `updateServerCache`(`com.google.firebase.database.core.Path` v0 @kind object, `com.google.firebase.database.core.CompoundWrite` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.updateServerCache:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/CompoundWrite;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `updateServerCache`(`com.google.firebase.database.core.view.QuerySpec` v0 @kind object, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.updateServerCache:(Lcom/google/firebase/database/core/view/QuerySpec;Lcom/google/firebase/database/snapshot/Node;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `updateTrackedQueryKeys`(`com.google.firebase.database.core.view.QuerySpec` v0 @kind object, `java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PersistenceManager;.updateTrackedQueryKeys:(Lcom/google/firebase/database/core/view/QuerySpec;Ljava/util/Set;Ljava/util/Set;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
