record `com.google.firebase.database.core.ThreadInitializer$a` @kind class @AccessFlag  extends `com.google.firebase.database.core.ThreadInitializer` @kind interface {
}
procedure `void` `<init>`(`com.google.firebase.database.core.ThreadInitializer$a` v0 @kind this) @signature `Lcom/google/firebase/database/core/ThreadInitializer$a;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `setDaemon`(`com.google.firebase.database.core.ThreadInitializer$a` v0 @kind this, `java.lang.Thread` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/firebase/database/core/ThreadInitializer$a;.setDaemon:(Ljava/lang/Thread;Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setName`(`com.google.firebase.database.core.ThreadInitializer$a` v0 @kind this, `java.lang.Thread` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/database/core/ThreadInitializer$a;.setName:(Ljava/lang/Thread;Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setUncaughtExceptionHandler`(`com.google.firebase.database.core.ThreadInitializer$a` v0 @kind this, `java.lang.Thread` v1 @kind object, `java.lang.Thread$UncaughtExceptionHandler` v2 @kind object) @signature `Lcom/google/firebase/database/core/ThreadInitializer$a;.setUncaughtExceptionHandler:(Ljava/lang/Thread;Ljava/lang/Thread$UncaughtExceptionHandler;)V` @AccessFlag PUBLIC {

  # return;
}
