record `com.google.firebase.database.core.SnapshotHolder` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.database.snapshot.Node` `com.google.firebase.database.core.SnapshotHolder.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.database.core.SnapshotHolder` v1 @kind this) @signature `Lcom/google/firebase/database/core/SnapshotHolder;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.core.SnapshotHolder` v0 @kind this, `com.google.firebase.database.snapshot.Node` v1 @kind object) @signature `Lcom/google/firebase/database/core/SnapshotHolder;.<init>:(Lcom/google/firebase/database/snapshot/Node;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getNode`(`com.google.firebase.database.core.SnapshotHolder` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/SnapshotHolder;.getNode:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getRootNode`(`com.google.firebase.database.core.SnapshotHolder` v1 @kind this) @signature `Lcom/google/firebase/database/core/SnapshotHolder;.getRootNode:()Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`com.google.firebase.database.core.SnapshotHolder` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object, `com.google.firebase.database.snapshot.Node` v3 @kind object) @signature `Lcom/google/firebase/database/core/SnapshotHolder;.update:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;)V` @AccessFlag PUBLIC {

  # return;
}
