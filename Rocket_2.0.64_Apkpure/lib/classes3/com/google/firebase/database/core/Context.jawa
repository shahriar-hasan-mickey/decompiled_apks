record `com.google.firebase.database.core.Context` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.database.core.persistence.PersistenceManager` `com.google.firebase.database.core.Context.a` @AccessFlag PRIVATE;
  `com.google.firebase.database.core.TokenProvider` `com.google.firebase.database.core.Context.appCheckTokenProvider` @AccessFlag PROTECTED;
  `com.google.firebase.database.core.TokenProvider` `com.google.firebase.database.core.Context.authTokenProvider` @AccessFlag PROTECTED;
  `boolean` `com.google.firebase.database.core.Context.b` @AccessFlag PRIVATE;
  `boolean` `com.google.firebase.database.core.Context.c` @AccessFlag PRIVATE;
  `long` `com.google.firebase.database.core.Context.cacheSize` @AccessFlag PROTECTED;
  `com.google.firebase.database.core.Platform` `com.google.firebase.database.core.Context.d` @AccessFlag PRIVATE;
  `com.google.firebase.database.core.EventTarget` `com.google.firebase.database.core.Context.eventTarget` @AccessFlag PROTECTED;
  `com.google.firebase.FirebaseApp` `com.google.firebase.database.core.Context.firebaseApp` @AccessFlag PROTECTED;
  `com.google.firebase.database.logging.Logger$Level` `com.google.firebase.database.core.Context.logLevel` @AccessFlag PROTECTED;
  `java.util.List` `com.google.firebase.database.core.Context.loggedComponents` @AccessFlag PROTECTED;
  `com.google.firebase.database.logging.Logger` `com.google.firebase.database.core.Context.logger` @AccessFlag PROTECTED;
  `boolean` `com.google.firebase.database.core.Context.persistenceEnabled` @AccessFlag PROTECTED;
  `java.lang.String` `com.google.firebase.database.core.Context.persistenceKey` @AccessFlag PROTECTED;
  `com.google.firebase.database.core.RunLoop` `com.google.firebase.database.core.Context.runLoop` @AccessFlag PROTECTED;
  `java.lang.String` `com.google.firebase.database.core.Context.userAgent` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.google.firebase.database.core.Context` v2 @kind this) @signature `Lcom/google/firebase/database/core/Context;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.database.core.TokenProvider` v0 @kind object, `java.util.concurrent.ScheduledExecutorService` v1 @kind object, `boolean` v2 , `com.google.firebase.database.connection.ConnectionTokenProvider$GetTokenCallback` v3 @kind object) @signature `Lcom/google/firebase/database/core/Context;.a:(Lcom/google/firebase/database/core/TokenProvider;Ljava/util/concurrent/ScheduledExecutorService;ZLcom/google/firebase/database/connection/ConnectionTokenProvider$GetTokenCallback;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `b`(`com.google.firebase.database.core.Context` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/database/core/Context;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `c`(`com.google.firebase.database.core.Context` v2 @kind this) @signature `Lcom/google/firebase/database/core/Context;.c:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`com.google.firebase.database.core.Context` v2 @kind this) @signature `Lcom/google/firebase/database/core/Context;.d:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.e:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `f`(`com.google.firebase.database.core.Context` v3 @kind this) @signature `Lcom/google/firebase/database/core/Context;.f:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.g:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `h`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.h:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `i`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.i:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.concurrent.ScheduledExecutorService` `k`(`com.google.firebase.database.core.Context` v2 @kind this) @signature `Lcom/google/firebase/database/core/Context;.k:()Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.database.core.Platform` `m`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.m:()Lcom/google/firebase/database/core/Platform;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `n`(`com.google.firebase.database.core.Context` v0 @kind this) @signature `Lcom/google/firebase/database/core/Context;.n:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `o`(`com.google.firebase.database.core.Context` v2 @kind this) @signature `Lcom/google/firebase/database/core/Context;.o:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `p`(`com.google.firebase.database.core.TokenProvider` v1 @kind object, `java.util.concurrent.ScheduledExecutorService` v2 @kind object, `boolean` v3 , `com.google.firebase.database.connection.ConnectionTokenProvider$GetTokenCallback` v4 @kind object) @signature `Lcom/google/firebase/database/core/Context;.p:(Lcom/google/firebase/database/core/TokenProvider;Ljava/util/concurrent/ScheduledExecutorService;ZLcom/google/firebase/database/connection/ConnectionTokenProvider$GetTokenCallback;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `q`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.q:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.database.connection.ConnectionTokenProvider` `s`(`com.google.firebase.database.core.TokenProvider` v1 @kind object, `java.util.concurrent.ScheduledExecutorService` v2 @kind object) @signature `Lcom/google/firebase/database/core/Context;.s:(Lcom/google/firebase/database/core/TokenProvider;Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/firebase/database/connection/ConnectionTokenProvider;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `assertUnfrozen`(`com.google.firebase.database.core.Context` v2 @kind this) @signature `Lcom/google/firebase/database/core/Context;.assertUnfrozen:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `com.google.firebase.database.core.TokenProvider` `getAppCheckTokenProvider`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getAppCheckTokenProvider:()Lcom/google/firebase/database/core/TokenProvider;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.TokenProvider` `getAuthTokenProvider`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getAuthTokenProvider:()Lcom/google/firebase/database/core/TokenProvider;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.connection.ConnectionContext` `getConnectionContext`(`com.google.firebase.database.core.Context` v11 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getConnectionContext:()Lcom/google/firebase/database/connection/ConnectionContext;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.EventTarget` `getEventTarget`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getEventTarget:()Lcom/google/firebase/database/core/EventTarget;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.logging.Logger$Level` `getLogLevel`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getLogLevel:()Lcom/google/firebase/database/logging/Logger$Level;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.logging.LogWrapper` `getLogger`(`com.google.firebase.database.core.Context` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/firebase/database/core/Context;.getLogger:(Ljava/lang/String;)Lcom/google/firebase/database/logging/LogWrapper;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.logging.LogWrapper` `getLogger`(`com.google.firebase.database.core.Context` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/database/core/Context;.getLogger:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/firebase/database/logging/LogWrapper;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.logging.Logger` `getLogger`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getLogger:()Lcom/google/firebase/database/logging/Logger;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getOptDebugLogComponents`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getOptDebugLogComponents:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getPersistenceCacheSizeBytes`(`com.google.firebase.database.core.Context` v2 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getPersistenceCacheSizeBytes:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getPlatformVersion`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getPlatformVersion:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.RunLoop` `getRunLoop`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getRunLoop:()Lcom/google/firebase/database/core/RunLoop;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.io.File` `getSSLCacheDirectory`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getSSLCacheDirectory:()Ljava/io/File;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getSessionPersistenceKey`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getSessionPersistenceKey:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getUserAgent`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.getUserAgent:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isFrozen`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.isFrozen:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isPersistenceEnabled`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.isPersistenceEnabled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isStopped`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.isStopped:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `j`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.j:()V` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PersistenceManager` `l`(`com.google.firebase.database.core.Context` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/database/core/Context;.l:(Ljava/lang/String;)Lcom/google/firebase/database/core/persistence/PersistenceManager;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.database.connection.PersistentConnection` `newPersistentConnection`(`com.google.firebase.database.core.Context` v2 @kind this, `com.google.firebase.database.connection.HostInfo` v3 @kind object, `com.google.firebase.database.connection.PersistentConnection$Delegate` v4 @kind object) @signature `Lcom/google/firebase/database/core/Context;.newPersistentConnection:(Lcom/google/firebase/database/connection/HostInfo;Lcom/google/firebase/database/connection/PersistentConnection$Delegate;)Lcom/google/firebase/database/connection/PersistentConnection;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `r`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.r:()V` @AccessFlag  {

  # return;
}
procedure `void` `requireStarted`(`com.google.firebase.database.core.Context` v1 @kind this) @signature `Lcom/google/firebase/database/core/Context;.requireStarted:()V` @AccessFlag PUBLIC {

  # return;
}
