record `com.google.firebase.database.core.persistence.PruneForest` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.database.core.utilities.ImmutableTree` `com.google.firebase.database.core.persistence.PruneForest.a` @AccessFlag PRIVATE_FINAL;
}
global `com.google.firebase.database.core.utilities.Predicate` `@@com.google.firebase.database.core.persistence.PruneForest.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.database.core.utilities.Predicate` `@@com.google.firebase.database.core.persistence.PruneForest.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.database.core.utilities.ImmutableTree` `@@com.google.firebase.database.core.persistence.PruneForest.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.database.core.utilities.ImmutableTree` `@@com.google.firebase.database.core.persistence.PruneForest.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.core.persistence.PruneForest` v1 @kind this) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.core.persistence.PruneForest` v0 @kind this, `com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.<init>:(Lcom/google/firebase/database/core/utilities/ImmutableTree;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PruneForest` `a`(`com.google.firebase.database.core.persistence.PruneForest` v3 @kind this, `com.google.firebase.database.core.Path` v4 @kind object, `java.util.Set` v5 @kind object, `com.google.firebase.database.core.utilities.ImmutableTree` v6 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.a:(Lcom/google/firebase/database/core/Path;Ljava/util/Set;Lcom/google/firebase/database/core/utilities/ImmutableTree;)Lcom/google/firebase/database/core/persistence/PruneForest;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `affectsPath`(`com.google.firebase.database.core.persistence.PruneForest` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.affectsPath:(Lcom/google/firebase/database/core/Path;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PruneForest` `child`(`com.google.firebase.database.core.persistence.PruneForest` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.child:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/core/persistence/PruneForest;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PruneForest` `child`(`com.google.firebase.database.core.persistence.PruneForest` v2 @kind this, `com.google.firebase.database.snapshot.ChildKey` v3 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.child:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/core/persistence/PruneForest;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.database.core.persistence.PruneForest` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `foldKeptNodes`(`com.google.firebase.database.core.persistence.PruneForest` v2 @kind this, `java.lang.Object` v3 @kind object, `com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor` v4 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.foldKeptNodes:(Ljava/lang/Object;Lcom/google/firebase/database/core/utilities/ImmutableTree$TreeVisitor;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.database.core.persistence.PruneForest` v1 @kind this) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PruneForest` `keep`(`com.google.firebase.database.core.persistence.PruneForest` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.keep:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/core/persistence/PruneForest;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PruneForest` `keepAll`(`com.google.firebase.database.core.persistence.PruneForest` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object, `java.util.Set` v4 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.keepAll:(Lcom/google/firebase/database/core/Path;Ljava/util/Set;)Lcom/google/firebase/database/core/persistence/PruneForest;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PruneForest` `prune`(`com.google.firebase.database.core.persistence.PruneForest` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.prune:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/core/persistence/PruneForest;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.persistence.PruneForest` `pruneAll`(`com.google.firebase.database.core.persistence.PruneForest` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object, `java.util.Set` v4 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.pruneAll:(Lcom/google/firebase/database/core/Path;Ljava/util/Set;)Lcom/google/firebase/database/core/persistence/PruneForest;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `prunesAnything`(`com.google.firebase.database.core.persistence.PruneForest` v2 @kind this) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.prunesAnything:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `shouldKeep`(`com.google.firebase.database.core.persistence.PruneForest` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.shouldKeep:(Lcom/google/firebase/database/core/Path;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `shouldPruneUnkeptDescendants`(`com.google.firebase.database.core.persistence.PruneForest` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.shouldPruneUnkeptDescendants:(Lcom/google/firebase/database/core/Path;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.database.core.persistence.PruneForest` v2 @kind this) @signature `Lcom/google/firebase/database/core/persistence/PruneForest;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
