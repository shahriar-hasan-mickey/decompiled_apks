record `com.google.firebase.database.core.utilities.Tree$a` @kind class @AccessFlag  extends `com.google.firebase.database.core.utilities.Tree$TreeVisitor` @kind interface {
  `com.google.firebase.database.core.utilities.Tree$TreeVisitor` `com.google.firebase.database.core.utilities.Tree$a.a` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `com.google.firebase.database.core.utilities.Tree$a.b` @AccessFlag FINAL_SYNTHETIC;
  `com.google.firebase.database.core.utilities.Tree` `com.google.firebase.database.core.utilities.Tree$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.database.core.utilities.Tree$a` v0 @kind this, `com.google.firebase.database.core.utilities.Tree` v1 @kind object, `com.google.firebase.database.core.utilities.Tree$TreeVisitor` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/firebase/database/core/utilities/Tree$a;.<init>:(Lcom/google/firebase/database/core/utilities/Tree;Lcom/google/firebase/database/core/utilities/Tree$TreeVisitor;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `visitTree`(`com.google.firebase.database.core.utilities.Tree$a` v3 @kind this, `com.google.firebase.database.core.utilities.Tree` v4 @kind object) @signature `Lcom/google/firebase/database/core/utilities/Tree$a;.visitTree:(Lcom/google/firebase/database/core/utilities/Tree;)V` @AccessFlag PUBLIC {

  # return;
}
