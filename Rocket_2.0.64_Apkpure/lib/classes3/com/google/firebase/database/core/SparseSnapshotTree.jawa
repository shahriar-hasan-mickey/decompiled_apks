record `com.google.firebase.database.core.SparseSnapshotTree` @kind class @AccessFlag  {
  `com.google.firebase.database.snapshot.Node` `com.google.firebase.database.core.SparseSnapshotTree.a` @AccessFlag PRIVATE;
  `java.util.Map` `com.google.firebase.database.core.SparseSnapshotTree.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.database.core.SparseSnapshotTree` v1 @kind this) @signature `Lcom/google/firebase/database/core/SparseSnapshotTree;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.database.core.SparseSnapshotTree` v3 @kind this, `com.google.firebase.database.core.SparseSnapshotTree$SparseSnapshotChildVisitor` v4 @kind object) @signature `Lcom/google/firebase/database/core/SparseSnapshotTree;.a:(Lcom/google/firebase/database/core/SparseSnapshotTree$SparseSnapshotChildVisitor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.database.core.SparseSnapshotTree` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object, `com.google.firebase.database.core.SparseSnapshotTree$SparseSnapshotTreeVisitor` v3 @kind object) @signature `Lcom/google/firebase/database/core/SparseSnapshotTree;.b:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/SparseSnapshotTree$SparseSnapshotTreeVisitor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `c`(`com.google.firebase.database.core.SparseSnapshotTree` v5 @kind this, `com.google.firebase.database.core.Path` v6 @kind object) @signature `Lcom/google/firebase/database/core/SparseSnapshotTree;.c:(Lcom/google/firebase/database/core/Path;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `d`(`com.google.firebase.database.core.SparseSnapshotTree` v3 @kind this, `com.google.firebase.database.core.Path` v4 @kind object, `com.google.firebase.database.snapshot.Node` v5 @kind object) @signature `Lcom/google/firebase/database/core/SparseSnapshotTree;.d:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/snapshot/Node;)V` @AccessFlag PUBLIC {

  # return;
}
