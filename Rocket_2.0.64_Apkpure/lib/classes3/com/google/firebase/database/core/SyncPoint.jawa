record `com.google.firebase.database.core.SyncPoint` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.google.firebase.database.core.SyncPoint.a` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.core.persistence.PersistenceManager` `com.google.firebase.database.core.SyncPoint.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.core.SyncPoint` v1 @kind this, `com.google.firebase.database.core.persistence.PersistenceManager` v2 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.<init>:(Lcom/google/firebase/database/core/persistence/PersistenceManager;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.List` `a`(`com.google.firebase.database.core.SyncPoint` v4 @kind this, `com.google.firebase.database.core.view.View` v5 @kind object, `com.google.firebase.database.core.operation.Operation` v6 @kind object, `com.google.firebase.database.core.WriteTreeRef` v7 @kind object, `com.google.firebase.database.snapshot.Node` v8 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.a:(Lcom/google/firebase/database/core/view/View;Lcom/google/firebase/database/core/operation/Operation;Lcom/google/firebase/database/core/WriteTreeRef;Lcom/google/firebase/database/snapshot/Node;)Ljava/util/List;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.List` `addEventRegistration`(`com.google.firebase.database.core.SyncPoint` v3 @kind this, `com.google.firebase.database.core.EventRegistration` v4 @kind object, `com.google.firebase.database.core.WriteTreeRef` v5 @kind object, `com.google.firebase.database.core.view.CacheNode` v6 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.addEventRegistration:(Lcom/google/firebase/database/core/EventRegistration;Lcom/google/firebase/database/core/WriteTreeRef;Lcom/google/firebase/database/core/view/CacheNode;)Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `applyOperation`(`com.google.firebase.database.core.SyncPoint` v3 @kind this, `com.google.firebase.database.core.operation.Operation` v4 @kind object, `com.google.firebase.database.core.WriteTreeRef` v5 @kind object, `com.google.firebase.database.snapshot.Node` v6 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.applyOperation:(Lcom/google/firebase/database/core/operation/Operation;Lcom/google/firebase/database/core/WriteTreeRef;Lcom/google/firebase/database/snapshot/Node;)Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.snapshot.Node` `getCompleteServerCache`(`com.google.firebase.database.core.SyncPoint` v3 @kind this, `com.google.firebase.database.core.Path` v4 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.getCompleteServerCache:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/snapshot/Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.view.View` `getCompleteView`(`com.google.firebase.database.core.SyncPoint` v3 @kind this) @signature `Lcom/google/firebase/database/core/SyncPoint;.getCompleteView:()Lcom/google/firebase/database/core/view/View;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getQueryViews`(`com.google.firebase.database.core.SyncPoint` v4 @kind this) @signature `Lcom/google/firebase/database/core/SyncPoint;.getQueryViews:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.view.View` `getView`(`com.google.firebase.database.core.SyncPoint` v4 @kind this, `com.google.firebase.database.core.view.QuerySpec` v5 @kind object, `com.google.firebase.database.core.WriteTreeRef` v6 @kind object, `com.google.firebase.database.core.view.CacheNode` v7 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.getView:(Lcom/google/firebase/database/core/view/QuerySpec;Lcom/google/firebase/database/core/WriteTreeRef;Lcom/google/firebase/database/core/view/CacheNode;)Lcom/google/firebase/database/core/view/View;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasCompleteView`(`com.google.firebase.database.core.SyncPoint` v1 @kind this) @signature `Lcom/google/firebase/database/core/SyncPoint;.hasCompleteView:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.firebase.database.core.SyncPoint` v1 @kind this) @signature `Lcom/google/firebase/database/core/SyncPoint;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.utilities.Pair` `removeEventRegistration`(`com.google.firebase.database.core.SyncPoint` v6 @kind this, `com.google.firebase.database.core.view.QuerySpec` v7 @kind object, `com.google.firebase.database.core.EventRegistration` v8 @kind object, `com.google.firebase.database.DatabaseError` v9 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.removeEventRegistration:(Lcom/google/firebase/database/core/view/QuerySpec;Lcom/google/firebase/database/core/EventRegistration;Lcom/google/firebase/database/DatabaseError;)Lcom/google/firebase/database/core/utilities/Pair;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `viewExistsForQuery`(`com.google.firebase.database.core.SyncPoint` v0 @kind this, `com.google.firebase.database.core.view.QuerySpec` v1 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.viewExistsForQuery:(Lcom/google/firebase/database/core/view/QuerySpec;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.view.View` `viewForQuery`(`com.google.firebase.database.core.SyncPoint` v1 @kind this, `com.google.firebase.database.core.view.QuerySpec` v2 @kind object) @signature `Lcom/google/firebase/database/core/SyncPoint;.viewForQuery:(Lcom/google/firebase/database/core/view/QuerySpec;)Lcom/google/firebase/database/core/view/View;` @AccessFlag PUBLIC {

  # return;
}
