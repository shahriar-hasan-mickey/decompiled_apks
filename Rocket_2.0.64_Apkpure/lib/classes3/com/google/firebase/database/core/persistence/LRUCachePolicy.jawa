record `com.google.firebase.database.core.persistence.LRUCachePolicy` @kind class @AccessFlag PUBLIC extends `com.google.firebase.database.core.persistence.CachePolicy` @kind interface {
  `long` `com.google.firebase.database.core.persistence.LRUCachePolicy.maxSizeBytes` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.database.core.persistence.LRUCachePolicy` v0 @kind this, `long` v1 ) @signature `Lcom/google/firebase/database/core/persistence/LRUCachePolicy;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `long` `getMaxNumberOfQueriesToKeep`(`com.google.firebase.database.core.persistence.LRUCachePolicy` v2 @kind this) @signature `Lcom/google/firebase/database/core/persistence/LRUCachePolicy;.getMaxNumberOfQueriesToKeep:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getPercentOfQueriesToPruneAtOnce`(`com.google.firebase.database.core.persistence.LRUCachePolicy` v1 @kind this) @signature `Lcom/google/firebase/database/core/persistence/LRUCachePolicy;.getPercentOfQueriesToPruneAtOnce:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `shouldCheckCacheSize`(`com.google.firebase.database.core.persistence.LRUCachePolicy` v3 @kind this, `long` v4 ) @signature `Lcom/google/firebase/database/core/persistence/LRUCachePolicy;.shouldCheckCacheSize:(J)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `shouldPrune`(`com.google.firebase.database.core.persistence.LRUCachePolicy` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lcom/google/firebase/database/core/persistence/LRUCachePolicy;.shouldPrune:(JJ)Z` @AccessFlag PUBLIC {

  # return;
}
