record `com.google.firebase.database.core.persistence.CachePolicy` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `com.google.firebase.database.core.persistence.CachePolicy` `@@com.google.firebase.database.core.persistence.CachePolicy.NONE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/core/persistence/CachePolicy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `long` `getMaxNumberOfQueriesToKeep`() @signature `Lcom/google/firebase/database/core/persistence/CachePolicy;.getMaxNumberOfQueriesToKeep:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `getPercentOfQueriesToPruneAtOnce`() @signature `Lcom/google/firebase/database/core/persistence/CachePolicy;.getPercentOfQueriesToPruneAtOnce:()F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `shouldCheckCacheSize`(`long` v0 ) @signature `Lcom/google/firebase/database/core/persistence/CachePolicy;.shouldCheckCacheSize:(J)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `shouldPrune`(`long` v0 , `long` v2 ) @signature `Lcom/google/firebase/database/core/persistence/CachePolicy;.shouldPrune:(JJ)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
