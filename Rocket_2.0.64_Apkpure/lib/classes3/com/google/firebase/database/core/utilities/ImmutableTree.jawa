record `com.google.firebase.database.core.utilities.ImmutableTree` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `java.lang.Object` `com.google.firebase.database.core.utilities.ImmutableTree.a` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.collection.ImmutableSortedMap` `com.google.firebase.database.core.utilities.ImmutableTree.b` @AccessFlag PRIVATE_FINAL;
}
global `com.google.firebase.database.collection.ImmutableSortedMap` `@@com.google.firebase.database.core.utilities.ImmutableTree.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.database.core.utilities.ImmutableTree` `@@com.google.firebase.database.core.utilities.ImmutableTree.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.core.utilities.ImmutableTree` v0 @kind this, `java.lang.Object` v1 @kind object, `com.google.firebase.database.collection.ImmutableSortedMap` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.<init>:(Ljava/lang/Object;Lcom/google/firebase/database/collection/ImmutableSortedMap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`(`com.google.firebase.database.core.utilities.ImmutableTree` v3 @kind this, `com.google.firebase.database.core.Path` v4 @kind object, `com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.a:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/utilities/ImmutableTree$TreeVisitor;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.database.core.utilities.ImmutableTree` `emptyInstance`() @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.emptyInstance:()Lcom/google/firebase/database/core/utilities/ImmutableTree;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsMatchingValue`(`com.google.firebase.database.core.utilities.ImmutableTree` v3 @kind this, `com.google.firebase.database.core.utilities.Predicate` v4 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.containsMatchingValue:(Lcom/google/firebase/database/core/utilities/Predicate;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.database.core.utilities.ImmutableTree` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.Path` `findRootMostMatchingPath`(`com.google.firebase.database.core.utilities.ImmutableTree` v3 @kind this, `com.google.firebase.database.core.Path` v4 @kind object, `com.google.firebase.database.core.utilities.Predicate` v5 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.findRootMostMatchingPath:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/utilities/Predicate;)Lcom/google/firebase/database/core/Path;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.Path` `findRootMostPathWithValue`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.findRootMostPathWithValue:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/core/Path;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `fold`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this, `java.lang.Object` v2 @kind object, `com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor` v3 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.fold:(Ljava/lang/Object;Lcom/google/firebase/database/core/utilities/ImmutableTree$TreeVisitor;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `foreach`(`com.google.firebase.database.core.utilities.ImmutableTree` v2 @kind this, `com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor` v3 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.foreach:(Lcom/google/firebase/database/core/utilities/ImmutableTree$TreeVisitor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.firebase.database.core.utilities.ImmutableTree` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.get:(Lcom/google/firebase/database/core/Path;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.utilities.ImmutableTree` `getChild`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this, `com.google.firebase.database.snapshot.ChildKey` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.getChild:(Lcom/google/firebase/database/snapshot/ChildKey;)Lcom/google/firebase/database/core/utilities/ImmutableTree;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedMap` `getChildren`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.getChildren:()Lcom/google/firebase/database/collection/ImmutableSortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.database.core.utilities.ImmutableTree` v3 @kind this) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.firebase.database.core.utilities.ImmutableTree` v2 @kind this) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `leafMostValue`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.leafMostValue:(Lcom/google/firebase/database/core/Path;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `leafMostValueMatching`(`com.google.firebase.database.core.utilities.ImmutableTree` v3 @kind this, `com.google.firebase.database.core.Path` v4 @kind object, `com.google.firebase.database.core.utilities.Predicate` v5 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.leafMostValueMatching:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/utilities/Predicate;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.utilities.ImmutableTree` `remove`(`com.google.firebase.database.core.utilities.ImmutableTree` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.remove:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/core/utilities/ImmutableTree;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `rootMostValue`(`com.google.firebase.database.core.utilities.ImmutableTree` v1 @kind this, `com.google.firebase.database.core.Path` v2 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.rootMostValue:(Lcom/google/firebase/database/core/Path;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `rootMostValueMatching`(`com.google.firebase.database.core.utilities.ImmutableTree` v3 @kind this, `com.google.firebase.database.core.Path` v4 @kind object, `com.google.firebase.database.core.utilities.Predicate` v5 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.rootMostValueMatching:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/utilities/Predicate;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.utilities.ImmutableTree` `set`(`com.google.firebase.database.core.utilities.ImmutableTree` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.set:(Lcom/google/firebase/database/core/Path;Ljava/lang/Object;)Lcom/google/firebase/database/core/utilities/ImmutableTree;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.utilities.ImmutableTree` `setTree`(`com.google.firebase.database.core.utilities.ImmutableTree` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object, `com.google.firebase.database.core.utilities.ImmutableTree` v4 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.setTree:(Lcom/google/firebase/database/core/Path;Lcom/google/firebase/database/core/utilities/ImmutableTree;)Lcom/google/firebase/database/core/utilities/ImmutableTree;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.core.utilities.ImmutableTree` `subtree`(`com.google.firebase.database.core.utilities.ImmutableTree` v2 @kind this, `com.google.firebase.database.core.Path` v3 @kind object) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.subtree:(Lcom/google/firebase/database/core/Path;)Lcom/google/firebase/database/core/utilities/ImmutableTree;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.database.core.utilities.ImmutableTree` v4 @kind this) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.firebase.database.core.utilities.ImmutableTree` v2 @kind this) @signature `Lcom/google/firebase/database/core/utilities/ImmutableTree;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {

  # return;
}
