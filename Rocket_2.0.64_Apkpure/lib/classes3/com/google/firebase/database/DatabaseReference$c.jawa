record `com.google.firebase.database.DatabaseReference$c` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.google.firebase.database.core.CompoundWrite` `com.google.firebase.database.DatabaseReference$c.a` @AccessFlag FINAL_SYNTHETIC;
  `com.google.firebase.database.core.utilities.Pair` `com.google.firebase.database.DatabaseReference$c.b` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Map` `com.google.firebase.database.DatabaseReference$c.c` @AccessFlag FINAL_SYNTHETIC;
  `com.google.firebase.database.DatabaseReference` `com.google.firebase.database.DatabaseReference$c.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.database.DatabaseReference$c` v0 @kind this, `com.google.firebase.database.DatabaseReference` v1 @kind object, `com.google.firebase.database.core.CompoundWrite` v2 @kind object, `com.google.firebase.database.core.utilities.Pair` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lcom/google/firebase/database/DatabaseReference$c;.<init>:(Lcom/google/firebase/database/DatabaseReference;Lcom/google/firebase/database/core/CompoundWrite;Lcom/google/firebase/database/core/utilities/Pair;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `run`(`com.google.firebase.database.DatabaseReference$c` v5 @kind this) @signature `Lcom/google/firebase/database/DatabaseReference$c;.run:()V` @AccessFlag PUBLIC {

  # return;
}
