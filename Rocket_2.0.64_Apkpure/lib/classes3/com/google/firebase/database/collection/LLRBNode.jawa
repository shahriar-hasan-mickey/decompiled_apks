record `com.google.firebase.database.collection.LLRBNode` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `com.google.firebase.database.collection.LLRBNode` `copy`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `com.google.firebase.database.collection.LLRBNode$Color` v2 @kind object, `com.google.firebase.database.collection.LLRBNode` v3 @kind object, `com.google.firebase.database.collection.LLRBNode` v4 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBNode;.copy:(Ljava/lang/Object;Ljava/lang/Object;Lcom/google/firebase/database/collection/LLRBNode$Color;Lcom/google/firebase/database/collection/LLRBNode;Lcom/google/firebase/database/collection/LLRBNode;)Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getKey`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getLeft`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.getLeft:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getMax`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.getMax:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getMin`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.getMin:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getRight`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.getRight:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `inOrderTraversal`(`com.google.firebase.database.collection.LLRBNode$NodeVisitor` v0 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBNode;.inOrderTraversal:(Lcom/google/firebase/database/collection/LLRBNode$NodeVisitor;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `insert`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBNode;.insert:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isRed`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.isRed:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `remove`(`java.lang.Object` v0 @kind object, `java.util.Comparator` v1 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBNode;.remove:(Ljava/lang/Object;Ljava/util/Comparator;)Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `shortCircuitingInOrderTraversal`(`com.google.firebase.database.collection.LLRBNode$ShortCircuitingNodeVisitor` v0 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBNode;.shortCircuitingInOrderTraversal:(Lcom/google/firebase/database/collection/LLRBNode$ShortCircuitingNodeVisitor;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `shortCircuitingReverseOrderTraversal`(`com.google.firebase.database.collection.LLRBNode$ShortCircuitingNodeVisitor` v0 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBNode;.shortCircuitingReverseOrderTraversal:(Lcom/google/firebase/database/collection/LLRBNode$ShortCircuitingNodeVisitor;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`() @signature `Lcom/google/firebase/database/collection/LLRBNode;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
