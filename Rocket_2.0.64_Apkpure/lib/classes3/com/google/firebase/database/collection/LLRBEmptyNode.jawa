record `com.google.firebase.database.collection.LLRBEmptyNode` @kind class @AccessFlag PUBLIC extends `com.google.firebase.database.collection.LLRBNode` @kind interface {
}
global `com.google.firebase.database.collection.LLRBEmptyNode` `@@com.google.firebase.database.collection.LLRBEmptyNode.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBEmptyNode` `getInstance`() @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.getInstance:()Lcom/google/firebase/database/collection/LLRBEmptyNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `copy`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `com.google.firebase.database.collection.LLRBNode$Color` v3 @kind object, `com.google.firebase.database.collection.LLRBNode` v4 @kind object, `com.google.firebase.database.collection.LLRBNode` v5 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.copy:(Ljava/lang/Object;Ljava/lang/Object;Lcom/google/firebase/database/collection/LLRBNode$Color;Lcom/google/firebase/database/collection/LLRBNode;Lcom/google/firebase/database/collection/LLRBNode;)Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getKey`(`com.google.firebase.database.collection.LLRBEmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getLeft`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.getLeft:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getMax`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.getMax:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getMin`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.getMin:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getRight`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.getRight:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`com.google.firebase.database.collection.LLRBEmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `inOrderTraversal`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this, `com.google.firebase.database.collection.LLRBNode$NodeVisitor` v1 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.inOrderTraversal:(Lcom/google/firebase/database/collection/LLRBNode$NodeVisitor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `insert`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.insert:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.firebase.database.collection.LLRBEmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isRed`(`com.google.firebase.database.collection.LLRBEmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.isRed:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `remove`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this, `java.lang.Object` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.remove:(Ljava/lang/Object;Ljava/util/Comparator;)Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `shortCircuitingInOrderTraversal`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this, `com.google.firebase.database.collection.LLRBNode$ShortCircuitingNodeVisitor` v1 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.shortCircuitingInOrderTraversal:(Lcom/google/firebase/database/collection/LLRBNode$ShortCircuitingNodeVisitor;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `shortCircuitingReverseOrderTraversal`(`com.google.firebase.database.collection.LLRBEmptyNode` v0 @kind this, `com.google.firebase.database.collection.LLRBNode$ShortCircuitingNodeVisitor` v1 @kind object) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.shortCircuitingReverseOrderTraversal:(Lcom/google/firebase/database/collection/LLRBNode$ShortCircuitingNodeVisitor;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.firebase.database.collection.LLRBEmptyNode` v1 @kind this) @signature `Lcom/google/firebase/database/collection/LLRBEmptyNode;.size:()I` @AccessFlag PUBLIC {

  # return;
}
