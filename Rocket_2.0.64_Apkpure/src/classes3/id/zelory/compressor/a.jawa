record `id.zelory.compressor.a` @kind class @AccessFlag  {
}
procedure `int` `a`(`android.graphics.BitmapFactory$Options` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lid/zelory/compressor/a;.a:(Landroid/graphics/BitmapFactory$Options;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3dd148.  v0:= v3.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L3dd14c.  v3:= v3.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L3dd150.  v1:= 1I;
  #L3dd152.  if v0 > v5 then goto L3dd15a;
  #L3dd156.  if v3 <= v4 then goto L3dd178;
  #L3dd15a.  v0:= v0 / 2;
  #L3dd15e.  v3:= v3 / 2;
  #L3dd162.  v2:= v0 / v1 @kind int;
  #L3dd166.  if v2 < v5 then goto L3dd178;
  #L3dd16a.  v2:= v3 / v1 @kind int;
  #L3dd16e.  if v2 < v4 then goto L3dd178;
  #L3dd172.  v1:= v1 * 2;
  #L3dd176.  goto L3dd162;
  #L3dd178.  return v1;
}
procedure `java.io.File` `b`(`java.io.File` v2 @kind object, `int` v3 , `int` v4 , `android.graphics.Bitmap$CompressFormat` v5 @kind object, `int` v6 , `java.lang.String` v7 @kind object) @signature `Lid/zelory/compressor/a;.b:(Ljava/io/File;IILandroid/graphics/Bitmap$CompressFormat;ILjava/lang/String;)Ljava/io/File;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3dd18c.  v0:= new `java.io.File`;
  #L3dd190.  call `<init>`(v0, v7) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd196.  call temp:= `getParentFile`(v0) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L3dd19c.  v0:= temp @kind object;
  #L3dd19e.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3dd1a4.  v1:= temp;
  #L3dd1a6.  if v1 != 0 then goto L3dd1b0;
  #L3dd1aa.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L3dd1b0.  v0:= 0I;
  #L3dd1b2.  v1:= new `java.io.FileOutputStream`;
  #L3dd1b6.  call `<init>`(v1, v7) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd1bc.  call temp:= `c`(v2, v3, v4) @signature `Lid/zelory/compressor/a;.c:(Ljava/io/File;II)Landroid/graphics/Bitmap;` @kind static;
  #L3dd1c2.  v2:= temp @kind object;
  #L3dd1c4.  call temp:= `compress`(v2, v5, v6, v1) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L3dd1ca.  call `flush`(v1) @signature `Ljava/io/FileOutputStream;.flush:()V` @kind virtual;
  #L3dd1d0.  call `close`(v1) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L3dd1d6.  v2:= new `java.io.File`;
  #L3dd1da.  call `<init>`(v2, v7) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd1e0.  return v2 @kind object;
  #L3dd1e2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3dd1e4.  v0:= v1 @kind object;
  #L3dd1e6.  goto L3dd1ea;
  #L3dd1e8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3dd1ea.  if v0 == 0 then goto L3dd1fa;
  #L3dd1ee.  call `flush`(v0) @signature `Ljava/io/FileOutputStream;.flush:()V` @kind virtual;
  #L3dd1f4.  call `close`(v0) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L3dd1fa.  throw v2;
  catch `java.lang.Throwable` @[L3dd1b2..L3dd1bc] goto L3dd1e8;
  catch `java.lang.Throwable` @[L3dd1bc..L3dd1ca] goto L3dd1e2;
}
procedure `android.graphics.Bitmap` `c`(`java.io.File` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lid/zelory/compressor/a;.c:(Ljava/io/File;II)Landroid/graphics/Bitmap;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dd078.  v0:= new `android.graphics.BitmapFactory$Options`;
  #L3dd07c.  call `<init>`(v0) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L3dd082.  v1:= 1I;
  #L3dd084.  v0.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v1 @kind boolean;
  #L3dd088.  call temp:= `getAbsolutePath`(v8) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L3dd08e.  v1:= temp @kind object;
  #L3dd090.  call temp:= `decodeFile`(v1, v0) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3dd096.  call temp:= `a`(v0, v9, v10) @signature `Lid/zelory/compressor/a;.a:(Landroid/graphics/BitmapFactory$Options;II)I` @kind static;
  #L3dd09c.  v9:= temp;
  #L3dd09e.  v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v9;
  #L3dd0a2.  v9:= 0I;
  #L3dd0a4.  v0.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v9 @kind boolean;
  #L3dd0a8.  call temp:= `getAbsolutePath`(v8) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L3dd0ae.  v10:= temp @kind object;
  #L3dd0b0.  call temp:= `decodeFile`(v10, v0) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3dd0b6.  v1:= temp @kind object;
  #L3dd0b8.  v10:= new `android.media.ExifInterface`;
  #L3dd0bc.  call temp:= `getAbsolutePath`(v8) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L3dd0c2.  v8:= temp @kind object;
  #L3dd0c4.  call `<init>`(v10, v8) @signature `Landroid/media/ExifInterface;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd0ca.  v8:= "Orientation" @kind object;
  #L3dd0ce.  call temp:= `getAttributeInt`(v10, v8, v9) @signature `Landroid/media/ExifInterface;.getAttributeInt:(Ljava/lang/String;I)I` @kind virtual;
  #L3dd0d4.  v8:= temp;
  #L3dd0d6.  v6:= new `android.graphics.Matrix`;
  #L3dd0da.  call `<init>`(v6) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3dd0e0.  v9:= 6I;
  #L3dd0e2.  if v8 != v9 then goto L3dd0f2;
  #L3dd0e6.  v8:= 90.0F;
  #L3dd0ea.  call temp:= `postRotate`(v6, v8) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L3dd0f0.  goto L3dd116;
  #L3dd0f2.  v9:= 3I;
  #L3dd0f4.  if v8 != v9 then goto L3dd104;
  #L3dd0f8.  v8:= 180.0F;
  #L3dd0fc.  call temp:= `postRotate`(v6, v8) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L3dd102.  goto L3dd116;
  #L3dd104.  v9:= 8I;
  #L3dd108.  if v8 != v9 then goto L3dd116;
  #L3dd10c.  v8:= 270.0F;
  #L3dd110.  call temp:= `postRotate`(v6, v8) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L3dd116.  v2:= 0I;
  #L3dd118.  v3:= 0I;
  #L3dd11a.  call temp:= `getWidth`(v1) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3dd120.  v4:= temp;
  #L3dd122.  call temp:= `getHeight`(v1) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3dd128.  v5:= temp;
  #L3dd12a.  v7:= 1I;
  #L3dd12c.  call temp:= `createBitmap`(v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L3dd132.  v8:= temp @kind object;
  #L3dd134.  return v8 @kind object;
}
