record `id.zelory.compressor.Compressor$b` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `java.io.File` `id.zelory.compressor.Compressor$b.a` @AccessFlag FINAL_SYNTHETIC;
  `id.zelory.compressor.Compressor` `id.zelory.compressor.Compressor$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`id.zelory.compressor.Compressor$b` v0 @kind this, `id.zelory.compressor.Compressor` v1 @kind object, `java.io.File` v2 @kind object) @signature `Lid/zelory/compressor/Compressor$b;.<init>:(Lid/zelory/compressor/Compressor;Ljava/io/File;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dce5c.  v0.`id.zelory.compressor.Compressor$b.b` @type ^`id.zelory.compressor.Compressor` := v1 @kind object;
  #L3dce60.  v0.`id.zelory.compressor.Compressor$b.a` @type ^`java.io.File` := v2 @kind object;
  #L3dce64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dce6a.  return @kind void;
}
procedure `io.reactivex.Flowable` `a`(`id.zelory.compressor.Compressor$b` v2 @kind this) @signature `Lid/zelory/compressor/Compressor$b;.a:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dcdf8.  v0:= v2.`id.zelory.compressor.Compressor$b.b` @type ^`id.zelory.compressor.Compressor` @kind object;
  #L3dcdfc.  v1:= v2.`id.zelory.compressor.Compressor$b.a` @type ^`java.io.File` @kind object;
  #L3dce00.  call temp:= `compressToBitmap`(v0, v1) @signature `Lid/zelory/compressor/Compressor;.compressToBitmap:(Ljava/io/File;)Landroid/graphics/Bitmap;` @kind virtual;
  #L3dce06.  v0:= temp @kind object;
  #L3dce08.  call temp:= `just`(v0) @signature `Lio/reactivex/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3dce0e.  v0:= temp @kind object;
  #L3dce10.  return v0 @kind object;
  #L3dce12.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3dce14.  call temp:= `error`(v0) @signature `Lio/reactivex/Flowable;.error:(Ljava/lang/Throwable;)Lio/reactivex/Flowable;` @kind static;
  #L3dce1a.  v0:= temp @kind object;
  #L3dce1c.  return v0 @kind object;
  catch `java.io.IOException` @[L3dcdf8..L3dce10] goto L3dce12;
}
procedure `java.lang.Object` `call`(`id.zelory.compressor.Compressor$b` v1 @kind this) @signature `Lid/zelory/compressor/Compressor$b;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3dce40.  call temp:= `a`(v1) @signature `Lid/zelory/compressor/Compressor$b;.a:()Lio/reactivex/Flowable;` @kind virtual;
  #L3dce46.  v0:= temp @kind object;
  #L3dce48.  return v0 @kind object;
}
