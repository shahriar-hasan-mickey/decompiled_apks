record `id.zelory.compressor.Compressor` @kind class @AccessFlag PUBLIC {
  `int` `id.zelory.compressor.Compressor.a` @AccessFlag PRIVATE;
  `int` `id.zelory.compressor.Compressor.b` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$CompressFormat` `id.zelory.compressor.Compressor.c` @AccessFlag PRIVATE;
  `int` `id.zelory.compressor.Compressor.d` @AccessFlag PRIVATE;
  `java.lang.String` `id.zelory.compressor.Compressor.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`id.zelory.compressor.Compressor` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lid/zelory/compressor/Compressor;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dd000.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dd006.  v0:= 612I;
  #L3dd00a.  v1.`id.zelory.compressor.Compressor.a` @type ^`int` := v0;
  #L3dd00e.  v0:= 816I;
  #L3dd012.  v1.`id.zelory.compressor.Compressor.b` @type ^`int` := v0;
  #L3dd016.  v0:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3dd01a.  v1.`id.zelory.compressor.Compressor.c` @type ^`android.graphics.Bitmap$CompressFormat` := v0 @kind object;
  #L3dd01e.  v0:= 80I;
  #L3dd022.  v1.`id.zelory.compressor.Compressor.d` @type ^`int` := v0;
  #L3dd026.  v0:= new `java.lang.StringBuilder`;
  #L3dd02a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dd030.  call temp:= `getCacheDir`(v2) @signature `Landroid/content/Context;.getCacheDir:()Ljava/io/File;` @kind virtual;
  #L3dd036.  v2:= temp @kind object;
  #L3dd038.  call temp:= `getPath`(v2) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3dd03e.  v2:= temp @kind object;
  #L3dd040.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd046.  v2:= `@@java.io.File.separator` @type ^`java.lang.String` @kind object;
  #L3dd04a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd050.  v2:= "images" @kind object;
  #L3dd054.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd05a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dd060.  v2:= temp @kind object;
  #L3dd062.  v1.`id.zelory.compressor.Compressor.e` @type ^`java.lang.String` := v2 @kind object;
  #L3dd066.  return @kind void;
}
procedure `android.graphics.Bitmap` `compressToBitmap`(`id.zelory.compressor.Compressor` v2 @kind this, `java.io.File` v3 @kind object) @signature `Lid/zelory/compressor/Compressor;.compressToBitmap:(Ljava/io/File;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dce7c.  v0:= v2.`id.zelory.compressor.Compressor.a` @type ^`int`;
  #L3dce80.  v1:= v2.`id.zelory.compressor.Compressor.b` @type ^`int`;
  #L3dce84.  call temp:= `c`(v3, v0, v1) @signature `Lid/zelory/compressor/a;.c:(Ljava/io/File;II)Landroid/graphics/Bitmap;` @kind static;
  #L3dce8a.  v3:= temp @kind object;
  #L3dce8c.  return v3 @kind object;
}
procedure `io.reactivex.Flowable` `compressToBitmapAsFlowable`(`id.zelory.compressor.Compressor` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lid/zelory/compressor/Compressor;.compressToBitmapAsFlowable:(Ljava/io/File;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dcf18.  v0:= new `id.zelory.compressor.Compressor$b`;
  #L3dcf1c.  call `<init>`(v0, v1, v2) @signature `Lid/zelory/compressor/Compressor$b;.<init>:(Lid/zelory/compressor/Compressor;Ljava/io/File;)V` @kind direct;
  #L3dcf22.  call temp:= `defer`(v0) @signature `Lio/reactivex/Flowable;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Flowable;` @kind static;
  #L3dcf28.  v2:= temp @kind object;
  #L3dcf2a.  return v2 @kind object;
}
procedure `java.io.File` `compressToFile`(`id.zelory.compressor.Compressor` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lid/zelory/compressor/Compressor;.compressToFile:(Ljava/io/File;)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dcf84.  call temp:= `getName`(v2) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L3dcf8a.  v0:= temp @kind object;
  #L3dcf8c.  call temp:= `compressToFile`(v1, v2, v0) @signature `Lid/zelory/compressor/Compressor;.compressToFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;` @kind virtual;
  #L3dcf92.  v2:= temp @kind object;
  #L3dcf94.  return v2 @kind object;
}
procedure `java.io.File` `compressToFile`(`id.zelory.compressor.Compressor` v6 @kind this, `java.io.File` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lid/zelory/compressor/Compressor;.compressToFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dcfa8.  v1:= v6.`id.zelory.compressor.Compressor.a` @type ^`int`;
  #L3dcfac.  v2:= v6.`id.zelory.compressor.Compressor.b` @type ^`int`;
  #L3dcfb0.  v3:= v6.`id.zelory.compressor.Compressor.c` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3dcfb4.  v4:= v6.`id.zelory.compressor.Compressor.d` @type ^`int`;
  #L3dcfb8.  v0:= new `java.lang.StringBuilder`;
  #L3dcfbc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dcfc2.  v5:= v6.`id.zelory.compressor.Compressor.e` @type ^`java.lang.String` @kind object;
  #L3dcfc6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dcfcc.  v5:= `@@java.io.File.separator` @type ^`java.lang.String` @kind object;
  #L3dcfd0.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dcfd6.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dcfdc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dcfe2.  v5:= temp @kind object;
  #L3dcfe4.  v0:= v7 @kind object;
  #L3dcfe6.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lid/zelory/compressor/a;.b:(Ljava/io/File;IILandroid/graphics/Bitmap$CompressFormat;ILjava/lang/String;)Ljava/io/File;` @kind static;
  #L3dcfec.  v7:= temp @kind object;
  #L3dcfee.  return v7 @kind object;
}
procedure `io.reactivex.Flowable` `compressToFileAsFlowable`(`id.zelory.compressor.Compressor` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lid/zelory/compressor/Compressor;.compressToFileAsFlowable:(Ljava/io/File;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dcf3c.  call temp:= `getName`(v2) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L3dcf42.  v0:= temp @kind object;
  #L3dcf44.  call temp:= `compressToFileAsFlowable`(v1, v2, v0) @signature `Lid/zelory/compressor/Compressor;.compressToFileAsFlowable:(Ljava/io/File;Ljava/lang/String;)Lio/reactivex/Flowable;` @kind virtual;
  #L3dcf4a.  v2:= temp @kind object;
  #L3dcf4c.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `compressToFileAsFlowable`(`id.zelory.compressor.Compressor` v1 @kind this, `java.io.File` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lid/zelory/compressor/Compressor;.compressToFileAsFlowable:(Ljava/io/File;Ljava/lang/String;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dcf60.  v0:= new `id.zelory.compressor.Compressor$a`;
  #L3dcf64.  call `<init>`(v0, v1, v2, v3) @signature `Lid/zelory/compressor/Compressor$a;.<init>:(Lid/zelory/compressor/Compressor;Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L3dcf6a.  call temp:= `defer`(v0) @signature `Lio/reactivex/Flowable;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Flowable;` @kind static;
  #L3dcf70.  v2:= temp @kind object;
  #L3dcf72.  return v2 @kind object;
}
procedure `id.zelory.compressor.Compressor` `setCompressFormat`(`id.zelory.compressor.Compressor` v0 @kind this, `android.graphics.Bitmap$CompressFormat` v1 @kind object) @signature `Lid/zelory/compressor/Compressor;.setCompressFormat:(Landroid/graphics/Bitmap$CompressFormat;)Lid/zelory/compressor/Compressor;` @AccessFlag PUBLIC {
    temp;

  #L3dcea0.  v0.`id.zelory.compressor.Compressor.c` @type ^`android.graphics.Bitmap$CompressFormat` := v1 @kind object;
  #L3dcea4.  return v0 @kind object;
}
procedure `id.zelory.compressor.Compressor` `setDestinationDirectoryPath`(`id.zelory.compressor.Compressor` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lid/zelory/compressor/Compressor;.setDestinationDirectoryPath:(Ljava/lang/String;)Lid/zelory/compressor/Compressor;` @AccessFlag PUBLIC {
    temp;

  #L3dceb8.  v0.`id.zelory.compressor.Compressor.e` @type ^`java.lang.String` := v1 @kind object;
  #L3dcebc.  return v0 @kind object;
}
procedure `id.zelory.compressor.Compressor` `setMaxHeight`(`id.zelory.compressor.Compressor` v0 @kind this, `int` v1 ) @signature `Lid/zelory/compressor/Compressor;.setMaxHeight:(I)Lid/zelory/compressor/Compressor;` @AccessFlag PUBLIC {
    temp;

  #L3dced0.  v0.`id.zelory.compressor.Compressor.b` @type ^`int` := v1;
  #L3dced4.  return v0 @kind object;
}
procedure `id.zelory.compressor.Compressor` `setMaxWidth`(`id.zelory.compressor.Compressor` v0 @kind this, `int` v1 ) @signature `Lid/zelory/compressor/Compressor;.setMaxWidth:(I)Lid/zelory/compressor/Compressor;` @AccessFlag PUBLIC {
    temp;

  #L3dcee8.  v0.`id.zelory.compressor.Compressor.a` @type ^`int` := v1;
  #L3dceec.  return v0 @kind object;
}
procedure `id.zelory.compressor.Compressor` `setQuality`(`id.zelory.compressor.Compressor` v0 @kind this, `int` v1 ) @signature `Lid/zelory/compressor/Compressor;.setQuality:(I)Lid/zelory/compressor/Compressor;` @AccessFlag PUBLIC {
    temp;

  #L3dcf00.  v0.`id.zelory.compressor.Compressor.d` @type ^`int` := v1;
  #L3dcf04.  return v0 @kind object;
}
