record `io.reactivex.Notification` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `io.reactivex.Notification.a` @AccessFlag FINAL;
}
global `io.reactivex.Notification` `@@io.reactivex.Notification.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/Notification;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f833c.  v0:= new `io.reactivex.Notification`;
  #L3f8340.  v1:= 0I;
  #L3f8342.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3f8348.  `@@io.reactivex.Notification.b` @type ^`io.reactivex.Notification` := v0 @kind object;
  #L3f834c.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.Notification` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f8360.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f8366.  v0.`io.reactivex.Notification.a` @type ^`java.lang.Object` := v1 @kind object;
  #L3f836a.  return @kind void;
}
procedure `io.reactivex.Notification` `createOnComplete`() @signature `Lio/reactivex/Notification;.createOnComplete:()Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f81dc.  v0:= `@@io.reactivex.Notification.b` @type ^`io.reactivex.Notification` @kind object;
  #L3f81e0.  return v0 @kind object;
}
procedure `io.reactivex.Notification` `createOnError`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Notification;.createOnError:(Ljava/lang/Throwable;)Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f81f4.  v0:= "error is null" @kind object;
  #L3f81f8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f81fe.  v0:= new `io.reactivex.Notification`;
  #L3f8202.  call temp:= `error`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L3f8208.  v1:= temp @kind object;
  #L3f820a.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3f8210.  return v0 @kind object;
}
procedure `io.reactivex.Notification` `createOnNext`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Notification;.createOnNext:(Ljava/lang/Object;)Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f8224.  v0:= "value is null" @kind object;
  #L3f8228.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f822e.  v0:= new `io.reactivex.Notification`;
  #L3f8232.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3f8238.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.reactivex.Notification` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Notification;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8114.  v0:= instanceof @variable v2 @type ^`io.reactivex.Notification` @kind boolean;
  #L3f8118.  if v0 == 0 then goto L3f8132;
  #L3f811c.  v2:= (`io.reactivex.Notification`) v2 @kind object;
  #L3f8120.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f8124.  v2:= v2.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f8128.  call temp:= `equals`(v0, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f812e.  v2:= temp;
  #L3f8130.  return v2;
  #L3f8132.  v2:= 0I;
  #L3f8134.  return v2;
}
procedure `java.lang.Throwable` `getError`(`io.reactivex.Notification` v2 @kind this) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f830c.  v0:= v2.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f8310.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3f8316.  v1:= temp;
  #L3f8318.  if v1 == 0 then goto L3f8326;
  #L3f831c.  call temp:= `getError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L3f8322.  v0:= temp @kind object;
  #L3f8324.  return v0 @kind object;
  #L3f8326.  v0:= 0I;
  #L3f8328.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f824c.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f8250.  if v0 == 0 then goto L3f8266;
  #L3f8254.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3f825a.  v0:= temp;
  #L3f825c.  if v0 != 0 then goto L3f8266;
  #L3f8260.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f8264.  return v0 @kind object;
  #L3f8266.  v0:= 0I;
  #L3f8268.  return v0 @kind object;
}
procedure `int` `hashCode`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f81b4.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f81b8.  if v0 == 0 then goto L3f81c6;
  #L3f81bc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f81c2.  v0:= temp;
  #L3f81c4.  goto L3f81c8;
  #L3f81c6.  v0:= 0I;
  #L3f81c8.  return v0;
}
procedure `boolean` `isOnComplete`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8148.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f814c.  if v0 != 0 then goto L3f8154;
  #L3f8150.  v0:= 1I;
  #L3f8152.  goto L3f8156;
  #L3f8154.  v0:= 0I;
  #L3f8156.  return v0;
}
procedure `boolean` `isOnError`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8168.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f816c.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3f8172.  v0:= temp;
  #L3f8174.  return v0;
}
procedure `boolean` `isOnNext`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8188.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f818c.  if v0 == 0 then goto L3f81a0;
  #L3f8190.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3f8196.  v0:= temp;
  #L3f8198.  if v0 != 0 then goto L3f81a0;
  #L3f819c.  v0:= 1I;
  #L3f819e.  goto L3f81a2;
  #L3f81a0.  v0:= 0I;
  #L3f81a2.  return v0;
}
procedure `java.lang.String` `toString`(`io.reactivex.Notification` v4 @kind this) @signature `Lio/reactivex/Notification;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f827c.  v0:= v4.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f8280.  if v0 != 0 then goto L3f828a;
  #L3f8284.  v0:= "OnCompleteNotification" @kind object;
  #L3f8288.  return v0 @kind object;
  #L3f828a.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3f8290.  v1:= temp;
  #L3f8292.  v2:= "]" @kind object;
  #L3f8296.  if v1 == 0 then goto L3f82cc;
  #L3f829a.  v1:= new `java.lang.StringBuilder`;
  #L3f829e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f82a4.  v3:= "OnErrorNotification[" @kind object;
  #L3f82a8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f82ae.  call temp:= `getError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L3f82b4.  v0:= temp @kind object;
  #L3f82b6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f82bc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f82c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f82c8.  v0:= temp @kind object;
  #L3f82ca.  return v0 @kind object;
  #L3f82cc.  v0:= new `java.lang.StringBuilder`;
  #L3f82d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f82d6.  v1:= "OnNextNotification[" @kind object;
  #L3f82da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f82e0.  v1:= v4.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L3f82e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f82ea.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f82f0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f82f6.  v0:= temp @kind object;
  #L3f82f8.  return v0 @kind object;
}
