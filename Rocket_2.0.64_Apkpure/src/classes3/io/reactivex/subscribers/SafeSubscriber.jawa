record `io.reactivex.subscribers.SafeSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.subscribers.SafeSubscriber.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.subscribers.SafeSubscriber.b` @AccessFlag ;
  `boolean` `io.reactivex.subscribers.SafeSubscriber.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.subscribers.SafeSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f9b34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f9b3a.  v0.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4f9b3e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.subscribers.SafeSubscriber` v6 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4f9be0.  v0:= new `java.lang.NullPointerException`;
  #L4f9be4.  v1:= "Subscription not set!" @kind object;
  #L4f9be8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9bee.  v1:= 1I;
  #L4f9bf0.  v2:= 0I;
  #L4f9bf2.  v3:= 2I;
  #L4f9bf4.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9bf8.  v5:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L4f9bfc.  call `onSubscribe`(v4, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4f9c02.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9c06.  call `onError`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f9c0c.  goto L4f9c32;
  #L4f9c0e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9c10.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9c16.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9c1a.  v3:= new `java.lang.Throwable`[v3];
  #L4f9c1e.  v3[v2]:= v0 @kind object;
  #L4f9c22.  v3[v1]:= v4 @kind object;
  #L4f9c26.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9c2c.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9c32.  return @kind void;
  #L4f9c34.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9c36.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9c3c.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9c40.  v3:= new `java.lang.Throwable`[v3];
  #L4f9c44.  v3[v2]:= v0 @kind object;
  #L4f9c48.  v3[v1]:= v4 @kind object;
  #L4f9c4c.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9c52.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9c58.  return @kind void;
  catch `java.lang.Throwable` @[L4f9bf4..L4f9c02] goto L4f9c34;
  catch `java.lang.Throwable` @[L4f9c02..L4f9c0c] goto L4f9c0e;
}
procedure `void` `b`(`io.reactivex.subscribers.SafeSubscriber` v6 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4f9e98.  v0:= 1I;
  #L4f9e9a.  v6.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` := v0 @kind boolean;
  #L4f9e9e.  v1:= new `java.lang.NullPointerException`;
  #L4f9ea2.  v2:= "Subscription not set!" @kind object;
  #L4f9ea6.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9eac.  v2:= 0I;
  #L4f9eae.  v3:= 2I;
  #L4f9eb0.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9eb4.  v5:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L4f9eb8.  call `onSubscribe`(v4, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4f9ebe.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9ec2.  call `onError`(v4, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f9ec8.  goto L4f9eee;
  #L4f9eca.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9ecc.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9ed2.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9ed6.  v3:= new `java.lang.Throwable`[v3];
  #L4f9eda.  v3[v2]:= v1 @kind object;
  #L4f9ede.  v3[v0]:= v4 @kind object;
  #L4f9ee2.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9ee8.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9eee.  return @kind void;
  #L4f9ef0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9ef2.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9ef8.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9efc.  v3:= new `java.lang.Throwable`[v3];
  #L4f9f00.  v3[v2]:= v1 @kind object;
  #L4f9f04.  v3[v0]:= v4 @kind object;
  #L4f9f08.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9f0e.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9f14.  return @kind void;
  catch `java.lang.Throwable` @[L4f9eb0..L4f9ebe] goto L4f9ef0;
  catch `java.lang.Throwable` @[L4f9ebe..L4f9ec8] goto L4f9eca;
}
procedure `void` `cancel`(`io.reactivex.subscribers.SafeSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9b50.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9b54.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4f9b5a.  goto L4f9b6a;
  #L4f9b5c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9b5e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9b64.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9b6a.  return @kind void;
  catch `java.lang.Throwable` @[L4f9b50..L4f9b5a] goto L4f9b5c;
}
procedure `void` `onComplete`(`io.reactivex.subscribers.SafeSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9b88.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` @kind boolean;
  #L4f9b8c.  if v0 == 0 then goto L4f9b92;
  #L4f9b90.  return @kind void;
  #L4f9b92.  v0:= 1I;
  #L4f9b94.  v1.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` := v0 @kind boolean;
  #L4f9b98.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9b9c.  if v0 != 0 then goto L4f9ba8;
  #L4f9ba0.  call `a`(v1) @signature `Lio/reactivex/subscribers/SafeSubscriber;.a:()V` @kind virtual;
  #L4f9ba6.  return @kind void;
  #L4f9ba8.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9bac.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4f9bb2.  goto L4f9bc2;
  #L4f9bb4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9bb6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9bbc.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9bc2.  return @kind void;
  catch `java.lang.Throwable` @[L4f9ba8..L4f9bb2] goto L4f9bb4;
}
procedure `void` `onError`(`io.reactivex.subscribers.SafeSubscriber` v8 @kind this, `java.lang.Throwable` v9 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4f9c84.  v0:= v8.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` @kind boolean;
  #L4f9c88.  if v0 == 0 then goto L4f9c94;
  #L4f9c8c.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9c92.  return @kind void;
  #L4f9c94.  v0:= 1I;
  #L4f9c96.  v8.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` := v0 @kind boolean;
  #L4f9c9a.  v1:= v8.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9c9e.  v2:= 0I;
  #L4f9ca0.  v3:= 2I;
  #L4f9ca2.  if v1 != 0 then goto L4f9d3a;
  #L4f9ca6.  v1:= new `java.lang.NullPointerException`;
  #L4f9caa.  v4:= "Subscription not set!" @kind object;
  #L4f9cae.  call `<init>`(v1, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9cb4.  v4:= 3I;
  #L4f9cb6.  v5:= v8.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9cba.  v6:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L4f9cbe.  call `onSubscribe`(v5, v6) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4f9cc4.  v5:= v8.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9cc8.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9ccc.  v7:= new `java.lang.Throwable`[v3];
  #L4f9cd0.  v7[v2]:= v9 @kind object;
  #L4f9cd4.  v7[v0]:= v1 @kind object;
  #L4f9cd8.  call `<init>`(v6, v7) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9cde.  call `onError`(v5, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f9ce4.  goto L4f9d0e;
  #L4f9ce6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9ce8.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9cee.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9cf2.  v4:= new `java.lang.Throwable`[v4];
  #L4f9cf6.  v4[v2]:= v9 @kind object;
  #L4f9cfa.  v4[v0]:= v1 @kind object;
  #L4f9cfe.  v4[v3]:= v5 @kind object;
  #L4f9d02.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9d08.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9d0e.  return @kind void;
  #L4f9d10.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9d12.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9d18.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9d1c.  v4:= new `java.lang.Throwable`[v4];
  #L4f9d20.  v4[v2]:= v9 @kind object;
  #L4f9d24.  v4[v0]:= v1 @kind object;
  #L4f9d28.  v4[v3]:= v5 @kind object;
  #L4f9d2c.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9d32.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9d38.  return @kind void;
  #L4f9d3a.  if v9 != 0 then goto L4f9d4c;
  #L4f9d3e.  v9:= new `java.lang.NullPointerException`;
  #L4f9d42.  v1:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L4f9d46.  call `<init>`(v9, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9d4c.  v1:= v8.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9d50.  call `onError`(v1, v9) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f9d56.  goto L4f9d7c;
  #L4f9d58.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9d5a.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9d60.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9d64.  v3:= new `java.lang.Throwable`[v3];
  #L4f9d68.  v3[v2]:= v9 @kind object;
  #L4f9d6c.  v3[v0]:= v1 @kind object;
  #L4f9d70.  call `<init>`(v4, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9d76.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9d7c.  return @kind void;
  catch `java.lang.Throwable` @[L4f9cb6..L4f9cc4] goto L4f9d10;
  catch `java.lang.Throwable` @[L4f9cc4..L4f9ce4] goto L4f9ce6;
  catch `java.lang.Throwable` @[L4f9d4c..L4f9d56] goto L4f9d58;
}
procedure `void` `onNext`(`io.reactivex.subscribers.SafeSubscriber` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f9db0.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` @kind boolean;
  #L4f9db4.  if v0 == 0 then goto L4f9dba;
  #L4f9db8.  return @kind void;
  #L4f9dba.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9dbe.  if v0 != 0 then goto L4f9dca;
  #L4f9dc2.  call `b`(v5) @signature `Lio/reactivex/subscribers/SafeSubscriber;.b:()V` @kind virtual;
  #L4f9dc8.  return @kind void;
  #L4f9dca.  v0:= 1I;
  #L4f9dcc.  v1:= 0I;
  #L4f9dce.  v2:= 2I;
  #L4f9dd0.  if v6 != 0 then goto L4f9e1a;
  #L4f9dd4.  v6:= new `java.lang.NullPointerException`;
  #L4f9dd8.  v3:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L4f9ddc.  call `<init>`(v6, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9de2.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9de6.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4f9dec.  call `onError`(v5, v6) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f9df2.  return @kind void;
  #L4f9df4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9df6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9dfc.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9e00.  v2:= new `java.lang.Throwable`[v2];
  #L4f9e04.  v2[v1]:= v6 @kind object;
  #L4f9e08.  v2[v0]:= v3 @kind object;
  #L4f9e0c.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9e12.  call `onError`(v5, v4) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f9e18.  return @kind void;
  #L4f9e1a.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9e1e.  call `onNext`(v3, v6) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f9e24.  goto L4f9e3e;
  #L4f9e26.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9e28.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9e2e.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9e32.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4f9e38.  call `onError`(v5, v6) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f9e3e.  return @kind void;
  #L4f9e40.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9e42.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9e48.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9e4c.  v2:= new `java.lang.Throwable`[v2];
  #L4f9e50.  v2[v1]:= v6 @kind object;
  #L4f9e54.  v2[v0]:= v3 @kind object;
  #L4f9e58.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9e5e.  call `onError`(v5, v4) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f9e64.  return @kind void;
  catch `java.lang.Throwable` @[L4f9de2..L4f9dec] goto L4f9df4;
  catch `java.lang.Throwable` @[L4f9e1a..L4f9e24] goto L4f9e26;
  catch `java.lang.Throwable` @[L4f9e2e..L4f9e38] goto L4f9e40;
}
procedure `void` `onSubscribe`(`io.reactivex.subscribers.SafeSubscriber` v5 @kind this, `org.reactivestreams.Subscription` v6 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f9f40.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9f44.  call temp:= `validate`(v0, v6) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4f9f4a.  v0:= temp;
  #L4f9f4c.  if v0 == 0 then goto L4f9fa4;
  #L4f9f50.  v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` := v6 @kind object;
  #L4f9f54.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f9f58.  call `onSubscribe`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4f9f5e.  goto L4f9fa4;
  #L4f9f60.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9f62.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9f68.  v1:= 1I;
  #L4f9f6a.  v5.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` := v1 @kind boolean;
  #L4f9f6e.  call `cancel`(v6) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4f9f74.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9f7a.  goto L4f9fa4;
  #L4f9f7c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9f7e.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9f84.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L4f9f88.  v3:= 2I;
  #L4f9f8a.  v3:= new `java.lang.Throwable`[v3];
  #L4f9f8e.  v4:= 0I;
  #L4f9f90.  v3[v4]:= v0 @kind object;
  #L4f9f94.  v3[v1]:= v6 @kind object;
  #L4f9f98.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f9f9e.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9fa4.  return @kind void;
  catch `java.lang.Throwable` @[L4f9f54..L4f9f5e] goto L4f9f60;
  catch `java.lang.Throwable` @[L4f9f6e..L4f9f74] goto L4f9f7c;
}
procedure `void` `request`(`io.reactivex.subscribers.SafeSubscriber` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/subscribers/SafeSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f9fd0.  v0:= v3.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9fd4.  call `request`(v0, v4) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4f9fda.  goto L4f9ff4;
  #L4f9fdc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9fde.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9fe4.  v5:= v3.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f9fe8.  call `cancel`(v5) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4f9fee.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9ff4.  return @kind void;
  #L4f9ff6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9ff8.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f9ffe.  v0:= new `io.reactivex.exceptions.CompositeException`;
  #L4fa002.  v1:= 2I;
  #L4fa004.  v1:= new `java.lang.Throwable`[v1];
  #L4fa008.  v2:= 0I;
  #L4fa00a.  v1[v2]:= v4 @kind object;
  #L4fa00e.  v4:= 1I;
  #L4fa010.  v1[v4]:= v5 @kind object;
  #L4fa014.  call `<init>`(v0, v1) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4fa01a.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4fa020.  return @kind void;
  catch `java.lang.Throwable` @[L4f9fd0..L4f9fda] goto L4f9fdc;
  catch `java.lang.Throwable` @[L4f9fe4..L4f9fee] goto L4f9ff6;
}
