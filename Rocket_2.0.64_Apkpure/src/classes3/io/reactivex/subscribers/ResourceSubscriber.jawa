record `io.reactivex.subscribers.ResourceSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.subscribers.ResourceSubscriber.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.disposables.ListCompositeDisposable` `io.reactivex.subscribers.ResourceSubscriber.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.subscribers.ResourceSubscriber.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.subscribers.ResourceSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f9a08.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f9a0e.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4f9a12.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4f9a18.  v1.`io.reactivex.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4f9a1c.  v0:= new `io.reactivex.internal.disposables.ListCompositeDisposable`;
  #L4f9a20.  call `<init>`(v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L4f9a26.  v1.`io.reactivex.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` := v0 @kind object;
  #L4f9a2a.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4f9a2e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4f9a34.  v1.`io.reactivex.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4f9a38.  return @kind void;
}
procedure `void` `add`(`io.reactivex.subscribers.ResourceSubscriber` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.add:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4f9a4c.  v0:= "resource is null" @kind object;
  #L4f9a50.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4f9a56.  v0:= v1.`io.reactivex.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L4f9a5a.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L4f9a60.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.subscribers.ResourceSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4f9a74.  v0:= v1.`io.reactivex.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f9a78.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4f9a7e.  v0:= temp;
  #L4f9a80.  if v0 == 0 then goto L4f9a8e;
  #L4f9a84.  v0:= v1.`io.reactivex.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L4f9a88.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.dispose:()V` @kind virtual;
  #L4f9a8e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.subscribers.ResourceSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4f99dc.  v0:= v1.`io.reactivex.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f99e0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4f99e6.  v0:= temp @kind object;
  #L4f99e8.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L4f99ec.  call temp:= `isCancelled`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.isCancelled:(Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4f99f2.  v0:= temp;
  #L4f99f4.  return v0;
}
procedure `void` `onStart`(`io.reactivex.subscribers.ResourceSubscriber` v2 @kind this) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.onStart:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4f9aa0.  v0:= 9223372036854775807L;
  #L4f9aaa.  call `request`(v2, v0) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.request:(J)V` @kind virtual;
  #L4f9ab0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.subscribers.ResourceSubscriber` v5 @kind this, `org.reactivestreams.Subscription` v6 @kind object) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f9ac4.  v0:= v5.`io.reactivex.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f9ac8.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f9ace.  v1:= temp @kind object;
  #L4f9ad0.  call temp:= `setOnce`(v0, v6, v1) @signature `Lio/reactivex/internal/util/EndConsumerHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z` @kind static;
  #L4f9ad6.  v0:= temp;
  #L4f9ad8.  if v0 == 0 then goto L4f9b00;
  #L4f9adc.  v0:= v5.`io.reactivex.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4f9ae0.  v1:= 0L;
  #L4f9ae4.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4f9aea.  v3:= temp @kind wide;
  #L4f9aec.  v0:= lcmp(v3, v1);
  #L4f9af0.  if v0 == 0 then goto L4f9afa;
  #L4f9af4.  call `request`(v6, v3) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4f9afa.  call `onStart`(v5) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.onStart:()V` @kind virtual;
  #L4f9b00.  return @kind void;
}
procedure `void` `request`(`io.reactivex.subscribers.ResourceSubscriber` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/subscribers/ResourceSubscriber;.request:(J)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L4f9b14.  v0:= v2.`io.reactivex.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f9b18.  v1:= v2.`io.reactivex.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4f9b1c.  call `deferredRequest`(v0, v1, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L4f9b22.  return @kind void;
}
