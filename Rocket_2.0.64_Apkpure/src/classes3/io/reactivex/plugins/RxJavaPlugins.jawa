record `io.reactivex.plugins.RxJavaPlugins` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.functions.Consumer` `@@io.reactivex.plugins.RxJavaPlugins.a` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.b` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.c` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.d` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.e` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.f` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.g` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.h` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.i` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.j` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.k` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.l` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.m` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.n` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.o` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.p` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.q` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.r` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.s` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.t` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.u` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.v` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.w` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BooleanSupplier` `@@io.reactivex.plugins.RxJavaPlugins.x` @AccessFlag STATIC_VOLATILE;
global `boolean` `@@io.reactivex.plugins.RxJavaPlugins.y` @AccessFlag STATIC_VOLATILE;
global `boolean` `@@io.reactivex.plugins.RxJavaPlugins.z` @AccessFlag STATIC_VOLATILE;
procedure `void` `<init>`(`io.reactivex.plugins.RxJavaPlugins` v2 @kind this) @signature `Lio/reactivex/plugins/RxJavaPlugins;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L45f2ec.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45f2f2.  v0:= new `java.lang.IllegalStateException`;
  #L45f2f6.  v1:= "No instances!" @kind object;
  #L45f2fa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f300.  throw v0;
}
procedure `java.lang.Object` `a`(`io.reactivex.functions.BiFunction` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L45f234.  call temp:= `apply`(v0, v1, v2) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45f23a.  v0:= temp @kind object;
  #L45f23c.  return v0 @kind object;
  #L45f23e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45f240.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L45f246.  v0:= temp @kind object;
  #L45f248.  throw v0;
  catch `java.lang.Throwable` @[L45f234..L45f23c] goto L45f23e;
}
procedure `java.lang.Object` `b`(`io.reactivex.functions.Function` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L45f268.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45f26e.  v0:= temp @kind object;
  #L45f270.  return v0 @kind object;
  #L45f272.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45f274.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L45f27a.  v0:= temp @kind object;
  #L45f27c.  throw v0;
  catch `java.lang.Throwable` @[L45f268..L45f270] goto L45f272;
}
procedure `io.reactivex.Scheduler` `c`(`io.reactivex.functions.Function` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag STATIC {
    temp;

  #L45ec8c.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ec92.  v0:= temp @kind object;
  #L45ec94.  v1:= "Scheduler Callable result can't be null" @kind object;
  #L45ec98.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45ec9e.  v0:= temp @kind object;
  #L45eca0.  v0:= (`io.reactivex.Scheduler`) v0 @kind object;
  #L45eca4.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `createComputationScheduler`(`java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.createComputationScheduler:(Ljava/util/concurrent/ThreadFactory;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45ecfc.  v0:= new `io.reactivex.internal.schedulers.ComputationScheduler`;
  #L45ed00.  v1:= "threadFactory is null" @kind object;
  #L45ed04.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45ed0a.  v2:= temp @kind object;
  #L45ed0c.  v2:= (`java.util.concurrent.ThreadFactory`) v2 @kind object;
  #L45ed10.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L45ed16.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `createIoScheduler`(`java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.createIoScheduler:(Ljava/util/concurrent/ThreadFactory;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45ed28.  v0:= new `io.reactivex.internal.schedulers.IoScheduler`;
  #L45ed2c.  v1:= "threadFactory is null" @kind object;
  #L45ed30.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45ed36.  v2:= temp @kind object;
  #L45ed38.  v2:= (`java.util.concurrent.ThreadFactory`) v2 @kind object;
  #L45ed3c.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/IoScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L45ed42.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `createNewThreadScheduler`(`java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.createNewThreadScheduler:(Ljava/util/concurrent/ThreadFactory;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45ed54.  v0:= new `io.reactivex.internal.schedulers.NewThreadScheduler`;
  #L45ed58.  v1:= "threadFactory is null" @kind object;
  #L45ed5c.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45ed62.  v2:= temp @kind object;
  #L45ed64.  v2:= (`java.util.concurrent.ThreadFactory`) v2 @kind object;
  #L45ed68.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/NewThreadScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L45ed6e.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `createSingleScheduler`(`java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.createSingleScheduler:(Ljava/util/concurrent/ThreadFactory;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45ed80.  v0:= new `io.reactivex.internal.schedulers.SingleScheduler`;
  #L45ed84.  v1:= "threadFactory is null" @kind object;
  #L45ed88.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45ed8e.  v2:= temp @kind object;
  #L45ed90.  v2:= (`java.util.concurrent.ThreadFactory`) v2 @kind object;
  #L45ed94.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/SingleScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L45ed9a.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `d`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag STATIC {
    temp;
    v0;

  #L45ecb8.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L45ecbe.  v1:= temp @kind object;
  #L45ecc0.  v0:= "Scheduler Callable result can't be null" @kind object;
  #L45ecc4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45ecca.  v1:= temp @kind object;
  #L45eccc.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L45ecd0.  return v1 @kind object;
  #L45ecd2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45ecd4.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L45ecda.  v1:= temp @kind object;
  #L45ecdc.  throw v1;
  catch `java.lang.Throwable` @[L45ecb8..L45ecd0] goto L45ecd2;
}
procedure `boolean` `e`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.e:(Ljava/lang/Throwable;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L45eab0.  v0:= instanceof @variable v2 @type ^`io.reactivex.exceptions.OnErrorNotImplementedException` @kind boolean;
  #L45eab4.  v1:= 1I;
  #L45eab6.  if v0 == 0 then goto L45eabc;
  #L45eaba.  return v1;
  #L45eabc.  v0:= instanceof @variable v2 @type ^`io.reactivex.exceptions.MissingBackpressureException` @kind boolean;
  #L45eac0.  if v0 == 0 then goto L45eac6;
  #L45eac4.  return v1;
  #L45eac6.  v0:= instanceof @variable v2 @type ^`java.lang.IllegalStateException` @kind boolean;
  #L45eaca.  if v0 == 0 then goto L45ead0;
  #L45eace.  return v1;
  #L45ead0.  v0:= instanceof @variable v2 @type ^`java.lang.NullPointerException` @kind boolean;
  #L45ead4.  if v0 == 0 then goto L45eada;
  #L45ead8.  return v1;
  #L45eada.  v0:= instanceof @variable v2 @type ^`java.lang.IllegalArgumentException` @kind boolean;
  #L45eade.  if v0 == 0 then goto L45eae4;
  #L45eae2.  return v1;
  #L45eae4.  v2:= instanceof @variable v2 @type ^`io.reactivex.exceptions.CompositeException` @kind boolean;
  #L45eae8.  if v2 == 0 then goto L45eaee;
  #L45eaec.  return v1;
  #L45eaee.  v2:= 0I;
  #L45eaf0.  return v2;
}
procedure `void` `f`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.f:(Ljava/lang/Throwable;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L45f8fc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L45f902.  v0:= temp @kind object;
  #L45f904.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L45f90a.  v1:= temp @kind object;
  #L45f90c.  call `uncaughtException`(v1, v0, v2) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L45f912.  return @kind void;
}
procedure `io.reactivex.functions.Function` `getComputationSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getComputationSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f04c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.g` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f050.  return v0 @kind object;
}
procedure `io.reactivex.functions.Consumer` `getErrorHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getErrorHandler:()Lio/reactivex/functions/Consumer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f034.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.a` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L45f038.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getInitComputationSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getInitComputationSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f064.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f068.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getInitIoSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getInitIoSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f07c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.e` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f080.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getInitNewThreadSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getInitNewThreadSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f094.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.f` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f098.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getInitSingleSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getInitSingleSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f0ac.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.d` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f0b0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getIoSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getIoSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f0c4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.i` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f0c8.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getNewThreadSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getNewThreadSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f0dc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.j` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f0e0.  return v0 @kind object;
}
procedure `io.reactivex.functions.BooleanSupplier` `getOnBeforeBlocking`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnBeforeBlocking:()Lio/reactivex/functions/BooleanSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f01c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.x` @type ^`io.reactivex.functions.BooleanSupplier` @kind object;
  #L45f020.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnCompletableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnCompletableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f0f4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.q` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f0f8.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnCompletableSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnCompletableSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45efa4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.w` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45efa8.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnConnectableFlowableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnConnectableFlowableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f10c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.l` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f110.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnConnectableObservableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnConnectableObservableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f124.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.n` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f128.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnFlowableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnFlowableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f13c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.k` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f140.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnFlowableSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnFlowableSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45efbc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.s` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45efc0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnMaybeAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnMaybeAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f154.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.o` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f158.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnMaybeSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnMaybeSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45efd4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.t` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45efd8.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnObservableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnObservableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f16c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.m` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f170.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnObservableSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnObservableSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45efec.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.u` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45eff0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnParallelAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnParallelAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f184.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.r` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f188.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnSingleAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnSingleAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f19c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.p` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f1a0.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnSingleSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnSingleSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f004.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.v` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45f008.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getScheduleHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getScheduleHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f1b4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f1b8.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getSingleSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getSingleSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f1cc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.h` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f1d0.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `initComputationScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initComputationScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45edac.  v0:= "Scheduler Callable can't be null" @kind object;
  #L45edb0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45edb6.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L45edba.  if v0 != 0 then goto L45edc8;
  #L45edbe.  call temp:= `d`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L45edc4.  v1:= temp @kind object;
  #L45edc6.  return v1 @kind object;
  #L45edc8.  call temp:= `c`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L45edce.  v1:= temp @kind object;
  #L45edd0.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `initIoScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initIoScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ede4.  v0:= "Scheduler Callable can't be null" @kind object;
  #L45ede8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45edee.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.e` @type ^`io.reactivex.functions.Function` @kind object;
  #L45edf2.  if v0 != 0 then goto L45ee00;
  #L45edf6.  call temp:= `d`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L45edfc.  v1:= temp @kind object;
  #L45edfe.  return v1 @kind object;
  #L45ee00.  call temp:= `c`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L45ee06.  v1:= temp @kind object;
  #L45ee08.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `initNewThreadScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initNewThreadScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ee1c.  v0:= "Scheduler Callable can't be null" @kind object;
  #L45ee20.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45ee26.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.f` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ee2a.  if v0 != 0 then goto L45ee38;
  #L45ee2e.  call temp:= `d`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L45ee34.  v1:= temp @kind object;
  #L45ee36.  return v1 @kind object;
  #L45ee38.  call temp:= `c`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L45ee3e.  v1:= temp @kind object;
  #L45ee40.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `initSingleScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initSingleScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ee54.  v0:= "Scheduler Callable can't be null" @kind object;
  #L45ee58.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45ee5e.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.d` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ee62.  if v0 != 0 then goto L45ee70;
  #L45ee66.  call temp:= `d`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L45ee6c.  v1:= temp @kind object;
  #L45ee6e.  return v1 @kind object;
  #L45ee70.  call temp:= `c`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L45ee76.  v1:= temp @kind object;
  #L45ee78.  return v1 @kind object;
}
procedure `boolean` `isFailOnNonBlockingScheduler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.isFailOnNonBlockingScheduler:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eb04.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.z` @type ^`boolean` @kind boolean;
  #L45eb08.  return v0;
}
procedure `boolean` `isLockdown`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.isLockdown:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eb1c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45eb20.  return v0;
}
procedure `void` `lockdown`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.lockdown:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f314.  v0:= 1I;
  #L45f316.  `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` := v0 @kind boolean;
  #L45f31a.  return @kind void;
}
procedure `io.reactivex.Completable` `onAssembly`(`io.reactivex.Completable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eb74.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.q` @type ^`io.reactivex.functions.Function` @kind object;
  #L45eb78.  if v0 == 0 then goto L45eb88;
  #L45eb7c.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45eb82.  v1:= temp @kind object;
  #L45eb84.  v1:= (`io.reactivex.Completable`) v1 @kind object;
  #L45eb88.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `onAssembly`(`io.reactivex.Flowable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ebc4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.k` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ebc8.  if v0 == 0 then goto L45ebd8;
  #L45ebcc.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ebd2.  v1:= temp @kind object;
  #L45ebd4.  v1:= (`io.reactivex.Flowable`) v1 @kind object;
  #L45ebd8.  return v1 @kind object;
}
procedure `io.reactivex.Maybe` `onAssembly`(`io.reactivex.Maybe` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ebec.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.o` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ebf0.  if v0 == 0 then goto L45ec00;
  #L45ebf4.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ebfa.  v1:= temp @kind object;
  #L45ebfc.  v1:= (`io.reactivex.Maybe`) v1 @kind object;
  #L45ec00.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `onAssembly`(`io.reactivex.Observable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ec3c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.m` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ec40.  if v0 == 0 then goto L45ec50;
  #L45ec44.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ec4a.  v1:= temp @kind object;
  #L45ec4c.  v1:= (`io.reactivex.Observable`) v1 @kind object;
  #L45ec50.  return v1 @kind object;
}
procedure `io.reactivex.Single` `onAssembly`(`io.reactivex.Single` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ef2c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.p` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ef30.  if v0 == 0 then goto L45ef40;
  #L45ef34.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ef3a.  v1:= temp @kind object;
  #L45ef3c.  v1:= (`io.reactivex.Single`) v1 @kind object;
  #L45ef40.  return v1 @kind object;
}
procedure `io.reactivex.flowables.ConnectableFlowable` `onAssembly`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/flowables/ConnectableFlowable;)Lio/reactivex/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ef7c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.l` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ef80.  if v0 == 0 then goto L45ef90;
  #L45ef84.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ef8a.  v1:= temp @kind object;
  #L45ef8c.  v1:= (`io.reactivex.flowables.ConnectableFlowable`) v1 @kind object;
  #L45ef90.  return v1 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `onAssembly`(`io.reactivex.observables.ConnectableObservable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/observables/ConnectableObservable;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f1e4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.n` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f1e8.  if v0 == 0 then goto L45f1f8;
  #L45f1ec.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45f1f2.  v1:= temp @kind object;
  #L45f1f4.  v1:= (`io.reactivex.observables.ConnectableObservable`) v1 @kind object;
  #L45f1f8.  return v1 @kind object;
}
procedure `io.reactivex.parallel.ParallelFlowable` `onAssembly`(`io.reactivex.parallel.ParallelFlowable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/parallel/ParallelFlowable;)Lio/reactivex/parallel/ParallelFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f20c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.r` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f210.  if v0 == 0 then goto L45f220;
  #L45f214.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45f21a.  v1:= temp @kind object;
  #L45f21c.  v1:= (`io.reactivex.parallel.ParallelFlowable`) v1 @kind object;
  #L45f220.  return v1 @kind object;
}
procedure `boolean` `onBeforeBlocking`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.onBeforeBlocking:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eb34.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.x` @type ^`io.reactivex.functions.BooleanSupplier` @kind object;
  #L45eb38.  if v0 == 0 then goto L45eb52;
  #L45eb3c.  call temp:= `getAsBoolean`(v0) @signature `Lio/reactivex/functions/BooleanSupplier;.getAsBoolean:()Z` @kind interface;
  #L45eb42.  v0:= temp;
  #L45eb44.  return v0;
  #L45eb46.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45eb48.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L45eb4e.  v0:= temp @kind object;
  #L45eb50.  throw v0;
  #L45eb52.  v0:= 0I;
  #L45eb54.  return v0;
  catch `java.lang.Throwable` @[L45eb3c..L45eb44] goto L45eb46;
}
procedure `io.reactivex.Scheduler` `onComputationScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onComputationScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ee8c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.g` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ee90.  if v0 != 0 then goto L45ee96;
  #L45ee94.  return v1 @kind object;
  #L45ee96.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ee9c.  v1:= temp @kind object;
  #L45ee9e.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L45eea2.  return v1 @kind object;
}
procedure `void` `onError`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45f32c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.a` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L45f330.  if v2 != 0 then goto L45f344;
  #L45f334.  v2:= new `java.lang.NullPointerException`;
  #L45f338.  v1:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L45f33c.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f342.  goto L45f35c;
  #L45f344.  call temp:= `e`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.e:(Ljava/lang/Throwable;)Z` @kind static;
  #L45f34a.  v1:= temp;
  #L45f34c.  if v1 != 0 then goto L45f35c;
  #L45f350.  v1:= new `io.reactivex.exceptions.UndeliverableException`;
  #L45f354.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/UndeliverableException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L45f35a.  v2:= v1 @kind object;
  #L45f35c.  if v0 == 0 then goto L45f376;
  #L45f360.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L45f366.  return @kind void;
  #L45f368.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45f36a.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L45f370.  call `f`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.f:(Ljava/lang/Throwable;)V` @kind static;
  #L45f376.  call `printStackTrace`(v2) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L45f37c.  call `f`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.f:(Ljava/lang/Throwable;)V` @kind static;
  #L45f382.  return @kind void;
  catch `java.lang.Throwable` @[L45f360..L45f366] goto L45f368;
}
procedure `io.reactivex.Scheduler` `onIoScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onIoScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eeb4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.i` @type ^`io.reactivex.functions.Function` @kind object;
  #L45eeb8.  if v0 != 0 then goto L45eebe;
  #L45eebc.  return v1 @kind object;
  #L45eebe.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45eec4.  v1:= temp @kind object;
  #L45eec6.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L45eeca.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `onNewThreadScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onNewThreadScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eedc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.j` @type ^`io.reactivex.functions.Function` @kind object;
  #L45eee0.  if v0 != 0 then goto L45eee6;
  #L45eee4.  return v1 @kind object;
  #L45eee6.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45eeec.  v1:= temp @kind object;
  #L45eeee.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L45eef2.  return v1 @kind object;
}
procedure `java.lang.Runnable` `onSchedule`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f29c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L45f2a0.  if v0 != 0 then goto L45f2a6;
  #L45f2a4.  return v1 @kind object;
  #L45f2a6.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45f2ac.  v1:= temp @kind object;
  #L45f2ae.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L45f2b2.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `onSingleScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSingleScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ef04.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.h` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ef08.  if v0 != 0 then goto L45ef0e;
  #L45ef0c.  return v1 @kind object;
  #L45ef0e.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ef14.  v1:= temp @kind object;
  #L45ef16.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L45ef1a.  return v1 @kind object;
}
procedure `io.reactivex.CompletableObserver` `onSubscribe`(`io.reactivex.Completable` v1 @kind object, `io.reactivex.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Completable;Lio/reactivex/CompletableObserver;)Lio/reactivex/CompletableObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eb9c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.w` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45eba0.  if v0 == 0 then goto L45ebb2;
  #L45eba4.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ebaa.  v1:= temp @kind object;
  #L45ebac.  v1:= (`io.reactivex.CompletableObserver`) v1 @kind object;
  #L45ebb0.  return v1 @kind object;
  #L45ebb2.  return v2 @kind object;
}
procedure `io.reactivex.MaybeObserver` `onSubscribe`(`io.reactivex.Maybe` v1 @kind object, `io.reactivex.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Maybe;Lio/reactivex/MaybeObserver;)Lio/reactivex/MaybeObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ec14.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.t` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45ec18.  if v0 == 0 then goto L45ec2a;
  #L45ec1c.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ec22.  v1:= temp @kind object;
  #L45ec24.  v1:= (`io.reactivex.MaybeObserver`) v1 @kind object;
  #L45ec28.  return v1 @kind object;
  #L45ec2a.  return v2 @kind object;
}
procedure `io.reactivex.Observer` `onSubscribe`(`io.reactivex.Observable` v1 @kind object, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Observable;Lio/reactivex/Observer;)Lio/reactivex/Observer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ec64.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.u` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45ec68.  if v0 == 0 then goto L45ec7a;
  #L45ec6c.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ec72.  v1:= temp @kind object;
  #L45ec74.  v1:= (`io.reactivex.Observer`) v1 @kind object;
  #L45ec78.  return v1 @kind object;
  #L45ec7a.  return v2 @kind object;
}
procedure `io.reactivex.SingleObserver` `onSubscribe`(`io.reactivex.Single` v1 @kind object, `io.reactivex.SingleObserver` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Single;Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ef54.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.v` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45ef58.  if v0 == 0 then goto L45ef6a;
  #L45ef5c.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45ef62.  v1:= temp @kind object;
  #L45ef64.  v1:= (`io.reactivex.SingleObserver`) v1 @kind object;
  #L45ef68.  return v1 @kind object;
  #L45ef6a.  return v2 @kind object;
}
procedure `org.reactivestreams.Subscriber` `onSubscribe`(`io.reactivex.Flowable` v1 @kind object, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Flowable;Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f2c4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.s` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L45f2c8.  if v0 == 0 then goto L45f2da;
  #L45f2cc.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45f2d2.  v1:= temp @kind object;
  #L45f2d4.  v1:= (`org.reactivestreams.Subscriber`) v1 @kind object;
  #L45f2d8.  return v1 @kind object;
  #L45f2da.  return v2 @kind object;
}
procedure `void` `reset`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.reset:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45f3a0.  v0:= 0I;
  #L45f3a2.  call `setErrorHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setErrorHandler:(Lio/reactivex/functions/Consumer;)V` @kind static;
  #L45f3a8.  call `setScheduleHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setScheduleHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3ae.  call `setComputationSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setComputationSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3b4.  call `setInitComputationSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitComputationSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3ba.  call `setIoSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setIoSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3c0.  call `setInitIoSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitIoSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3c6.  call `setSingleSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setSingleSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3cc.  call `setInitSingleSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitSingleSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3d2.  call `setNewThreadSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setNewThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3d8.  call `setInitNewThreadSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitNewThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3de.  call `setOnFlowableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnFlowableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3e4.  call `setOnFlowableSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnFlowableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L45f3ea.  call `setOnObservableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnObservableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3f0.  call `setOnObservableSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnObservableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L45f3f6.  call `setOnSingleAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnSingleAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f3fc.  call `setOnSingleSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnSingleSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L45f402.  call `setOnCompletableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnCompletableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f408.  call `setOnCompletableSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnCompletableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L45f40e.  call `setOnConnectableFlowableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnConnectableFlowableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f414.  call `setOnConnectableObservableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnConnectableObservableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f41a.  call `setOnMaybeAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnMaybeAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f420.  call `setOnMaybeSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnMaybeSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L45f426.  call `setOnParallelAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnParallelAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L45f42c.  v1:= 0I;
  #L45f42e.  call `setFailOnNonBlockingScheduler`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setFailOnNonBlockingScheduler:(Z)V` @kind static;
  #L45f434.  call `setOnBeforeBlocking`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnBeforeBlocking:(Lio/reactivex/functions/BooleanSupplier;)V` @kind static;
  #L45f43a.  return @kind void;
}
procedure `void` `setComputationSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setComputationSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f44c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f450.  if v0 != 0 then goto L45f45a;
  #L45f454.  `@@io.reactivex.plugins.RxJavaPlugins.g` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f458.  return @kind void;
  #L45f45a.  v1:= new `java.lang.IllegalStateException`;
  #L45f45e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f462.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f468.  throw v1;
}
procedure `void` `setErrorHandler`(`io.reactivex.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setErrorHandler:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f47c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f480.  if v0 != 0 then goto L45f48a;
  #L45f484.  `@@io.reactivex.plugins.RxJavaPlugins.a` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L45f488.  return @kind void;
  #L45f48a.  v1:= new `java.lang.IllegalStateException`;
  #L45f48e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f492.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f498.  throw v1;
}
procedure `void` `setFailOnNonBlockingScheduler`(`boolean` v1 ) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setFailOnNonBlockingScheduler:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f4ac.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f4b0.  if v0 != 0 then goto L45f4ba;
  #L45f4b4.  `@@io.reactivex.plugins.RxJavaPlugins.z` @type ^`boolean` := v1 @kind boolean;
  #L45f4b8.  return @kind void;
  #L45f4ba.  v1:= new `java.lang.IllegalStateException`;
  #L45f4be.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f4c2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f4c8.  throw v1;
}
procedure `void` `setInitComputationSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitComputationSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f4dc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f4e0.  if v0 != 0 then goto L45f4ea;
  #L45f4e4.  `@@io.reactivex.plugins.RxJavaPlugins.c` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f4e8.  return @kind void;
  #L45f4ea.  v1:= new `java.lang.IllegalStateException`;
  #L45f4ee.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f4f2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f4f8.  throw v1;
}
procedure `void` `setInitIoSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitIoSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f50c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f510.  if v0 != 0 then goto L45f51a;
  #L45f514.  `@@io.reactivex.plugins.RxJavaPlugins.e` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f518.  return @kind void;
  #L45f51a.  v1:= new `java.lang.IllegalStateException`;
  #L45f51e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f522.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f528.  throw v1;
}
procedure `void` `setInitNewThreadSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitNewThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f53c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f540.  if v0 != 0 then goto L45f54a;
  #L45f544.  `@@io.reactivex.plugins.RxJavaPlugins.f` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f548.  return @kind void;
  #L45f54a.  v1:= new `java.lang.IllegalStateException`;
  #L45f54e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f552.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f558.  throw v1;
}
procedure `void` `setInitSingleSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitSingleSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f56c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f570.  if v0 != 0 then goto L45f57a;
  #L45f574.  `@@io.reactivex.plugins.RxJavaPlugins.d` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f578.  return @kind void;
  #L45f57a.  v1:= new `java.lang.IllegalStateException`;
  #L45f57e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f582.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f588.  throw v1;
}
procedure `void` `setIoSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setIoSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f59c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f5a0.  if v0 != 0 then goto L45f5aa;
  #L45f5a4.  `@@io.reactivex.plugins.RxJavaPlugins.i` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f5a8.  return @kind void;
  #L45f5aa.  v1:= new `java.lang.IllegalStateException`;
  #L45f5ae.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f5b2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f5b8.  throw v1;
}
procedure `void` `setNewThreadSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setNewThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f5cc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f5d0.  if v0 != 0 then goto L45f5da;
  #L45f5d4.  `@@io.reactivex.plugins.RxJavaPlugins.j` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f5d8.  return @kind void;
  #L45f5da.  v1:= new `java.lang.IllegalStateException`;
  #L45f5de.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f5e2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f5e8.  throw v1;
}
procedure `void` `setOnBeforeBlocking`(`io.reactivex.functions.BooleanSupplier` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnBeforeBlocking:(Lio/reactivex/functions/BooleanSupplier;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f5fc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f600.  if v0 != 0 then goto L45f60a;
  #L45f604.  `@@io.reactivex.plugins.RxJavaPlugins.x` @type ^`io.reactivex.functions.BooleanSupplier` := v1 @kind object;
  #L45f608.  return @kind void;
  #L45f60a.  v1:= new `java.lang.IllegalStateException`;
  #L45f60e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f612.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f618.  throw v1;
}
procedure `void` `setOnCompletableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnCompletableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f62c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f630.  if v0 != 0 then goto L45f63a;
  #L45f634.  `@@io.reactivex.plugins.RxJavaPlugins.q` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f638.  return @kind void;
  #L45f63a.  v1:= new `java.lang.IllegalStateException`;
  #L45f63e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f642.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f648.  throw v1;
}
procedure `void` `setOnCompletableSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnCompletableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f65c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f660.  if v0 != 0 then goto L45f66a;
  #L45f664.  `@@io.reactivex.plugins.RxJavaPlugins.w` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L45f668.  return @kind void;
  #L45f66a.  v1:= new `java.lang.IllegalStateException`;
  #L45f66e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f672.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f678.  throw v1;
}
procedure `void` `setOnConnectableFlowableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnConnectableFlowableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f68c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f690.  if v0 != 0 then goto L45f69a;
  #L45f694.  `@@io.reactivex.plugins.RxJavaPlugins.l` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f698.  return @kind void;
  #L45f69a.  v1:= new `java.lang.IllegalStateException`;
  #L45f69e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f6a2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f6a8.  throw v1;
}
procedure `void` `setOnConnectableObservableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnConnectableObservableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f6bc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f6c0.  if v0 != 0 then goto L45f6ca;
  #L45f6c4.  `@@io.reactivex.plugins.RxJavaPlugins.n` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f6c8.  return @kind void;
  #L45f6ca.  v1:= new `java.lang.IllegalStateException`;
  #L45f6ce.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f6d2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f6d8.  throw v1;
}
procedure `void` `setOnFlowableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnFlowableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f6ec.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f6f0.  if v0 != 0 then goto L45f6fa;
  #L45f6f4.  `@@io.reactivex.plugins.RxJavaPlugins.k` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f6f8.  return @kind void;
  #L45f6fa.  v1:= new `java.lang.IllegalStateException`;
  #L45f6fe.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f702.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f708.  throw v1;
}
procedure `void` `setOnFlowableSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnFlowableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f71c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f720.  if v0 != 0 then goto L45f72a;
  #L45f724.  `@@io.reactivex.plugins.RxJavaPlugins.s` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L45f728.  return @kind void;
  #L45f72a.  v1:= new `java.lang.IllegalStateException`;
  #L45f72e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f732.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f738.  throw v1;
}
procedure `void` `setOnMaybeAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnMaybeAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f74c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f750.  if v0 != 0 then goto L45f75a;
  #L45f754.  `@@io.reactivex.plugins.RxJavaPlugins.o` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f758.  return @kind void;
  #L45f75a.  v1:= new `java.lang.IllegalStateException`;
  #L45f75e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f762.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f768.  throw v1;
}
procedure `void` `setOnMaybeSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnMaybeSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f77c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f780.  if v0 != 0 then goto L45f78a;
  #L45f784.  `@@io.reactivex.plugins.RxJavaPlugins.t` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L45f788.  return @kind void;
  #L45f78a.  v1:= new `java.lang.IllegalStateException`;
  #L45f78e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f792.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f798.  throw v1;
}
procedure `void` `setOnObservableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnObservableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f7ac.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f7b0.  if v0 != 0 then goto L45f7ba;
  #L45f7b4.  `@@io.reactivex.plugins.RxJavaPlugins.m` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f7b8.  return @kind void;
  #L45f7ba.  v1:= new `java.lang.IllegalStateException`;
  #L45f7be.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f7c2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f7c8.  throw v1;
}
procedure `void` `setOnObservableSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnObservableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f7dc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f7e0.  if v0 != 0 then goto L45f7ea;
  #L45f7e4.  `@@io.reactivex.plugins.RxJavaPlugins.u` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L45f7e8.  return @kind void;
  #L45f7ea.  v1:= new `java.lang.IllegalStateException`;
  #L45f7ee.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f7f2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f7f8.  throw v1;
}
procedure `void` `setOnParallelAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnParallelAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f80c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f810.  if v0 != 0 then goto L45f81a;
  #L45f814.  `@@io.reactivex.plugins.RxJavaPlugins.r` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f818.  return @kind void;
  #L45f81a.  v1:= new `java.lang.IllegalStateException`;
  #L45f81e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f822.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f828.  throw v1;
}
procedure `void` `setOnSingleAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnSingleAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f83c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f840.  if v0 != 0 then goto L45f84a;
  #L45f844.  `@@io.reactivex.plugins.RxJavaPlugins.p` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f848.  return @kind void;
  #L45f84a.  v1:= new `java.lang.IllegalStateException`;
  #L45f84e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f852.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f858.  throw v1;
}
procedure `void` `setOnSingleSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnSingleSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f86c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f870.  if v0 != 0 then goto L45f87a;
  #L45f874.  `@@io.reactivex.plugins.RxJavaPlugins.v` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L45f878.  return @kind void;
  #L45f87a.  v1:= new `java.lang.IllegalStateException`;
  #L45f87e.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f882.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f888.  throw v1;
}
procedure `void` `setScheduleHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setScheduleHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f89c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f8a0.  if v0 != 0 then goto L45f8aa;
  #L45f8a4.  `@@io.reactivex.plugins.RxJavaPlugins.b` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f8a8.  return @kind void;
  #L45f8aa.  v1:= new `java.lang.IllegalStateException`;
  #L45f8ae.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f8b2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f8b8.  throw v1;
}
procedure `void` `setSingleSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setSingleSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f8cc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L45f8d0.  if v0 != 0 then goto L45f8da;
  #L45f8d4.  `@@io.reactivex.plugins.RxJavaPlugins.h` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L45f8d8.  return @kind void;
  #L45f8da.  v1:= new `java.lang.IllegalStateException`;
  #L45f8de.  v0:= "Plugins can't be changed anymore" @kind object;
  #L45f8e2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f8e8.  throw v1;
}
