record `io.reactivex.disposables.SerialDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.disposables.SerialDisposable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/SerialDisposable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4010b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4010b6.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4010ba.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4010c0.  v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4010c4.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.disposables.SerialDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/disposables/SerialDisposable;.<init>:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4010d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4010de.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4010e2.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4010e8.  v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4010ec.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/SerialDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401100.  v0:= v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L401104.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L40110a.  return @kind void;
}
procedure `io.reactivex.disposables.Disposable` `get`(`io.reactivex.disposables.SerialDisposable` v2 @kind this) @signature `Lio/reactivex/disposables/SerialDisposable;.get:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40107c.  v0:= v2.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L401080.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L401086.  v0:= temp @kind object;
  #L401088.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L40108c.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L401090.  if v0 != v1 then goto L40109c;
  #L401094.  call temp:= `disposed`() @signature `Lio/reactivex/disposables/Disposables;.disposed:()Lio/reactivex/disposables/Disposable;` @kind static;
  #L40109a.  v0:= temp @kind object;
  #L40109c.  return v0 @kind object;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/SerialDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401010.  v0:= v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L401014.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L40101a.  v0:= temp @kind object;
  #L40101c.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L401020.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L401026.  v0:= temp;
  #L401028.  return v0;
}
procedure `boolean` `replace`(`io.reactivex.disposables.SerialDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/disposables/SerialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40103c.  v0:= v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L401040.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L401046.  v2:= temp;
  #L401048.  return v2;
}
procedure `boolean` `set`(`io.reactivex.disposables.SerialDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/disposables/SerialDisposable;.set:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40105c.  v0:= v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L401060.  call temp:= `set`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L401066.  v2:= temp;
  #L401068.  return v2;
}
