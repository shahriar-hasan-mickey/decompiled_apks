record `io.reactivex.BackpressureStrategy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.BUFFER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.DROP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.LATEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.MISSING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy`[] `@@io.reactivex.BackpressureStrategy.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/BackpressureStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3ee518.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L3ee51c.  v1:= "MISSING" @kind object;
  #L3ee520.  v2:= 0I;
  #L3ee522.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ee528.  `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L3ee52c.  v1:= new `io.reactivex.BackpressureStrategy`;
  #L3ee530.  v3:= "ERROR" @kind object;
  #L3ee534.  v4:= 1I;
  #L3ee536.  call `<init>`(v1, v3, v4) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ee53c.  `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` := v1 @kind object;
  #L3ee540.  v3:= new `io.reactivex.BackpressureStrategy`;
  #L3ee544.  v5:= "BUFFER" @kind object;
  #L3ee548.  v6:= 2I;
  #L3ee54a.  call `<init>`(v3, v5, v6) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ee550.  `@@io.reactivex.BackpressureStrategy.BUFFER` @type ^`io.reactivex.BackpressureStrategy` := v3 @kind object;
  #L3ee554.  v5:= new `io.reactivex.BackpressureStrategy`;
  #L3ee558.  v7:= "DROP" @kind object;
  #L3ee55c.  v8:= 3I;
  #L3ee55e.  call `<init>`(v5, v7, v8) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ee564.  `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` := v5 @kind object;
  #L3ee568.  v7:= new `io.reactivex.BackpressureStrategy`;
  #L3ee56c.  v9:= "LATEST" @kind object;
  #L3ee570.  v10:= 4I;
  #L3ee572.  call `<init>`(v7, v9, v10) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ee578.  `@@io.reactivex.BackpressureStrategy.LATEST` @type ^`io.reactivex.BackpressureStrategy` := v7 @kind object;
  #L3ee57c.  v9:= 5I;
  #L3ee57e.  v9:= new `io.reactivex.BackpressureStrategy`[v9];
  #L3ee582.  v9[v2]:= v0 @kind object;
  #L3ee586.  v9[v4]:= v1 @kind object;
  #L3ee58a.  v9[v6]:= v3 @kind object;
  #L3ee58e.  v9[v8]:= v5 @kind object;
  #L3ee592.  v9[v10]:= v7 @kind object;
  #L3ee596.  `@@io.reactivex.BackpressureStrategy.a` @type ^`io.reactivex.BackpressureStrategy`[] := v9 @kind object;
  #L3ee59a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.BackpressureStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ee5ac.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ee5b2.  return @kind void;
}
procedure `io.reactivex.BackpressureStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/BackpressureStrategy;.valueOf:(Ljava/lang/String;)Lio/reactivex/BackpressureStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ee4d0.  v0:= constclass @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3ee4d4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3ee4da.  v1:= temp @kind object;
  #L3ee4dc.  v1:= (`io.reactivex.BackpressureStrategy`) v1 @kind object;
  #L3ee4e0.  return v1 @kind object;
}
procedure `io.reactivex.BackpressureStrategy`[] `values`() @signature `Lio/reactivex/BackpressureStrategy;.values:()[Lio/reactivex/BackpressureStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ee4f4.  v0:= `@@io.reactivex.BackpressureStrategy.a` @type ^`io.reactivex.BackpressureStrategy`[] @kind object;
  #L3ee4f8.  call temp:= `clone`(v0) @signature `[Lio/reactivex/BackpressureStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3ee4fe.  v0:= temp @kind object;
  #L3ee500.  v0:= (`io.reactivex.BackpressureStrategy`[]) v0 @kind object;
  #L3ee504.  return v0 @kind object;
}
