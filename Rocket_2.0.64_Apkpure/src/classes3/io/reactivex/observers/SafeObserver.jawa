record `io.reactivex.observers.SafeObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.observers.SafeObserver.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.observers.SafeObserver.b` @AccessFlag ;
  `boolean` `io.reactivex.observers.SafeObserver.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.observers.SafeObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/observers/SafeObserver;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45d118.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45d11e.  v0.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L45d122.  return @kind void;
}
procedure `void` `a`(`io.reactivex.observers.SafeObserver` v6 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45d1a8.  v0:= new `java.lang.NullPointerException`;
  #L45d1ac.  v1:= "Subscription not set!" @kind object;
  #L45d1b0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45d1b6.  v1:= 1I;
  #L45d1b8.  v2:= 0I;
  #L45d1ba.  v3:= 2I;
  #L45d1bc.  v4:= v6.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d1c0.  v5:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L45d1c4.  call `onSubscribe`(v4, v5) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L45d1ca.  v4:= v6.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d1ce.  call `onError`(v4, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45d1d4.  goto L45d1fa;
  #L45d1d6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d1d8.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d1de.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L45d1e2.  v3:= new `java.lang.Throwable`[v3];
  #L45d1e6.  v3[v2]:= v0 @kind object;
  #L45d1ea.  v3[v1]:= v4 @kind object;
  #L45d1ee.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d1f4.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d1fa.  return @kind void;
  #L45d1fc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d1fe.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d204.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L45d208.  v3:= new `java.lang.Throwable`[v3];
  #L45d20c.  v3[v2]:= v0 @kind object;
  #L45d210.  v3[v1]:= v4 @kind object;
  #L45d214.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d21a.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d220.  return @kind void;
  catch `java.lang.Throwable` @[L45d1bc..L45d1ca] goto L45d1fc;
  catch `java.lang.Throwable` @[L45d1ca..L45d1d4] goto L45d1d6;
}
procedure `void` `b`(`io.reactivex.observers.SafeObserver` v6 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45d460.  v0:= 1I;
  #L45d462.  v6.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` := v0 @kind boolean;
  #L45d466.  v1:= new `java.lang.NullPointerException`;
  #L45d46a.  v2:= "Subscription not set!" @kind object;
  #L45d46e.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45d474.  v2:= 0I;
  #L45d476.  v3:= 2I;
  #L45d478.  v4:= v6.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d47c.  v5:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L45d480.  call `onSubscribe`(v4, v5) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L45d486.  v4:= v6.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d48a.  call `onError`(v4, v1) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45d490.  goto L45d4b6;
  #L45d492.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d494.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d49a.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L45d49e.  v3:= new `java.lang.Throwable`[v3];
  #L45d4a2.  v3[v2]:= v1 @kind object;
  #L45d4a6.  v3[v0]:= v4 @kind object;
  #L45d4aa.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d4b0.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d4b6.  return @kind void;
  #L45d4b8.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d4ba.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d4c0.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L45d4c4.  v3:= new `java.lang.Throwable`[v3];
  #L45d4c8.  v3[v2]:= v1 @kind object;
  #L45d4cc.  v3[v0]:= v4 @kind object;
  #L45d4d0.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d4d6.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d4dc.  return @kind void;
  catch `java.lang.Throwable` @[L45d478..L45d486] goto L45d4b8;
  catch `java.lang.Throwable` @[L45d486..L45d490] goto L45d492;
}
procedure `void` `dispose`(`io.reactivex.observers.SafeObserver` v1 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d134.  v0:= v1.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d138.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45d13e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.observers.SafeObserver` v1 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d0f8.  v0:= v1.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d0fc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L45d102.  v0:= temp;
  #L45d104.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.observers.SafeObserver` v1 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d150.  v0:= v1.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` @kind boolean;
  #L45d154.  if v0 == 0 then goto L45d15a;
  #L45d158.  return @kind void;
  #L45d15a.  v0:= 1I;
  #L45d15c.  v1.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` := v0 @kind boolean;
  #L45d160.  v0:= v1.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d164.  if v0 != 0 then goto L45d170;
  #L45d168.  call `a`(v1) @signature `Lio/reactivex/observers/SafeObserver;.a:()V` @kind virtual;
  #L45d16e.  return @kind void;
  #L45d170.  v0:= v1.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d174.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L45d17a.  goto L45d18a;
  #L45d17c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d17e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d184.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d18a.  return @kind void;
  catch `java.lang.Throwable` @[L45d170..L45d17a] goto L45d17c;
}
procedure `void` `onError`(`io.reactivex.observers.SafeObserver` v8 @kind this, `java.lang.Throwable` v9 @kind object) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L45d24c.  v0:= v8.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` @kind boolean;
  #L45d250.  if v0 == 0 then goto L45d25c;
  #L45d254.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d25a.  return @kind void;
  #L45d25c.  v0:= 1I;
  #L45d25e.  v8.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` := v0 @kind boolean;
  #L45d262.  v1:= v8.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d266.  v2:= 0I;
  #L45d268.  v3:= 2I;
  #L45d26a.  if v1 != 0 then goto L45d302;
  #L45d26e.  v1:= new `java.lang.NullPointerException`;
  #L45d272.  v4:= "Subscription not set!" @kind object;
  #L45d276.  call `<init>`(v1, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45d27c.  v4:= 3I;
  #L45d27e.  v5:= v8.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d282.  v6:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L45d286.  call `onSubscribe`(v5, v6) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L45d28c.  v5:= v8.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d290.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L45d294.  v7:= new `java.lang.Throwable`[v3];
  #L45d298.  v7[v2]:= v9 @kind object;
  #L45d29c.  v7[v0]:= v1 @kind object;
  #L45d2a0.  call `<init>`(v6, v7) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d2a6.  call `onError`(v5, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45d2ac.  goto L45d2d6;
  #L45d2ae.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d2b0.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d2b6.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L45d2ba.  v4:= new `java.lang.Throwable`[v4];
  #L45d2be.  v4[v2]:= v9 @kind object;
  #L45d2c2.  v4[v0]:= v1 @kind object;
  #L45d2c6.  v4[v3]:= v5 @kind object;
  #L45d2ca.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d2d0.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d2d6.  return @kind void;
  #L45d2d8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d2da.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d2e0.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L45d2e4.  v4:= new `java.lang.Throwable`[v4];
  #L45d2e8.  v4[v2]:= v9 @kind object;
  #L45d2ec.  v4[v0]:= v1 @kind object;
  #L45d2f0.  v4[v3]:= v5 @kind object;
  #L45d2f4.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d2fa.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d300.  return @kind void;
  #L45d302.  if v9 != 0 then goto L45d314;
  #L45d306.  v9:= new `java.lang.NullPointerException`;
  #L45d30a.  v1:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L45d30e.  call `<init>`(v9, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45d314.  v1:= v8.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d318.  call `onError`(v1, v9) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45d31e.  goto L45d344;
  #L45d320.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d322.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d328.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L45d32c.  v3:= new `java.lang.Throwable`[v3];
  #L45d330.  v3[v2]:= v9 @kind object;
  #L45d334.  v3[v0]:= v1 @kind object;
  #L45d338.  call `<init>`(v4, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d33e.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d344.  return @kind void;
  catch `java.lang.Throwable` @[L45d27e..L45d28c] goto L45d2d8;
  catch `java.lang.Throwable` @[L45d28c..L45d2ac] goto L45d2ae;
  catch `java.lang.Throwable` @[L45d314..L45d31e] goto L45d320;
}
procedure `void` `onNext`(`io.reactivex.observers.SafeObserver` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/observers/SafeObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45d378.  v0:= v5.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` @kind boolean;
  #L45d37c.  if v0 == 0 then goto L45d382;
  #L45d380.  return @kind void;
  #L45d382.  v0:= v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d386.  if v0 != 0 then goto L45d392;
  #L45d38a.  call `b`(v5) @signature `Lio/reactivex/observers/SafeObserver;.b:()V` @kind virtual;
  #L45d390.  return @kind void;
  #L45d392.  v0:= 1I;
  #L45d394.  v1:= 0I;
  #L45d396.  v2:= 2I;
  #L45d398.  if v6 != 0 then goto L45d3e2;
  #L45d39c.  v6:= new `java.lang.NullPointerException`;
  #L45d3a0.  v3:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L45d3a4.  call `<init>`(v6, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45d3aa.  v3:= v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d3ae.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45d3b4.  call `onError`(v5, v6) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L45d3ba.  return @kind void;
  #L45d3bc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d3be.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d3c4.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L45d3c8.  v2:= new `java.lang.Throwable`[v2];
  #L45d3cc.  v2[v1]:= v6 @kind object;
  #L45d3d0.  v2[v0]:= v3 @kind object;
  #L45d3d4.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d3da.  call `onError`(v5, v4) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L45d3e0.  return @kind void;
  #L45d3e2.  v3:= v5.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d3e6.  call `onNext`(v3, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L45d3ec.  goto L45d406;
  #L45d3ee.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d3f0.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d3f6.  v3:= v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d3fa.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45d400.  call `onError`(v5, v6) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L45d406.  return @kind void;
  #L45d408.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d40a.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d410.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L45d414.  v2:= new `java.lang.Throwable`[v2];
  #L45d418.  v2[v1]:= v6 @kind object;
  #L45d41c.  v2[v0]:= v3 @kind object;
  #L45d420.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d426.  call `onError`(v5, v4) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L45d42c.  return @kind void;
  catch `java.lang.Throwable` @[L45d3aa..L45d3b4] goto L45d3bc;
  catch `java.lang.Throwable` @[L45d3e2..L45d3ec] goto L45d3ee;
  catch `java.lang.Throwable` @[L45d3f6..L45d400] goto L45d408;
}
procedure `void` `onSubscribe`(`io.reactivex.observers.SafeObserver` v5 @kind this, `io.reactivex.disposables.Disposable` v6 @kind object) @signature `Lio/reactivex/observers/SafeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45d508.  v0:= v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d50c.  call temp:= `validate`(v0, v6) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L45d512.  v0:= temp;
  #L45d514.  if v0 == 0 then goto L45d56c;
  #L45d518.  v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` := v6 @kind object;
  #L45d51c.  v0:= v5.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d520.  call `onSubscribe`(v0, v5) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L45d526.  goto L45d56c;
  #L45d528.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d52a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d530.  v1:= 1I;
  #L45d532.  v5.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` := v1 @kind boolean;
  #L45d536.  call `dispose`(v6) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45d53c.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d542.  goto L45d56c;
  #L45d544.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d546.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45d54c.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L45d550.  v3:= 2I;
  #L45d552.  v3:= new `java.lang.Throwable`[v3];
  #L45d556.  v4:= 0I;
  #L45d558.  v3[v4]:= v0 @kind object;
  #L45d55c.  v3[v1]:= v6 @kind object;
  #L45d560.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45d566.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d56c.  return @kind void;
  catch `java.lang.Throwable` @[L45d51c..L45d526] goto L45d528;
  catch `java.lang.Throwable` @[L45d536..L45d53c] goto L45d544;
}
