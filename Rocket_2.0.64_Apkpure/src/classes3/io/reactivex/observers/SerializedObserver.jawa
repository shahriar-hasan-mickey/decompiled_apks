record `io.reactivex.observers.SerializedObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.observers.SerializedObserver.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.observers.SerializedObserver.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.observers.SerializedObserver.c` @AccessFlag ;
  `boolean` `io.reactivex.observers.SerializedObserver.d` @AccessFlag ;
  `io.reactivex.internal.util.AppendOnlyLinkedArrayList` `io.reactivex.observers.SerializedObserver.e` @AccessFlag ;
  `boolean` `io.reactivex.observers.SerializedObserver.f` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.observers.SerializedObserver` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45d5b8.  v0:= 0I;
  #L45d5ba.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;Z)V` @kind direct;
  #L45d5c0.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.observers.SerializedObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45d5d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45d5da.  v0.`io.reactivex.observers.SerializedObserver.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L45d5de.  v0.`io.reactivex.observers.SerializedObserver.b` @type ^`boolean` := v2 @kind boolean;
  #L45d5e2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.observers.SerializedObserver` v2 @kind this) @signature `Lio/reactivex/observers/SerializedObserver;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L45d610.  @monitorenter v2
  #L45d612.  v0:= v2.`io.reactivex.observers.SerializedObserver.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L45d616.  if v0 != 0 then goto L45d624;
  #L45d61a.  v0:= 0I;
  #L45d61c.  v2.`io.reactivex.observers.SerializedObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L45d620.  @monitorexit v2
  #L45d622.  return @kind void;
  #L45d624.  v1:= 0I;
  #L45d626.  v2.`io.reactivex.observers.SerializedObserver.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L45d62a.  @monitorexit v2
  #L45d62c.  v1:= v2.`io.reactivex.observers.SerializedObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d630.  call temp:= `accept`(v0, v1) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.accept:(Lio/reactivex/Observer;)Z` @kind virtual;
  #L45d636.  v0:= temp;
  #L45d638.  if v0 == 0 then goto L45d610;
  #L45d63c.  return @kind void;
  #L45d63e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d640.  @monitorexit v2
  #L45d642.  throw v0;
  catch `java.lang.Throwable` @[L45d612..L45d62c] goto L45d63e;
  catch `java.lang.Throwable` @[L45d640..L45d642] goto L45d63e;
}
procedure `void` `dispose`(`io.reactivex.observers.SerializedObserver` v1 @kind this) @signature `Lio/reactivex/observers/SerializedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d5f4.  v0:= v1.`io.reactivex.observers.SerializedObserver.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d5f8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45d5fe.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.observers.SerializedObserver` v1 @kind this) @signature `Lio/reactivex/observers/SerializedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d598.  v0:= v1.`io.reactivex.observers.SerializedObserver.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d59c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L45d5a2.  v0:= temp;
  #L45d5a4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.observers.SerializedObserver` v2 @kind this) @signature `Lio/reactivex/observers/SerializedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45d668.  v0:= v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` @kind boolean;
  #L45d66c.  if v0 == 0 then goto L45d672;
  #L45d670.  return @kind void;
  #L45d672.  @monitorenter v2
  #L45d674.  v0:= v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` @kind boolean;
  #L45d678.  if v0 == 0 then goto L45d680;
  #L45d67c.  @monitorexit v2
  #L45d67e.  return @kind void;
  #L45d680.  v0:= v2.`io.reactivex.observers.SerializedObserver.d` @type ^`boolean` @kind boolean;
  #L45d684.  if v0 == 0 then goto L45d6b2;
  #L45d688.  v0:= v2.`io.reactivex.observers.SerializedObserver.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L45d68c.  if v0 != 0 then goto L45d6a0;
  #L45d690.  v0:= new `io.reactivex.internal.util.AppendOnlyLinkedArrayList`;
  #L45d694.  v1:= 4I;
  #L45d696.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L45d69c.  v2.`io.reactivex.observers.SerializedObserver.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L45d6a0.  call temp:= `complete`() @signature `Lio/reactivex/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L45d6a6.  v1:= temp @kind object;
  #L45d6a8.  call `add`(v0, v1) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L45d6ae.  @monitorexit v2
  #L45d6b0.  return @kind void;
  #L45d6b2.  v0:= 1I;
  #L45d6b4.  v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` := v0 @kind boolean;
  #L45d6b8.  v2.`io.reactivex.observers.SerializedObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L45d6bc.  @monitorexit v2
  #L45d6be.  v0:= v2.`io.reactivex.observers.SerializedObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d6c2.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L45d6c8.  return @kind void;
  #L45d6ca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d6cc.  @monitorexit v2
  #L45d6ce.  throw v0;
  catch `java.lang.Throwable` @[L45d674..L45d6be] goto L45d6ca;
  catch `java.lang.Throwable` @[L45d6cc..L45d6ce] goto L45d6ca;
}
procedure `void` `onError`(`io.reactivex.observers.SerializedObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/observers/SerializedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45d6f4.  v0:= v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` @kind boolean;
  #L45d6f8.  if v0 == 0 then goto L45d704;
  #L45d6fc.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d702.  return @kind void;
  #L45d704.  @monitorenter v2
  #L45d706.  v0:= v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` @kind boolean;
  #L45d70a.  v1:= 1I;
  #L45d70c.  if v0 == 0 then goto L45d712;
  #L45d710.  goto L45d762;
  #L45d712.  v0:= v2.`io.reactivex.observers.SerializedObserver.d` @type ^`boolean` @kind boolean;
  #L45d716.  if v0 == 0 then goto L45d758;
  #L45d71a.  v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` := v1 @kind boolean;
  #L45d71e.  v0:= v2.`io.reactivex.observers.SerializedObserver.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L45d722.  if v0 != 0 then goto L45d736;
  #L45d726.  v0:= new `io.reactivex.internal.util.AppendOnlyLinkedArrayList`;
  #L45d72a.  v1:= 4I;
  #L45d72c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L45d732.  v2.`io.reactivex.observers.SerializedObserver.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L45d736.  call temp:= `error`(v3) @signature `Lio/reactivex/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L45d73c.  v3:= temp @kind object;
  #L45d73e.  v1:= v2.`io.reactivex.observers.SerializedObserver.b` @type ^`boolean` @kind boolean;
  #L45d742.  if v1 == 0 then goto L45d74e;
  #L45d746.  call `add`(v0, v3) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L45d74c.  goto L45d754;
  #L45d74e.  call `setFirst`(v0, v3) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.setFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L45d754.  @monitorexit v2
  #L45d756.  return @kind void;
  #L45d758.  v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` := v1 @kind boolean;
  #L45d75c.  v2.`io.reactivex.observers.SerializedObserver.d` @type ^`boolean` := v1 @kind boolean;
  #L45d760.  v1:= 0I;
  #L45d762.  @monitorexit v2
  #L45d764.  if v1 == 0 then goto L45d770;
  #L45d768.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45d76e.  return @kind void;
  #L45d770.  v0:= v2.`io.reactivex.observers.SerializedObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d774.  call `onError`(v0, v3) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45d77a.  return @kind void;
  #L45d77c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d77e.  @monitorexit v2
  #L45d780.  throw v3;
  catch `java.lang.Throwable` @[L45d706..L45d764] goto L45d77c;
  catch `java.lang.Throwable` @[L45d77e..L45d780] goto L45d77c;
}
procedure `void` `onNext`(`io.reactivex.observers.SerializedObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/observers/SerializedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45d7a8.  v0:= v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` @kind boolean;
  #L45d7ac.  if v0 == 0 then goto L45d7b2;
  #L45d7b0.  return @kind void;
  #L45d7b2.  if v3 != 0 then goto L45d7d6;
  #L45d7b6.  v3:= v2.`io.reactivex.observers.SerializedObserver.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d7ba.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45d7c0.  v3:= new `java.lang.NullPointerException`;
  #L45d7c4.  v0:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L45d7c8.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45d7ce.  call `onError`(v2, v3) @signature `Lio/reactivex/observers/SerializedObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L45d7d4.  return @kind void;
  #L45d7d6.  @monitorenter v2
  #L45d7d8.  v0:= v2.`io.reactivex.observers.SerializedObserver.f` @type ^`boolean` @kind boolean;
  #L45d7dc.  if v0 == 0 then goto L45d7e4;
  #L45d7e0.  @monitorexit v2
  #L45d7e2.  return @kind void;
  #L45d7e4.  v0:= v2.`io.reactivex.observers.SerializedObserver.d` @type ^`boolean` @kind boolean;
  #L45d7e8.  if v0 == 0 then goto L45d816;
  #L45d7ec.  v0:= v2.`io.reactivex.observers.SerializedObserver.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L45d7f0.  if v0 != 0 then goto L45d804;
  #L45d7f4.  v0:= new `io.reactivex.internal.util.AppendOnlyLinkedArrayList`;
  #L45d7f8.  v1:= 4I;
  #L45d7fa.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L45d800.  v2.`io.reactivex.observers.SerializedObserver.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L45d804.  call temp:= `next`(v3) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45d80a.  v3:= temp @kind object;
  #L45d80c.  call `add`(v0, v3) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L45d812.  @monitorexit v2
  #L45d814.  return @kind void;
  #L45d816.  v0:= 1I;
  #L45d818.  v2.`io.reactivex.observers.SerializedObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L45d81c.  @monitorexit v2
  #L45d81e.  v0:= v2.`io.reactivex.observers.SerializedObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d822.  call `onNext`(v0, v3) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L45d828.  call `a`(v2) @signature `Lio/reactivex/observers/SerializedObserver;.a:()V` @kind virtual;
  #L45d82e.  return @kind void;
  #L45d830.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45d832.  @monitorexit v2
  #L45d834.  throw v3;
  catch `java.lang.Throwable` @[L45d7d8..L45d81e] goto L45d830;
  catch `java.lang.Throwable` @[L45d832..L45d834] goto L45d830;
}
procedure `void` `onSubscribe`(`io.reactivex.observers.SerializedObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/observers/SerializedObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d85c.  v0:= v1.`io.reactivex.observers.SerializedObserver.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d860.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L45d866.  v0:= temp;
  #L45d868.  if v0 == 0 then goto L45d87a;
  #L45d86c.  v1.`io.reactivex.observers.SerializedObserver.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L45d870.  v2:= v1.`io.reactivex.observers.SerializedObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L45d874.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L45d87a.  return @kind void;
}
