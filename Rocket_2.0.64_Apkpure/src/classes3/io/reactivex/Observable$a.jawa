record `io.reactivex.Observable$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.Observable$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/Observable$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f837c.  call temp:= `values`() @signature `Lio/reactivex/BackpressureStrategy;.values:()[Lio/reactivex/BackpressureStrategy;` @kind static;
  #L3f8382.  v0:= temp @kind object;
  #L3f8384.  v0:= length @variable v0;
  #L3f8386.  v0:= new `int`[v0];
  #L3f838a.  `@@io.reactivex.Observable$a.a` @type ^`int`[] := v0 @kind object;
  #L3f838e.  v1:= `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3f8392.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3f8398.  v1:= temp;
  #L3f839a.  v2:= 1I;
  #L3f839c.  v0[v1]:= v2;
  #L3f83a0.  v0:= `@@io.reactivex.Observable$a.a` @type ^`int`[] @kind object;
  #L3f83a4.  v1:= `@@io.reactivex.BackpressureStrategy.LATEST` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3f83a8.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3f83ae.  v1:= temp;
  #L3f83b0.  v2:= 2I;
  #L3f83b2.  v0[v1]:= v2;
  #L3f83b6.  v0:= `@@io.reactivex.Observable$a.a` @type ^`int`[] @kind object;
  #L3f83ba.  v1:= `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3f83be.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3f83c4.  v1:= temp;
  #L3f83c6.  v2:= 3I;
  #L3f83c8.  v0[v1]:= v2;
  #L3f83cc.  v0:= `@@io.reactivex.Observable$a.a` @type ^`int`[] @kind object;
  #L3f83d0.  v1:= `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3f83d4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3f83da.  v1:= temp;
  #L3f83dc.  v2:= 4I;
  #L3f83de.  v0[v1]:= v2;
  #L3f83e2.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L3f838e..L3f83a0] goto L3f83a0;
  catch `java.lang.NoSuchFieldError` @[L3f83a0..L3f83b6] goto L3f83b6;
  catch `java.lang.NoSuchFieldError` @[L3f83b6..L3f83cc] goto L3f83cc;
  catch `java.lang.NoSuchFieldError` @[L3f83cc..L3f83e2] goto L3f83e2;
}
