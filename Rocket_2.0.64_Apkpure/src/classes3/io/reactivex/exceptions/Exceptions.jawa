record `io.reactivex.exceptions.Exceptions` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.exceptions.Exceptions` v2 @kind this) @signature `Lio/reactivex/exceptions/Exceptions;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4016f0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4016f6.  v0:= new `java.lang.IllegalStateException`;
  #L4016fa.  v1:= "No instances!" @kind object;
  #L4016fe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L401704.  throw v0;
}
procedure `java.lang.RuntimeException` `propagate`(`java.lang.Throwable` v0 @kind object) @signature `Lio/reactivex/exceptions/Exceptions;.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4016d4.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4016da.  v0:= temp @kind object;
  #L4016dc.  throw v0;
}
procedure `void` `throwIfFatal`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L401718.  v0:= instanceof @variable v1 @type ^`java.lang.VirtualMachineError` @kind boolean;
  #L40171c.  if v0 != 0 then goto L40173e;
  #L401720.  v0:= instanceof @variable v1 @type ^`java.lang.ThreadDeath` @kind boolean;
  #L401724.  if v0 != 0 then goto L401738;
  #L401728.  v0:= instanceof @variable v1 @type ^`java.lang.LinkageError` @kind boolean;
  #L40172c.  if v0 != 0 then goto L401732;
  #L401730.  return @kind void;
  #L401732.  v1:= (`java.lang.LinkageError`) v1 @kind object;
  #L401736.  throw v1;
  #L401738.  v1:= (`java.lang.ThreadDeath`) v1 @kind object;
  #L40173c.  throw v1;
  #L40173e.  v1:= (`java.lang.VirtualMachineError`) v1 @kind object;
  #L401742.  throw v1;
}
