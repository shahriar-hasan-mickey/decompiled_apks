record `io.reactivex.Completable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.CompletableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Completable` v0 @kind this) @signature `Lio/reactivex/Completable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ef864.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ef86a.  return @kind void;
}
procedure `io.reactivex.Completable` `a`(`io.reactivex.Completable` v9 @kind this, `io.reactivex.functions.Consumer` v10 @kind object, `io.reactivex.functions.Consumer` v11 @kind object, `io.reactivex.functions.Action` v12 @kind object, `io.reactivex.functions.Action` v13 @kind object, `io.reactivex.functions.Action` v14 @kind object, `io.reactivex.functions.Action` v15 @kind object) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3eea8c.  v0:= "onSubscribe is null" @kind object;
  #L3eea90.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eea96.  v0:= "onError is null" @kind object;
  #L3eea9a.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eeaa0.  v0:= "onComplete is null" @kind object;
  #L3eeaa4.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eeaaa.  v0:= "onTerminate is null" @kind object;
  #L3eeaae.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eeab4.  v0:= "onAfterTerminate is null" @kind object;
  #L3eeab8.  call temp:= `requireNonNull`(v14, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eeabe.  v0:= "onDispose is null" @kind object;
  #L3eeac2.  call temp:= `requireNonNull`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eeac8.  v0:= new `io.reactivex.internal.operators.completable.CompletablePeek`;
  #L3eeacc.  v1:= v0 @kind object;
  #L3eeace.  v2:= v9 @kind object;
  #L3eead0.  v3:= v10 @kind object;
  #L3eead2.  v4:= v11 @kind object;
  #L3eead4.  v5:= v12 @kind object;
  #L3eead6.  v6:= v13 @kind object;
  #L3eead8.  v7:= v14 @kind object;
  #L3eeada.  v8:= v15 @kind object;
  #L3eeadc.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3eeae2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eeae8.  v10:= temp @kind object;
  #L3eeaea.  return v10 @kind object;
}
procedure `io.reactivex.Completable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Completable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ee5f8.  v0:= "sources is null" @kind object;
  #L3ee5fc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee602.  v0:= new `io.reactivex.internal.operators.completable.CompletableAmb`;
  #L3ee606.  v1:= 0I;
  #L3ee608.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/CompletableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3ee60e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee614.  v2:= temp @kind object;
  #L3ee616.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `ambArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.ambArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ee628.  v0:= "sources is null" @kind object;
  #L3ee62c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee632.  v0:= length @variable v2;
  #L3ee634.  if v0 != 0 then goto L3ee642;
  #L3ee638.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L3ee63e.  v2:= temp @kind object;
  #L3ee640.  return v2 @kind object;
  #L3ee642.  v0:= length @variable v2;
  #L3ee644.  v1:= 1I;
  #L3ee646.  if v0 != v1 then goto L3ee65a;
  #L3ee64a.  v0:= 0I;
  #L3ee64c.  v2:= v2[v0] @kind object;
  #L3ee650.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3ee656.  v2:= temp @kind object;
  #L3ee658.  return v2 @kind object;
  #L3ee65a.  v0:= new `io.reactivex.internal.operators.completable.CompletableAmb`;
  #L3ee65e.  v1:= 0I;
  #L3ee660.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/CompletableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3ee666.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee66c.  v2:= temp @kind object;
  #L3ee66e.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `b`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3eedd4.  v0:= "sources is null" @kind object;
  #L3eedd8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eedde.  v0:= "maxConcurrency" @kind object;
  #L3eede2.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3eede8.  v0:= new `io.reactivex.internal.operators.completable.CompletableMerge`;
  #L3eedec.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableMerge;.<init>:(Lorg/reactivestreams/Publisher;IZ)V` @kind direct;
  #L3eedf2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eedf8.  v1:= temp @kind object;
  #L3eedfa.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `c`(`io.reactivex.Completable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `io.reactivex.CompletableSource` v13 @kind object) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ef2ac.  v0:= "unit is null" @kind object;
  #L3ef2b0.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef2b6.  v0:= "scheduler is null" @kind object;
  #L3ef2ba.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef2c0.  v0:= new `io.reactivex.internal.operators.completable.CompletableTimeout`;
  #L3ef2c4.  v1:= v0 @kind object;
  #L3ef2c6.  v2:= v8 @kind object;
  #L3ef2c8.  v3:= v9 @kind wide;
  #L3ef2ca.  v5:= v11 @kind object;
  #L3ef2cc.  v6:= v12 @kind object;
  #L3ef2ce.  v7:= v13 @kind object;
  #L3ef2d0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout;.<init>:(Lio/reactivex/CompletableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ef2d6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ef2dc.  v9:= temp @kind object;
  #L3ef2de.  return v9 @kind object;
}
procedure `io.reactivex.Completable` `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ee6f8.  v0:= `@@io.reactivex.internal.operators.completable.CompletableEmpty.INSTANCE` @type ^`io.reactivex.Completable` @kind object;
  #L3ee6fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee702.  v0:= temp @kind object;
  #L3ee704.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ee74c.  v0:= "sources is null" @kind object;
  #L3ee750.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee756.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcatIterable`;
  #L3ee75a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L3ee760.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee766.  v1:= temp @kind object;
  #L3ee768.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ee77c.  v0:= 2I;
  #L3ee77e.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @kind static;
  #L3ee784.  v1:= temp @kind object;
  #L3ee786.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ee798.  v0:= "sources is null" @kind object;
  #L3ee79c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee7a2.  v0:= "prefetch" @kind object;
  #L3ee7a6.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3ee7ac.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcat`;
  #L3ee7b0.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat;.<init>:(Lorg/reactivestreams/Publisher;I)V` @kind direct;
  #L3ee7b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee7bc.  v1:= temp @kind object;
  #L3ee7be.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concatArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.concatArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ee7d0.  v0:= "sources is null" @kind object;
  #L3ee7d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee7da.  v0:= length @variable v2;
  #L3ee7dc.  if v0 != 0 then goto L3ee7ea;
  #L3ee7e0.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L3ee7e6.  v2:= temp @kind object;
  #L3ee7e8.  return v2 @kind object;
  #L3ee7ea.  v0:= length @variable v2;
  #L3ee7ec.  v1:= 1I;
  #L3ee7ee.  if v0 != v1 then goto L3ee802;
  #L3ee7f2.  v0:= 0I;
  #L3ee7f4.  v2:= v2[v0] @kind object;
  #L3ee7f8.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3ee7fe.  v2:= temp @kind object;
  #L3ee800.  return v2 @kind object;
  #L3ee802.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcatArray`;
  #L3ee806.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ee80c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee812.  v2:= temp @kind object;
  #L3ee814.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `create`(`io.reactivex.CompletableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Completable;.create:(Lio/reactivex/CompletableOnSubscribe;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ee860.  v0:= "source is null" @kind object;
  #L3ee864.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee86a.  v0:= new `io.reactivex.internal.operators.completable.CompletableCreate`;
  #L3ee86e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate;.<init>:(Lio/reactivex/CompletableOnSubscribe;)V` @kind direct;
  #L3ee874.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee87a.  v1:= temp @kind object;
  #L3ee87c.  return v1 @kind object;
}
procedure `java.lang.NullPointerException` `d`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/Completable;.d:(Ljava/lang/Throwable;)Ljava/lang/NullPointerException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3ef794.  v0:= new `java.lang.NullPointerException`;
  #L3ef798.  v1:= "Actually not, but can't pass out an exception otherwise..." @kind object;
  #L3ef79c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ef7a2.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3ef7a8.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ee890.  v0:= "completableSupplier" @kind object;
  #L3ee894.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee89a.  v0:= new `io.reactivex.internal.operators.completable.CompletableDefer`;
  #L3ee89e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3ee8a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee8aa.  v1:= temp @kind object;
  #L3ee8ac.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Completable;.error:(Ljava/lang/Throwable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eeb64.  v0:= "error is null" @kind object;
  #L3eeb68.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eeb6e.  v0:= new `io.reactivex.internal.operators.completable.CompletableError`;
  #L3eeb72.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3eeb78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eeb7e.  v1:= temp @kind object;
  #L3eeb80.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eeb94.  v0:= "errorSupplier is null" @kind object;
  #L3eeb98.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eeb9e.  v0:= new `io.reactivex.internal.operators.completable.CompletableErrorSupplier`;
  #L3eeba2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableErrorSupplier;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3eeba8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eebae.  v1:= temp @kind object;
  #L3eebb0.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromAction`(`io.reactivex.functions.Action` v1 @kind object) @signature `Lio/reactivex/Completable;.fromAction:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eebc4.  v0:= "run is null" @kind object;
  #L3eebc8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eebce.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromAction`;
  #L3eebd2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromAction;.<init>:(Lio/reactivex/functions/Action;)V` @kind direct;
  #L3eebd8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eebde.  v1:= temp @kind object;
  #L3eebe0.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eebf4.  v0:= "callable is null" @kind object;
  #L3eebf8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eebfe.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromCallable`;
  #L3eec02.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3eec08.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eec0e.  v1:= temp @kind object;
  #L3eec10.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object) @signature `Lio/reactivex/Completable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eec24.  v0:= "future is null" @kind object;
  #L3eec28.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eec2e.  call temp:= `futureAction`(v1) @signature `Lio/reactivex/internal/functions/Functions;.futureAction:(Ljava/util/concurrent/Future;)Lio/reactivex/functions/Action;` @kind static;
  #L3eec34.  v1:= temp @kind object;
  #L3eec36.  call temp:= `fromAction`(v1) @signature `Lio/reactivex/Completable;.fromAction:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind static;
  #L3eec3c.  v1:= temp @kind object;
  #L3eec3e.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromObservable`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.fromObservable:(Lio/reactivex/ObservableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eec50.  v0:= "observable is null" @kind object;
  #L3eec54.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eec5a.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromObservable`;
  #L3eec5e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromObservable;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3eec64.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eec6a.  v1:= temp @kind object;
  #L3eec6c.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eec80.  v0:= "publisher is null" @kind object;
  #L3eec84.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eec8a.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromPublisher`;
  #L3eec8e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3eec94.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eec9a.  v1:= temp @kind object;
  #L3eec9c.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/Completable;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eecb0.  v0:= "run is null" @kind object;
  #L3eecb4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eecba.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromRunnable`;
  #L3eecbe.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L3eecc4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eecca.  v1:= temp @kind object;
  #L3eeccc.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromSingle`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Completable;.fromSingle:(Lio/reactivex/SingleSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eece0.  v0:= "single is null" @kind object;
  #L3eece4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eecea.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromSingle`;
  #L3eecee.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3eecf4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eecfa.  v1:= temp @kind object;
  #L3eecfc.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eed64.  v0:= "sources is null" @kind object;
  #L3eed68.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eed6e.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeIterable`;
  #L3eed72.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L3eed78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eed7e.  v1:= temp @kind object;
  #L3eed80.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3eed94.  v0:= 2147483647I;
  #L3eed9a.  v1:= 0I;
  #L3eed9c.  call temp:= `b`(v2, v0, v1) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L3eeda2.  v2:= temp @kind object;
  #L3eeda4.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eedb8.  v0:= 0I;
  #L3eedba.  call temp:= `b`(v1, v2, v0) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L3eedc0.  v1:= temp @kind object;
  #L3eedc2.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.mergeArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3eee0c.  v0:= "sources is null" @kind object;
  #L3eee10.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eee16.  v0:= length @variable v2;
  #L3eee18.  if v0 != 0 then goto L3eee26;
  #L3eee1c.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L3eee22.  v2:= temp @kind object;
  #L3eee24.  return v2 @kind object;
  #L3eee26.  v0:= length @variable v2;
  #L3eee28.  v1:= 1I;
  #L3eee2a.  if v0 != v1 then goto L3eee3e;
  #L3eee2e.  v0:= 0I;
  #L3eee30.  v2:= v2[v0] @kind object;
  #L3eee34.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3eee3a.  v2:= temp @kind object;
  #L3eee3c.  return v2 @kind object;
  #L3eee3e.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeArray`;
  #L3eee42.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3eee48.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eee4e.  v2:= temp @kind object;
  #L3eee50.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `mergeArrayDelayError`(`io.reactivex.CompletableSource`[] v1 @kind object) @signature `Lio/reactivex/Completable;.mergeArrayDelayError:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eee64.  v0:= "sources is null" @kind object;
  #L3eee68.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eee6e.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray`;
  #L3eee72.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3eee78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eee7e.  v1:= temp @kind object;
  #L3eee80.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eee94.  v0:= "sources is null" @kind object;
  #L3eee98.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eee9e.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable`;
  #L3eeea2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L3eeea8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eeeae.  v1:= temp @kind object;
  #L3eeeb0.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3eeec4.  v0:= 2147483647I;
  #L3eeeca.  v1:= 1I;
  #L3eeecc.  call temp:= `b`(v2, v0, v1) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L3eeed2.  v2:= temp @kind object;
  #L3eeed4.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eeee8.  v0:= 1I;
  #L3eeeea.  call temp:= `b`(v1, v2, v0) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L3eeef0.  v1:= temp @kind object;
  #L3eeef2.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `never`() @signature `Lio/reactivex/Completable;.never:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eef3c.  v0:= `@@io.reactivex.internal.operators.completable.CompletableNever.INSTANCE` @type ^`io.reactivex.Completable` @kind object;
  #L3eef40.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eef46.  v0:= temp @kind object;
  #L3eef48.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef2f0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3ef2f6.  v0:= temp @kind object;
  #L3ef2f8.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @kind static;
  #L3ef2fe.  v1:= temp @kind object;
  #L3ef300.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef314.  v0:= "unit is null" @kind object;
  #L3ef318.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef31e.  v0:= "scheduler is null" @kind object;
  #L3ef322.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef328.  v0:= new `io.reactivex.internal.operators.completable.CompletableTimer`;
  #L3ef32c.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/internal/operators/completable/CompletableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3ef332.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ef338.  v1:= temp @kind object;
  #L3ef33a.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `unsafeCreate`(`io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.unsafeCreate:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef34c.  v0:= "source is null" @kind object;
  #L3ef350.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef356.  v0:= instanceof @variable v1 @type ^`io.reactivex.Completable` @kind boolean;
  #L3ef35a.  if v0 != 0 then goto L3ef372;
  #L3ef35e.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromUnsafeSource`;
  #L3ef362.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ef368.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ef36e.  v1:= temp @kind object;
  #L3ef370.  return v1 @kind object;
  #L3ef372.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ef376.  v0:= "Use of unsafeCreate(Completable)!" @kind object;
  #L3ef37a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ef380.  throw v1;
}
procedure `io.reactivex.Completable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef3c4.  v0:= 1I;
  #L3ef3c6.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Completable;` @kind static;
  #L3ef3cc.  v1:= temp @kind object;
  #L3ef3ce.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef3e0.  v0:= "resourceSupplier is null" @kind object;
  #L3ef3e4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef3ea.  v0:= "completableFunction is null" @kind object;
  #L3ef3ee.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef3f4.  v0:= "disposer is null" @kind object;
  #L3ef3f8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef3fe.  v0:= new `io.reactivex.internal.operators.completable.CompletableUsing`;
  #L3ef402.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L3ef408.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ef40e.  v1:= temp @kind object;
  #L3ef410.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `wrap`(`io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef424.  v0:= "source is null" @kind object;
  #L3ef428.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef42e.  v0:= instanceof @variable v1 @type ^`io.reactivex.Completable` @kind boolean;
  #L3ef432.  if v0 == 0 then goto L3ef444;
  #L3ef436.  v1:= (`io.reactivex.Completable`) v1 @kind object;
  #L3ef43a.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ef440.  v1:= temp @kind object;
  #L3ef442.  return v1 @kind object;
  #L3ef444.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromUnsafeSource`;
  #L3ef448.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ef44e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ef454.  v1:= temp @kind object;
  #L3ef456.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `ambWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.ambWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ee680.  v0:= "other is null" @kind object;
  #L3ee684.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee68a.  v0:= 2I;
  #L3ee68c.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3ee690.  v1:= 0I;
  #L3ee692.  v0[v1]:= v2 @kind object;
  #L3ee696.  v1:= 1I;
  #L3ee698.  v0[v1]:= v3 @kind object;
  #L3ee69c.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Completable;.ambArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3ee6a2.  v3:= temp @kind object;
  #L3ee6a4.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `andThen`(`io.reactivex.Completable` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3ee6b8.  call temp:= `concatWith`(v0, v1) @signature `Lio/reactivex/Completable;.concatWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind virtual;
  #L3ee6be.  v1:= temp @kind object;
  #L3ee6c0.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `andThen`(`io.reactivex.Completable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ef480.  v0:= "next is null" @kind object;
  #L3ef484.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef48a.  v0:= new `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther`;
  #L3ef48e.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef494.  v1:= temp @kind object;
  #L3ef496.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3ef49c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3ef4a2.  v3:= temp @kind object;
  #L3ef4a4.  return v3 @kind object;
}
procedure `io.reactivex.Maybe` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/MaybeSource;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef520.  v0:= "next is null" @kind object;
  #L3ef524.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef52a.  v0:= new `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable`;
  #L3ef52e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ef534.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3ef53a.  v2:= temp @kind object;
  #L3ef53c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `andThen`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ef58c.  v0:= "next is null" @kind object;
  #L3ef590.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef596.  v0:= new `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther`;
  #L3ef59a.  call temp:= `toObservable`(v2) @signature `Lio/reactivex/Completable;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L3ef5a0.  v1:= temp @kind object;
  #L3ef5a2.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3ef5a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3ef5ae.  v3:= temp @kind object;
  #L3ef5b0.  return v3 @kind object;
}
procedure `io.reactivex.Single` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef62c.  v0:= "next is null" @kind object;
  #L3ef630.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef636.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithCompletable`;
  #L3ef63a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ef640.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ef646.  v2:= temp @kind object;
  #L3ef648.  return v2 @kind object;
}
procedure `void` `blockingAwait`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.blockingAwait:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef87c.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3ef880.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3ef886.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef88c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3ef892.  return @kind void;
}
procedure `boolean` `blockingAwait`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Completable;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ee5c4.  v0:= "unit is null" @kind object;
  #L3ee5c8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee5ce.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3ee5d2.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3ee5d8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ee5de.  call temp:= `blockingAwait`(v0, v2, v4) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L3ee5e4.  v2:= temp;
  #L3ee5e6.  return v2;
}
procedure `java.lang.Throwable` `blockingGet`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.blockingGet:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef804.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3ef808.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3ef80e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef814.  call temp:= `blockingGetError`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGetError:()Ljava/lang/Throwable;` @kind virtual;
  #L3ef81a.  v0:= temp @kind object;
  #L3ef81c.  return v0 @kind object;
}
procedure `java.lang.Throwable` `blockingGet`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Completable;.blockingGet:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef830.  v0:= "unit is null" @kind object;
  #L3ef834.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef83a.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3ef83e.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3ef844.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef84a.  call temp:= `blockingGetError`(v0, v2, v4) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGetError:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Throwable;` @kind virtual;
  #L3ef850.  v2:= temp @kind object;
  #L3ef852.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `cache`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.cache:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ee6d4.  v0:= new `io.reactivex.internal.operators.completable.CompletableCache`;
  #L3ee6d8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableCache;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ee6de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee6e4.  v0:= temp @kind object;
  #L3ee6e6.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `compose`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableTransformer` v2 @kind object) @signature `Lio/reactivex/Completable;.compose:(Lio/reactivex/CompletableTransformer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ee718.  v0:= "transformer is null" @kind object;
  #L3ee71c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee722.  v2:= temp @kind object;
  #L3ee724.  v2:= (`io.reactivex.CompletableTransformer`) v2 @kind object;
  #L3ee728.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/CompletableTransformer;.apply:(Lio/reactivex/Completable;)Lio/reactivex/CompletableSource;` @kind interface;
  #L3ee72e.  v2:= temp @kind object;
  #L3ee730.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3ee736.  v2:= temp @kind object;
  #L3ee738.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `concatWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.concatWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ee828.  v0:= "other is null" @kind object;
  #L3ee82c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee832.  v0:= 2I;
  #L3ee834.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3ee838.  v1:= 0I;
  #L3ee83a.  v0[v1]:= v2 @kind object;
  #L3ee83e.  v1:= 1I;
  #L3ee840.  v0[v1]:= v3 @kind object;
  #L3ee844.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Completable;.concatArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3ee84a.  v3:= temp @kind object;
  #L3ee84c.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ee8c0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3ee8c6.  v4:= temp @kind object;
  #L3ee8c8.  v5:= 0I;
  #L3ee8ca.  v0:= v6 @kind object;
  #L3ee8cc.  v1:= v7 @kind wide;
  #L3ee8ce.  v3:= v9 @kind object;
  #L3ee8d0.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @kind virtual;
  #L3ee8d6.  v7:= temp @kind object;
  #L3ee8d8.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ee8ec.  v5:= 0I;
  #L3ee8ee.  v0:= v6 @kind object;
  #L3ee8f0.  v1:= v7 @kind wide;
  #L3ee8f2.  v3:= v9 @kind object;
  #L3ee8f4.  v4:= v10 @kind object;
  #L3ee8f6.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @kind virtual;
  #L3ee8fc.  v7:= temp @kind object;
  #L3ee8fe.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ee910.  v0:= "unit is null" @kind object;
  #L3ee914.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee91a.  v0:= "scheduler is null" @kind object;
  #L3ee91e.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee924.  v0:= new `io.reactivex.internal.operators.completable.CompletableDelay`;
  #L3ee928.  v1:= v0 @kind object;
  #L3ee92a.  v2:= v8 @kind object;
  #L3ee92c.  v3:= v9 @kind wide;
  #L3ee92e.  v5:= v11 @kind object;
  #L3ee930.  v6:= v12 @kind object;
  #L3ee932.  v7:= v13;
  #L3ee934.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/completable/CompletableDelay;.<init>:(Lio/reactivex/CompletableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3ee93a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee940.  v9:= temp @kind object;
  #L3ee942.  return v9 @kind object;
}
procedure `io.reactivex.Completable` `doAfterTerminate`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ee954.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3ee95a.  v1:= temp @kind object;
  #L3ee95c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3ee962.  v2:= temp @kind object;
  #L3ee964.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3ee968.  v0:= v7 @kind object;
  #L3ee96a.  v3:= v6 @kind object;
  #L3ee96c.  v4:= v6 @kind object;
  #L3ee96e.  v5:= v8 @kind object;
  #L3ee970.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3ee976.  v8:= temp @kind object;
  #L3ee978.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doFinally`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Completable;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ee98c.  v0:= "onFinally is null" @kind object;
  #L3ee990.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ee996.  v0:= new `io.reactivex.internal.operators.completable.CompletableDoFinally`;
  #L3ee99a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3ee9a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ee9a6.  v2:= temp @kind object;
  #L3ee9a8.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `doOnComplete`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnComplete:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ee9bc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3ee9c2.  v1:= temp @kind object;
  #L3ee9c4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3ee9ca.  v2:= temp @kind object;
  #L3ee9cc.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3ee9d0.  v0:= v7 @kind object;
  #L3ee9d2.  v3:= v8 @kind object;
  #L3ee9d4.  v4:= v6 @kind object;
  #L3ee9d6.  v5:= v6 @kind object;
  #L3ee9d8.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3ee9de.  v8:= temp @kind object;
  #L3ee9e0.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnDispose`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ee9f4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3ee9fa.  v1:= temp @kind object;
  #L3ee9fc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3eea02.  v2:= temp @kind object;
  #L3eea04.  v5:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3eea08.  v0:= v7 @kind object;
  #L3eea0a.  v3:= v5 @kind object;
  #L3eea0c.  v4:= v5 @kind object;
  #L3eea0e.  v6:= v8 @kind object;
  #L3eea10.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3eea16.  v8:= temp @kind object;
  #L3eea18.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnError`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eea2c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3eea32.  v1:= temp @kind object;
  #L3eea34.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3eea38.  v0:= v7 @kind object;
  #L3eea3a.  v2:= v8 @kind object;
  #L3eea3c.  v3:= v6 @kind object;
  #L3eea3e.  v4:= v6 @kind object;
  #L3eea40.  v5:= v6 @kind object;
  #L3eea42.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3eea48.  v8:= temp @kind object;
  #L3eea4a.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnEvent`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Completable;.doOnEvent:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3eea5c.  v0:= "onEvent is null" @kind object;
  #L3eea60.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eea66.  v0:= new `io.reactivex.internal.operators.completable.CompletableDoOnEvent`;
  #L3eea6a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDoOnEvent;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3eea70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eea76.  v2:= temp @kind object;
  #L3eea78.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `doOnSubscribe`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eeafc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3eeb02.  v2:= temp @kind object;
  #L3eeb04.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3eeb08.  v0:= v7 @kind object;
  #L3eeb0a.  v1:= v8 @kind object;
  #L3eeb0c.  v3:= v6 @kind object;
  #L3eeb0e.  v4:= v6 @kind object;
  #L3eeb10.  v5:= v6 @kind object;
  #L3eeb12.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3eeb18.  v8:= temp @kind object;
  #L3eeb1a.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnTerminate`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eeb2c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3eeb32.  v1:= temp @kind object;
  #L3eeb34.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3eeb3a.  v2:= temp @kind object;
  #L3eeb3c.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3eeb40.  v0:= v7 @kind object;
  #L3eeb42.  v3:= v6 @kind object;
  #L3eeb44.  v4:= v8 @kind object;
  #L3eeb46.  v5:= v6 @kind object;
  #L3eeb48.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3eeb4e.  v8:= temp @kind object;
  #L3eeb50.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `hide`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.hide:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3eed10.  v0:= new `io.reactivex.internal.operators.completable.CompletableHide`;
  #L3eed14.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableHide;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3eed1a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eed20.  v0:= temp @kind object;
  #L3eed22.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `lift`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableOperator` v2 @kind object) @signature `Lio/reactivex/Completable;.lift:(Lio/reactivex/CompletableOperator;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3eed34.  v0:= "onLift is null" @kind object;
  #L3eed38.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eed3e.  v0:= new `io.reactivex.internal.operators.completable.CompletableLift`;
  #L3eed42.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableLift;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/CompletableOperator;)V` @kind direct;
  #L3eed48.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eed4e.  v2:= temp @kind object;
  #L3eed50.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `mergeWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.mergeWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3eef04.  v0:= "other is null" @kind object;
  #L3eef08.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eef0e.  v0:= 2I;
  #L3eef10.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3eef14.  v1:= 0I;
  #L3eef16.  v0[v1]:= v2 @kind object;
  #L3eef1a.  v1:= 1I;
  #L3eef1c.  v0[v1]:= v3 @kind object;
  #L3eef20.  call temp:= `mergeArray`(v0) @signature `Lio/reactivex/Completable;.mergeArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3eef26.  v3:= temp @kind object;
  #L3eef28.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `observeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3eef5c.  v0:= "scheduler is null" @kind object;
  #L3eef60.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eef66.  v0:= new `io.reactivex.internal.operators.completable.CompletableObserveOn`;
  #L3eef6a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3eef70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eef76.  v2:= temp @kind object;
  #L3eef78.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `onErrorComplete`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.onErrorComplete:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3eef8c.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L3eef92.  v0:= temp @kind object;
  #L3eef94.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/Completable;.onErrorComplete:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @kind virtual;
  #L3eef9a.  v0:= temp @kind object;
  #L3eef9c.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `onErrorComplete`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Completable;.onErrorComplete:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3eefb0.  v0:= "predicate is null" @kind object;
  #L3eefb4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eefba.  v0:= new `io.reactivex.internal.operators.completable.CompletableOnErrorComplete`;
  #L3eefbe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableOnErrorComplete;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3eefc4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eefca.  v2:= temp @kind object;
  #L3eefcc.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `onErrorResumeNext`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3eefe0.  v0:= "errorMapper is null" @kind object;
  #L3eefe4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eefea.  v0:= new `io.reactivex.internal.operators.completable.CompletableResumeNext`;
  #L3eefee.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3eeff4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3eeffa.  v2:= temp @kind object;
  #L3eeffc.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `repeat`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.repeat:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef010.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef016.  v0:= temp @kind object;
  #L3ef018.  call temp:= `repeat`(v0) @signature `Lio/reactivex/Flowable;.repeat:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef01e.  v0:= temp @kind object;
  #L3ef020.  call temp:= `fromPublisher`(v0) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef026.  v0:= temp @kind object;
  #L3ef028.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `repeat`(`io.reactivex.Completable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Completable;.repeat:(J)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef03c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef042.  v0:= temp @kind object;
  #L3ef044.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/Flowable;.repeat:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L3ef04a.  v2:= temp @kind object;
  #L3ef04c.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef052.  v2:= temp @kind object;
  #L3ef054.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `repeatUntil`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Completable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef068.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef06e.  v0:= temp @kind object;
  #L3ef070.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ef076.  v2:= temp @kind object;
  #L3ef078.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef07e.  v2:= temp @kind object;
  #L3ef080.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `repeatWhen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef094.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef09a.  v0:= temp @kind object;
  #L3ef09c.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ef0a2.  v2:= temp @kind object;
  #L3ef0a4.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef0aa.  v2:= temp @kind object;
  #L3ef0ac.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.retry:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef0c0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef0c6.  v0:= temp @kind object;
  #L3ef0c8.  call temp:= `retry`(v0) @signature `Lio/reactivex/Flowable;.retry:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef0ce.  v0:= temp @kind object;
  #L3ef0d0.  call temp:= `fromPublisher`(v0) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef0d6.  v0:= temp @kind object;
  #L3ef0d8.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Completable;.retry:(J)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef144.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef14a.  v0:= temp @kind object;
  #L3ef14c.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L3ef152.  v2:= temp @kind object;
  #L3ef154.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef15a.  v2:= temp @kind object;
  #L3ef15c.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Completable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef0ec.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef0f2.  v0:= temp @kind object;
  #L3ef0f4.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ef0fa.  v2:= temp @kind object;
  #L3ef0fc.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef102.  v2:= temp @kind object;
  #L3ef104.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Completable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef118.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef11e.  v0:= temp @kind object;
  #L3ef120.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ef126.  v2:= temp @kind object;
  #L3ef128.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef12e.  v2:= temp @kind object;
  #L3ef130.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retryWhen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef170.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef176.  v0:= temp @kind object;
  #L3ef178.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ef17e.  v2:= temp @kind object;
  #L3ef180.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3ef186.  v2:= temp @kind object;
  #L3ef188.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `startWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ef19c.  v0:= "other is null" @kind object;
  #L3ef1a0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef1a6.  v0:= 2I;
  #L3ef1a8.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3ef1ac.  v1:= 0I;
  #L3ef1ae.  v0[v1]:= v3 @kind object;
  #L3ef1b2.  v3:= 1I;
  #L3ef1b4.  v0[v3]:= v2 @kind object;
  #L3ef1b8.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Completable;.concatArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3ef1be.  v3:= temp @kind object;
  #L3ef1c0.  return v3 @kind object;
}
procedure `io.reactivex.Flowable` `startWith`(`io.reactivex.Completable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef4b8.  v0:= "other is null" @kind object;
  #L3ef4bc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef4c2.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ef4c8.  v0:= temp @kind object;
  #L3ef4ca.  call temp:= `startWith`(v0, v2) @signature `Lio/reactivex/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ef4d0.  v2:= temp @kind object;
  #L3ef4d2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Observable` v2 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef5c4.  v0:= "other is null" @kind object;
  #L3ef5c8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef5ce.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/Completable;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L3ef5d4.  v0:= temp @kind object;
  #L3ef5d6.  call temp:= `concatWith`(v2, v0) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3ef5dc.  v2:= temp @kind object;
  #L3ef5de.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef6bc.  v0:= new `io.reactivex.internal.observers.EmptyCompletableObserver`;
  #L3ef6c0.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/EmptyCompletableObserver;.<init>:()V` @kind direct;
  #L3ef6c6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef6cc.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef6e0.  v0:= "onComplete is null" @kind object;
  #L3ef6e4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef6ea.  v0:= new `io.reactivex.internal.observers.CallbackCompletableObserver`;
  #L3ef6ee.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/functions/Action;)V` @kind direct;
  #L3ef6f4.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef6fa.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef70c.  v0:= "onError is null" @kind object;
  #L3ef710.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef716.  v0:= "onComplete is null" @kind object;
  #L3ef71a.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef720.  v0:= new `io.reactivex.internal.observers.CallbackCompletableObserver`;
  #L3ef724.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3ef72a.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef730.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef8a4.  v0:= "s is null" @kind object;
  #L3ef8a8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef8ae.  call temp:= `onSubscribe`(v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Completable;Lio/reactivex/CompletableObserver;)Lio/reactivex/CompletableObserver;` @kind static;
  #L3ef8b4.  v2:= temp @kind object;
  #L3ef8b6.  call `subscribeActual`(v1, v2) @signature `Lio/reactivex/Completable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef8bc.  return @kind void;
  #L3ef8be.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef8c0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ef8c6.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3ef8cc.  call temp:= `d`(v2) @signature `Lio/reactivex/Completable;.d:(Ljava/lang/Throwable;)Ljava/lang/NullPointerException;` @kind static;
  #L3ef8d2.  v2:= temp @kind object;
  #L3ef8d4.  throw v2;
  #L3ef8d6.  v2:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L3ef8d8.  throw v2;
  catch `java.lang.NullPointerException` @[L3ef8ae..L3ef8bc] goto L3ef8d6;
  catch `java.lang.Throwable` @[L3ef8ae..L3ef8bc] goto L3ef8be;
}
procedure `void` `subscribeActual`(`io.reactivex.CompletableObserver` v0 @kind object) @signature `Lio/reactivex/Completable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Completable` `subscribeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef1d4.  v0:= "scheduler is null" @kind object;
  #L3ef1d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef1de.  v0:= new `io.reactivex.internal.operators.completable.CompletableSubscribeOn`;
  #L3ef1e2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3ef1e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ef1ee.  v2:= temp @kind object;
  #L3ef1f0.  return v2 @kind object;
}
procedure `io.reactivex.CompletableObserver` `subscribeWith`(`io.reactivex.Completable` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/Completable;.subscribeWith:(Lio/reactivex/CompletableObserver;)Lio/reactivex/CompletableObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3ef468.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef46e.  return v1 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef744.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3ef748.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3ef74e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef754.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Completable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Completable;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef768.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3ef76c.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3ef772.  if v2 == 0 then goto L3ef77c;
  #L3ef776.  call `cancel`(v0) @signature `Lio/reactivex/observers/TestObserver;.cancel:()V` @kind virtual;
  #L3ef77c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3ef782.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ef204.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3ef20a.  v4:= temp @kind object;
  #L3ef20c.  v5:= 0I;
  #L3ef20e.  v0:= v6 @kind object;
  #L3ef210.  v1:= v7 @kind wide;
  #L3ef212.  v3:= v9 @kind object;
  #L3ef214.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L3ef21a.  v7:= temp @kind object;
  #L3ef21c.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.CompletableSource` v11 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ef230.  v0:= "other is null" @kind object;
  #L3ef234.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef23a.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3ef240.  v5:= temp @kind object;
  #L3ef242.  v1:= v7 @kind object;
  #L3ef244.  v2:= v8 @kind wide;
  #L3ef246.  v4:= v10 @kind object;
  #L3ef248.  v6:= v11 @kind object;
  #L3ef24a.  call temp:= `c`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L3ef250.  v8:= temp @kind object;
  #L3ef252.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ef264.  v5:= 0I;
  #L3ef266.  v0:= v6 @kind object;
  #L3ef268.  v1:= v7 @kind wide;
  #L3ef26a.  v3:= v9 @kind object;
  #L3ef26c.  v4:= v10 @kind object;
  #L3ef26e.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L3ef274.  v7:= temp @kind object;
  #L3ef276.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.CompletableSource` v6 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef288.  v0:= "other is null" @kind object;
  #L3ef28c.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef292.  call temp:= `c`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L3ef298.  v2:= temp @kind object;
  #L3ef29a.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef7bc.  v0:= "converter is null" @kind object;
  #L3ef7c0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef7c6.  v2:= temp @kind object;
  #L3ef7c8.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L3ef7cc.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ef7d2.  v2:= temp @kind object;
  #L3ef7d4.  return v2 @kind object;
  #L3ef7d6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef7d8.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ef7de.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3ef7e4.  v2:= temp @kind object;
  #L3ef7e6.  throw v2;
  catch `java.lang.Throwable` @[L3ef7bc..L3ef7d4] goto L3ef7d6;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef4e4.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToFlowable` @kind boolean;
  #L3ef4e8.  if v0 == 0 then goto L3ef4fc;
  #L3ef4ec.  v0:= v1 @kind object;
  #L3ef4ee.  v0:= (`io.reactivex.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L3ef4f2.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/Flowable;` @kind interface;
  #L3ef4f8.  v0:= temp @kind object;
  #L3ef4fa.  return v0 @kind object;
  #L3ef4fc.  v0:= new `io.reactivex.internal.operators.completable.CompletableToFlowable`;
  #L3ef500.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ef506.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3ef50c.  v0:= temp @kind object;
  #L3ef50e.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `toMaybe`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toMaybe:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef550.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToMaybe` @kind boolean;
  #L3ef554.  if v0 == 0 then goto L3ef568;
  #L3ef558.  v0:= v1 @kind object;
  #L3ef55a.  v0:= (`io.reactivex.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L3ef55e.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/Maybe;` @kind interface;
  #L3ef564.  v0:= temp @kind object;
  #L3ef566.  return v0 @kind object;
  #L3ef568.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFromCompletable`;
  #L3ef56c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ef572.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3ef578.  v0:= temp @kind object;
  #L3ef57a.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `toObservable`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef5f0.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToObservable` @kind boolean;
  #L3ef5f4.  if v0 == 0 then goto L3ef608;
  #L3ef5f8.  v0:= v1 @kind object;
  #L3ef5fa.  v0:= (`io.reactivex.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L3ef5fe.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/Observable;` @kind interface;
  #L3ef604.  v0:= temp @kind object;
  #L3ef606.  return v0 @kind object;
  #L3ef608.  v0:= new `io.reactivex.internal.operators.completable.CompletableToObservable`;
  #L3ef60c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ef612.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3ef618.  v0:= temp @kind object;
  #L3ef61a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toSingle`(`io.reactivex.Completable` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Completable;.toSingle:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ef65c.  v0:= "completionValueSupplier is null" @kind object;
  #L3ef660.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef666.  v0:= new `io.reactivex.internal.operators.completable.CompletableToSingle`;
  #L3ef66a.  v1:= 0I;
  #L3ef66c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/CompletableSource;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V` @kind direct;
  #L3ef672.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ef678.  v3:= temp @kind object;
  #L3ef67a.  return v3 @kind object;
}
procedure `io.reactivex.Single` `toSingleDefault`(`io.reactivex.Completable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Completable;.toSingleDefault:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ef68c.  v0:= "completionValue is null" @kind object;
  #L3ef690.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef696.  v0:= new `io.reactivex.internal.operators.completable.CompletableToSingle`;
  #L3ef69a.  v1:= 0I;
  #L3ef69c.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/CompletableSource;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V` @kind direct;
  #L3ef6a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ef6a8.  v3:= temp @kind object;
  #L3ef6aa.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `unsubscribeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ef394.  v0:= "scheduler is null" @kind object;
  #L3ef398.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ef39e.  v0:= new `io.reactivex.internal.operators.completable.CompletableDisposeOn`;
  #L3ef3a2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3ef3a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3ef3ae.  v2:= temp @kind object;
  #L3ef3b0.  return v2 @kind object;
}
