record `io.reactivex.internal.queue.MpscLinkedQueue` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.fuseable.SimplePlainQueue` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.queue.MpscLinkedQueue.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.queue.MpscLinkedQueue.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L452f14.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L452f1a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L452f1e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L452f24.  v1.`io.reactivex.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L452f28.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L452f2c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L452f32.  v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L452f36.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue$a`;
  #L452f3a.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.<init>:()V` @kind direct;
  #L452f40.  call `g`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L452f46.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L452f4c.  return @kind void;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$a` `a`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L452e20.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L452e24.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L452e2a.  v0:= temp @kind object;
  #L452e2c.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L452e30.  return v0 @kind object;
}
procedure `void` `clear`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L452f60.  call temp:= `poll`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L452f66.  v0:= temp @kind object;
  #L452f68.  if v0 == 0 then goto L452f7a;
  #L452f6c.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L452f72.  v0:= temp;
  #L452f74.  if v0 != 0 then goto L452f7a;
  #L452f78.  goto L452f60;
  #L452f7a.  return @kind void;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$a` `e`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.e:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L452e44.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L452e48.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L452e4e.  v0:= temp @kind object;
  #L452e50.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L452e54.  return v0 @kind object;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$a` `f`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L452e68.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L452e6c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L452e72.  v0:= temp @kind object;
  #L452e74.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L452e78.  return v0 @kind object;
}
procedure `void` `g`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.internal.queue.MpscLinkedQueue$a` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @AccessFlag  {
    temp;
    v0;

  #L452f8c.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L452f90.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L452f96.  return @kind void;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$a` `h`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.internal.queue.MpscLinkedQueue$a` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L452e8c.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L452e90.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L452e96.  v2:= temp @kind object;
  #L452e98.  v2:= (`io.reactivex.internal.queue.MpscLinkedQueue$a`) v2 @kind object;
  #L452e9c.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L452d9c.  call temp:= `e`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.e:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L452da2.  v0:= temp @kind object;
  #L452da4.  call temp:= `f`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L452daa.  v1:= temp @kind object;
  #L452dac.  if v0 != v1 then goto L452db4;
  #L452db0.  v0:= 1I;
  #L452db2.  goto L452db6;
  #L452db4.  v0:= 0I;
  #L452db6.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L452dc8.  v0:= "Null is not a valid element" @kind object;
  #L452dcc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L452dd2.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue$a`;
  #L452dd6.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L452ddc.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L452de2.  v2:= temp @kind object;
  #L452de4.  call `d`(v2, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.d:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L452dea.  v2:= 1I;
  #L452dec.  return v2;
}
procedure `boolean` `offer`(`io.reactivex.internal.queue.MpscLinkedQueue` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L452e00.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L452e06.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L452e0c.  v1:= 1I;
  #L452e0e.  return v1;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L452eb0.  call temp:= `a`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L452eb6.  v0:= temp @kind object;
  #L452eb8.  call temp:= `c`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.c:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L452ebe.  v1:= temp @kind object;
  #L452ec0.  if v1 == 0 then goto L452ed4;
  #L452ec4.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L452eca.  v0:= temp @kind object;
  #L452ecc.  call `g`(v2, v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L452ed2.  return v0 @kind object;
  #L452ed4.  call temp:= `f`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L452eda.  v1:= temp @kind object;
  #L452edc.  if v0 == v1 then goto L452efe;
  #L452ee0.  call temp:= `c`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.c:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L452ee6.  v1:= temp @kind object;
  #L452ee8.  if v1 != 0 then goto L452eee;
  #L452eec.  goto L452ee0;
  #L452eee.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L452ef4.  v0:= temp @kind object;
  #L452ef6.  call `g`(v2, v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L452efc.  return v0 @kind object;
  #L452efe.  v0:= 0I;
  #L452f00.  return v0 @kind object;
}
