record `io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.fuseable.SimplePlainQueue` @kind interface {
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.internal.queue.SpscLinkedArrayQueue.a` @AccessFlag FINAL;
  `int` `io.reactivex.internal.queue.SpscLinkedArrayQueue.b` @AccessFlag ;
  `long` `io.reactivex.internal.queue.SpscLinkedArrayQueue.c` @AccessFlag ;
  `int` `io.reactivex.internal.queue.SpscLinkedArrayQueue.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `io.reactivex.internal.queue.SpscLinkedArrayQueue.e` @AccessFlag ;
  `int` `io.reactivex.internal.queue.SpscLinkedArrayQueue.f` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `io.reactivex.internal.queue.SpscLinkedArrayQueue.g` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.internal.queue.SpscLinkedArrayQueue.h` @AccessFlag FINAL;
}
global `int` `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.i` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L453658.  v0:= "jctools.spsc.max.lookahead.step" @kind object;
  #L45365c.  v1:= 4096I;
  #L453660.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L453666.  v0:= temp @kind object;
  #L453668.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L45366e.  v0:= temp;
  #L453670.  `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.i` @type ^`int` := v0;
  #L453674.  v0:= new `java.lang.Object`;
  #L453678.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45367e.  `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` := v0 @kind object;
  #L453682.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L453694.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45369a.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L45369e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4536a4.  v3.`io.reactivex.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4536a8.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4536ac.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4536b2.  v3.`io.reactivex.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4536b6.  v0:= 8I;
  #L4536ba.  call temp:= `max`(v0, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4536c0.  v4:= temp;
  #L4536c2.  call temp:= `roundToPowerOfTwo`(v4) @signature `Lio/reactivex/internal/util/Pow2;.roundToPowerOfTwo:(I)I` @kind static;
  #L4536c8.  v4:= temp;
  #L4536ca.  v0:= v4 + -1;
  #L4536ce.  v1:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L4536d2.  v2:= v4 + 1;
  #L4536d6.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L4536dc.  v3.`io.reactivex.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L4536e0.  v3.`io.reactivex.internal.queue.SpscLinkedArrayQueue.d` @type ^`int` := v0;
  #L4536e4.  call `a`(v3, v4) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.a:(I)V` @kind direct;
  #L4536ea.  v3.`io.reactivex.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L4536ee.  v3.`io.reactivex.internal.queue.SpscLinkedArrayQueue.f` @type ^`int` := v0;
  #L4536f2.  v0:= v0 + -1;
  #L4536f6.  v0:= (`long`) v0 @kind i2l;
  #L4536f8.  v3.`io.reactivex.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v0 @kind wide;
  #L4536fc.  v0:= 0L;
  #L453700.  call `s`(v3, v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L453706.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L453718.  v2:= v2 / 4;
  #L45371c.  v0:= `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.i` @type ^`int`;
  #L453720.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L453726.  v2:= temp;
  #L453728.  v1.`io.reactivex.internal.queue.SpscLinkedArrayQueue.b` @type ^`int` := v2;
  #L45372c.  return @kind void;
}
procedure `int` `e`(`int` v0 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4533f0.  return v0;
}
procedure `int` `f`(`long` v0 , `int` v2 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L453404.  v1:= (`int`) v0 @kind l2i;
  #L453406.  v0:= v1 ^& v2 @kind int;
  #L45340a.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L453410.  v0:= temp;
  #L453412.  return v0;
}
procedure `long` `g`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.g:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4535d8.  v0:= v2.`io.reactivex.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4535dc.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4535e2.  v0:= temp @kind wide;
  #L4535e4.  return v0 @kind wide;
}
procedure `long` `h`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.h:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4535f8.  v0:= v2.`io.reactivex.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4535fc.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L453602.  v0:= temp @kind wide;
  #L453604.  return v0 @kind wide;
}
procedure `long` `i`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.i:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L453618.  v0:= v2.`io.reactivex.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L45361c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L453622.  v0:= temp @kind wide;
  #L453624.  return v0 @kind wide;
}
procedure `java.lang.Object` `j`(`java.util.concurrent.atomic.AtomicReferenceArray` v0 @kind object, `int` v1 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L453460.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L453466.  v0:= temp @kind object;
  #L453468.  return v0 @kind object;
}
procedure `java.util.concurrent.atomic.AtomicReferenceArray` `k`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v2 @kind object) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4535a4.  call temp:= `length`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L4535aa.  v0:= temp;
  #L4535ac.  v0:= v0 + -1;
  #L4535b0.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L4535b6.  v0:= temp;
  #L4535b8.  call temp:= `j`(v2, v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4535be.  v2:= temp @kind object;
  #L4535c0.  v2:= (`java.util.concurrent.atomic.AtomicReferenceArray`) v2 @kind object;
  #L4535c4.  return v2 @kind object;
}
procedure `long` `l`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.l:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L453638.  v0:= v2.`io.reactivex.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L45363c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L453642.  v0:= temp @kind wide;
  #L453644.  return v0 @kind wide;
}
procedure `java.lang.Object` `m`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v0 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v1 @kind object, `long` v2 , `int` v4 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.m:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;

  #L45347c.  v0.`io.reactivex.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L453480.  call temp:= `f`(v2, v4) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L453486.  v2:= temp;
  #L453488.  call temp:= `j`(v1, v2) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L45348e.  v1:= temp @kind object;
  #L453490.  return v1 @kind object;
}
procedure `java.lang.Object` `n`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v3 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v4 @kind object, `long` v5 , `int` v7 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.n:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4534a4.  v3.`io.reactivex.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v4 @kind object;
  #L4534a8.  call temp:= `f`(v5, v7) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4534ae.  v7:= temp;
  #L4534b0.  call temp:= `j`(v4, v7) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4534b6.  v0:= temp @kind object;
  #L4534b8.  if v0 == 0 then goto L4534d0;
  #L4534bc.  v1:= 0I;
  #L4534be.  call `q`(v4, v7, v1) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4534c4.  v1:= 1L;
  #L4534c8.  v5:= v5 + v1 @kind long;
  #L4534ca.  call `p`(v3, v5) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @kind direct;
  #L4534d0.  return v0 @kind object;
}
procedure `void` `o`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v4 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v5 @kind object, `long` v6 , `int` v8 , `java.lang.Object` v9 @kind object, `long` v10 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.o:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JILjava/lang/Object;J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45376c.  call temp:= `length`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L453772.  v0:= temp;
  #L453774.  v1:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L453778.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L45377e.  v4.`io.reactivex.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L453782.  v10:= v10 + v6 @kind long;
  #L453784.  v2:= 1L;
  #L453788.  v10:= v10 - v2 @kind long;
  #L45378a.  v4.`io.reactivex.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v10 @kind wide;
  #L45378e.  call `q`(v1, v8, v9) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L453794.  call `r`(v4, v5, v1) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @kind direct;
  #L45379a.  v9:= `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L45379e.  call `q`(v5, v8, v9) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4537a4.  v6:= v6 + v2 @kind long;
  #L4537a6.  call `s`(v4, v6) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L4537ac.  return @kind void;
}
procedure `void` `p`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4537c0.  v0:= v1.`io.reactivex.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4537c4.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L4537ca.  return @kind void;
}
procedure `void` `q`(`java.util.concurrent.atomic.AtomicReferenceArray` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4537dc.  call `lazySet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L4537e2.  return @kind void;
}
procedure `void` `r`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v2 @kind object, `java.util.concurrent.atomic.AtomicReferenceArray` v3 @kind object) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4537f4.  call temp:= `length`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L4537fa.  v0:= temp;
  #L4537fc.  v0:= v0 + -1;
  #L453800.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L453806.  v0:= temp;
  #L453808.  call `q`(v2, v0, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L45380e.  return @kind void;
}
procedure `void` `s`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L453820.  v0:= v1.`io.reactivex.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L453824.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L45382a.  return @kind void;
}
procedure `boolean` `t`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v0 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v1 @kind object, `java.lang.Object` v2 @kind object, `long` v3 , `int` v5 ) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @AccessFlag PRIVATE {
    temp;

  #L4533c8.  call `q`(v1, v5, v2) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4533ce.  v1:= 1L;
  #L4533d2.  v3:= v3 + v1 @kind long;
  #L4533d4.  call `s`(v0, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L4533da.  v1:= 1I;
  #L4533dc.  return v1;
}
procedure `void` `clear`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453740.  call temp:= `poll`(v1) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L453746.  v0:= temp @kind object;
  #L453748.  if v0 != 0 then goto L453740;
  #L45374c.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L453752.  v0:= temp;
  #L453754.  if v0 != 0 then goto L45375a;
  #L453758.  goto L453740;
  #L45375a.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v5 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45323c.  call temp:= `l`(v5) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L453242.  v0:= temp @kind wide;
  #L453244.  call temp:= `i`(v5) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L45324a.  v2:= temp @kind wide;
  #L45324c.  v4:= lcmp(v0, v2);
  #L453250.  if v4 != 0 then goto L453258;
  #L453254.  v0:= 1I;
  #L453256.  goto L45325a;
  #L453258.  v0:= 0I;
  #L45325a.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v11 @kind this, `java.lang.Object` v12 @kind object) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L45326c.  v0:= "Null is not a valid element" @kind object;
  #L453270.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L453276.  v2:= v11.`io.reactivex.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L45327a.  call temp:= `h`(v11) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.h:()J` @kind direct;
  #L453280.  v4:= temp @kind wide;
  #L453282.  v0:= v11.`io.reactivex.internal.queue.SpscLinkedArrayQueue.d` @type ^`int`;
  #L453286.  call temp:= `f`(v4, v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L45328c.  v6:= temp;
  #L45328e.  v7:= v11.`io.reactivex.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` @kind wide;
  #L453292.  v1:= lcmp(v4, v7);
  #L453296.  if v1 >= 0 then goto L4532a8;
  #L45329a.  v1:= v11 @kind object;
  #L45329c.  v3:= v12 @kind object;
  #L45329e.  call temp:= `t`(v1, v2, v3, v4, v6) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L4532a4.  v12:= temp;
  #L4532a6.  return v12;
  #L4532a8.  v1:= v11.`io.reactivex.internal.queue.SpscLinkedArrayQueue.b` @type ^`int`;
  #L4532ac.  v7:= (`long`) v1 @kind i2l;
  #L4532ae.  v7:= v7 + v4 @kind long;
  #L4532b0.  call temp:= `f`(v7, v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4532b6.  v1:= temp;
  #L4532b8.  call temp:= `j`(v2, v1) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4532be.  v1:= temp @kind object;
  #L4532c0.  v9:= 1L;
  #L4532c4.  if v1 != 0 then goto L4532dc;
  #L4532c8.  v7:= v7 - v9 @kind long;
  #L4532ca.  v11.`io.reactivex.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v7 @kind wide;
  #L4532ce.  v1:= v11 @kind object;
  #L4532d0.  v3:= v12 @kind object;
  #L4532d2.  call temp:= `t`(v1, v2, v3, v4, v6) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L4532d8.  v12:= temp;
  #L4532da.  return v12;
  #L4532dc.  v9:= v9 + v4 @kind long;
  #L4532de.  call temp:= `f`(v9, v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4532e4.  v1:= temp;
  #L4532e6.  call temp:= `j`(v2, v1) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4532ec.  v1:= temp @kind object;
  #L4532ee.  if v1 != 0 then goto L453300;
  #L4532f2.  v1:= v11 @kind object;
  #L4532f4.  v3:= v12 @kind object;
  #L4532f6.  call temp:= `t`(v1, v2, v3, v4, v6) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L4532fc.  v12:= temp;
  #L4532fe.  return v12;
  #L453300.  v7:= (`long`) v0 @kind i2l;
  #L453302.  v1:= v11 @kind object;
  #L453304.  v3:= v4 @kind wide;
  #L453306.  v5:= v6;
  #L453308.  v6:= v12 @kind object;
  #L45330a.  call `o`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.o:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JILjava/lang/Object;J)V` @kind direct;
  #L453310.  v12:= 1I;
  #L453312.  return v12;
}
procedure `boolean` `offer`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v8 @kind this, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L453324.  v0:= v8.`io.reactivex.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L453328.  call temp:= `l`(v8) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L45332e.  v1:= temp @kind wide;
  #L453330.  v3:= v8.`io.reactivex.internal.queue.SpscLinkedArrayQueue.d` @type ^`int`;
  #L453334.  v4:= 2L;
  #L453338.  v4:= v4 + v1 @kind long;
  #L45333a.  call temp:= `f`(v4, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L453340.  v6:= temp;
  #L453342.  call temp:= `j`(v0, v6) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L453348.  v6:= temp @kind object;
  #L45334a.  if v6 != 0 then goto L45336e;
  #L45334e.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L453354.  v1:= temp;
  #L453356.  v2:= v1 + 1;
  #L45335a.  call `q`(v0, v2, v10) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L453360.  call `q`(v0, v1, v9) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L453366.  call `s`(v8, v4) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L45336c.  goto L4533b2;
  #L45336e.  call temp:= `length`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L453374.  v6:= temp;
  #L453376.  v7:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L45337a.  call `<init>`(v7, v6) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L453380.  v8.`io.reactivex.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v7 @kind object;
  #L453384.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L45338a.  v1:= temp;
  #L45338c.  v2:= v1 + 1;
  #L453390.  call `q`(v7, v2, v10) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L453396.  call `q`(v7, v1, v9) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L45339c.  call `r`(v8, v0, v7) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @kind direct;
  #L4533a2.  v9:= `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L4533a6.  call `q`(v0, v1, v9) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4533ac.  call `s`(v8, v4) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L4533b2.  v9:= 1I;
  #L4533b4.  return v9;
}
procedure `java.lang.Object` `peek`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v6 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4534e4.  v0:= v6.`io.reactivex.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L4534e8.  call temp:= `g`(v6) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.g:()J` @kind direct;
  #L4534ee.  v1:= temp @kind wide;
  #L4534f0.  v3:= v6.`io.reactivex.internal.queue.SpscLinkedArrayQueue.f` @type ^`int`;
  #L4534f4.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4534fa.  v4:= temp;
  #L4534fc.  call temp:= `j`(v0, v4) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L453502.  v4:= temp @kind object;
  #L453504.  v5:= `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L453508.  if v4 != v5 then goto L45351e;
  #L45350c.  call temp:= `k`(v6, v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @kind direct;
  #L453512.  v0:= temp @kind object;
  #L453514.  call temp:= `m`(v6, v0, v1, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.m:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @kind direct;
  #L45351a.  v0:= temp @kind object;
  #L45351c.  return v0 @kind object;
  #L45351e.  return v4 @kind object;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v8 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L453530.  v0:= v8.`io.reactivex.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L453534.  call temp:= `g`(v8) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.g:()J` @kind direct;
  #L45353a.  v1:= temp @kind wide;
  #L45353c.  v3:= v8.`io.reactivex.internal.queue.SpscLinkedArrayQueue.f` @type ^`int`;
  #L453540.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L453546.  v4:= temp;
  #L453548.  call temp:= `j`(v0, v4) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L45354e.  v5:= temp @kind object;
  #L453550.  v6:= `@@io.reactivex.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L453554.  if v5 != v6 then goto L45355c;
  #L453558.  v6:= 1I;
  #L45355a.  goto L45355e;
  #L45355c.  v6:= 0I;
  #L45355e.  v7:= 0I;
  #L453560.  if v5 == 0 then goto L45357c;
  #L453564.  if v6 != 0 then goto L45357c;
  #L453568.  call `q`(v0, v4, v7) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L45356e.  v3:= 1L;
  #L453572.  v1:= v1 + v3 @kind long;
  #L453574.  call `p`(v8, v1) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @kind direct;
  #L45357a.  return v5 @kind object;
  #L45357c.  if v6 == 0 then goto L453592;
  #L453580.  call temp:= `k`(v8, v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @kind direct;
  #L453586.  v0:= temp @kind object;
  #L453588.  call temp:= `n`(v8, v0, v1, v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.n:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @kind direct;
  #L45358e.  v0:= temp @kind object;
  #L453590.  return v0 @kind object;
  #L453592.  return v7 @kind object;
}
procedure `int` `size`(`io.reactivex.internal.queue.SpscLinkedArrayQueue` v7 @kind this) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L453424.  call temp:= `i`(v7) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L45342a.  v0:= temp @kind wide;
  #L45342c.  call temp:= `l`(v7) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L453432.  v2:= temp @kind wide;
  #L453434.  call temp:= `i`(v7) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L45343a.  v4:= temp @kind wide;
  #L45343c.  v6:= lcmp(v0, v4);
  #L453440.  if v6 != 0 then goto L45344a;
  #L453444.  v2:= v2 - v4 @kind long;
  #L453446.  v0:= (`int`) v2 @kind l2i;
  #L453448.  return v0;
  #L45344a.  v0:= v4 @kind wide;
  #L45344c.  goto L45342c;
}
