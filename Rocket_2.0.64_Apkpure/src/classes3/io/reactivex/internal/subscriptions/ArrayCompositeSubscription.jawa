record `io.reactivex.internal.subscriptions.ArrayCompositeSubscription` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.internal.subscriptions.ArrayCompositeSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L457be4.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L457bea.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v4 @kind this) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L457bfc.  v0:= 0I;
  #L457bfe.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L457c04.  v1:= temp @kind object;
  #L457c06.  v2:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L457c0a.  if v1 == v2 then goto L457c4e;
  #L457c0e.  call temp:= `length`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L457c14.  v1:= temp;
  #L457c16.  if v0 >= v1 then goto L457c4e;
  #L457c1a.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L457c20.  v2:= temp @kind object;
  #L457c22.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L457c26.  v3:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L457c2a.  if v2 == v3 then goto L457c48;
  #L457c2e.  call temp:= `getAndSet`(v4, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L457c34.  v2:= temp @kind object;
  #L457c36.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L457c3a.  if v2 == v3 then goto L457c48;
  #L457c3e.  if v2 == 0 then goto L457c48;
  #L457c42.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L457c48.  v0:= v0 + 1;
  #L457c4c.  goto L457c16;
  #L457c4e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v3 @kind this) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L457b30.  v0:= 0I;
  #L457b32.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L457b38.  v1:= temp @kind object;
  #L457b3a.  v2:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L457b3e.  if v1 != v2 then goto L457b44;
  #L457b42.  v0:= 1I;
  #L457b44.  return v0;
}
procedure `org.reactivestreams.Subscription` `replaceResource`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v2 @kind this, `int` v3 , `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.replaceResource:(ILorg/reactivestreams/Subscription;)Lorg/reactivestreams/Subscription;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L457ba4.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L457baa.  v0:= temp @kind object;
  #L457bac.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L457bb0.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L457bb4.  if v0 != v1 then goto L457bc6;
  #L457bb8.  if v4 == 0 then goto L457bc2;
  #L457bbc.  call `cancel`(v4) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L457bc2.  v3:= 0I;
  #L457bc4.  return v3 @kind object;
  #L457bc6.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L457bcc.  v1:= temp;
  #L457bce.  if v1 == 0 then goto L457ba4;
  #L457bd2.  return v0 @kind object;
}
procedure `boolean` `setResource`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v2 @kind this, `int` v3 , `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.setResource:(ILorg/reactivestreams/Subscription;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L457b58.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L457b5e.  v0:= temp @kind object;
  #L457b60.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L457b64.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L457b68.  if v0 != v1 then goto L457b7a;
  #L457b6c.  if v4 == 0 then goto L457b76;
  #L457b70.  call `cancel`(v4) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L457b76.  v3:= 0I;
  #L457b78.  return v3;
  #L457b7a.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L457b80.  v1:= temp;
  #L457b82.  if v1 == 0 then goto L457b58;
  #L457b86.  if v0 == 0 then goto L457b90;
  #L457b8a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L457b90.  v3:= 1I;
  #L457b92.  return v3;
}
