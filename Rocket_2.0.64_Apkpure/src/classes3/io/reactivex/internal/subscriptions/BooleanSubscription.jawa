record `io.reactivex.internal.subscriptions.BooleanSubscription` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `org.reactivestreams.Subscription` @kind interface {
}
global `long` `@@io.reactivex.internal.subscriptions.BooleanSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscriptions.BooleanSubscription` v0 @kind this) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L457eb0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L457eb6.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscriptions.BooleanSubscription` v1 @kind this) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457ec8.  v0:= 1I;
  #L457eca.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.lazySet:(Z)V` @kind virtual;
  #L457ed0.  return @kind void;
}
procedure `boolean` `isCancelled`(`io.reactivex.internal.subscriptions.BooleanSubscription` v1 @kind this) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457e4c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L457e52.  v0:= temp;
  #L457e54.  return v0;
}
procedure `void` `request`(`io.reactivex.internal.subscriptions.BooleanSubscription` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.request:(J)V` @AccessFlag PUBLIC {
    temp;

  #L457ee4.  call temp:= `validate`(v1) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L457eea.  return @kind void;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.subscriptions.BooleanSubscription` v2 @kind this) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L457e68.  v0:= new `java.lang.StringBuilder`;
  #L457e6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L457e72.  v1:= "BooleanSubscription(cancelled=" @kind object;
  #L457e76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457e7c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L457e82.  v1:= temp;
  #L457e84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L457e8a.  v1:= ")" @kind object;
  #L457e8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457e94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L457e9a.  v0:= temp @kind object;
  #L457e9c.  return v0 @kind object;
}
