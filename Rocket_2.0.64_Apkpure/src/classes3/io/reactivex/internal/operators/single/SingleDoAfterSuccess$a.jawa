record `io.reactivex.internal.operators.single.SingleDoAfterSuccess$a` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Consumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44f640.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44f646.  v0.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L44f64a.  v0.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L44f64e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f660.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44f664.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44f66a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f620.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44f624.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L44f62a.  v0:= temp;
  #L44f62c.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f67c.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f680.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44f686.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f698.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44f69c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L44f6a2.  v0:= temp;
  #L44f6a4.  if v0 == 0 then goto L44f6b6;
  #L44f6a8.  v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L44f6ac.  v2:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f6b0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L44f6b6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f6c8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f6cc.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L44f6d2.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L44f6d6.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L44f6dc.  goto L44f6ec;
  #L44f6de.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44f6e0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44f6e6.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44f6ec.  return @kind void;
  catch `java.lang.Throwable` @[L44f6d2..L44f6dc] goto L44f6de;
}
