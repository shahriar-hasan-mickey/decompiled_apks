record `io.reactivex.internal.operators.single.SingleZipArray` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.SingleSource`[] `io.reactivex.internal.operators.single.SingleZipArray.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleZipArray.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleZipArray` v0 @kind this, `io.reactivex.SingleSource`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleZipArray;.<init>:([Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L452a9c.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L452aa2.  v0.`io.reactivex.internal.operators.single.SingleZipArray.a` @type ^`io.reactivex.SingleSource`[] := v1 @kind object;
  #L452aa6.  v0.`io.reactivex.internal.operators.single.SingleZipArray.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L452aaa.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleZipArray` v5 @kind this, `io.reactivex.SingleObserver` v6 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleZipArray;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L452abc.  v0:= v5.`io.reactivex.internal.operators.single.SingleZipArray.a` @type ^`io.reactivex.SingleSource`[] @kind object;
  #L452ac0.  v1:= length @variable v0;
  #L452ac2.  v2:= 0I;
  #L452ac4.  v3:= 1I;
  #L452ac6.  if v1 != v3 then goto L452aea;
  #L452aca.  v0:= v0[v2] @kind object;
  #L452ace.  v1:= new `io.reactivex.internal.operators.single.SingleMap$a`;
  #L452ad2.  v2:= new `io.reactivex.internal.operators.single.SingleZipArray$a`;
  #L452ad6.  call `<init>`(v2, v5) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$a;.<init>:(Lio/reactivex/internal/operators/single/SingleZipArray;)V` @kind direct;
  #L452adc.  call `<init>`(v1, v6, v2) @signature `Lio/reactivex/internal/operators/single/SingleMap$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Function;)V` @kind direct;
  #L452ae2.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L452ae8.  return @kind void;
  #L452aea.  v3:= new `io.reactivex.internal.operators.single.SingleZipArray$b`;
  #L452aee.  v4:= v5.`io.reactivex.internal.operators.single.SingleZipArray.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L452af2.  call `<init>`(v3, v6, v1, v4) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$b;.<init>:(Lio/reactivex/SingleObserver;ILio/reactivex/functions/Function;)V` @kind direct;
  #L452af8.  call `onSubscribe`(v6, v3) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L452afe.  if v2 >= v1 then goto L452b42;
  #L452b02.  call temp:= `isDisposed`(v3) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$b;.isDisposed:()Z` @kind virtual;
  #L452b08.  v6:= temp;
  #L452b0a.  if v6 == 0 then goto L452b10;
  #L452b0e.  return @kind void;
  #L452b10.  v6:= v0[v2] @kind object;
  #L452b14.  if v6 != 0 then goto L452b2e;
  #L452b18.  v6:= new `java.lang.NullPointerException`;
  #L452b1c.  v0:= "One of the sources is null" @kind object;
  #L452b20.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L452b26.  call `b`(v3, v6, v2) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$b;.b:(Ljava/lang/Throwable;I)V` @kind virtual;
  #L452b2c.  return @kind void;
  #L452b2e.  v4:= v3.`io.reactivex.internal.operators.single.SingleZipArray$b.c` @type ^`io.reactivex.internal.operators.single.SingleZipArray$c`[] @kind object;
  #L452b32.  v4:= v4[v2] @kind object;
  #L452b36.  call `subscribe`(v6, v4) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L452b3c.  v2:= v2 + 1;
  #L452b40.  goto L452afe;
  #L452b42.  return @kind void;
}
