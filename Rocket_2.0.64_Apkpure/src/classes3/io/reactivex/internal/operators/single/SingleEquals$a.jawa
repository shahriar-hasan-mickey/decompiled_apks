record `io.reactivex.internal.operators.single.SingleEquals$a` @kind class @AccessFlag  extends `io.reactivex.SingleObserver` @kind interface {
  `int` `io.reactivex.internal.operators.single.SingleEquals$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.single.SingleEquals$a.b` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.internal.operators.single.SingleEquals$a.c` @AccessFlag FINAL;
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleEquals$a.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.internal.operators.single.SingleEquals$a.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleEquals$a` v0 @kind this, `int` v1 , `io.reactivex.disposables.CompositeDisposable` v2 @kind object, `java.lang.Object`[] v3 @kind object, `io.reactivex.SingleObserver` v4 @kind object, `java.util.concurrent.atomic.AtomicInteger` v5 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleEquals$a;.<init>:(ILio/reactivex/disposables/CompositeDisposable;[Ljava/lang/Object;Lio/reactivex/SingleObserver;Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44ff98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44ff9e.  v0.`io.reactivex.internal.operators.single.SingleEquals$a.a` @type ^`int` := v1;
  #L44ffa2.  v0.`io.reactivex.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v2 @kind object;
  #L44ffa6.  v0.`io.reactivex.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] := v3 @kind object;
  #L44ffaa.  v0.`io.reactivex.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.SingleObserver` := v4 @kind object;
  #L44ffae.  v0.`io.reactivex.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` := v5 @kind object;
  #L44ffb2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleEquals$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleEquals$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44ffc4.  v0:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L44ffc8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L44ffce.  v0:= temp;
  #L44ffd0.  v1:= 2I;
  #L44ffd2.  if v0 < v1 then goto L44ffde;
  #L44ffd6.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44ffdc.  return @kind void;
  #L44ffde.  v2:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L44ffe2.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L44ffe8.  v0:= temp;
  #L44ffea.  if v0 == 0 then goto L44ffc4;
  #L44ffee.  v0:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L44fff2.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L44fff8.  v0:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44fffc.  call `onError`(v0, v4) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L450002.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleEquals$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleEquals$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450014.  v0:= v1.`io.reactivex.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L450018.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L45001e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleEquals$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleEquals$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L450030.  v0:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] @kind object;
  #L450034.  v1:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.a` @type ^`int`;
  #L450038.  v0[v1]:= v4 @kind object;
  #L45003c.  v4:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L450040.  call temp:= `incrementAndGet`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L450046.  v4:= temp;
  #L450048.  v0:= 2I;
  #L45004a.  if v4 != v0 then goto L450078;
  #L45004e.  v4:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.SingleObserver` @kind object;
  #L450052.  v0:= v3.`io.reactivex.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] @kind object;
  #L450056.  v1:= 0I;
  #L450058.  v1:= v0[v1] @kind object;
  #L45005c.  v2:= 1I;
  #L45005e.  v0:= v0[v2] @kind object;
  #L450062.  call temp:= `equals`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L450068.  v0:= temp;
  #L45006a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L450070.  v0:= temp @kind object;
  #L450072.  call `onSuccess`(v4, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L450078.  return @kind void;
}
