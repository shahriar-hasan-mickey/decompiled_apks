record `io.reactivex.internal.operators.single.SingleZipArray$a` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.internal.operators.single.SingleZipArray` `io.reactivex.internal.operators.single.SingleZipArray$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleZipArray$a` v0 @kind this, `io.reactivex.internal.operators.single.SingleZipArray` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$a;.<init>:(Lio/reactivex/internal/operators/single/SingleZipArray;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L45285c.  v0.`io.reactivex.internal.operators.single.SingleZipArray$a.a` @type ^`io.reactivex.internal.operators.single.SingleZipArray` := v1 @kind object;
  #L452860.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L452866.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.single.SingleZipArray$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$a;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45282c.  v0:= v3.`io.reactivex.internal.operators.single.SingleZipArray$a.a` @type ^`io.reactivex.internal.operators.single.SingleZipArray` @kind object;
  #L452830.  v0:= v0.`io.reactivex.internal.operators.single.SingleZipArray.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L452834.  v1:= 1I;
  #L452836.  v1:= new `java.lang.Object`[v1];
  #L45283a.  v2:= 0I;
  #L45283c.  v1[v2]:= v4 @kind object;
  #L452840.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L452846.  v4:= temp @kind object;
  #L452848.  return v4 @kind object;
}
