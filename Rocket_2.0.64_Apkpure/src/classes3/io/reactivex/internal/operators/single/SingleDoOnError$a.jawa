record `io.reactivex.internal.operators.single.SingleDoOnError$a` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoOnError$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.single.SingleDoOnError` `io.reactivex.internal.operators.single.SingleDoOnError$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoOnError$a` v0 @kind this, `io.reactivex.internal.operators.single.SingleDoOnError` v1 @kind object, `io.reactivex.SingleObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnError$a;.<init>:(Lio/reactivex/internal/operators/single/SingleDoOnError;Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44fb68.  v0.`io.reactivex.internal.operators.single.SingleDoOnError$a.b` @type ^`io.reactivex.internal.operators.single.SingleDoOnError` := v1 @kind object;
  #L44fb6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44fb72.  v0.`io.reactivex.internal.operators.single.SingleDoOnError$a.a` @type ^`io.reactivex.SingleObserver` := v2 @kind object;
  #L44fb76.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoOnError$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnError$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44fb88.  v0:= v4.`io.reactivex.internal.operators.single.SingleDoOnError$a.b` @type ^`io.reactivex.internal.operators.single.SingleDoOnError` @kind object;
  #L44fb8c.  v0:= v0.`io.reactivex.internal.operators.single.SingleDoOnError.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L44fb90.  call `accept`(v0, v5) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L44fb96.  goto L44fbbe;
  #L44fb98.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44fb9a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44fba0.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L44fba4.  v2:= 2I;
  #L44fba6.  v2:= new `java.lang.Throwable`[v2];
  #L44fbaa.  v3:= 0I;
  #L44fbac.  v2[v3]:= v5 @kind object;
  #L44fbb0.  v5:= 1I;
  #L44fbb2.  v2[v5]:= v0 @kind object;
  #L44fbb6.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L44fbbc.  v5:= v1 @kind object;
  #L44fbbe.  v0:= v4.`io.reactivex.internal.operators.single.SingleDoOnError$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44fbc2.  call `onError`(v0, v5) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44fbc8.  return @kind void;
  catch `java.lang.Throwable` @[L44fb88..L44fb96] goto L44fb98;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoOnError$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnError$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44fbe8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoOnError$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44fbec.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L44fbf2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoOnError$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnError$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44fc04.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoOnError$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44fc08.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L44fc0e.  return @kind void;
}
