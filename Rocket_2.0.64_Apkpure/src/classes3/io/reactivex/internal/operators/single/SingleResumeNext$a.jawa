record `io.reactivex.internal.operators.single.SingleResumeNext$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleResumeNext$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleResumeNext$a.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.single.SingleResumeNext$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L451920.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L451926.  v0.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L45192a.  v0.`io.reactivex.internal.operators.single.SingleResumeNext$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L45192e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L451940.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L451946.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4518f8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4518fe.  v0:= temp @kind object;
  #L451900.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L451904.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L45190a.  v0:= temp;
  #L45190c.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L451958.  v0:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L45195c.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L451962.  v0:= temp @kind object;
  #L451964.  v1:= "The nextFunction returned a null SingleSource." @kind object;
  #L451968.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45196e.  v0:= temp @kind object;
  #L451970.  v0:= (`io.reactivex.SingleSource`) v0 @kind object;
  #L451974.  v6:= new `io.reactivex.internal.observers.ResumeSingleObserver`;
  #L451978.  v1:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L45197c.  call `<init>`(v6, v5, v1) @signature `Lio/reactivex/internal/observers/ResumeSingleObserver;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/SingleObserver;)V` @kind direct;
  #L451982.  call `subscribe`(v0, v6) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L451988.  return @kind void;
  #L45198a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45198c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L451992.  v1:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L451996.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L45199a.  v3:= 2I;
  #L45199c.  v3:= new `java.lang.Throwable`[v3];
  #L4519a0.  v4:= 0I;
  #L4519a2.  v3[v4]:= v6 @kind object;
  #L4519a6.  v6:= 1I;
  #L4519a8.  v3[v6]:= v0 @kind object;
  #L4519ac.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4519b2.  call `onError`(v1, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4519b8.  return @kind void;
  catch `java.lang.Throwable` @[L451958..L451974] goto L45198a;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4519d8.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4519de.  v1:= temp;
  #L4519e0.  if v1 == 0 then goto L4519ee;
  #L4519e4.  v1:= v0.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4519e8.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4519ee.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L451a00.  v0:= v1.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L451a04.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L451a0a.  return @kind void;
}
