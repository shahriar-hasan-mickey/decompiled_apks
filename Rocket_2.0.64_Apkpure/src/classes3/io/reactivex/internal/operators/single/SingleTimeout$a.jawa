record `io.reactivex.internal.operators.single.SingleTimeout$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.single.SingleTimeout$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.single.SingleTimeout$a.b` @AccessFlag FINAL;
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleTimeout$a.c` @AccessFlag FINAL;
  `io.reactivex.internal.operators.single.SingleTimeout` `io.reactivex.internal.operators.single.SingleTimeout$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleTimeout$a` v0 @kind this, `io.reactivex.internal.operators.single.SingleTimeout` v1 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v2 @kind object, `io.reactivex.disposables.CompositeDisposable` v3 @kind object, `io.reactivex.SingleObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleTimeout$a;.<init>:(Lio/reactivex/internal/operators/single/SingleTimeout;Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L451f0c.  v0.`io.reactivex.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.internal.operators.single.SingleTimeout` := v1 @kind object;
  #L451f10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L451f16.  v0.`io.reactivex.internal.operators.single.SingleTimeout$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L451f1a.  v0.`io.reactivex.internal.operators.single.SingleTimeout$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v3 @kind object;
  #L451f1e.  v0.`io.reactivex.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.SingleObserver` := v4 @kind object;
  #L451f22.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.single.SingleTimeout$a` v3 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleTimeout$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L451f34.  v0:= v3.`io.reactivex.internal.operators.single.SingleTimeout$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L451f38.  v1:= 0I;
  #L451f3a.  v2:= 1I;
  #L451f3c.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L451f42.  v0:= temp;
  #L451f44.  if v0 == 0 then goto L451f96;
  #L451f48.  v0:= v3.`io.reactivex.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.internal.operators.single.SingleTimeout` @kind object;
  #L451f4c.  v0:= v0.`io.reactivex.internal.operators.single.SingleTimeout.e` @type ^`io.reactivex.SingleSource` @kind object;
  #L451f50.  if v0 == 0 then goto L451f78;
  #L451f54.  v0:= v3.`io.reactivex.internal.operators.single.SingleTimeout$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L451f58.  call `clear`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.clear:()V` @kind virtual;
  #L451f5e.  v0:= v3.`io.reactivex.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.internal.operators.single.SingleTimeout` @kind object;
  #L451f62.  v0:= v0.`io.reactivex.internal.operators.single.SingleTimeout.e` @type ^`io.reactivex.SingleSource` @kind object;
  #L451f66.  v1:= new `io.reactivex.internal.operators.single.SingleTimeout$a$a`;
  #L451f6a.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/single/SingleTimeout$a$a;.<init>:(Lio/reactivex/internal/operators/single/SingleTimeout$a;)V` @kind direct;
  #L451f70.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L451f76.  goto L451f96;
  #L451f78.  v0:= v3.`io.reactivex.internal.operators.single.SingleTimeout$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L451f7c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L451f82.  v0:= v3.`io.reactivex.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.SingleObserver` @kind object;
  #L451f86.  v1:= new `java.util.concurrent.TimeoutException`;
  #L451f8a.  call `<init>`(v1) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L451f90.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L451f96.  return @kind void;
}
