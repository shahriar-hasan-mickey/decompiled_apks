record `io.reactivex.internal.operators.single.SingleDoOnSubscribe$a` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Consumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44fd98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44fd9e.  v0.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L44fda2.  v0.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L44fda6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44fdb8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.c` @type ^`boolean` @kind boolean;
  #L44fdbc.  if v0 == 0 then goto L44fdc8;
  #L44fdc0.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44fdc6.  return @kind void;
  #L44fdc8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44fdcc.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44fdd2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a` v2 @kind this, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44fde4.  v0:= v2.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L44fde8.  call `accept`(v0, v3) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L44fdee.  v0:= v2.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44fdf2.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L44fdf8.  return @kind void;
  #L44fdfa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44fdfc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44fe02.  v1:= 1I;
  #L44fe04.  v2.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.c` @type ^`boolean` := v1 @kind boolean;
  #L44fe08.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44fe0e.  v3:= v2.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44fe12.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L44fe18.  return @kind void;
  catch `java.lang.Throwable` @[L44fde4..L44fdee] goto L44fdfa;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44fe38.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.c` @type ^`boolean` @kind boolean;
  #L44fe3c.  if v0 == 0 then goto L44fe42;
  #L44fe40.  return @kind void;
  #L44fe42.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoOnSubscribe$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44fe46.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L44fe4c.  return @kind void;
}
