record `io.reactivex.internal.operators.single.SingleZipIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `java.lang.Iterable` `io.reactivex.internal.operators.single.SingleZipIterable.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleZipIterable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleZipIterable` v0 @kind this, `java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable;.<init>:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L452ba0.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L452ba6.  v0.`io.reactivex.internal.operators.single.SingleZipIterable.a` @type ^`java.lang.Iterable` := v1 @kind object;
  #L452baa.  v0.`io.reactivex.internal.operators.single.SingleZipIterable.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L452bae.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleZipIterable` v6 @kind this, `io.reactivex.SingleObserver` v7 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L452bc0.  v0:= 8I;
  #L452bc4.  v0:= new `io.reactivex.SingleSource`[v0];
  #L452bc8.  v1:= v6.`io.reactivex.internal.operators.single.SingleZipIterable.a` @type ^`java.lang.Iterable` @kind object;
  #L452bcc.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L452bd2.  v1:= temp @kind object;
  #L452bd4.  v2:= 0I;
  #L452bd6.  v3:= 0I;
  #L452bd8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L452bde.  v4:= temp;
  #L452be0.  if v4 == 0 then goto L452c2e;
  #L452be4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L452bea.  v4:= temp @kind object;
  #L452bec.  v4:= (`io.reactivex.SingleSource`) v4 @kind object;
  #L452bf0.  if v4 != 0 then goto L452c0a;
  #L452bf4.  v0:= new `java.lang.NullPointerException`;
  #L452bf8.  v1:= "One of the sources is null" @kind object;
  #L452bfc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L452c02.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L452c08.  return @kind void;
  #L452c0a.  v5:= length @variable v0;
  #L452c0c.  if v3 != v5 then goto L452c22;
  #L452c10.  v5:= v3 ^> 2;
  #L452c14.  v5:= v5 + v3 @kind int;
  #L452c16.  call temp:= `copyOf`(v0, v5) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L452c1c.  v0:= temp @kind object;
  #L452c1e.  v0:= (`io.reactivex.SingleSource`[]) v0 @kind object;
  #L452c22.  v5:= v3 + 1;
  #L452c26.  v0[v3]:= v4 @kind object;
  #L452c2a.  v3:= v5;
  #L452c2c.  goto L452bd8;
  #L452c2e.  if v3 != 0 then goto L452c44;
  #L452c32.  v0:= new `java.util.NoSuchElementException`;
  #L452c36.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L452c3c.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L452c42.  return @kind void;
  #L452c44.  v1:= 1I;
  #L452c46.  if v3 != v1 then goto L452c6a;
  #L452c4a.  v0:= v0[v2] @kind object;
  #L452c4e.  v1:= new `io.reactivex.internal.operators.single.SingleMap$a`;
  #L452c52.  v2:= new `io.reactivex.internal.operators.single.SingleZipIterable$a`;
  #L452c56.  call `<init>`(v2, v6) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable$a;.<init>:(Lio/reactivex/internal/operators/single/SingleZipIterable;)V` @kind direct;
  #L452c5c.  call `<init>`(v1, v7, v2) @signature `Lio/reactivex/internal/operators/single/SingleMap$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Function;)V` @kind direct;
  #L452c62.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L452c68.  return @kind void;
  #L452c6a.  v1:= new `io.reactivex.internal.operators.single.SingleZipArray$b`;
  #L452c6e.  v4:= v6.`io.reactivex.internal.operators.single.SingleZipIterable.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L452c72.  call `<init>`(v1, v7, v3, v4) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$b;.<init>:(Lio/reactivex/SingleObserver;ILio/reactivex/functions/Function;)V` @kind direct;
  #L452c78.  call `onSubscribe`(v7, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L452c7e.  if v2 >= v3 then goto L452ca8;
  #L452c82.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$b;.isDisposed:()Z` @kind virtual;
  #L452c88.  v7:= temp;
  #L452c8a.  if v7 == 0 then goto L452c90;
  #L452c8e.  return @kind void;
  #L452c90.  v7:= v0[v2] @kind object;
  #L452c94.  v4:= v1.`io.reactivex.internal.operators.single.SingleZipArray$b.c` @type ^`io.reactivex.internal.operators.single.SingleZipArray$c`[] @kind object;
  #L452c98.  v4:= v4[v2] @kind object;
  #L452c9c.  call `subscribe`(v7, v4) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L452ca2.  v2:= v2 + 1;
  #L452ca6.  goto L452c7e;
  #L452ca8.  return @kind void;
  #L452caa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L452cac.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L452cb2.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L452cb8.  return @kind void;
  catch `java.lang.Throwable` @[L452bc8..L452c2a] goto L452caa;
}
