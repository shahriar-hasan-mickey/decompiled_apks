record `io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44f778.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44f77e.  v0.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L44f782.  v0.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.b` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L44f786.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44f7b4.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L44f7b8.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L44f7be.  goto L44f7ce;
  #L44f7c0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44f7c2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44f7c8.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44f7ce.  return @kind void;
  catch `java.lang.Throwable` @[L44f7b4..L44f7be] goto L44f7c0;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f798.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44f79c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44f7a2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f758.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44f75c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L44f762.  v0:= temp;
  #L44f764.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f7ec.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f7f0.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44f7f6.  call `a`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.a:()V` @kind direct;
  #L44f7fc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f810.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44f814.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L44f81a.  v0:= temp;
  #L44f81c.  if v0 == 0 then goto L44f82e;
  #L44f820.  v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L44f824.  v2:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f828.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L44f82e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f840.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f844.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L44f84a.  call `a`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.a:()V` @kind direct;
  #L44f850.  return @kind void;
}
