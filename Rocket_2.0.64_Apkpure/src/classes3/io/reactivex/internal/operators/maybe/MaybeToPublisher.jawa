record `io.reactivex.internal.operators.maybe.MaybeToPublisher` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.functions.Function` @kind interface {
}
global `io.reactivex.internal.operators.maybe.MaybeToPublisher` `@@io.reactivex.internal.operators.maybe.MaybeToPublisher.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.operators.maybe.MaybeToPublisher`[] `@@io.reactivex.internal.operators.maybe.MaybeToPublisher.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L430cac.  v0:= new `io.reactivex.internal.operators.maybe.MaybeToPublisher`;
  #L430cb0.  v1:= "INSTANCE" @kind object;
  #L430cb4.  v2:= 0I;
  #L430cb6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L430cbc.  `@@io.reactivex.internal.operators.maybe.MaybeToPublisher.INSTANCE` @type ^`io.reactivex.internal.operators.maybe.MaybeToPublisher` := v0 @kind object;
  #L430cc0.  v1:= 1I;
  #L430cc2.  v1:= new `io.reactivex.internal.operators.maybe.MaybeToPublisher`[v1];
  #L430cc6.  v1[v2]:= v0 @kind object;
  #L430cca.  `@@io.reactivex.internal.operators.maybe.MaybeToPublisher.a` @type ^`io.reactivex.internal.operators.maybe.MaybeToPublisher`[] := v1 @kind object;
  #L430cce.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeToPublisher` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L430ce0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L430ce6.  return @kind void;
}
procedure `io.reactivex.functions.Function` `instance`() @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L430c10.  v0:= `@@io.reactivex.internal.operators.maybe.MaybeToPublisher.INSTANCE` @type ^`io.reactivex.internal.operators.maybe.MaybeToPublisher` @kind object;
  #L430c14.  return v0 @kind object;
}
procedure `io.reactivex.internal.operators.maybe.MaybeToPublisher` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/operators/maybe/MaybeToPublisher;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L430c28.  v0:= constclass @type ^`io.reactivex.internal.operators.maybe.MaybeToPublisher` @kind object;
  #L430c2c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L430c32.  v1:= temp @kind object;
  #L430c34.  v1:= (`io.reactivex.internal.operators.maybe.MaybeToPublisher`) v1 @kind object;
  #L430c38.  return v1 @kind object;
}
procedure `io.reactivex.internal.operators.maybe.MaybeToPublisher`[] `values`() @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.values:()[Lio/reactivex/internal/operators/maybe/MaybeToPublisher;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L430c4c.  v0:= `@@io.reactivex.internal.operators.maybe.MaybeToPublisher.a` @type ^`io.reactivex.internal.operators.maybe.MaybeToPublisher`[] @kind object;
  #L430c50.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.clone:()Ljava/lang/Object;` @kind virtual;
  #L430c56.  v0:= temp @kind object;
  #L430c58.  v0:= (`io.reactivex.internal.operators.maybe.MaybeToPublisher`[]) v0 @kind object;
  #L430c5c.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.maybe.MaybeToPublisher` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L430c70.  v1:= (`io.reactivex.MaybeSource`) v1 @kind object;
  #L430c74.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.apply:(Lio/reactivex/MaybeSource;)Lorg/reactivestreams/Publisher;` @kind virtual;
  #L430c7a.  v1:= temp @kind object;
  #L430c7c.  return v1 @kind object;
}
procedure `org.reactivestreams.Publisher` `apply`(`io.reactivex.internal.operators.maybe.MaybeToPublisher` v1 @kind this, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeToPublisher;.apply:(Lio/reactivex/MaybeSource;)Lorg/reactivestreams/Publisher;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430c90.  v0:= new `io.reactivex.internal.operators.maybe.MaybeToFlowable`;
  #L430c94.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeToFlowable;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L430c9a.  return v0 @kind object;
}
