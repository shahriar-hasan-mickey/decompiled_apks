record `io.reactivex.internal.operators.maybe.MaybeDetach$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeDetach$a.a` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDetach$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDetach$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42ba70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42ba76.  v0.`io.reactivex.internal.operators.maybe.MaybeDetach$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L42ba7a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDetach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDetach$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ba8c.  v0:= 0I;
  #L42ba8e.  v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.a` @type ^`io.reactivex.MaybeObserver` := v0 @kind object;
  #L42ba92.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42ba96.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42ba9c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42baa0.  v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42baa4.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDetach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDetach$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ba50.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42ba54.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42ba5a.  v0:= temp;
  #L42ba5c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDetach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDetach$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bab8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42babc.  v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42bac0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42bac4.  if v0 == 0 then goto L42bace;
  #L42bac8.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L42bace.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDetach$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDetach$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bae0.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42bae4.  v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42bae8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42baec.  if v0 == 0 then goto L42baf6;
  #L42baf0.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42baf6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDetach$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDetach$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bb08.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42bb0c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42bb12.  v0:= temp;
  #L42bb14.  if v0 == 0 then goto L42bb26;
  #L42bb18.  v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42bb1c.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42bb20.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42bb26.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDetach$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDetach$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bb38.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42bb3c.  v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42bb40.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDetach$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42bb44.  if v0 == 0 then goto L42bb4e;
  #L42bb48.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L42bb4e.  return @kind void;
}
