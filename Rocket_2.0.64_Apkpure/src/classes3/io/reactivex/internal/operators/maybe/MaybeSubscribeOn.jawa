record `io.reactivex.internal.operators.maybe.MaybeSubscribeOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.maybe.MaybeSubscribeOn.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeSubscribeOn` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42fad8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L42fade.  v0.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn.a` @type ^`io.reactivex.Scheduler` := v2 @kind object;
  #L42fae2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeSubscribeOn` v4 @kind this, `io.reactivex.MaybeObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42faf4.  v0:= new `io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a`;
  #L42faf8.  call `<init>`(v0, v5) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @kind direct;
  #L42fafe.  call `onSubscribe`(v5, v0) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42fb04.  v5:= v0.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a.a` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L42fb08.  v1:= v4.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn.a` @type ^`io.reactivex.Scheduler` @kind object;
  #L42fb0c.  v2:= new `io.reactivex.internal.operators.maybe.MaybeSubscribeOn$b`;
  #L42fb10.  v3:= v4.`io.reactivex.internal.operators.maybe.a.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L42fb14.  call `<init>`(v2, v0, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn$b;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/MaybeSource;)V` @kind direct;
  #L42fb1a.  call temp:= `scheduleDirect`(v1, v2) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L42fb20.  v0:= temp @kind object;
  #L42fb22.  call temp:= `replace`(v5, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L42fb28.  return @kind void;
}
