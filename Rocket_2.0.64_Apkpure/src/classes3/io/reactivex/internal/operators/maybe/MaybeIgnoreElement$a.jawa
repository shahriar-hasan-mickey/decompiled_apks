record `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42e0fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42e102.  v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L42e106.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e118.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42e11c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42e122.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42e126.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42e12a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e0dc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42e0e0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42e0e6.  v0:= temp;
  #L42e0e8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e13c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42e140.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42e144.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42e148.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L42e14e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e160.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42e164.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42e168.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42e16c.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42e172.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e184.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42e188.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42e18e.  v0:= temp;
  #L42e190.  if v0 == 0 then goto L42e1a2;
  #L42e194.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42e198.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42e19c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42e1a2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L42e1b4.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42e1b8.  v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L42e1bc.  v1:= v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42e1c0.  call `onComplete`(v1) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L42e1c6.  return @kind void;
}
