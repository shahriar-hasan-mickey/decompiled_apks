record `io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.<init>:(Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42e484.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42e48a.  v0.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L42e48e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e4a0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42e4a4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42e4aa.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42e4ae.  v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42e4b2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e464.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42e468.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42e46e.  v0:= temp;
  #L42e470.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42e4c4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42e4c8.  v2.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42e4cc.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42e4d0.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L42e4d4.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L42e4da.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e4ec.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42e4f0.  v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42e4f4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42e4f8.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42e4fe.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e510.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42e514.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42e51a.  v0:= temp;
  #L42e51c.  if v0 == 0 then goto L42e52e;
  #L42e520.  v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42e524.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42e528.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42e52e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e540.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42e544.  v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42e548.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42e54c.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L42e550.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L42e556.  return @kind void;
}
