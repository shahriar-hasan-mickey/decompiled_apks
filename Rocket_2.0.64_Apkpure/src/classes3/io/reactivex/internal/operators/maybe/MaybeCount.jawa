record `io.reactivex.internal.operators.maybe.MaybeCount` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class, `io.reactivex.internal.fuseable.HasUpstreamMaybeSource` @kind interface {
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeCount.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeCount` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount;.<init>:(Lio/reactivex/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42aef0.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L42aef6.  v0.`io.reactivex.internal.operators.maybe.MaybeCount.a` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L42aefa.  return @kind void;
}
procedure `io.reactivex.MaybeSource` `source`(`io.reactivex.internal.operators.maybe.MaybeCount` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount;.source:()Lio/reactivex/MaybeSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42aed8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCount.a` @type ^`io.reactivex.MaybeSource` @kind object;
  #L42aedc.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeCount` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L42af0c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeCount.a` @type ^`io.reactivex.MaybeSource` @kind object;
  #L42af10.  v1:= new `io.reactivex.internal.operators.maybe.MaybeCount$a`;
  #L42af14.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount$a;.<init>:(Lio/reactivex/SingleObserver;)V` @kind direct;
  #L42af1a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L42af20.  return @kind void;
}
