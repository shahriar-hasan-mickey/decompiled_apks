record `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapCompletable;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ca60.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L42ca66.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.a` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L42ca6a.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L42ca6e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapCompletable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L42ca80.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$a`;
  #L42ca84.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L42ca88.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapCompletable$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/functions/Function;)V` @kind direct;
  #L42ca8e.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42ca94.  v3:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.a` @type ^`io.reactivex.MaybeSource` @kind object;
  #L42ca98.  call `subscribe`(v3, v0) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L42ca9e.  return @kind void;
}
