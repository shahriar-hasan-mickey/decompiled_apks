record `io.reactivex.internal.operators.maybe.MaybePeek$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybePeek$a.a` @AccessFlag FINAL;
  `io.reactivex.internal.operators.maybe.MaybePeek` `io.reactivex.internal.operators.maybe.MaybePeek$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybePeek$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.internal.operators.maybe.MaybePeek` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/internal/operators/maybe/MaybePeek;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42f6ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42f6f2.  v0.`io.reactivex.internal.operators.maybe.MaybePeek$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L42f6f6.  v0.`io.reactivex.internal.operators.maybe.MaybePeek$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` := v2 @kind object;
  #L42f6fa.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L42f75c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L42f760.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.e` @type ^`io.reactivex.functions.Action` @kind object;
  #L42f764.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L42f76a.  goto L42f77a;
  #L42f76c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42f76e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42f774.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42f77a.  return @kind void;
  catch `java.lang.Throwable` @[L42f75c..L42f76a] goto L42f76c;
}
procedure `void` `b`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.b:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42f824.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybePeek$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L42f828.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42f82c.  call `accept`(v0, v5) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42f832.  goto L42f85a;
  #L42f834.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42f836.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42f83c.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L42f840.  v2:= 2I;
  #L42f842.  v2:= new `java.lang.Throwable`[v2];
  #L42f846.  v3:= 0I;
  #L42f848.  v2[v3]:= v5 @kind object;
  #L42f84c.  v5:= 1I;
  #L42f84e.  v2[v5]:= v0 @kind object;
  #L42f852.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L42f858.  v5:= v1 @kind object;
  #L42f85a.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42f85e.  v4.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42f862.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybePeek$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42f866.  call `onError`(v0, v5) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42f86c.  call `a`(v4) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.a:()V` @kind virtual;
  #L42f872.  return @kind void;
  catch `java.lang.Throwable` @[L42f824..L42f832] goto L42f834;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f70c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L42f710.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.f` @type ^`io.reactivex.functions.Action` @kind object;
  #L42f714.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L42f71a.  goto L42f72a;
  #L42f71c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42f71e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42f724.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42f72a.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42f72e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42f734.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42f738.  v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42f73c.  return @kind void;
  catch `java.lang.Throwable` @[L42f70c..L42f71a] goto L42f71c;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f6cc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42f6d0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42f6d6.  v0:= temp;
  #L42f6d8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42f798.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42f79c.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42f7a0.  if v0 != v1 then goto L42f7a6;
  #L42f7a4.  return @kind void;
  #L42f7a6.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L42f7aa.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.d` @type ^`io.reactivex.functions.Action` @kind object;
  #L42f7ae.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L42f7b4.  v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L42f7b8.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42f7bc.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L42f7c2.  call `a`(v2) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.a:()V` @kind virtual;
  #L42f7c8.  return @kind void;
  #L42f7ca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42f7cc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42f7d2.  call `b`(v2, v0) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.b:(Ljava/lang/Throwable;)V` @kind virtual;
  #L42f7d8.  return @kind void;
  catch `java.lang.Throwable` @[L42f7a6..L42f7b4] goto L42f7ca;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42f7f8.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42f7fc.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42f800.  if v0 != v1 then goto L42f80c;
  #L42f804.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42f80a.  return @kind void;
  #L42f80c.  call `b`(v2, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.b:(Ljava/lang/Throwable;)V` @kind virtual;
  #L42f812.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f890.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42f894.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42f89a.  v0:= temp;
  #L42f89c.  if v0 == 0 then goto L42f8de;
  #L42f8a0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L42f8a4.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.a` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42f8a8.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42f8ae.  v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42f8b2.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42f8b6.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42f8bc.  goto L42f8de;
  #L42f8be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42f8c0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42f8c6.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42f8cc.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42f8d0.  v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42f8d4.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42f8d8.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L42f8de.  return @kind void;
  catch `java.lang.Throwable` @[L42f8a0..L42f8ae] goto L42f8be;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybePeek$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42f8fc.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42f900.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42f904.  if v0 != v1 then goto L42f90a;
  #L42f908.  return @kind void;
  #L42f90a.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L42f90e.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42f912.  call `accept`(v0, v3) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42f918.  v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.c` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L42f91c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42f920.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L42f926.  call `a`(v2) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.a:()V` @kind virtual;
  #L42f92c.  return @kind void;
  #L42f92e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42f930.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42f936.  call `b`(v2, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$a;.b:(Ljava/lang/Throwable;)V` @kind virtual;
  #L42f93c.  return @kind void;
  catch `java.lang.Throwable` @[L42f90a..L42f918] goto L42f92e;
}
