record `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.a` @AccessFlag FINAL;
  `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this, `io.reactivex.MaybeObserver` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L42c7d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42c7de.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a`;
  #L42c7e2.  call `<init>`(v0, v2, v4) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L42c7e8.  v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` := v0 @kind object;
  #L42c7ec.  v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.a` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L42c7f0.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c804.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c808.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42c80e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c7ac.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c7b0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42c7b6.  v0:= temp @kind object;
  #L42c7b8.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L42c7bc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42c7c2.  v0:= temp;
  #L42c7c4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c820.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c824.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c828.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L42c82e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c840.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c844.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c848.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42c84e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c860.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c864.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42c86a.  v2:= temp;
  #L42c86c.  if v2 == 0 then goto L42c87e;
  #L42c870.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c874.  v2:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c878.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42c87e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42c890.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L42c894.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42c89a.  v0:= temp @kind object;
  #L42c89c.  v1:= "The mapper returned a null MaybeSource" @kind object;
  #L42c8a0.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42c8a6.  v0:= temp @kind object;
  #L42c8a8.  v0:= (`io.reactivex.MaybeSource`) v0 @kind object;
  #L42c8ac.  v1:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c8b0.  v2:= 0I;
  #L42c8b2.  call temp:= `replace`(v1, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42c8b8.  v1:= temp;
  #L42c8ba.  if v1 == 0 then goto L42c8cc;
  #L42c8be.  v1:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c8c2.  v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.c` @type ^`java.lang.Object` := v4 @kind object;
  #L42c8c6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L42c8cc.  return @kind void;
  #L42c8ce.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42c8d0.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42c8d6.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L42c8da.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c8de.  call `onError`(v0, v4) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42c8e4.  return @kind void;
  catch `java.lang.Throwable` @[L42c890..L42c8ac] goto L42c8ce;
}
