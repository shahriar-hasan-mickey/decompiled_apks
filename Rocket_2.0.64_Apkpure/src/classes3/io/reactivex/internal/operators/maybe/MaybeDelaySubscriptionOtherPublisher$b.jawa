record `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @AccessFlag FINAL;
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this, `io.reactivex.MaybeObserver` v2 @kind object, `io.reactivex.MaybeSource` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/MaybeSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L42b6a8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42b6ae.  v0:= new `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a`;
  #L42b6b2.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @kind direct;
  #L42b6b8.  v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` := v0 @kind object;
  #L42b6bc.  v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.MaybeSource` := v3 @kind object;
  #L42b6c0.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L42b7d8.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.MaybeSource` @kind object;
  #L42b7dc.  v1:= 0I;
  #L42b7de.  v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L42b7e2.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L42b7e6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L42b7ec.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b6d4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L42b6d8.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L42b6de.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L42b6e2.  v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L42b6e6.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L42b6ea.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42b6f0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b67c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L42b680.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42b686.  v0:= temp @kind object;
  #L42b688.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L42b68c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42b692.  v0:= temp;
  #L42b694.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42b704.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L42b708.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L42b70c.  if v0 == v1 then goto L42b71a;
  #L42b710.  v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L42b714.  call `a`(v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @kind virtual;
  #L42b71a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42b72c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L42b730.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L42b734.  if v0 == v1 then goto L42b74c;
  #L42b738.  v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L42b73c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L42b740.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42b744.  call `onError`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42b74a.  goto L42b752;
  #L42b74c.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42b752.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b764.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L42b768.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L42b76c.  if v2 == v0 then goto L42b780;
  #L42b770.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L42b776.  v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L42b77a.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @kind virtual;
  #L42b780.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42b794.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L42b798.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L42b79e.  v0:= temp;
  #L42b7a0.  if v0 == 0 then goto L42b7c6;
  #L42b7a4.  v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L42b7a8.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L42b7ac.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42b7b0.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42b7b6.  v0:= 9223372036854775807L;
  #L42b7c0.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L42b7c6.  return @kind void;
}
