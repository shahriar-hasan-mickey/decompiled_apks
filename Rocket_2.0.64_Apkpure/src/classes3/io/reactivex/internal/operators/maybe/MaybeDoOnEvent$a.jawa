record `io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/BiConsumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42bea0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42bea6.  v0.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L42beaa.  v0.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.functions.BiConsumer` := v2 @kind object;
  #L42beae.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bec0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42bec4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42beca.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42bece.  v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42bed2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42be80.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42be84.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42be8a.  v0:= temp;
  #L42be8c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42bee4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42bee8.  v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42beec.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L42bef0.  v1:= 0I;
  #L42bef2.  call `accept`(v0, v1, v1) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L42bef8.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42befc.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L42bf02.  return @kind void;
  #L42bf04.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42bf06.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42bf0c.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42bf10.  call `onError`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42bf16.  return @kind void;
  catch `java.lang.Throwable` @[L42beec..L42bef8] goto L42bf04;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42bf34.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42bf38.  v4.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42bf3c.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L42bf40.  v1:= 0I;
  #L42bf42.  call `accept`(v0, v1, v5) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L42bf48.  goto L42bf70;
  #L42bf4a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42bf4c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42bf52.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L42bf56.  v2:= 2I;
  #L42bf58.  v2:= new `java.lang.Throwable`[v2];
  #L42bf5c.  v3:= 0I;
  #L42bf5e.  v2[v3]:= v5 @kind object;
  #L42bf62.  v5:= 1I;
  #L42bf64.  v2[v5]:= v0 @kind object;
  #L42bf68.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L42bf6e.  v5:= v1 @kind object;
  #L42bf70.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42bf74.  call `onError`(v0, v5) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42bf7a.  return @kind void;
  catch `java.lang.Throwable` @[L42bf3c..L42bf48] goto L42bf4a;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bf98.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42bf9c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42bfa2.  v0:= temp;
  #L42bfa4.  if v0 == 0 then goto L42bfb6;
  #L42bfa8.  v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42bfac.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42bfb0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42bfb6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42bfc8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42bfcc.  v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42bfd0.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L42bfd4.  v1:= 0I;
  #L42bfd6.  call `accept`(v0, v3, v1) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L42bfdc.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42bfe0.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L42bfe6.  return @kind void;
  #L42bfe8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42bfea.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42bff0.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42bff4.  call `onError`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42bffa.  return @kind void;
  catch `java.lang.Throwable` @[L42bfd0..L42bfdc] goto L42bfe8;
}
