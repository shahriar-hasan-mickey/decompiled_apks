record `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this, `io.reactivex.MaybeObserver` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.<init>:(Lio/reactivex/MaybeObserver;Lorg/reactivestreams/Publisher;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L42b378.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42b37e.  v0:= new `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b`;
  #L42b382.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$b;.<init>:(Lio/reactivex/MaybeObserver;)V` @kind direct;
  #L42b388.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` := v0 @kind object;
  #L42b38c.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.b` @type ^`org.reactivestreams.Publisher` := v3 @kind object;
  #L42b390.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L42b478.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L42b47c.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L42b480.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L42b486.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b3a4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42b3a8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42b3ae.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42b3b2.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42b3b6.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L42b3ba.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42b3c0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b34c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L42b350.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42b356.  v0:= temp @kind object;
  #L42b358.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L42b35c.  call temp:= `isCancelled`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.isCancelled:(Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L42b362.  v0:= temp;
  #L42b364.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b3d4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42b3d8.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42b3dc.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.a:()V` @kind virtual;
  #L42b3e2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b3f4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42b3f8.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42b3fc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L42b400.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b.c` @type ^`java.lang.Throwable` := v2 @kind object;
  #L42b404.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.a:()V` @kind virtual;
  #L42b40a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b41c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42b420.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42b426.  v0:= temp;
  #L42b428.  if v0 == 0 then goto L42b43e;
  #L42b42c.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42b430.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L42b434.  v2:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42b438.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42b43e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b450.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42b454.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42b458.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L42b45c.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b.b` @type ^`java.lang.Object` := v2 @kind object;
  #L42b460.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.a:()V` @kind virtual;
  #L42b466.  return @kind void;
}
