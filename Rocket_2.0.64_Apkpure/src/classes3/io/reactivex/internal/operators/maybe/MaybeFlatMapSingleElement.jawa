record `io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class {
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapSingleElement;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42d76c.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L42d772.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement.a` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L42d776.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L42d77a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement` v3 @kind this, `io.reactivex.MaybeObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapSingleElement;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L42d78c.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement.a` @type ^`io.reactivex.MaybeSource` @kind object;
  #L42d790.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$a`;
  #L42d794.  v2:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L42d798.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapSingleElement$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Function;)V` @kind direct;
  #L42d79e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L42d7a4.  return @kind void;
}
