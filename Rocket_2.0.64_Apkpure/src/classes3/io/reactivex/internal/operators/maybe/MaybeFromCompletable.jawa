record `io.reactivex.internal.operators.maybe.MaybeFromCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class, `io.reactivex.internal.fuseable.HasUpstreamCompletableSource` @kind interface {
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.maybe.MaybeFromCompletable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable;.<init>:(Lio/reactivex/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42dc90.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L42dc96.  v0.`io.reactivex.internal.operators.maybe.MaybeFromCompletable.a` @type ^`io.reactivex.CompletableSource` := v1 @kind object;
  #L42dc9a.  return @kind void;
}
procedure `io.reactivex.CompletableSource` `source`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable;.source:()Lio/reactivex/CompletableSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42dc78.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable.a` @type ^`io.reactivex.CompletableSource` @kind object;
  #L42dc7c.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable` v2 @kind this, `io.reactivex.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L42dcac.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeFromCompletable.a` @type ^`io.reactivex.CompletableSource` @kind object;
  #L42dcb0.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFromCompletable$a`;
  #L42dcb4.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @kind direct;
  #L42dcba.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42dcc0.  return @kind void;
}
