record `io.reactivex.internal.operators.maybe.MaybeFilterSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class {
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.maybe.MaybeFilterSingle.a` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.maybe.MaybeFilterSingle.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42c648.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L42c64e.  v0.`io.reactivex.internal.operators.maybe.MaybeFilterSingle.a` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L42c652.  v0.`io.reactivex.internal.operators.maybe.MaybeFilterSingle.b` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L42c656.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle` v3 @kind this, `io.reactivex.MaybeObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L42c668.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeFilterSingle.a` @type ^`io.reactivex.SingleSource` @kind object;
  #L42c66c.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFilterSingle$a`;
  #L42c670.  v2:= v3.`io.reactivex.internal.operators.maybe.MaybeFilterSingle.b` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L42c674.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L42c67a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L42c680.  return @kind void;
}
