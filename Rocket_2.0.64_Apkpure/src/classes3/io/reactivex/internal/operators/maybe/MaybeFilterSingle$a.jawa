record `io.reactivex.internal.operators.maybe.MaybeFilterSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42c560.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42c566.  v0.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L42c56a.  v0.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.b` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L42c56e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42c580.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42c584.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42c588.  v2.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L42c58c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42c592.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c540.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42c544.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42c54a.  v0:= temp;
  #L42c54c.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c5a4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c5a8.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42c5ae.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c5c0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42c5c4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42c5ca.  v0:= temp;
  #L42c5cc.  if v0 == 0 then goto L42c5de;
  #L42c5d0.  v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42c5d4.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c5d8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42c5de.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c5f0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.b` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L42c5f4.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L42c5fa.  v0:= temp;
  #L42c5fc.  if v0 == 0 then goto L42c60c;
  #L42c600.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c604.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L42c60a.  goto L42c616;
  #L42c60c.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c610.  call `onComplete`(v2) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L42c616.  return @kind void;
  #L42c618.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42c61a.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42c620.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L42c624.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42c62a.  return @kind void;
  catch `java.lang.Throwable` @[L42c5f0..L42c5fc] goto L42c618;
}
