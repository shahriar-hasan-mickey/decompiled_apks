record `io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `org.reactivestreams.Publisher`[] `io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.c` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFromMany;.<init>:(Lio/reactivex/Flowable;Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429250.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L429256.  v1:= 0I;
  #L429258.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.b` @type ^`org.reactivestreams.Publisher`[] := v1 @kind object;
  #L42925c.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L429260.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.d` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L429264.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `org.reactivestreams.Publisher`[] v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFromMany;.<init>:(Lio/reactivex/Flowable;[Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429278.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L42927e.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.b` @type ^`org.reactivestreams.Publisher`[] := v2 @kind object;
  #L429282.  v1:= 0I;
  #L429284.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.c` @type ^`java.lang.Iterable` := v1 @kind object;
  #L429288.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.d` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L42928c.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFromMany;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4292a0.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.b` @type ^`org.reactivestreams.Publisher`[] @kind object;
  #L4292a4.  if v0 != 0 then goto L42930a;
  #L4292a8.  v0:= 8I;
  #L4292ac.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4292b0.  v1:= v5.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.c` @type ^`java.lang.Iterable` @kind object;
  #L4292b4.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4292ba.  v1:= temp @kind object;
  #L4292bc.  v2:= 0I;
  #L4292be.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4292c4.  v3:= temp;
  #L4292c6.  if v3 == 0 then goto L42930c;
  #L4292ca.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4292d0.  v3:= temp @kind object;
  #L4292d2.  v3:= (`org.reactivestreams.Publisher`) v3 @kind object;
  #L4292d6.  v4:= length @variable v0;
  #L4292d8.  if v2 != v4 then goto L4292ee;
  #L4292dc.  v4:= v2 ^> 1;
  #L4292e0.  v4:= v4 + v2 @kind int;
  #L4292e2.  call temp:= `copyOf`(v0, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4292e8.  v0:= temp @kind object;
  #L4292ea.  v0:= (`org.reactivestreams.Publisher`[]) v0 @kind object;
  #L4292ee.  v4:= v2 + 1;
  #L4292f2.  v0[v2]:= v3 @kind object;
  #L4292f6.  v2:= v4;
  #L4292f8.  goto L4292be;
  #L4292fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4292fc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L429302.  call `error`(v0, v6) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L429308.  return @kind void;
  #L42930a.  v2:= length @variable v0;
  #L42930c.  if v2 != 0 then goto L429330;
  #L429310.  v0:= new `io.reactivex.internal.operators.flowable.FlowableMap`;
  #L429314.  v1:= v5.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L429318.  v2:= new `io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$a`;
  #L42931c.  call `<init>`(v2, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFromMany$a;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableWithLatestFromMany;)V` @kind direct;
  #L429322.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableMap;.<init>:(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;)V` @kind direct;
  #L429328.  call `subscribeActual`(v0, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableMap;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L42932e.  return @kind void;
  #L429330.  v1:= new `io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$b`;
  #L429334.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany.d` @type ^`io.reactivex.functions.Function` @kind object;
  #L429338.  call `<init>`(v1, v6, v3, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFromMany$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;I)V` @kind direct;
  #L42933e.  call `onSubscribe`(v6, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L429344.  call `e`(v1, v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFromMany$b;.e:([Lorg/reactivestreams/Publisher;I)V` @kind virtual;
  #L42934a.  v6:= v5.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L42934e.  call `subscribe`(v6, v1) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L429354.  return @kind void;
  catch `java.lang.Throwable` @[L4292b0..L4292f6] goto L4292fa;
}
