record `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `long` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.c` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.d` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.e` @AccessFlag FINAL;
}
global `io.reactivex.disposables.Disposable` `@@io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.f` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L42551c.  v0:= new `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$a`;
  #L425520.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$a;.<init>:()V` @kind direct;
  #L425526.  `@@io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.f` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42552a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed;.<init>:(Lio/reactivex/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42553c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L425542.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.b` @type ^`long` := v2 @kind wide;
  #L425546.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L42554a.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.d` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L42554e.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.e` @type ^`org.reactivestreams.Publisher` := v6 @kind object;
  #L425552.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed` v9 @kind this, `org.reactivestreams.Subscriber` v10 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L425564.  v0:= v9.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.e` @type ^`org.reactivestreams.Publisher` @kind object;
  #L425568.  if v0 != 0 then goto L4255a2;
  #L42556c.  v0:= v9.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L425570.  v7:= new `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c`;
  #L425574.  v2:= new `io.reactivex.subscribers.SerializedSubscriber`;
  #L425578.  call `<init>`(v2, v10) @signature `Lio/reactivex/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L42557e.  v3:= v9.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.b` @type ^`long` @kind wide;
  #L425582.  v5:= v9.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L425586.  v10:= v9.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L42558a.  call temp:= `createWorker`(v10) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L425590.  v6:= temp @kind object;
  #L425592.  v1:= v7 @kind object;
  #L425594.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$c;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L42559a.  call `subscribe`(v0, v7) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L4255a0.  goto L4255d2;
  #L4255a2.  v0:= v9.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L4255a6.  v8:= new `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b`;
  #L4255aa.  v3:= v9.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.b` @type ^`long` @kind wide;
  #L4255ae.  v5:= v9.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4255b2.  v1:= v9.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L4255b6.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L4255bc.  v6:= temp @kind object;
  #L4255be.  v7:= v9.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.e` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4255c2.  v1:= v8 @kind object;
  #L4255c4.  v2:= v10 @kind object;
  #L4255c6.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$b;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4255cc.  call `subscribe`(v0, v8) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L4255d2.  return @kind void;
}
