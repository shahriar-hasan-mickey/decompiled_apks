record `io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c` @kind class @AccessFlag ABSTRACT extends `io.reactivex.internal.subscriptions.SubscriptionArbiter` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.g` @AccessFlag PROTECTED_FINAL;
  `io.reactivex.processors.FlowableProcessor` `io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.h` @AccessFlag PROTECTED_FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.i` @AccessFlag PROTECTED_FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.j` @AccessFlag PRIVATE;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.processors.FlowableProcessor` v2 @kind object, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeatWhen$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/processors/FlowableProcessor;Lorg/reactivestreams/Subscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41e7e8.  call `<init>`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.<init>:()V` @kind direct;
  #L41e7ee.  v0.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.g` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L41e7f2.  v0.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.h` @type ^`io.reactivex.processors.FlowableProcessor` := v2 @kind object;
  #L41e7f6.  v0.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.i` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L41e7fa.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeatWhen$c;.c:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41e80c.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.j` @type ^`long` @kind wide;
  #L41e810.  v2:= 0L;
  #L41e814.  v4:= lcmp(v0, v2);
  #L41e818.  if v4 == 0 then goto L41e826;
  #L41e81c.  v5.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.j` @type ^`long` := v2 @kind wide;
  #L41e820.  call `produced`(v5, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.produced:(J)V` @kind virtual;
  #L41e826.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41e82a.  v1:= 1L;
  #L41e82e.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L41e834.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.h` @type ^`io.reactivex.processors.FlowableProcessor` @kind object;
  #L41e838.  call `onNext`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L41e83e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeatWhen$c;.cancel:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41e850.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.cancel:()V` @kind super;
  #L41e856.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41e85a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L41e860.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeatWhen$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41e874.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.j` @type ^`long` @kind wide;
  #L41e878.  v2:= 1L;
  #L41e87c.  v0:= v0 + v2 @kind long;
  #L41e87e.  v4.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.j` @type ^`long` := v0 @kind wide;
  #L41e882.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c.g` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41e886.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L41e88c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableRepeatWhen$c` v0 @kind this, `org.reactivestreams.Subscription` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeatWhen$c;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L41e8a0.  call `setSubscription`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.setSubscription:(Lorg/reactivestreams/Subscription;)V` @kind virtual;
  #L41e8a6.  return @kind void;
}
