record `io.reactivex.internal.operators.flowable.FlowableInternalHelper$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `io.reactivex.Flowable` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$a` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$a;.<init>:(Lio/reactivex/Flowable;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41868c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L418692.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$a.a` @type ^`io.reactivex.Flowable` := v1 @kind object;
  #L418696.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$a.b` @type ^`int` := v2;
  #L41869a.  return @kind void;
}
procedure `io.reactivex.flowables.ConnectableFlowable` `a`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$a;.a:()Lio/reactivex/flowables/ConnectableFlowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41864c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$a.a` @type ^`io.reactivex.Flowable` @kind object;
  #L418650.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$a.b` @type ^`int`;
  #L418654.  call temp:= `replay`(v0, v1) @signature `Lio/reactivex/Flowable;.replay:(I)Lio/reactivex/flowables/ConnectableFlowable;` @kind virtual;
  #L41865a.  v0:= temp @kind object;
  #L41865c.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L418670.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$a;.a:()Lio/reactivex/flowables/ConnectableFlowable;` @kind virtual;
  #L418676.  v0:= temp @kind object;
  #L418678.  return v0 @kind object;
}
