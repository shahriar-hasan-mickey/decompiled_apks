record `io.reactivex.internal.operators.flowable.FlowableDistinct$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.BasicFuseableSubscriber` @kind class {
  `java.util.Collection` `io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableDistinct$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `java.util.Collection` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4114a4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4114aa.  v0.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4114ae.  v0.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` := v3 @kind object;
  #L4114b2.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4114c4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L4114c8.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L4114ce.  call `clear`(v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.clear:()V` @kind super;
  #L4114d4.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4114e8.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4114ec.  if v0 != 0 then goto L41150a;
  #L4114f0.  v0:= 1I;
  #L4114f2.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4114f6.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L4114fa.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L411500.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L411504.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L41150a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41151c.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L411520.  if v0 == 0 then goto L41152c;
  #L411524.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41152a.  goto L411546;
  #L41152c.  v0:= 1I;
  #L41152e.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L411532.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L411536.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L41153c.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L411540.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L411546.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L411558.  v0:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L41155c.  if v0 == 0 then goto L411562;
  #L411560.  return @kind void;
  #L411562.  v0:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L411566.  if v0 != 0 then goto L4115b8;
  #L41156a.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L41156e.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L411574.  v0:= temp @kind object;
  #L411576.  v1:= "The keySelector returned a null key" @kind object;
  #L41157a.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L411580.  v0:= temp @kind object;
  #L411582.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L411586.  call temp:= `add`(v1, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41158c.  v0:= temp;
  #L41158e.  if v0 == 0 then goto L41159e;
  #L411592.  v0:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L411596.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L41159c.  goto L4115c4;
  #L41159e.  v3:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.s` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4115a2.  v0:= 1L;
  #L4115a6.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4115ac.  goto L4115c4;
  #L4115ae.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4115b0.  call `fail`(v2, v3) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4115b6.  return @kind void;
  #L4115b8.  v3:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4115bc.  v0:= 0I;
  #L4115be.  call `onNext`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4115c4.  return @kind void;
  catch `java.lang.Throwable` @[L41156a..L41158e] goto L4115ae;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41143c.  v0:= v4.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind object;
  #L411440.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L411446.  v0:= temp @kind object;
  #L411448.  if v0 == 0 then goto L411490;
  #L41144c.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L411450.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L411454.  call temp:= `apply`(v2, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41145a.  v2:= temp @kind object;
  #L41145c.  v3:= "The keySelector returned a null key" @kind object;
  #L411460.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L411466.  v2:= temp @kind object;
  #L411468.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41146e.  v1:= temp;
  #L411470.  if v1 == 0 then goto L411476;
  #L411474.  goto L411490;
  #L411476.  v0:= v4.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L41147a.  v1:= 2I;
  #L41147c.  if v0 != v1 then goto L41143c;
  #L411480.  v0:= v4.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.s` @type ^`org.reactivestreams.Subscription` @kind object;
  #L411484.  v1:= 1L;
  #L411488.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L41148e.  goto L41143c;
  #L411490.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L411420.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L411426.  v1:= temp;
  #L411428.  return v1;
}
