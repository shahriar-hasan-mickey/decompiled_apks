record `io.reactivex.internal.operators.flowable.FlowableTimeout` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableTimeout.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableTimeout.c` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableTimeout.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeout` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout;.<init>:(Lio/reactivex/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4255e4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L4255ea.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout.b` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L4255ee.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L4255f2.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout.d` @type ^`org.reactivestreams.Publisher` := v4 @kind object;
  #L4255f6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableTimeout` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L425608.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout.d` @type ^`org.reactivestreams.Publisher` @kind object;
  #L42560c.  if v0 != 0 then goto L425638;
  #L425610.  v0:= v5.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L425614.  v1:= new `io.reactivex.internal.operators.flowable.FlowableTimeout$d`;
  #L425618.  v2:= new `io.reactivex.subscribers.SerializedSubscriber`;
  #L42561c.  call `<init>`(v2, v6) @signature `Lio/reactivex/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L425622.  v6:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L425626.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L42562a.  call `<init>`(v1, v2, v6, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.<init>:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;)V` @kind direct;
  #L425630.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L425636.  goto L425654;
  #L425638.  v1:= v5.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L42563c.  v2:= new `io.reactivex.internal.operators.flowable.FlowableTimeout$c`;
  #L425640.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L425644.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L425648.  call `<init>`(v2, v6, v3, v4, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$c;.<init>:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L42564e.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L425654.  return @kind void;
}
