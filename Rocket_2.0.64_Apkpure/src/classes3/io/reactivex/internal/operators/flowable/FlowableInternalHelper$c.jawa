record `io.reactivex.internal.operators.flowable.FlowableInternalHelper$c` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$c` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$c;.<init>:(Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41876c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L418772.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$c.a` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L418776.  return @kind void;
}
procedure `org.reactivestreams.Publisher` `a`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$c;.a:(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L418740.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFromIterable`;
  #L418744.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$c.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L418748.  call temp:= `apply`(v1, v3) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41874e.  v3:= temp @kind object;
  #L418750.  v3:= (`java.lang.Iterable`) v3 @kind object;
  #L418754.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L41875a.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$c;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L418724.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$c;.a:(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;` @kind virtual;
  #L41872a.  v1:= temp @kind object;
  #L41872c.  return v1 @kind object;
}
