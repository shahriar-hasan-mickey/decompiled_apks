record `io.reactivex.internal.operators.flowable.FlowableCount$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableCount$a.a` @AccessFlag ;
  `long` `io.reactivex.internal.operators.flowable.FlowableCount$a.b` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableCount$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCount$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCount$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40f558.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L40f55e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableCount$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableCount$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f570.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L40f576.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableCount$a.a` @type ^`org.reactivestreams.Subscription` @kind object;
  #L40f57a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L40f580.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableCount$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableCount$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40f594.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableCount$a.b` @type ^`long` @kind wide;
  #L40f598.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L40f59e.  v0:= temp @kind object;
  #L40f5a0.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L40f5a6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableCount$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCount$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f5b8.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40f5bc.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L40f5c2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableCount$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCount$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40f5d4.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableCount$a.b` @type ^`long` @kind wide;
  #L40f5d8.  v2:= 1L;
  #L40f5dc.  v0:= v0 + v2 @kind long;
  #L40f5de.  v4.`io.reactivex.internal.operators.flowable.FlowableCount$a.b` @type ^`long` := v0 @kind wide;
  #L40f5e2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableCount$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCount$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40f5f4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableCount$a.a` @type ^`org.reactivestreams.Subscription` @kind object;
  #L40f5f8.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L40f5fe.  v0:= temp;
  #L40f600.  if v0 == 0 then goto L40f622;
  #L40f604.  v2.`io.reactivex.internal.operators.flowable.FlowableCount$a.a` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L40f608.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40f60c.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L40f612.  v0:= 9223372036854775807L;
  #L40f61c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L40f622.  return @kind void;
}
