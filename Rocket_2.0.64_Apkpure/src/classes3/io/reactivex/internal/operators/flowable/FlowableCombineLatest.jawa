record `io.reactivex.internal.operators.flowable.FlowableCombineLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `org.reactivestreams.Publisher`[] `io.reactivex.internal.operators.flowable.FlowableCombineLatest.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.flowable.FlowableCombineLatest.c` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableCombineLatest.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableCombineLatest.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;.<init>:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L40dfa0.  call `<init>`(v1) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L40dfa6.  v0:= 0I;
  #L40dfa8.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] := v0 @kind object;
  #L40dfac.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L40dfb0.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L40dfb4.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int` := v4;
  #L40dfb8.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` := v5 @kind boolean;
  #L40dfbc.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest` v0 @kind this, `org.reactivestreams.Publisher`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;.<init>:([Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40dfd0.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L40dfd6.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] := v1 @kind object;
  #L40dfda.  v1:= 0I;
  #L40dfdc.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` := v1 @kind object;
  #L40dfe0.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L40dfe4.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int` := v3;
  #L40dfe8.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` := v4 @kind boolean;
  #L40dfec.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest` v9 @kind this, `org.reactivestreams.Subscriber` v10 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L40e000.  v0:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] @kind object;
  #L40e004.  v1:= 0I;
  #L40e006.  if v0 != 0 then goto L40e0aa;
  #L40e00a.  v0:= 8I;
  #L40e00e.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L40e012.  v2:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` @kind object;
  #L40e016.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40e01c.  v2:= temp @kind object;
  #L40e01e.  v3:= "The iterator returned is null" @kind object;
  #L40e022.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40e028.  v2:= temp @kind object;
  #L40e02a.  v2:= (`java.util.Iterator`) v2 @kind object;
  #L40e02e.  v3:= 0I;
  #L40e030.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40e036.  v4:= temp;
  #L40e038.  if v4 != 0 then goto L40e03e;
  #L40e03c.  goto L40e0ac;
  #L40e03e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40e044.  v4:= temp @kind object;
  #L40e046.  v5:= "The publisher returned by the iterator is null" @kind object;
  #L40e04a.  call temp:= `requireNonNull`(v4, v5) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40e050.  v4:= temp @kind object;
  #L40e052.  v4:= (`org.reactivestreams.Publisher`) v4 @kind object;
  #L40e056.  v5:= length @variable v0;
  #L40e058.  if v3 != v5 then goto L40e06e;
  #L40e05c.  v5:= v3 ^> 2;
  #L40e060.  v5:= v5 + v3 @kind int;
  #L40e062.  v5:= new `org.reactivestreams.Publisher`[v5];
  #L40e066.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L40e06c.  v0:= v5 @kind object;
  #L40e06e.  v5:= v3 + 1;
  #L40e072.  v0[v3]:= v4 @kind object;
  #L40e076.  v3:= v5;
  #L40e078.  goto L40e030;
  #L40e07a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e07c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L40e082.  call `error`(v0, v10) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L40e088.  return @kind void;
  #L40e08a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e08c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L40e092.  call `error`(v0, v10) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L40e098.  return @kind void;
  #L40e09a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e09c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L40e0a2.  call `error`(v0, v10) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L40e0a8.  return @kind void;
  #L40e0aa.  v3:= length @variable v0;
  #L40e0ac.  v8:= v3;
  #L40e0ae.  if v8 != 0 then goto L40e0ba;
  #L40e0b2.  call `complete`(v10) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L40e0b8.  return @kind void;
  #L40e0ba.  v2:= 1I;
  #L40e0bc.  if v8 != v2 then goto L40e0e0;
  #L40e0c0.  v0:= v0[v1] @kind object;
  #L40e0c4.  v1:= new `io.reactivex.internal.operators.flowable.FlowableMap$b`;
  #L40e0c8.  v2:= new `io.reactivex.internal.operators.flowable.FlowableCombineLatest$c`;
  #L40e0cc.  call `<init>`(v2, v9) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$c;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;)V` @kind direct;
  #L40e0d2.  call `<init>`(v1, v10, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @kind direct;
  #L40e0d8.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L40e0de.  return @kind void;
  #L40e0e0.  v1:= new `io.reactivex.internal.operators.flowable.FlowableCombineLatest$a`;
  #L40e0e4.  v4:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.functions.Function` @kind object;
  #L40e0e8.  v6:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int`;
  #L40e0ec.  v7:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` @kind boolean;
  #L40e0f0.  v2:= v1 @kind object;
  #L40e0f2.  v3:= v10 @kind object;
  #L40e0f4.  v5:= v8;
  #L40e0f6.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;IIZ)V` @kind direct;
  #L40e0fc.  call `onSubscribe`(v10, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L40e102.  call `l`(v1, v0, v8) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$a;.l:([Lorg/reactivestreams/Publisher;I)V` @kind virtual;
  #L40e108.  return @kind void;
  catch `java.lang.Throwable` @[L40e012..L40e02e] goto L40e09a;
  catch `java.lang.Throwable` @[L40e030..L40e038] goto L40e08a;
  catch `java.lang.Throwable` @[L40e03e..L40e056] goto L40e07a;
}
