record `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` @kind class @AccessFlag FINAL extends `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a` `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind object, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther$a;Lorg/reactivestreams/Subscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L410e58.  v0.`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a` := v1 @kind object;
  #L410e5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L410e62.  v0.`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.a` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L410e66.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410e78.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.a` @type ^`org.reactivestreams.Subscription` @kind object;
  #L410e7c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L410e82.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;

  #L410e94.  return @kind void;
}
