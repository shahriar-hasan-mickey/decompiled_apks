record `io.reactivex.internal.operators.flowable.FlowableRepeat` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `long` `io.reactivex.internal.operators.flowable.FlowableRepeat.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableRepeat` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeat;.<init>:(Lio/reactivex/Flowable;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L41e974.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L41e97a.  v0.`io.reactivex.internal.operators.flowable.FlowableRepeat.b` @type ^`long` := v2 @kind wide;
  #L41e97e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableRepeat` v7 @kind this, `org.reactivestreams.Subscriber` v8 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeat;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41e990.  v4:= new `io.reactivex.internal.subscriptions.SubscriptionArbiter`;
  #L41e994.  call `<init>`(v4) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.<init>:()V` @kind direct;
  #L41e99a.  call `onSubscribe`(v8, v4) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L41e9a0.  v6:= new `io.reactivex.internal.operators.flowable.FlowableRepeat$a`;
  #L41e9a4.  v0:= v7.`io.reactivex.internal.operators.flowable.FlowableRepeat.b` @type ^`long` @kind wide;
  #L41e9a8.  v2:= 9223372036854775807L;
  #L41e9b2.  v5:= lcmp(v0, v2);
  #L41e9b6.  if v5 == 0 then goto L41e9c2;
  #L41e9ba.  v2:= 1L;
  #L41e9be.  v0:= v0 - v2 @kind long;
  #L41e9c0.  v2:= v0 @kind wide;
  #L41e9c2.  v5:= v7.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L41e9c6.  v0:= v6 @kind object;
  #L41e9c8.  v1:= v8 @kind object;
  #L41e9ca.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeat$a;.<init>:(Lorg/reactivestreams/Subscriber;JLio/reactivex/internal/subscriptions/SubscriptionArbiter;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L41e9d0.  call `a`(v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableRepeat$a;.a:()V` @kind virtual;
  #L41e9d6.  return @kind void;
}
