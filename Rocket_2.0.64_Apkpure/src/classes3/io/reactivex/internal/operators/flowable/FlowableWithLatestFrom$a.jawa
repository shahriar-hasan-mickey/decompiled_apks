record `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface {
  `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$b` `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom` `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom` v1 @kind object, `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$b` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$a;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom;Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L428b7c.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom` := v1 @kind object;
  #L428b80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L428b86.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a.a` @type ^`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$b` := v2 @kind object;
  #L428b8a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L428b9c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428bb0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a.a` @type ^`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$b` @kind object;
  #L428bb4.  call `a`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$b;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L428bba.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428bcc.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a.a` @type ^`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$b` @kind object;
  #L428bd0.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L428bd6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428be8.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a.a` @type ^`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$b` @kind object;
  #L428bec.  call temp:= `b`(v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$b;.b:(Lorg/reactivestreams/Subscription;)Z` @kind virtual;
  #L428bf2.  v0:= temp;
  #L428bf4.  if v0 == 0 then goto L428c08;
  #L428bf8.  v0:= 9223372036854775807L;
  #L428c02.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L428c08.  return @kind void;
}
