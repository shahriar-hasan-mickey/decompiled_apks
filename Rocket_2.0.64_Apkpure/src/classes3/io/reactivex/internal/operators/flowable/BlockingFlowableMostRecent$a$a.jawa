record `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @AccessFlag PRIVATE;
  `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v0 @kind this, `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.<init>:(Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L409a3c.  v0.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` := v1 @kind object;
  #L409a40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L409a46.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L409978.  v0:= v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` @kind object;
  #L40997c.  v0:= v0.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L409980.  v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L409984.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L40998a.  v0:= temp;
  #L40998c.  v0:= v0 ^~ 1;
  #L409990.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4099a4.  v0:= 0I;
  #L4099a6.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4099aa.  if v1 != 0 then goto L4099ba;
  #L4099ae.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` @kind object;
  #L4099b2.  v1:= v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L4099b6.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L4099ba.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4099be.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4099c4.  v1:= temp;
  #L4099c6.  if v1 != 0 then goto L409a02;
  #L4099ca.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4099ce.  call temp:= `isError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4099d4.  v1:= temp;
  #L4099d6.  if v1 != 0 then goto L4099ec;
  #L4099da.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4099de.  call temp:= `getValue`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4099e4.  v1:= temp @kind object;
  #L4099e6.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4099ea.  return v1 @kind object;
  #L4099ec.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4099f0.  call temp:= `getError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L4099f6.  v1:= temp @kind object;
  #L4099f8.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4099fe.  v1:= temp @kind object;
  #L409a00.  throw v1;
  #L409a02.  v1:= new `java.util.NoSuchElementException`;
  #L409a06.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L409a0c.  throw v1;
  #L409a0e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L409a10.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L409a14.  throw v1;
  catch `java.lang.Throwable` @[L4099a6..L4099e6] goto L409a0e;
  catch `java.lang.Throwable` @[L4099ec..L409a0e] goto L409a0e;
}
procedure `void` `remove`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L409a58.  v0:= new `java.lang.UnsupportedOperationException`;
  #L409a5c.  v1:= "Read only iterator" @kind object;
  #L409a60.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409a66.  throw v0;
}
