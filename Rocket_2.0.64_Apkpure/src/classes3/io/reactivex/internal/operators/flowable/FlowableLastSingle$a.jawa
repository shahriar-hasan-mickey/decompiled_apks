record `io.reactivex.internal.operators.flowable.FlowableLastSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableLastSingle$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.<init>:(Lio/reactivex/SingleObserver;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L419b9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L419ba2.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L419ba6.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L419baa.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L419bbc.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L419bc0.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L419bc6.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L419bca.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L419bce.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L419b78.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L419b7c.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L419b80.  if v0 != v1 then goto L419b88;
  #L419b84.  v0:= 1I;
  #L419b86.  goto L419b8a;
  #L419b88.  v0:= 0I;
  #L419b8a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L419be0.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L419be4.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L419be8.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @type ^`java.lang.Object` @kind object;
  #L419bec.  if v0 == 0 then goto L419c02;
  #L419bf0.  v1:= 0I;
  #L419bf2.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @type ^`java.lang.Object` := v1 @kind object;
  #L419bf6.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L419bfa.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L419c00.  goto L419c2a;
  #L419c02.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.b` @type ^`java.lang.Object` @kind object;
  #L419c06.  if v0 == 0 then goto L419c16;
  #L419c0a.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L419c0e.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L419c14.  goto L419c2a;
  #L419c16.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L419c1a.  v1:= new `java.util.NoSuchElementException`;
  #L419c1e.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L419c24.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L419c2a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L419c3c.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L419c40.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L419c44.  v0:= 0I;
  #L419c46.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @type ^`java.lang.Object` := v0 @kind object;
  #L419c4a.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L419c4e.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L419c54.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L419c68.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @type ^`java.lang.Object` := v1 @kind object;
  #L419c6c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L419c80.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L419c84.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L419c8a.  v0:= temp;
  #L419c8c.  if v0 == 0 then goto L419cae;
  #L419c90.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L419c94.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L419c98.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L419c9e.  v0:= 9223372036854775807L;
  #L419ca8.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L419cae.  return @kind void;
}
