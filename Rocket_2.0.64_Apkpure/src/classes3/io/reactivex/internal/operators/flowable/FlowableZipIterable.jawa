record `io.reactivex.internal.operators.flowable.FlowableZipIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `java.lang.Iterable` `io.reactivex.internal.operators.flowable.FlowableZipIterable.b` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableZipIterable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableZipIterable` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableZipIterable;.<init>:(Lio/reactivex/Flowable;Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429bf0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L429bf6.  v0.`io.reactivex.internal.operators.flowable.FlowableZipIterable.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L429bfa.  v0.`io.reactivex.internal.operators.flowable.FlowableZipIterable.c` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L429bfe.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableZipIterable` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableZipIterable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L429c10.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableZipIterable.b` @type ^`java.lang.Iterable` @kind object;
  #L429c14.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L429c1a.  v0:= temp @kind object;
  #L429c1c.  v1:= "The iterator returned by other is null" @kind object;
  #L429c20.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L429c26.  v0:= temp @kind object;
  #L429c28.  v0:= (`java.util.Iterator`) v0 @kind object;
  #L429c2c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L429c32.  v1:= temp;
  #L429c34.  if v1 != 0 then goto L429c40;
  #L429c38.  call `complete`(v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L429c3e.  return @kind void;
  #L429c40.  v1:= v4.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L429c44.  v2:= new `io.reactivex.internal.operators.flowable.FlowableZipIterable$a`;
  #L429c48.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableZipIterable.c` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L429c4c.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableZipIterable$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/util/Iterator;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L429c52.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L429c58.  return @kind void;
  #L429c5a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L429c5c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L429c62.  call `error`(v0, v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L429c68.  return @kind void;
  #L429c6a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L429c6c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L429c72.  call `error`(v0, v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L429c78.  return @kind void;
  catch `java.lang.Throwable` @[L429c10..L429c2c] goto L429c6a;
  catch `java.lang.Throwable` @[L429c2c..L429c34] goto L429c5a;
}
