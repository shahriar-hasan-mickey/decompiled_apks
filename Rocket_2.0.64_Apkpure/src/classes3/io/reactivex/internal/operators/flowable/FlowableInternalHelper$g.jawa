record `io.reactivex.internal.operators.flowable.FlowableInternalHelper$g` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `io.reactivex.Flowable` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$g.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$g` v0 @kind this, `io.reactivex.Flowable` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$g;.<init>:(Lio/reactivex/Flowable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L418900.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L418906.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$g.a` @type ^`io.reactivex.Flowable` := v1 @kind object;
  #L41890a.  return @kind void;
}
procedure `io.reactivex.flowables.ConnectableFlowable` `a`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$g` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$g;.a:()Lio/reactivex/flowables/ConnectableFlowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4188c4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$g.a` @type ^`io.reactivex.Flowable` @kind object;
  #L4188c8.  call temp:= `replay`(v0) @signature `Lio/reactivex/Flowable;.replay:()Lio/reactivex/flowables/ConnectableFlowable;` @kind virtual;
  #L4188ce.  v0:= temp @kind object;
  #L4188d0.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$g` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$g;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4188e4.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$g;.a:()Lio/reactivex/flowables/ConnectableFlowable;` @kind virtual;
  #L4188ea.  v0:= temp @kind object;
  #L4188ec.  return v0 @kind object;
}
