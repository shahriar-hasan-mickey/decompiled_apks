record `io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.d` @AccessFlag FINAL;
  `io.reactivex.internal.util.ErrorMode` `io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.internal.util.ErrorMode` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40f428.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L40f42e.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.b` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L40f432.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.c` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L40f436.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.d` @type ^`int` := v3;
  #L40f43a.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.e` @type ^`io.reactivex.internal.util.ErrorMode` := v4 @kind object;
  #L40f43e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMapPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40f450.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L40f454.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L40f458.  call temp:= `tryScalarXMapSubscribe`(v0, v5, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)Z` @kind static;
  #L40f45e.  v0:= temp;
  #L40f460.  if v0 == 0 then goto L40f466;
  #L40f464.  return @kind void;
  #L40f466.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L40f46a.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L40f46e.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.d` @type ^`int`;
  #L40f472.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher.e` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L40f476.  call temp:= `subscribe`(v5, v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)Lorg/reactivestreams/Subscriber;` @kind static;
  #L40f47c.  v5:= temp @kind object;
  #L40f47e.  call `subscribe`(v0, v5) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L40f484.  return @kind void;
}
