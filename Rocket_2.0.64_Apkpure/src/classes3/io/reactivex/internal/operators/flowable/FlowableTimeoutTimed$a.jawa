record `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$a` @kind class @AccessFlag FINAL extends `io.reactivex.disposables.Disposable` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L424fb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L424fbe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L424fd0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L424fa4.  v0:= 1I;
  #L424fa6.  return v0;
}
