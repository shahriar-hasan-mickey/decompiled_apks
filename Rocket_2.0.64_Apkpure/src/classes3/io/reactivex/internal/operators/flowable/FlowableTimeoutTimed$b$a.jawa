record `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$b$a;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$b;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L424fe4.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` := v1 @kind object;
  #L424fe8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L424fee.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.a` @type ^`long` := v2 @kind wide;
  #L424ff2.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a` v5 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$b$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L425004.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.a` @type ^`long` @kind wide;
  #L425008.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` @kind object;
  #L42500c.  v2:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b.i` @type ^`long` @kind wide;
  #L425010.  v4:= lcmp(v0, v2);
  #L425014.  if v4 != 0 then goto L425056;
  #L425018.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` @kind object;
  #L42501c.  v1:= 1I;
  #L42501e.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b.j` @type ^`boolean` := v1 @kind boolean;
  #L425022.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` @kind object;
  #L425026.  v0:= v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L42502a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L425030.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` @kind object;
  #L425034.  v0:= v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b.h` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L425038.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42503e.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` @kind object;
  #L425042.  call `b`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$b;.b:()V` @kind virtual;
  #L425048.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b` @kind object;
  #L42504c.  v0:= v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L425050.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L425056.  return @kind void;
}
