record `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$c$a;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$c;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4252a0.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c` := v1 @kind object;
  #L4252a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4252aa.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.a` @type ^`long` := v2 @kind wide;
  #L4252ae.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a` v5 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4252c0.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.a` @type ^`long` @kind wide;
  #L4252c4.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c` @kind object;
  #L4252c8.  v2:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c.g` @type ^`long` @kind wide;
  #L4252cc.  v4:= lcmp(v0, v2);
  #L4252d0.  if v4 != 0 then goto L425300;
  #L4252d4.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c` @kind object;
  #L4252d8.  v1:= 1I;
  #L4252da.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c.h` @type ^`boolean` := v1 @kind boolean;
  #L4252de.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c` @kind object;
  #L4252e2.  call `dispose`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$c;.dispose:()V` @kind virtual;
  #L4252e8.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c` @kind object;
  #L4252ec.  v0:= v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4252f0.  v1:= new `java.util.concurrent.TimeoutException`;
  #L4252f4.  call `<init>`(v1) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L4252fa.  call `onError`(v0, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L425300.  return @kind void;
}
