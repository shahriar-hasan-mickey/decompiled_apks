record `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @AccessFlag ;
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.<init>:(Lio/reactivex/MaybeObserver;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4128e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4128ea.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L4128ee.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.b` @type ^`long` := v2 @kind wide;
  #L4128f2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412904.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L412908.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L41290e.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L412912.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L412916.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4128c0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4128c4.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4128c8.  if v0 != v1 then goto L4128d0;
  #L4128cc.  v0:= 1I;
  #L4128ce.  goto L4128d2;
  #L4128d0.  v0:= 0I;
  #L4128d2.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412928.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41292c.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L412930.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L412934.  if v0 != 0 then goto L412948;
  #L412938.  v0:= 1I;
  #L41293a.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L41293e.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L412942.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L412948.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41295c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L412960.  if v0 == 0 then goto L41296c;
  #L412964.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41296a.  return @kind void;
  #L41296c.  v0:= 1I;
  #L41296e.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L412972.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L412976.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L41297a.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L41297e.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L412984.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L412998.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L41299c.  if v0 == 0 then goto L4129a2;
  #L4129a0.  return @kind void;
  #L4129a2.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.d` @type ^`long` @kind wide;
  #L4129a6.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.b` @type ^`long` @kind wide;
  #L4129aa.  v4:= lcmp(v0, v2);
  #L4129ae.  if v4 != 0 then goto L4129d6;
  #L4129b2.  v0:= 1I;
  #L4129b4.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4129b8.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4129bc.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4129c2.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4129c6.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4129ca.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4129ce.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4129d4.  return @kind void;
  #L4129d6.  v2:= 1L;
  #L4129da.  v0:= v0 + v2 @kind long;
  #L4129dc.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.d` @type ^`long` := v0 @kind wide;
  #L4129e0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4129f4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4129f8.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4129fe.  v0:= temp;
  #L412a00.  if v0 == 0 then goto L412a22;
  #L412a04.  v2.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L412a08.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L412a0c.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L412a12.  v0:= 9223372036854775807L;
  #L412a1c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L412a22.  return @kind void;
}
