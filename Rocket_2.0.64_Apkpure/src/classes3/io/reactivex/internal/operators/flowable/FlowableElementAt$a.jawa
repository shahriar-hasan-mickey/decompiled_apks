record `io.reactivex.internal.operators.flowable.FlowableElementAt$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.c` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @AccessFlag ;
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableElementAt$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41275c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L412762.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.a` @type ^`long` := v2 @kind wide;
  #L412766.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L41276a.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.c` @type ^`boolean` := v5 @kind boolean;
  #L41276e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412780.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L412786.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41278a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L412790.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4127a4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L4127a8.  if v0 != 0 then goto L4127ea;
  #L4127ac.  v0:= 1I;
  #L4127ae.  v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4127b2.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.b` @type ^`java.lang.Object` @kind object;
  #L4127b6.  if v0 != 0 then goto L4127e4;
  #L4127ba.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.c` @type ^`boolean` @kind boolean;
  #L4127be.  if v0 == 0 then goto L4127d8;
  #L4127c2.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4127c6.  v1:= new `java.util.NoSuchElementException`;
  #L4127ca.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4127d0.  call `onError`(v0, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4127d6.  goto L4127ea;
  #L4127d8.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4127dc.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4127e2.  goto L4127ea;
  #L4127e4.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4127ea.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4127fc.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L412800.  if v0 == 0 then goto L41280c;
  #L412804.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41280a.  return @kind void;
  #L41280c.  v0:= 1I;
  #L41280e.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L412812.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L412816.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41281c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L412830.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L412834.  if v0 == 0 then goto L41283a;
  #L412838.  return @kind void;
  #L41283a.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.e` @type ^`long` @kind wide;
  #L41283e.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.a` @type ^`long` @kind wide;
  #L412842.  v4:= lcmp(v0, v2);
  #L412846.  if v4 != 0 then goto L412862;
  #L41284a.  v0:= 1I;
  #L41284c.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L412850.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L412854.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L41285a.  call `complete`(v5, v6) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L412860.  return @kind void;
  #L412862.  v2:= 1L;
  #L412866.  v0:= v0 + v2 @kind long;
  #L412868.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.e` @type ^`long` := v0 @kind wide;
  #L41286c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L412880.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L412884.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L41288a.  v0:= temp;
  #L41288c.  if v0 == 0 then goto L4128ae;
  #L412890.  v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L412894.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L412898.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L41289e.  v0:= 9223372036854775807L;
  #L4128a8.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4128ae.  return @kind void;
}
