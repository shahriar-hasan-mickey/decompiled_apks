record `io.reactivex.internal.operators.flowable.FlowableMapNotification$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableMapNotification$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableMapNotification$a.b` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableMapNotification$a.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableMapNotification$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L419fec.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L419ff2.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L419ff6.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.b` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L419ffa.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.c` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L419ffe.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41a010.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.c` @type ^`java.util.concurrent.Callable` @kind object;
  #L41a014.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L41a01a.  v0:= temp @kind object;
  #L41a01c.  v1:= "The onComplete publisher returned is null" @kind object;
  #L41a020.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41a026.  v0:= temp @kind object;
  #L41a028.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L41a02e.  return @kind void;
  #L41a030.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41a032.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41a038.  v1:= v2.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41a03c.  call `onError`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41a042.  return @kind void;
  catch `java.lang.Throwable` @[L41a010..L41a028] goto L41a030;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41a060.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L41a064.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41a06a.  v2:= temp @kind object;
  #L41a06c.  v0:= "The onError publisher returned is null" @kind object;
  #L41a070.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41a076.  v2:= temp @kind object;
  #L41a078.  call `complete`(v1, v2) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L41a07e.  return @kind void;
  #L41a080.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41a082.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41a088.  v0:= v1.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41a08c.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41a092.  return @kind void;
  catch `java.lang.Throwable` @[L41a060..L41a078] goto L41a080;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41a0b0.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L41a0b4.  call temp:= `apply`(v0, v5) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41a0ba.  v5:= temp @kind object;
  #L41a0bc.  v0:= "The onNext publisher returned is null" @kind object;
  #L41a0c0.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41a0c6.  v5:= temp @kind object;
  #L41a0c8.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` @kind wide;
  #L41a0cc.  v2:= 1L;
  #L41a0d0.  v0:= v0 + v2 @kind long;
  #L41a0d2.  v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L41a0d6.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41a0da.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L41a0e0.  return @kind void;
  #L41a0e2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41a0e4.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41a0ea.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41a0ee.  call `onError`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41a0f4.  return @kind void;
  catch `java.lang.Throwable` @[L41a0b0..L41a0c8] goto L41a0e2;
}
