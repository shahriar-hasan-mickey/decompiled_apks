record `io.reactivex.internal.operators.flowable.FlowableCombineLatest$c` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.internal.operators.flowable.FlowableCombineLatest` `io.reactivex.internal.operators.flowable.FlowableCombineLatest$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$c` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableCombineLatest` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$c;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40df84.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$c.a` @type ^`io.reactivex.internal.operators.flowable.FlowableCombineLatest` := v1 @kind object;
  #L40df88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40df8e.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$c;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40df54.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$c.a` @type ^`io.reactivex.internal.operators.flowable.FlowableCombineLatest` @kind object;
  #L40df58.  v0:= v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.functions.Function` @kind object;
  #L40df5c.  v1:= 1I;
  #L40df5e.  v1:= new `java.lang.Object`[v1];
  #L40df62.  v2:= 0I;
  #L40df64.  v1[v2]:= v4 @kind object;
  #L40df68.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40df6e.  v4:= temp @kind object;
  #L40df70.  return v4 @kind object;
}
