record `io.reactivex.internal.operators.flowable.FlowableDefer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableDefer.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDefer` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L410b94.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L410b9a.  v0.`io.reactivex.internal.operators.flowable.FlowableDefer.b` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L410b9e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableDefer` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDefer;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L410bb0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDefer.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L410bb4.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L410bba.  v0:= temp @kind object;
  #L410bbc.  v1:= "The publisher supplied is null" @kind object;
  #L410bc0.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L410bc6.  v0:= temp @kind object;
  #L410bc8.  v0:= (`org.reactivestreams.Publisher`) v0 @kind object;
  #L410bcc.  call `subscribe`(v0, v3) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L410bd2.  return @kind void;
  #L410bd4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L410bd6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L410bdc.  call `error`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L410be2.  return @kind void;
  catch `java.lang.Throwable` @[L410bb0..L410bcc] goto L410bd4;
}
