record `io.reactivex.internal.operators.flowable.FlowableReduce$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableReduce$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableReduce$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41d918.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L41d91e.  v0.`io.reactivex.internal.operators.flowable.FlowableReduce$a.a` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L41d922.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d934.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L41d93a.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41d93e.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L41d944.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41d948.  v1.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L41d94c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41d960.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41d964.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41d968.  if v0 != v1 then goto L41d96e;
  #L41d96c.  return @kind void;
  #L41d96e.  v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L41d972.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L41d976.  if v0 == 0 then goto L41d982;
  #L41d97a.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L41d980.  goto L41d98c;
  #L41d982.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41d986.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L41d98c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41d9a0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41d9a4.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41d9a8.  if v0 != v1 then goto L41d9b4;
  #L41d9ac.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41d9b2.  return @kind void;
  #L41d9b4.  v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L41d9b8.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41d9bc.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41d9c2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41d9d4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41d9d8.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41d9dc.  if v0 != v1 then goto L41d9e2;
  #L41d9e0.  return @kind void;
  #L41d9e2.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L41d9e6.  if v0 != 0 then goto L41d9f0;
  #L41d9ea.  v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v3 @kind object;
  #L41d9ee.  goto L41da26;
  #L41d9f0.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.a` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L41d9f4.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41d9fa.  v3:= temp @kind object;
  #L41d9fc.  v0:= "The reducer returned a null value" @kind object;
  #L41da00.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41da06.  v3:= temp @kind object;
  #L41da08.  v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v3 @kind object;
  #L41da0c.  goto L41da26;
  #L41da0e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41da10.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41da16.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41da1a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L41da20.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L41da26.  return @kind void;
  catch `java.lang.Throwable` @[L41d9f0..L41da0c] goto L41da0e;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41da44.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41da48.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L41da4e.  v0:= temp;
  #L41da50.  if v0 == 0 then goto L41da72;
  #L41da54.  v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L41da58.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41da5c.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L41da62.  v0:= 9223372036854775807L;
  #L41da6c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L41da72.  return @kind void;
}
