record `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$d` @kind class @AccessFlag FINAL {
  `io.reactivex.processors.UnicastProcessor` `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$d.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$d.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$d` v0 @kind this, `io.reactivex.processors.UnicastProcessor` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$d;.<init>:(Lio/reactivex/processors/UnicastProcessor;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4273a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4273aa.  v0.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$d.a` @type ^`io.reactivex.processors.UnicastProcessor` := v1 @kind object;
  #L4273ae.  v0.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$d.b` @type ^`java.lang.Object` := v2 @kind object;
  #L4273b2.  return @kind void;
}
