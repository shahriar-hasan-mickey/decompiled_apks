record `io.reactivex.internal.operators.flowable.FlowableCreate$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40f7f8.  call temp:= `values`() @signature `Lio/reactivex/BackpressureStrategy;.values:()[Lio/reactivex/BackpressureStrategy;` @kind static;
  #L40f7fe.  v0:= temp @kind object;
  #L40f800.  v0:= length @variable v0;
  #L40f802.  v0:= new `int`[v0];
  #L40f806.  `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] := v0 @kind object;
  #L40f80a.  v1:= `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L40f80e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40f814.  v1:= temp;
  #L40f816.  v2:= 1I;
  #L40f818.  v0[v1]:= v2;
  #L40f81c.  v0:= `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L40f820.  v1:= `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L40f824.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40f82a.  v1:= temp;
  #L40f82c.  v2:= 2I;
  #L40f82e.  v0[v1]:= v2;
  #L40f832.  v0:= `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L40f836.  v1:= `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L40f83a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40f840.  v1:= temp;
  #L40f842.  v2:= 3I;
  #L40f844.  v0[v1]:= v2;
  #L40f848.  v0:= `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L40f84c.  v1:= `@@io.reactivex.BackpressureStrategy.LATEST` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L40f850.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40f856.  v1:= temp;
  #L40f858.  v2:= 4I;
  #L40f85a.  v0[v1]:= v2;
  #L40f85e.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L40f80a..L40f81c] goto L40f81c;
  catch `java.lang.NoSuchFieldError` @[L40f81c..L40f832] goto L40f832;
  catch `java.lang.NoSuchFieldError` @[L40f832..L40f848] goto L40f848;
  catch `java.lang.NoSuchFieldError` @[L40f848..L40f85e] goto L40f85e;
}
