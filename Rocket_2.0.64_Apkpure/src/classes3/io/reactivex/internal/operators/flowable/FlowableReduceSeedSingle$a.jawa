record `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/BiFunction;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41dcb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41dcba.  v0.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L41dcbe.  v0.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L41dcc2.  v0.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.b` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L41dcc6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41dcd8.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41dcdc.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L41dce2.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41dce6.  v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L41dcea.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41dc90.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41dc94.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41dc98.  if v0 != v1 then goto L41dca0;
  #L41dc9c.  v0:= 1I;
  #L41dc9e.  goto L41dca2;
  #L41dca0.  v0:= 0I;
  #L41dca2.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41dcfc.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L41dd00.  v1:= 0I;
  #L41dd02.  v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L41dd06.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41dd0a.  v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L41dd0e.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L41dd12.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L41dd18.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41dd2c.  v0:= 0I;
  #L41dd2e.  v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L41dd32.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L41dd36.  v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L41dd3a.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L41dd3e.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41dd44.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41dd58.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L41dd5c.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L41dd60.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41dd66.  v3:= temp @kind object;
  #L41dd68.  v0:= "The reducer returned a null value" @kind object;
  #L41dd6c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dd72.  v3:= temp @kind object;
  #L41dd74.  v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L41dd78.  goto L41dd92;
  #L41dd7a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41dd7c.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41dd82.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41dd86.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L41dd8c.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L41dd92.  return @kind void;
  catch `java.lang.Throwable` @[L41dd5c..L41dd78] goto L41dd7a;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41ddb0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L41ddb4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L41ddba.  v0:= temp;
  #L41ddbc.  if v0 == 0 then goto L41ddde;
  #L41ddc0.  v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L41ddc4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L41ddc8.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L41ddce.  v0:= 9223372036854775807L;
  #L41ddd8.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L41ddde.  return @kind void;
}
