record `io.reactivex.internal.operators.flowable.FlowableTimeout$b` @kind class @AccessFlag FINAL extends `io.reactivex.subscribers.DisposableSubscriber` @kind class {
  `io.reactivex.internal.operators.flowable.FlowableTimeout$a` `io.reactivex.internal.operators.flowable.FlowableTimeout$b.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableTimeout$b.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableTimeout$b.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeout$b` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableTimeout$a` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$b;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableTimeout$a;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L424a58.  call `<init>`(v0) @signature `Lio/reactivex/subscribers/DisposableSubscriber;.<init>:()V` @kind direct;
  #L424a5e.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeout$a` := v1 @kind object;
  #L424a62.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.c` @type ^`long` := v2 @kind wide;
  #L424a66.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableTimeout$b` v3 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L424a78.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.d` @type ^`boolean` @kind boolean;
  #L424a7c.  if v0 == 0 then goto L424a82;
  #L424a80.  return @kind void;
  #L424a82.  v0:= 1I;
  #L424a84.  v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.d` @type ^`boolean` := v0 @kind boolean;
  #L424a88.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeout$a` @kind object;
  #L424a8c.  v1:= v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.c` @type ^`long` @kind wide;
  #L424a90.  call `b`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$a;.b:(J)V` @kind interface;
  #L424a96.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableTimeout$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L424aa8.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.d` @type ^`boolean` @kind boolean;
  #L424aac.  if v0 == 0 then goto L424ab8;
  #L424ab0.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L424ab6.  return @kind void;
  #L424ab8.  v0:= 1I;
  #L424aba.  v1.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.d` @type ^`boolean` := v0 @kind boolean;
  #L424abe.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeout$a` @kind object;
  #L424ac2.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$a;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L424ac8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableTimeout$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L424adc.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.d` @type ^`boolean` @kind boolean;
  #L424ae0.  if v3 == 0 then goto L424ae6;
  #L424ae4.  return @kind void;
  #L424ae6.  v3:= 1I;
  #L424ae8.  v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.d` @type ^`boolean` := v3 @kind boolean;
  #L424aec.  call `cancel`(v2) @signature `Lio/reactivex/subscribers/DisposableSubscriber;.cancel:()V` @kind virtual;
  #L424af2.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.b` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeout$a` @kind object;
  #L424af6.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$b.c` @type ^`long` @kind wide;
  #L424afa.  call `b`(v3, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$a;.b:(J)V` @kind interface;
  #L424b00.  return @kind void;
}
