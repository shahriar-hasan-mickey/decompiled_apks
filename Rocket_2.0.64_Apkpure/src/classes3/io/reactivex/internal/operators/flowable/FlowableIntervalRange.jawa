record `io.reactivex.internal.operators.flowable.FlowableIntervalRange` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableIntervalRange.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableIntervalRange.c` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableIntervalRange.d` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableIntervalRange.e` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableIntervalRange.f` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableIntervalRange.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableIntervalRange` v0 @kind this, `long` v1 , `long` v3 , `long` v5 , `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIntervalRange;.<init>:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L419138.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L41913e.  v0.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.e` @type ^`long` := v5 @kind wide;
  #L419142.  v0.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.f` @type ^`long` := v7 @kind wide;
  #L419146.  v0.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.g` @type ^`java.util.concurrent.TimeUnit` := v9 @kind object;
  #L41914a.  v0.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.b` @type ^`io.reactivex.Scheduler` := v10 @kind object;
  #L41914e.  v0.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.c` @type ^`long` := v1 @kind wide;
  #L419152.  v0.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.d` @type ^`long` := v3 @kind wide;
  #L419156.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableIntervalRange` v8 @kind this, `org.reactivestreams.Subscriber` v9 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIntervalRange;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L419168.  v7:= new `io.reactivex.internal.operators.flowable.FlowableIntervalRange$a`;
  #L41916c.  v2:= v8.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.c` @type ^`long` @kind wide;
  #L419170.  v4:= v8.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.d` @type ^`long` @kind wide;
  #L419174.  v0:= v7 @kind object;
  #L419176.  v1:= v9 @kind object;
  #L419178.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableIntervalRange$a;.<init>:(Lorg/reactivestreams/Subscriber;JJ)V` @kind direct;
  #L41917e.  call `onSubscribe`(v9, v7) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L419184.  v0:= v8.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.b` @type ^`io.reactivex.Scheduler` @kind object;
  #L419188.  v2:= v8.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.e` @type ^`long` @kind wide;
  #L41918c.  v4:= v8.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.f` @type ^`long` @kind wide;
  #L419190.  v6:= v8.`io.reactivex.internal.operators.flowable.FlowableIntervalRange.g` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L419194.  v1:= v7 @kind object;
  #L419196.  call temp:= `schedulePeriodicallyDirect`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/Scheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L41919c.  v9:= temp @kind object;
  #L41919e.  call `a`(v7, v9) @signature `Lio/reactivex/internal/operators/flowable/FlowableIntervalRange$a;.a:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L4191a4.  return @kind void;
}
