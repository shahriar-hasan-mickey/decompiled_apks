record `io.reactivex.internal.operators.flowable.FlowableInternalHelper$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `io.reactivex.Flowable` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.a` @AccessFlag PRIVATE_FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.b` @AccessFlag PRIVATE_FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.d` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `int` v2 , `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$b;.<init>:(Lio/reactivex/Flowable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4186f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4186fe.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.a` @type ^`io.reactivex.Flowable` := v1 @kind object;
  #L418702.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.b` @type ^`int` := v2;
  #L418706.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.c` @type ^`long` := v3 @kind wide;
  #L41870a.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.d` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L41870e.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.e` @type ^`io.reactivex.Scheduler` := v6 @kind object;
  #L418712.  return @kind void;
}
procedure `io.reactivex.flowables.ConnectableFlowable` `a`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b` v6 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$b;.a:()Lio/reactivex/flowables/ConnectableFlowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4186ac.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.a` @type ^`io.reactivex.Flowable` @kind object;
  #L4186b0.  v1:= v6.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.b` @type ^`int`;
  #L4186b4.  v2:= v6.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.c` @type ^`long` @kind wide;
  #L4186b8.  v4:= v6.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4186bc.  v5:= v6.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b.e` @type ^`io.reactivex.Scheduler` @kind object;
  #L4186c0.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/flowables/ConnectableFlowable;` @kind virtual;
  #L4186c6.  v0:= temp @kind object;
  #L4186c8.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$b;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4186dc.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$b;.a:()Lio/reactivex/flowables/ConnectableFlowable;` @kind virtual;
  #L4186e2.  v0:= temp @kind object;
  #L4186e4.  return v0 @kind object;
}
