record `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @AccessFlag FINAL;
  `io.reactivex.functions.LongConsumer` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.LongConsumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/LongConsumer;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L412578.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41257e.  v0.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L412582.  v0.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L412586.  v0.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @type ^`io.reactivex.functions.Action` := v4 @kind object;
  #L41258a.  v0.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @type ^`io.reactivex.functions.LongConsumer` := v3 @kind object;
  #L41258e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4125a0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @type ^`io.reactivex.functions.Action` @kind object;
  #L4125a4.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L4125aa.  goto L4125ba;
  #L4125ac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4125ae.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4125b4.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4125ba.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4125be.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4125c4.  return @kind void;
  catch `java.lang.Throwable` @[L4125a0..L4125aa] goto L4125ac;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4125e4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4125e8.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4125ec.  if v0 == v1 then goto L4125fa;
  #L4125f0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4125f4.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4125fa.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41260c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L412610.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L412614.  if v0 == v1 then goto L412624;
  #L412618.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41261c.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L412622.  goto L41262a;
  #L412624.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41262a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41263c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L412640.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L412646.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412658.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L41265c.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L412662.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L412666.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L41266c.  v0:= temp;
  #L41266e.  if v0 == 0 then goto L412680;
  #L412672.  v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L412676.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41267a.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L412680.  return @kind void;
  #L412682.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L412684.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41268a.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L412690.  v2:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L412694.  v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L412698.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L41269c.  call `error`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4126a2.  return @kind void;
  catch `java.lang.Throwable` @[L412658..L412662] goto L412682;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4126c0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @type ^`io.reactivex.functions.LongConsumer` @kind object;
  #L4126c4.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/LongConsumer;.accept:(J)V` @kind interface;
  #L4126ca.  goto L4126da;
  #L4126cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4126ce.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4126d4.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4126da.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4126de.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4126e4.  return @kind void;
  catch `java.lang.Throwable` @[L4126c0..L4126ca] goto L4126cc;
}
