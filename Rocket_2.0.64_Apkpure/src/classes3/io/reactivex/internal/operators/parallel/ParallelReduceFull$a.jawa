record `io.reactivex.internal.operators.parallel.ParallelReduceFull$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `io.reactivex.internal.operators.parallel.ParallelReduceFull$b` `io.reactivex.internal.operators.parallel.ParallelReduceFull$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.parallel.ParallelReduceFull$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.parallel.ParallelReduceFull$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.parallel.ParallelReduceFull$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.parallel.ParallelReduceFull$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$a` v0 @kind this, `io.reactivex.internal.operators.parallel.ParallelReduceFull$b` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$a;.<init>:(Lio/reactivex/internal/operators/parallel/ParallelReduceFull$b;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44d6c8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L44d6ce.  v0.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.a` @type ^`io.reactivex.internal.operators.parallel.ParallelReduceFull$b` := v1 @kind object;
  #L44d6d2.  v0.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.b` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L44d6d6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$a;.a:()V` @AccessFlag  {
    temp;

  #L44d6e8.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L44d6ee.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44d700.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.d` @type ^`boolean` @kind boolean;
  #L44d704.  if v0 != 0 then goto L44d71c;
  #L44d708.  v0:= 1I;
  #L44d70a.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.d` @type ^`boolean` := v0 @kind boolean;
  #L44d70e.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.a` @type ^`io.reactivex.internal.operators.parallel.ParallelReduceFull$b` @kind object;
  #L44d712.  v1:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.c` @type ^`java.lang.Object` @kind object;
  #L44d716.  call `f`(v0, v1) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$b;.f:(Ljava/lang/Object;)V` @kind virtual;
  #L44d71c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44d730.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.d` @type ^`boolean` @kind boolean;
  #L44d734.  if v0 == 0 then goto L44d740;
  #L44d738.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44d73e.  return @kind void;
  #L44d740.  v0:= 1I;
  #L44d742.  v1.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.d` @type ^`boolean` := v0 @kind boolean;
  #L44d746.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.a` @type ^`io.reactivex.internal.operators.parallel.ParallelReduceFull$b` @kind object;
  #L44d74a.  call `a`(v0, v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$b;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L44d750.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44d764.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.d` @type ^`boolean` @kind boolean;
  #L44d768.  if v0 != 0 then goto L44d7b8;
  #L44d76c.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.c` @type ^`java.lang.Object` @kind object;
  #L44d770.  if v0 != 0 then goto L44d77a;
  #L44d774.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L44d778.  goto L44d7b8;
  #L44d77a.  v1:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L44d77e.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44d784.  v3:= temp @kind object;
  #L44d786.  v0:= "The reducer returned a null value" @kind object;
  #L44d78a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d790.  v3:= temp @kind object;
  #L44d792.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L44d796.  goto L44d7b8;
  #L44d798.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44d79a.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44d7a0.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L44d7a6.  v0:= temp @kind object;
  #L44d7a8.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L44d7ac.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L44d7b2.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L44d7b8.  return @kind void;
  catch `java.lang.Throwable` @[L44d77a..L44d792] goto L44d798;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44d7d8.  call temp:= `setOnce`(v2, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L44d7de.  v0:= temp;
  #L44d7e0.  if v0 == 0 then goto L44d7f4;
  #L44d7e4.  v0:= 9223372036854775807L;
  #L44d7ee.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L44d7f4.  return @kind void;
}
