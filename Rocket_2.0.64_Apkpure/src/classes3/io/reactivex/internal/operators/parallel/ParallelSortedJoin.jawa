record `io.reactivex.internal.operators.parallel.ParallelSortedJoin` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `io.reactivex.parallel.ParallelFlowable` `io.reactivex.internal.operators.parallel.ParallelSortedJoin.b` @AccessFlag FINAL;
  `java.util.Comparator` `io.reactivex.internal.operators.parallel.ParallelSortedJoin.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin` v0 @kind this, `io.reactivex.parallel.ParallelFlowable` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin;.<init>:(Lio/reactivex/parallel/ParallelFlowable;Ljava/util/Comparator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44e6b8.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L44e6be.  v0.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.b` @type ^`io.reactivex.parallel.ParallelFlowable` := v1 @kind object;
  #L44e6c2.  v0.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.c` @type ^`java.util.Comparator` := v2 @kind object;
  #L44e6c6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L44e6d8.  v0:= new `io.reactivex.internal.operators.parallel.ParallelSortedJoin$b`;
  #L44e6dc.  v1:= v3.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.b` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L44e6e0.  call temp:= `parallelism`(v1) @signature `Lio/reactivex/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L44e6e6.  v1:= temp;
  #L44e6e8.  v2:= v3.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.c` @type ^`java.util.Comparator` @kind object;
  #L44e6ec.  call `<init>`(v0, v4, v1, v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$b;.<init>:(Lorg/reactivestreams/Subscriber;ILjava/util/Comparator;)V` @kind direct;
  #L44e6f2.  call `onSubscribe`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L44e6f8.  v4:= v3.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.b` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L44e6fc.  v0:= v0.`io.reactivex.internal.operators.parallel.ParallelSortedJoin$b.b` @type ^`io.reactivex.internal.operators.parallel.ParallelSortedJoin$a`[] @kind object;
  #L44e700.  call `subscribe`(v4, v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L44e706.  return @kind void;
}
