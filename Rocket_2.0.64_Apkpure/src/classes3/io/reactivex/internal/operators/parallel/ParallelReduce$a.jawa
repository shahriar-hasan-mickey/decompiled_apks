record `io.reactivex.internal.operators.parallel.ParallelReduce$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.DeferredScalarSubscriber` @kind class {
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.parallel.ParallelReduce$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.parallel.ParallelReduce$a.b` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.parallel.ParallelReduce$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.parallel.ParallelReduce$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelReduce$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44d580.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L44d586.  v0.`io.reactivex.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L44d58a.  v0.`io.reactivex.internal.operators.parallel.ParallelReduce$a.a` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L44d58e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.parallel.ParallelReduce$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44d5a0.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.cancel:()V` @kind super;
  #L44d5a6.  v0:= v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.s` @type ^`org.reactivestreams.Subscription` @kind object;
  #L44d5aa.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L44d5b0.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.parallel.ParallelReduce$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44d5c4.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L44d5c8.  if v0 != 0 then goto L44d5e2;
  #L44d5cc.  v0:= 1I;
  #L44d5ce.  v2.`io.reactivex.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` := v0 @kind boolean;
  #L44d5d2.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` @kind object;
  #L44d5d6.  v1:= 0I;
  #L44d5d8.  v2.`io.reactivex.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L44d5dc.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L44d5e2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.parallel.ParallelReduce$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44d5f4.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L44d5f8.  if v0 == 0 then goto L44d604;
  #L44d5fc.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44d602.  return @kind void;
  #L44d604.  v0:= 1I;
  #L44d606.  v1.`io.reactivex.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` := v0 @kind boolean;
  #L44d60a.  v0:= 0I;
  #L44d60c.  v1.`io.reactivex.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v0 @kind object;
  #L44d610.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44d614.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44d61a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.parallel.ParallelReduce$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44d62c.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L44d630.  if v0 != 0 then goto L44d66a;
  #L44d634.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduce$a.a` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L44d638.  v1:= v2.`io.reactivex.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` @kind object;
  #L44d63c.  call temp:= `apply`(v0, v1, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44d642.  v3:= temp @kind object;
  #L44d644.  v0:= "The reducer returned a null value" @kind object;
  #L44d648.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d64e.  v3:= temp @kind object;
  #L44d650.  v2.`io.reactivex.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L44d654.  goto L44d66a;
  #L44d656.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44d658.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44d65e.  call `cancel`(v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$a;.cancel:()V` @kind virtual;
  #L44d664.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L44d66a.  return @kind void;
  catch `java.lang.Throwable` @[L44d634..L44d650] goto L44d656;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.parallel.ParallelReduce$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44d688.  v0:= v2.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.s` @type ^`org.reactivestreams.Subscription` @kind object;
  #L44d68c.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L44d692.  v0:= temp;
  #L44d694.  if v0 == 0 then goto L44d6b6;
  #L44d698.  v2.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.s` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L44d69c.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44d6a0.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L44d6a6.  v0:= 9223372036854775807L;
  #L44d6b0.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L44d6b6.  return @kind void;
}
