record `io.reactivex.internal.operators.parallel.ParallelMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.parallel.ParallelFlowable` @kind class {
  `io.reactivex.parallel.ParallelFlowable` `io.reactivex.internal.operators.parallel.ParallelMap.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.parallel.ParallelMap.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelMap` v0 @kind this, `io.reactivex.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap;.<init>:(Lio/reactivex/parallel/ParallelFlowable;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44d108.  call `<init>`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L44d10e.  v0.`io.reactivex.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.parallel.ParallelFlowable` := v1 @kind object;
  #L44d112.  v0.`io.reactivex.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L44d116.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.internal.operators.parallel.ParallelMap` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44d0e8.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L44d0ec.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L44d0f2.  v0:= temp;
  #L44d0f4.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.internal.operators.parallel.ParallelMap` v6 @kind this, `org.reactivestreams.Subscriber`[] v7 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L44d128.  call temp:= `validate`(v6, v7) @signature `Lio/reactivex/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L44d12e.  v0:= temp;
  #L44d130.  if v0 != 0 then goto L44d136;
  #L44d134.  return @kind void;
  #L44d136.  v0:= length @variable v7;
  #L44d138.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L44d13c.  v2:= 0I;
  #L44d13e.  if v2 >= v0 then goto L44d17e;
  #L44d142.  v3:= v7[v2] @kind object;
  #L44d146.  v4:= instanceof @variable v3 @type ^`io.reactivex.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L44d14a.  if v4 == 0 then goto L44d166;
  #L44d14e.  v4:= new `io.reactivex.internal.operators.parallel.ParallelMap$a`;
  #L44d152.  v3:= (`io.reactivex.internal.fuseable.ConditionalSubscriber`) v3 @kind object;
  #L44d156.  v5:= v6.`io.reactivex.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L44d15a.  call `<init>`(v4, v3, v5) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap$a;.<init>:(Lio/reactivex/internal/fuseable/ConditionalSubscriber;Lio/reactivex/functions/Function;)V` @kind direct;
  #L44d160.  v1[v2]:= v4 @kind object;
  #L44d164.  goto L44d178;
  #L44d166.  v4:= new `io.reactivex.internal.operators.parallel.ParallelMap$b`;
  #L44d16a.  v5:= v6.`io.reactivex.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L44d16e.  call `<init>`(v4, v3, v5) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @kind direct;
  #L44d174.  v1[v2]:= v4 @kind object;
  #L44d178.  v2:= v2 + 1;
  #L44d17c.  goto L44d13e;
  #L44d17e.  v7:= v6.`io.reactivex.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L44d182.  call `subscribe`(v7, v1) @signature `Lio/reactivex/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L44d188.  return @kind void;
}
