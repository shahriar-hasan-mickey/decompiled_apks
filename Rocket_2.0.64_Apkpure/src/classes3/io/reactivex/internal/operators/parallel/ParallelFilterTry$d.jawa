record `io.reactivex.internal.operators.parallel.ParallelFilterTry$d` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.parallel.ParallelFilterTry$b` @kind class {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Predicate;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44b46c.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$b;.<init>:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L44b472.  v0.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L44b476.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b488.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` @kind boolean;
  #L44b48c.  if v0 != 0 then goto L44b4a0;
  #L44b490.  v0:= 1I;
  #L44b492.  v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` := v0 @kind boolean;
  #L44b496.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44b49a.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L44b4a0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b4b4.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` @kind boolean;
  #L44b4b8.  if v0 == 0 then goto L44b4c4;
  #L44b4bc.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44b4c2.  return @kind void;
  #L44b4c4.  v0:= 1I;
  #L44b4c6.  v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` := v0 @kind boolean;
  #L44b4ca.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44b4ce.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44b4d4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b4e8.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L44b4ec.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L44b4f2.  v0:= temp;
  #L44b4f4.  if v0 == 0 then goto L44b506;
  #L44b4f8.  v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L44b4fc.  v2:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44b500.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L44b506.  return @kind void;
}
procedure `boolean` `tryOnNext`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L44b37c.  v0:= v9.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` @kind boolean;
  #L44b380.  v1:= 0I;
  #L44b382.  if v0 != 0 then goto L44b442;
  #L44b386.  v2:= 0L;
  #L44b38a.  v0:= 1I;
  #L44b38c.  v4:= v9.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.a` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L44b390.  call temp:= `test`(v4, v10) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L44b396.  v2:= temp;
  #L44b398.  if v2 == 0 then goto L44b3a8;
  #L44b39c.  v1:= v9.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44b3a0.  call `onNext`(v1, v10) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L44b3a6.  return v0;
  #L44b3a8.  return v1;
  #L44b3aa.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44b3ac.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44b3b2.  v5:= 2I;
  #L44b3b4.  v6:= v9.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L44b3b8.  v7:= 1L;
  #L44b3bc.  v2:= v2 + v7 @kind long;
  #L44b3be.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L44b3c4.  v7:= temp @kind object;
  #L44b3c6.  call temp:= `apply`(v6, v7, v4) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44b3cc.  v6:= temp @kind object;
  #L44b3ce.  v7:= "The errorHandler returned a null item" @kind object;
  #L44b3d2.  call temp:= `requireNonNull`(v6, v7) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44b3d8.  v6:= temp @kind object;
  #L44b3da.  v6:= (`io.reactivex.parallel.ParallelFailureHandling`) v6 @kind object;
  #L44b3de.  v7:= `@@io.reactivex.internal.operators.parallel.ParallelFilterTry$a.a` @type ^`int`[] @kind object;
  #L44b3e2.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L44b3e8.  v6:= temp;
  #L44b3ea.  v6:= v7[v6];
  #L44b3ee.  if v6 == v0 then goto L44b38a;
  #L44b3f2.  if v6 == v5 then goto L44b416;
  #L44b3f6.  v10:= 3I;
  #L44b3f8.  if v6 == v10 then goto L44b40a;
  #L44b3fc.  call `cancel`(v9) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$b;.cancel:()V` @kind virtual;
  #L44b402.  call `onError`(v9, v4) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L44b408.  return v1;
  #L44b40a.  call `cancel`(v9) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$b;.cancel:()V` @kind virtual;
  #L44b410.  call `onComplete`(v9) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onComplete:()V` @kind virtual;
  #L44b416.  return v1;
  #L44b418.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44b41a.  call `throwIfFatal`(v10) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44b420.  call `cancel`(v9) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$b;.cancel:()V` @kind virtual;
  #L44b426.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L44b42a.  v3:= new `java.lang.Throwable`[v5];
  #L44b42e.  v3[v1]:= v4 @kind object;
  #L44b432.  v3[v0]:= v10 @kind object;
  #L44b436.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L44b43c.  call `onError`(v9, v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L44b442.  return v1;
  catch `java.lang.Throwable` @[L44b38c..L44b398] goto L44b3aa;
  catch `java.lang.Throwable` @[L44b3b4..L44b3de] goto L44b418;
}
