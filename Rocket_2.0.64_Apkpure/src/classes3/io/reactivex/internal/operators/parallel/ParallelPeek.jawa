record `io.reactivex.internal.operators.parallel.ParallelPeek` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.parallel.ParallelFlowable` @kind class {
  `io.reactivex.parallel.ParallelFlowable` `io.reactivex.internal.operators.parallel.ParallelPeek.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.b` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.c` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.d` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.e` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.f` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.g` @AccessFlag FINAL;
  `io.reactivex.functions.LongConsumer` `io.reactivex.internal.operators.parallel.ParallelPeek.h` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.i` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelPeek` v0 @kind this, `io.reactivex.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Consumer` v4 @kind object, `io.reactivex.functions.Action` v5 @kind object, `io.reactivex.functions.Action` v6 @kind object, `io.reactivex.functions.Consumer` v7 @kind object, `io.reactivex.functions.LongConsumer` v8 @kind object, `io.reactivex.functions.Action` v9 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/parallel/ParallelFlowable;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/LongConsumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44d474.  call `<init>`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L44d47a.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.parallel.ParallelFlowable` := v1 @kind object;
  #L44d47e.  v1:= "onNext is null" @kind object;
  #L44d482.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d488.  v1:= temp @kind object;
  #L44d48a.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L44d48e.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.b` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L44d492.  v1:= "onAfterNext is null" @kind object;
  #L44d496.  call temp:= `requireNonNull`(v3, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d49c.  v1:= temp @kind object;
  #L44d49e.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L44d4a2.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.c` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L44d4a6.  v1:= "onError is null" @kind object;
  #L44d4aa.  call temp:= `requireNonNull`(v4, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d4b0.  v1:= temp @kind object;
  #L44d4b2.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L44d4b6.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.d` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L44d4ba.  v1:= "onComplete is null" @kind object;
  #L44d4be.  call temp:= `requireNonNull`(v5, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d4c4.  v1:= temp @kind object;
  #L44d4c6.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L44d4ca.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.e` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L44d4ce.  v1:= "onAfterTerminated is null" @kind object;
  #L44d4d2.  call temp:= `requireNonNull`(v6, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d4d8.  v1:= temp @kind object;
  #L44d4da.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L44d4de.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.f` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L44d4e2.  v1:= "onSubscribe is null" @kind object;
  #L44d4e6.  call temp:= `requireNonNull`(v7, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d4ec.  v1:= temp @kind object;
  #L44d4ee.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L44d4f2.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.g` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L44d4f6.  v1:= "onRequest is null" @kind object;
  #L44d4fa.  call temp:= `requireNonNull`(v8, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d500.  v1:= temp @kind object;
  #L44d502.  v1:= (`io.reactivex.functions.LongConsumer`) v1 @kind object;
  #L44d506.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.h` @type ^`io.reactivex.functions.LongConsumer` := v1 @kind object;
  #L44d50a.  v1:= "onCancel is null" @kind object;
  #L44d50e.  call temp:= `requireNonNull`(v9, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44d514.  v1:= temp @kind object;
  #L44d516.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L44d51a.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.i` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L44d51e.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.internal.operators.parallel.ParallelPeek` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44d454.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L44d458.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L44d45e.  v0:= temp;
  #L44d460.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.internal.operators.parallel.ParallelPeek` v5 @kind this, `org.reactivestreams.Subscriber`[] v6 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44d530.  call temp:= `validate`(v5, v6) @signature `Lio/reactivex/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L44d536.  v0:= temp;
  #L44d538.  if v0 != 0 then goto L44d53e;
  #L44d53c.  return @kind void;
  #L44d53e.  v0:= length @variable v6;
  #L44d540.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L44d544.  v2:= 0I;
  #L44d546.  if v2 >= v0 then goto L44d562;
  #L44d54a.  v3:= new `io.reactivex.internal.operators.parallel.ParallelPeek$a`;
  #L44d54e.  v4:= v6[v2] @kind object;
  #L44d552.  call `<init>`(v3, v4, v5) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/internal/operators/parallel/ParallelPeek;)V` @kind direct;
  #L44d558.  v1[v2]:= v3 @kind object;
  #L44d55c.  v2:= v2 + 1;
  #L44d560.  goto L44d546;
  #L44d562.  v6:= v5.`io.reactivex.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L44d566.  call `subscribe`(v6, v1) @signature `Lio/reactivex/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L44d56c.  return @kind void;
}
