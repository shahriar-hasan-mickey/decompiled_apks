record `io.reactivex.internal.operators.observable.ObservableSkipUntil$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.internal.disposables.ArrayCompositeDisposable` `io.reactivex.internal.operators.observable.ObservableSkipUntil$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableSkipUntil$b` `io.reactivex.internal.operators.observable.ObservableSkipUntil$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.observers.SerializedObserver` `io.reactivex.internal.operators.observable.ObservableSkipUntil$a.c` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableSkipUntil$a.d` @AccessFlag ;
  `io.reactivex.internal.operators.observable.ObservableSkipUntil` `io.reactivex.internal.operators.observable.ObservableSkipUntil$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$a` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableSkipUntil` v1 @kind object, `io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind object, `io.reactivex.internal.operators.observable.ObservableSkipUntil$b` v3 @kind object, `io.reactivex.observers.SerializedObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableSkipUntil;Lio/reactivex/internal/disposables/ArrayCompositeDisposable;Lio/reactivex/internal/operators/observable/ObservableSkipUntil$b;Lio/reactivex/observers/SerializedObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L444280.  v0.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.e` @type ^`io.reactivex.internal.operators.observable.ObservableSkipUntil` := v1 @kind object;
  #L444284.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44428a.  v0.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.a` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` := v2 @kind object;
  #L44428e.  v0.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableSkipUntil$b` := v3 @kind object;
  #L444292.  v0.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.c` @type ^`io.reactivex.observers.SerializedObserver` := v4 @kind object;
  #L444296.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4442a8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableSkipUntil$b` @kind object;
  #L4442ac.  v1:= 1I;
  #L4442ae.  v0.`io.reactivex.internal.operators.observable.ObservableSkipUntil$b.d` @type ^`boolean` := v1 @kind boolean;
  #L4442b2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4442c4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.a` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L4442c8.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @kind virtual;
  #L4442ce.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.c` @type ^`io.reactivex.observers.SerializedObserver` @kind object;
  #L4442d2.  call `onError`(v0, v2) @signature `Lio/reactivex/observers/SerializedObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4442d8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4442ec.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4442f0.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4442f6.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableSkipUntil$b` @kind object;
  #L4442fa.  v0:= 1I;
  #L4442fc.  v2.`io.reactivex.internal.operators.observable.ObservableSkipUntil$b.d` @type ^`boolean` := v0 @kind boolean;
  #L444300.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$a` v2 @kind this, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L444314.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L444318.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L44431e.  v0:= temp;
  #L444320.  if v0 == 0 then goto L444334;
  #L444324.  v2.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.d` @type ^`io.reactivex.disposables.Disposable` := v3 @kind object;
  #L444328.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableSkipUntil$a.a` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L44432c.  v1:= 1I;
  #L44432e.  call temp:= `setResource`(v0, v1, v3) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.setResource:(ILio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L444334.  return @kind void;
}
