record `io.reactivex.internal.operators.observable.ObservableTimeout$b` @kind class @AccessFlag FINAL extends `io.reactivex.observers.DisposableObserver` @kind class {
  `io.reactivex.internal.operators.observable.ObservableTimeout$a` `io.reactivex.internal.operators.observable.ObservableTimeout$b.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableTimeout$a` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.<init>:(Lio/reactivex/internal/operators/observable/ObservableTimeout$a;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L445e3c.  call `<init>`(v0) @signature `Lio/reactivex/observers/DisposableObserver;.<init>:()V` @kind direct;
  #L445e42.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeout$a` := v1 @kind object;
  #L445e46.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`long` := v2 @kind wide;
  #L445e4a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L445e5c.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`boolean` @kind boolean;
  #L445e60.  if v0 == 0 then goto L445e66;
  #L445e64.  return @kind void;
  #L445e66.  v0:= 1I;
  #L445e68.  v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`boolean` := v0 @kind boolean;
  #L445e6c.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeout$a` @kind object;
  #L445e70.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`long` @kind wide;
  #L445e74.  call `b`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$a;.b:(J)V` @kind interface;
  #L445e7a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445e8c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`boolean` @kind boolean;
  #L445e90.  if v0 == 0 then goto L445e9c;
  #L445e94.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L445e9a.  return @kind void;
  #L445e9c.  v0:= 1I;
  #L445e9e.  v1.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`boolean` := v0 @kind boolean;
  #L445ea2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeout$a` @kind object;
  #L445ea6.  call `a`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$a;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L445eac.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L445ec0.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`boolean` @kind boolean;
  #L445ec4.  if v3 == 0 then goto L445eca;
  #L445ec8.  return @kind void;
  #L445eca.  v3:= 1I;
  #L445ecc.  v2.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`boolean` := v3 @kind boolean;
  #L445ed0.  call `dispose`(v2) @signature `Lio/reactivex/observers/DisposableObserver;.dispose:()V` @kind virtual;
  #L445ed6.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeout$a` @kind object;
  #L445eda.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`long` @kind wide;
  #L445ede.  call `b`(v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$a;.b:(J)V` @kind interface;
  #L445ee4.  return @kind void;
}
