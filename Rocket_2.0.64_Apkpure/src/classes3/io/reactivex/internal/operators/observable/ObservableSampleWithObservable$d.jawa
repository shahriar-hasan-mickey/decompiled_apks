record `io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` `io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$d;.<init>:(Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44289c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4428a2.  v0.`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d.a` @type ^`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` := v1 @kind object;
  #L4428a6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4428b8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d.a` @type ^`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` @kind object;
  #L4428bc.  call `a`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;.a:()V` @kind virtual;
  #L4428c2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4428d4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d.a` @type ^`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` @kind object;
  #L4428d8.  call `e`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;.e:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4428de.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$d;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4428f0.  v1:= v0.`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d.a` @type ^`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` @kind object;
  #L4428f4.  call `f`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;.f:()V` @kind virtual;
  #L4428fa.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$d;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44290c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$d.a` @type ^`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` @kind object;
  #L442910.  call temp:= `g`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;.g:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L442916.  return @kind void;
}
