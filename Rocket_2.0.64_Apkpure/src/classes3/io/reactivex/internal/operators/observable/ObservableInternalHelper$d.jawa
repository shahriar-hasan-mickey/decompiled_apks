record `io.reactivex.internal.operators.observable.ObservableInternalHelper$d` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableInternalHelper$d.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$d` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$d;.<init>:(Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43cfd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43cfde.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$d.a` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L43cfe2.  return @kind void;
}
procedure `io.reactivex.ObservableSource` `a`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$d;.a:(Ljava/lang/Object;)Lio/reactivex/ObservableSource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43cf90.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromIterable`;
  #L43cf94.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableInternalHelper$d.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L43cf98.  call temp:= `apply`(v1, v3) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43cf9e.  v3:= temp @kind object;
  #L43cfa0.  v3:= (`java.lang.Iterable`) v3 @kind object;
  #L43cfa4.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L43cfaa.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$d;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43cfbc.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$d;.a:(Ljava/lang/Object;)Lio/reactivex/ObservableSource;` @kind virtual;
  #L43cfc2.  v1:= temp @kind object;
  #L43cfc4.  return v1 @kind object;
}
