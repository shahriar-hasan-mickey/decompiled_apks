record `io.reactivex.internal.operators.observable.ObservableReplay$n` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.observable.ObservableReplay$a` @kind class {
  `int` `io.reactivex.internal.operators.observable.ObservableReplay$n.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableReplay$n.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableReplay$n` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$n;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L441758.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$a;.<init>:()V` @kind direct;
  #L44175e.  v0.`io.reactivex.internal.operators.observable.ObservableReplay$n.c` @type ^`int` := v1;
  #L441762.  return @kind void;
}
procedure `void` `j`(`io.reactivex.internal.operators.observable.ObservableReplay$n` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$n;.j:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L441774.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReplay$a.b` @type ^`int`;
  #L441778.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableReplay$n.c` @type ^`int`;
  #L44177c.  if v0 <= v1 then goto L441786;
  #L441780.  call `h`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$a;.h:()V` @kind virtual;
  #L441786.  return @kind void;
}
