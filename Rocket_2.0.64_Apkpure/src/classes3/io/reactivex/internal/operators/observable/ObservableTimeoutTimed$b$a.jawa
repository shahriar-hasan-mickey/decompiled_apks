record `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$b$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$b;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4463d0.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` := v1 @kind object;
  #L4463d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4463da.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.a` @type ^`long` := v2 @kind wide;
  #L4463de.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a` v5 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$b$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4463f0.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.a` @type ^`long` @kind wide;
  #L4463f4.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` @kind object;
  #L4463f8.  v2:= v2.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b.f` @type ^`long` @kind wide;
  #L4463fc.  v4:= lcmp(v0, v2);
  #L446400.  if v4 != 0 then goto L44644c;
  #L446404.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` @kind object;
  #L446408.  v1:= 1I;
  #L44640a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b.g` @type ^`boolean` := v1 @kind boolean;
  #L44640e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` @kind object;
  #L446412.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446416.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44641c.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` @kind object;
  #L446420.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L446426.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` @kind object;
  #L44642a.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L44642e.  v1:= new `java.util.concurrent.TimeoutException`;
  #L446432.  call `<init>`(v1) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L446438.  call `onError`(v0, v1) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44643e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b` @kind object;
  #L446442.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L446446.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44644c.  return @kind void;
}
