record `io.reactivex.internal.operators.observable.ObservableMap$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicFuseableObserver` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableMap$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableMap$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMap$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43e630.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L43e636.  v0.`io.reactivex.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43e63a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableMap$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMap$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e64c.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.done` @type ^`boolean` @kind boolean;
  #L43e650.  if v0 == 0 then goto L43e656;
  #L43e654.  return @kind void;
  #L43e656.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.sourceMode` @type ^`int`;
  #L43e65a.  if v0 == 0 then goto L43e66c;
  #L43e65e.  v2:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.actual` @type ^`io.reactivex.Observer` @kind object;
  #L43e662.  v0:= 0I;
  #L43e664.  call `onNext`(v2, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L43e66a.  return @kind void;
  #L43e66c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L43e670.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43e676.  v2:= temp @kind object;
  #L43e678.  v0:= "The mapper function returned a null value." @kind object;
  #L43e67c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43e682.  v2:= temp @kind object;
  #L43e684.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.actual` @type ^`io.reactivex.Observer` @kind object;
  #L43e688.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L43e68e.  return @kind void;
  #L43e690.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43e692.  call `fail`(v1, v2) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43e698.  return @kind void;
  catch `java.lang.Throwable` @[L43e66c..L43e684] goto L43e690;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableMap$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMap$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43e5f0.  v0:= v2.`io.reactivex.internal.observers.BasicFuseableObserver.qs` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L43e5f4.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L43e5fa.  v0:= temp @kind object;
  #L43e5fc.  if v0 == 0 then goto L43e61a;
  #L43e600.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L43e604.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43e60a.  v0:= temp @kind object;
  #L43e60c.  v1:= "The mapper function returned a null value." @kind object;
  #L43e610.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43e616.  v0:= temp @kind object;
  #L43e618.  goto L43e61c;
  #L43e61a.  v0:= 0I;
  #L43e61c.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableMap$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/ObservableMap$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L43e5d4.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L43e5da.  v1:= temp;
  #L43e5dc.  return v1;
}
