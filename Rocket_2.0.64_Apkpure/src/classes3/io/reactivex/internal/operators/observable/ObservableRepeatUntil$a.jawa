record `io.reactivex.internal.operators.observable.ObservableRepeatUntil$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.Observer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.a` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.b` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.c` @AccessFlag FINAL;
  `io.reactivex.functions.BooleanSupplier` `io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.BooleanSupplier` v2 @kind object, `io.reactivex.internal.disposables.SequentialDisposable` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/BooleanSupplier;Lio/reactivex/internal/disposables/SequentialDisposable;Lio/reactivex/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4407c8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4407ce.  v0.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4407d2.  v0.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v3 @kind object;
  #L4407d6.  v0.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.c` @type ^`io.reactivex.ObservableSource` := v4 @kind object;
  #L4407da.  v0.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.d` @type ^`io.reactivex.functions.BooleanSupplier` := v2 @kind object;
  #L4407de.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L440898.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L44089e.  v0:= temp;
  #L4408a0.  if v0 != 0 then goto L4408be;
  #L4408a4.  v0:= 1I;
  #L4408a6.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.c` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4408aa.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4408b0.  v0:= -v0 @kind int;
  #L4408b2.  call temp:= `addAndGet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4408b8.  v0:= temp;
  #L4408ba.  if v0 != 0 then goto L4408a6;
  #L4408be.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4407f0.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.d` @type ^`io.reactivex.functions.BooleanSupplier` @kind object;
  #L4407f4.  call temp:= `getAsBoolean`(v0) @signature `Lio/reactivex/functions/BooleanSupplier;.getAsBoolean:()Z` @kind interface;
  #L4407fa.  v0:= temp;
  #L4407fc.  if v0 == 0 then goto L44080c;
  #L440800.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L440804.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L44080a.  goto L440812;
  #L44080c.  call `a`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil$a;.a:()V` @kind virtual;
  #L440812.  return @kind void;
  #L440814.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L440816.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44081c.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L440820.  call `onError`(v1, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L440826.  return @kind void;
  catch `java.lang.Throwable` @[L4407f0..L4407fc] goto L440814;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440844.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L440848.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44084e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440860.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L440864.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L44086a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44087c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableRepeatUntil$a.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L440880.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L440886.  return @kind void;
}
