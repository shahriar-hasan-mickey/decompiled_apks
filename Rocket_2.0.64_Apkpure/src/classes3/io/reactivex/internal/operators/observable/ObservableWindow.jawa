record `io.reactivex.internal.operators.observable.ObservableWindow` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableWindow.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableWindow.b` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableWindow.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWindow` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `long` v4 , `int` v6 ) @signature `Lio/reactivex/internal/operators/observable/ObservableWindow;.<init>:(Lio/reactivex/ObservableSource;JJI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4494e0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4494e6.  v0.`io.reactivex.internal.operators.observable.ObservableWindow.a` @type ^`long` := v2 @kind wide;
  #L4494ea.  v0.`io.reactivex.internal.operators.observable.ObservableWindow.b` @type ^`long` := v4 @kind wide;
  #L4494ee.  v0.`io.reactivex.internal.operators.observable.ObservableWindow.c` @type ^`int` := v6;
  #L4494f2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableWindow` v9 @kind this, `io.reactivex.Observer` v10 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWindow;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L449504.  v0:= v9.`io.reactivex.internal.operators.observable.ObservableWindow.a` @type ^`long` @kind wide;
  #L449508.  v2:= v9.`io.reactivex.internal.operators.observable.ObservableWindow.b` @type ^`long` @kind wide;
  #L44950c.  v4:= lcmp(v0, v2);
  #L449510.  if v4 != 0 then goto L449532;
  #L449514.  v0:= v9.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L449518.  v1:= new `io.reactivex.internal.operators.observable.ObservableWindow$a`;
  #L44951c.  v2:= v9.`io.reactivex.internal.operators.observable.ObservableWindow.a` @type ^`long` @kind wide;
  #L449520.  v4:= v9.`io.reactivex.internal.operators.observable.ObservableWindow.c` @type ^`int`;
  #L449524.  call `<init>`(v1, v10, v2, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableWindow$a;.<init>:(Lio/reactivex/Observer;JI)V` @kind direct;
  #L44952a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L449530.  goto L449556;
  #L449532.  v0:= v9.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L449536.  v8:= new `io.reactivex.internal.operators.observable.ObservableWindow$b`;
  #L44953a.  v3:= v9.`io.reactivex.internal.operators.observable.ObservableWindow.a` @type ^`long` @kind wide;
  #L44953e.  v5:= v9.`io.reactivex.internal.operators.observable.ObservableWindow.b` @type ^`long` @kind wide;
  #L449542.  v7:= v9.`io.reactivex.internal.operators.observable.ObservableWindow.c` @type ^`int`;
  #L449546.  v1:= v8 @kind object;
  #L449548.  v2:= v10 @kind object;
  #L44954a.  call `<init>`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableWindow$b;.<init>:(Lio/reactivex/Observer;JJI)V` @kind direct;
  #L449550.  call `subscribe`(v0, v8) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L449556.  return @kind void;
}
