record `io.reactivex.internal.operators.observable.ObservableInternalHelper$k` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Consumer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableInternalHelper$k.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$k` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$k;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43d290.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43d296.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$k.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L43d29a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$k` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$k;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d2c8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableInternalHelper$k.a` @type ^`io.reactivex.Observer` @kind object;
  #L43d2cc.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43d2d2.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$k;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d2ac.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L43d2b0.  call `a`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$k;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43d2b6.  return @kind void;
}
