record `io.reactivex.internal.operators.observable.ObservableTakeLastTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed.c` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.Scheduler` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44548c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L445492.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.a` @type ^`long` := v2 @kind wide;
  #L445496.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.b` @type ^`long` := v4 @kind wide;
  #L44549a.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.c` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L44549e.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.d` @type ^`io.reactivex.Scheduler` := v7 @kind object;
  #L4454a2.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.e` @type ^`int` := v8;
  #L4454a6.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.f` @type ^`boolean` := v9 @kind boolean;
  #L4454aa.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed` v12 @kind this, `io.reactivex.Observer` v13 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4454bc.  v0:= v12.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4454c0.  v11:= new `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a`;
  #L4454c4.  v3:= v12.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.a` @type ^`long` @kind wide;
  #L4454c8.  v5:= v12.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.b` @type ^`long` @kind wide;
  #L4454cc.  v7:= v12.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4454d0.  v8:= v12.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L4454d4.  v9:= v12.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.e` @type ^`int`;
  #L4454d8.  v10:= v12.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed.f` @type ^`boolean` @kind boolean;
  #L4454dc.  v1:= v11 @kind object;
  #L4454de.  v2:= v13 @kind object;
  #L4454e0.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.<init>:(Lio/reactivex/Observer;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L4454e6.  call `subscribe`(v0, v11) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4454ec.  return @kind void;
}
