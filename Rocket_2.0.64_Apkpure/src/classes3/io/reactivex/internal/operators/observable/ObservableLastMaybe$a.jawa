record `io.reactivex.internal.operators.observable.ObservableLastMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43e260.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43e266.  v0.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L43e26a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e27c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43e280.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43e286.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43e28a.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L43e28e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43e23c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43e240.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43e244.  if v0 != v1 then goto L43e24c;
  #L43e248.  v0:= 1I;
  #L43e24a.  goto L43e24e;
  #L43e24c.  v0:= 0I;
  #L43e24e.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43e2a0.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43e2a4.  v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L43e2a8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` @kind object;
  #L43e2ac.  if v0 == 0 then goto L43e2c2;
  #L43e2b0.  v1:= 0I;
  #L43e2b2.  v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L43e2b6.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L43e2ba.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43e2c0.  goto L43e2cc;
  #L43e2c2.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L43e2c6.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L43e2cc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e2e0.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43e2e4.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L43e2e8.  v0:= 0I;
  #L43e2ea.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L43e2ee.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L43e2f2.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43e2f8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L43e30c.  v0.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L43e310.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e324.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43e328.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43e32e.  v0:= temp;
  #L43e330.  if v0 == 0 then goto L43e342;
  #L43e334.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L43e338.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L43e33c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43e342.  return @kind void;
}
