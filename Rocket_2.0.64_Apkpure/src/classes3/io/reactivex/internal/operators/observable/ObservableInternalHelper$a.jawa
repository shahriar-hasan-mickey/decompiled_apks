record `io.reactivex.internal.operators.observable.ObservableInternalHelper$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `io.reactivex.Observable` `io.reactivex.internal.operators.observable.ObservableInternalHelper$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableInternalHelper$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$a` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$a;.<init>:(Lio/reactivex/Observable;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43cdec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43cdf2.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$a.a` @type ^`io.reactivex.Observable` := v1 @kind object;
  #L43cdf6.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$a.b` @type ^`int` := v2;
  #L43cdfa.  return @kind void;
}
procedure `io.reactivex.observables.ConnectableObservable` `a`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$a;.a:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43cdac.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableInternalHelper$a.a` @type ^`io.reactivex.Observable` @kind object;
  #L43cdb0.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableInternalHelper$a.b` @type ^`int`;
  #L43cdb4.  call temp:= `replay`(v0, v1) @signature `Lio/reactivex/Observable;.replay:(I)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L43cdba.  v0:= temp @kind object;
  #L43cdbc.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L43cdd0.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$a;.a:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L43cdd6.  v0:= temp @kind object;
  #L43cdd8.  return v0 @kind object;
}
