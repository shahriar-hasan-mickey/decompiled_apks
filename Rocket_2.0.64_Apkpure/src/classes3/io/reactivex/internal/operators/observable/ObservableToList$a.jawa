record `io.reactivex.internal.operators.observable.ObservableToList$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `java.util.Collection` `io.reactivex.internal.operators.observable.ObservableToList$a.a` @AccessFlag ;
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableToList$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableToList$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableToList$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$a;.<init>:(Lio/reactivex/Observer;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L446b3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L446b42.  v0.`io.reactivex.internal.operators.observable.ObservableToList$a.b` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L446b46.  v0.`io.reactivex.internal.operators.observable.ObservableToList$a.a` @type ^`java.util.Collection` := v2 @kind object;
  #L446b4a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableToList$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446b5c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableToList$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446b60.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L446b66.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableToList$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446b1c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableToList$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446b20.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L446b26.  v0:= temp;
  #L446b28.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableToList$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L446b78.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableToList$a.a` @type ^`java.util.Collection` @kind object;
  #L446b7c.  v1:= 0I;
  #L446b7e.  v2.`io.reactivex.internal.operators.observable.ObservableToList$a.a` @type ^`java.util.Collection` := v1 @kind object;
  #L446b82.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableToList$a.b` @type ^`io.reactivex.Observer` @kind object;
  #L446b86.  call `onNext`(v1, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L446b8c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableToList$a.b` @type ^`io.reactivex.Observer` @kind object;
  #L446b90.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L446b96.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableToList$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446ba8.  v0:= 0I;
  #L446baa.  v1.`io.reactivex.internal.operators.observable.ObservableToList$a.a` @type ^`java.util.Collection` := v0 @kind object;
  #L446bae.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableToList$a.b` @type ^`io.reactivex.Observer` @kind object;
  #L446bb2.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L446bb8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableToList$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446bcc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableToList$a.a` @type ^`java.util.Collection` @kind object;
  #L446bd0.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L446bd6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableToList$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446be8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableToList$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446bec.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L446bf2.  v0:= temp;
  #L446bf4.  if v0 == 0 then goto L446c06;
  #L446bf8.  v1.`io.reactivex.internal.operators.observable.ObservableToList$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L446bfc.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableToList$a.b` @type ^`io.reactivex.Observer` @kind object;
  #L446c00.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L446c06.  return @kind void;
}
