record `io.reactivex.internal.operators.observable.ObservableZipIterable$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableZipIterable$a.a` @AccessFlag FINAL;
  `java.util.Iterator` `io.reactivex.internal.operators.observable.ObservableZipIterable$a.b` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.observable.ObservableZipIterable$a.c` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableZipIterable$a.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableZipIterable$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableZipIterable$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `java.util.Iterator` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.<init>:(Lio/reactivex/Observer;Ljava/util/Iterator;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44a16c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44a172.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L44a176.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L44a17a.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.c` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L44a17e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableZipIterable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L44a1ac.  v0:= 1I;
  #L44a1ae.  v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` := v0 @kind boolean;
  #L44a1b2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44a1b6.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44a1bc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L44a1c0.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44a1c6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableZipIterable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a190.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44a194.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44a19a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableZipIterable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a14c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44a150.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L44a156.  v0:= temp;
  #L44a158.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableZipIterable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a1d8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` @kind boolean;
  #L44a1dc.  if v0 == 0 then goto L44a1e2;
  #L44a1e0.  return @kind void;
  #L44a1e2.  v0:= 1I;
  #L44a1e4.  v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` := v0 @kind boolean;
  #L44a1e8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L44a1ec.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L44a1f2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableZipIterable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a204.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` @kind boolean;
  #L44a208.  if v0 == 0 then goto L44a214;
  #L44a20c.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44a212.  return @kind void;
  #L44a214.  v0:= 1I;
  #L44a216.  v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` := v0 @kind boolean;
  #L44a21a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L44a21e.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44a224.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableZipIterable$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44a238.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` @kind boolean;
  #L44a23c.  if v0 == 0 then goto L44a242;
  #L44a240.  return @kind void;
  #L44a242.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.b` @type ^`java.util.Iterator` @kind object;
  #L44a246.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44a24c.  v0:= temp @kind object;
  #L44a24e.  v1:= "The iterator returned a null value" @kind object;
  #L44a252.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44a258.  v0:= temp @kind object;
  #L44a25a.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.c` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L44a25e.  call temp:= `apply`(v1, v3, v0) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44a264.  v3:= temp @kind object;
  #L44a266.  v0:= "The zipper function returned a null value" @kind object;
  #L44a26a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44a270.  v3:= temp @kind object;
  #L44a272.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L44a276.  call `onNext`(v0, v3) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L44a27c.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.b` @type ^`java.util.Iterator` @kind object;
  #L44a280.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44a286.  v3:= temp;
  #L44a288.  if v3 != 0 then goto L44a2a6;
  #L44a28c.  v3:= 1I;
  #L44a28e.  v2.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` := v3 @kind boolean;
  #L44a292.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44a296.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44a29c.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L44a2a0.  call `onComplete`(v3) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L44a2a6.  return @kind void;
  #L44a2a8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44a2aa.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44a2b0.  call `a`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L44a2b6.  return @kind void;
  #L44a2b8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44a2ba.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44a2c0.  call `a`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L44a2c6.  return @kind void;
  #L44a2c8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44a2ca.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44a2d0.  call `a`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L44a2d6.  return @kind void;
  catch `java.lang.Throwable` @[L44a242..L44a25a] goto L44a2c8;
  catch `java.lang.Throwable` @[L44a25a..L44a272] goto L44a2b8;
  catch `java.lang.Throwable` @[L44a27c..L44a288] goto L44a2a8;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableZipIterable$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a308.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44a30c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L44a312.  v0:= temp;
  #L44a314.  if v0 == 0 then goto L44a326;
  #L44a318.  v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L44a31c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L44a320.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L44a326.  return @kind void;
}
