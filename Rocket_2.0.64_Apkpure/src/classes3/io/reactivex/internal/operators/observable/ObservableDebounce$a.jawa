record `io.reactivex.internal.operators.observable.ObservableDebounce$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDebounce$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableDebounce$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDebounce$a.c` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableDebounce$a.d` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounce$a.e` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDebounce$a.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDebounce$a` v1 @kind this, `io.reactivex.Observer` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L437390.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L437396.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L43739a.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4373a0.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4373a4.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.Observer` := v2 @kind object;
  #L4373a8.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.b` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L4373ac.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableDebounce$a` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.a:(JLjava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4373e8.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDebounce$a.e` @type ^`long` @kind wide;
  #L4373ec.  v2:= lcmp(v4, v0);
  #L4373f0.  if v2 != 0 then goto L4373fe;
  #L4373f4.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4373f8.  call `onNext`(v4, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4373fe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDebounce$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4373c0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4373c4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4373ca.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4373ce.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4373d4.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDebounce$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437370.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L437374.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L43737a.  v0:= temp;
  #L43737c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDebounce$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L437410.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounce$a.f` @type ^`boolean` @kind boolean;
  #L437414.  if v0 == 0 then goto L43741a;
  #L437418.  return @kind void;
  #L43741a.  v0:= 1I;
  #L43741c.  v2.`io.reactivex.internal.operators.observable.ObservableDebounce$a.f` @type ^`boolean` := v0 @kind boolean;
  #L437420.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L437424.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L43742a.  v0:= temp @kind object;
  #L43742c.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L437430.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L437434.  if v0 == v1 then goto L437456;
  #L437438.  v0:= (`io.reactivex.internal.operators.observable.ObservableDebounce$a$a`) v0 @kind object;
  #L43743c.  call `a`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.a:()V` @kind virtual;
  #L437442.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L437446.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L43744c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L437450.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L437456.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDebounce$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437468.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L43746c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L437472.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L437476.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43747c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDebounce$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L437490.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$a.f` @type ^`boolean` @kind boolean;
  #L437494.  if v0 == 0 then goto L43749a;
  #L437498.  return @kind void;
  #L43749a.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$a.e` @type ^`long` @kind wide;
  #L43749e.  v2:= 1L;
  #L4374a2.  v0:= v0 + v2 @kind long;
  #L4374a4.  v5.`io.reactivex.internal.operators.observable.ObservableDebounce$a.e` @type ^`long` := v0 @kind wide;
  #L4374a8.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4374ac.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4374b2.  v2:= temp @kind object;
  #L4374b4.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L4374b8.  if v2 == 0 then goto L4374c2;
  #L4374bc.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4374c2.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L4374c6.  call temp:= `apply`(v3, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4374cc.  v3:= temp @kind object;
  #L4374ce.  v4:= "The ObservableSource supplied is null" @kind object;
  #L4374d2.  call temp:= `requireNonNull`(v3, v4) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4374d8.  v3:= temp @kind object;
  #L4374da.  v3:= (`io.reactivex.ObservableSource`) v3 @kind object;
  #L4374de.  v4:= new `io.reactivex.internal.operators.observable.ObservableDebounce$a$a`;
  #L4374e2.  call `<init>`(v4, v5, v0, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDebounce$a;JLjava/lang/Object;)V` @kind direct;
  #L4374e8.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4374ec.  call temp:= `compareAndSet`(v6, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4374f2.  v6:= temp;
  #L4374f4.  if v6 == 0 then goto L4374fe;
  #L4374f8.  call `subscribe`(v3, v4) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4374fe.  return @kind void;
  #L437500.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L437502.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L437508.  call `dispose`(v5) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.dispose:()V` @kind virtual;
  #L43750e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L437512.  call `onError`(v0, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L437518.  return @kind void;
  catch `java.lang.Throwable` @[L4374c2..L4374de] goto L437500;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDebounce$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437538.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43753c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L437542.  v0:= temp;
  #L437544.  if v0 == 0 then goto L437556;
  #L437548.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L43754c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L437550.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L437556.  return @kind void;
}
