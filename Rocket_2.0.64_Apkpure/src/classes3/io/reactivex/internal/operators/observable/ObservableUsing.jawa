record `io.reactivex.internal.operators.observable.ObservableUsing` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableUsing.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableUsing.b` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.observable.ObservableUsing.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableUsing.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableUsing` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44724c.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L447252.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L447256.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L44725a.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.c` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L44725e.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.d` @type ^`boolean` := v4 @kind boolean;
  #L447262.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableUsing` v5 @kind this, `io.reactivex.Observer` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L447274.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L447278.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L44727e.  v0:= temp @kind object;
  #L447280.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L447284.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44728a.  v1:= temp @kind object;
  #L44728c.  v1:= (`io.reactivex.ObservableSource`) v1 @kind object;
  #L447290.  v2:= new `io.reactivex.internal.operators.observable.ObservableUsing$a`;
  #L447294.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L447298.  v4:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.d` @type ^`boolean` @kind boolean;
  #L44729c.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing$a;.<init>:(Lio/reactivex/Observer;Ljava/lang/Object;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L4472a2.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4472a8.  return @kind void;
  #L4472aa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4472ac.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4472b2.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L4472b6.  call `accept`(v2, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4472bc.  call `error`(v1, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L4472c2.  return @kind void;
  #L4472c4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4472c6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4472cc.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L4472d0.  v3:= 2I;
  #L4472d2.  v3:= new `java.lang.Throwable`[v3];
  #L4472d6.  v4:= 0I;
  #L4472d8.  v3[v4]:= v1 @kind object;
  #L4472dc.  v1:= 1I;
  #L4472de.  v3[v1]:= v0 @kind object;
  #L4472e2.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4472e8.  call `error`(v2, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L4472ee.  return @kind void;
  #L4472f0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4472f2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4472f8.  call `error`(v0, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L4472fe.  return @kind void;
  catch `java.lang.Throwable` @[L447274..L447280] goto L4472f0;
  catch `java.lang.Throwable` @[L447280..L447290] goto L4472aa;
  catch `java.lang.Throwable` @[L4472b2..L4472bc] goto L4472c4;
}
