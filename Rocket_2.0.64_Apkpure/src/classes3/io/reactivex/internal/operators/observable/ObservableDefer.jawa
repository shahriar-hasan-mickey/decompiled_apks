record `io.reactivex.internal.operators.observable.ObservableDefer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableDefer.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDefer` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4378d8.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L4378de.  v0.`io.reactivex.internal.operators.observable.ObservableDefer.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L4378e2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableDefer` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDefer;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4378f4.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDefer.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L4378f8.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4378fe.  v0:= temp @kind object;
  #L437900.  v1:= "null ObservableSource supplied" @kind object;
  #L437904.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43790a.  v0:= temp @kind object;
  #L43790c.  v0:= (`io.reactivex.ObservableSource`) v0 @kind object;
  #L437910.  call `subscribe`(v0, v3) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L437916.  return @kind void;
  #L437918.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43791a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L437920.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L437926.  return @kind void;
  catch `java.lang.Throwable` @[L4378f4..L437910] goto L437918;
}
