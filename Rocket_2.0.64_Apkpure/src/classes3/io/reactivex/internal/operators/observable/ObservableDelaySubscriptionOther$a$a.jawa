record `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a` `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther$a$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L437ba0.  v0.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a` := v1 @kind object;
  #L437ba4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L437baa.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437bbc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a` @kind object;
  #L437bc0.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a.b` @type ^`io.reactivex.Observer` @kind object;
  #L437bc4.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L437bca.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther$a$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437bdc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a` @kind object;
  #L437be0.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a.b` @type ^`io.reactivex.Observer` @kind object;
  #L437be4.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L437bea.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther$a$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437bfc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a` @kind object;
  #L437c00.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a.b` @type ^`io.reactivex.Observer` @kind object;
  #L437c04.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L437c0a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther$a$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437c1c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a` @kind object;
  #L437c20.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$a.a` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L437c24.  call temp:= `update`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.update:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L437c2a.  return @kind void;
}
