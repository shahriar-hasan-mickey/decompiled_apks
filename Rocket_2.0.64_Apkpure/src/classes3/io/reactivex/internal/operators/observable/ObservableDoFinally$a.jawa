record `io.reactivex.internal.operators.observable.ObservableDoFinally$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicIntQueueDisposable` @kind class, `io.reactivex.Observer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @AccessFlag ;
  `io.reactivex.internal.fuseable.QueueDisposable` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableDoFinally$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L438638.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L43863e.  v0.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L438642.  v0.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.b` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L438646.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L43873c.  v0:= 0I;
  #L43873e.  v1:= 1I;
  #L438740.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L438746.  v0:= temp;
  #L438748.  if v0 == 0 then goto L438766;
  #L43874c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L438750.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L438756.  goto L438766;
  #L438758.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43875a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L438760.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L438766.  return @kind void;
  catch `java.lang.Throwable` @[L43874c..L438756] goto L438758;
}
procedure `void` `clear`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438658.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L43865c.  call `clear`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L438662.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438674.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L438678.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43867e.  call `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @kind virtual;
  #L438684.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438588.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43858c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L438592.  v0:= temp;
  #L438594.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4385a8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L4385ac.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.isEmpty:()Z` @kind interface;
  #L4385b2.  v0:= temp;
  #L4385b4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438698.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L43869c.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4386a2.  call `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @kind virtual;
  #L4386a8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4386bc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4386c0.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4386c6.  call `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @kind virtual;
  #L4386cc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4386e0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4386e4.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4386ea.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4386fc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L438700.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L438706.  v0:= temp;
  #L438708.  if v0 == 0 then goto L43872a;
  #L43870c.  v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L438710.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind boolean;
  #L438714.  if v0 == 0 then goto L438720;
  #L438718.  v2:= (`io.reactivex.internal.fuseable.QueueDisposable`) v2 @kind object;
  #L43871c.  v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` := v2 @kind object;
  #L438720.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438724.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43872a.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L438608.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L43860c.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L438612.  v0:= temp @kind object;
  #L438614.  if v0 != 0 then goto L438626;
  #L438618.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.e` @type ^`boolean` @kind boolean;
  #L43861c.  if v1 == 0 then goto L438626;
  #L438620.  call `a`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @kind virtual;
  #L438626.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4385c8.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L4385cc.  v1:= 0I;
  #L4385ce.  if v0 == 0 then goto L4385f4;
  #L4385d2.  v2:= v4 ^& 4;
  #L4385d6.  if v2 != 0 then goto L4385f4;
  #L4385da.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L4385e0.  v4:= temp;
  #L4385e2.  if v4 == 0 then goto L4385f2;
  #L4385e6.  v0:= 1I;
  #L4385e8.  if v4 != v0 then goto L4385ee;
  #L4385ec.  v1:= 1I;
  #L4385ee.  v3.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.e` @type ^`boolean` := v1 @kind boolean;
  #L4385f2.  return v4;
  #L4385f4.  return v1;
}
