record `io.reactivex.internal.operators.observable.ObservableZipIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.Observable` `io.reactivex.internal.operators.observable.ObservableZipIterable.a` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableZipIterable.b` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.observable.ObservableZipIterable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableZipIterable` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable;.<init>:(Lio/reactivex/Observable;Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44a338.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L44a33e.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable.a` @type ^`io.reactivex.Observable` := v1 @kind object;
  #L44a342.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L44a346.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable.c` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L44a34a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableZipIterable` v4 @kind this, `io.reactivex.Observer` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44a35c.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableZipIterable.b` @type ^`java.lang.Iterable` @kind object;
  #L44a360.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44a366.  v0:= temp @kind object;
  #L44a368.  v1:= "The iterator returned by other is null" @kind object;
  #L44a36c.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44a372.  v0:= temp @kind object;
  #L44a374.  v0:= (`java.util.Iterator`) v0 @kind object;
  #L44a378.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44a37e.  v1:= temp;
  #L44a380.  if v1 != 0 then goto L44a38c;
  #L44a384.  call `complete`(v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L44a38a.  return @kind void;
  #L44a38c.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableZipIterable.a` @type ^`io.reactivex.Observable` @kind object;
  #L44a390.  v2:= new `io.reactivex.internal.operators.observable.ObservableZipIterable$a`;
  #L44a394.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableZipIterable.c` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L44a398.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.<init>:(Lio/reactivex/Observer;Ljava/util/Iterator;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L44a39e.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L44a3a4.  return @kind void;
  #L44a3a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44a3a8.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44a3ae.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L44a3b4.  return @kind void;
  #L44a3b6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44a3b8.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44a3be.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L44a3c4.  return @kind void;
  catch `java.lang.Throwable` @[L44a35c..L44a378] goto L44a3b6;
  catch `java.lang.Throwable` @[L44a378..L44a380] goto L44a3a6;
}
