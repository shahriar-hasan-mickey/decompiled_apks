record `io.reactivex.internal.operators.observable.ObservableSkipLastTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.b` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSkipLastTimed` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4440e8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4440ee.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.a` @type ^`long` := v2 @kind wide;
  #L4440f2.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.b` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4440f6.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.c` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L4440fa.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.d` @type ^`int` := v6;
  #L4440fe.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.e` @type ^`boolean` := v7 @kind boolean;
  #L444102.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableSkipLastTimed` v10 @kind this, `io.reactivex.Observer` v11 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L444114.  v0:= v10.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L444118.  v9:= new `io.reactivex.internal.operators.observable.ObservableSkipLastTimed$a`;
  #L44411c.  v3:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.a` @type ^`long` @kind wide;
  #L444120.  v5:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L444124.  v6:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L444128.  v7:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.d` @type ^`int`;
  #L44412c.  v8:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.e` @type ^`boolean` @kind boolean;
  #L444130.  v1:= v9 @kind object;
  #L444132.  v2:= v11 @kind object;
  #L444134.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed$a;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L44413a.  call `subscribe`(v0, v9) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L444140.  return @kind void;
}
