record `io.reactivex.internal.operators.observable.ObservableReduceWithSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableReduceWithSingle.a` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableReduceWithSingle.b` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.observable.ObservableReduceWithSingle.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableReduceWithSingle` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceWithSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44019c.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L4401a2.  v0.`io.reactivex.internal.operators.observable.ObservableReduceWithSingle.a` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L4401a6.  v0.`io.reactivex.internal.operators.observable.ObservableReduceWithSingle.b` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L4401aa.  v0.`io.reactivex.internal.operators.observable.ObservableReduceWithSingle.c` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L4401ae.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableReduceWithSingle` v4 @kind this, `io.reactivex.SingleObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceWithSingle;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4401c0.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableReduceWithSingle.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L4401c4.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4401ca.  v0:= temp @kind object;
  #L4401cc.  v1:= "The seedSupplier returned a null value" @kind object;
  #L4401d0.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4401d6.  v0:= temp @kind object;
  #L4401d8.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableReduceWithSingle.a` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4401dc.  v2:= new `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a`;
  #L4401e0.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableReduceWithSingle.c` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L4401e4.  call `<init>`(v2, v5, v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/BiFunction;Ljava/lang/Object;)V` @kind direct;
  #L4401ea.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4401f0.  return @kind void;
  #L4401f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4401f4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4401fa.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L440200.  return @kind void;
  catch `java.lang.Throwable` @[L4401c0..L4401d8] goto L4401f2;
}
