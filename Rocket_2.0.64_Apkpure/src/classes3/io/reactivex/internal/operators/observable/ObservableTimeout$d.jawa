record `io.reactivex.internal.operators.observable.ObservableTimeout$d` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.internal.operators.observable.ObservableTimeout$a` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTimeout$d.a` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableTimeout$d.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableTimeout$d.c` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableTimeout$d.d` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.ObserverFullArbiter` `io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableTimeout$d.g` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.ObservableTimeout$d.h` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableTimeout$d.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.<init>:(Lio/reactivex/Observer;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L446130.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L446136.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$d.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L44613a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$d.b` @type ^`io.reactivex.ObservableSource` := v2 @kind object;
  #L44613e.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$d.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L446142.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$d.d` @type ^`io.reactivex.ObservableSource` := v4 @kind object;
  #L446146.  v2:= new `io.reactivex.internal.disposables.ObserverFullArbiter`;
  #L44614a.  v3:= 8I;
  #L44614e.  call `<init>`(v2, v1, v0, v3) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.<init>:(Lio/reactivex/Observer;Lio/reactivex/disposables/Disposable;I)V` @kind direct;
  #L446154.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` := v2 @kind object;
  #L446158.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446194.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446198.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44619e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$d.a` @type ^`io.reactivex.Observer` @kind object;
  #L4461a2.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4461a8.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L446354.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$d.h` @type ^`long` @kind wide;
  #L446358.  v2:= lcmp(v4, v0);
  #L44635c.  if v2 != 0 then goto L44637e;
  #L446360.  call `dispose`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.dispose:()V` @kind virtual;
  #L446366.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$d.d` @type ^`io.reactivex.ObservableSource` @kind object;
  #L44636a.  v5:= new `io.reactivex.internal.observers.FullArbiterObserver`;
  #L44636e.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L446372.  call `<init>`(v5, v0) @signature `Lio/reactivex/internal/observers/FullArbiterObserver;.<init>:(Lio/reactivex/internal/disposables/ObserverFullArbiter;)V` @kind direct;
  #L446378.  call `subscribe`(v4, v5) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L44637e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44616c.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L446172.  v0:= temp;
  #L446174.  if v0 == 0 then goto L446182;
  #L446178.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44617c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L446182.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446110.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446114.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L44611a.  v0:= temp;
  #L44611c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4461bc.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$d.g` @type ^`boolean` @kind boolean;
  #L4461c0.  if v0 == 0 then goto L4461c6;
  #L4461c4.  return @kind void;
  #L4461c6.  v0:= 1I;
  #L4461c8.  v2.`io.reactivex.internal.operators.observable.ObservableTimeout$d.g` @type ^`boolean` := v0 @kind boolean;
  #L4461cc.  call `dispose`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.dispose:()V` @kind virtual;
  #L4461d2.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L4461d6.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4461da.  call `onComplete`(v0, v1) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.onComplete:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L4461e0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4461f4.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$d.g` @type ^`boolean` @kind boolean;
  #L4461f8.  if v0 == 0 then goto L446204;
  #L4461fc.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L446202.  return @kind void;
  #L446204.  v0:= 1I;
  #L446206.  v2.`io.reactivex.internal.operators.observable.ObservableTimeout$d.g` @type ^`boolean` := v0 @kind boolean;
  #L44620a.  call `dispose`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.dispose:()V` @kind virtual;
  #L446210.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L446214.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446218.  call `onError`(v0, v3, v1) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.onError:(Ljava/lang/Throwable;Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L44621e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L446230.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.g` @type ^`boolean` @kind boolean;
  #L446234.  if v0 == 0 then goto L44623a;
  #L446238.  return @kind void;
  #L44623a.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.h` @type ^`long` @kind wide;
  #L44623e.  v2:= 1L;
  #L446242.  v0:= v0 + v2 @kind long;
  #L446244.  v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.h` @type ^`long` := v0 @kind wide;
  #L446248.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L44624c.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446250.  call temp:= `onNext`(v2, v5, v3) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.onNext:(Ljava/lang/Object;Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L446256.  v2:= temp;
  #L446258.  if v2 != 0 then goto L44625e;
  #L44625c.  return @kind void;
  #L44625e.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L446264.  v2:= temp @kind object;
  #L446266.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L44626a.  if v2 == 0 then goto L446274;
  #L44626e.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L446274.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L446278.  call temp:= `apply`(v3, v5) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44627e.  v5:= temp @kind object;
  #L446280.  v3:= "The ObservableSource returned is null" @kind object;
  #L446284.  call temp:= `requireNonNull`(v5, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44628a.  v5:= temp @kind object;
  #L44628c.  v5:= (`io.reactivex.ObservableSource`) v5 @kind object;
  #L446290.  v3:= new `io.reactivex.internal.operators.observable.ObservableTimeout$b`;
  #L446294.  call `<init>`(v3, v4, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.<init>:(Lio/reactivex/internal/operators/observable/ObservableTimeout$a;J)V` @kind direct;
  #L44629a.  call temp:= `compareAndSet`(v4, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4462a0.  v0:= temp;
  #L4462a2.  if v0 == 0 then goto L4462ac;
  #L4462a6.  call `subscribe`(v5, v3) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4462ac.  return @kind void;
  #L4462ae.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4462b0.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4462b6.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.a` @type ^`io.reactivex.Observer` @kind object;
  #L4462ba.  call `onError`(v0, v5) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4462c0.  return @kind void;
  catch `java.lang.Throwable` @[L446274..L446290] goto L4462ae;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTimeout$d` v4 @kind this, `io.reactivex.disposables.Disposable` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$d;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4462e0.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4462e4.  call temp:= `validate`(v0, v5) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4462ea.  v0:= temp;
  #L4462ec.  if v0 == 0 then goto L446342;
  #L4462f0.  v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.f` @type ^`io.reactivex.disposables.Disposable` := v5 @kind object;
  #L4462f4.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L4462f8.  call temp:= `setDisposable`(v0, v5) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.setDisposable:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L4462fe.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.a` @type ^`io.reactivex.Observer` @kind object;
  #L446302.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.b` @type ^`io.reactivex.ObservableSource` @kind object;
  #L446306.  if v0 == 0 then goto L446338;
  #L44630a.  v1:= new `io.reactivex.internal.operators.observable.ObservableTimeout$b`;
  #L44630e.  v2:= 0L;
  #L446312.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.<init>:(Lio/reactivex/internal/operators/observable/ObservableTimeout$a;J)V` @kind direct;
  #L446318.  v2:= 0I;
  #L44631a.  call temp:= `compareAndSet`(v4, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L446320.  v2:= temp;
  #L446322.  if v2 == 0 then goto L446342;
  #L446326.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L44632a.  call `onSubscribe`(v5, v2) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L446330.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L446336.  goto L446342;
  #L446338.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$d.e` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L44633c.  call `onSubscribe`(v5, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L446342.  return @kind void;
}
