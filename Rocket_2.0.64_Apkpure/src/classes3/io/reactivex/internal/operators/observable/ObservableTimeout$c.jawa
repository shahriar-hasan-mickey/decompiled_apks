record `io.reactivex.internal.operators.observable.ObservableTimeout$c` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.internal.operators.observable.ObservableTimeout$a` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableTimeout$c.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableTimeout$c.c` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableTimeout$c.d` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.ObservableTimeout$c.e` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableTimeout$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.<init>:(Lio/reactivex/Observer;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L445f18.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L445f1e.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L445f22.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$c.b` @type ^`io.reactivex.ObservableSource` := v2 @kind object;
  #L445f26.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L445f2a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445f64.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$c.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L445f68.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L445f6e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L445f72.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L445f78.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4460d8.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$c.e` @type ^`long` @kind wide;
  #L4460dc.  v2:= lcmp(v4, v0);
  #L4460e0.  if v2 != 0 then goto L4460fe;
  #L4460e4.  call `dispose`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.dispose:()V` @kind virtual;
  #L4460ea.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L4460ee.  v5:= new `java.util.concurrent.TimeoutException`;
  #L4460f2.  call `<init>`(v5) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L4460f8.  call `onError`(v4, v5) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4460fe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445f3c.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L445f42.  v0:= temp;
  #L445f44.  if v0 == 0 then goto L445f52;
  #L445f48.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$c.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L445f4c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L445f52.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445ef8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$c.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L445efc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L445f02.  v0:= temp;
  #L445f04.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445f8c.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L445f92.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L445f96.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L445f9c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445fb0.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L445fb6.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L445fba.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L445fc0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L445fd4.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.e` @type ^`long` @kind wide;
  #L445fd8.  v2:= 1L;
  #L445fdc.  v0:= v0 + v2 @kind long;
  #L445fde.  v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.e` @type ^`long` := v0 @kind wide;
  #L445fe2.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L445fe6.  call `onNext`(v2, v5) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L445fec.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L445ff2.  v2:= temp @kind object;
  #L445ff4.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L445ff8.  if v2 == 0 then goto L446002;
  #L445ffc.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L446002.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L446006.  call temp:= `apply`(v3, v5) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44600c.  v5:= temp @kind object;
  #L44600e.  v3:= "The ObservableSource returned is null" @kind object;
  #L446012.  call temp:= `requireNonNull`(v5, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L446018.  v5:= temp @kind object;
  #L44601a.  v5:= (`io.reactivex.ObservableSource`) v5 @kind object;
  #L44601e.  v3:= new `io.reactivex.internal.operators.observable.ObservableTimeout$b`;
  #L446022.  call `<init>`(v3, v4, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.<init>:(Lio/reactivex/internal/operators/observable/ObservableTimeout$a;J)V` @kind direct;
  #L446028.  call temp:= `compareAndSet`(v4, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L44602e.  v0:= temp;
  #L446030.  if v0 == 0 then goto L44603a;
  #L446034.  call `subscribe`(v5, v3) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L44603a.  return @kind void;
  #L44603c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44603e.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L446044.  call `dispose`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.dispose:()V` @kind virtual;
  #L44604a.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L44604e.  call `onError`(v0, v5) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L446054.  return @kind void;
  catch `java.lang.Throwable` @[L446002..L44601e] goto L44603c;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTimeout$c` v4 @kind this, `io.reactivex.disposables.Disposable` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$c;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L446074.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446078.  call temp:= `validate`(v0, v5) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L44607e.  v0:= temp;
  #L446080.  if v0 == 0 then goto L4460c4;
  #L446084.  v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.d` @type ^`io.reactivex.disposables.Disposable` := v5 @kind object;
  #L446088.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L44608c.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeout$c.b` @type ^`io.reactivex.ObservableSource` @kind object;
  #L446090.  if v0 == 0 then goto L4460be;
  #L446094.  v1:= new `io.reactivex.internal.operators.observable.ObservableTimeout$b`;
  #L446098.  v2:= 0L;
  #L44609c.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.<init>:(Lio/reactivex/internal/operators/observable/ObservableTimeout$a;J)V` @kind direct;
  #L4460a2.  v2:= 0I;
  #L4460a4.  call temp:= `compareAndSet`(v4, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4460aa.  v2:= temp;
  #L4460ac.  if v2 == 0 then goto L4460c4;
  #L4460b0.  call `onSubscribe`(v5, v4) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4460b6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4460bc.  goto L4460c4;
  #L4460be.  call `onSubscribe`(v5, v4) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4460c4.  return @kind void;
}
