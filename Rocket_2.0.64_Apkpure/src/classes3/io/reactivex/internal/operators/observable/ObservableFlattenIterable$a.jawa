record `io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43af2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43af32.  v0.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L43af36.  v0.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43af3a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43af4c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43af50.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43af56.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43af5a.  v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L43af5e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43af0c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43af10.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L43af16.  v0:= temp;
  #L43af18.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43af70.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43af74.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43af78.  if v0 != v1 then goto L43af7e;
  #L43af7c.  return @kind void;
  #L43af7e.  v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L43af82.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L43af86.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L43af8c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43afa0.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43afa4.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43afa8.  if v0 != v1 then goto L43afb4;
  #L43afac.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L43afb2.  return @kind void;
  #L43afb4.  v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L43afb8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L43afbc.  call `onError`(v0, v3) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43afc2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43afd4.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43afd8.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43afdc.  if v0 != v1 then goto L43afe2;
  #L43afe0.  return @kind void;
  #L43afe2.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L43afe6.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43afec.  v4:= temp @kind object;
  #L43afee.  v4:= (`java.lang.Iterable`) v4 @kind object;
  #L43aff2.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43aff8.  v4:= temp @kind object;
  #L43affa.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L43affe.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43b004.  v1:= temp;
  #L43b006.  if v1 == 0 then goto L43b03e;
  #L43b00a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43b010.  v1:= temp @kind object;
  #L43b012.  v2:= "The iterator returned a null value" @kind object;
  #L43b016.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43b01c.  v1:= temp @kind object;
  #L43b01e.  call `onNext`(v0, v1) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L43b024.  goto L43affe;
  #L43b026.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43b028.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43b02e.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b032.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43b038.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43b03e.  return @kind void;
  #L43b040.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43b042.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43b048.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b04c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43b052.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43b058.  return @kind void;
  #L43b05a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43b05c.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43b062.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b066.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43b06c.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43b072.  return @kind void;
  catch `java.lang.Throwable` @[L43afe2..L43affa] goto L43b05a;
  catch `java.lang.Throwable` @[L43affe..L43b006] goto L43b040;
  catch `java.lang.Throwable` @[L43b00a..L43b01e] goto L43b026;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b0a4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b0a8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43b0ae.  v0:= temp;
  #L43b0b0.  if v0 == 0 then goto L43b0c2;
  #L43b0b4.  v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L43b0b8.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L43b0bc.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43b0c2.  return @kind void;
}
