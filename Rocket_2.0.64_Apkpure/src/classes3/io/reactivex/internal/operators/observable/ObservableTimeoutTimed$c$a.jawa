record `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$c$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$c;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L446610.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` := v1 @kind object;
  #L446614.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44661a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.a` @type ^`long` := v2 @kind wide;
  #L44661e.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a` v5 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L446630.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.a` @type ^`long` @kind wide;
  #L446634.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` @kind object;
  #L446638.  v2:= v2.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c.h` @type ^`long` @kind wide;
  #L44663c.  v4:= lcmp(v0, v2);
  #L446640.  if v4 != 0 then goto L44667e;
  #L446644.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` @kind object;
  #L446648.  v1:= 1I;
  #L44664a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c.i` @type ^`boolean` := v1 @kind boolean;
  #L44664e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` @kind object;
  #L446652.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L446656.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44665c.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` @kind object;
  #L446660.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L446666.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` @kind object;
  #L44666a.  call `b`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$c;.b:()V` @kind virtual;
  #L446670.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c` @kind object;
  #L446674.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L446678.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44667e.  return @kind void;
}
