record `io.reactivex.internal.operators.observable.ObservableInternalHelper$g` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableInternalHelper$g.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$g` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$g;.<init>:(Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43d114.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43d11a.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$g.a` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L43d11e.  return @kind void;
}
procedure `io.reactivex.ObservableSource` `a`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$g` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$g;.a:(Ljava/lang/Object;)Lio/reactivex/ObservableSource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43d0b0.  v0:= new `io.reactivex.internal.operators.observable.ObservableTake`;
  #L43d0b4.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableInternalHelper$g.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L43d0b8.  call temp:= `apply`(v1, v5) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43d0be.  v1:= temp @kind object;
  #L43d0c0.  v1:= (`io.reactivex.ObservableSource`) v1 @kind object;
  #L43d0c4.  v2:= 1L;
  #L43d0c8.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTake;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L43d0ce.  call temp:= `justFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L43d0d4.  v1:= temp @kind object;
  #L43d0d6.  call temp:= `map`(v0, v1) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L43d0dc.  v0:= temp @kind object;
  #L43d0de.  call temp:= `defaultIfEmpty`(v0, v5) @signature `Lio/reactivex/Observable;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind virtual;
  #L43d0e4.  v5:= temp @kind object;
  #L43d0e6.  return v5 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$g;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d0f8.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$g;.a:(Ljava/lang/Object;)Lio/reactivex/ObservableSource;` @kind virtual;
  #L43d0fe.  v1:= temp @kind object;
  #L43d100.  return v1 @kind object;
}
