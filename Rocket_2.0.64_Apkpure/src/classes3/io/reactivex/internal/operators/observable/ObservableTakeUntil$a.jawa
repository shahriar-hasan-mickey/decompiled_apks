record `io.reactivex.internal.operators.observable.ObservableTakeUntil$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.internal.disposables.ArrayCompositeDisposable` `io.reactivex.internal.operators.observable.ObservableTakeUntil$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.observers.SerializedObserver` `io.reactivex.internal.operators.observable.ObservableTakeUntil$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableTakeUntil` `io.reactivex.internal.operators.observable.ObservableTakeUntil$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTakeUntil$a` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableTakeUntil` v1 @kind object, `io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind object, `io.reactivex.observers.SerializedObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntil$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableTakeUntil;Lio/reactivex/internal/disposables/ArrayCompositeDisposable;Lio/reactivex/observers/SerializedObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L445608.  v0.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableTakeUntil` := v1 @kind object;
  #L44560c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L445612.  v0.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.a` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` := v2 @kind object;
  #L445616.  v0.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.b` @type ^`io.reactivex.observers.SerializedObserver` := v3 @kind object;
  #L44561a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTakeUntil$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntil$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44562c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.a` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L445630.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @kind virtual;
  #L445636.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.b` @type ^`io.reactivex.observers.SerializedObserver` @kind object;
  #L44563a.  call `onComplete`(v0) @signature `Lio/reactivex/observers/SerializedObserver;.onComplete:()V` @kind virtual;
  #L445640.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTakeUntil$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntil$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445654.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.a` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L445658.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @kind virtual;
  #L44565e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.b` @type ^`io.reactivex.observers.SerializedObserver` @kind object;
  #L445662.  call `onError`(v0, v2) @signature `Lio/reactivex/observers/SerializedObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L445668.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTakeUntil$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntil$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L44567c.  v1:= v0.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.a` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L445680.  call `dispose`(v1) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @kind virtual;
  #L445686.  v1:= v0.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.b` @type ^`io.reactivex.observers.SerializedObserver` @kind object;
  #L44568a.  call `onComplete`(v1) @signature `Lio/reactivex/observers/SerializedObserver;.onComplete:()V` @kind virtual;
  #L445690.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTakeUntil$a` v2 @kind this, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntil$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4456a4.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeUntil$a.a` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L4456a8.  v1:= 1I;
  #L4456aa.  call temp:= `setResource`(v0, v1, v3) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.setResource:(ILio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L4456b0.  return @kind void;
}
