record `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class, `io.reactivex.internal.fuseable.FuseToObservable` @kind interface {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43a1f0.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L43a1f6.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.a` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L43a1fa.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43a1fe.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.c` @type ^`boolean` := v3 @kind boolean;
  #L43a202.  return @kind void;
}
procedure `io.reactivex.Observable` `fuseToObservable`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable;.fuseToObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43a1c0.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable`;
  #L43a1c4.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.a` @type ^`io.reactivex.ObservableSource` @kind object;
  #L43a1c8.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L43a1cc.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.c` @type ^`boolean` @kind boolean;
  #L43a1d0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L43a1d6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L43a1dc.  v0:= temp @kind object;
  #L43a1de.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable` v4 @kind this, `io.reactivex.CompletableObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43a214.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.a` @type ^`io.reactivex.ObservableSource` @kind object;
  #L43a218.  v1:= new `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$a`;
  #L43a21c.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L43a220.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable.c` @type ^`boolean` @kind boolean;
  #L43a224.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L43a22a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L43a230.  return @kind void;
}
