record `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/BiFunction;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44001c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L440022.  v0.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L440026.  v0.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L44002a.  v0.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.b` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L44002e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440040.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L440044.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44004a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fffc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L440000.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L440006.  v0:= temp;
  #L440008.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44005c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L440060.  v1:= 0I;
  #L440062.  v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L440066.  if v0 == 0 then goto L440074;
  #L44006a.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44006e.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L440074.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L440088.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L44008c.  v1:= 0I;
  #L44008e.  v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L440092.  if v0 == 0 then goto L4400a2;
  #L440096.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44009a.  call `onError`(v0, v3) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4400a0.  goto L4400a8;
  #L4400a2.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4400a8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4400bc.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4400c0.  if v0 == 0 then goto L4400fa;
  #L4400c4.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L4400c8.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4400ce.  v3:= temp @kind object;
  #L4400d0.  v0:= "The reducer returned a null value" @kind object;
  #L4400d4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4400da.  v3:= temp @kind object;
  #L4400dc.  v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4400e0.  goto L4400fa;
  #L4400e2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4400e4.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4400ea.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4400ee.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4400f4.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4400fa.  return @kind void;
  catch `java.lang.Throwable` @[L4400c4..L4400e0] goto L4400e2;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440118.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44011c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L440122.  v0:= temp;
  #L440124.  if v0 == 0 then goto L440136;
  #L440128.  v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L44012c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L440130.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L440136.  return @kind void;
}
