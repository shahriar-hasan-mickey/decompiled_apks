record `io.reactivex.internal.operators.observable.ObservableAnySingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.observable.ObservableAnySingle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.observable.ObservableAnySingle$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableAnySingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableAnySingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableAnySingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L432bac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L432bb2.  v0.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L432bb6.  v0.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.b` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L432bba.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableAnySingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432bcc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432bd0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432bd6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableAnySingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432b8c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432b90.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L432b96.  v0:= temp;
  #L432b98.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableAnySingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L432be8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L432bec.  if v0 != 0 then goto L432c04;
  #L432bf0.  v0:= 1I;
  #L432bf2.  v2.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L432bf6.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L432bfa.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L432bfe.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L432c04.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432c18.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L432c1c.  if v0 == 0 then goto L432c28;
  #L432c20.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L432c26.  return @kind void;
  #L432c28.  v0:= 1I;
  #L432c2a.  v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L432c2e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L432c32.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L432c38.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432c4c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L432c50.  if v0 == 0 then goto L432c56;
  #L432c54.  return @kind void;
  #L432c56.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.b` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L432c5a.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L432c60.  v2:= temp;
  #L432c62.  if v2 == 0 then goto L432c84;
  #L432c66.  v2:= 1I;
  #L432c68.  v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L432c6c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432c70.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432c76.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L432c7a.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L432c7e.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L432c84.  return @kind void;
  #L432c86.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L432c88.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L432c8e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432c92.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432c98.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L432c9e.  return @kind void;
  catch `java.lang.Throwable` @[L432c56..L432c62] goto L432c86;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432cbc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432cc0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L432cc6.  v0:= temp;
  #L432cc8.  if v0 == 0 then goto L432cda;
  #L432ccc.  v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L432cd0.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L432cd4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L432cda.  return @kind void;
}
