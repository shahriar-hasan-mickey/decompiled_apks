record `io.reactivex.internal.operators.observable.ObservableAny$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableAny$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.observable.ObservableAny$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableAny$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableAny$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableAny$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L432a38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L432a3e.  v0.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L432a42.  v0.`io.reactivex.internal.operators.observable.ObservableAny$a.b` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L432a46.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432a58.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432a5c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432a62.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432a18.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432a1c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L432a22.  v0:= temp;
  #L432a24.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableAny$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L432a74.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L432a78.  if v0 != 0 then goto L432a9a;
  #L432a7c.  v0:= 1I;
  #L432a7e.  v2.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v0 @kind boolean;
  #L432a82.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L432a86.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L432a8a.  call `onNext`(v0, v1) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L432a90.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L432a94.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L432a9a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432aac.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L432ab0.  if v0 == 0 then goto L432abc;
  #L432ab4.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L432aba.  return @kind void;
  #L432abc.  v0:= 1I;
  #L432abe.  v1.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v0 @kind boolean;
  #L432ac2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L432ac6.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L432acc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432ae0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L432ae4.  if v0 == 0 then goto L432aea;
  #L432ae8.  return @kind void;
  #L432aea.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.b` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L432aee.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L432af4.  v2:= temp;
  #L432af6.  if v2 == 0 then goto L432b22;
  #L432afa.  v2:= 1I;
  #L432afc.  v1.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v2 @kind boolean;
  #L432b00.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432b04.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432b0a.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L432b0e.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L432b12.  call `onNext`(v2, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L432b18.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L432b1c.  call `onComplete`(v2) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L432b22.  return @kind void;
  #L432b24.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L432b26.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L432b2c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432b30.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432b36.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L432b3c.  return @kind void;
  catch `java.lang.Throwable` @[L432aea..L432af6] goto L432b24;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432b5c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L432b60.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L432b66.  v0:= temp;
  #L432b68.  if v0 == 0 then goto L432b7a;
  #L432b6c.  v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L432b70.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L432b74.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L432b7a.  return @kind void;
}
