record `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.c` @AccessFlag FINAL;
  `io.reactivex.Scheduler$Worker` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.e` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.g` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this, `io.reactivex.Observer` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler$Worker` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L43764c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L437652.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L437656.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L43765c.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L437660.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` := v2 @kind object;
  #L437664.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.b` @type ^`long` := v3 @kind wide;
  #L437668.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.c` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L43766c.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` := v6 @kind object;
  #L437670.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object, `io.reactivex.internal.operators.observable.ObservableDebounceTimed$a` v7 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.a:(JLjava/lang/Object;Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4376ac.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.g` @type ^`long` @kind wide;
  #L4376b0.  v2:= lcmp(v4, v0);
  #L4376b4.  if v2 != 0 then goto L4376c8;
  #L4376b8.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L4376bc.  call `onNext`(v4, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4376c2.  call `dispose`(v7) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;.dispose:()V` @kind virtual;
  #L4376c8.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437684.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L437688.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43768e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L437692.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L437698.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43762c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L437630.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L437636.  v0:= temp;
  #L437638.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4376dc.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` @kind boolean;
  #L4376e0.  if v0 == 0 then goto L4376e6;
  #L4376e4.  return @kind void;
  #L4376e6.  v0:= 1I;
  #L4376e8.  v2.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` := v0 @kind boolean;
  #L4376ec.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4376f0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4376f6.  v0:= temp @kind object;
  #L4376f8.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4376fc.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L437700.  if v0 == v1 then goto L437726;
  #L437704.  v0:= (`io.reactivex.internal.operators.observable.ObservableDebounceTimed$a`) v0 @kind object;
  #L437708.  if v0 == 0 then goto L437712;
  #L43770c.  call `run`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;.run:()V` @kind virtual;
  #L437712.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L437716.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L43771c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L437720.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L437726.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437738.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` @kind boolean;
  #L43773c.  if v0 == 0 then goto L437748;
  #L437740.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L437746.  return @kind void;
  #L437748.  v0:= 1I;
  #L43774a.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` := v0 @kind boolean;
  #L43774e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L437752.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L437758.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L43775c.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L437762.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L437774.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` @kind boolean;
  #L437778.  if v0 == 0 then goto L43777e;
  #L43777c.  return @kind void;
  #L43777e.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.g` @type ^`long` @kind wide;
  #L437782.  v2:= 1L;
  #L437786.  v0:= v0 + v2 @kind long;
  #L437788.  v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.g` @type ^`long` := v0 @kind wide;
  #L43778c.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L437790.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L437796.  v2:= temp @kind object;
  #L437798.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L43779c.  if v2 == 0 then goto L4377a6;
  #L4377a0.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4377a6.  v3:= new `io.reactivex.internal.operators.observable.ObservableDebounceTimed$a`;
  #L4377aa.  call `<init>`(v3, v5, v0, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;.<init>:(Ljava/lang/Object;JLio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;)V` @kind direct;
  #L4377b0.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4377b4.  call temp:= `compareAndSet`(v5, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4377ba.  v5:= temp;
  #L4377bc.  if v5 == 0 then goto L4377da;
  #L4377c0.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L4377c4.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.b` @type ^`long` @kind wide;
  #L4377c8.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4377cc.  call temp:= `schedule`(v5, v3, v0, v2) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4377d2.  v5:= temp @kind object;
  #L4377d4.  call `a`(v3, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;.a:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L4377da.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4377ec.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4377f0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4377f6.  v0:= temp;
  #L4377f8.  if v0 == 0 then goto L43780a;
  #L4377fc.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.e` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L437800.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L437804.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43780a.  return @kind void;
}
