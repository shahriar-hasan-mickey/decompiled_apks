record `io.reactivex.internal.operators.observable.ObservableDoOnEach$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDoOnEach$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.observable.ObservableDoOnEach$a.b` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.observable.ObservableDoOnEach$a.c` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.observable.ObservableDoOnEach$a.d` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.observable.ObservableDoOnEach$a.e` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDoOnEach$a.f` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDoOnEach$a.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDoOnEach$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object, `io.reactivex.functions.Action` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4387ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4387f2.  v0.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4387f6.  v0.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L4387fa.  v0.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.c` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L4387fe.  v0.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.d` @type ^`io.reactivex.functions.Action` := v4 @kind object;
  #L438802.  v0.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.functions.Action` := v5 @kind object;
  #L438806.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438818.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43881c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L438822.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4387cc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4387d0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4387d6.  v0:= temp;
  #L4387d8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438834.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L438838.  if v0 == 0 then goto L43883e;
  #L43883c.  return @kind void;
  #L43883e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.d` @type ^`io.reactivex.functions.Action` @kind object;
  #L438842.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L438848.  v0:= 1I;
  #L43884a.  v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` := v0 @kind boolean;
  #L43884e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438852.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L438858.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.functions.Action` @kind object;
  #L43885c.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L438862.  goto L438872;
  #L438864.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L438866.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43886c.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L438872.  return @kind void;
  #L438874.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L438876.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43887c.  call `onError`(v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L438882.  return @kind void;
  catch `java.lang.Throwable` @[L43883e..L438848] goto L438874;
  catch `java.lang.Throwable` @[L438858..L438862] goto L438864;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDoOnEach$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4388ac.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L4388b0.  if v0 == 0 then goto L4388bc;
  #L4388b4.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4388ba.  return @kind void;
  #L4388bc.  v0:= 1I;
  #L4388be.  v5.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4388c2.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L4388c6.  call `accept`(v1, v6) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4388cc.  goto L4388f2;
  #L4388ce.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4388d0.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4388d6.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L4388da.  v3:= 2I;
  #L4388dc.  v3:= new `java.lang.Throwable`[v3];
  #L4388e0.  v4:= 0I;
  #L4388e2.  v3[v4]:= v6 @kind object;
  #L4388e6.  v3[v0]:= v1 @kind object;
  #L4388ea.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4388f0.  v6:= v2 @kind object;
  #L4388f2.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4388f6.  call `onError`(v0, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4388fc.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.functions.Action` @kind object;
  #L438900.  call `run`(v6) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L438906.  goto L438916;
  #L438908.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43890a.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L438910.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L438916.  return @kind void;
  catch `java.lang.Throwable` @[L4388c2..L4388cc] goto L4388ce;
  catch `java.lang.Throwable` @[L4388fc..L438906] goto L438908;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438940.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L438944.  if v0 == 0 then goto L43894a;
  #L438948.  return @kind void;
  #L43894a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L43894e.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L438954.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438958.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L43895e.  return @kind void;
  #L438960.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L438962.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L438968.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43896c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L438972.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L438978.  return @kind void;
  catch `java.lang.Throwable` @[L43894a..L438954] goto L438960;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438998.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43899c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4389a2.  v0:= temp;
  #L4389a4.  if v0 == 0 then goto L4389b6;
  #L4389a8.  v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L4389ac.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4389b0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4389b6.  return @kind void;
}
