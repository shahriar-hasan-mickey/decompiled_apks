record `io.reactivex.internal.operators.observable.ObservableAllSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.observable.ObservableAllSingle$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L432448.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43244e.  v0.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L432452.  v0.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.b` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L432456.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432468.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43246c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432472.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432428.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43242c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L432432.  v0:= temp;
  #L432434.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L432484.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L432488.  if v0 == 0 then goto L43248e;
  #L43248c.  return @kind void;
  #L43248e.  v0:= 1I;
  #L432490.  v2.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L432494.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L432498.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L43249c.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4324a2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4324b4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4324b8.  if v0 == 0 then goto L4324c4;
  #L4324bc.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4324c2.  return @kind void;
  #L4324c4.  v0:= 1I;
  #L4324c6.  v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4324ca.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4324ce.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4324d4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4324e8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4324ec.  if v0 == 0 then goto L4324f2;
  #L4324f0.  return @kind void;
  #L4324f2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.b` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L4324f6.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4324fc.  v2:= temp;
  #L4324fe.  if v2 != 0 then goto L432520;
  #L432502.  v2:= 1I;
  #L432504.  v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L432508.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43250c.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432512.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L432516.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L43251a.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L432520.  return @kind void;
  #L432522.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L432524.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43252a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43252e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L432534.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43253a.  return @kind void;
  catch `java.lang.Throwable` @[L4324f2..L4324fe] goto L432522;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432558.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43255c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L432562.  v0:= temp;
  #L432564.  if v0 == 0 then goto L432576;
  #L432568.  v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L43256c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L432570.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L432576.  return @kind void;
}
