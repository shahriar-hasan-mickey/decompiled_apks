record `io.reactivex.internal.operators.observable.ObservableCombineLatest$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.internal.operators.observable.ObservableCombineLatest$b` `io.reactivex.internal.operators.observable.ObservableCombineLatest$a.a` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableCombineLatest$a.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableCombineLatest$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$a` v1 @kind this, `io.reactivex.internal.operators.observable.ObservableCombineLatest$b` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4356c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4356c6.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4356ca.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4356d0.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4356d4.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$b` := v2 @kind object;
  #L4356d8.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.b` @type ^`int` := v3;
  #L4356dc.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4356f0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4356f4.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4356fa.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$a` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43570c.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$b` @kind object;
  #L435710.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.b` @type ^`int`;
  #L435714.  v2:= 0I;
  #L435716.  call `e`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;.e:(Ljava/lang/Object;I)V` @kind virtual;
  #L43571c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L435730.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$b` @kind object;
  #L435734.  call `g`(v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;.g:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43573a.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$b` @kind object;
  #L43573e.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.b` @type ^`int`;
  #L435742.  v1:= 0I;
  #L435744.  call `e`(v3, v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;.e:(Ljava/lang/Object;I)V` @kind virtual;
  #L43574a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43575c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.a` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$b` @kind object;
  #L435760.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.b` @type ^`int`;
  #L435764.  call `e`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;.e:(Ljava/lang/Object;I)V` @kind virtual;
  #L43576a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43577c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L435780.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L435786.  return @kind void;
}
