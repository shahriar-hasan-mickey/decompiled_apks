record `io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4450e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4450ee.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4450f2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L445128.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.c` @type ^`java.lang.Object` @kind object;
  #L44512c.  if v0 == 0 then goto L445140;
  #L445130.  v1:= 0I;
  #L445132.  v2.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L445136.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L44513a.  call `onNext`(v1, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L445140.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L445144.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L44514a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445104.  v0:= 0I;
  #L445106.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L44510a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44510e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L445114.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4450c8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4450cc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4450d2.  v0:= temp;
  #L4450d4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L44515c.  call `a`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.a:()V` @kind virtual;
  #L445162.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445174.  v0:= 0I;
  #L445176.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L44517a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L44517e.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L445184.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L445198.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L44519c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4451b0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4451b4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4451ba.  v0:= temp;
  #L4451bc.  if v0 == 0 then goto L4451ce;
  #L4451c0.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L4451c4.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4451c8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4451ce.  return @kind void;
}
