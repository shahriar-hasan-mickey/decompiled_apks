record `io.reactivex.internal.operators.observable.ObservableBufferTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableBufferTimed.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableBufferTimed.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableBufferTimed.c` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableBufferTimed.d` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableBufferTimed.e` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableBufferTimed.f` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableBufferTimed.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableBufferTimed` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.Scheduler` v7 @kind object, `java.util.concurrent.Callable` v8 @kind object, `int` v9 , `boolean` v10 ) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L434cc4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L434cca.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.a` @type ^`long` := v2 @kind wide;
  #L434cce.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.b` @type ^`long` := v4 @kind wide;
  #L434cd2.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.c` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L434cd6.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.d` @type ^`io.reactivex.Scheduler` := v7 @kind object;
  #L434cda.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.e` @type ^`java.util.concurrent.Callable` := v8 @kind object;
  #L434cde.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.f` @type ^`int` := v9;
  #L434ce2.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.g` @type ^`boolean` := v10 @kind boolean;
  #L434ce6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableBufferTimed` v11 @kind this, `io.reactivex.Observer` v12 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L434cf8.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.a` @type ^`long` @kind wide;
  #L434cfc.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.b` @type ^`long` @kind wide;
  #L434d00.  v4:= lcmp(v0, v2);
  #L434d04.  if v4 != 0 then goto L434d48;
  #L434d08.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.f` @type ^`int`;
  #L434d0c.  v1:= 2147483647I;
  #L434d12.  if v0 != v1 then goto L434d48;
  #L434d16.  v0:= v11.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L434d1a.  v8:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed$b`;
  #L434d1e.  v2:= new `io.reactivex.observers.SerializedObserver`;
  #L434d22.  call `<init>`(v2, v12) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L434d28.  v3:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.e` @type ^`java.util.concurrent.Callable` @kind object;
  #L434d2c.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.a` @type ^`long` @kind wide;
  #L434d30.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L434d34.  v7:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L434d38.  v1:= v8 @kind object;
  #L434d3a.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$b;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L434d40.  call `subscribe`(v0, v8) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L434d46.  return @kind void;
  #L434d48.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L434d4c.  call temp:= `createWorker`(v0) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L434d52.  v9:= temp @kind object;
  #L434d54.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.a` @type ^`long` @kind wide;
  #L434d58.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.b` @type ^`long` @kind wide;
  #L434d5c.  v4:= lcmp(v0, v2);
  #L434d60.  if v4 != 0 then goto L434d9a;
  #L434d64.  v0:= v11.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L434d68.  v10:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed$a`;
  #L434d6c.  v2:= new `io.reactivex.observers.SerializedObserver`;
  #L434d70.  call `<init>`(v2, v12) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L434d76.  v3:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.e` @type ^`java.util.concurrent.Callable` @kind object;
  #L434d7a.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.a` @type ^`long` @kind wide;
  #L434d7e.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L434d82.  v7:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.f` @type ^`int`;
  #L434d86.  v8:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.g` @type ^`boolean` @kind boolean;
  #L434d8a.  v1:= v10 @kind object;
  #L434d8c.  call `<init>`(v1, v2, v3, v4, v6, v7, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$a;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;IZLio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L434d92.  call `subscribe`(v0, v10) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L434d98.  return @kind void;
  #L434d9a.  v0:= v11.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L434d9e.  v10:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed$c`;
  #L434da2.  v2:= new `io.reactivex.observers.SerializedObserver`;
  #L434da6.  call `<init>`(v2, v12) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L434dac.  v3:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.e` @type ^`java.util.concurrent.Callable` @kind object;
  #L434db0.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.a` @type ^`long` @kind wide;
  #L434db4.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.b` @type ^`long` @kind wide;
  #L434db8.  v8:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L434dbc.  v1:= v10 @kind object;
  #L434dbe.  call `<init>`(v1, v2, v3, v4, v6, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$c;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/Callable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L434dc4.  call `subscribe`(v0, v10) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L434dca.  return @kind void;
}
