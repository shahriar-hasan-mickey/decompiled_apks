record `io.reactivex.internal.operators.observable.ObservableDematerialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L437dfc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L437e02.  v0.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L437e06.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this, `io.reactivex.Notification` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.a:(Lio/reactivex/Notification;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437e94.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @type ^`boolean` @kind boolean;
  #L437e98.  if v0 == 0 then goto L437eb8;
  #L437e9c.  call temp:= `isOnError`(v2) @signature `Lio/reactivex/Notification;.isOnError:()Z` @kind virtual;
  #L437ea2.  v0:= temp;
  #L437ea4.  if v0 == 0 then goto L437eb6;
  #L437ea8.  call temp:= `getError`(v2) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L437eae.  v2:= temp @kind object;
  #L437eb0.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L437eb6.  return @kind void;
  #L437eb8.  call temp:= `isOnError`(v2) @signature `Lio/reactivex/Notification;.isOnError:()Z` @kind virtual;
  #L437ebe.  v0:= temp;
  #L437ec0.  if v0 == 0 then goto L437ede;
  #L437ec4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L437ec8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L437ece.  call temp:= `getError`(v2) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L437ed4.  v2:= temp @kind object;
  #L437ed6.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L437edc.  goto L437f0e;
  #L437ede.  call temp:= `isOnComplete`(v2) @signature `Lio/reactivex/Notification;.isOnComplete:()Z` @kind virtual;
  #L437ee4.  v0:= temp;
  #L437ee6.  if v0 == 0 then goto L437efc;
  #L437eea.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L437eee.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L437ef4.  call `onComplete`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onComplete:()V` @kind virtual;
  #L437efa.  goto L437f0e;
  #L437efc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L437f00.  call temp:= `getValue`(v2) @signature `Lio/reactivex/Notification;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L437f06.  v2:= temp @kind object;
  #L437f08.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L437f0e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437e18.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L437e1c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L437e22.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437ddc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L437de0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L437de6.  v0:= temp;
  #L437de8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437e34.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @type ^`boolean` @kind boolean;
  #L437e38.  if v0 == 0 then goto L437e3e;
  #L437e3c.  return @kind void;
  #L437e3e.  v0:= 1I;
  #L437e40.  v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @type ^`boolean` := v0 @kind boolean;
  #L437e44.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L437e48.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L437e4e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437e60.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @type ^`boolean` @kind boolean;
  #L437e64.  if v0 == 0 then goto L437e70;
  #L437e68.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L437e6e.  return @kind void;
  #L437e70.  v0:= 1I;
  #L437e72.  v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @type ^`boolean` := v0 @kind boolean;
  #L437e76.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L437e7a.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L437e80.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L437f20.  v1:= (`io.reactivex.Notification`) v1 @kind object;
  #L437f24.  call `a`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.a:(Lio/reactivex/Notification;)V` @kind virtual;
  #L437f2a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437f3c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L437f40.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L437f46.  v0:= temp;
  #L437f48.  if v0 == 0 then goto L437f5a;
  #L437f4c.  v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L437f50.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L437f54.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L437f5a.  return @kind void;
}
