record `io.reactivex.internal.operators.observable.ObservableElementAt$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableElementAt$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableElementAt$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableElementAt$a.d` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.ObservableElementAt$a.f` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.<init>:(Lio/reactivex/Observer;JLjava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L438a9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L438aa2.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L438aa6.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$a.b` @type ^`long` := v2 @kind wide;
  #L438aaa.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$a.c` @type ^`java.lang.Object` := v4 @kind object;
  #L438aae.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$a.d` @type ^`boolean` := v5 @kind boolean;
  #L438ab2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438ac4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L438ac8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L438ace.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438a7c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L438a80.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L438a86.  v0:= temp;
  #L438a88.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L438ae0.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` @kind boolean;
  #L438ae4.  if v0 != 0 then goto L438b2c;
  #L438ae8.  v0:= 1I;
  #L438aea.  v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` := v0 @kind boolean;
  #L438aee.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.c` @type ^`java.lang.Object` @kind object;
  #L438af2.  if v0 != 0 then goto L438b14;
  #L438af6.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.d` @type ^`boolean` @kind boolean;
  #L438afa.  if v1 == 0 then goto L438b14;
  #L438afe.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438b02.  v1:= new `java.util.NoSuchElementException`;
  #L438b06.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L438b0c.  call `onError`(v0, v1) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L438b12.  goto L438b2c;
  #L438b14.  if v0 == 0 then goto L438b22;
  #L438b18.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438b1c.  call `onNext`(v1, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L438b22.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438b26.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L438b2c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438b40.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` @kind boolean;
  #L438b44.  if v0 == 0 then goto L438b50;
  #L438b48.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L438b4e.  return @kind void;
  #L438b50.  v0:= 1I;
  #L438b52.  v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` := v0 @kind boolean;
  #L438b56.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438b5a.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L438b60.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L438b74.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` @kind boolean;
  #L438b78.  if v0 == 0 then goto L438b7e;
  #L438b7c.  return @kind void;
  #L438b7e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.f` @type ^`long` @kind wide;
  #L438b82.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.b` @type ^`long` @kind wide;
  #L438b86.  v4:= lcmp(v0, v2);
  #L438b8a.  if v4 != 0 then goto L438bb4;
  #L438b8e.  v0:= 1I;
  #L438b90.  v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` := v0 @kind boolean;
  #L438b94.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L438b98.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L438b9e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438ba2.  call `onNext`(v0, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L438ba8.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438bac.  call `onComplete`(v6) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L438bb2.  return @kind void;
  #L438bb4.  v2:= 1L;
  #L438bb8.  v0:= v0 + v2 @kind long;
  #L438bba.  v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.f` @type ^`long` := v0 @kind wide;
  #L438bbe.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438bd0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L438bd4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L438bda.  v0:= temp;
  #L438bdc.  if v0 == 0 then goto L438bee;
  #L438be0.  v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L438be4.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L438be8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L438bee.  return @kind void;
}
