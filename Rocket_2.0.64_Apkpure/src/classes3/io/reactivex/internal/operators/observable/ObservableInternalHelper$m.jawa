record `io.reactivex.internal.operators.observable.ObservableInternalHelper$m` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableInternalHelper$m.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$m` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$m;.<init>:(Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43d36c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43d372.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$m.a` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L43d376.  return @kind void;
}
procedure `io.reactivex.ObservableSource` `a`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$m` v2 @kind this, `io.reactivex.Observable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$m;.a:(Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43d31c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableInternalHelper$m.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L43d320.  v1:= `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$h.a` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$h` @kind object;
  #L43d324.  call temp:= `map`(v3, v1) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L43d32a.  v3:= temp @kind object;
  #L43d32c.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43d332.  v3:= temp @kind object;
  #L43d334.  v3:= (`io.reactivex.ObservableSource`) v3 @kind object;
  #L43d338.  return v3 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$m` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$m;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d34c.  v1:= (`io.reactivex.Observable`) v1 @kind object;
  #L43d350.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$m;.a:(Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;` @kind virtual;
  #L43d356.  v1:= temp @kind object;
  #L43d358.  return v1 @kind object;
}
