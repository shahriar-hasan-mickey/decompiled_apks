record `io.reactivex.internal.operators.observable.ObservableLift` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.ObservableOperator` `io.reactivex.internal.operators.observable.ObservableLift.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableLift` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableOperator` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableOperator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43e51c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L43e522.  v0.`io.reactivex.internal.operators.observable.ObservableLift.a` @type ^`io.reactivex.ObservableOperator` := v2 @kind object;
  #L43e526.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableLift` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43e538.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLift.a` @type ^`io.reactivex.ObservableOperator` @kind object;
  #L43e53c.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/ObservableOperator;.apply:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind interface;
  #L43e542.  v3:= temp @kind object;
  #L43e544.  v0:= new `java.lang.StringBuilder`;
  #L43e548.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43e54e.  v1:= "Operator " @kind object;
  #L43e552.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e558.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableLift.a` @type ^`io.reactivex.ObservableOperator` @kind object;
  #L43e55c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e562.  v1:= " returned a null Observer" @kind object;
  #L43e566.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e56c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43e572.  v0:= temp @kind object;
  #L43e574.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43e57a.  v3:= temp @kind object;
  #L43e57c.  v3:= (`io.reactivex.Observer`) v3 @kind object;
  #L43e580.  v0:= v2.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L43e584.  call `subscribe`(v0, v3) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L43e58a.  return @kind void;
  #L43e58c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43e58e.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43e594.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L43e59a.  v0:= new `java.lang.NullPointerException`;
  #L43e59e.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L43e5a2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43e5a8.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L43e5ae.  throw v0;
  #L43e5b0.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L43e5b2.  throw v3;
  catch `java.lang.NullPointerException` @[L43e538..L43e580] goto L43e5b0;
  catch `java.lang.Throwable` @[L43e538..L43e580] goto L43e58c;
}
