record `io.reactivex.internal.operators.observable.ObservableInternalHelper$p` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableInternalHelper$p.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$p` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$p;.<init>:(Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43d4b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43d4b6.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$p.a` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L43d4ba.  return @kind void;
}
procedure `io.reactivex.ObservableSource` `a`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$p` v1 @kind this, `io.reactivex.Observable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$p;.a:(Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d458.  v0:= `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$c.a` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$c` @kind object;
  #L43d45c.  call temp:= `takeWhile`(v2, v0) @signature `Lio/reactivex/Observable;.takeWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L43d462.  v2:= temp @kind object;
  #L43d464.  call temp:= `map`(v2, v0) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L43d46a.  v2:= temp @kind object;
  #L43d46c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableInternalHelper$p.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L43d470.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43d476.  v2:= temp @kind object;
  #L43d478.  v2:= (`io.reactivex.ObservableSource`) v2 @kind object;
  #L43d47c.  return v2 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$p` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$p;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d490.  v1:= (`io.reactivex.Observable`) v1 @kind object;
  #L43d494.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$p;.a:(Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;` @kind virtual;
  #L43d49a.  v1:= temp @kind object;
  #L43d49c.  return v1 @kind object;
}
