record `io.reactivex.internal.operators.observable.ObservableInternalHelper$h` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.functions.Function` @kind interface {
}
global `io.reactivex.internal.operators.observable.ObservableInternalHelper$h` `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$h.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.operators.observable.ObservableInternalHelper$h`[] `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$h.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L43d194.  v0:= new `io.reactivex.internal.operators.observable.ObservableInternalHelper$h`;
  #L43d198.  v1:= "INSTANCE" @kind object;
  #L43d19c.  v2:= 0I;
  #L43d19e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43d1a4.  `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$h.a` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$h` := v0 @kind object;
  #L43d1a8.  v1:= 1I;
  #L43d1aa.  v1:= new `io.reactivex.internal.operators.observable.ObservableInternalHelper$h`[v1];
  #L43d1ae.  v1[v2]:= v0 @kind object;
  #L43d1b2.  `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$h.b` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$h`[] := v1 @kind object;
  #L43d1b6.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$h` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43d1c8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43d1ce.  return @kind void;
}
procedure `io.reactivex.internal.operators.observable.ObservableInternalHelper$h` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d130.  v0:= constclass @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$h` @kind object;
  #L43d134.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L43d13a.  v1:= temp @kind object;
  #L43d13c.  v1:= (`io.reactivex.internal.operators.observable.ObservableInternalHelper$h`) v1 @kind object;
  #L43d140.  return v1 @kind object;
}
procedure `io.reactivex.internal.operators.observable.ObservableInternalHelper$h`[] `values`() @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;.values:()[Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d154.  v0:= `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$h.b` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$h`[] @kind object;
  #L43d158.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;.clone:()Ljava/lang/Object;` @kind virtual;
  #L43d15e.  v0:= temp @kind object;
  #L43d160.  v0:= (`io.reactivex.internal.operators.observable.ObservableInternalHelper$h`[]) v0 @kind object;
  #L43d164.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$h;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L43d178.  v1:= 0I;
  #L43d17a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L43d180.  v1:= temp @kind object;
  #L43d182.  return v1 @kind object;
}
