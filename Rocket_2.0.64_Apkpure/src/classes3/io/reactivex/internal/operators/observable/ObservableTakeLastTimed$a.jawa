record `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.d` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.e` @AccessFlag FINAL;
  `io.reactivex.internal.queue.SpscLinkedArrayQueue` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.f` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.g` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.h` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.i` @AccessFlag VOLATILE;
  `java.lang.Throwable` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.j` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.Scheduler` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.<init>:(Lio/reactivex/Observer;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L445238.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L44523e.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L445242.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.b` @type ^`long` := v2 @kind wide;
  #L445246.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.c` @type ^`long` := v4 @kind wide;
  #L44524a.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.d` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L44524e.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.e` @type ^`io.reactivex.Scheduler` := v7 @kind object;
  #L445252.  v1:= new `io.reactivex.internal.queue.SpscLinkedArrayQueue`;
  #L445256.  call `<init>`(v1, v8) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L44525c.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.f` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` := v1 @kind object;
  #L445260.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.g` @type ^`boolean` := v9 @kind boolean;
  #L445264.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` v13 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4452bc.  v0:= 0I;
  #L4452be.  v1:= 1I;
  #L4452c0.  call temp:= `compareAndSet`(v13, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4452c6.  v2:= temp;
  #L4452c8.  if v2 != 0 then goto L4452ce;
  #L4452cc.  return @kind void;
  #L4452ce.  v2:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4452d2.  v3:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.f` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4452d6.  v4:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.g` @type ^`boolean` @kind boolean;
  #L4452da.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4452de.  if v5 == 0 then goto L4452ea;
  #L4452e2.  call `clear`(v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4452e8.  return @kind void;
  #L4452ea.  if v4 != 0 then goto L445304;
  #L4452ee.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.j` @type ^`java.lang.Throwable` @kind object;
  #L4452f2.  if v5 == 0 then goto L445304;
  #L4452f6.  call `clear`(v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4452fc.  call `onError`(v2, v5) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L445302.  return @kind void;
  #L445304.  call temp:= `poll`(v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L44530a.  v5:= temp @kind object;
  #L44530c.  if v5 != 0 then goto L445314;
  #L445310.  v6:= 1I;
  #L445312.  goto L445316;
  #L445314.  v6:= 0I;
  #L445316.  if v6 == 0 then goto L445332;
  #L44531a.  v0:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.j` @type ^`java.lang.Throwable` @kind object;
  #L44531e.  if v0 == 0 then goto L44532a;
  #L445322.  call `onError`(v2, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L445328.  goto L445330;
  #L44532a.  call `onComplete`(v2) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L445330.  return @kind void;
  #L445332.  call temp:= `poll`(v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L445338.  v6:= temp @kind object;
  #L44533a.  v5:= (`java.lang.Long`) v5 @kind object;
  #L44533e.  call temp:= `longValue`(v5) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L445344.  v7:= temp @kind wide;
  #L445346.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.e` @type ^`io.reactivex.Scheduler` @kind object;
  #L44534a.  v9:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L44534e.  call temp:= `now`(v5, v9) @signature `Lio/reactivex/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L445354.  v9:= temp @kind wide;
  #L445356.  v11:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.c` @type ^`long` @kind wide;
  #L44535a.  v9:= v9 - v11 @kind long;
  #L44535c.  v5:= lcmp(v7, v9);
  #L445360.  if v5 >= 0 then goto L445366;
  #L445364.  goto L4452da;
  #L445366.  call `onNext`(v2, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L44536c.  goto L4452da;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L445278.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L44527c.  if v0 != 0 then goto L4452a8;
  #L445280.  v0:= 1I;
  #L445282.  v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.i` @type ^`boolean` := v0 @kind boolean;
  #L445286.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.h` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L44528a.  call `dispose`(v1) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L445290.  v1:= 0I;
  #L445292.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L445298.  v0:= temp;
  #L44529a.  if v0 == 0 then goto L4452a8;
  #L44529e.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.f` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4452a2.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4452a8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445220.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L445224.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L445380.  call `a`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.a:()V` @kind virtual;
  #L445386.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L445398.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.j` @type ^`java.lang.Throwable` := v1 @kind object;
  #L44539c.  call `a`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.a:()V` @kind virtual;
  #L4453a2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` v13 @kind this, `java.lang.Object` v14 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4453b4.  v0:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.f` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4453b8.  v1:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.e` @type ^`io.reactivex.Scheduler` @kind object;
  #L4453bc.  v2:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4453c0.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4453c6.  v1:= temp @kind wide;
  #L4453c8.  v3:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.c` @type ^`long` @kind wide;
  #L4453cc.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.b` @type ^`long` @kind wide;
  #L4453d0.  v7:= 1I;
  #L4453d2.  v8:= 9223372036854775807L;
  #L4453dc.  v10:= lcmp(v5, v8);
  #L4453e0.  if v10 != 0 then goto L4453e8;
  #L4453e4.  v8:= 1I;
  #L4453e6.  goto L4453ea;
  #L4453e8.  v8:= 0I;
  #L4453ea.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4453f0.  v9:= temp @kind object;
  #L4453f2.  call temp:= `offer`(v0, v9, v14) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4453f8.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L4453fe.  v14:= temp;
  #L445400.  if v14 != 0 then goto L44544a;
  #L445404.  call temp:= `peek`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @kind virtual;
  #L44540a.  v14:= temp @kind object;
  #L44540c.  v14:= (`java.lang.Long`) v14 @kind object;
  #L445410.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L445416.  v9:= temp @kind wide;
  #L445418.  v11:= v1 - v3 @kind long;
  #L44541c.  v14:= lcmp(v9, v11);
  #L445420.  if v14 <= 0 then goto L44543c;
  #L445424.  if v8 != 0 then goto L44544a;
  #L445428.  call temp:= `size`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.size:()I` @kind virtual;
  #L44542e.  v14:= temp;
  #L445430.  v14:= v14 ^> v7 @kind int;
  #L445432.  v9:= (`long`) v14 @kind i2l;
  #L445434.  v14:= lcmp(v9, v5);
  #L445438.  if v14 <= 0 then goto L44544a;
  #L44543c.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L445442.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L445448.  goto L4453f8;
  #L44544a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44545c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.h` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L445460.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L445466.  v0:= temp;
  #L445468.  if v0 == 0 then goto L44547a;
  #L44546c.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.h` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L445470.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L445474.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L44547a.  return @kind void;
}
