record `io.reactivex.internal.operators.observable.ObservableCombineLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.ObservableSource`[] `io.reactivex.internal.operators.observable.ObservableCombineLatest.a` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableCombineLatest.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableCombineLatest.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableCombineLatest.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableCombineLatest.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCombineLatest` v0 @kind this, `io.reactivex.ObservableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L435bd0.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L435bd6.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.a` @type ^`io.reactivex.ObservableSource`[] := v1 @kind object;
  #L435bda.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L435bde.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L435be2.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.d` @type ^`int` := v4;
  #L435be6.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.e` @type ^`boolean` := v5 @kind boolean;
  #L435bea.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableCombineLatest` v8 @kind this, `io.reactivex.Observer` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L435bfc.  v0:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.a` @type ^`io.reactivex.ObservableSource`[] @kind object;
  #L435c00.  if v0 != 0 then goto L435c58;
  #L435c04.  v0:= 8I;
  #L435c08.  v0:= new `io.reactivex.Observable`[v0];
  #L435c0c.  v1:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.b` @type ^`java.lang.Iterable` @kind object;
  #L435c10.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L435c16.  v1:= temp @kind object;
  #L435c18.  v2:= 0I;
  #L435c1a.  v3:= 0I;
  #L435c1c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L435c22.  v4:= temp;
  #L435c24.  if v4 == 0 then goto L435c5a;
  #L435c28.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L435c2e.  v4:= temp @kind object;
  #L435c30.  v4:= (`io.reactivex.ObservableSource`) v4 @kind object;
  #L435c34.  v5:= length @variable v0;
  #L435c36.  if v3 != v5 then goto L435c4c;
  #L435c3a.  v5:= v3 ^> 2;
  #L435c3e.  v5:= v5 + v3 @kind int;
  #L435c40.  v5:= new `io.reactivex.ObservableSource`[v5];
  #L435c44.  call `arraycopy`(v0, v2, v5, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L435c4a.  v0:= v5 @kind object;
  #L435c4c.  v5:= v3 + 1;
  #L435c50.  v0[v3]:= v4 @kind object;
  #L435c54.  v3:= v5;
  #L435c56.  goto L435c1c;
  #L435c58.  v3:= length @variable v0;
  #L435c5a.  v4:= v3;
  #L435c5c.  if v4 != 0 then goto L435c68;
  #L435c60.  call `complete`(v9) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L435c66.  return @kind void;
  #L435c68.  v7:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest$b`;
  #L435c6c.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L435c70.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.d` @type ^`int`;
  #L435c74.  v6:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.e` @type ^`boolean` @kind boolean;
  #L435c78.  v1:= v7 @kind object;
  #L435c7a.  v2:= v9 @kind object;
  #L435c7c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;IIZ)V` @kind direct;
  #L435c82.  call `h`(v7, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;.h:([Lio/reactivex/ObservableSource;)V` @kind virtual;
  #L435c88.  return @kind void;
}
