record `io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` @kind class {
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$b;.<init>:(Lio/reactivex/Observer;Lio/reactivex/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L442660.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;.<init>:(Lio/reactivex/Observer;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L442666.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$b;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L442678.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L44267c.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L442682.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$b;.c:()V` @AccessFlag  {
    temp;
    v0;

  #L442694.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L442698.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L44269e.  return @kind void;
}
procedure `void` `f`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$b;.f:()V` @AccessFlag  {
    temp;

  #L4426b0.  call `d`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;.d:()V` @kind virtual;
  #L4426b6.  return @kind void;
}
