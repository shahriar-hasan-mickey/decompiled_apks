record `io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.Collection` `io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableBufferTimed$c` `io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableBufferTimed$c` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$c$b;.<init>:(Lio/reactivex/internal/operators/observable/ObservableBufferTimed$c;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L434810.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.b` @type ^`io.reactivex.internal.operators.observable.ObservableBufferTimed$c` := v1 @kind object;
  #L434814.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43481a.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.a` @type ^`java.util.Collection` := v2 @kind object;
  #L43481e.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$c$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L434830.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.b` @type ^`io.reactivex.internal.operators.observable.ObservableBufferTimed$c` @kind object;
  #L434834.  @monitorenter v0
  #L434836.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.b` @type ^`io.reactivex.internal.operators.observable.ObservableBufferTimed$c` @kind object;
  #L43483a.  v1:= v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` @kind object;
  #L43483e.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.a` @type ^`java.util.Collection` @kind object;
  #L434842.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L434848.  @monitorexit v0
  #L43484a.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.b` @type ^`io.reactivex.internal.operators.observable.ObservableBufferTimed$c` @kind object;
  #L43484e.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c$b.a` @type ^`java.util.Collection` @kind object;
  #L434852.  v2:= 0I;
  #L434854.  v3:= v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L434858.  call `c`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$c;.c:(Lio/reactivex/internal/operators/observable/ObservableBufferTimed$c;Ljava/lang/Object;ZLio/reactivex/disposables/Disposable;)V` @kind static;
  #L43485e.  return @kind void;
  #L434860.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L434862.  @monitorexit v0
  #L434864.  throw v1;
  catch `java.lang.Throwable` @[L434836..L43484a] goto L434860;
  catch `java.lang.Throwable` @[L434862..L434864] goto L434860;
}
