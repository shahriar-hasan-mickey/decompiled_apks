record `io.reactivex.internal.operators.observable.ObservableTimeoutTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.b` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.c` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.d` @AccessFlag FINAL;
}
global `io.reactivex.disposables.Disposable` `@@io.reactivex.internal.operators.observable.ObservableTimeoutTimed.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4468b0.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$a`;
  #L4468b4.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$a;.<init>:()V` @kind direct;
  #L4468ba.  `@@io.reactivex.internal.operators.observable.ObservableTimeoutTimed.e` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4468be.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4468d0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4468d6.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.a` @type ^`long` := v2 @kind wide;
  #L4468da.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.b` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4468de.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.c` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L4468e2.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.d` @type ^`io.reactivex.ObservableSource` := v6 @kind object;
  #L4468e6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed` v9 @kind this, `io.reactivex.Observer` v10 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4468f8.  v0:= v9.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.d` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4468fc.  if v0 != 0 then goto L446936;
  #L446900.  v0:= v9.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L446904.  v7:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b`;
  #L446908.  v2:= new `io.reactivex.observers.SerializedObserver`;
  #L44690c.  call `<init>`(v2, v10) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L446912.  v3:= v9.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.a` @type ^`long` @kind wide;
  #L446916.  v5:= v9.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L44691a.  v10:= v9.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L44691e.  call temp:= `createWorker`(v10) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L446924.  v6:= temp @kind object;
  #L446926.  v1:= v7 @kind object;
  #L446928.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$b;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L44692e.  call `subscribe`(v0, v7) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L446934.  goto L446966;
  #L446936.  v0:= v9.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L44693a.  v8:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c`;
  #L44693e.  v3:= v9.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.a` @type ^`long` @kind wide;
  #L446942.  v5:= v9.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L446946.  v1:= v9.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L44694a.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L446950.  v6:= temp @kind object;
  #L446952.  v7:= v9.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.d` @type ^`io.reactivex.ObservableSource` @kind object;
  #L446956.  v1:= v8 @kind object;
  #L446958.  v2:= v10 @kind object;
  #L44695a.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$c;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L446960.  call `subscribe`(v0, v8) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L446966.  return @kind void;
}
