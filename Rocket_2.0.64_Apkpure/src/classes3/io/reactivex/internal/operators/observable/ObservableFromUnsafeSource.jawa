record `io.reactivex.internal.operators.observable.ObservableFromUnsafeSource` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableFromUnsafeSource.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFromUnsafeSource` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43b808.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L43b80e.  v0.`io.reactivex.internal.operators.observable.ObservableFromUnsafeSource.a` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L43b812.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableFromUnsafeSource` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFromUnsafeSource;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L43b824.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFromUnsafeSource.a` @type ^`io.reactivex.ObservableSource` @kind object;
  #L43b828.  call `subscribe`(v0, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L43b82e.  return @kind void;
}
