record `io.reactivex.internal.operators.completable.CompletableAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.CompletableSource`[] `io.reactivex.internal.operators.completable.CompletableAmb.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.completable.CompletableAmb.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableAmb` v0 @kind this, `io.reactivex.CompletableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/CompletableSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L405dac.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L405db2.  v0.`io.reactivex.internal.operators.completable.CompletableAmb.a` @type ^`io.reactivex.CompletableSource`[] := v1 @kind object;
  #L405db6.  v0.`io.reactivex.internal.operators.completable.CompletableAmb.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L405dba.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableAmb` v10 @kind this, `io.reactivex.CompletableObserver` v11 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L405dcc.  v0:= v10.`io.reactivex.internal.operators.completable.CompletableAmb.a` @type ^`io.reactivex.CompletableSource`[] @kind object;
  #L405dd0.  v1:= "One of the sources is null" @kind object;
  #L405dd4.  v2:= 0I;
  #L405dd6.  if v0 != 0 then goto L405e52;
  #L405dda.  v0:= 8I;
  #L405dde.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L405de2.  v3:= v10.`io.reactivex.internal.operators.completable.CompletableAmb.b` @type ^`java.lang.Iterable` @kind object;
  #L405de6.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L405dec.  v3:= temp @kind object;
  #L405dee.  v4:= 0I;
  #L405df0.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L405df6.  v5:= temp;
  #L405df8.  if v5 == 0 then goto L405e54;
  #L405dfc.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L405e02.  v5:= temp @kind object;
  #L405e04.  v5:= (`io.reactivex.CompletableSource`) v5 @kind object;
  #L405e08.  if v5 != 0 then goto L405e1e;
  #L405e0c.  v0:= new `java.lang.NullPointerException`;
  #L405e10.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405e16.  call `error`(v0, v11) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L405e1c.  return @kind void;
  #L405e1e.  v6:= length @variable v0;
  #L405e20.  if v4 != v6 then goto L405e36;
  #L405e24.  v6:= v4 ^> 2;
  #L405e28.  v6:= v6 + v4 @kind int;
  #L405e2a.  v6:= new `io.reactivex.CompletableSource`[v6];
  #L405e2e.  call `arraycopy`(v0, v2, v6, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L405e34.  v0:= v6 @kind object;
  #L405e36.  v6:= v4 + 1;
  #L405e3a.  v0[v4]:= v5 @kind object;
  #L405e3e.  v4:= v6;
  #L405e40.  goto L405df0;
  #L405e42.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L405e44.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L405e4a.  call `error`(v0, v11) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L405e50.  return @kind void;
  #L405e52.  v4:= length @variable v0;
  #L405e54.  v3:= new `io.reactivex.disposables.CompositeDisposable`;
  #L405e58.  call `<init>`(v3) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L405e5e.  call `onSubscribe`(v11, v3) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L405e64.  v5:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L405e68.  call `<init>`(v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L405e6e.  v6:= new `io.reactivex.internal.operators.completable.CompletableAmb$a`;
  #L405e72.  call `<init>`(v6, v5, v3, v11) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.<init>:(Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L405e78.  v7:= 0I;
  #L405e7a.  if v7 >= v4 then goto L405ece;
  #L405e7e.  v8:= v0[v7] @kind object;
  #L405e82.  call temp:= `isDisposed`(v3) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L405e88.  v9:= temp;
  #L405e8a.  if v9 == 0 then goto L405e90;
  #L405e8e.  return @kind void;
  #L405e90.  if v8 != 0 then goto L405ec2;
  #L405e94.  v0:= new `java.lang.NullPointerException`;
  #L405e98.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405e9e.  v1:= 1I;
  #L405ea0.  call temp:= `compareAndSet`(v5, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L405ea6.  v1:= temp;
  #L405ea8.  if v1 == 0 then goto L405eba;
  #L405eac.  call `dispose`(v3) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L405eb2.  call `onError`(v11, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L405eb8.  goto L405ec0;
  #L405eba.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L405ec0.  return @kind void;
  #L405ec2.  call `subscribe`(v8, v6) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L405ec8.  v7:= v7 + 1;
  #L405ecc.  goto L405e7a;
  #L405ece.  if v4 != 0 then goto L405ed8;
  #L405ed2.  call `onComplete`(v11) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L405ed8.  return @kind void;
  catch `java.lang.Throwable` @[L405de2..L405e3e] goto L405e42;
}
