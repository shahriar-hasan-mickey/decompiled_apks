record `io.reactivex.internal.operators.completable.CompletableFromSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.completable.CompletableFromSingle.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableFromSingle` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L407614.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L40761a.  v0.`io.reactivex.internal.operators.completable.CompletableFromSingle.a` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L40761e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableFromSingle` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L407630.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableFromSingle.a` @type ^`io.reactivex.SingleSource` @kind object;
  #L407634.  v1:= new `io.reactivex.internal.operators.completable.CompletableFromSingle$a`;
  #L407638.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle$a;.<init>:(Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L40763e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L407644.  return @kind void;
}
