record `io.reactivex.internal.operators.completable.CompletableUsing$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableUsing$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.completable.CompletableUsing$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.completable.CompletableUsing$a.c` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletableUsing$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableUsing$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.<init>:(Lio/reactivex/CompletableObserver;Ljava/lang/Object;Lio/reactivex/functions/Consumer;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4090b0.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4090b6.  v0.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L4090ba.  v0.`io.reactivex.internal.operators.completable.CompletableUsing$a.b` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L4090be.  v0.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` := v4 @kind boolean;
  #L4090c2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L409100.  call temp:= `getAndSet`(v2, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L409106.  v0:= temp @kind object;
  #L409108.  if v0 == v2 then goto L409126;
  #L40910c.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L409110.  call `accept`(v1, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L409116.  goto L409126;
  #L409118.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40911a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L409120.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L409126.  return @kind void;
  catch `java.lang.Throwable` @[L40910c..L409116] goto L409118;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4090d4.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4090d8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4090de.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4090e2.  v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4090e6.  call `a`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.a:()V` @kind virtual;
  #L4090ec.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L409090.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L409094.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L40909a.  v0:= temp;
  #L40909c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L409144.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L409148.  v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L40914c.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` @kind boolean;
  #L409150.  if v0 == 0 then goto L409180;
  #L409154.  call temp:= `getAndSet`(v2, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L40915a.  v0:= temp @kind object;
  #L40915c.  if v0 == v2 then goto L40917e;
  #L409160.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L409164.  call `accept`(v1, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L40916a.  goto L409180;
  #L40916c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40916e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L409174.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L409178.  call `onError`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L40917e.  return @kind void;
  #L409180.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L409184.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L40918a.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` @kind boolean;
  #L40918e.  if v0 != 0 then goto L409198;
  #L409192.  call `a`(v2) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.a:()V` @kind virtual;
  #L409198.  return @kind void;
  catch `java.lang.Throwable` @[L409160..L40916a] goto L40916c;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4091b8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4091bc.  v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4091c0.  v0:= v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` @kind boolean;
  #L4091c4.  if v0 == 0 then goto L40920a;
  #L4091c8.  call temp:= `getAndSet`(v4, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4091ce.  v0:= temp @kind object;
  #L4091d0.  if v0 == v4 then goto L409208;
  #L4091d4.  v1:= v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L4091d8.  call `accept`(v1, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4091de.  goto L40920a;
  #L4091e0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4091e2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4091e8.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L4091ec.  v2:= 2I;
  #L4091ee.  v2:= new `java.lang.Throwable`[v2];
  #L4091f2.  v3:= 0I;
  #L4091f4.  v2[v3]:= v5 @kind object;
  #L4091f8.  v5:= 1I;
  #L4091fa.  v2[v5]:= v0 @kind object;
  #L4091fe.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L409204.  v5:= v1 @kind object;
  #L409206.  goto L40920a;
  #L409208.  return @kind void;
  #L40920a.  v0:= v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L40920e.  call `onError`(v0, v5) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L409214.  v5:= v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` @kind boolean;
  #L409218.  if v5 != 0 then goto L409222;
  #L40921c.  call `a`(v4) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.a:()V` @kind virtual;
  #L409222.  return @kind void;
  catch `java.lang.Throwable` @[L4091d4..L4091de] goto L4091e0;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L409240.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L409244.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L40924a.  v0:= temp;
  #L40924c.  if v0 == 0 then goto L40925e;
  #L409250.  v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L409254.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L409258.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L40925e.  return @kind void;
}
