record `io.reactivex.internal.operators.completable.CompletableObserveOn$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableObserveOn$a.a` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.completable.CompletableObserveOn$a.b` @AccessFlag FINAL;
  `java.lang.Throwable` `io.reactivex.internal.operators.completable.CompletableObserveOn$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableObserveOn$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableObserveOn$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L408344.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L40834a.  v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L40834e.  v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.b` @type ^`io.reactivex.Scheduler` := v2 @kind object;
  #L408352.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableObserveOn$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L408364.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L40836a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableObserveOn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40831c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L408322.  v0:= temp @kind object;
  #L408324.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L408328.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L40832e.  v0:= temp;
  #L408330.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableObserveOn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40837c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.b` @type ^`io.reactivex.Scheduler` @kind object;
  #L408380.  call temp:= `scheduleDirect`(v0, v1) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L408386.  v0:= temp @kind object;
  #L408388.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L40838e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableObserveOn$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4083a0.  v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.c` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4083a4.  v1:= v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.b` @type ^`io.reactivex.Scheduler` @kind object;
  #L4083a8.  call temp:= `scheduleDirect`(v1, v0) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4083ae.  v1:= temp @kind object;
  #L4083b0.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4083b6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableObserveOn$a` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4083c8.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4083ce.  v1:= temp;
  #L4083d0.  if v1 == 0 then goto L4083de;
  #L4083d4.  v1:= v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L4083d8.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4083de.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.completable.CompletableObserveOn$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4083f0.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.c` @type ^`java.lang.Throwable` @kind object;
  #L4083f4.  if v0 == 0 then goto L40840a;
  #L4083f8.  v1:= 0I;
  #L4083fa.  v2.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.c` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4083fe.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L408402.  call `onError`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L408408.  goto L408414;
  #L40840a.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableObserveOn$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L40840e.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L408414.  return @kind void;
}
