record `io.reactivex.internal.operators.completable.CompletableConcatIterable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableConcatIterable$a.a` @AccessFlag FINAL;
  `java.util.Iterator` `io.reactivex.internal.operators.completable.CompletableConcatIterable$a.b` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.completable.CompletableConcatIterable$a.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableConcatIterable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableConcatIterable$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable$a;.<init>:(Lio/reactivex/CompletableObserver;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L406728.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L40672e.  v0.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L406732.  v0.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L406736.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L40673a.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L406740.  v0.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L406744.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.completable.CompletableConcatIterable$a` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L406758.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L40675c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L406762.  v0:= temp;
  #L406764.  if v0 == 0 then goto L40676a;
  #L406768.  return @kind void;
  #L40676a.  call temp:= `getAndIncrement`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L406770.  v0:= temp;
  #L406772.  if v0 == 0 then goto L406778;
  #L406776.  return @kind void;
  #L406778.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.b` @type ^`java.util.Iterator` @kind object;
  #L40677c.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L406780.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L406786.  v1:= temp;
  #L406788.  if v1 == 0 then goto L40678e;
  #L40678c.  return @kind void;
  #L40678e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L406794.  v1:= temp;
  #L406796.  if v1 != 0 then goto L4067a6;
  #L40679a.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L40679e.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L4067a4.  return @kind void;
  #L4067a6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4067ac.  v1:= temp @kind object;
  #L4067ae.  v2:= "The CompletableSource returned is null" @kind object;
  #L4067b2.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4067b8.  v1:= temp @kind object;
  #L4067ba.  v1:= (`io.reactivex.CompletableSource`) v1 @kind object;
  #L4067be.  call `subscribe`(v1, v3) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L4067c4.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4067ca.  v1:= temp;
  #L4067cc.  if v1 != 0 then goto L40677c;
  #L4067d0.  return @kind void;
  #L4067d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4067d4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4067da.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L4067de.  call `onError`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4067e4.  return @kind void;
  #L4067e6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4067e8.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4067ee.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L4067f2.  call `onError`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4067f8.  return @kind void;
  catch `java.lang.Throwable` @[L40678e..L406796] goto L4067e6;
  catch `java.lang.Throwable` @[L4067a6..L4067be] goto L4067d2;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableConcatIterable$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L406824.  call `a`(v0) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable$a;.a:()V` @kind virtual;
  #L40682a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableConcatIterable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40683c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L406840.  call `onError`(v0, v2) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L406846.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableConcatIterable$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406858.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableConcatIterable$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L40685c.  call temp:= `update`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.update:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L406862.  return @kind void;
}
