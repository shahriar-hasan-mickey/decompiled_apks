record `io.reactivex.internal.operators.completable.CompletableEmpty` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
}
global `io.reactivex.Completable` `@@io.reactivex.internal.operators.completable.CompletableEmpty.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/completable/CompletableEmpty;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L407138.  v0:= new `io.reactivex.internal.operators.completable.CompletableEmpty`;
  #L40713c.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/completable/CompletableEmpty;.<init>:()V` @kind direct;
  #L407142.  `@@io.reactivex.internal.operators.completable.CompletableEmpty.INSTANCE` @type ^`io.reactivex.Completable` := v0 @kind object;
  #L407146.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableEmpty` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableEmpty;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L407158.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L40715e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableEmpty` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableEmpty;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;

  #L407170.  call `complete`(v1) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/CompletableObserver;)V` @kind static;
  #L407176.  return @kind void;
}
