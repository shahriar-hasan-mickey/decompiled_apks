record `io.reactivex.internal.operators.completable.CompletableCreate$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableEmitter` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableCreate$a.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableCreate$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableCreate$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$a;.<init>:(Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L406968.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L40696e.  v0.`io.reactivex.internal.operators.completable.CompletableCreate$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L406972.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableCreate$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L406984.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L40698a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableCreate$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406940.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L406946.  v0:= temp @kind object;
  #L406948.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L40694c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L406952.  v0:= temp;
  #L406954.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableCreate$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40699c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4069a2.  v0:= temp @kind object;
  #L4069a4.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4069a8.  if v0 == v1 then goto L4069e0;
  #L4069ac.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4069b2.  v0:= temp @kind object;
  #L4069b4.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4069b8.  if v0 == v1 then goto L4069e0;
  #L4069bc.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableCreate$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L4069c0.  call `onComplete`(v1) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L4069c6.  if v0 == 0 then goto L4069e0;
  #L4069ca.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4069d0.  goto L4069e0;
  #L4069d2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4069d4.  if v0 == 0 then goto L4069de;
  #L4069d8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4069de.  throw v1;
  #L4069e0.  return @kind void;
  catch `java.lang.Throwable` @[L4069bc..L4069c6] goto L4069d2;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableCreate$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L406a00.  if v3 != 0 then goto L406a12;
  #L406a04.  v3:= new `java.lang.NullPointerException`;
  #L406a08.  v0:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L406a0c.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L406a12.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L406a18.  v0:= temp @kind object;
  #L406a1a.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L406a1e.  if v0 == v1 then goto L406a56;
  #L406a22.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L406a28.  v0:= temp @kind object;
  #L406a2a.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L406a2e.  if v0 == v1 then goto L406a56;
  #L406a32.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableCreate$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L406a36.  call `onError`(v1, v3) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L406a3c.  if v0 == 0 then goto L406a46;
  #L406a40.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L406a46.  return @kind void;
  #L406a48.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L406a4a.  if v0 == 0 then goto L406a54;
  #L406a4e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L406a54.  throw v3;
  #L406a56.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L406a5c.  return @kind void;
  catch `java.lang.Throwable` @[L406a32..L406a3c] goto L406a48;
}
procedure `void` `setCancellable`(`io.reactivex.internal.operators.completable.CompletableCreate$a` v1 @kind this, `io.reactivex.functions.Cancellable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$a;.setCancellable:(Lio/reactivex/functions/Cancellable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406a7c.  v0:= new `io.reactivex.internal.disposables.CancellableDisposable`;
  #L406a80.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/disposables/CancellableDisposable;.<init>:(Lio/reactivex/functions/Cancellable;)V` @kind direct;
  #L406a86.  call `setDisposable`(v1, v0) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$a;.setDisposable:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L406a8c.  return @kind void;
}
procedure `void` `setDisposable`(`io.reactivex.internal.operators.completable.CompletableCreate$a` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$a;.setDisposable:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L406aa0.  call temp:= `set`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L406aa6.  return @kind void;
}
