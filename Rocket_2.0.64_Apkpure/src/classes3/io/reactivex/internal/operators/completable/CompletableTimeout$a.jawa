record `io.reactivex.internal.operators.completable.CompletableTimeout$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.completable.CompletableTimeout$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.completable.CompletableTimeout$a.b` @AccessFlag FINAL;
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableTimeout$a.c` @AccessFlag FINAL;
  `io.reactivex.internal.operators.completable.CompletableTimeout` `io.reactivex.internal.operators.completable.CompletableTimeout$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableTimeout$a` v0 @kind this, `io.reactivex.internal.operators.completable.CompletableTimeout` v1 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v2 @kind object, `io.reactivex.disposables.CompositeDisposable` v3 @kind object, `io.reactivex.CompletableObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$a;.<init>:(Lio/reactivex/internal/operators/completable/CompletableTimeout;Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L408bb4.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$a.d` @type ^`io.reactivex.internal.operators.completable.CompletableTimeout` := v1 @kind object;
  #L408bb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L408bbe.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L408bc2.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v3 @kind object;
  #L408bc6.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$a.c` @type ^`io.reactivex.CompletableObserver` := v4 @kind object;
  #L408bca.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.completable.CompletableTimeout$a` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L408bdc.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L408be0.  v1:= 0I;
  #L408be2.  v2:= 1I;
  #L408be4.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L408bea.  v0:= temp;
  #L408bec.  if v0 == 0 then goto L408c2c;
  #L408bf0.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L408bf4.  call `clear`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.clear:()V` @kind virtual;
  #L408bfa.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$a.d` @type ^`io.reactivex.internal.operators.completable.CompletableTimeout` @kind object;
  #L408bfe.  v0:= v0.`io.reactivex.internal.operators.completable.CompletableTimeout.e` @type ^`io.reactivex.CompletableSource` @kind object;
  #L408c02.  if v0 != 0 then goto L408c1c;
  #L408c06.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$a.c` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L408c0a.  v1:= new `java.util.concurrent.TimeoutException`;
  #L408c0e.  call `<init>`(v1) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L408c14.  call `onError`(v0, v1) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L408c1a.  goto L408c2c;
  #L408c1c.  v1:= new `io.reactivex.internal.operators.completable.CompletableTimeout$a$a`;
  #L408c20.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$a$a;.<init>:(Lio/reactivex/internal/operators/completable/CompletableTimeout$a;)V` @kind direct;
  #L408c26.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L408c2c.  return @kind void;
}
