record `io.reactivex.internal.operators.completable.CompletableMergeArray` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.CompletableSource`[] `io.reactivex.internal.operators.completable.CompletableMergeArray.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableMergeArray` v0 @kind this, `io.reactivex.CompletableSource`[] v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray;.<init>:([Lio/reactivex/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L407ce4.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L407cea.  v0.`io.reactivex.internal.operators.completable.CompletableMergeArray.a` @type ^`io.reactivex.CompletableSource`[] := v1 @kind object;
  #L407cee.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableMergeArray` v6 @kind this, `io.reactivex.CompletableObserver` v7 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L407d00.  v0:= new `io.reactivex.disposables.CompositeDisposable`;
  #L407d04.  call `<init>`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L407d0a.  v1:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L407d0e.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L407d14.  v2:= new `io.reactivex.internal.operators.completable.CompletableMergeArray$a`;
  #L407d18.  v3:= v6.`io.reactivex.internal.operators.completable.CompletableMergeArray.a` @type ^`io.reactivex.CompletableSource`[] @kind object;
  #L407d1c.  v3:= length @variable v3;
  #L407d1e.  v3:= v3 + 1;
  #L407d22.  call `<init>`(v2, v7, v1, v0, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray$a;.<init>:(Lio/reactivex/CompletableObserver;Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;I)V` @kind direct;
  #L407d28.  call `onSubscribe`(v7, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L407d2e.  v7:= v6.`io.reactivex.internal.operators.completable.CompletableMergeArray.a` @type ^`io.reactivex.CompletableSource`[] @kind object;
  #L407d32.  v1:= length @variable v7;
  #L407d34.  v3:= 0I;
  #L407d36.  if v3 >= v1 then goto L407d78;
  #L407d3a.  v4:= v7[v3] @kind object;
  #L407d3e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L407d44.  v5:= temp;
  #L407d46.  if v5 == 0 then goto L407d4c;
  #L407d4a.  return @kind void;
  #L407d4c.  if v4 != 0 then goto L407d6c;
  #L407d50.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L407d56.  v7:= new `java.lang.NullPointerException`;
  #L407d5a.  v0:= "A completable source is null" @kind object;
  #L407d5e.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407d64.  call `onError`(v2, v7) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L407d6a.  return @kind void;
  #L407d6c.  call `subscribe`(v4, v2) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L407d72.  v3:= v3 + 1;
  #L407d76.  goto L407d36;
  #L407d78.  call `onComplete`(v2) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray$a;.onComplete:()V` @kind virtual;
  #L407d7e.  return @kind void;
}
