record `io.reactivex.internal.operators.completable.CompletableFromRunnable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `java.lang.Runnable` `io.reactivex.internal.operators.completable.CompletableFromRunnable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableFromRunnable` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L407524.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L40752a.  v0.`io.reactivex.internal.operators.completable.CompletableFromRunnable.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L40752e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableFromRunnable` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromRunnable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L407540.  call temp:= `empty`() @signature `Lio/reactivex/disposables/Disposables;.empty:()Lio/reactivex/disposables/Disposable;` @kind static;
  #L407546.  v0:= temp @kind object;
  #L407548.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L40754e.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableFromRunnable.a` @type ^`java.lang.Runnable` @kind object;
  #L407552.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L407558.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L40755e.  v0:= temp;
  #L407560.  if v0 != 0 then goto L40756a;
  #L407564.  call `onComplete`(v3) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L40756a.  return @kind void;
  #L40756c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40756e.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L407574.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L40757a.  v0:= temp;
  #L40757c.  if v0 != 0 then goto L407586;
  #L407580.  call `onError`(v3, v1) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L407586.  return @kind void;
  catch `java.lang.Throwable` @[L40754e..L407558] goto L40756c;
}
