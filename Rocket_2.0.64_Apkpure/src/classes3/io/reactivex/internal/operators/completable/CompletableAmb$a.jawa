record `io.reactivex.internal.operators.completable.CompletableAmb$a` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface {
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.completable.CompletableAmb$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.completable.CompletableAmb$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableAmb$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableAmb$a` v0 @kind this, `java.util.concurrent.atomic.AtomicBoolean` v1 @kind object, `io.reactivex.disposables.CompositeDisposable` v2 @kind object, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.<init>:(Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L405cec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L405cf2.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v1 @kind object;
  #L405cf6.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v2 @kind object;
  #L405cfa.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$a.c` @type ^`io.reactivex.CompletableObserver` := v3 @kind object;
  #L405cfe.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableAmb$a` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L405d10.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L405d14.  v1:= 0I;
  #L405d16.  v2:= 1I;
  #L405d18.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L405d1e.  v0:= temp;
  #L405d20.  if v0 == 0 then goto L405d38;
  #L405d24.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L405d28.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L405d2e.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.c` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L405d32.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L405d38.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableAmb$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L405d4c.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L405d50.  v1:= 0I;
  #L405d52.  v2:= 1I;
  #L405d54.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L405d5a.  v0:= temp;
  #L405d5c.  if v0 == 0 then goto L405d76;
  #L405d60.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L405d64.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L405d6a.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.c` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L405d6e.  call `onError`(v0, v4) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L405d74.  goto L405d7c;
  #L405d76.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L405d7c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableAmb$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405d90.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L405d94.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L405d9a.  return @kind void;
}
