record `io.reactivex.internal.schedulers.ExecutorScheduler$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.internal.schedulers.ExecutorScheduler$b` `io.reactivex.internal.schedulers.ExecutorScheduler$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.schedulers.ExecutorScheduler` `io.reactivex.internal.schedulers.ExecutorScheduler$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ExecutorScheduler$a` v0 @kind this, `io.reactivex.internal.schedulers.ExecutorScheduler` v1 @kind object, `io.reactivex.internal.schedulers.ExecutorScheduler$b` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$a;.<init>:(Lio/reactivex/internal/schedulers/ExecutorScheduler;Lio/reactivex/internal/schedulers/ExecutorScheduler$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L453e2c.  v0.`io.reactivex.internal.schedulers.ExecutorScheduler$a.b` @type ^`io.reactivex.internal.schedulers.ExecutorScheduler` := v1 @kind object;
  #L453e30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L453e36.  v0.`io.reactivex.internal.schedulers.ExecutorScheduler$a.a` @type ^`io.reactivex.internal.schedulers.ExecutorScheduler$b` := v2 @kind object;
  #L453e3a.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.ExecutorScheduler$a` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L453e4c.  v0:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$a.a` @type ^`io.reactivex.internal.schedulers.ExecutorScheduler$b` @kind object;
  #L453e50.  v1:= v0.`io.reactivex.internal.schedulers.ExecutorScheduler$b.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L453e54.  v2:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$a.b` @type ^`io.reactivex.internal.schedulers.ExecutorScheduler` @kind object;
  #L453e58.  call temp:= `scheduleDirect`(v2, v0) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L453e5e.  v0:= temp @kind object;
  #L453e60.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L453e66.  return @kind void;
}
