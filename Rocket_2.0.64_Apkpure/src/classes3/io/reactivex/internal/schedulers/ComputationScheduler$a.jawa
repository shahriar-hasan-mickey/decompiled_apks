record `io.reactivex.internal.schedulers.ComputationScheduler$a` @kind class @AccessFlag FINAL extends `io.reactivex.Scheduler$Worker` @kind class {
  `io.reactivex.internal.disposables.ListCompositeDisposable` `io.reactivex.internal.schedulers.ComputationScheduler$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.schedulers.ComputationScheduler$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.disposables.ListCompositeDisposable` `io.reactivex.internal.schedulers.ComputationScheduler$a.c` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.schedulers.ComputationScheduler$c` `io.reactivex.internal.schedulers.ComputationScheduler$a.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.reactivex.internal.schedulers.ComputationScheduler$a.e` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ComputationScheduler$a` v2 @kind this, `io.reactivex.internal.schedulers.ComputationScheduler$c` v3 @kind object) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$a;.<init>:(Lio/reactivex/internal/schedulers/ComputationScheduler$c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L453a08.  call `<init>`(v2) @signature `Lio/reactivex/Scheduler$Worker;.<init>:()V` @kind direct;
  #L453a0e.  v2.`io.reactivex.internal.schedulers.ComputationScheduler$a.d` @type ^`io.reactivex.internal.schedulers.ComputationScheduler$c` := v3 @kind object;
  #L453a12.  v3:= new `io.reactivex.internal.disposables.ListCompositeDisposable`;
  #L453a16.  call `<init>`(v3) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L453a1c.  v2.`io.reactivex.internal.schedulers.ComputationScheduler$a.a` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` := v3 @kind object;
  #L453a20.  v0:= new `io.reactivex.disposables.CompositeDisposable`;
  #L453a24.  call `<init>`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L453a2a.  v2.`io.reactivex.internal.schedulers.ComputationScheduler$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v0 @kind object;
  #L453a2e.  v1:= new `io.reactivex.internal.disposables.ListCompositeDisposable`;
  #L453a32.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L453a38.  v2.`io.reactivex.internal.schedulers.ComputationScheduler$a.c` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` := v1 @kind object;
  #L453a3c.  call temp:= `add`(v1, v3) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L453a42.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L453a48.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.ComputationScheduler$a` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453a5c.  v0:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$a.e` @type ^`boolean` @kind boolean;
  #L453a60.  if v0 != 0 then goto L453a74;
  #L453a64.  v0:= 1I;
  #L453a66.  v1.`io.reactivex.internal.schedulers.ComputationScheduler$a.e` @type ^`boolean` := v0 @kind boolean;
  #L453a6a.  v0:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$a.c` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L453a6e.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.dispose:()V` @kind virtual;
  #L453a74.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.ComputationScheduler$a` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45397c.  v0:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$a.e` @type ^`boolean` @kind boolean;
  #L453980.  return v0;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.ComputationScheduler$a` v6 @kind this, `java.lang.Runnable` v7 @kind object) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$a;.schedule:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L453994.  v0:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$a.e` @type ^`boolean` @kind boolean;
  #L453998.  if v0 == 0 then goto L4539a2;
  #L45399c.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4539a0.  return v7 @kind object;
  #L4539a2.  v0:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$a.d` @type ^`io.reactivex.internal.schedulers.ComputationScheduler$c` @kind object;
  #L4539a6.  v2:= 0L;
  #L4539aa.  v4:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4539ae.  v5:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$a.a` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L4539b2.  v1:= v7 @kind object;
  #L4539b4.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L4539ba.  v7:= temp @kind object;
  #L4539bc.  return v7 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.ComputationScheduler$a` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$a;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4539d0.  v0:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$a.e` @type ^`boolean` @kind boolean;
  #L4539d4.  if v0 == 0 then goto L4539de;
  #L4539d8.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4539dc.  return v7 @kind object;
  #L4539de.  v0:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$a.d` @type ^`io.reactivex.internal.schedulers.ComputationScheduler$c` @kind object;
  #L4539e2.  v5:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L4539e6.  v1:= v7 @kind object;
  #L4539e8.  v2:= v8 @kind wide;
  #L4539ea.  v4:= v10 @kind object;
  #L4539ec.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L4539f2.  v7:= temp @kind object;
  #L4539f4.  return v7 @kind object;
}
