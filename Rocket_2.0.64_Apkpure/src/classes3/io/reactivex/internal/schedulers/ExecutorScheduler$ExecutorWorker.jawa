record `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Scheduler$Worker` @kind class, `java.lang.Runnable` @kind interface {
  `java.util.concurrent.Executor` `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.a` @AccessFlag FINAL;
  `io.reactivex.internal.queue.MpscLinkedQueue` `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @AccessFlag VOLATILE;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.d` @AccessFlag FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4541e8.  call `<init>`(v1) @signature `Lio/reactivex/Scheduler$Worker;.<init>:()V` @kind direct;
  #L4541ee.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L4541f2.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4541f8.  v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.d` @type ^`java.util.concurrent.atomic.AtomicInteger` := v0 @kind object;
  #L4541fc.  v0:= new `io.reactivex.disposables.CompositeDisposable`;
  #L454200.  call `<init>`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L454206.  v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.e` @type ^`io.reactivex.disposables.CompositeDisposable` := v0 @kind object;
  #L45420a.  v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L45420e.  v2:= new `io.reactivex.internal.queue.MpscLinkedQueue`;
  #L454212.  call `<init>`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L454218.  v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.b` @type ^`io.reactivex.internal.queue.MpscLinkedQueue` := v2 @kind object;
  #L45421c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454230.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` @kind boolean;
  #L454234.  if v0 != 0 then goto L454262;
  #L454238.  v0:= 1I;
  #L45423a.  v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` := v0 @kind boolean;
  #L45423e.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.e` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L454242.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L454248.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L45424c.  call temp:= `getAndIncrement`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L454252.  v0:= temp;
  #L454254.  if v0 != 0 then goto L454262;
  #L454258.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.b` @type ^`io.reactivex.internal.queue.MpscLinkedQueue` @kind object;
  #L45425c.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @kind virtual;
  #L454262.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45406c.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` @kind boolean;
  #L454070.  return v0;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L454274.  v0:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.b` @type ^`io.reactivex.internal.queue.MpscLinkedQueue` @kind object;
  #L454278.  v1:= 1I;
  #L45427a.  v2:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` @kind boolean;
  #L45427e.  if v2 == 0 then goto L45428a;
  #L454282.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @kind virtual;
  #L454288.  return @kind void;
  #L45428a.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L454290.  v2:= temp @kind object;
  #L454292.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L454296.  if v2 != 0 then goto L4542be;
  #L45429a.  v2:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` @kind boolean;
  #L45429e.  if v2 == 0 then goto L4542aa;
  #L4542a2.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @kind virtual;
  #L4542a8.  return @kind void;
  #L4542aa.  v2:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4542ae.  v1:= -v1 @kind int;
  #L4542b0.  call temp:= `addAndGet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4542b6.  v1:= temp;
  #L4542b8.  if v1 != 0 then goto L45427a;
  #L4542bc.  return @kind void;
  #L4542be.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L4542c4.  v2:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` @kind boolean;
  #L4542c8.  if v2 == 0 then goto L45428a;
  #L4542cc.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @kind virtual;
  #L4542d2.  return @kind void;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;.schedule:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454084.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` @kind boolean;
  #L454088.  if v0 == 0 then goto L454092;
  #L45408c.  v2:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L454090.  return v2 @kind object;
  #L454092.  call temp:= `onSchedule`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L454098.  v2:= temp @kind object;
  #L45409a.  v0:= new `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$a`;
  #L45409e.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker$a;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L4540a4.  v2:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.b` @type ^`io.reactivex.internal.queue.MpscLinkedQueue` @kind object;
  #L4540a8.  call temp:= `offer`(v2, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4540ae.  v2:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4540b2.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4540b8.  v2:= temp;
  #L4540ba.  if v2 != 0 then goto L4540e8;
  #L4540be.  v2:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L4540c2.  call `execute`(v2, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L4540c8.  goto L4540e8;
  #L4540ca.  v2:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L4540cc.  v0:= 1I;
  #L4540ce.  v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` := v0 @kind boolean;
  #L4540d2.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.b` @type ^`io.reactivex.internal.queue.MpscLinkedQueue` @kind object;
  #L4540d6.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @kind virtual;
  #L4540dc.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4540e2.  v2:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4540e6.  return v2 @kind object;
  #L4540e8.  return v0 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L4540be..L4540c8] goto L4540ca;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker` v4 @kind this, `java.lang.Runnable` v5 @kind object, `long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45410c.  v0:= 0L;
  #L454110.  v2:= lcmp(v6, v0);
  #L454114.  if v2 > 0 then goto L454122;
  #L454118.  call temp:= `schedule`(v4, v5) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;.schedule:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L45411e.  v5:= temp @kind object;
  #L454120.  return v5 @kind object;
  #L454122.  v0:= v4.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` @kind boolean;
  #L454126.  if v0 == 0 then goto L454130;
  #L45412a.  v5:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L45412e.  return v5 @kind object;
  #L454130.  v0:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L454134.  call `<init>`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L45413a.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L45413e.  call `<init>`(v1, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:(Lio/reactivex/disposables/Disposable;)V` @kind direct;
  #L454144.  call temp:= `onSchedule`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L45414a.  v5:= temp @kind object;
  #L45414c.  v2:= new `io.reactivex.internal.schedulers.ScheduledRunnable`;
  #L454150.  v3:= new `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$b`;
  #L454154.  call `<init>`(v3, v4, v1, v5) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker$b;.<init>:(Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;Lio/reactivex/internal/disposables/SequentialDisposable;Ljava/lang/Runnable;)V` @kind direct;
  #L45415a.  v5:= v4.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.e` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L45415e.  call `<init>`(v2, v3, v5) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.<init>:(Ljava/lang/Runnable;Lio/reactivex/internal/disposables/DisposableContainer;)V` @kind direct;
  #L454164.  v5:= v4.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.e` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L454168.  call temp:= `add`(v5, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L45416e.  v5:= v4.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L454172.  v3:= instanceof @variable v5 @type ^`java.util.concurrent.ScheduledExecutorService` @kind boolean;
  #L454176.  if v3 == 0 then goto L4541a2;
  #L45417a.  v5:= (`java.util.concurrent.ScheduledExecutorService`) v5 @kind object;
  #L45417e.  call temp:= `schedule`(v5, v2, v6, v8) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L454184.  v5:= temp @kind object;
  #L454186.  call `setFuture`(v2, v5) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L45418c.  goto L4541be;
  #L45418e.  v5:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L454190.  v6:= 1I;
  #L454192.  v4.`io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.c` @type ^`boolean` := v6 @kind boolean;
  #L454196.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45419c.  v5:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4541a0.  return v5 @kind object;
  #L4541a2.  v5:= `@@io.reactivex.internal.schedulers.ExecutorScheduler.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L4541a6.  call temp:= `scheduleDirect`(v5, v2, v6, v8) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4541ac.  v5:= temp @kind object;
  #L4541ae.  v6:= new `io.reactivex.internal.schedulers.b`;
  #L4541b2.  call `<init>`(v6, v5) @signature `Lio/reactivex/internal/schedulers/b;.<init>:(Lio/reactivex/disposables/Disposable;)V` @kind direct;
  #L4541b8.  call `setFuture`(v2, v6) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L4541be.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L4541c4.  return v1 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L45417a..L45418c] goto L45418e;
}
