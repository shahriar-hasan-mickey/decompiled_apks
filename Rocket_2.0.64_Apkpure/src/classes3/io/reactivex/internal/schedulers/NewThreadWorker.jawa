record `io.reactivex.internal.schedulers.NewThreadWorker` @kind class @AccessFlag PUBLIC extends `io.reactivex.Scheduler$Worker` @kind class {
  `java.util.concurrent.ScheduledExecutorService` `io.reactivex.internal.schedulers.NewThreadWorker.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.reactivex.internal.schedulers.NewThreadWorker.b` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.NewThreadWorker` v0 @kind this, `java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L454dac.  call `<init>`(v0) @signature `Lio/reactivex/Scheduler$Worker;.<init>:()V` @kind direct;
  #L454db2.  call temp:= `create`(v1) @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory;.create:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L454db8.  v1:= temp @kind object;
  #L454dba.  v0.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` := v1 @kind object;
  #L454dbe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454dd0.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` @kind boolean;
  #L454dd4.  if v0 != 0 then goto L454de8;
  #L454dd8.  v0:= 1I;
  #L454dda.  v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` := v0 @kind boolean;
  #L454dde.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L454de2.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L454de8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454bec.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` @kind boolean;
  #L454bf0.  return v0;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L454c04.  v0:= 0L;
  #L454c08.  v2:= 0I;
  #L454c0a.  call temp:= `schedule`(v3, v4, v0, v2) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L454c10.  v4:= temp @kind object;
  #L454c12.  return v4 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.NewThreadWorker` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L454c24.  v0:= v6.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` @kind boolean;
  #L454c28.  if v0 == 0 then goto L454c32;
  #L454c2c.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L454c30.  return v7 @kind object;
  #L454c32.  v5:= 0I;
  #L454c34.  v0:= v6 @kind object;
  #L454c36.  v1:= v7 @kind object;
  #L454c38.  v2:= v8 @kind wide;
  #L454c3a.  v4:= v10 @kind object;
  #L454c3c.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L454c42.  v7:= temp @kind object;
  #L454c44.  return v7 @kind object;
}
procedure `io.reactivex.internal.schedulers.ScheduledRunnable` `scheduleActual`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object, `io.reactivex.internal.disposables.DisposableContainer` v8 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L454d24.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L454d2a.  v4:= temp @kind object;
  #L454d2c.  v0:= new `io.reactivex.internal.schedulers.ScheduledRunnable`;
  #L454d30.  call `<init>`(v0, v4, v8) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.<init>:(Ljava/lang/Runnable;Lio/reactivex/internal/disposables/DisposableContainer;)V` @kind direct;
  #L454d36.  if v8 == 0 then goto L454d48;
  #L454d3a.  call temp:= `add`(v8, v0) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L454d40.  v4:= temp;
  #L454d42.  if v4 != 0 then goto L454d48;
  #L454d46.  return v0 @kind object;
  #L454d48.  v1:= 0L;
  #L454d4c.  v4:= lcmp(v5, v1);
  #L454d50.  if v4 > 0 then goto L454d62;
  #L454d54.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L454d58.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L454d5e.  v4:= temp @kind object;
  #L454d60.  goto L454d6e;
  #L454d62.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L454d66.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L454d6c.  v4:= temp @kind object;
  #L454d6e.  call `setFuture`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L454d74.  goto L454d88;
  #L454d76.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L454d78.  if v8 == 0 then goto L454d82;
  #L454d7c.  call temp:= `remove`(v8, v0) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.remove:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L454d82.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454d88.  return v0 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L454d54..L454d74] goto L454d76;
}
procedure `io.reactivex.disposables.Disposable` `scheduleDirect`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L454c58.  v0:= new `io.reactivex.internal.schedulers.ScheduledDirectTask`;
  #L454c5c.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L454c62.  v4:= temp @kind object;
  #L454c64.  call `<init>`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L454c6a.  v1:= 0L;
  #L454c6e.  v4:= lcmp(v5, v1);
  #L454c72.  if v4 > 0 then goto L454c84;
  #L454c76.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L454c7a.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L454c80.  v4:= temp @kind object;
  #L454c82.  goto L454c90;
  #L454c84.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L454c88.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L454c8e.  v4:= temp @kind object;
  #L454c90.  call `setFuture`(v0, v4) @signature `Lio/reactivex/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L454c96.  return v0 @kind object;
  #L454c98.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L454c9a.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454ca0.  v4:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L454ca4.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L454c76..L454c96] goto L454c98;
}
procedure `io.reactivex.disposables.Disposable` `schedulePeriodicallyDirect`(`io.reactivex.internal.schedulers.NewThreadWorker` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L454cc8.  v7:= new `io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask`;
  #L454ccc.  call temp:= `onSchedule`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L454cd2.  v9:= temp @kind object;
  #L454cd4.  call `<init>`(v7, v9) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectPeriodicTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L454cda.  v0:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L454cde.  v1:= v7 @kind object;
  #L454ce0.  v2:= v10 @kind wide;
  #L454ce2.  v4:= v12 @kind wide;
  #L454ce4.  v6:= v14 @kind object;
  #L454ce6.  call temp:= `scheduleAtFixedRate`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L454cec.  v9:= temp @kind object;
  #L454cee.  call `setFuture`(v7, v9) @signature `Lio/reactivex/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L454cf4.  return v7 @kind object;
  #L454cf6.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L454cf8.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454cfe.  v9:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L454d02.  return v9 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L454cda..L454cf4] goto L454cf6;
}
procedure `void` `shutdown`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454dfc.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` @kind boolean;
  #L454e00.  if v0 != 0 then goto L454e14;
  #L454e04.  v0:= 1I;
  #L454e06.  v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` := v0 @kind boolean;
  #L454e0a.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L454e0e.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L454e14.  return @kind void;
}
