record `io.reactivex.internal.schedulers.SchedulerWhen$g` @kind class @AccessFlag FINAL extends `io.reactivex.disposables.Disposable` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.SchedulerWhen$g` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/SchedulerWhen$g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L455888.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45588e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.SchedulerWhen$g` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/SchedulerWhen$g;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4558a0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.SchedulerWhen$g` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/SchedulerWhen$g;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455874.  v0:= 0I;
  #L455876.  return v0;
}
