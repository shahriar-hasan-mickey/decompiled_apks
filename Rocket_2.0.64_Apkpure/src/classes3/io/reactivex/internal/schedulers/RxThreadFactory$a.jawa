record `io.reactivex.internal.schedulers.RxThreadFactory$a` @kind class @AccessFlag FINAL extends `java.lang.Thread` @kind class, `io.reactivex.internal.schedulers.NonBlockingThread` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.RxThreadFactory$a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/RxThreadFactory$a;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L454e28.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L454e2e.  return @kind void;
}
