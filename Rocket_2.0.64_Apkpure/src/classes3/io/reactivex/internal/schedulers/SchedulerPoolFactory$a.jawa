record `io.reactivex.internal.schedulers.SchedulerPoolFactory$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.SchedulerPoolFactory$a` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4552f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4552fa.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.SchedulerPoolFactory$a` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45530c.  v0:= new `java.util.ArrayList`;
  #L455310.  v1:= `@@io.reactivex.internal.schedulers.SchedulerPoolFactory.b` @type ^`java.util.Map` @kind object;
  #L455314.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L45531a.  v1:= temp @kind object;
  #L45531c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L455322.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L455328.  v0:= temp @kind object;
  #L45532a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L455330.  v1:= temp;
  #L455332.  if v1 == 0 then goto L45536a;
  #L455336.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45533c.  v1:= temp @kind object;
  #L45533e.  v1:= (`java.util.concurrent.ScheduledThreadPoolExecutor`) v1 @kind object;
  #L455342.  call temp:= `isShutdown`(v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isShutdown:()Z` @kind virtual;
  #L455348.  v2:= temp;
  #L45534a.  if v2 == 0 then goto L45535a;
  #L45534e.  v2:= `@@io.reactivex.internal.schedulers.SchedulerPoolFactory.b` @type ^`java.util.Map` @kind object;
  #L455352.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L455358.  goto L45532a;
  #L45535a.  call `purge`(v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.purge:()V` @kind virtual;
  #L455360.  goto L45532a;
  #L455362.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L455364.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45536a.  return @kind void;
  catch `java.lang.Throwable` @[L45530c..L455360] goto L455362;
}
