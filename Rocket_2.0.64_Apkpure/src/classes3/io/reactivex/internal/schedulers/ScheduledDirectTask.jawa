record `io.reactivex.internal.schedulers.ScheduledDirectTask` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.schedulers.a` @kind class, `java.util.concurrent.Callable` @kind interface {
}
global `long` `@@io.reactivex.internal.schedulers.ScheduledDirectTask.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ScheduledDirectTask` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L455040.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/schedulers/a;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L455046.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.schedulers.ScheduledDirectTask` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L454fcc.  call temp:= `call`(v1) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.call:()Ljava/lang/Void;` @kind virtual;
  #L454fd2.  v0:= temp @kind object;
  #L454fd4.  return v0 @kind object;
}
procedure `java.lang.Void` `call`(`io.reactivex.internal.schedulers.ScheduledDirectTask` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.call:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L454fe8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L454fee.  v0:= temp @kind object;
  #L454ff0.  v3.`io.reactivex.internal.schedulers.a.runner` @type ^`java.lang.Thread` := v0 @kind object;
  #L454ff4.  v0:= 0I;
  #L454ff6.  v1:= v3.`io.reactivex.internal.schedulers.a.runnable` @type ^`java.lang.Runnable` @kind object;
  #L454ffa.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L455000.  v1:= `@@io.reactivex.internal.schedulers.a.FINISHED` @type ^`java.util.concurrent.FutureTask` @kind object;
  #L455004.  call `lazySet`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L45500a.  v3.`io.reactivex.internal.schedulers.a.runner` @type ^`java.lang.Thread` := v0 @kind object;
  #L45500e.  return v0 @kind object;
  #L455010.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L455012.  v2:= `@@io.reactivex.internal.schedulers.a.FINISHED` @type ^`java.util.concurrent.FutureTask` @kind object;
  #L455016.  call `lazySet`(v3, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L45501c.  v3.`io.reactivex.internal.schedulers.a.runner` @type ^`java.lang.Thread` := v0 @kind object;
  #L455020.  throw v1;
  catch `java.lang.Throwable` @[L454ff6..L455000] goto L455010;
}
