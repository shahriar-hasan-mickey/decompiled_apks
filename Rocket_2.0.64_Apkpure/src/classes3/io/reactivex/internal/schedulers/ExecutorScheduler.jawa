record `io.reactivex.internal.schedulers.ExecutorScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Scheduler` @kind class {
  `java.util.concurrent.Executor` `io.reactivex.internal.schedulers.ExecutorScheduler.b` @AccessFlag FINAL;
}
global `io.reactivex.Scheduler` `@@io.reactivex.internal.schedulers.ExecutorScheduler.c` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L454488.  call temp:= `single`() @signature `Lio/reactivex/schedulers/Schedulers;.single:()Lio/reactivex/Scheduler;` @kind static;
  #L45448e.  v0:= temp @kind object;
  #L454490.  `@@io.reactivex.internal.schedulers.ExecutorScheduler.c` @type ^`io.reactivex.Scheduler` := v0 @kind object;
  #L454494.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ExecutorScheduler` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4544a8.  call `<init>`(v0) @signature `Lio/reactivex/Scheduler;.<init>:()V` @kind direct;
  #L4544ae.  v0.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L4544b2.  return @kind void;
}
procedure `io.reactivex.Scheduler$Worker` `createWorker`(`io.reactivex.internal.schedulers.ExecutorScheduler` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4542e4.  v0:= new `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker`;
  #L4542e8.  v1:= v2.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L4542ec.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker;.<init>:(Ljava/util/concurrent/Executor;)V` @kind direct;
  #L4542f2.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `scheduleDirect`(`io.reactivex.internal.schedulers.ExecutorScheduler` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454304.  call temp:= `onSchedule`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L45430a.  v2:= temp @kind object;
  #L45430c.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L454310.  v0:= instanceof @variable v0 @type ^`java.util.concurrent.ExecutorService` @kind boolean;
  #L454314.  if v0 == 0 then goto L45433a;
  #L454318.  v0:= new `io.reactivex.internal.schedulers.ScheduledDirectTask`;
  #L45431c.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L454322.  v2:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L454326.  v2:= (`java.util.concurrent.ExecutorService`) v2 @kind object;
  #L45432a.  call temp:= `submit`(v2, v0) @signature `Ljava/util/concurrent/ExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L454330.  v2:= temp @kind object;
  #L454332.  call `setFuture`(v0, v2) @signature `Lio/reactivex/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L454338.  return v0 @kind object;
  #L45433a.  v0:= new `io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$a`;
  #L45433e.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$ExecutorWorker$a;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L454344.  v2:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L454348.  call `execute`(v2, v0) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L45434e.  return v0 @kind object;
  #L454350.  v2:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L454352.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454358.  v2:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L45435c.  return v2 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L45430c..L45434e] goto L454350;
}
procedure `io.reactivex.disposables.Disposable` `scheduleDirect`(`io.reactivex.internal.schedulers.ExecutorScheduler` v2 @kind this, `java.lang.Runnable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L454380.  call temp:= `onSchedule`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L454386.  v3:= temp @kind object;
  #L454388.  v0:= v2.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L45438c.  v0:= instanceof @variable v0 @type ^`java.util.concurrent.ScheduledExecutorService` @kind boolean;
  #L454390.  if v0 == 0 then goto L4543c4;
  #L454394.  v0:= new `io.reactivex.internal.schedulers.ScheduledDirectTask`;
  #L454398.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L45439e.  v3:= v2.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L4543a2.  v3:= (`java.util.concurrent.ScheduledExecutorService`) v3 @kind object;
  #L4543a6.  call temp:= `schedule`(v3, v0, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L4543ac.  v3:= temp @kind object;
  #L4543ae.  call `setFuture`(v0, v3) @signature `Lio/reactivex/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L4543b4.  return v0 @kind object;
  #L4543b6.  v3:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L4543b8.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4543be.  v3:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4543c2.  return v3 @kind object;
  #L4543c4.  v0:= new `io.reactivex.internal.schedulers.ExecutorScheduler$b`;
  #L4543c8.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$b;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L4543ce.  v3:= `@@io.reactivex.internal.schedulers.ExecutorScheduler.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L4543d2.  v1:= new `io.reactivex.internal.schedulers.ExecutorScheduler$a`;
  #L4543d6.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$a;.<init>:(Lio/reactivex/internal/schedulers/ExecutorScheduler;Lio/reactivex/internal/schedulers/ExecutorScheduler$b;)V` @kind direct;
  #L4543dc.  call temp:= `scheduleDirect`(v3, v1, v4, v6) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4543e2.  v3:= temp @kind object;
  #L4543e4.  v4:= v0.`io.reactivex.internal.schedulers.ExecutorScheduler$b.a` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L4543e8.  call temp:= `replace`(v4, v3) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L4543ee.  return v0 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L454394..L4543b4] goto L4543b6;
}
procedure `io.reactivex.disposables.Disposable` `schedulePeriodicallyDirect`(`io.reactivex.internal.schedulers.ExecutorScheduler` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L454410.  v0:= v8.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L454414.  v0:= instanceof @variable v0 @type ^`java.util.concurrent.ScheduledExecutorService` @kind boolean;
  #L454418.  if v0 == 0 then goto L45445e;
  #L45441c.  call temp:= `onSchedule`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L454422.  v9:= temp @kind object;
  #L454424.  v7:= new `io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask`;
  #L454428.  call `<init>`(v7, v9) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectPeriodicTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L45442e.  v9:= v8.`io.reactivex.internal.schedulers.ExecutorScheduler.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L454432.  v0:= v9 @kind object;
  #L454434.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L454438.  v1:= v7 @kind object;
  #L45443a.  v2:= v10 @kind wide;
  #L45443c.  v4:= v12 @kind wide;
  #L45443e.  v6:= v14 @kind object;
  #L454440.  call temp:= `scheduleAtFixedRate`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L454446.  v9:= temp @kind object;
  #L454448.  call `setFuture`(v7, v9) @signature `Lio/reactivex/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L45444e.  return v7 @kind object;
  #L454450.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L454452.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454458.  v9:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L45445c.  return v9 @kind object;
  #L45445e.  call temp:= `schedulePeriodicallyDirect`(v8, v9, v10, v12, v14) @signature `Lio/reactivex/Scheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind super;
  #L454464.  v9:= temp @kind object;
  #L454466.  return v9 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L454424..L45444e] goto L454450;
}
