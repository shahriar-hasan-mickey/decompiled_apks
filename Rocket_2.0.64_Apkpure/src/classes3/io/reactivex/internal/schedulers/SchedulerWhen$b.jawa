record `io.reactivex.internal.schedulers.SchedulerWhen$b` @kind class @AccessFlag  extends `io.reactivex.internal.schedulers.SchedulerWhen$f` @kind class {
  `java.lang.Runnable` `io.reactivex.internal.schedulers.SchedulerWhen$b.a` @AccessFlag PRIVATE_FINAL;
  `long` `io.reactivex.internal.schedulers.SchedulerWhen$b.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.schedulers.SchedulerWhen$b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.SchedulerWhen$b` v0 @kind this, `java.lang.Runnable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/SchedulerWhen$b;.<init>:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4555f8.  call `<init>`(v0) @signature `Lio/reactivex/internal/schedulers/SchedulerWhen$f;.<init>:()V` @kind direct;
  #L4555fe.  v0.`io.reactivex.internal.schedulers.SchedulerWhen$b.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L455602.  v0.`io.reactivex.internal.schedulers.SchedulerWhen$b.b` @type ^`long` := v2 @kind wide;
  #L455606.  v0.`io.reactivex.internal.schedulers.SchedulerWhen$b.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L45560a.  return @kind void;
}
procedure `io.reactivex.disposables.Disposable` `b`(`io.reactivex.internal.schedulers.SchedulerWhen$b` v3 @kind this, `io.reactivex.Scheduler$Worker` v4 @kind object, `io.reactivex.CompletableObserver` v5 @kind object) @signature `Lio/reactivex/internal/schedulers/SchedulerWhen$b;.b:(Lio/reactivex/Scheduler$Worker;Lio/reactivex/CompletableObserver;)Lio/reactivex/disposables/Disposable;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4555c8.  v0:= new `io.reactivex.internal.schedulers.SchedulerWhen$d`;
  #L4555cc.  v1:= v3.`io.reactivex.internal.schedulers.SchedulerWhen$b.a` @type ^`java.lang.Runnable` @kind object;
  #L4555d0.  call `<init>`(v0, v1, v5) @signature `Lio/reactivex/internal/schedulers/SchedulerWhen$d;.<init>:(Ljava/lang/Runnable;Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L4555d6.  v1:= v3.`io.reactivex.internal.schedulers.SchedulerWhen$b.b` @type ^`long` @kind wide;
  #L4555da.  v5:= v3.`io.reactivex.internal.schedulers.SchedulerWhen$b.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4555de.  call temp:= `schedule`(v4, v0, v1, v5) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4555e4.  v4:= temp @kind object;
  #L4555e6.  return v4 @kind object;
}
