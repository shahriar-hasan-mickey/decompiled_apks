record `io.reactivex.internal.schedulers.IoScheduler$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.schedulers.IoScheduler$a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentLinkedQueue` `io.reactivex.internal.schedulers.IoScheduler$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.schedulers.IoScheduler$a.c` @AccessFlag FINAL;
  `java.util.concurrent.ScheduledExecutorService` `io.reactivex.internal.schedulers.IoScheduler$a.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Future` `io.reactivex.internal.schedulers.IoScheduler$a.e` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ThreadFactory` `io.reactivex.internal.schedulers.IoScheduler$a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.IoScheduler$a` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `java.util.concurrent.ThreadFactory` v11 @kind object) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.<init>:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4546b0.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4546b6.  if v10 == 0 then goto L4546c4;
  #L4546ba.  call temp:= `toNanos`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L4546c0.  v8:= temp @kind wide;
  #L4546c2.  goto L4546c8;
  #L4546c4.  v8:= 0L;
  #L4546c8.  v4:= v8 @kind wide;
  #L4546ca.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.a` @type ^`long` := v4 @kind wide;
  #L4546ce.  v8:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L4546d2.  call `<init>`(v8) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L4546d8.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` := v8 @kind object;
  #L4546dc.  v8:= new `io.reactivex.disposables.CompositeDisposable`;
  #L4546e0.  call `<init>`(v8) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4546e6.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` := v8 @kind object;
  #L4546ea.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.f` @type ^`java.util.concurrent.ThreadFactory` := v11 @kind object;
  #L4546ee.  v8:= 0I;
  #L4546f0.  if v10 == 0 then goto L454716;
  #L4546f4.  v8:= 1I;
  #L4546f6.  v9:= `@@io.reactivex.internal.schedulers.IoScheduler.e` @type ^`io.reactivex.internal.schedulers.RxThreadFactory` @kind object;
  #L4546fa.  call temp:= `newScheduledThreadPool`(v8, v9) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L454700.  v8:= temp @kind object;
  #L454702.  v6:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L454706.  v0:= v8 @kind object;
  #L454708.  v1:= v7 @kind object;
  #L45470a.  v2:= v4 @kind wide;
  #L45470c.  call temp:= `scheduleWithFixedDelay`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L454712.  v9:= temp @kind object;
  #L454714.  goto L454718;
  #L454716.  v9:= v8 @kind object;
  #L454718.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.d` @type ^`java.util.concurrent.ScheduledExecutorService` := v8 @kind object;
  #L45471c.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.e` @type ^`java.util.concurrent.Future` := v9 @kind object;
  #L454720.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.schedulers.IoScheduler$a` v7 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L454734.  v0:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L454738.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L45473e.  v0:= temp;
  #L454740.  if v0 != 0 then goto L45479c;
  #L454744.  call temp:= `c`(v7) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.c:()J` @kind virtual;
  #L45474a.  v0:= temp @kind wide;
  #L45474c.  v2:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L454750.  call temp:= `iterator`(v2) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L454756.  v2:= temp @kind object;
  #L454758.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45475e.  v3:= temp;
  #L454760.  if v3 == 0 then goto L45479c;
  #L454764.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45476a.  v3:= temp @kind object;
  #L45476c.  v3:= (`io.reactivex.internal.schedulers.IoScheduler$c`) v3 @kind object;
  #L454770.  call temp:= `a`(v3) @signature `Lio/reactivex/internal/schedulers/IoScheduler$c;.a:()J` @kind virtual;
  #L454776.  v4:= temp @kind wide;
  #L454778.  v6:= lcmp(v4, v0);
  #L45477c.  if v6 > 0 then goto L45479c;
  #L454780.  v4:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L454784.  call temp:= `remove`(v4, v3) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L45478a.  v4:= temp;
  #L45478c.  if v4 == 0 then goto L454758;
  #L454790.  v4:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L454794.  call temp:= `remove`(v4, v3) @signature `Lio/reactivex/disposables/CompositeDisposable;.remove:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L45479a.  goto L454758;
  #L45479c.  return @kind void;
}
procedure `io.reactivex.internal.schedulers.IoScheduler$c` `b`(`io.reactivex.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.b:()Lio/reactivex/internal/schedulers/IoScheduler$c;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L45462c.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L454630.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L454636.  v0:= temp;
  #L454638.  if v0 == 0 then goto L454642;
  #L45463c.  v0:= `@@io.reactivex.internal.schedulers.IoScheduler.g` @type ^`io.reactivex.internal.schedulers.IoScheduler$c` @kind object;
  #L454640.  return v0 @kind object;
  #L454642.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L454646.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L45464c.  v0:= temp;
  #L45464e.  if v0 != 0 then goto L454668;
  #L454652.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L454656.  call temp:= `poll`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L45465c.  v0:= temp @kind object;
  #L45465e.  v0:= (`io.reactivex.internal.schedulers.IoScheduler$c`) v0 @kind object;
  #L454662.  if v0 == 0 then goto L454642;
  #L454666.  return v0 @kind object;
  #L454668.  v0:= new `io.reactivex.internal.schedulers.IoScheduler$c`;
  #L45466c.  v1:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.f` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L454670.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/schedulers/IoScheduler$c;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L454676.  v1:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L45467a.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L454680.  return v0 @kind object;
}
procedure `long` `c`(`io.reactivex.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.c:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L454694.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L45469a.  v0:= temp @kind wide;
  #L45469c.  return v0 @kind wide;
}
procedure `void` `d`(`io.reactivex.internal.schedulers.IoScheduler$a` v4 @kind this, `io.reactivex.internal.schedulers.IoScheduler$c` v5 @kind object) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.d:(Lio/reactivex/internal/schedulers/IoScheduler$c;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4547b0.  call temp:= `c`(v4) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.c:()J` @kind virtual;
  #L4547b6.  v0:= temp @kind wide;
  #L4547b8.  v2:= v4.`io.reactivex.internal.schedulers.IoScheduler$a.a` @type ^`long` @kind wide;
  #L4547bc.  v0:= v0 + v2 @kind long;
  #L4547be.  call `b`(v5, v0) @signature `Lio/reactivex/internal/schedulers/IoScheduler$c;.b:(J)V` @kind virtual;
  #L4547c4.  v0:= v4.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L4547c8.  call temp:= `offer`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4547ce.  return @kind void;
}
procedure `void` `e`(`io.reactivex.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4547f8.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L4547fc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L454802.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.e` @type ^`java.util.concurrent.Future` @kind object;
  #L454806.  if v0 == 0 then goto L454812;
  #L45480a.  v1:= 1I;
  #L45480c.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L454812.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.d` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L454816.  if v0 == 0 then goto L454820;
  #L45481a.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L454820.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.IoScheduler$a` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.run:()V` @AccessFlag PUBLIC {
    temp;

  #L4547e0.  call `a`(v0) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.a:()V` @kind virtual;
  #L4547e6.  return @kind void;
}
