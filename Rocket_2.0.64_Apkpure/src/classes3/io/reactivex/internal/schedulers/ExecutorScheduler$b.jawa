record `io.reactivex.internal.schedulers.ExecutorScheduler$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `java.lang.Runnable` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.schedulers.ExecutorScheduler$b.a` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.schedulers.ExecutorScheduler$b.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.schedulers.ExecutorScheduler$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ExecutorScheduler$b` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$b;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L453e9c.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L453ea2.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L453ea6.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L453eac.  v0.`io.reactivex.internal.schedulers.ExecutorScheduler$b.a` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L453eb0.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L453eb4.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L453eba.  v0.`io.reactivex.internal.schedulers.ExecutorScheduler$b.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L453ebe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.ExecutorScheduler$b` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453ed0.  v0:= 0I;
  #L453ed2.  call temp:= `getAndSet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L453ed8.  v0:= temp @kind object;
  #L453eda.  if v0 == 0 then goto L453ef2;
  #L453ede.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$b.a` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L453ee2.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L453ee8.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$b.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L453eec.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L453ef2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.ExecutorScheduler$b` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453e78.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L453e7e.  v0:= temp @kind object;
  #L453e80.  if v0 != 0 then goto L453e88;
  #L453e84.  v0:= 1I;
  #L453e86.  goto L453e8a;
  #L453e88.  v0:= 0I;
  #L453e8a.  return v0;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.ExecutorScheduler$b` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L453f04.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L453f0a.  v0:= temp @kind object;
  #L453f0c.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L453f10.  if v0 == 0 then goto L453f62;
  #L453f14.  v1:= 0I;
  #L453f16.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L453f1c.  call `lazySet`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L453f22.  v0:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$b.a` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L453f26.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L453f2a.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L453f30.  v0:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$b.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L453f34.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L453f3a.  goto L453f62;
  #L453f3c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L453f3e.  call `lazySet`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L453f44.  v1:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$b.a` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L453f48.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L453f4c.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L453f52.  v1:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$b.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L453f56.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L453f5a.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L453f60.  throw v0;
  #L453f62.  return @kind void;
  catch `java.lang.Throwable` @[L453f16..L453f1c] goto L453f3c;
}
