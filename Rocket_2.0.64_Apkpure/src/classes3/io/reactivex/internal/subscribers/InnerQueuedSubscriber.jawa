record `io.reactivex.internal.subscribers.InnerQueuedSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @AccessFlag FINAL;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @AccessFlag FINAL;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.c` @AccessFlag FINAL;
  `io.reactivex.internal.fuseable.SimpleQueue` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.e` @AccessFlag VOLATILE;
  `long` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @AccessFlag ;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.subscribers.InnerQueuedSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v0 @kind this, `io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.<init>:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L456ed4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L456eda.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` := v1 @kind object;
  #L456ede.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int` := v2;
  #L456ee2.  v1:= v2 ^> 2;
  #L456ee6.  v2:= v2 - v1 @kind int;
  #L456ee8.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.c` @type ^`int` := v2;
  #L456eec.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L456f00.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L456f06.  return @kind void;
}
procedure `boolean` `isDone`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456ea4.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` @kind boolean;
  #L456ea8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456f18.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L456f1c.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerComplete:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;)V` @kind interface;
  #L456f22.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456f34.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L456f38.  call `innerError`(v0, v1, v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerError:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;Ljava/lang/Throwable;)V` @kind interface;
  #L456f3e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456f50.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int`;
  #L456f54.  if v0 != 0 then goto L456f64;
  #L456f58.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L456f5c.  call `innerNext`(v0, v1, v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerNext:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;Ljava/lang/Object;)V` @kind interface;
  #L456f62.  goto L456f6e;
  #L456f64.  v2:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L456f68.  call `drain`(v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.drain:()V` @kind interface;
  #L456f6e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v3 @kind this, `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L456f80.  call temp:= `setOnce`(v3, v4) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L456f86.  v0:= temp;
  #L456f88.  if v0 == 0 then goto L456ff6;
  #L456f8c.  v0:= instanceof @variable v4 @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind boolean;
  #L456f90.  if v0 == 0 then goto L456fdc;
  #L456f94.  v0:= v4 @kind object;
  #L456f96.  v0:= (`io.reactivex.internal.fuseable.QueueSubscription`) v0 @kind object;
  #L456f9a.  v1:= 3I;
  #L456f9c.  call temp:= `requestFusion`(v0, v1) @signature `Lio/reactivex/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L456fa2.  v1:= temp;
  #L456fa4.  v2:= 1I;
  #L456fa6.  if v1 != v2 then goto L456fc2;
  #L456faa.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int` := v1;
  #L456fae.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L456fb2.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` := v2 @kind boolean;
  #L456fb6.  v4:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L456fba.  call `innerComplete`(v4, v3) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerComplete:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;)V` @kind interface;
  #L456fc0.  return @kind void;
  #L456fc2.  v2:= 2I;
  #L456fc4.  if v1 != v2 then goto L456fdc;
  #L456fc8.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int` := v1;
  #L456fcc.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L456fd0.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L456fd4.  call `request`(v4, v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @kind static;
  #L456fda.  return @kind void;
  #L456fdc.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L456fe0.  call temp:= `createQueue`(v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.createQueue:(I)Lio/reactivex/internal/fuseable/SimpleQueue;` @kind static;
  #L456fe6.  v0:= temp @kind object;
  #L456fe8.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L456fec.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L456ff0.  call `request`(v4, v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @kind static;
  #L456ff6.  return @kind void;
}
procedure `io.reactivex.internal.fuseable.SimpleQueue` `queue`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.queue:()Lio/reactivex/internal/fuseable/SimpleQueue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456ebc.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.internal.fuseable.SimpleQueue` @kind object;
  #L456ec0.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L457008.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int`;
  #L45700c.  v1:= 1I;
  #L45700e.  if v0 == v1 then goto L457046;
  #L457012.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` @kind wide;
  #L457016.  v0:= v0 + v4 @kind long;
  #L457018.  v4:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.c` @type ^`int`;
  #L45701c.  v4:= (`long`) v4 @kind i2l;
  #L45701e.  v2:= lcmp(v0, v4);
  #L457022.  if v2 < 0 then goto L457042;
  #L457026.  v4:= 0L;
  #L45702a.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v4 @kind wide;
  #L45702e.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L457034.  v4:= temp @kind object;
  #L457036.  v4:= (`org.reactivestreams.Subscription`) v4 @kind object;
  #L45703a.  call `request`(v4, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L457040.  goto L457046;
  #L457042.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v0 @kind wide;
  #L457046.  return @kind void;
}
procedure `void` `requestOne`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v5 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.requestOne:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L457058.  v0:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int`;
  #L45705c.  v1:= 1I;
  #L45705e.  if v0 == v1 then goto L45709a;
  #L457062.  v0:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` @kind wide;
  #L457066.  v2:= 1L;
  #L45706a.  v0:= v0 + v2 @kind long;
  #L45706c.  v2:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.c` @type ^`int`;
  #L457070.  v2:= (`long`) v2 @kind i2l;
  #L457072.  v4:= lcmp(v0, v2);
  #L457076.  if v4 != 0 then goto L457096;
  #L45707a.  v2:= 0L;
  #L45707e.  v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v2 @kind wide;
  #L457082.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L457088.  v2:= temp @kind object;
  #L45708a.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L45708e.  call `request`(v2, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L457094.  goto L45709a;
  #L457096.  v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v0 @kind wide;
  #L45709a.  return @kind void;
}
procedure `void` `setDone`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.setDone:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4570ac.  v0:= 1I;
  #L4570ae.  v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` := v0 @kind boolean;
  #L4570b2.  return @kind void;
}
