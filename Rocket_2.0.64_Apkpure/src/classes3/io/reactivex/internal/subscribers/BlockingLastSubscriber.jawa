record `io.reactivex.internal.subscribers.BlockingLastSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.subscribers.BlockingBaseSubscriber` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.subscribers.BlockingLastSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/BlockingLastSubscriber;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4566d0.  call `<init>`(v0) @signature `Lio/reactivex/internal/subscribers/BlockingBaseSubscriber;.<init>:()V` @kind direct;
  #L4566d6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.BlockingLastSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BlockingLastSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4566e8.  v0:= 0I;
  #L4566ea.  v1.`io.reactivex.internal.subscribers.BlockingBaseSubscriber.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4566ee.  v1.`io.reactivex.internal.subscribers.BlockingBaseSubscriber.b` @type ^`java.lang.Throwable` := v2 @kind object;
  #L4566f2.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L4566f8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.subscribers.BlockingLastSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/BlockingLastSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L45670c.  v0.`io.reactivex.internal.subscribers.BlockingBaseSubscriber.a` @type ^`java.lang.Object` := v1 @kind object;
  #L456710.  return @kind void;
}
