record `io.reactivex.internal.disposables.SequentialDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.internal.disposables.SequentialDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.disposables.SequentialDisposable` v0 @kind this) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L402730.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L402736.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.disposables.SequentialDisposable` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L402748.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L40274e.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L402754.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.SequentialDisposable` v0 @kind this) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L402768.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L40276e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.SequentialDisposable` v1 @kind this) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4026d0.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4026d6.  v0:= temp @kind object;
  #L4026d8.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4026dc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4026e2.  v0:= temp;
  #L4026e4.  return v0;
}
procedure `boolean` `replace`(`io.reactivex.internal.disposables.SequentialDisposable` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;

  #L4026f8.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4026fe.  v1:= temp;
  #L402700.  return v1;
}
procedure `boolean` `update`(`io.reactivex.internal.disposables.SequentialDisposable` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.update:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;

  #L402714.  call temp:= `set`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L40271a.  v1:= temp;
  #L40271c.  return v1;
}
