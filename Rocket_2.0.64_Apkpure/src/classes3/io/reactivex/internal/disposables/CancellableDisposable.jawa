record `io.reactivex.internal.disposables.CancellableDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.internal.disposables.CancellableDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.disposables.CancellableDisposable` v0 @kind this, `io.reactivex.functions.Cancellable` v1 @kind object) @signature `Lio/reactivex/internal/disposables/CancellableDisposable;.<init>:(Lio/reactivex/functions/Cancellable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L401a70.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L401a76.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.CancellableDisposable` v1 @kind this) @signature `Lio/reactivex/internal/disposables/CancellableDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401a88.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L401a8e.  v0:= temp @kind object;
  #L401a90.  if v0 == 0 then goto L401abc;
  #L401a94.  v0:= 0I;
  #L401a96.  call temp:= `getAndSet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L401a9c.  v0:= temp @kind object;
  #L401a9e.  v0:= (`io.reactivex.functions.Cancellable`) v0 @kind object;
  #L401aa2.  if v0 == 0 then goto L401abc;
  #L401aa6.  call `cancel`(v0) @signature `Lio/reactivex/functions/Cancellable;.cancel:()V` @kind interface;
  #L401aac.  goto L401abc;
  #L401aae.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L401ab0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L401ab6.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L401abc.  return @kind void;
  catch `java.lang.Exception` @[L401aa6..L401aac] goto L401aae;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.CancellableDisposable` v1 @kind this) @signature `Lio/reactivex/internal/disposables/CancellableDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401a4c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L401a52.  v0:= temp @kind object;
  #L401a54.  if v0 != 0 then goto L401a5c;
  #L401a58.  v0:= 1I;
  #L401a5a.  goto L401a5e;
  #L401a5c.  v0:= 0I;
  #L401a5e.  return v0;
}
