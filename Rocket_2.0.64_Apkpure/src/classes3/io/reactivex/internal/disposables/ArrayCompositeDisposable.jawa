record `io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.internal.disposables.ArrayCompositeDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4019d0.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L4019d6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v4 @kind this) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4019e8.  v0:= 0I;
  #L4019ea.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4019f0.  v1:= temp @kind object;
  #L4019f2.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4019f6.  if v1 == v2 then goto L401a3a;
  #L4019fa.  call temp:= `length`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L401a00.  v1:= temp;
  #L401a02.  if v0 >= v1 then goto L401a3a;
  #L401a06.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L401a0c.  v2:= temp @kind object;
  #L401a0e.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L401a12.  v3:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L401a16.  if v2 == v3 then goto L401a34;
  #L401a1a.  call temp:= `getAndSet`(v4, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L401a20.  v2:= temp @kind object;
  #L401a22.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L401a26.  if v2 == v3 then goto L401a34;
  #L401a2a.  if v2 == 0 then goto L401a34;
  #L401a2e.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L401a34.  v0:= v0 + 1;
  #L401a38.  goto L401a02;
  #L401a3a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v3 @kind this) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L401924.  v0:= 0I;
  #L401926.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L40192c.  v1:= temp @kind object;
  #L40192e.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L401932.  if v1 != v2 then goto L401938;
  #L401936.  v0:= 1I;
  #L401938.  return v0;
}
procedure `io.reactivex.disposables.Disposable` `replaceResource`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.disposables.Disposable` v4 @kind object) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.replaceResource:(ILio/reactivex/disposables/Disposable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L401994.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L40199a.  v0:= temp @kind object;
  #L40199c.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4019a0.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4019a4.  if v0 != v1 then goto L4019b2;
  #L4019a8.  call `dispose`(v4) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4019ae.  v3:= 0I;
  #L4019b0.  return v3 @kind object;
  #L4019b2.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4019b8.  v1:= temp;
  #L4019ba.  if v1 == 0 then goto L401994;
  #L4019be.  return v0 @kind object;
}
procedure `boolean` `setResource`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.disposables.Disposable` v4 @kind object) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.setResource:(ILio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40194c.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L401952.  v0:= temp @kind object;
  #L401954.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L401958.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L40195c.  if v0 != v1 then goto L40196a;
  #L401960.  call `dispose`(v4) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L401966.  v3:= 0I;
  #L401968.  return v3;
  #L40196a.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L401970.  v1:= temp;
  #L401972.  if v1 == 0 then goto L40194c;
  #L401976.  if v0 == 0 then goto L401980;
  #L40197a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L401980.  v3:= 1I;
  #L401982.  return v3;
}
