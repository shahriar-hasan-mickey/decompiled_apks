record `io.reactivex.internal.util.VolatileSizeArrayList` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `java.util.List` @kind interface {
  `java.util.ArrayList` `io.reactivex.internal.util.VolatileSizeArrayList.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.util.VolatileSizeArrayList.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45b478.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L45b47e.  v0:= new `java.util.ArrayList`;
  #L45b482.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45b488.  v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L45b48c.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45b4a0.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L45b4a6.  v0:= new `java.util.ArrayList`;
  #L45b4aa.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L45b4b0.  v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L45b4b4.  return @kind void;
}
procedure `void` `add`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b4c8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b4cc.  call `add`(v0, v2, v3) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L45b4d2.  v2:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b4d6.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L45b4dc.  v2:= temp;
  #L45b4de.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b4e4.  return @kind void;
}
procedure `boolean` `add`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b0ec.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b0f0.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L45b0f6.  v2:= temp;
  #L45b0f8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b0fc.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L45b102.  v0:= temp;
  #L45b104.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b10a.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b11c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b120.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/ArrayList;.addAll:(ILjava/util/Collection;)Z` @kind virtual;
  #L45b126.  v2:= temp;
  #L45b128.  v3:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b12c.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L45b132.  v3:= temp;
  #L45b134.  call `lazySet`(v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b13a.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b14c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b150.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L45b156.  v2:= temp;
  #L45b158.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b15c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L45b162.  v0:= temp;
  #L45b164.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b16a.  return v2;
}
procedure `void` `clear`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b4f8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b4fc.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L45b502.  v0:= 0I;
  #L45b504.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b50a.  return @kind void;
}
procedure `boolean` `contains`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b17c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b180.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L45b186.  v2:= temp;
  #L45b188.  return v2;
}
procedure `boolean` `containsAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b19c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b1a0.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/ArrayList;.containsAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L45b1a6.  v2:= temp;
  #L45b1a8.  return v2;
}
procedure `boolean` `equals`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b1bc.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.util.VolatileSizeArrayList` @kind boolean;
  #L45b1c0.  if v0 == 0 then goto L45b1da;
  #L45b1c4.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b1c8.  v2:= (`io.reactivex.internal.util.VolatileSizeArrayList`) v2 @kind object;
  #L45b1cc.  v2:= v2.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b1d0.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45b1d6.  v2:= temp;
  #L45b1d8.  return v2;
  #L45b1da.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b1de.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45b1e4.  v2:= temp;
  #L45b1e6.  return v2;
}
procedure `java.lang.Object` `get`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b328.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b32c.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L45b332.  v2:= temp @kind object;
  #L45b334.  return v2 @kind object;
}
procedure `int` `hashCode`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b2ac.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b2b0.  call temp:= `hashCode`(v0) @signature `Ljava/util/ArrayList;.hashCode:()I` @kind virtual;
  #L45b2b6.  v0:= temp;
  #L45b2b8.  return v0;
}
procedure `int` `indexOf`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b2cc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b2d0.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/ArrayList;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L45b2d6.  v2:= temp;
  #L45b2d8.  return v2;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b1f8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L45b1fe.  v0:= temp;
  #L45b200.  if v0 != 0 then goto L45b208;
  #L45b204.  v0:= 1I;
  #L45b206.  goto L45b20a;
  #L45b208.  v0:= 0I;
  #L45b20a.  return v0;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b3f8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b3fc.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L45b402.  v0:= temp @kind object;
  #L45b404.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b2ec.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b2f0.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/ArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L45b2f6.  v2:= temp;
  #L45b2f8.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b438.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b43c.  call temp:= `listIterator`(v0) @signature `Ljava/util/ArrayList;.listIterator:()Ljava/util/ListIterator;` @kind virtual;
  #L45b442.  v0:= temp @kind object;
  #L45b444.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b458.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b45c.  call temp:= `listIterator`(v0, v2) @signature `Ljava/util/ArrayList;.listIterator:(I)Ljava/util/ListIterator;` @kind virtual;
  #L45b462.  v2:= temp @kind object;
  #L45b464.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b348.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b34c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L45b352.  v2:= temp @kind object;
  #L45b354.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b358.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L45b35e.  v0:= temp;
  #L45b360.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b366.  return v2 @kind object;
}
procedure `boolean` `remove`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b21c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b220.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L45b226.  v2:= temp;
  #L45b228.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b22c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L45b232.  v0:= temp;
  #L45b234.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b23a.  return v2;
}
procedure `boolean` `removeAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b24c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b250.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/ArrayList;.removeAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L45b256.  v2:= temp;
  #L45b258.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b25c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L45b262.  v0:= temp;
  #L45b264.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b26a.  return v2;
}
procedure `boolean` `retainAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b27c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b280.  call temp:= `retainAll`(v0, v2) @signature `Ljava/util/ArrayList;.retainAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L45b286.  v2:= temp;
  #L45b288.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b28c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L45b292.  v0:= temp;
  #L45b294.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L45b29a.  return v2;
}
procedure `java.lang.Object` `set`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b378.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b37c.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L45b382.  v2:= temp @kind object;
  #L45b384.  return v2 @kind object;
}
procedure `int` `size`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b30c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L45b312.  v0:= temp;
  #L45b314.  return v0;
}
procedure `java.util.List` `subList`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b418.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b41c.  call temp:= `subList`(v0, v2, v3) @signature `Ljava/util/ArrayList;.subList:(II)Ljava/util/List;` @kind virtual;
  #L45b422.  v2:= temp @kind object;
  #L45b424.  return v2 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b398.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b39c.  call temp:= `toArray`(v0) @signature `Ljava/util/ArrayList;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L45b3a2.  v0:= temp @kind object;
  #L45b3a4.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b3b8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b3bc.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L45b3c2.  v2:= temp @kind object;
  #L45b3c4.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b3d8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L45b3dc.  call temp:= `toString`(v0) @signature `Ljava/util/ArrayList;.toString:()Ljava/lang/String;` @kind virtual;
  #L45b3e2.  v0:= temp @kind object;
  #L45b3e4.  return v0 @kind object;
}
