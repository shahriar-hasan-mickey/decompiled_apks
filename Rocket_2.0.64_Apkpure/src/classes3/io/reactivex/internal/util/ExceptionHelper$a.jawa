record `io.reactivex.internal.util.ExceptionHelper$a` @kind class @AccessFlag FINAL extends `java.lang.Throwable` @kind class {
}
global `long` `@@io.reactivex.internal.util.ExceptionHelper$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.util.ExceptionHelper$a` v1 @kind this) @signature `Lio/reactivex/internal/util/ExceptionHelper$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L459bf4.  v0:= "No further exceptions" @kind object;
  #L459bf8.  call `<init>`(v1, v0) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L459bfe.  return @kind void;
}
procedure `java.lang.Throwable` `fillInStackTrace`(`io.reactivex.internal.util.ExceptionHelper$a` v0 @kind this) @signature `Lio/reactivex/internal/util/ExceptionHelper$a;.fillInStackTrace:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L459be0.  return v0 @kind object;
}
