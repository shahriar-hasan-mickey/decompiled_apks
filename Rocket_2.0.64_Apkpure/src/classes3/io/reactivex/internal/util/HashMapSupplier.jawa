record `io.reactivex.internal.util.HashMapSupplier` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `java.util.concurrent.Callable` @kind interface {
}
global `io.reactivex.internal.util.HashMapSupplier` `@@io.reactivex.internal.util.HashMapSupplier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.util.HashMapSupplier`[] `@@io.reactivex.internal.util.HashMapSupplier.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L45a008.  v0:= new `io.reactivex.internal.util.HashMapSupplier`;
  #L45a00c.  v1:= "INSTANCE" @kind object;
  #L45a010.  v2:= 0I;
  #L45a012.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/util/HashMapSupplier;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45a018.  `@@io.reactivex.internal.util.HashMapSupplier.INSTANCE` @type ^`io.reactivex.internal.util.HashMapSupplier` := v0 @kind object;
  #L45a01c.  v1:= 1I;
  #L45a01e.  v1:= new `io.reactivex.internal.util.HashMapSupplier`[v1];
  #L45a022.  v1[v2]:= v0 @kind object;
  #L45a026.  `@@io.reactivex.internal.util.HashMapSupplier.a` @type ^`io.reactivex.internal.util.HashMapSupplier`[] := v1 @kind object;
  #L45a02a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.HashMapSupplier` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/util/HashMapSupplier;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L45a03c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45a042.  return @kind void;
}
procedure `java.util.concurrent.Callable` `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L459ff0.  v0:= `@@io.reactivex.internal.util.HashMapSupplier.INSTANCE` @type ^`io.reactivex.internal.util.HashMapSupplier` @kind object;
  #L459ff4.  return v0 @kind object;
}
procedure `io.reactivex.internal.util.HashMapSupplier` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/util/HashMapSupplier;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/util/HashMapSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L459f70.  v0:= constclass @type ^`io.reactivex.internal.util.HashMapSupplier` @kind object;
  #L459f74.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L459f7a.  v1:= temp @kind object;
  #L459f7c.  v1:= (`io.reactivex.internal.util.HashMapSupplier`) v1 @kind object;
  #L459f80.  return v1 @kind object;
}
procedure `io.reactivex.internal.util.HashMapSupplier`[] `values`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.values:()[Lio/reactivex/internal/util/HashMapSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L459f94.  v0:= `@@io.reactivex.internal.util.HashMapSupplier.a` @type ^`io.reactivex.internal.util.HashMapSupplier`[] @kind object;
  #L459f98.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/util/HashMapSupplier;.clone:()Ljava/lang/Object;` @kind virtual;
  #L459f9e.  v0:= temp @kind object;
  #L459fa0.  v0:= (`io.reactivex.internal.util.HashMapSupplier`[]) v0 @kind object;
  #L459fa4.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.util.HashMapSupplier` v1 @kind this) @signature `Lio/reactivex/internal/util/HashMapSupplier;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L459fb8.  call temp:= `call`(v1) @signature `Lio/reactivex/internal/util/HashMapSupplier;.call:()Ljava/util/Map;` @kind virtual;
  #L459fbe.  v0:= temp @kind object;
  #L459fc0.  return v0 @kind object;
}
procedure `java.util.Map` `call`(`io.reactivex.internal.util.HashMapSupplier` v1 @kind this) @signature `Lio/reactivex/internal/util/HashMapSupplier;.call:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459fd4.  v0:= new `java.util.HashMap`;
  #L459fd8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L459fde.  return v0 @kind object;
}
