record `io.reactivex.internal.util.LinkedArrayList` @kind class @AccessFlag PUBLIC {
  `int` `io.reactivex.internal.util.LinkedArrayList.a` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.internal.util.LinkedArrayList.b` @AccessFlag ;
  `java.lang.Object`[] `io.reactivex.internal.util.LinkedArrayList.c` @AccessFlag ;
  `int` `io.reactivex.internal.util.LinkedArrayList.d` @AccessFlag VOLATILE;
  `int` `io.reactivex.internal.util.LinkedArrayList.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.util.LinkedArrayList` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/util/LinkedArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45a0e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45a0ee.  v0.`io.reactivex.internal.util.LinkedArrayList.a` @type ^`int` := v1;
  #L45a0f2.  return @kind void;
}
procedure `void` `add`(`io.reactivex.internal.util.LinkedArrayList` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/util/LinkedArrayList;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45a104.  v0:= v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L45a108.  v1:= 0I;
  #L45a10a.  v2:= 1I;
  #L45a10c.  if v0 != 0 then goto L45a130;
  #L45a110.  v0:= v4.`io.reactivex.internal.util.LinkedArrayList.a` @type ^`int`;
  #L45a114.  v0:= v0 + v2 @kind int;
  #L45a116.  v0:= new `java.lang.Object`[v0];
  #L45a11a.  v4.`io.reactivex.internal.util.LinkedArrayList.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L45a11e.  v4.`io.reactivex.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L45a122.  v0[v1]:= v5 @kind object;
  #L45a126.  v4.`io.reactivex.internal.util.LinkedArrayList.e` @type ^`int` := v2;
  #L45a12a.  v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int` := v2;
  #L45a12e.  goto L45a17c;
  #L45a130.  v0:= v4.`io.reactivex.internal.util.LinkedArrayList.e` @type ^`int`;
  #L45a134.  v3:= v4.`io.reactivex.internal.util.LinkedArrayList.a` @type ^`int`;
  #L45a138.  if v0 != v3 then goto L45a164;
  #L45a13c.  v0:= v3 + 1;
  #L45a140.  v0:= new `java.lang.Object`[v0];
  #L45a144.  v0[v1]:= v5 @kind object;
  #L45a148.  v5:= v4.`io.reactivex.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L45a14c.  v5[v3]:= v0 @kind object;
  #L45a150.  v4.`io.reactivex.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L45a154.  v4.`io.reactivex.internal.util.LinkedArrayList.e` @type ^`int` := v2;
  #L45a158.  v5:= v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L45a15c.  v5:= v5 + v2 @kind int;
  #L45a15e.  v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int` := v5;
  #L45a162.  goto L45a17c;
  #L45a164.  v1:= v4.`io.reactivex.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L45a168.  v1[v0]:= v5 @kind object;
  #L45a16c.  v0:= v0 + v2 @kind int;
  #L45a16e.  v4.`io.reactivex.internal.util.LinkedArrayList.e` @type ^`int` := v0;
  #L45a172.  v5:= v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L45a176.  v5:= v5 + v2 @kind int;
  #L45a178.  v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int` := v5;
  #L45a17c.  return @kind void;
}
procedure `java.lang.Object`[] `head`(`io.reactivex.internal.util.LinkedArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/LinkedArrayList;.head:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45a06c.  v0:= v1.`io.reactivex.internal.util.LinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L45a070.  return v0 @kind object;
}
procedure `int` `size`(`io.reactivex.internal.util.LinkedArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/LinkedArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45a054.  v0:= v1.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L45a058.  return v0;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.util.LinkedArrayList` v8 @kind this) @signature `Lio/reactivex/internal/util/LinkedArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L45a084.  v0:= v8.`io.reactivex.internal.util.LinkedArrayList.a` @type ^`int`;
  #L45a088.  v1:= v8.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L45a08c.  v2:= new `java.util.ArrayList`;
  #L45a090.  v3:= v1 + 1;
  #L45a094.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L45a09a.  call temp:= `head`(v8) @signature `Lio/reactivex/internal/util/LinkedArrayList;.head:()[Ljava/lang/Object;` @kind virtual;
  #L45a0a0.  v3:= temp @kind object;
  #L45a0a2.  v4:= 0I;
  #L45a0a4.  v5:= 0I;
  #L45a0a6.  v6:= 0I;
  #L45a0a8.  if v5 >= v1 then goto L45a0cc;
  #L45a0ac.  v7:= v3[v6] @kind object;
  #L45a0b0.  call temp:= `add`(v2, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45a0b6.  v5:= v5 + 1;
  #L45a0ba.  v6:= v6 + 1;
  #L45a0be.  if v6 != v0 then goto L45a0a8;
  #L45a0c2.  v3:= v3[v0] @kind object;
  #L45a0c6.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L45a0ca.  goto L45a0a6;
  #L45a0cc.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L45a0d2.  v0:= temp @kind object;
  #L45a0d4.  return v0 @kind object;
}
