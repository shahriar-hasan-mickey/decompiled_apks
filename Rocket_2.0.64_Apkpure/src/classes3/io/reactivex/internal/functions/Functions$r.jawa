record `io.reactivex.internal.functions.Functions$r` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Predicate` @kind interface {
  `java.lang.Object` `io.reactivex.internal.functions.Functions$r.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$r` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$r;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L402f84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L402f8a.  v0.`io.reactivex.internal.functions.Functions$r.a` @type ^`java.lang.Object` := v1 @kind object;
  #L402f8e.  return @kind void;
}
procedure `boolean` `test`(`io.reactivex.internal.functions.Functions$r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/functions/Functions$r;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L402f64.  v0:= v1.`io.reactivex.internal.functions.Functions$r.a` @type ^`java.lang.Object` @kind object;
  #L402f68.  call temp:= `equals`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L402f6e.  v2:= temp;
  #L402f70.  return v2;
}
