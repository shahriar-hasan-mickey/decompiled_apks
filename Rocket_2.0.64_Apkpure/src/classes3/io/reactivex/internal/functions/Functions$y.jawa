record `io.reactivex.internal.functions.Functions$y` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `java.util.Comparator` `io.reactivex.internal.functions.Functions$y.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$y` v0 @kind this, `java.util.Comparator` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$y;.<init>:(Ljava/util/Comparator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4031e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4031ee.  v0.`io.reactivex.internal.functions.Functions$y.a` @type ^`java.util.Comparator` := v1 @kind object;
  #L4031f2.  return @kind void;
}
procedure `java.util.List` `a`(`io.reactivex.internal.functions.Functions$y` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lio/reactivex/internal/functions/Functions$y;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4031cc.  v0:= v1.`io.reactivex.internal.functions.Functions$y.a` @type ^`java.util.Comparator` @kind object;
  #L4031d0.  call `sort`(v2, v0) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L4031d6.  return v2 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.functions.Functions$y` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$y;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4031ac.  v1:= (`java.util.List`) v1 @kind object;
  #L4031b0.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/functions/Functions$y;.a:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L4031b6.  v1:= temp @kind object;
  #L4031b8.  return v1 @kind object;
}
