record `io.reactivex.internal.observers.BlockingFirstObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.observers.BlockingBaseObserver` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.observers.BlockingFirstObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L404228.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.<init>:()V` @kind direct;
  #L40422e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.BlockingFirstObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404240.  v0:= v1.`io.reactivex.internal.observers.BlockingBaseObserver.a` @type ^`java.lang.Object` @kind object;
  #L404244.  if v0 != 0 then goto L40424c;
  #L404248.  v1.`io.reactivex.internal.observers.BlockingBaseObserver.b` @type ^`java.lang.Throwable` := v2 @kind object;
  #L40424c.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L404252.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.BlockingFirstObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404264.  v0:= v1.`io.reactivex.internal.observers.BlockingBaseObserver.a` @type ^`java.lang.Object` @kind object;
  #L404268.  if v0 != 0 then goto L404280;
  #L40426c.  v1.`io.reactivex.internal.observers.BlockingBaseObserver.a` @type ^`java.lang.Object` := v2 @kind object;
  #L404270.  v2:= v1.`io.reactivex.internal.observers.BlockingBaseObserver.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404274.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L40427a.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L404280.  return @kind void;
}
