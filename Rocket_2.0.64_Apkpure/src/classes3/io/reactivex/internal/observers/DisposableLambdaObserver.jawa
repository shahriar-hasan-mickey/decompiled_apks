record `io.reactivex.internal.observers.DisposableLambdaObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.observers.DisposableLambdaObserver.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.DisposableLambdaObserver.b` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.observers.DisposableLambdaObserver.c` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.observers.DisposableLambdaObserver.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.DisposableLambdaObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L404c44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L404c4a.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L404c4e.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L404c52.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.c` @type ^`io.reactivex.functions.Action` := v3 @kind object;
  #L404c56.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404c68.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.c` @type ^`io.reactivex.functions.Action` @kind object;
  #L404c6c.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L404c72.  goto L404c82;
  #L404c74.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L404c76.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L404c7c.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L404c82.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404c86.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L404c8c.  return @kind void;
  catch `java.lang.Throwable` @[L404c68..L404c72] goto L404c74;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404c24.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404c28.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L404c2e.  v0:= temp;
  #L404c30.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.DisposableLambdaObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L404cac.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404cb0.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L404cb4.  if v0 == v1 then goto L404cc2;
  #L404cb8.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L404cbc.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L404cc2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.DisposableLambdaObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L404cd4.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404cd8.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L404cdc.  if v0 == v1 then goto L404cec;
  #L404ce0.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L404ce4.  call `onError`(v0, v3) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L404cea.  goto L404cf2;
  #L404cec.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L404cf2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404d04.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L404d08.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L404d0e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404d20.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L404d24.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L404d2a.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404d2e.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L404d34.  v0:= temp;
  #L404d36.  if v0 == 0 then goto L404d48;
  #L404d3a.  v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L404d3e.  v2:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L404d42.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L404d48.  return @kind void;
  #L404d4a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L404d4c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L404d52.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L404d58.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L404d5c.  v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L404d60.  v2:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L404d64.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L404d6a.  return @kind void;
  catch `java.lang.Throwable` @[L404d20..L404d2a] goto L404d4a;
}
