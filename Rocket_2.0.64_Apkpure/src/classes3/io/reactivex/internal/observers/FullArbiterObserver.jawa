record `io.reactivex.internal.observers.FullArbiterObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.internal.disposables.ObserverFullArbiter` `io.reactivex.internal.observers.FullArbiterObserver.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.observers.FullArbiterObserver.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.FullArbiterObserver` v0 @kind this, `io.reactivex.internal.disposables.ObserverFullArbiter` v1 @kind object) @signature `Lio/reactivex/internal/observers/FullArbiterObserver;.<init>:(Lio/reactivex/internal/disposables/ObserverFullArbiter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L404fc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L404fce.  v0.`io.reactivex.internal.observers.FullArbiterObserver.a` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` := v1 @kind object;
  #L404fd2.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.FullArbiterObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/FullArbiterObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L404fe4.  v0:= v2.`io.reactivex.internal.observers.FullArbiterObserver.a` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L404fe8.  v1:= v2.`io.reactivex.internal.observers.FullArbiterObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404fec.  call `onComplete`(v0, v1) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.onComplete:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L404ff2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.FullArbiterObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/observers/FullArbiterObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L405004.  v0:= v2.`io.reactivex.internal.observers.FullArbiterObserver.a` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L405008.  v1:= v2.`io.reactivex.internal.observers.FullArbiterObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L40500c.  call `onError`(v0, v3, v1) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.onError:(Ljava/lang/Throwable;Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L405012.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.FullArbiterObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/observers/FullArbiterObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L405024.  v0:= v2.`io.reactivex.internal.observers.FullArbiterObserver.a` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L405028.  v1:= v2.`io.reactivex.internal.observers.FullArbiterObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L40502c.  call temp:= `onNext`(v0, v3, v1) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.onNext:(Ljava/lang/Object;Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L405032.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.FullArbiterObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/observers/FullArbiterObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405044.  v0:= v1.`io.reactivex.internal.observers.FullArbiterObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L405048.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L40504e.  v0:= temp;
  #L405050.  if v0 == 0 then goto L405062;
  #L405054.  v1.`io.reactivex.internal.observers.FullArbiterObserver.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L405058.  v0:= v1.`io.reactivex.internal.observers.FullArbiterObserver.a` @type ^`io.reactivex.internal.disposables.ObserverFullArbiter` @kind object;
  #L40505c.  call temp:= `setDisposable`(v0, v2) @signature `Lio/reactivex/internal/disposables/ObserverFullArbiter;.setDisposable:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L405062.  return @kind void;
}
