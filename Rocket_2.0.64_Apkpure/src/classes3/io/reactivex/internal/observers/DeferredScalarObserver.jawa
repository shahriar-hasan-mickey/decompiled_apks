record `io.reactivex.internal.observers.DeferredScalarObserver` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.internal.observers.DeferredScalarDisposable` @kind class, `io.reactivex.Observer` @kind interface {
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.observers.DeferredScalarObserver.s` @AccessFlag PROTECTED;
}
global `long` `@@io.reactivex.internal.observers.DeferredScalarObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.DeferredScalarObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L404b68.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L404b6e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.DeferredScalarObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404b80.  call `dispose`(v1) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.dispose:()V` @kind super;
  #L404b86.  v0:= v1.`io.reactivex.internal.observers.DeferredScalarObserver.s` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404b8a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L404b90.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.DeferredScalarObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L404ba4.  v0:= v2.`io.reactivex.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` @kind object;
  #L404ba8.  if v0 == 0 then goto L404bba;
  #L404bac.  v1:= 0I;
  #L404bae.  v2.`io.reactivex.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` := v1 @kind object;
  #L404bb2.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L404bb8.  goto L404bc0;
  #L404bba.  call `complete`(v2) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.complete:()V` @kind virtual;
  #L404bc0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.DeferredScalarObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404bd4.  v0:= 0I;
  #L404bd6.  v1.`io.reactivex.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` := v0 @kind object;
  #L404bda.  call `error`(v1, v2) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.error:(Ljava/lang/Throwable;)V` @kind virtual;
  #L404be0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.DeferredScalarObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404bf4.  v0:= v1.`io.reactivex.internal.observers.DeferredScalarObserver.s` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L404bf8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L404bfe.  v0:= temp;
  #L404c00.  if v0 == 0 then goto L404c12;
  #L404c04.  v1.`io.reactivex.internal.observers.DeferredScalarObserver.s` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L404c08.  v2:= v1.`io.reactivex.internal.observers.DeferredScalarDisposable.actual` @type ^`io.reactivex.Observer` @kind object;
  #L404c0c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L404c12.  return @kind void;
}
