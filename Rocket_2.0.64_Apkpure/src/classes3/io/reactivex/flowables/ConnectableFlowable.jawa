record `io.reactivex.flowables.ConnectableFlowable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.Flowable` @kind class {
}
procedure `void` `<init>`(`io.reactivex.flowables.ConnectableFlowable` v0 @kind this) @signature `Lio/reactivex/flowables/ConnectableFlowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4018d8.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L4018de.  return @kind void;
}
procedure `io.reactivex.Flowable` `autoConnect`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401814.  v0:= 1I;
  #L401816.  call temp:= `autoConnect`(v1, v0) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:(I)Lio/reactivex/Flowable;` @kind virtual;
  #L40181c.  v0:= temp @kind object;
  #L40181e.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `autoConnect`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:(I)Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401830.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L401836.  v0:= temp @kind object;
  #L401838.  call temp:= `autoConnect`(v1, v2, v0) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:(ILio/reactivex/functions/Consumer;)Lio/reactivex/Flowable;` @kind virtual;
  #L40183e.  v2:= temp @kind object;
  #L401840.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `autoConnect`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this, `int` v2 , `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:(ILio/reactivex/functions/Consumer;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401854.  if v2 > 0 then goto L401868;
  #L401858.  call `connect`(v1, v3) @signature `Lio/reactivex/flowables/ConnectableFlowable;.connect:(Lio/reactivex/functions/Consumer;)V` @kind virtual;
  #L40185e.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/flowables/ConnectableFlowable;)Lio/reactivex/flowables/ConnectableFlowable;` @kind static;
  #L401864.  v2:= temp @kind object;
  #L401866.  return v2 @kind object;
  #L401868.  v0:= new `io.reactivex.internal.operators.flowable.FlowableAutoConnect`;
  #L40186c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableAutoConnect;.<init>:(Lio/reactivex/flowables/ConnectableFlowable;ILio/reactivex/functions/Consumer;)V` @kind direct;
  #L401872.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L401878.  v2:= temp @kind object;
  #L40187a.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `connect`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/flowables/ConnectableFlowable;.connect:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4018b0.  v0:= new `io.reactivex.internal.util.ConnectConsumer`;
  #L4018b4.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/ConnectConsumer;.<init>:()V` @kind direct;
  #L4018ba.  call `connect`(v1, v0) @signature `Lio/reactivex/flowables/ConnectableFlowable;.connect:(Lio/reactivex/functions/Consumer;)V` @kind virtual;
  #L4018c0.  v0:= v0.`io.reactivex.internal.util.ConnectConsumer.disposable` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4018c4.  return v0 @kind object;
}
procedure `void` `connect`(`io.reactivex.functions.Consumer` v0 @kind object) @signature `Lio/reactivex/flowables/ConnectableFlowable;.connect:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.reactivex.Flowable` `refCount`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40188c.  v0:= new `io.reactivex.internal.operators.flowable.FlowableRefCount`;
  #L401890.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableRefCount;.<init>:(Lio/reactivex/flowables/ConnectableFlowable;)V` @kind direct;
  #L401896.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L40189c.  v0:= temp @kind object;
  #L40189e.  return v0 @kind object;
}
