record `io.reactivex.Single` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.SingleSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Single` v0 @kind this) @signature `Lio/reactivex/Single;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L400708.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40070e.  return @kind void;
}
procedure `io.reactivex.Single` `a`(`io.reactivex.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `io.reactivex.SingleSource` v13 @kind object) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ffec4.  v0:= "unit is null" @kind object;
  #L3ffec8.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffece.  v0:= "scheduler is null" @kind object;
  #L3ffed2.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffed8.  v0:= new `io.reactivex.internal.operators.single.SingleTimeout`;
  #L3ffedc.  v1:= v0 @kind object;
  #L3ffede.  v2:= v8 @kind object;
  #L3ffee0.  v3:= v9 @kind wide;
  #L3ffee2.  v5:= v11 @kind object;
  #L3ffee4.  v6:= v12 @kind object;
  #L3ffee6.  v7:= v13 @kind object;
  #L3ffee8.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/single/SingleTimeout;.<init>:(Lio/reactivex/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ffeee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffef4.  v9:= temp @kind object;
  #L3ffef6.  return v9 @kind object;
}
procedure `io.reactivex.Single` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Single;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ff3b4.  v0:= "sources is null" @kind object;
  #L3ff3b8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff3be.  v0:= new `io.reactivex.internal.operators.single.SingleAmb`;
  #L3ff3c2.  v1:= 0I;
  #L3ff3c4.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3ff3ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff3d0.  v2:= temp @kind object;
  #L3ff3d2.  return v2 @kind object;
}
procedure `io.reactivex.Single` `ambArray`(`io.reactivex.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/Single;.ambArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ff3e4.  v0:= length @variable v2;
  #L3ff3e6.  if v0 != 0 then goto L3ff3fc;
  #L3ff3ea.  call temp:= `emptyThrower`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.emptyThrower:()Ljava/util/concurrent/Callable;` @kind static;
  #L3ff3f0.  v2:= temp @kind object;
  #L3ff3f2.  call temp:= `error`(v2) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @kind static;
  #L3ff3f8.  v2:= temp @kind object;
  #L3ff3fa.  return v2 @kind object;
  #L3ff3fc.  v0:= length @variable v2;
  #L3ff3fe.  v1:= 1I;
  #L3ff400.  if v0 != v1 then goto L3ff414;
  #L3ff404.  v0:= 0I;
  #L3ff406.  v2:= v2[v0] @kind object;
  #L3ff40a.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3ff410.  v2:= temp @kind object;
  #L3ff412.  return v2 @kind object;
  #L3ff414.  v0:= new `io.reactivex.internal.operators.single.SingleAmb`;
  #L3ff418.  v1:= 0I;
  #L3ff41a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3ff420.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff426.  v2:= temp @kind object;
  #L3ff428.  return v2 @kind object;
}
procedure `io.reactivex.Single` `b`(`io.reactivex.Flowable` v2 @kind object) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3fff64.  v0:= new `io.reactivex.internal.operators.flowable.FlowableSingleSingle`;
  #L3fff68.  v1:= 0I;
  #L3fff6a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L3fff70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fff76.  v2:= temp @kind object;
  #L3fff78.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fedb4.  v0:= "source1 is null" @kind object;
  #L3fedb8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fedbe.  v0:= "source2 is null" @kind object;
  #L3fedc2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fedc8.  v0:= 2I;
  #L3fedca.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3fedce.  v1:= 0I;
  #L3fedd0.  v0[v1]:= v2 @kind object;
  #L3fedd4.  v2:= 1I;
  #L3fedd6.  v0[v2]:= v3 @kind object;
  #L3fedda.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3fede0.  v2:= temp @kind object;
  #L3fede2.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3fede8.  v2:= temp @kind object;
  #L3fedea.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fedfc.  v0:= "source1 is null" @kind object;
  #L3fee00.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fee06.  v0:= "source2 is null" @kind object;
  #L3fee0a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fee10.  v0:= "source3 is null" @kind object;
  #L3fee14.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fee1a.  v0:= 3I;
  #L3fee1c.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3fee20.  v1:= 0I;
  #L3fee22.  v0[v1]:= v2 @kind object;
  #L3fee26.  v2:= 1I;
  #L3fee28.  v0[v2]:= v3 @kind object;
  #L3fee2c.  v2:= 2I;
  #L3fee2e.  v0[v2]:= v4 @kind object;
  #L3fee32.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3fee38.  v2:= temp @kind object;
  #L3fee3a.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3fee40.  v2:= temp @kind object;
  #L3fee42.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fee54.  v0:= "source1 is null" @kind object;
  #L3fee58.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fee5e.  v0:= "source2 is null" @kind object;
  #L3fee62.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fee68.  v0:= "source3 is null" @kind object;
  #L3fee6c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fee72.  v0:= "source4 is null" @kind object;
  #L3fee76.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fee7c.  v0:= 4I;
  #L3fee7e.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3fee82.  v1:= 0I;
  #L3fee84.  v0[v1]:= v2 @kind object;
  #L3fee88.  v2:= 1I;
  #L3fee8a.  v0[v2]:= v3 @kind object;
  #L3fee8e.  v2:= 2I;
  #L3fee90.  v0[v2]:= v4 @kind object;
  #L3fee94.  v2:= 3I;
  #L3fee96.  v0[v2]:= v5 @kind object;
  #L3fee9a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3feea0.  v2:= temp @kind object;
  #L3feea2.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3feea8.  v2:= temp @kind object;
  #L3feeaa.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`java.lang.Iterable` v0 @kind object) @signature `Lio/reactivex/Single;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3feebc.  call temp:= `fromIterable`(v0) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L3feec2.  v0:= temp @kind object;
  #L3feec4.  call temp:= `concat`(v0) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3feeca.  v0:= temp @kind object;
  #L3feecc.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3feee0.  v0:= 2I;
  #L3feee2.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Flowable;` @kind static;
  #L3feee8.  v1:= temp @kind object;
  #L3feeea.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`org.reactivestreams.Publisher` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3feefc.  v0:= "sources is null" @kind object;
  #L3fef00.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fef06.  v0:= "prefetch" @kind object;
  #L3fef0a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fef10.  v0:= new `io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher`;
  #L3fef14.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3fef1a.  v1:= temp @kind object;
  #L3fef1c.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3fef20.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3fef26.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3fef2c.  v3:= temp @kind object;
  #L3fef2e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff2e8.  v0:= "sources is null" @kind object;
  #L3ff2ec.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff2f2.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3ff2f6.  call temp:= `toObservable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toObservable:()Lio/reactivex/functions/Function;` @kind static;
  #L3ff2fc.  v1:= temp @kind object;
  #L3ff2fe.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3ff302.  v3:= 2I;
  #L3ff304.  call `<init>`(v0, v4, v1, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3ff30a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3ff310.  v4:= temp @kind object;
  #L3ff312.  return v4 @kind object;
}
procedure `io.reactivex.Flowable` `concatArray`(`io.reactivex.SingleSource`[] v4 @kind object) @signature `Lio/reactivex/Single;.concatArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fef40.  v0:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap`;
  #L3fef44.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3fef4a.  v4:= temp @kind object;
  #L3fef4c.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3fef52.  v1:= temp @kind object;
  #L3fef54.  v2:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3fef58.  v3:= 2I;
  #L3fef5a.  call `<init>`(v0, v4, v1, v3, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3fef60.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3fef66.  v4:= temp @kind object;
  #L3fef68.  return v4 @kind object;
}
procedure `io.reactivex.Single` `create`(`io.reactivex.SingleOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Single;.create:(Lio/reactivex/SingleOnSubscribe;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff554.  v0:= "source is null" @kind object;
  #L3ff558.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff55e.  v0:= new `io.reactivex.internal.operators.single.SingleCreate`;
  #L3ff562.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleCreate;.<init>:(Lio/reactivex/SingleOnSubscribe;)V` @kind direct;
  #L3ff568.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff56e.  v1:= temp @kind object;
  #L3ff570.  return v1 @kind object;
}
procedure `io.reactivex.Single` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff584.  v0:= "singleSupplier is null" @kind object;
  #L3ff588.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff58e.  v0:= new `io.reactivex.internal.operators.single.SingleDefer`;
  #L3ff592.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3ff598.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff59e.  v1:= temp @kind object;
  #L3ff5a0.  return v1 @kind object;
}
procedure `io.reactivex.Single` `equals`(`io.reactivex.SingleSource` v1 @kind object, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.equals:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff8a4.  v0:= "first is null" @kind object;
  #L3ff8a8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff8ae.  v0:= "second is null" @kind object;
  #L3ff8b2.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff8b8.  v0:= new `io.reactivex.internal.operators.single.SingleEquals`;
  #L3ff8bc.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleEquals;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ff8c2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff8c8.  v1:= temp @kind object;
  #L3ff8ca.  return v1 @kind object;
}
procedure `io.reactivex.Single` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff8dc.  v0:= "error is null" @kind object;
  #L3ff8e0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff8e6.  call temp:= `justCallable`(v1) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L3ff8ec.  v1:= temp @kind object;
  #L3ff8ee.  call temp:= `error`(v1) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @kind static;
  #L3ff8f4.  v1:= temp @kind object;
  #L3ff8f6.  return v1 @kind object;
}
procedure `io.reactivex.Single` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff908.  v0:= "errorSupplier is null" @kind object;
  #L3ff90c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff912.  v0:= new `io.reactivex.internal.operators.single.SingleError`;
  #L3ff916.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleError;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3ff91c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff922.  v1:= temp @kind object;
  #L3ff924.  return v1 @kind object;
}
procedure `io.reactivex.Single` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff968.  v0:= "callable is null" @kind object;
  #L3ff96c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff972.  v0:= new `io.reactivex.internal.operators.single.SingleFromCallable`;
  #L3ff976.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3ff97c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff982.  v1:= temp @kind object;
  #L3ff984.  return v1 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ff998.  call temp:= `fromFuture`(v0) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Flowable;` @kind static;
  #L3ff99e.  v0:= temp @kind object;
  #L3ff9a0.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ff9a6.  v0:= temp @kind object;
  #L3ff9a8.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ff9e0.  call temp:= `fromFuture`(v0, v1, v3) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Flowable;` @kind static;
  #L3ff9e6.  v0:= temp @kind object;
  #L3ff9e8.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ff9ee.  v0:= temp @kind object;
  #L3ff9f0.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ffa04.  call temp:= `fromFuture`(v0, v1, v3, v4) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind static;
  #L3ffa0a.  v0:= temp @kind object;
  #L3ffa0c.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ffa12.  v0:= temp @kind object;
  #L3ffa14.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ff9bc.  call temp:= `fromFuture`(v0, v1) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind static;
  #L3ff9c2.  v0:= temp @kind object;
  #L3ff9c4.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ff9ca.  v0:= temp @kind object;
  #L3ff9cc.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromObservable`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Single;.fromObservable:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ffa28.  v0:= "observableSource is null" @kind object;
  #L3ffa2c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffa32.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L3ffa36.  v1:= 0I;
  #L3ffa38.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3ffa3e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffa44.  v2:= temp @kind object;
  #L3ffa46.  return v2 @kind object;
}
procedure `io.reactivex.Single` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Single;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ffa58.  v0:= "publisher is null" @kind object;
  #L3ffa5c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffa62.  v0:= new `io.reactivex.internal.operators.single.SingleFromPublisher`;
  #L3ffa66.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3ffa6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffa72.  v1:= temp @kind object;
  #L3ffa74.  return v1 @kind object;
}
procedure `io.reactivex.Single` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Single;.just:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ffaac.  v0:= "value is null" @kind object;
  #L3ffab0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffab6.  v0:= new `io.reactivex.internal.operators.single.SingleJust`;
  #L3ffaba.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ffac0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffac6.  v1:= temp @kind object;
  #L3ffac8.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fefec.  v0:= "source1 is null" @kind object;
  #L3feff0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3feff6.  v0:= "source2 is null" @kind object;
  #L3feffa.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff000.  v0:= 2I;
  #L3ff002.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3ff006.  v1:= 0I;
  #L3ff008.  v0[v1]:= v2 @kind object;
  #L3ff00c.  v2:= 1I;
  #L3ff00e.  v0[v2]:= v3 @kind object;
  #L3ff012.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3ff018.  v2:= temp @kind object;
  #L3ff01a.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3ff020.  v2:= temp @kind object;
  #L3ff022.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ff034.  v0:= "source1 is null" @kind object;
  #L3ff038.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff03e.  v0:= "source2 is null" @kind object;
  #L3ff042.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff048.  v0:= "source3 is null" @kind object;
  #L3ff04c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff052.  v0:= 3I;
  #L3ff054.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3ff058.  v1:= 0I;
  #L3ff05a.  v0[v1]:= v2 @kind object;
  #L3ff05e.  v2:= 1I;
  #L3ff060.  v0[v2]:= v3 @kind object;
  #L3ff064.  v2:= 2I;
  #L3ff066.  v0[v2]:= v4 @kind object;
  #L3ff06a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3ff070.  v2:= temp @kind object;
  #L3ff072.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3ff078.  v2:= temp @kind object;
  #L3ff07a.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ff08c.  v0:= "source1 is null" @kind object;
  #L3ff090.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff096.  v0:= "source2 is null" @kind object;
  #L3ff09a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff0a0.  v0:= "source3 is null" @kind object;
  #L3ff0a4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff0aa.  v0:= "source4 is null" @kind object;
  #L3ff0ae.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff0b4.  v0:= 4I;
  #L3ff0b6.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3ff0ba.  v1:= 0I;
  #L3ff0bc.  v0[v1]:= v2 @kind object;
  #L3ff0c0.  v2:= 1I;
  #L3ff0c2.  v0[v2]:= v3 @kind object;
  #L3ff0c6.  v2:= 2I;
  #L3ff0c8.  v0[v2]:= v4 @kind object;
  #L3ff0cc.  v2:= 3I;
  #L3ff0ce.  v0[v2]:= v5 @kind object;
  #L3ff0d2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3ff0d8.  v2:= temp @kind object;
  #L3ff0da.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3ff0e0.  v2:= temp @kind object;
  #L3ff0e2.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`java.lang.Iterable` v0 @kind object) @signature `Lio/reactivex/Single;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ff0f4.  call temp:= `fromIterable`(v0) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L3ff0fa.  v0:= temp @kind object;
  #L3ff0fc.  call temp:= `merge`(v0) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3ff102.  v0:= temp @kind object;
  #L3ff104.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`org.reactivestreams.Publisher` v7 @kind object) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ff118.  v0:= "sources is null" @kind object;
  #L3ff11c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff122.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher`;
  #L3ff126.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3ff12c.  v3:= temp @kind object;
  #L3ff12e.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L3ff134.  v6:= temp;
  #L3ff136.  v4:= 0I;
  #L3ff138.  v5:= 2147483647I;
  #L3ff13e.  v1:= v0 @kind object;
  #L3ff140.  v2:= v7 @kind object;
  #L3ff142.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3ff148.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3ff14e.  v7:= temp @kind object;
  #L3ff150.  return v7 @kind object;
}
procedure `io.reactivex.Single` `merge`(`io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ffb3c.  v0:= "source is null" @kind object;
  #L3ffb40.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffb46.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMap`;
  #L3ffb4a.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ffb50.  v1:= temp @kind object;
  #L3ffb52.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3ffb58.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffb5e.  v2:= temp @kind object;
  #L3ffb60.  return v2 @kind object;
}
procedure `io.reactivex.Single` `never`() @signature `Lio/reactivex/Single;.never:()Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ffb74.  v0:= `@@io.reactivex.internal.operators.single.SingleNever.INSTANCE` @type ^`io.reactivex.Single` @kind object;
  #L3ffb78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffb7e.  v0:= temp @kind object;
  #L3ffb80.  return v0 @kind object;
}
procedure `io.reactivex.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fff08.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fff0e.  v0:= temp @kind object;
  #L3fff10.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @kind static;
  #L3fff16.  v1:= temp @kind object;
  #L3fff18.  return v1 @kind object;
}
procedure `io.reactivex.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fff2c.  v0:= "unit is null" @kind object;
  #L3fff30.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fff36.  v0:= "scheduler is null" @kind object;
  #L3fff3a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fff40.  v0:= new `io.reactivex.internal.operators.single.SingleTimer`;
  #L3fff44.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/internal/operators/single/SingleTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fff4a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fff50.  v1:= temp @kind object;
  #L3fff52.  return v1 @kind object;
}
procedure `io.reactivex.Single` `unsafeCreate`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.unsafeCreate:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fff8c.  v0:= "onSubscribe is null" @kind object;
  #L3fff90.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fff96.  v0:= instanceof @variable v1 @type ^`io.reactivex.Single` @kind boolean;
  #L3fff9a.  if v0 != 0 then goto L3fffb2;
  #L3fff9e.  v0:= new `io.reactivex.internal.operators.single.SingleFromUnsafeSource`;
  #L3fffa2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3fffa8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fffae.  v1:= temp @kind object;
  #L3fffb0.  return v1 @kind object;
  #L3fffb2.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fffb6.  v0:= "unsafeCreate(Single) should be upgraded" @kind object;
  #L3fffba.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fffc0.  throw v1;
}
procedure `io.reactivex.Single` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L400004.  v0:= 1I;
  #L400006.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Single;` @kind static;
  #L40000c.  v1:= temp @kind object;
  #L40000e.  return v1 @kind object;
}
procedure `io.reactivex.Single` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L400020.  v0:= "resourceSupplier is null" @kind object;
  #L400024.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40002a.  v0:= "singleFunction is null" @kind object;
  #L40002e.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400034.  v0:= "disposer is null" @kind object;
  #L400038.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40003e.  v0:= new `io.reactivex.internal.operators.single.SingleUsing`;
  #L400042.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/single/SingleUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L400048.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L40004e.  v1:= temp @kind object;
  #L400050.  return v1 @kind object;
}
procedure `io.reactivex.Single` `wrap`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L400064.  v0:= "source is null" @kind object;
  #L400068.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40006e.  v0:= instanceof @variable v1 @type ^`io.reactivex.Single` @kind boolean;
  #L400072.  if v0 == 0 then goto L400084;
  #L400076.  v1:= (`io.reactivex.Single`) v1 @kind object;
  #L40007a.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L400080.  v1:= temp @kind object;
  #L400082.  return v1 @kind object;
  #L400084.  v0:= new `io.reactivex.internal.operators.single.SingleFromUnsafeSource`;
  #L400088.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L40008e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L400094.  v1:= temp @kind object;
  #L400096.  return v1 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.SingleSource` v9 @kind object, `io.reactivex.SingleSource` v10 @kind object, `io.reactivex.functions.Function9` v11 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4000a8.  v0:= "source1 is null" @kind object;
  #L4000ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4000b2.  v0:= "source2 is null" @kind object;
  #L4000b6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4000bc.  v0:= "source3 is null" @kind object;
  #L4000c0.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4000c6.  v0:= "source4 is null" @kind object;
  #L4000ca.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4000d0.  v0:= "source5 is null" @kind object;
  #L4000d4.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4000da.  v0:= "source6 is null" @kind object;
  #L4000de.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4000e4.  v0:= "source7 is null" @kind object;
  #L4000e8.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4000ee.  v0:= "source8 is null" @kind object;
  #L4000f2.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4000f8.  v0:= "source9 is null" @kind object;
  #L4000fc.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400102.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L400108.  v11:= temp @kind object;
  #L40010a.  v0:= 9I;
  #L40010e.  v0:= new `io.reactivex.SingleSource`[v0];
  #L400112.  v1:= 0I;
  #L400114.  v0[v1]:= v2 @kind object;
  #L400118.  v2:= 1I;
  #L40011a.  v0[v2]:= v3 @kind object;
  #L40011e.  v2:= 2I;
  #L400120.  v0[v2]:= v4 @kind object;
  #L400124.  v2:= 3I;
  #L400126.  v0[v2]:= v5 @kind object;
  #L40012a.  v2:= 4I;
  #L40012c.  v0[v2]:= v6 @kind object;
  #L400130.  v2:= 5I;
  #L400132.  v0[v2]:= v7 @kind object;
  #L400136.  v2:= 6I;
  #L400138.  v0[v2]:= v8 @kind object;
  #L40013c.  v2:= 7I;
  #L40013e.  v0[v2]:= v9 @kind object;
  #L400142.  v2:= 8I;
  #L400146.  v0[v2]:= v10 @kind object;
  #L40014a.  call temp:= `zipArray`(v11, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L400150.  v2:= temp @kind object;
  #L400152.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.SingleSource` v9 @kind object, `io.reactivex.functions.Function8` v10 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L400164.  v0:= "source1 is null" @kind object;
  #L400168.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40016e.  v0:= "source2 is null" @kind object;
  #L400172.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400178.  v0:= "source3 is null" @kind object;
  #L40017c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400182.  v0:= "source4 is null" @kind object;
  #L400186.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40018c.  v0:= "source5 is null" @kind object;
  #L400190.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400196.  v0:= "source6 is null" @kind object;
  #L40019a.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4001a0.  v0:= "source7 is null" @kind object;
  #L4001a4.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4001aa.  v0:= "source8 is null" @kind object;
  #L4001ae.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4001b4.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L4001ba.  v10:= temp @kind object;
  #L4001bc.  v0:= 8I;
  #L4001c0.  v0:= new `io.reactivex.SingleSource`[v0];
  #L4001c4.  v1:= 0I;
  #L4001c6.  v0[v1]:= v2 @kind object;
  #L4001ca.  v2:= 1I;
  #L4001cc.  v0[v2]:= v3 @kind object;
  #L4001d0.  v2:= 2I;
  #L4001d2.  v0[v2]:= v4 @kind object;
  #L4001d6.  v2:= 3I;
  #L4001d8.  v0[v2]:= v5 @kind object;
  #L4001dc.  v2:= 4I;
  #L4001de.  v0[v2]:= v6 @kind object;
  #L4001e2.  v2:= 5I;
  #L4001e4.  v0[v2]:= v7 @kind object;
  #L4001e8.  v2:= 6I;
  #L4001ea.  v0[v2]:= v8 @kind object;
  #L4001ee.  v2:= 7I;
  #L4001f0.  v0[v2]:= v9 @kind object;
  #L4001f4.  call temp:= `zipArray`(v10, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L4001fa.  v2:= temp @kind object;
  #L4001fc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.functions.Function7` v9 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L400210.  v0:= "source1 is null" @kind object;
  #L400214.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40021a.  v0:= "source2 is null" @kind object;
  #L40021e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400224.  v0:= "source3 is null" @kind object;
  #L400228.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40022e.  v0:= "source4 is null" @kind object;
  #L400232.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400238.  v0:= "source5 is null" @kind object;
  #L40023c.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400242.  v0:= "source6 is null" @kind object;
  #L400246.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40024c.  v0:= "source7 is null" @kind object;
  #L400250.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400256.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L40025c.  v9:= temp @kind object;
  #L40025e.  v0:= 7I;
  #L400260.  v0:= new `io.reactivex.SingleSource`[v0];
  #L400264.  v1:= 0I;
  #L400266.  v0[v1]:= v2 @kind object;
  #L40026a.  v2:= 1I;
  #L40026c.  v0[v2]:= v3 @kind object;
  #L400270.  v2:= 2I;
  #L400272.  v0[v2]:= v4 @kind object;
  #L400276.  v2:= 3I;
  #L400278.  v0[v2]:= v5 @kind object;
  #L40027c.  v2:= 4I;
  #L40027e.  v0[v2]:= v6 @kind object;
  #L400282.  v2:= 5I;
  #L400284.  v0[v2]:= v7 @kind object;
  #L400288.  v2:= 6I;
  #L40028a.  v0[v2]:= v8 @kind object;
  #L40028e.  call temp:= `zipArray`(v9, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L400294.  v2:= temp @kind object;
  #L400296.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.functions.Function6` v8 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4002a8.  v0:= "source1 is null" @kind object;
  #L4002ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4002b2.  v0:= "source2 is null" @kind object;
  #L4002b6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4002bc.  v0:= "source3 is null" @kind object;
  #L4002c0.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4002c6.  v0:= "source4 is null" @kind object;
  #L4002ca.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4002d0.  v0:= "source5 is null" @kind object;
  #L4002d4.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4002da.  v0:= "source6 is null" @kind object;
  #L4002de.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4002e4.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L4002ea.  v8:= temp @kind object;
  #L4002ec.  v0:= 6I;
  #L4002ee.  v0:= new `io.reactivex.SingleSource`[v0];
  #L4002f2.  v1:= 0I;
  #L4002f4.  v0[v1]:= v2 @kind object;
  #L4002f8.  v2:= 1I;
  #L4002fa.  v0[v2]:= v3 @kind object;
  #L4002fe.  v2:= 2I;
  #L400300.  v0[v2]:= v4 @kind object;
  #L400304.  v2:= 3I;
  #L400306.  v0[v2]:= v5 @kind object;
  #L40030a.  v2:= 4I;
  #L40030c.  v0[v2]:= v6 @kind object;
  #L400310.  v2:= 5I;
  #L400312.  v0[v2]:= v7 @kind object;
  #L400316.  call temp:= `zipArray`(v8, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L40031c.  v2:= temp @kind object;
  #L40031e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.functions.Function5` v7 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L400330.  v0:= "source1 is null" @kind object;
  #L400334.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40033a.  v0:= "source2 is null" @kind object;
  #L40033e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400344.  v0:= "source3 is null" @kind object;
  #L400348.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40034e.  v0:= "source4 is null" @kind object;
  #L400352.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400358.  v0:= "source5 is null" @kind object;
  #L40035c.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400362.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L400368.  v7:= temp @kind object;
  #L40036a.  v0:= 5I;
  #L40036c.  v0:= new `io.reactivex.SingleSource`[v0];
  #L400370.  v1:= 0I;
  #L400372.  v0[v1]:= v2 @kind object;
  #L400376.  v2:= 1I;
  #L400378.  v0[v2]:= v3 @kind object;
  #L40037c.  v2:= 2I;
  #L40037e.  v0[v2]:= v4 @kind object;
  #L400382.  v2:= 3I;
  #L400384.  v0[v2]:= v5 @kind object;
  #L400388.  v2:= 4I;
  #L40038a.  v0[v2]:= v6 @kind object;
  #L40038e.  call temp:= `zipArray`(v7, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L400394.  v2:= temp @kind object;
  #L400396.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.functions.Function4` v6 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4003a8.  v0:= "source1 is null" @kind object;
  #L4003ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4003b2.  v0:= "source2 is null" @kind object;
  #L4003b6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4003bc.  v0:= "source3 is null" @kind object;
  #L4003c0.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4003c6.  v0:= "source4 is null" @kind object;
  #L4003ca.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4003d0.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L4003d6.  v6:= temp @kind object;
  #L4003d8.  v0:= 4I;
  #L4003da.  v0:= new `io.reactivex.SingleSource`[v0];
  #L4003de.  v1:= 0I;
  #L4003e0.  v0[v1]:= v2 @kind object;
  #L4003e4.  v2:= 1I;
  #L4003e6.  v0[v2]:= v3 @kind object;
  #L4003ea.  v2:= 2I;
  #L4003ec.  v0[v2]:= v4 @kind object;
  #L4003f0.  v2:= 3I;
  #L4003f2.  v0[v2]:= v5 @kind object;
  #L4003f6.  call temp:= `zipArray`(v6, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L4003fc.  v2:= temp @kind object;
  #L4003fe.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.functions.Function3` v5 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L400410.  v0:= "source1 is null" @kind object;
  #L400414.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40041a.  v0:= "source2 is null" @kind object;
  #L40041e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400424.  v0:= "source3 is null" @kind object;
  #L400428.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40042e.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L400434.  v5:= temp @kind object;
  #L400436.  v0:= 3I;
  #L400438.  v0:= new `io.reactivex.SingleSource`[v0];
  #L40043c.  v1:= 0I;
  #L40043e.  v0[v1]:= v2 @kind object;
  #L400442.  v2:= 1I;
  #L400444.  v0[v2]:= v3 @kind object;
  #L400448.  v2:= 2I;
  #L40044a.  v0[v2]:= v4 @kind object;
  #L40044e.  call temp:= `zipArray`(v5, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L400454.  v2:= temp @kind object;
  #L400456.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L400468.  v0:= "source1 is null" @kind object;
  #L40046c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L400472.  v0:= "source2 is null" @kind object;
  #L400476.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40047c.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L400482.  v4:= temp @kind object;
  #L400484.  v0:= 2I;
  #L400486.  v0:= new `io.reactivex.SingleSource`[v0];
  #L40048a.  v1:= 0I;
  #L40048c.  v0[v1]:= v2 @kind object;
  #L400490.  v2:= 1I;
  #L400492.  v0[v2]:= v3 @kind object;
  #L400496.  call temp:= `zipArray`(v4, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L40049c.  v2:= temp @kind object;
  #L40049e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.zip:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4004b0.  v0:= "zipper is null" @kind object;
  #L4004b4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4004ba.  v0:= "sources is null" @kind object;
  #L4004be.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4004c4.  v0:= new `io.reactivex.internal.operators.single.SingleZipIterable`;
  #L4004c8.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable;.<init>:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @kind direct;
  #L4004ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4004d4.  v1:= temp @kind object;
  #L4004d6.  return v1 @kind object;
}
procedure `io.reactivex.Single` `zipArray`(`io.reactivex.functions.Function` v1 @kind object, `io.reactivex.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4004e8.  v0:= "zipper is null" @kind object;
  #L4004ec.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4004f2.  v0:= "sources is null" @kind object;
  #L4004f6.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4004fc.  v0:= length @variable v2;
  #L4004fe.  if v0 != 0 then goto L400516;
  #L400502.  v1:= new `java.util.NoSuchElementException`;
  #L400506.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L40050c.  call temp:= `error`(v1) @signature `Lio/reactivex/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/Single;` @kind static;
  #L400512.  v1:= temp @kind object;
  #L400514.  return v1 @kind object;
  #L400516.  v0:= new `io.reactivex.internal.operators.single.SingleZipArray`;
  #L40051a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleZipArray;.<init>:([Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L400520.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L400526.  v1:= temp @kind object;
  #L400528.  return v1 @kind object;
}
procedure `io.reactivex.Single` `ambWith`(`io.reactivex.Single` v2 @kind this, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.ambWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ff43c.  v0:= "other is null" @kind object;
  #L3ff440.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff446.  v0:= 2I;
  #L3ff448.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3ff44c.  v1:= 0I;
  #L3ff44e.  v0[v1]:= v2 @kind object;
  #L3ff452.  v1:= 1I;
  #L3ff454.  v0[v1]:= v3 @kind object;
  #L3ff458.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Single;.ambArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3ff45e.  v3:= temp @kind object;
  #L3ff460.  return v3 @kind object;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.blockingGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L40066c.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L400670.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L400676.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L40067c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L400682.  v0:= temp @kind object;
  #L400684.  return v0 @kind object;
}
procedure `io.reactivex.Single` `cache`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.cache:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff474.  v0:= new `io.reactivex.internal.operators.single.SingleCache`;
  #L3ff478.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleCache;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ff47e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff484.  v0:= temp @kind object;
  #L3ff486.  return v0 @kind object;
}
procedure `io.reactivex.Single` `cast`(`io.reactivex.Single` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Single;.cast:(Ljava/lang/Class;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff498.  v0:= "clazz is null" @kind object;
  #L3ff49c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff4a2.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/functions/Function;` @kind static;
  #L3ff4a8.  v2:= temp @kind object;
  #L3ff4aa.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3ff4b0.  v2:= temp @kind object;
  #L3ff4b2.  return v2 @kind object;
}
procedure `io.reactivex.Single` `compose`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleTransformer` v2 @kind object) @signature `Lio/reactivex/Single;.compose:(Lio/reactivex/SingleTransformer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff4c4.  v0:= "transformer is null" @kind object;
  #L3ff4c8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff4ce.  v2:= temp @kind object;
  #L3ff4d0.  v2:= (`io.reactivex.SingleTransformer`) v2 @kind object;
  #L3ff4d4.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/SingleTransformer;.apply:(Lio/reactivex/Single;)Lio/reactivex/SingleSource;` @kind interface;
  #L3ff4da.  v2:= temp @kind object;
  #L3ff4dc.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3ff4e2.  v2:= temp @kind object;
  #L3ff4e4.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concatWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.concatWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fef7c.  call temp:= `concat`(v0, v1) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @kind static;
  #L3fef82.  v1:= temp @kind object;
  #L3fef84.  return v1 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Single` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff4f8.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L3ff4fe.  v0:= temp @kind object;
  #L3ff500.  call temp:= `contains`(v1, v2, v0) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @kind virtual;
  #L3ff506.  v2:= temp @kind object;
  #L3ff508.  return v2 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Single` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff51c.  v0:= "value is null" @kind object;
  #L3ff520.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff526.  v0:= "comparer is null" @kind object;
  #L3ff52a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff530.  v0:= new `io.reactivex.internal.operators.single.SingleContains`;
  #L3ff534.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/single/SingleContains;.<init>:(Lio/reactivex/SingleSource;Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L3ff53a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff540.  v2:= temp @kind object;
  #L3ff542.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff5b4.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3ff5ba.  v0:= temp @kind object;
  #L3ff5bc.  call temp:= `delay`(v1, v2, v4, v0) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @kind virtual;
  #L3ff5c2.  v2:= temp @kind object;
  #L3ff5c4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ff5d8.  v0:= "unit is null" @kind object;
  #L3ff5dc.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff5e2.  v0:= "scheduler is null" @kind object;
  #L3ff5e6.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff5ec.  v0:= new `io.reactivex.internal.operators.single.SingleDelay`;
  #L3ff5f0.  v1:= v0 @kind object;
  #L3ff5f2.  v2:= v7 @kind object;
  #L3ff5f4.  v3:= v8 @kind wide;
  #L3ff5f6.  v5:= v10 @kind object;
  #L3ff5f8.  v6:= v11 @kind object;
  #L3ff5fa.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/single/SingleDelay;.<init>:(Lio/reactivex/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3ff600.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff606.  v8:= temp @kind object;
  #L3ff608.  return v8 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff6ac.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3ff6b2.  v0:= temp @kind object;
  #L3ff6b4.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @kind virtual;
  #L3ff6ba.  v2:= temp @kind object;
  #L3ff6bc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3ff6d0.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3ff6d6.  v1:= temp @kind object;
  #L3ff6d8.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @kind virtual;
  #L3ff6de.  v1:= temp @kind object;
  #L3ff6e0.  return v1 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/CompletableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff61c.  v0:= "other is null" @kind object;
  #L3ff620.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff626.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithCompletable`;
  #L3ff62a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ff630.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff636.  v2:= temp @kind object;
  #L3ff638.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff64c.  v0:= "other is null" @kind object;
  #L3ff650.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff656.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithObservable`;
  #L3ff65a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithObservable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3ff660.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff666.  v2:= temp @kind object;
  #L3ff668.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff67c.  v0:= "other is null" @kind object;
  #L3ff680.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff686.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithSingle`;
  #L3ff68a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithSingle;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ff690.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff696.  v2:= temp @kind object;
  #L3ff698.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff6f4.  v0:= "other is null" @kind object;
  #L3ff6f8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff6fe.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithPublisher`;
  #L3ff702.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithPublisher;.<init>:(Lio/reactivex/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3ff708.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff70e.  v2:= temp @kind object;
  #L3ff710.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doAfterSuccess`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doAfterSuccess:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff724.  v0:= "doAfterSuccess is null" @kind object;
  #L3ff728.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff72e.  v0:= new `io.reactivex.internal.operators.single.SingleDoAfterSuccess`;
  #L3ff732.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3ff738.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff73e.  v2:= temp @kind object;
  #L3ff740.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doAfterTerminate`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff754.  v0:= "onAfterTerminate is null" @kind object;
  #L3ff758.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff75e.  v0:= new `io.reactivex.internal.operators.single.SingleDoAfterTerminate`;
  #L3ff762.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3ff768.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff76e.  v2:= temp @kind object;
  #L3ff770.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doFinally`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff784.  v0:= "onFinally is null" @kind object;
  #L3ff788.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff78e.  v0:= new `io.reactivex.internal.operators.single.SingleDoFinally`;
  #L3ff792.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3ff798.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff79e.  v2:= temp @kind object;
  #L3ff7a0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnDispose`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff7b4.  v0:= "onDispose is null" @kind object;
  #L3ff7b8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff7be.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnDispose`;
  #L3ff7c2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnDispose;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3ff7c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff7ce.  v2:= temp @kind object;
  #L3ff7d0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnError`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff7e4.  v0:= "onError is null" @kind object;
  #L3ff7e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff7ee.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnError`;
  #L3ff7f2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnError;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3ff7f8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff7fe.  v2:= temp @kind object;
  #L3ff800.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnEvent`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnEvent:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff814.  v0:= "onEvent is null" @kind object;
  #L3ff818.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff81e.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnEvent`;
  #L3ff822.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L3ff828.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff82e.  v2:= temp @kind object;
  #L3ff830.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnSubscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff844.  v0:= "onSubscribe is null" @kind object;
  #L3ff848.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff84e.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnSubscribe`;
  #L3ff852.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3ff858.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff85e.  v2:= temp @kind object;
  #L3ff860.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnSuccess`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnSuccess:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff874.  v0:= "onSuccess is null" @kind object;
  #L3ff878.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff87e.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnSuccess`;
  #L3ff882.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSuccess;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3ff888.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff88e.  v2:= temp @kind object;
  #L3ff890.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `filter`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Single;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff24c.  v0:= "predicate is null" @kind object;
  #L3ff250.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff256.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFilterSingle`;
  #L3ff25a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3ff260.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3ff266.  v2:= temp @kind object;
  #L3ff268.  return v2 @kind object;
}
procedure `io.reactivex.Single` `flatMap`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff938.  v0:= "mapper is null" @kind object;
  #L3ff93c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff942.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMap`;
  #L3ff946.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3ff94c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ff952.  v2:= temp @kind object;
  #L3ff954.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fed60.  v0:= "mapper is null" @kind object;
  #L3fed64.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fed6a.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapCompletable`;
  #L3fed6e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fed74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3fed7a.  v2:= temp @kind object;
  #L3fed7c.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `flatMapMaybe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff27c.  v0:= "mapper is null" @kind object;
  #L3ff280.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff286.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapMaybe`;
  #L3ff28a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapMaybe;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3ff290.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3ff296.  v2:= temp @kind object;
  #L3ff298.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapObservable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapObservable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff324.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L3ff32a.  v0:= temp @kind object;
  #L3ff32c.  call temp:= `flatMap`(v0, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3ff332.  v2:= temp @kind object;
  #L3ff334.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `flatMapPublisher`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapPublisher:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fef98.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3fef9e.  v0:= temp @kind object;
  #L3fefa0.  call temp:= `flatMap`(v0, v2) @signature `Lio/reactivex/Flowable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3fefa6.  v2:= temp @kind object;
  #L3fefa8.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `flattenAsFlowable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flattenAsFlowable:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fefbc.  v0:= "mapper is null" @kind object;
  #L3fefc0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fefc6.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable`;
  #L3fefca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapIterableFlowable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fefd0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3fefd6.  v2:= temp @kind object;
  #L3fefd8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flattenAsObservable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flattenAsObservable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff348.  v0:= "mapper is null" @kind object;
  #L3ff34c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ff352.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapIterableObservable`;
  #L3ff356.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapIterableObservable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3ff35c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3ff362.  v2:= temp @kind object;
  #L3ff364.  return v2 @kind object;
}
procedure `io.reactivex.Single` `hide`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.hide:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffa88.  v0:= new `io.reactivex.internal.operators.single.SingleHide`;
  #L3ffa8c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleHide;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ffa92.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffa98.  v0:= temp @kind object;
  #L3ffa9a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `lift`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleOperator` v2 @kind object) @signature `Lio/reactivex/Single;.lift:(Lio/reactivex/SingleOperator;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffadc.  v0:= "onLift is null" @kind object;
  #L3ffae0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffae6.  v0:= new `io.reactivex.internal.operators.single.SingleLift`;
  #L3ffaea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleLift;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleOperator;)V` @kind direct;
  #L3ffaf0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffaf6.  v2:= temp @kind object;
  #L3ffaf8.  return v2 @kind object;
}
procedure `io.reactivex.Single` `map`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffb0c.  v0:= "mapper is null" @kind object;
  #L3ffb10.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffb16.  v0:= new `io.reactivex.internal.operators.single.SingleMap`;
  #L3ffb1a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3ffb20.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffb26.  v2:= temp @kind object;
  #L3ffb28.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.mergeWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3ff164.  call temp:= `merge`(v0, v1) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @kind static;
  #L3ff16a.  v1:= temp @kind object;
  #L3ff16c.  return v1 @kind object;
}
procedure `io.reactivex.Single` `observeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffb94.  v0:= "scheduler is null" @kind object;
  #L3ffb98.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffb9e.  v0:= new `io.reactivex.internal.operators.single.SingleObserveOn`;
  #L3ffba2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleObserveOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3ffba8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffbae.  v2:= temp @kind object;
  #L3ffbb0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorResumeNext`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Single` v2 @kind object) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/Single;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffbc4.  v0:= "resumeSingleInCaseOfError is null" @kind object;
  #L3ffbc8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffbce.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L3ffbd4.  v2:= temp @kind object;
  #L3ffbd6.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3ffbdc.  v2:= temp @kind object;
  #L3ffbde.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorResumeNext`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffbf0.  v0:= "resumeFunctionInCaseOfError is null" @kind object;
  #L3ffbf4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffbfa.  v0:= new `io.reactivex.internal.operators.single.SingleResumeNext`;
  #L3ffbfe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3ffc04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffc0a.  v2:= temp @kind object;
  #L3ffc0c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorReturn`(`io.reactivex.Single` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Single;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ffc20.  v0:= "resumeFunction is null" @kind object;
  #L3ffc24.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffc2a.  v0:= new `io.reactivex.internal.operators.single.SingleOnErrorReturn`;
  #L3ffc2e.  v1:= 0I;
  #L3ffc30.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L3ffc36.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffc3c.  v3:= temp @kind object;
  #L3ffc3e.  return v3 @kind object;
}
procedure `io.reactivex.Single` `onErrorReturnItem`(`io.reactivex.Single` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Single;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ffc50.  v0:= "value is null" @kind object;
  #L3ffc54.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffc5a.  v0:= new `io.reactivex.internal.operators.single.SingleOnErrorReturn`;
  #L3ffc5e.  v1:= 0I;
  #L3ffc60.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L3ffc66.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffc6c.  v3:= temp @kind object;
  #L3ffc6e.  return v3 @kind object;
}
procedure `io.reactivex.Flowable` `repeat`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.repeat:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff180.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ff186.  v0:= temp @kind object;
  #L3ff188.  call temp:= `repeat`(v0) @signature `Lio/reactivex/Flowable;.repeat:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ff18e.  v0:= temp @kind object;
  #L3ff190.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `repeat`(`io.reactivex.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Single;.repeat:(J)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff1a4.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ff1aa.  v0:= temp @kind object;
  #L3ff1ac.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/Flowable;.repeat:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L3ff1b2.  v2:= temp @kind object;
  #L3ff1b4.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `repeatUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Single;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff1c8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ff1ce.  v0:= temp @kind object;
  #L3ff1d0.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ff1d6.  v2:= temp @kind object;
  #L3ff1d8.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `repeatWhen`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff1ec.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ff1f2.  v0:= temp @kind object;
  #L3ff1f4.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ff1fa.  v2:= temp @kind object;
  #L3ff1fc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.retry:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffc80.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ffc86.  v0:= temp @kind object;
  #L3ffc88.  call temp:= `retry`(v0) @signature `Lio/reactivex/Flowable;.retry:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ffc8e.  v0:= temp @kind object;
  #L3ffc90.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ffc96.  v0:= temp @kind object;
  #L3ffc98.  return v0 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Single;.retry:(J)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffd04.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ffd0a.  v0:= temp @kind object;
  #L3ffd0c.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L3ffd12.  v2:= temp @kind object;
  #L3ffd14.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ffd1a.  v2:= temp @kind object;
  #L3ffd1c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Single;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffcac.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ffcb2.  v0:= temp @kind object;
  #L3ffcb4.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ffcba.  v2:= temp @kind object;
  #L3ffcbc.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ffcc2.  v2:= temp @kind object;
  #L3ffcc4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Single;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffcd8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ffcde.  v0:= temp @kind object;
  #L3ffce0.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ffce6.  v2:= temp @kind object;
  #L3ffce8.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ffcee.  v2:= temp @kind object;
  #L3ffcf0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retryWhen`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffd30.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3ffd36.  v0:= temp @kind object;
  #L3ffd38.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3ffd3e.  v2:= temp @kind object;
  #L3ffd40.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3ffd46.  v2:= temp @kind object;
  #L3ffd48.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v2 @kind this) @signature `Lio/reactivex/Single;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L400570.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L400576.  v0:= temp @kind object;
  #L400578.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L40057c.  call temp:= `subscribe`(v2, v0, v1) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L400582.  v0:= temp @kind object;
  #L400584.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L400598.  v0:= "onCallback is null" @kind object;
  #L40059c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4005a2.  v0:= new `io.reactivex.internal.observers.BiConsumerSingleObserver`;
  #L4005a6.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.<init>:(Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L4005ac.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L4005b2.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4005c4.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L4005c8.  call temp:= `subscribe`(v1, v2, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4005ce.  v2:= temp @kind object;
  #L4005d0.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4005e4.  v0:= "onSuccess is null" @kind object;
  #L4005e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4005ee.  v0:= "onError is null" @kind object;
  #L4005f2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4005f8.  v0:= new `io.reactivex.internal.observers.ConsumerSingleObserver`;
  #L4005fc.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L400602.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L400608.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Single` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L400720.  v0:= "subscriber is null" @kind object;
  #L400724.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40072a.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Single;Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @kind static;
  #L400730.  v3:= temp @kind object;
  #L400732.  v0:= "subscriber returned by the RxJavaPlugins hook is null" @kind object;
  #L400736.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40073c.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/Single;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L400742.  return @kind void;
  #L400744.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400746.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L40074c.  v0:= new `java.lang.NullPointerException`;
  #L400750.  v1:= "subscribeActual failed" @kind object;
  #L400754.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40075a.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L400760.  throw v0;
  #L400762.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L400764.  throw v3;
  catch `java.lang.NullPointerException` @[L40073c..L400742] goto L400762;
  catch `java.lang.Throwable` @[L40073c..L400742] goto L400744;
}
procedure `void` `subscribeActual`(`io.reactivex.SingleObserver` v0 @kind object) @signature `Lio/reactivex/Single;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Single` `subscribeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffd5c.  v0:= "scheduler is null" @kind object;
  #L3ffd60.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffd66.  v0:= new `io.reactivex.internal.operators.single.SingleSubscribeOn`;
  #L3ffd6a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleSubscribeOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3ffd70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffd76.  v2:= temp @kind object;
  #L3ffd78.  return v2 @kind object;
}
procedure `io.reactivex.SingleObserver` `subscribeWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object) @signature `Lio/reactivex/Single;.subscribeWith:(Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L400558.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L40055e.  return v1 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lio/reactivex/CompletableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffd8c.  v0:= "other is null" @kind object;
  #L3ffd90.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffd96.  v0:= new `io.reactivex.internal.operators.completable.CompletableToFlowable`;
  #L3ffd9a.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ffda0.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @kind virtual;
  #L3ffda6.  v2:= temp @kind object;
  #L3ffda8.  return v2 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffdbc.  v0:= "other is null" @kind object;
  #L3ffdc0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffdc6.  v0:= new `io.reactivex.internal.operators.single.SingleToFlowable`;
  #L3ffdca.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ffdd0.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @kind virtual;
  #L3ffdd6.  v2:= temp @kind object;
  #L3ffdd8.  return v2 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffdec.  v0:= "other is null" @kind object;
  #L3ffdf0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffdf6.  v0:= new `io.reactivex.internal.operators.single.SingleTakeUntil`;
  #L3ffdfa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleTakeUntil;.<init>:(Lio/reactivex/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3ffe00.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3ffe06.  v2:= temp @kind object;
  #L3ffe08.  return v2 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L40061c.  v0:= new `io.reactivex.observers.TestObserver`;
  #L400620.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L400626.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L40062c.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Single` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Single;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L400640.  v0:= new `io.reactivex.observers.TestObserver`;
  #L400644.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L40064a.  if v2 == 0 then goto L400654;
  #L40064e.  call `cancel`(v0) @signature `Lio/reactivex/observers/TestObserver;.cancel:()V` @kind virtual;
  #L400654.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L40065a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ffe1c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3ffe22.  v4:= temp @kind object;
  #L3ffe24.  v5:= 0I;
  #L3ffe26.  v0:= v6 @kind object;
  #L3ffe28.  v1:= v7 @kind wide;
  #L3ffe2a.  v3:= v9 @kind object;
  #L3ffe2c.  call temp:= `a`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L3ffe32.  v7:= temp @kind object;
  #L3ffe34.  return v7 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ffe48.  v5:= 0I;
  #L3ffe4a.  v0:= v6 @kind object;
  #L3ffe4c.  v1:= v7 @kind wide;
  #L3ffe4e.  v3:= v9 @kind object;
  #L3ffe50.  v4:= v10 @kind object;
  #L3ffe52.  call temp:= `a`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L3ffe58.  v7:= temp @kind object;
  #L3ffe5a.  return v7 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ffe6c.  v0:= "other is null" @kind object;
  #L3ffe70.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffe76.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L3ffe7c.  v2:= temp @kind object;
  #L3ffe7e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.SingleSource` v11 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ffe90.  v0:= "other is null" @kind object;
  #L3ffe94.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ffe9a.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3ffea0.  v5:= temp @kind object;
  #L3ffea2.  v1:= v7 @kind object;
  #L3ffea4.  v2:= v8 @kind wide;
  #L3ffea6.  v4:= v10 @kind object;
  #L3ffea8.  v6:= v11 @kind object;
  #L3ffeaa.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L3ffeb0.  v8:= temp @kind object;
  #L3ffeb2.  return v8 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L400698.  v0:= "convert is null" @kind object;
  #L40069c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4006a2.  v2:= temp @kind object;
  #L4006a4.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L4006a8.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4006ae.  v2:= temp @kind object;
  #L4006b0.  return v2 @kind object;
  #L4006b2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4006b4.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4006ba.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4006c0.  v2:= temp @kind object;
  #L4006c2.  throw v2;
  catch `java.lang.Throwable` @[L400698..L4006b0] goto L4006b2;
}
procedure `io.reactivex.Completable` `toCompletable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toCompletable:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fed90.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromSingle`;
  #L3fed94.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3fed9a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3feda0.  v0:= temp @kind object;
  #L3feda2.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff210.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToFlowable` @kind boolean;
  #L3ff214.  if v0 == 0 then goto L3ff228;
  #L3ff218.  v0:= v1 @kind object;
  #L3ff21a.  v0:= (`io.reactivex.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L3ff21e.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/Flowable;` @kind interface;
  #L3ff224.  v0:= temp @kind object;
  #L3ff226.  return v0 @kind object;
  #L3ff228.  v0:= new `io.reactivex.internal.operators.single.SingleToFlowable`;
  #L3ff22c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ff232.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3ff238.  v0:= temp @kind object;
  #L3ff23a.  return v0 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4006e0.  v0:= new `io.reactivex.internal.observers.FutureSingleObserver`;
  #L4006e4.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/FutureSingleObserver;.<init>:()V` @kind direct;
  #L4006ea.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/Single;.subscribeWith:(Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @kind virtual;
  #L4006f0.  v0:= temp @kind object;
  #L4006f2.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L4006f6.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `toMaybe`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toMaybe:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff2ac.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToMaybe` @kind boolean;
  #L3ff2b0.  if v0 == 0 then goto L3ff2c4;
  #L3ff2b4.  v0:= v1 @kind object;
  #L3ff2b6.  v0:= (`io.reactivex.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L3ff2ba.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/Maybe;` @kind interface;
  #L3ff2c0.  v0:= temp @kind object;
  #L3ff2c2.  return v0 @kind object;
  #L3ff2c4.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFromSingle`;
  #L3ff2c8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ff2ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3ff2d4.  v0:= temp @kind object;
  #L3ff2d6.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `toObservable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff378.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToObservable` @kind boolean;
  #L3ff37c.  if v0 == 0 then goto L3ff390;
  #L3ff380.  v0:= v1 @kind object;
  #L3ff382.  v0:= (`io.reactivex.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L3ff386.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/Observable;` @kind interface;
  #L3ff38c.  v0:= temp @kind object;
  #L3ff38e.  return v0 @kind object;
  #L3ff390.  v0:= new `io.reactivex.internal.operators.single.SingleToObservable`;
  #L3ff394.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3ff39a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3ff3a0.  v0:= temp @kind object;
  #L3ff3a2.  return v0 @kind object;
}
procedure `io.reactivex.Single` `unsubscribeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fffd4.  v0:= "scheduler is null" @kind object;
  #L3fffd8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fffde.  v0:= new `io.reactivex.internal.operators.single.SingleUnsubscribeOn`;
  #L3fffe2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleUnsubscribeOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fffe8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fffee.  v2:= temp @kind object;
  #L3ffff0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zipWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Single;.zipWith:(Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L40053c.  call temp:= `zip`(v0, v1, v2) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @kind static;
  #L400542.  v1:= temp @kind object;
  #L400544.  return v1 @kind object;
}
