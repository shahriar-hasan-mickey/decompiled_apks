record `io.reactivex.schedulers.Schedulers$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.schedulers.Schedulers$b` v0 @kind this) @signature `Lio/reactivex/schedulers/Schedulers$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f54ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f54b2.  return @kind void;
}
procedure `io.reactivex.Scheduler` `a`(`io.reactivex.schedulers.Schedulers$b` v1 @kind this) @signature `Lio/reactivex/schedulers/Schedulers$b;.a:()Lio/reactivex/Scheduler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5478.  v0:= `@@io.reactivex.schedulers.Schedulers$a.a` @type ^`io.reactivex.Scheduler` @kind object;
  #L4f547c.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.schedulers.Schedulers$b` v1 @kind this) @signature `Lio/reactivex/schedulers/Schedulers$b;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4f5490.  call temp:= `a`(v1) @signature `Lio/reactivex/schedulers/Schedulers$b;.a:()Lio/reactivex/Scheduler;` @kind virtual;
  #L4f5496.  v0:= temp @kind object;
  #L4f5498.  return v0 @kind object;
}
