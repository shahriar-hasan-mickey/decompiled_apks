record `io.reactivex.rxjava3.kotlin.FlowableKt$zip$1` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.functions.Function` @kind interface {
  `kotlin.jvm.functions.Function1` `io.reactivex.rxjava3.kotlin.FlowableKt$zip$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.kotlin.FlowableKt$zip$1` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/FlowableKt$zip$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e24dc.  v0.`io.reactivex.rxjava3.kotlin.FlowableKt$zip$1.a` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L4e24e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e24e6.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.rxjava3.kotlin.FlowableKt$zip$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/FlowableKt$zip$1;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4e2448.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L4e244c.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/rxjava3/kotlin/FlowableKt$zip$1;.apply:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4e2452.  v1:= temp @kind object;
  #L4e2454.  return v1 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.rxjava3.kotlin.FlowableKt$zip$1` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/FlowableKt$zip$1;.apply:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e2468.  v0:= v4.`io.reactivex.rxjava3.kotlin.FlowableKt$zip$1.a` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L4e246c.  v1:= "it" @kind object;
  #L4e2470.  call `checkNotNullExpressionValue`(v5, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e2476.  call temp:= `asList`(v5) @signature `Lkotlin/collections/ArraysKt;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L4e247c.  v5:= temp @kind object;
  #L4e247e.  v1:= new `java.util.ArrayList`;
  #L4e2482.  v2:= 10I;
  #L4e2486.  call temp:= `collectionSizeOrDefault`(v5, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L4e248c.  v2:= temp;
  #L4e248e.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4e2494.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e249a.  v5:= temp @kind object;
  #L4e249c.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e24a2.  v2:= temp;
  #L4e24a4.  if v2 == 0 then goto L4e24c2;
  #L4e24a8.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e24ae.  v2:= temp @kind object;
  #L4e24b0.  v3:= "null cannot be cast to non-null type T" @kind object;
  #L4e24b4.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e24ba.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e24c0.  goto L4e249c;
  #L4e24c2.  call temp:= `invoke`(v0, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4e24c8.  v5:= temp @kind object;
  #L4e24ca.  return v5 @kind object;
}
