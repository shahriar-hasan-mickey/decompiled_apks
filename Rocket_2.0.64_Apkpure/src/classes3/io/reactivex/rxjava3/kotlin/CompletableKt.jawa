record `io.reactivex.rxjava3.kotlin.CompletableKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `io.reactivex.rxjava3.core.Completable` `concatAll`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/CompletableKt;.concatAll:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e1cac.  v0:= "$this$concatAll" @kind object;
  #L4e1cb0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1cb6.  call temp:= `concat`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4e1cbc.  v1:= temp @kind object;
  #L4e1cbe.  v0:= "Completable.concat(this)" @kind object;
  #L4e1cc2.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1cc8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `mergeAllCompletables`(`io.reactivex.rxjava3.core.Flowable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/CompletableKt;.mergeAllCompletables:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e1cdc.  v0:= "$this$mergeAllCompletables" @kind object;
  #L4e1ce0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1ce6.  v0:= `@@io.reactivex.rxjava3.kotlin.CompletableKt$b.a` @type ^`io.reactivex.rxjava3.kotlin.CompletableKt$b` @kind object;
  #L4e1cea.  call temp:= `flatMapCompletable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4e1cf0.  v1:= temp @kind object;
  #L4e1cf2.  v0:= "flatMapCompletable { it }" @kind object;
  #L4e1cf6.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1cfc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `mergeAllCompletables`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/CompletableKt;.mergeAllCompletables:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e1d10.  v0:= "$this$mergeAllCompletables" @kind object;
  #L4e1d14.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1d1a.  v0:= `@@io.reactivex.rxjava3.kotlin.CompletableKt$a.a` @type ^`io.reactivex.rxjava3.kotlin.CompletableKt$a` @kind object;
  #L4e1d1e.  call temp:= `flatMapCompletable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4e1d24.  v1:= temp @kind object;
  #L4e1d26.  v0:= "flatMapCompletable { it }" @kind object;
  #L4e1d2a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1d30.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `toCompletable`(`io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/CompletableKt;.toCompletable:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e1d44.  v0:= "$this$toCompletable" @kind object;
  #L4e1d48.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1d4e.  call temp:= `fromAction`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.fromAction:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4e1d54.  v1:= temp @kind object;
  #L4e1d56.  v0:= "Completable.fromAction(this)" @kind object;
  #L4e1d5a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1d60.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `toCompletable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/CompletableKt;.toCompletable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e1d74.  v0:= "$this$toCompletable" @kind object;
  #L4e1d78.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1d7e.  call temp:= `fromCallable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4e1d84.  v1:= temp @kind object;
  #L4e1d86.  v0:= "Completable.fromCallable(this)" @kind object;
  #L4e1d8a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1d90.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `toCompletable`(`java.util.concurrent.Future` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/CompletableKt;.toCompletable:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e1da4.  v0:= "$this$toCompletable" @kind object;
  #L4e1da8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1dae.  call temp:= `fromFuture`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4e1db4.  v1:= temp @kind object;
  #L4e1db6.  v0:= "Completable.fromFuture(this)" @kind object;
  #L4e1dba.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1dc0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `toCompletable`(`kotlin.jvm.functions.Function0` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/CompletableKt;.toCompletable:(Lkotlin/jvm/functions/Function0;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e1dd4.  v0:= "$this$toCompletable" @kind object;
  #L4e1dd8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1dde.  v0:= new `io.reactivex.rxjava3.kotlin.a`;
  #L4e1de2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/kotlin/a;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L4e1de8.  call temp:= `fromCallable`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4e1dee.  v1:= temp @kind object;
  #L4e1df0.  v0:= "Completable.fromCallable(this)" @kind object;
  #L4e1df4.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e1dfa.  return v1 @kind object;
}
