record `io.reactivex.rxjava3.kotlin.ObservableKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Iterable` `a`(`java.util.Iterator` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.a:(Ljava/util/Iterator;)Ljava/lang/Iterable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L4e5d9c.  v0:= new `io.reactivex.rxjava3.kotlin.ObservableKt$toIterable$1`;
  #L4e5da0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$toIterable$1;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L4e5da6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `cast`(`io.reactivex.rxjava3.core.Observable` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.cast:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4e5750.  v0:= "$this$cast" @kind object;
  #L4e5754.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e575a.  v0:= 4I;
  #L4e575c.  v1:= "R" @kind object;
  #L4e5760.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L4e5766.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L4e576a.  call temp:= `cast`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e5770.  v2:= temp @kind object;
  #L4e5772.  v0:= "cast(R::class.java)" @kind object;
  #L4e5776.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e577c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.combineLatest:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5790.  v0:= "$this$combineLatest" @kind object;
  #L4e5794.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e579a.  v0:= "combineFunction" @kind object;
  #L4e579e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e57a4.  v0:= new `io.reactivex.rxjava3.kotlin.ObservableKt$combineLatest$1`;
  #L4e57a8.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$combineLatest$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L4e57ae.  call temp:= `combineLatest`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e57b4.  v1:= temp @kind object;
  #L4e57b6.  v2:= "Observable.combineLatestâ€¦List().map { it as T }) }" @kind object;
  #L4e57ba.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e57c0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatAll`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.concatAll:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e57d4.  v0:= "$this$concatAll" @kind object;
  #L4e57d8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e57de.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$a.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$a` @kind object;
  #L4e57e2.  call temp:= `concatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e57e8.  v1:= temp @kind object;
  #L4e57ea.  v0:= "concatMap { it }" @kind object;
  #L4e57ee.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e57f4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatAll`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.concatAll:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5808.  v0:= "$this$concatAll" @kind object;
  #L4e580c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5812.  call temp:= `concat`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5818.  v1:= temp @kind object;
  #L4e581a.  v0:= "Observable.concat(this)" @kind object;
  #L4e581e.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5824.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.concatMapIterable:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5838.  v0:= "$this$concatMapIterable" @kind object;
  #L4e583c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5842.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$b.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$b` @kind object;
  #L4e5846.  call temp:= `concatMapIterable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e584c.  v1:= temp @kind object;
  #L4e584e.  v0:= "concatMapIterable { it }" @kind object;
  #L4e5852.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5858.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.flatMapIterable:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e586c.  v0:= "$this$flatMapIterable" @kind object;
  #L4e5870.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5876.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$c.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$c` @kind object;
  #L4e587a.  call temp:= `flatMapIterable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e5880.  v1:= temp @kind object;
  #L4e5882.  v0:= "flatMapIterable { it }" @kind object;
  #L4e5886.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e588c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapSequence`(`io.reactivex.rxjava3.core.Observable` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.flatMapSequence:(Lio/reactivex/rxjava3/core/Observable;Lkotlin/jvm/functions/Function1;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e58a0.  v0:= "$this$flatMapSequence" @kind object;
  #L4e58a4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e58aa.  v0:= "body" @kind object;
  #L4e58ae.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e58b4.  v0:= new `io.reactivex.rxjava3.kotlin.ObservableKt$flatMapSequence$1`;
  #L4e58b8.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$flatMapSequence$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L4e58be.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e58c4.  v1:= temp @kind object;
  #L4e58c6.  v2:= "flatMap { body(it).toObservable() }" @kind object;
  #L4e58ca.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e58d0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e58e4.  v0:= "$this$merge" @kind object;
  #L4e58e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e58ee.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e58f4.  v1:= temp @kind object;
  #L4e58f6.  call temp:= `merge`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e58fc.  v1:= temp @kind object;
  #L4e58fe.  v0:= "Observable.merge(this.toObservable())" @kind object;
  #L4e5902.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5908.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeAll`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.mergeAll:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e591c.  v0:= "$this$mergeAll" @kind object;
  #L4e5920.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5926.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$d.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$d` @kind object;
  #L4e592a.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e5930.  v1:= temp @kind object;
  #L4e5932.  v0:= "flatMap { it }" @kind object;
  #L4e5936.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e593c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5950.  v0:= "$this$mergeDelayError" @kind object;
  #L4e5954.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e595a.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5960.  v1:= temp @kind object;
  #L4e5962.  call temp:= `mergeDelayError`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5968.  v1:= temp @kind object;
  #L4e596a.  v0:= "Observable.mergeDelayError(this.toObservable())" @kind object;
  #L4e596e.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5974.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `ofType`(`io.reactivex.rxjava3.core.Observable` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.ofType:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4e5988.  v0:= "$this$ofType" @kind object;
  #L4e598c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5992.  v0:= 4I;
  #L4e5994.  v1:= "R" @kind object;
  #L4e5998.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L4e599e.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L4e59a2.  call temp:= `ofType`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e59a8.  v2:= temp @kind object;
  #L4e59aa.  v0:= "ofType(R::class.java)" @kind object;
  #L4e59ae.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e59b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchLatest`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.switchLatest:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e59c8.  v0:= "$this$switchLatest" @kind object;
  #L4e59cc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e59d2.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$e.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$e` @kind object;
  #L4e59d6.  call temp:= `switchMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e59dc.  v1:= temp @kind object;
  #L4e59de.  v0:= "switchMap { it }" @kind object;
  #L4e59e2.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e59e8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNext`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.switchOnNext:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e59fc.  v0:= "$this$switchOnNext" @kind object;
  #L4e5a00.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5a06.  call temp:= `switchOnNext`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNext:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5a0c.  v1:= temp @kind object;
  #L4e5a0e.  v0:= "Observable.switchOnNext(this)" @kind object;
  #L4e5a12.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5a18.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Observable` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toMap:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L4e5d2c.  v0:= "$this$toMap" @kind object;
  #L4e5d30.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5d36.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$f.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$f` @kind object;
  #L4e5d3a.  v1:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$g.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$g` @kind object;
  #L4e5d3e.  call temp:= `toMap`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4e5d44.  v2:= temp @kind object;
  #L4e5d46.  v0:= "toMap({ it.first }, { it.second })" @kind object;
  #L4e5d4a.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5d50.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toMultimap:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L4e5d64.  v0:= "$this$toMultimap" @kind object;
  #L4e5d68.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5d6e.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$h.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$h` @kind object;
  #L4e5d72.  v1:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$i.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$i` @kind object;
  #L4e5d76.  call temp:= `toMultimap`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4e5d7c.  v2:= temp @kind object;
  #L4e5d7e.  v0:= "toMultimap({ it.first }, { it.second })" @kind object;
  #L4e5d82.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5d88.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5b34.  v0:= "$this$toObservable" @kind object;
  #L4e5b38.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5b3e.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5b44.  v1:= temp @kind object;
  #L4e5b46.  v0:= "Observable.fromIterable(this)" @kind object;
  #L4e5b4a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5b50.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`java.util.Iterator` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/util/Iterator;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5b9c.  v0:= "$this$toObservable" @kind object;
  #L4e5ba0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5ba6.  call temp:= `a`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.a:(Ljava/util/Iterator;)Ljava/lang/Iterable;` @kind static;
  #L4e5bac.  v1:= temp @kind object;
  #L4e5bae.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5bb4.  v1:= temp @kind object;
  #L4e5bb6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`kotlin.ranges.IntProgression` v6 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Lkotlin/ranges/IntProgression;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e5bc8.  v0:= "$this$toObservable" @kind object;
  #L4e5bcc.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5bd2.  call temp:= `getStep`(v6) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L4e5bd8.  v0:= temp;
  #L4e5bda.  v1:= 1I;
  #L4e5bdc.  if v0 != v1 then goto L4e5c40;
  #L4e5be0.  call temp:= `getLast`(v6) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L4e5be6.  v0:= temp;
  #L4e5be8.  v2:= (`long`) v0 @kind i2l;
  #L4e5bea.  call temp:= `getFirst`(v6) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L4e5bf0.  v0:= temp;
  #L4e5bf2.  v4:= (`long`) v0 @kind i2l;
  #L4e5bf4.  v2:= v2 - v4 @kind long;
  #L4e5bf6.  v0:= 2147483647I;
  #L4e5bfc.  v4:= (`long`) v0 @kind i2l;
  #L4e5bfe.  v0:= lcmp(v2, v4);
  #L4e5c02.  if v0 >= 0 then goto L4e5c40;
  #L4e5c06.  call temp:= `getFirst`(v6) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L4e5c0c.  v0:= temp;
  #L4e5c0e.  v2:= 0I;
  #L4e5c10.  call temp:= `getLast`(v6) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L4e5c16.  v3:= temp;
  #L4e5c18.  call temp:= `getFirst`(v6) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L4e5c1e.  v6:= temp;
  #L4e5c20.  v3:= v3 - v6 @kind int;
  #L4e5c22.  v3:= v3 + v1 @kind int;
  #L4e5c24.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4e5c2a.  v6:= temp;
  #L4e5c2c.  call temp:= `range`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.range:(II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5c32.  v6:= temp @kind object;
  #L4e5c34.  v0:= "Observable.range(first, â€¦max(0, last - first + 1))" @kind object;
  #L4e5c38.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5c3e.  goto L4e5c52;
  #L4e5c40.  call temp:= `fromIterable`(v6) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5c46.  v6:= temp @kind object;
  #L4e5c48.  v0:= "Observable.fromIterable(this)" @kind object;
  #L4e5c4c.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5c52.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Lkotlin/sequences/Sequence;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5c64.  v0:= "$this$toObservable" @kind object;
  #L4e5c68.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5c6e.  call temp:= `asIterable`(v1) @signature `Lkotlin/sequences/SequencesKt;.asIterable:(Lkotlin/sequences/Sequence;)Ljava/lang/Iterable;` @kind static;
  #L4e5c74.  v1:= temp @kind object;
  #L4e5c76.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5c7c.  v1:= temp @kind object;
  #L4e5c7e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`byte`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([B)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5a58.  v0:= "$this$toObservable" @kind object;
  #L4e5a5c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5a62.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([B)Ljava/lang/Iterable;` @kind static;
  #L4e5a68.  v1:= temp @kind object;
  #L4e5a6a.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5a70.  v1:= temp @kind object;
  #L4e5a72.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`char`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([C)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5a84.  v0:= "$this$toObservable" @kind object;
  #L4e5a88.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5a8e.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([C)Ljava/lang/Iterable;` @kind static;
  #L4e5a94.  v1:= temp @kind object;
  #L4e5a96.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5a9c.  v1:= temp @kind object;
  #L4e5a9e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`double`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([D)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5ab0.  v0:= "$this$toObservable" @kind object;
  #L4e5ab4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5aba.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([D)Ljava/lang/Iterable;` @kind static;
  #L4e5ac0.  v1:= temp @kind object;
  #L4e5ac2.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5ac8.  v1:= temp @kind object;
  #L4e5aca.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`float`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([F)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5adc.  v0:= "$this$toObservable" @kind object;
  #L4e5ae0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5ae6.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([F)Ljava/lang/Iterable;` @kind static;
  #L4e5aec.  v1:= temp @kind object;
  #L4e5aee.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5af4.  v1:= temp @kind object;
  #L4e5af6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`int`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5b08.  v0:= "$this$toObservable" @kind object;
  #L4e5b0c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5b12.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([I)Ljava/lang/Iterable;` @kind static;
  #L4e5b18.  v1:= temp @kind object;
  #L4e5b1a.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5b20.  v1:= temp @kind object;
  #L4e5b22.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`long`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5c90.  v0:= "$this$toObservable" @kind object;
  #L4e5c94.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5c9a.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([J)Ljava/lang/Iterable;` @kind static;
  #L4e5ca0.  v1:= temp @kind object;
  #L4e5ca2.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5ca8.  v1:= temp @kind object;
  #L4e5caa.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`java.lang.Object`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5b64.  v0:= "$this$toObservable" @kind object;
  #L4e5b68.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5b6e.  v0:= length @variable v1;
  #L4e5b70.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4e5b76.  v1:= temp @kind object;
  #L4e5b78.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5b7e.  v1:= temp @kind object;
  #L4e5b80.  v0:= "Observable.fromArray(*this)" @kind object;
  #L4e5b84.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5b8a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`short`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([S)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5cbc.  v0:= "$this$toObservable" @kind object;
  #L4e5cc0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5cc6.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([S)Ljava/lang/Iterable;` @kind static;
  #L4e5ccc.  v1:= temp @kind object;
  #L4e5cce.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5cd4.  v1:= temp @kind object;
  #L4e5cd6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`boolean`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5a2c.  v0:= "$this$toObservable" @kind object;
  #L4e5a30.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5a36.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([Z)Ljava/lang/Iterable;` @kind static;
  #L4e5a3c.  v1:= temp @kind object;
  #L4e5a3e.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5a44.  v1:= temp @kind object;
  #L4e5a46.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`java.lang.Iterable` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.zip:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e5ce8.  v0:= "$this$zip" @kind object;
  #L4e5cec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5cf2.  v0:= "zipFunction" @kind object;
  #L4e5cf6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5cfc.  v0:= new `io.reactivex.rxjava3.kotlin.ObservableKt$zip$1`;
  #L4e5d00.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$zip$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L4e5d06.  call temp:= `zip`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e5d0c.  v1:= temp @kind object;
  #L4e5d0e.  v2:= "Observable.zip(this) { zâ€¦List().map { it as T }) }" @kind object;
  #L4e5d12.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e5d18.  return v1 @kind object;
}
