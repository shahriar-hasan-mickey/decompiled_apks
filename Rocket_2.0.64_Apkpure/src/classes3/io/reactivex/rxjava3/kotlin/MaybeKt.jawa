record `io.reactivex.rxjava3.kotlin.MaybeKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `io.reactivex.rxjava3.core.Maybe` `cast`(`io.reactivex.rxjava3.core.Maybe` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.cast:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4e45c0.  v0:= "$this$cast" @kind object;
  #L4e45c4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e45ca.  v0:= 4I;
  #L4e45cc.  v1:= "R" @kind object;
  #L4e45d0.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L4e45d6.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L4e45da.  call temp:= `cast`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L4e45e0.  v2:= temp @kind object;
  #L4e45e2.  v0:= "cast(R::class.java)" @kind object;
  #L4e45e6.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e45ec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatAll`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.concatAll:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e455c.  v0:= "$this$concatAll" @kind object;
  #L4e4560.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e4566.  call temp:= `concat`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4e456c.  v1:= temp @kind object;
  #L4e456e.  v0:= "Maybe.concat(this)" @kind object;
  #L4e4572.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e4578.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeAllMaybes`(`io.reactivex.rxjava3.core.Flowable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.mergeAllMaybes:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e458c.  v0:= "$this$mergeAllMaybes" @kind object;
  #L4e4590.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e4596.  v0:= `@@io.reactivex.rxjava3.kotlin.MaybeKt$b.a` @type ^`io.reactivex.rxjava3.kotlin.MaybeKt$b` @kind object;
  #L4e459a.  call temp:= `flatMapMaybe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4e45a0.  v1:= temp @kind object;
  #L4e45a2.  v0:= "flatMapMaybe { it }" @kind object;
  #L4e45a6.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e45ac.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeAllMaybes`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.mergeAllMaybes:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L4e4640.  v0:= "$this$mergeAllMaybes" @kind object;
  #L4e4644.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e464a.  v0:= `@@io.reactivex.rxjava3.kotlin.MaybeKt$a.a` @type ^`io.reactivex.rxjava3.kotlin.MaybeKt$a` @kind object;
  #L4e464e.  call temp:= `flatMapMaybe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e4654.  v1:= temp @kind object;
  #L4e4656.  v0:= "flatMapMaybe { it }" @kind object;
  #L4e465a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e4660.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `ofType`(`io.reactivex.rxjava3.core.Maybe` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.ofType:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4e4600.  v0:= "$this$ofType" @kind object;
  #L4e4604.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e460a.  v0:= 4I;
  #L4e460c.  v1:= "R" @kind object;
  #L4e4610.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L4e4616.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L4e461a.  call temp:= `ofType`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L4e4620.  v2:= temp @kind object;
  #L4e4622.  v0:= "ofType(R::class.java)" @kind object;
  #L4e4626.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4e462c.  return v2 @kind object;
}
