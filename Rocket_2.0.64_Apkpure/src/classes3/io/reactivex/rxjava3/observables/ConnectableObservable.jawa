record `io.reactivex.rxjava3.observables.ConnectableObservable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.Observable` @kind class {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.observables.ConnectableObservable` v0 @kind this) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e8d3c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4e8d42.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `autoConnect`(`io.reactivex.rxjava3.observables.ConnectableObservable` v1 @kind this) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.autoConnect:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8b70.  v0:= 1I;
  #L4e8b72.  call temp:= `autoConnect`(v1, v0) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.autoConnect:(I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e8b78.  v0:= temp @kind object;
  #L4e8b7a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `autoConnect`(`io.reactivex.rxjava3.observables.ConnectableObservable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.autoConnect:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8b8c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4e8b92.  v0:= temp @kind object;
  #L4e8b94.  call temp:= `autoConnect`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.autoConnect:(ILio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e8b9a.  v2:= temp @kind object;
  #L4e8b9c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `autoConnect`(`io.reactivex.rxjava3.observables.ConnectableObservable` v1 @kind this, `int` v2 , `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.autoConnect:(ILio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8bb0.  v0:= "connection is null" @kind object;
  #L4e8bb4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e8bba.  if v2 > 0 then goto L4e8bce;
  #L4e8bbe.  call `connect`(v1, v3) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L4e8bc4.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/observables/ConnectableObservable;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4e8bca.  v2:= temp @kind object;
  #L4e8bcc.  return v2 @kind object;
  #L4e8bce.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAutoConnect`;
  #L4e8bd2.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAutoConnect;.<init>:(Lio/reactivex/rxjava3/observables/ConnectableObservable;ILio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4e8bd8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e8bde.  v2:= temp @kind object;
  #L4e8be0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `connect`(`io.reactivex.rxjava3.observables.ConnectableObservable` v1 @kind this) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.connect:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4e8d14.  v0:= new `io.reactivex.rxjava3.internal.util.ConnectConsumer`;
  #L4e8d18.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ConnectConsumer;.<init>:()V` @kind direct;
  #L4e8d1e.  call `connect`(v1, v0) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L4e8d24.  v0:= v0.`io.reactivex.rxjava3.internal.util.ConnectConsumer.disposable` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e8d28.  return v0 @kind object;
}
procedure `void` `connect`(`io.reactivex.rxjava3.functions.Consumer` v0 @kind object) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Observable` `refCount`(`io.reactivex.rxjava3.observables.ConnectableObservable` v1 @kind this) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8bf4.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount`;
  #L4e8bf8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount;.<init>:(Lio/reactivex/rxjava3/observables/ConnectableObservable;)V` @kind direct;
  #L4e8bfe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e8c04.  v0:= temp @kind object;
  #L4e8c06.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `refCount`(`io.reactivex.rxjava3.observables.ConnectableObservable` v6 @kind this, `int` v7 ) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e8c18.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4e8c1c.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4e8c22.  v5:= temp @kind object;
  #L4e8c24.  v2:= 0L;
  #L4e8c28.  v0:= v6 @kind object;
  #L4e8c2a.  v1:= v7;
  #L4e8c2c.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e8c32.  v7:= temp @kind object;
  #L4e8c34.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `refCount`(`io.reactivex.rxjava3.observables.ConnectableObservable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e8c48.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4e8c4e.  v5:= temp @kind object;
  #L4e8c50.  v0:= v6 @kind object;
  #L4e8c52.  v1:= v7;
  #L4e8c54.  v2:= v8 @kind wide;
  #L4e8c56.  v4:= v10 @kind object;
  #L4e8c58.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e8c5e.  v7:= temp @kind object;
  #L4e8c60.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `refCount`(`io.reactivex.rxjava3.observables.ConnectableObservable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4e8c74.  v0:= "subscriberCount" @kind object;
  #L4e8c78.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4e8c7e.  v0:= "unit is null" @kind object;
  #L4e8c82.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e8c88.  v0:= "scheduler is null" @kind object;
  #L4e8c8c.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e8c92.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount`;
  #L4e8c96.  v1:= v0 @kind object;
  #L4e8c98.  v2:= v8 @kind object;
  #L4e8c9a.  v3:= v9;
  #L4e8c9c.  v4:= v10 @kind wide;
  #L4e8c9e.  v6:= v12 @kind object;
  #L4e8ca0.  v7:= v13 @kind object;
  #L4e8ca2.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount;.<init>:(Lio/reactivex/rxjava3/observables/ConnectableObservable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4e8ca8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4e8cae.  v9:= temp @kind object;
  #L4e8cb0.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `refCount`(`io.reactivex.rxjava3.observables.ConnectableObservable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e8cc4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4e8cca.  v5:= temp @kind object;
  #L4e8ccc.  v1:= 1I;
  #L4e8cce.  v0:= v6 @kind object;
  #L4e8cd0.  v2:= v7 @kind wide;
  #L4e8cd2.  v4:= v9 @kind object;
  #L4e8cd4.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e8cda.  v7:= temp @kind object;
  #L4e8cdc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `refCount`(`io.reactivex.rxjava3.observables.ConnectableObservable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e8cf0.  v1:= 1I;
  #L4e8cf2.  v0:= v6 @kind object;
  #L4e8cf4.  v2:= v7 @kind wide;
  #L4e8cf6.  v4:= v9 @kind object;
  #L4e8cf8.  v5:= v10 @kind object;
  #L4e8cfa.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4e8d00.  v7:= temp @kind object;
  #L4e8d02.  return v7 @kind object;
}
procedure `void` `reset`() @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.reset:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
