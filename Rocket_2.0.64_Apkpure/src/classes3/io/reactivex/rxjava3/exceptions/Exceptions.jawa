record `io.reactivex.rxjava3.exceptions.Exceptions` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.exceptions.Exceptions` v2 @kind this) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L479abc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L479ac2.  v0:= new `java.lang.IllegalStateException`;
  #L479ac6.  v1:= "No instances!" @kind object;
  #L479aca.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L479ad0.  throw v0;
}
procedure `java.lang.RuntimeException` `propagate`(`java.lang.Throwable` v0 @kind object) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L479aa0.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L479aa6.  v0:= temp @kind object;
  #L479aa8.  throw v0;
}
procedure `void` `throwIfFatal`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L479ae4.  v0:= instanceof @variable v1 @type ^`java.lang.VirtualMachineError` @kind boolean;
  #L479ae8.  if v0 != 0 then goto L479b0a;
  #L479aec.  v0:= instanceof @variable v1 @type ^`java.lang.ThreadDeath` @kind boolean;
  #L479af0.  if v0 != 0 then goto L479b04;
  #L479af4.  v0:= instanceof @variable v1 @type ^`java.lang.LinkageError` @kind boolean;
  #L479af8.  if v0 != 0 then goto L479afe;
  #L479afc.  return @kind void;
  #L479afe.  v1:= (`java.lang.LinkageError`) v1 @kind object;
  #L479b02.  throw v1;
  #L479b04.  v1:= (`java.lang.ThreadDeath`) v1 @kind object;
  #L479b08.  throw v1;
  #L479b0a.  v1:= (`java.lang.VirtualMachineError`) v1 @kind object;
  #L479b0e.  throw v1;
}
