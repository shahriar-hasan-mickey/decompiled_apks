record `io.reactivex.rxjava3.subscribers.SerializedSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @AccessFlag ;
  `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f4bb4.  v0:= 0I;
  #L4f4bb6.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Z)V` @kind direct;
  #L4f4bbc.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f4bd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f4bd6.  v0.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4f4bda.  v0.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.b` @type ^`boolean` := v2 @kind boolean;
  #L4f4bde.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4f4c0c.  @monitorenter v2
  #L4f4c0e.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f4c12.  if v0 != 0 then goto L4f4c20;
  #L4f4c16.  v0:= 0I;
  #L4f4c18.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` := v0 @kind boolean;
  #L4f4c1c.  @monitorexit v2
  #L4f4c1e.  return @kind void;
  #L4f4c20.  v1:= 0I;
  #L4f4c22.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L4f4c26.  @monitorexit v2
  #L4f4c28.  v1:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f4c2c.  call temp:= `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.accept:(Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L4f4c32.  v0:= temp;
  #L4f4c34.  if v0 == 0 then goto L4f4c0c;
  #L4f4c38.  return @kind void;
  #L4f4c3a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f4c3c.  @monitorexit v2
  #L4f4c3e.  throw v0;
  catch `java.lang.Throwable` @[L4f4c0e..L4f4c28] goto L4f4c3a;
  catch `java.lang.Throwable` @[L4f4c3c..L4f4c3e] goto L4f4c3a;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f4bf0.  v0:= v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f4bf4.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4f4bfa.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f4c64.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L4f4c68.  if v0 == 0 then goto L4f4c6e;
  #L4f4c6c.  return @kind void;
  #L4f4c6e.  @monitorenter v2
  #L4f4c70.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L4f4c74.  if v0 == 0 then goto L4f4c7c;
  #L4f4c78.  @monitorexit v2
  #L4f4c7a.  return @kind void;
  #L4f4c7c.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` @kind boolean;
  #L4f4c80.  if v0 == 0 then goto L4f4cae;
  #L4f4c84.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f4c88.  if v0 != 0 then goto L4f4c9c;
  #L4f4c8c.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L4f4c90.  v1:= 4I;
  #L4f4c92.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L4f4c98.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L4f4c9c.  call temp:= `complete`() @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L4f4ca2.  v1:= temp @kind object;
  #L4f4ca4.  call `add`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L4f4caa.  @monitorexit v2
  #L4f4cac.  return @kind void;
  #L4f4cae.  v0:= 1I;
  #L4f4cb0.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` := v0 @kind boolean;
  #L4f4cb4.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` := v0 @kind boolean;
  #L4f4cb8.  @monitorexit v2
  #L4f4cba.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f4cbe.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4f4cc4.  return @kind void;
  #L4f4cc6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f4cc8.  @monitorexit v2
  #L4f4cca.  throw v0;
  catch `java.lang.Throwable` @[L4f4c70..L4f4cba] goto L4f4cc6;
  catch `java.lang.Throwable` @[L4f4cc8..L4f4cca] goto L4f4cc6;
}
procedure `void` `onError`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f4cf0.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L4f4cf4.  if v0 == 0 then goto L4f4d00;
  #L4f4cf8.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f4cfe.  return @kind void;
  #L4f4d00.  @monitorenter v2
  #L4f4d02.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L4f4d06.  v1:= 1I;
  #L4f4d08.  if v0 == 0 then goto L4f4d0e;
  #L4f4d0c.  goto L4f4d5e;
  #L4f4d0e.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` @kind boolean;
  #L4f4d12.  if v0 == 0 then goto L4f4d54;
  #L4f4d16.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` := v1 @kind boolean;
  #L4f4d1a.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f4d1e.  if v0 != 0 then goto L4f4d32;
  #L4f4d22.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L4f4d26.  v1:= 4I;
  #L4f4d28.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L4f4d2e.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L4f4d32.  call temp:= `error`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L4f4d38.  v3:= temp @kind object;
  #L4f4d3a.  v1:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.b` @type ^`boolean` @kind boolean;
  #L4f4d3e.  if v1 == 0 then goto L4f4d4a;
  #L4f4d42.  call `add`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L4f4d48.  goto L4f4d50;
  #L4f4d4a.  call `setFirst`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.setFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L4f4d50.  @monitorexit v2
  #L4f4d52.  return @kind void;
  #L4f4d54.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` := v1 @kind boolean;
  #L4f4d58.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` := v1 @kind boolean;
  #L4f4d5c.  v1:= 0I;
  #L4f4d5e.  @monitorexit v2
  #L4f4d60.  if v1 == 0 then goto L4f4d6c;
  #L4f4d64.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f4d6a.  return @kind void;
  #L4f4d6c.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f4d70.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f4d76.  return @kind void;
  #L4f4d78.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f4d7a.  @monitorexit v2
  #L4f4d7c.  throw v3;
  catch `java.lang.Throwable` @[L4f4d02..L4f4d60] goto L4f4d78;
  catch `java.lang.Throwable` @[L4f4d7a..L4f4d7c] goto L4f4d78;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f4da4.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L4f4da8.  if v0 == 0 then goto L4f4dae;
  #L4f4dac.  return @kind void;
  #L4f4dae.  if v3 != 0 then goto L4f4dd0;
  #L4f4db2.  v3:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f4db6.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4f4dbc.  v3:= "onNext called with a null value." @kind object;
  #L4f4dc0.  call temp:= `createNullPointerException`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4f4dc6.  v3:= temp @kind object;
  #L4f4dc8.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f4dce.  return @kind void;
  #L4f4dd0.  @monitorenter v2
  #L4f4dd2.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L4f4dd6.  if v0 == 0 then goto L4f4dde;
  #L4f4dda.  @monitorexit v2
  #L4f4ddc.  return @kind void;
  #L4f4dde.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` @kind boolean;
  #L4f4de2.  if v0 == 0 then goto L4f4e10;
  #L4f4de6.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f4dea.  if v0 != 0 then goto L4f4dfe;
  #L4f4dee.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L4f4df2.  v1:= 4I;
  #L4f4df4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L4f4dfa.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L4f4dfe.  call temp:= `next`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4f4e04.  v3:= temp @kind object;
  #L4f4e06.  call `add`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L4f4e0c.  @monitorexit v2
  #L4f4e0e.  return @kind void;
  #L4f4e10.  v0:= 1I;
  #L4f4e12.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` := v0 @kind boolean;
  #L4f4e16.  @monitorexit v2
  #L4f4e18.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f4e1c.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f4e22.  call `a`(v2) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.a:()V` @kind virtual;
  #L4f4e28.  return @kind void;
  #L4f4e2a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f4e2c.  @monitorexit v2
  #L4f4e2e.  throw v3;
  catch `java.lang.Throwable` @[L4f4dd2..L4f4e18] goto L4f4e2a;
  catch `java.lang.Throwable` @[L4f4e2c..L4f4e2e] goto L4f4e2a;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f4e54.  v0:= v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f4e58.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4f4e5e.  v0:= temp;
  #L4f4e60.  if v0 == 0 then goto L4f4e72;
  #L4f4e64.  v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4f4e68.  v2:= v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4f4e6c.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4f4e72.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f4e84.  v0:= v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4f4e88.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4f4e8e.  return @kind void;
}
