record `io.reactivex.rxjava3.subscribers.ResourceSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` `io.reactivex.rxjava3.subscribers.ResourceSubscriber.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.subscribers.ResourceSubscriber.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f4578.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f457e.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4f4582.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4f4588.  v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4f458c.  v0:= new `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable`;
  #L4f4590.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L4f4596.  v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` := v0 @kind object;
  #L4f459a.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4f459e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4f45a4.  v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4f45a8.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4f45bc.  v0:= "resource is null" @kind object;
  #L4f45c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4f45c6.  v0:= v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L4f45ca.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4f45d0.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4f45e4.  v0:= v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f45e8.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4f45ee.  v0:= temp;
  #L4f45f0.  if v0 == 0 then goto L4f45fe;
  #L4f45f4.  v0:= v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L4f45f8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.dispose:()V` @kind virtual;
  #L4f45fe.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4f454c.  v0:= v2.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f4550.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4f4556.  v0:= temp @kind object;
  #L4f4558.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4f455c.  if v0 != v1 then goto L4f4564;
  #L4f4560.  v0:= 1I;
  #L4f4562.  goto L4f4566;
  #L4f4564.  v0:= 0I;
  #L4f4566.  return v0;
}
procedure `void` `onStart`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.onStart:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4f4610.  v0:= 9223372036854775807L;
  #L4f461a.  call `request`(v2, v0) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.request:(J)V` @kind virtual;
  #L4f4620.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v5 @kind this, `org.reactivestreams.Subscription` v6 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f4634.  v0:= v5.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f4638.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f463e.  v1:= temp @kind object;
  #L4f4640.  call temp:= `setOnce`(v0, v6, v1) @signature `Lio/reactivex/rxjava3/internal/util/EndConsumerHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z` @kind static;
  #L4f4646.  v0:= temp;
  #L4f4648.  if v0 == 0 then goto L4f4670;
  #L4f464c.  v0:= v5.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4f4650.  v1:= 0L;
  #L4f4654.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4f465a.  v3:= temp @kind wide;
  #L4f465c.  v0:= lcmp(v3, v1);
  #L4f4660.  if v0 == 0 then goto L4f466a;
  #L4f4664.  call `request`(v6, v3) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4f466a.  call `onStart`(v5) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.onStart:()V` @kind virtual;
  #L4f4670.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.request:(J)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L4f4684.  v0:= v2.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f4688.  v1:= v2.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4f468c.  call `deferredRequest`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L4f4692.  return @kind void;
}
