record `io.reactivex.rxjava3.subscribers.DisposableSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f4464.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f446a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4f446e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4f4474.  v1.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4f4478.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v0 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.cancel:()V` @AccessFlag PROTECTED_FINAL {
    temp;

  #L4f448c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.dispose:()V` @kind virtual;
  #L4f4492.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4f44a4.  v0:= v1.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f44a8.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4f44ae.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4f4438.  v0:= v2.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f443c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4f4442.  v0:= temp @kind object;
  #L4f4444.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4f4448.  if v0 != v1 then goto L4f4450;
  #L4f444c.  v0:= 1I;
  #L4f444e.  goto L4f4452;
  #L4f4450.  v0:= 0I;
  #L4f4452.  return v0;
}
procedure `void` `onStart`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v3 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.onStart:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4f44c0.  v0:= v3.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f44c4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4f44ca.  v0:= temp @kind object;
  #L4f44cc.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L4f44d0.  v1:= 9223372036854775807L;
  #L4f44da.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4f44e0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4f44f4.  v0:= v2.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f44f8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f44fe.  v1:= temp @kind object;
  #L4f4500.  call temp:= `setOnce`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/util/EndConsumerHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z` @kind static;
  #L4f4506.  v3:= temp;
  #L4f4508.  if v3 == 0 then goto L4f4512;
  #L4f450c.  call `onStart`(v2) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.onStart:()V` @kind virtual;
  #L4f4512.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.request:(J)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4f4524.  v0:= v1.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f4528.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4f452e.  v0:= temp @kind object;
  #L4f4530.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L4f4534.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4f453a.  return @kind void;
}
