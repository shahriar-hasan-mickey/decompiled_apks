record `io.reactivex.rxjava3.schedulers.TestScheduler$b` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface {
  `long` `io.reactivex.rxjava3.schedulers.TestScheduler$b.a` @AccessFlag FINAL;
  `java.lang.Runnable` `io.reactivex.rxjava3.schedulers.TestScheduler$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.schedulers.TestScheduler$a` `io.reactivex.rxjava3.schedulers.TestScheduler$b.c` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.schedulers.TestScheduler$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.schedulers.TestScheduler$b` v0 @kind this, `io.reactivex.rxjava3.schedulers.TestScheduler$a` v1 @kind object, `long` v2 , `java.lang.Runnable` v4 @kind object, `long` v5 ) @signature `Lio/reactivex/rxjava3/schedulers/TestScheduler$b;.<init>:(Lio/reactivex/rxjava3/schedulers/TestScheduler$a;JLjava/lang/Runnable;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f0778.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f077e.  v0.`io.reactivex.rxjava3.schedulers.TestScheduler$b.a` @type ^`long` := v2 @kind wide;
  #L4f0782.  v0.`io.reactivex.rxjava3.schedulers.TestScheduler$b.b` @type ^`java.lang.Runnable` := v4 @kind object;
  #L4f0786.  v0.`io.reactivex.rxjava3.schedulers.TestScheduler$b.c` @type ^`io.reactivex.rxjava3.schedulers.TestScheduler$a` := v1 @kind object;
  #L4f078a.  v0.`io.reactivex.rxjava3.schedulers.TestScheduler$b.d` @type ^`long` := v5 @kind wide;
  #L4f078e.  return @kind void;
}
procedure `int` `a`(`io.reactivex.rxjava3.schedulers.TestScheduler$b` v5 @kind this, `io.reactivex.rxjava3.schedulers.TestScheduler$b` v6 @kind object) @signature `Lio/reactivex/rxjava3/schedulers/TestScheduler$b;.a:(Lio/reactivex/rxjava3/schedulers/TestScheduler$b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f06d4.  v0:= v5.`io.reactivex.rxjava3.schedulers.TestScheduler$b.a` @type ^`long` @kind wide;
  #L4f06d8.  v2:= v6.`io.reactivex.rxjava3.schedulers.TestScheduler$b.a` @type ^`long` @kind wide;
  #L4f06dc.  v4:= lcmp(v0, v2);
  #L4f06e0.  if v4 != 0 then goto L4f06f6;
  #L4f06e4.  v0:= v5.`io.reactivex.rxjava3.schedulers.TestScheduler$b.d` @type ^`long` @kind wide;
  #L4f06e8.  v2:= v6.`io.reactivex.rxjava3.schedulers.TestScheduler$b.d` @type ^`long` @kind wide;
  #L4f06ec.  call temp:= `compare`(v0, v2) @signature `Ljava/lang/Long;.compare:(JJ)I` @kind static;
  #L4f06f2.  v6:= temp;
  #L4f06f4.  return v6;
  #L4f06f6.  call temp:= `compare`(v0, v2) @signature `Ljava/lang/Long;.compare:(JJ)I` @kind static;
  #L4f06fc.  v6:= temp;
  #L4f06fe.  return v6;
}
procedure `int` `compareTo`(`io.reactivex.rxjava3.schedulers.TestScheduler$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/schedulers/TestScheduler$b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4f0710.  v1:= (`io.reactivex.rxjava3.schedulers.TestScheduler$b`) v1 @kind object;
  #L4f0714.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/rxjava3/schedulers/TestScheduler$b;.a:(Lio/reactivex/rxjava3/schedulers/TestScheduler$b;)I` @kind virtual;
  #L4f071a.  v1:= temp;
  #L4f071c.  return v1;
}
procedure `java.lang.String` `toString`(`io.reactivex.rxjava3.schedulers.TestScheduler$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/schedulers/TestScheduler$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f0730.  v0:= 2I;
  #L4f0732.  v0:= new `java.lang.Object`[v0];
  #L4f0736.  v1:= v3.`io.reactivex.rxjava3.schedulers.TestScheduler$b.a` @type ^`long` @kind wide;
  #L4f073a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4f0740.  v1:= temp @kind object;
  #L4f0742.  v2:= 0I;
  #L4f0744.  v0[v2]:= v1 @kind object;
  #L4f0748.  v1:= v3.`io.reactivex.rxjava3.schedulers.TestScheduler$b.b` @type ^`java.lang.Runnable` @kind object;
  #L4f074c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f0752.  v1:= temp @kind object;
  #L4f0754.  v2:= 1I;
  #L4f0756.  v0[v2]:= v1 @kind object;
  #L4f075a.  v1:= "TimedRunnable(time = %d, run = %s)" @kind object;
  #L4f075e.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4f0764.  v0:= temp @kind object;
  #L4f0766.  return v0 @kind object;
}
