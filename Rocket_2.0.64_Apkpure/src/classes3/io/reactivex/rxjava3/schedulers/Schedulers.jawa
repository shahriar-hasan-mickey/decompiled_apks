record `io.reactivex.rxjava3.schedulers.Schedulers` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.a` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.b` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.c` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.d` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f03e0.  v0:= new `io.reactivex.rxjava3.schedulers.Schedulers$h`;
  #L4f03e4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers$h;.<init>:()V` @kind direct;
  #L4f03ea.  call temp:= `initSingleScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.initSingleScheduler:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f03f0.  v0:= temp @kind object;
  #L4f03f2.  `@@io.reactivex.rxjava3.schedulers.Schedulers.a` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L4f03f6.  v0:= new `io.reactivex.rxjava3.schedulers.Schedulers$b`;
  #L4f03fa.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers$b;.<init>:()V` @kind direct;
  #L4f0400.  call temp:= `initComputationScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.initComputationScheduler:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f0406.  v0:= temp @kind object;
  #L4f0408.  `@@io.reactivex.rxjava3.schedulers.Schedulers.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L4f040c.  v0:= new `io.reactivex.rxjava3.schedulers.Schedulers$c`;
  #L4f0410.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers$c;.<init>:()V` @kind direct;
  #L4f0416.  call temp:= `initIoScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.initIoScheduler:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f041c.  v0:= temp @kind object;
  #L4f041e.  `@@io.reactivex.rxjava3.schedulers.Schedulers.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L4f0422.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.instance:()Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;` @kind static;
  #L4f0428.  v0:= temp @kind object;
  #L4f042a.  `@@io.reactivex.rxjava3.schedulers.Schedulers.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L4f042e.  v0:= new `io.reactivex.rxjava3.schedulers.Schedulers$f`;
  #L4f0432.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers$f;.<init>:()V` @kind direct;
  #L4f0438.  call temp:= `initNewThreadScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.initNewThreadScheduler:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f043e.  v0:= temp @kind object;
  #L4f0440.  `@@io.reactivex.rxjava3.schedulers.Schedulers.e` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L4f0444.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.schedulers.Schedulers` v2 @kind this) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4f0458.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f045e.  v0:= new `java.lang.IllegalStateException`;
  #L4f0462.  v1:= "No instances!" @kind object;
  #L4f0466.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f046c.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f02ec.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4f02f0.  call temp:= `onComputationScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onComputationScheduler:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f02f6.  v0:= temp @kind object;
  #L4f02f8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `from`(`java.util.concurrent.Executor` v2 @kind object) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.from:(Ljava/util/concurrent/Executor;)Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4f030c.  v0:= new `io.reactivex.rxjava3.internal.schedulers.ExecutorScheduler`;
  #L4f0310.  v1:= 0I;
  #L4f0312.  call `<init>`(v0, v2, v1, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;ZZ)V` @kind direct;
  #L4f0318.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `from`(`java.util.concurrent.Executor` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.from:(Ljava/util/concurrent/Executor;Z)Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4f032c.  v0:= new `io.reactivex.rxjava3.internal.schedulers.ExecutorScheduler`;
  #L4f0330.  v1:= 0I;
  #L4f0332.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;ZZ)V` @kind direct;
  #L4f0338.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `from`(`java.util.concurrent.Executor` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.from:(Ljava/util/concurrent/Executor;ZZ)Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f034c.  v0:= new `io.reactivex.rxjava3.internal.schedulers.ExecutorScheduler`;
  #L4f0350.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;ZZ)V` @kind direct;
  #L4f0356.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `io`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.io:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f0368.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4f036c.  call temp:= `onIoScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onIoScheduler:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f0372.  v0:= temp @kind object;
  #L4f0374.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `newThread`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.newThread:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f0388.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4f038c.  call temp:= `onNewThreadScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onNewThreadScheduler:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f0392.  v0:= temp @kind object;
  #L4f0394.  return v0 @kind object;
}
procedure `void` `shutdown`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.shutdown:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f0480.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f0486.  v0:= temp @kind object;
  #L4f0488.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L4f048e.  call temp:= `io`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.io:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f0494.  v0:= temp @kind object;
  #L4f0496.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L4f049c.  call temp:= `newThread`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.newThread:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f04a2.  v0:= temp @kind object;
  #L4f04a4.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L4f04aa.  call temp:= `single`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.single:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f04b0.  v0:= temp @kind object;
  #L4f04b2.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L4f04b8.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f04be.  v0:= temp @kind object;
  #L4f04c0.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L4f04c6.  call `shutdown`() @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory;.shutdown:()V` @kind static;
  #L4f04cc.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `single`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.single:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f03a8.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.a` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4f03ac.  call temp:= `onSingleScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSingleScheduler:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f03b2.  v0:= temp @kind object;
  #L4f03b4.  return v0 @kind object;
}
procedure `void` `start`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.start:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f04e0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f04e6.  v0:= temp @kind object;
  #L4f04e8.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L4f04ee.  call temp:= `io`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.io:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f04f4.  v0:= temp @kind object;
  #L4f04f6.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L4f04fc.  call temp:= `newThread`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.newThread:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f0502.  v0:= temp @kind object;
  #L4f0504.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L4f050a.  call temp:= `single`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.single:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f0510.  v0:= temp @kind object;
  #L4f0512.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L4f0518.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4f051e.  v0:= temp @kind object;
  #L4f0520.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L4f0526.  call `start`() @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory;.start:()V` @kind static;
  #L4f052c.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f03c8.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4f03cc.  return v0 @kind object;
}
