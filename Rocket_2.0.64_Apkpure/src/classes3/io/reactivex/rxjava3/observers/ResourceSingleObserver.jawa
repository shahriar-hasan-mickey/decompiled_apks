record `io.reactivex.rxjava3.observers.ResourceSingleObserver` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.observers.ResourceSingleObserver.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` `io.reactivex.rxjava3.observers.ResourceSingleObserver.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.observers.ResourceSingleObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceSingleObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e9f90.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e9f96.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4e9f9a.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4e9fa0.  v1.`io.reactivex.rxjava3.observers.ResourceSingleObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4e9fa4.  v0:= new `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable`;
  #L4e9fa8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L4e9fae.  v1.`io.reactivex.rxjava3.observers.ResourceSingleObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` := v0 @kind object;
  #L4e9fb2.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.observers.ResourceSingleObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/observers/ResourceSingleObserver;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4e9fc4.  v0:= "resource is null" @kind object;
  #L4e9fc8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e9fce.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceSingleObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L4e9fd2.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4e9fd8.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.observers.ResourceSingleObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceSingleObserver;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4e9fec.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceSingleObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4e9ff0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e9ff6.  v0:= temp;
  #L4e9ff8.  if v0 == 0 then goto L4ea006;
  #L4e9ffc.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceSingleObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L4ea000.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.dispose:()V` @kind virtual;
  #L4ea006.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.observers.ResourceSingleObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4e9f64.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceSingleObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4e9f68.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e9f6e.  v0:= temp @kind object;
  #L4e9f70.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4e9f74.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e9f7a.  v0:= temp;
  #L4e9f7c.  return v0;
}
procedure `void` `onStart`(`io.reactivex.rxjava3.observers.ResourceSingleObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceSingleObserver;.onStart:()V` @AccessFlag PROTECTED {
    temp;

  #L4ea018.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.observers.ResourceSingleObserver` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/observers/ResourceSingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4ea02c.  v0:= v2.`io.reactivex.rxjava3.observers.ResourceSingleObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4ea030.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4ea036.  v1:= temp @kind object;
  #L4ea038.  call temp:= `setOnce`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/util/EndConsumerHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;Ljava/lang/Class;)Z` @kind static;
  #L4ea03e.  v3:= temp;
  #L4ea040.  if v3 == 0 then goto L4ea04a;
  #L4ea044.  call `onStart`(v2) @signature `Lio/reactivex/rxjava3/observers/ResourceSingleObserver;.onStart:()V` @kind virtual;
  #L4ea04a.  return @kind void;
}
