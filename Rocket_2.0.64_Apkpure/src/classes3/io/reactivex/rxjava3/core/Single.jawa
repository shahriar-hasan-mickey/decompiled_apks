record `io.reactivex.rxjava3.core.Single` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.SingleSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Single` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L478d98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L478d9e.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Single` `a`(`io.reactivex.rxjava3.core.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `io.reactivex.rxjava3.core.SingleSource` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L478444.  v0:= "unit is null" @kind object;
  #L478448.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47844e.  v0:= "scheduler is null" @kind object;
  #L478452.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478458.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimeout`;
  #L47845c.  v1:= v0 @kind object;
  #L47845e.  v2:= v8 @kind object;
  #L478460.  v3:= v9 @kind wide;
  #L478462.  v5:= v11 @kind object;
  #L478464.  v6:= v12 @kind object;
  #L478466.  v7:= v13 @kind object;
  #L478468.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L47846e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478474.  v9:= temp @kind object;
  #L478476.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.amb:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4775fc.  v0:= "sources is null" @kind object;
  #L477600.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477606.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleAmb`;
  #L47760a.  v1:= 0I;
  #L47760c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L477612.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477618.  v2:= temp @kind object;
  #L47761a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `ambArray`(`io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.ambArray:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47762c.  v0:= "sources is null" @kind object;
  #L477630.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477636.  v0:= length @variable v2;
  #L477638.  if v0 != 0 then goto L47764e;
  #L47763c.  call temp:= `emptyThrower`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.emptyThrower:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L477642.  v2:= temp @kind object;
  #L477644.  call temp:= `error`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47764a.  v2:= temp @kind object;
  #L47764c.  return v2 @kind object;
  #L47764e.  v0:= length @variable v2;
  #L477650.  v1:= 1I;
  #L477652.  if v0 != v1 then goto L477666;
  #L477656.  v0:= 0I;
  #L477658.  v2:= v2[v0] @kind object;
  #L47765c.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477662.  v2:= temp @kind object;
  #L477664.  return v2 @kind object;
  #L477666.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleAmb`;
  #L47766a.  v1:= 0I;
  #L47766c.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L477672.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477678.  v2:= temp @kind object;
  #L47767a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `b`(`io.reactivex.rxjava3.core.Flowable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L47858c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingleSingle`;
  #L478590.  v1:= 0I;
  #L478592.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L478598.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47859e.  v2:= temp @kind object;
  #L4785a0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476838.  v0:= "source1 is null" @kind object;
  #L47683c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476842.  v0:= "source2 is null" @kind object;
  #L476846.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47684c.  v0:= 2I;
  #L47684e.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L476852.  v1:= 0I;
  #L476854.  v0[v1]:= v2 @kind object;
  #L476858.  v2:= 1I;
  #L47685a.  v0[v2]:= v3 @kind object;
  #L47685e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476864.  v2:= temp @kind object;
  #L476866.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47686c.  v3:= temp @kind object;
  #L47686e.  call temp:= `concatMapSingleDelayError`(v2, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476874.  v2:= temp @kind object;
  #L476876.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476888.  v0:= "source1 is null" @kind object;
  #L47688c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476892.  v0:= "source2 is null" @kind object;
  #L476896.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47689c.  v0:= "source3 is null" @kind object;
  #L4768a0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4768a6.  v0:= 3I;
  #L4768a8.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4768ac.  v1:= 0I;
  #L4768ae.  v0[v1]:= v2 @kind object;
  #L4768b2.  v2:= 1I;
  #L4768b4.  v0[v2]:= v3 @kind object;
  #L4768b8.  v2:= 2I;
  #L4768ba.  v0[v2]:= v4 @kind object;
  #L4768be.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4768c4.  v2:= temp @kind object;
  #L4768c6.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4768cc.  v3:= temp @kind object;
  #L4768ce.  call temp:= `concatMapSingleDelayError`(v2, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4768d4.  v2:= temp @kind object;
  #L4768d6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4768e8.  v0:= "source1 is null" @kind object;
  #L4768ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4768f2.  v0:= "source2 is null" @kind object;
  #L4768f6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4768fc.  v0:= "source3 is null" @kind object;
  #L476900.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476906.  v0:= "source4 is null" @kind object;
  #L47690a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476910.  v0:= 4I;
  #L476912.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L476916.  v1:= 0I;
  #L476918.  v0[v1]:= v2 @kind object;
  #L47691c.  v2:= 1I;
  #L47691e.  v0[v2]:= v3 @kind object;
  #L476922.  v2:= 2I;
  #L476924.  v0[v2]:= v4 @kind object;
  #L476928.  v2:= 3I;
  #L47692a.  v0[v2]:= v5 @kind object;
  #L47692e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476934.  v2:= temp @kind object;
  #L476936.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47693c.  v3:= temp @kind object;
  #L47693e.  call temp:= `concatMapSingleDelayError`(v2, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476944.  v2:= temp @kind object;
  #L476946.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476958.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L47695e.  v2:= temp @kind object;
  #L476960.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476966.  v0:= temp @kind object;
  #L476968.  v1:= 0I;
  #L47696a.  call temp:= `concatMapSingleDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476970.  v2:= temp @kind object;
  #L476972.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476984.  v0:= 2I;
  #L476986.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L47698c.  v1:= temp @kind object;
  #L47698e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4769a0.  v0:= "sources is null" @kind object;
  #L4769a4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4769aa.  v0:= "prefetch" @kind object;
  #L4769ae.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4769b4.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher`;
  #L4769b8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4769be.  v1:= temp @kind object;
  #L4769c0.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4769c4.  call `<init>`(v0, v3, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4769ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4769d0.  v3:= temp @kind object;
  #L4769d2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4774c0.  v0:= "sources is null" @kind object;
  #L4774c4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4774ca.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapSingle`;
  #L4774ce.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4774d4.  v1:= temp @kind object;
  #L4774d6.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4774da.  v3:= 2I;
  #L4774dc.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4774e2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4774e8.  v4:= temp @kind object;
  #L4774ea.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArray`(`io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatArray:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4769e4.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4769ea.  v2:= temp @kind object;
  #L4769ec.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4769f2.  v0:= temp @kind object;
  #L4769f4.  v1:= 0I;
  #L4769f6.  call temp:= `concatMapSingleDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4769fc.  v2:= temp @kind object;
  #L4769fe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayDelayError`(`io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatArrayDelayError:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476a10.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476a16.  v2:= temp @kind object;
  #L476a18.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476a1e.  v0:= temp @kind object;
  #L476a20.  v1:= 1I;
  #L476a22.  call temp:= `concatMapSingleDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476a28.  v2:= temp @kind object;
  #L476a2a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEager`(`io.reactivex.rxjava3.core.SingleSource`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatArrayEager:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476a3c.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476a42.  v1:= temp @kind object;
  #L476a44.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476a4a.  v0:= temp @kind object;
  #L476a4c.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476a52.  v1:= temp @kind object;
  #L476a54.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEagerDelayError`(`io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatArrayEagerDelayError:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476a68.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476a6e.  v2:= temp @kind object;
  #L476a70.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476a76.  v0:= temp @kind object;
  #L476a78.  v1:= 1I;
  #L476a7a.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476a80.  v2:= temp @kind object;
  #L476a82.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476a94.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476a9a.  v1:= temp @kind object;
  #L476a9c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476aa2.  v0:= temp @kind object;
  #L476aa4.  call temp:= `concatMapSingleDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476aaa.  v1:= temp @kind object;
  #L476aac.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476ac0.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476ac6.  v1:= temp @kind object;
  #L476ac8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476ace.  v0:= temp @kind object;
  #L476ad0.  call temp:= `concatMapSingleDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476ad6.  v1:= temp @kind object;
  #L476ad8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476aec.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476af2.  v2:= temp @kind object;
  #L476af4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476afa.  v0:= temp @kind object;
  #L476afc.  v1:= 1I;
  #L476afe.  call temp:= `concatMapSingleDelayError`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476b04.  v2:= temp @kind object;
  #L476b06.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476b18.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476b1e.  v2:= temp @kind object;
  #L476b20.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476b26.  v0:= temp @kind object;
  #L476b28.  v1:= 0I;
  #L476b2a.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476b30.  v2:= temp @kind object;
  #L476b32.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatEager:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L476b44.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476b4a.  v3:= temp @kind object;
  #L476b4c.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476b52.  v0:= temp @kind object;
  #L476b54.  v1:= 0I;
  #L476b56.  v2:= 1I;
  #L476b58.  call temp:= `concatMapEagerDelayError`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476b5e.  v3:= temp @kind object;
  #L476b60.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatEager:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476b74.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476b7a.  v1:= temp @kind object;
  #L476b7c.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476b82.  v0:= temp @kind object;
  #L476b84.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476b8a.  v1:= temp @kind object;
  #L476b8c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatEager:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476ba0.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476ba6.  v2:= temp @kind object;
  #L476ba8.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476bae.  v0:= temp @kind object;
  #L476bb0.  v1:= 1I;
  #L476bb2.  call temp:= `concatMapEager`(v2, v0, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476bb8.  v2:= temp @kind object;
  #L476bba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatEagerDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476bcc.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476bd2.  v2:= temp @kind object;
  #L476bd4.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476bda.  v0:= temp @kind object;
  #L476bdc.  v1:= 1I;
  #L476bde.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476be4.  v2:= temp @kind object;
  #L476be6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatEagerDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476bf8.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476bfe.  v2:= temp @kind object;
  #L476c00.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476c06.  v0:= temp @kind object;
  #L476c08.  v1:= 1I;
  #L476c0a.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476c10.  v2:= temp @kind object;
  #L476c12.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476c24.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476c2a.  v2:= temp @kind object;
  #L476c2c.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476c32.  v0:= temp @kind object;
  #L476c34.  v1:= 1I;
  #L476c36.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476c3c.  v2:= temp @kind object;
  #L476c3e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476c50.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476c56.  v2:= temp @kind object;
  #L476c58.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476c5e.  v0:= temp @kind object;
  #L476c60.  v1:= 1I;
  #L476c62.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476c68.  v2:= temp @kind object;
  #L476c6a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `create`(`io.reactivex.rxjava3.core.SingleOnSubscribe` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.create:(Lio/reactivex/rxjava3/core/SingleOnSubscribe;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4777d0.  v0:= "source is null" @kind object;
  #L4777d4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4777da.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleCreate`;
  #L4777de.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate;.<init>:(Lio/reactivex/rxjava3/core/SingleOnSubscribe;)V` @kind direct;
  #L4777e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4777ea.  v1:= temp @kind object;
  #L4777ec.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `defer`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.defer:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477800.  v0:= "supplier is null" @kind object;
  #L477804.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47780a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDefer`;
  #L47780e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L477814.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47781a.  v1:= temp @kind object;
  #L47781c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `error`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477be0.  v0:= "supplier is null" @kind object;
  #L477be4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477bea.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleError`;
  #L477bee.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleError;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L477bf4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477bfa.  v1:= temp @kind object;
  #L477bfc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477c10.  v0:= "throwable is null" @kind object;
  #L477c14.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477c1a.  call temp:= `justSupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L477c20.  v1:= temp @kind object;
  #L477c22.  call temp:= `error`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477c28.  v1:= temp @kind object;
  #L477c2a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477cdc.  v0:= "callable is null" @kind object;
  #L477ce0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477ce6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromCallable`;
  #L477cea.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L477cf0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477cf6.  v1:= temp @kind object;
  #L477cf8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromCompletionStage`(`java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromCompletionStage:(Ljava/util/concurrent/CompletionStage;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477d0c.  v0:= "stage is null" @kind object;
  #L477d10.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477d16.  v0:= new `io.reactivex.rxjava3.internal.jdk8.SingleFromCompletionStage`;
  #L477d1a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/SingleFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @kind direct;
  #L477d20.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477d26.  v1:= temp @kind object;
  #L477d28.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L477d3c.  call temp:= `fromFuture`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L477d42.  v0:= temp @kind object;
  #L477d44.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477d4a.  v0:= temp @kind object;
  #L477d4c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L477d60.  call temp:= `fromFuture`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L477d66.  v0:= temp @kind object;
  #L477d68.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477d6e.  v0:= temp @kind object;
  #L477d70.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L477d84.  v0:= "maybe is null" @kind object;
  #L477d88.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477d8e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToSingle`;
  #L477d92.  v1:= 0I;
  #L477d94.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToSingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)V` @kind direct;
  #L477d9a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477da0.  v2:= temp @kind object;
  #L477da2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477db4.  v0:= "maybe is null" @kind object;
  #L477db8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477dbe.  v0:= "defaultItem is null" @kind object;
  #L477dc2.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477dc8.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToSingle`;
  #L477dcc.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToSingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)V` @kind direct;
  #L477dd2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477dd8.  v1:= temp @kind object;
  #L477dda.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromObservable`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromObservable:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L477dec.  v0:= "observable is null" @kind object;
  #L477df0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477df6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSingleSingle`;
  #L477dfa.  v1:= 0I;
  #L477dfc.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L477e02.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477e08.  v2:= temp @kind object;
  #L477e0a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477e1c.  v0:= "publisher is null" @kind object;
  #L477e20.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477e26.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher`;
  #L477e2a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L477e30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477e36.  v1:= temp @kind object;
  #L477e38.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromSupplier`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromSupplier:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477e4c.  v0:= "supplier is null" @kind object;
  #L477e50.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477e56.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromSupplier`;
  #L477e5a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L477e60.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477e66.  v1:= temp @kind object;
  #L477e68.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477ea0.  v0:= "item is null" @kind object;
  #L477ea4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477eaa.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleJust`;
  #L477eae.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L477eb4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477eba.  v1:= temp @kind object;
  #L477ebc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476d28.  v0:= "source1 is null" @kind object;
  #L476d2c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476d32.  v0:= "source2 is null" @kind object;
  #L476d36.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476d3c.  v0:= 2I;
  #L476d3e.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L476d42.  v1:= 0I;
  #L476d44.  v0[v1]:= v2 @kind object;
  #L476d48.  v2:= 1I;
  #L476d4a.  v0[v2]:= v3 @kind object;
  #L476d4e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476d54.  v2:= temp @kind object;
  #L476d56.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476d5c.  v3:= temp @kind object;
  #L476d5e.  v0:= 2147483647I;
  #L476d64.  call temp:= `flatMapSingle`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476d6a.  v2:= temp @kind object;
  #L476d6c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476d80.  v0:= "source1 is null" @kind object;
  #L476d84.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476d8a.  v0:= "source2 is null" @kind object;
  #L476d8e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476d94.  v0:= "source3 is null" @kind object;
  #L476d98.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476d9e.  v0:= 3I;
  #L476da0.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L476da4.  v1:= 0I;
  #L476da6.  v0[v1]:= v2 @kind object;
  #L476daa.  v2:= 1I;
  #L476dac.  v0[v2]:= v3 @kind object;
  #L476db0.  v2:= 2I;
  #L476db2.  v0[v2]:= v4 @kind object;
  #L476db6.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476dbc.  v2:= temp @kind object;
  #L476dbe.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476dc4.  v3:= temp @kind object;
  #L476dc6.  v4:= 2147483647I;
  #L476dcc.  call temp:= `flatMapSingle`(v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476dd2.  v2:= temp @kind object;
  #L476dd4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476de8.  v0:= "source1 is null" @kind object;
  #L476dec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476df2.  v0:= "source2 is null" @kind object;
  #L476df6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476dfc.  v0:= "source3 is null" @kind object;
  #L476e00.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476e06.  v0:= "source4 is null" @kind object;
  #L476e0a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476e10.  v0:= 4I;
  #L476e12.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L476e16.  v1:= 0I;
  #L476e18.  v0[v1]:= v2 @kind object;
  #L476e1c.  v2:= 1I;
  #L476e1e.  v0[v2]:= v3 @kind object;
  #L476e22.  v2:= 2I;
  #L476e24.  v0[v2]:= v4 @kind object;
  #L476e28.  v2:= 3I;
  #L476e2a.  v0[v2]:= v5 @kind object;
  #L476e2e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476e34.  v2:= temp @kind object;
  #L476e36.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476e3c.  v3:= temp @kind object;
  #L476e3e.  v4:= 2147483647I;
  #L476e44.  call temp:= `flatMapSingle`(v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476e4a.  v2:= temp @kind object;
  #L476e4c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476e60.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476e66.  v1:= temp @kind object;
  #L476e68.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476e6e.  v0:= temp @kind object;
  #L476e70.  call temp:= `flatMapSingle`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476e76.  v1:= temp @kind object;
  #L476e78.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L476e8c.  v0:= "sources is null" @kind object;
  #L476e90.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476e96.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSinglePublisher`;
  #L476e9a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476ea0.  v1:= temp @kind object;
  #L476ea2.  v2:= 0I;
  #L476ea4.  v3:= 2147483647I;
  #L476eaa.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L476eb0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476eb6.  v4:= temp @kind object;
  #L476eb8.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `merge`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L477f54.  v0:= "source is null" @kind object;
  #L477f58.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477f5e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap`;
  #L477f62.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L477f68.  v1:= temp @kind object;
  #L477f6a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477f70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477f76.  v2:= temp @kind object;
  #L477f78.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArray`(`io.reactivex.rxjava3.core.SingleSource`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeArray:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L476ecc.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476ed2.  v0:= temp @kind object;
  #L476ed4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476eda.  v1:= temp @kind object;
  #L476edc.  v3:= length @variable v3;
  #L476ede.  v2:= 1I;
  #L476ee0.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L476ee6.  v3:= temp;
  #L476ee8.  v2:= 0I;
  #L476eea.  call temp:= `flatMapSingle`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476ef0.  v3:= temp @kind object;
  #L476ef2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArrayDelayError`(`io.reactivex.rxjava3.core.SingleSource`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L476f04.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476f0a.  v0:= temp @kind object;
  #L476f0c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476f12.  v1:= temp @kind object;
  #L476f14.  v3:= length @variable v3;
  #L476f16.  v2:= 1I;
  #L476f18.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L476f1e.  v3:= temp;
  #L476f20.  call temp:= `flatMapSingle`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476f26.  v3:= temp @kind object;
  #L476f28.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476f3c.  v0:= "source1 is null" @kind object;
  #L476f40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476f46.  v0:= "source2 is null" @kind object;
  #L476f4a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476f50.  v0:= 2I;
  #L476f52.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L476f56.  v1:= 0I;
  #L476f58.  v0[v1]:= v2 @kind object;
  #L476f5c.  v2:= 1I;
  #L476f5e.  v0[v2]:= v3 @kind object;
  #L476f62.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476f68.  v3:= temp @kind object;
  #L476f6a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476f70.  v0:= temp @kind object;
  #L476f72.  v1:= 2147483647I;
  #L476f78.  call temp:= `flatMapSingle`(v3, v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476f7e.  v2:= temp @kind object;
  #L476f80.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476f94.  v0:= "source1 is null" @kind object;
  #L476f98.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476f9e.  v0:= "source2 is null" @kind object;
  #L476fa2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476fa8.  v0:= "source3 is null" @kind object;
  #L476fac.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476fb2.  v0:= 3I;
  #L476fb4.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L476fb8.  v1:= 0I;
  #L476fba.  v0[v1]:= v2 @kind object;
  #L476fbe.  v2:= 1I;
  #L476fc0.  v0[v2]:= v3 @kind object;
  #L476fc4.  v3:= 2I;
  #L476fc6.  v0[v3]:= v4 @kind object;
  #L476fca.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476fd0.  v3:= temp @kind object;
  #L476fd2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L476fd8.  v4:= temp @kind object;
  #L476fda.  v0:= 2147483647I;
  #L476fe0.  call temp:= `flatMapSingle`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L476fe6.  v2:= temp @kind object;
  #L476fe8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476ffc.  v0:= "source1 is null" @kind object;
  #L477000.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477006.  v0:= "source2 is null" @kind object;
  #L47700a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477010.  v0:= "source3 is null" @kind object;
  #L477014.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47701a.  v0:= "source4 is null" @kind object;
  #L47701e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477024.  v0:= 4I;
  #L477026.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L47702a.  v1:= 0I;
  #L47702c.  v0[v1]:= v2 @kind object;
  #L477030.  v2:= 1I;
  #L477032.  v0[v2]:= v3 @kind object;
  #L477036.  v3:= 2I;
  #L477038.  v0[v3]:= v4 @kind object;
  #L47703c.  v3:= 3I;
  #L47703e.  v0[v3]:= v5 @kind object;
  #L477042.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L477048.  v3:= temp @kind object;
  #L47704a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L477050.  v4:= temp @kind object;
  #L477052.  v5:= 2147483647I;
  #L477058.  call temp:= `flatMapSingle`(v3, v4, v2, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47705e.  v2:= temp @kind object;
  #L477060.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L477074.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L47707a.  v3:= temp @kind object;
  #L47707c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L477082.  v0:= temp @kind object;
  #L477084.  v1:= 1I;
  #L477086.  v2:= 2147483647I;
  #L47708c.  call temp:= `flatMapSingle`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L477092.  v3:= temp @kind object;
  #L477094.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4770a8.  v0:= "sources is null" @kind object;
  #L4770ac.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4770b2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSinglePublisher`;
  #L4770b6.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4770bc.  v1:= temp @kind object;
  #L4770be.  v2:= 1I;
  #L4770c0.  v3:= 2147483647I;
  #L4770c6.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4770cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4770d2.  v4:= temp @kind object;
  #L4770d4.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `never`() @signature `Lio/reactivex/rxjava3/core/Single;.never:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477f8c.  v0:= `@@io.reactivex.rxjava3.internal.operators.single.SingleNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Single` @kind object;
  #L477f90.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477f96.  v0:= temp @kind object;
  #L477f98.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.sequenceEqual:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4781fc.  v0:= "source1 is null" @kind object;
  #L478200.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478206.  v0:= "source2 is null" @kind object;
  #L47820a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478210.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleEquals`;
  #L478214.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L47821a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478220.  v1:= temp @kind object;
  #L478222.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNext`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.switchOnNext:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L477274.  v0:= "sources is null" @kind object;
  #L477278.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47727e.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapSinglePublisher`;
  #L477282.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L477288.  v1:= temp @kind object;
  #L47728a.  v2:= 0I;
  #L47728c.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L477292.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L477298.  v3:= temp @kind object;
  #L47729a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNextDelayError`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4772ac.  v0:= "sources is null" @kind object;
  #L4772b0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4772b6.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapSinglePublisher`;
  #L4772ba.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4772c0.  v1:= temp @kind object;
  #L4772c2.  v2:= 1I;
  #L4772c4.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4772ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4772d0.  v3:= temp @kind object;
  #L4772d2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L478488.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47848e.  v0:= temp @kind object;
  #L478490.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478496.  v1:= temp @kind object;
  #L478498.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4784ac.  v0:= "unit is null" @kind object;
  #L4784b0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4784b6.  v0:= "scheduler is null" @kind object;
  #L4784ba.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4784c0.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimer`;
  #L4784c4.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4784ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4784d0.  v1:= temp @kind object;
  #L4784d2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `unsafeCreate`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.unsafeCreate:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4785b4.  v0:= "onSubscribe is null" @kind object;
  #L4785b8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4785be.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Single` @kind boolean;
  #L4785c2.  if v0 != 0 then goto L4785da;
  #L4785c6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromUnsafeSource`;
  #L4785ca.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4785d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4785d6.  v1:= temp @kind object;
  #L4785d8.  return v1 @kind object;
  #L4785da.  v1:= new `java.lang.IllegalArgumentException`;
  #L4785de.  v0:= "unsafeCreate(Single) should be upgraded" @kind object;
  #L4785e2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4785e8.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Single` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47862c.  v0:= 1I;
  #L47862e.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Single;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478634.  v1:= temp @kind object;
  #L478636.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Single;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L478648.  v0:= "resourceSupplier is null" @kind object;
  #L47864c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478652.  v0:= "sourceSupplier is null" @kind object;
  #L478656.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47865c.  v0:= "resourceCleanup is null" @kind object;
  #L478660.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478666.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleUsing`;
  #L47866a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @kind direct;
  #L478670.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478676.  v1:= temp @kind object;
  #L478678.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `wrap`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47868c.  v0:= "source is null" @kind object;
  #L478690.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478696.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Single` @kind boolean;
  #L47869a.  if v0 == 0 then goto L4786ac;
  #L47869e.  v1:= (`io.reactivex.rxjava3.core.Single`) v1 @kind object;
  #L4786a2.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4786a8.  v1:= temp @kind object;
  #L4786aa.  return v1 @kind object;
  #L4786ac.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromUnsafeSource`;
  #L4786b0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4786b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4786bc.  v1:= temp @kind object;
  #L4786be.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.core.SingleSource` v7 @kind object, `io.reactivex.rxjava3.core.SingleSource` v8 @kind object, `io.reactivex.rxjava3.core.SingleSource` v9 @kind object, `io.reactivex.rxjava3.core.SingleSource` v10 @kind object, `io.reactivex.rxjava3.functions.Function9` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4786d0.  v0:= "source1 is null" @kind object;
  #L4786d4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4786da.  v0:= "source2 is null" @kind object;
  #L4786de.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4786e4.  v0:= "source3 is null" @kind object;
  #L4786e8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4786ee.  v0:= "source4 is null" @kind object;
  #L4786f2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4786f8.  v0:= "source5 is null" @kind object;
  #L4786fc.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478702.  v0:= "source6 is null" @kind object;
  #L478706.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47870c.  v0:= "source7 is null" @kind object;
  #L478710.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478716.  v0:= "source8 is null" @kind object;
  #L47871a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478720.  v0:= "source9 is null" @kind object;
  #L478724.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47872a.  v0:= "zipper is null" @kind object;
  #L47872e.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478734.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47873a.  v11:= temp @kind object;
  #L47873c.  v0:= 9I;
  #L478740.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L478744.  v1:= 0I;
  #L478746.  v0[v1]:= v2 @kind object;
  #L47874a.  v2:= 1I;
  #L47874c.  v0[v2]:= v3 @kind object;
  #L478750.  v2:= 2I;
  #L478752.  v0[v2]:= v4 @kind object;
  #L478756.  v2:= 3I;
  #L478758.  v0[v2]:= v5 @kind object;
  #L47875c.  v2:= 4I;
  #L47875e.  v0[v2]:= v6 @kind object;
  #L478762.  v2:= 5I;
  #L478764.  v0[v2]:= v7 @kind object;
  #L478768.  v2:= 6I;
  #L47876a.  v0[v2]:= v8 @kind object;
  #L47876e.  v2:= 7I;
  #L478770.  v0[v2]:= v9 @kind object;
  #L478774.  v2:= 8I;
  #L478778.  v0[v2]:= v10 @kind object;
  #L47877c.  call temp:= `zipArray`(v11, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478782.  v2:= temp @kind object;
  #L478784.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.core.SingleSource` v7 @kind object, `io.reactivex.rxjava3.core.SingleSource` v8 @kind object, `io.reactivex.rxjava3.core.SingleSource` v9 @kind object, `io.reactivex.rxjava3.functions.Function8` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L478798.  v0:= "source1 is null" @kind object;
  #L47879c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787a2.  v0:= "source2 is null" @kind object;
  #L4787a6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787ac.  v0:= "source3 is null" @kind object;
  #L4787b0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787b6.  v0:= "source4 is null" @kind object;
  #L4787ba.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787c0.  v0:= "source5 is null" @kind object;
  #L4787c4.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787ca.  v0:= "source6 is null" @kind object;
  #L4787ce.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787d4.  v0:= "source7 is null" @kind object;
  #L4787d8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787de.  v0:= "source8 is null" @kind object;
  #L4787e2.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787e8.  v0:= "zipper is null" @kind object;
  #L4787ec.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4787f2.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4787f8.  v10:= temp @kind object;
  #L4787fa.  v0:= 8I;
  #L4787fe.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L478802.  v1:= 0I;
  #L478804.  v0[v1]:= v2 @kind object;
  #L478808.  v2:= 1I;
  #L47880a.  v0[v2]:= v3 @kind object;
  #L47880e.  v2:= 2I;
  #L478810.  v0[v2]:= v4 @kind object;
  #L478814.  v2:= 3I;
  #L478816.  v0[v2]:= v5 @kind object;
  #L47881a.  v2:= 4I;
  #L47881c.  v0[v2]:= v6 @kind object;
  #L478820.  v2:= 5I;
  #L478822.  v0[v2]:= v7 @kind object;
  #L478826.  v2:= 6I;
  #L478828.  v0[v2]:= v8 @kind object;
  #L47882c.  v2:= 7I;
  #L47882e.  v0[v2]:= v9 @kind object;
  #L478832.  call temp:= `zipArray`(v10, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478838.  v2:= temp @kind object;
  #L47883a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.core.SingleSource` v7 @kind object, `io.reactivex.rxjava3.core.SingleSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function7` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47884c.  v0:= "source1 is null" @kind object;
  #L478850.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478856.  v0:= "source2 is null" @kind object;
  #L47885a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478860.  v0:= "source3 is null" @kind object;
  #L478864.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47886a.  v0:= "source4 is null" @kind object;
  #L47886e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478874.  v0:= "source5 is null" @kind object;
  #L478878.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47887e.  v0:= "source6 is null" @kind object;
  #L478882.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478888.  v0:= "source7 is null" @kind object;
  #L47888c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478892.  v0:= "zipper is null" @kind object;
  #L478896.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47889c.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4788a2.  v9:= temp @kind object;
  #L4788a4.  v0:= 7I;
  #L4788a6.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4788aa.  v1:= 0I;
  #L4788ac.  v0[v1]:= v2 @kind object;
  #L4788b0.  v2:= 1I;
  #L4788b2.  v0[v2]:= v3 @kind object;
  #L4788b6.  v2:= 2I;
  #L4788b8.  v0[v2]:= v4 @kind object;
  #L4788bc.  v2:= 3I;
  #L4788be.  v0[v2]:= v5 @kind object;
  #L4788c2.  v2:= 4I;
  #L4788c4.  v0[v2]:= v6 @kind object;
  #L4788c8.  v2:= 5I;
  #L4788ca.  v0[v2]:= v7 @kind object;
  #L4788ce.  v2:= 6I;
  #L4788d0.  v0[v2]:= v8 @kind object;
  #L4788d4.  call temp:= `zipArray`(v9, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4788da.  v2:= temp @kind object;
  #L4788dc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.core.SingleSource` v7 @kind object, `io.reactivex.rxjava3.functions.Function6` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4788f0.  v0:= "source1 is null" @kind object;
  #L4788f4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4788fa.  v0:= "source2 is null" @kind object;
  #L4788fe.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478904.  v0:= "source3 is null" @kind object;
  #L478908.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47890e.  v0:= "source4 is null" @kind object;
  #L478912.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478918.  v0:= "source5 is null" @kind object;
  #L47891c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478922.  v0:= "source6 is null" @kind object;
  #L478926.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47892c.  v0:= "zipper is null" @kind object;
  #L478930.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478936.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47893c.  v8:= temp @kind object;
  #L47893e.  v0:= 6I;
  #L478940.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L478944.  v1:= 0I;
  #L478946.  v0[v1]:= v2 @kind object;
  #L47894a.  v2:= 1I;
  #L47894c.  v0[v2]:= v3 @kind object;
  #L478950.  v2:= 2I;
  #L478952.  v0[v2]:= v4 @kind object;
  #L478956.  v2:= 3I;
  #L478958.  v0[v2]:= v5 @kind object;
  #L47895c.  v2:= 4I;
  #L47895e.  v0[v2]:= v6 @kind object;
  #L478962.  v2:= 5I;
  #L478964.  v0[v2]:= v7 @kind object;
  #L478968.  call temp:= `zipArray`(v8, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47896e.  v2:= temp @kind object;
  #L478970.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L478984.  v0:= "source1 is null" @kind object;
  #L478988.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47898e.  v0:= "source2 is null" @kind object;
  #L478992.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478998.  v0:= "source3 is null" @kind object;
  #L47899c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4789a2.  v0:= "source4 is null" @kind object;
  #L4789a6.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4789ac.  v0:= "source5 is null" @kind object;
  #L4789b0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4789b6.  v0:= "zipper is null" @kind object;
  #L4789ba.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4789c0.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4789c6.  v7:= temp @kind object;
  #L4789c8.  v0:= 5I;
  #L4789ca.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4789ce.  v1:= 0I;
  #L4789d0.  v0[v1]:= v2 @kind object;
  #L4789d4.  v2:= 1I;
  #L4789d6.  v0[v2]:= v3 @kind object;
  #L4789da.  v2:= 2I;
  #L4789dc.  v0[v2]:= v4 @kind object;
  #L4789e0.  v2:= 3I;
  #L4789e2.  v0[v2]:= v5 @kind object;
  #L4789e6.  v2:= 4I;
  #L4789e8.  v0[v2]:= v6 @kind object;
  #L4789ec.  call temp:= `zipArray`(v7, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4789f2.  v2:= temp @kind object;
  #L4789f4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L478a08.  v0:= "source1 is null" @kind object;
  #L478a0c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478a12.  v0:= "source2 is null" @kind object;
  #L478a16.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478a1c.  v0:= "source3 is null" @kind object;
  #L478a20.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478a26.  v0:= "source4 is null" @kind object;
  #L478a2a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478a30.  v0:= "zipper is null" @kind object;
  #L478a34.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478a3a.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L478a40.  v6:= temp @kind object;
  #L478a42.  v0:= 4I;
  #L478a44.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L478a48.  v1:= 0I;
  #L478a4a.  v0[v1]:= v2 @kind object;
  #L478a4e.  v2:= 1I;
  #L478a50.  v0[v2]:= v3 @kind object;
  #L478a54.  v2:= 2I;
  #L478a56.  v0[v2]:= v4 @kind object;
  #L478a5a.  v2:= 3I;
  #L478a5c.  v0[v2]:= v5 @kind object;
  #L478a60.  call temp:= `zipArray`(v6, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478a66.  v2:= temp @kind object;
  #L478a68.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L478a7c.  v0:= "source1 is null" @kind object;
  #L478a80.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478a86.  v0:= "source2 is null" @kind object;
  #L478a8a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478a90.  v0:= "source3 is null" @kind object;
  #L478a94.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478a9a.  v0:= "zipper is null" @kind object;
  #L478a9e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478aa4.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L478aaa.  v5:= temp @kind object;
  #L478aac.  v0:= 3I;
  #L478aae.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L478ab2.  v1:= 0I;
  #L478ab4.  v0[v1]:= v2 @kind object;
  #L478ab8.  v2:= 1I;
  #L478aba.  v0[v2]:= v3 @kind object;
  #L478abe.  v2:= 2I;
  #L478ac0.  v0[v2]:= v4 @kind object;
  #L478ac4.  call temp:= `zipArray`(v5, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478aca.  v2:= temp @kind object;
  #L478acc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L478ae0.  v0:= "source1 is null" @kind object;
  #L478ae4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478aea.  v0:= "source2 is null" @kind object;
  #L478aee.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478af4.  v0:= "zipper is null" @kind object;
  #L478af8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478afe.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L478b04.  v4:= temp @kind object;
  #L478b06.  v0:= 2I;
  #L478b08.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L478b0c.  v1:= 0I;
  #L478b0e.  v0[v1]:= v2 @kind object;
  #L478b12.  v2:= 1I;
  #L478b14.  v0[v2]:= v3 @kind object;
  #L478b18.  call temp:= `zipArray`(v4, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478b1e.  v2:= temp @kind object;
  #L478b20.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L478b34.  v0:= "zipper is null" @kind object;
  #L478b38.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478b3e.  v0:= "sources is null" @kind object;
  #L478b42.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478b48.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleZipIterable`;
  #L478b4c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipIterable;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L478b52.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478b58.  v1:= temp @kind object;
  #L478b5a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zipArray`(`io.reactivex.rxjava3.functions.Function` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L478b6c.  v0:= "zipper is null" @kind object;
  #L478b70.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478b76.  v0:= "sources is null" @kind object;
  #L478b7a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478b80.  v0:= length @variable v2;
  #L478b82.  if v0 != 0 then goto L478b9a;
  #L478b86.  v1:= new `java.util.NoSuchElementException`;
  #L478b8a.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L478b90.  call temp:= `error`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478b96.  v1:= temp @kind object;
  #L478b98.  return v1 @kind object;
  #L478b9a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleZipArray`;
  #L478b9e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L478ba4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478baa.  v1:= temp @kind object;
  #L478bac.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `ambWith`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.ambWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L47768c.  v0:= "other is null" @kind object;
  #L477690.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477696.  v0:= 2I;
  #L477698.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L47769c.  v1:= 0I;
  #L47769e.  v0[v1]:= v2 @kind object;
  #L4776a2.  v1:= 1I;
  #L4776a4.  v0[v1]:= v3 @kind object;
  #L4776a8.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.ambArray:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4776ae.  v3:= temp @kind object;
  #L4776b0.  return v3 @kind object;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.blockingGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478cf0.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L478cf4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L478cfa.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478d00.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L478d06.  v0:= temp @kind object;
  #L478d08.  return v0 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Single` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478db0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L478db6.  v0:= temp @kind object;
  #L478db8.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ERROR_CONSUMER` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L478dbc.  call `blockingSubscribe`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L478dc2.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478dd4.  v0:= "observer is null" @kind object;
  #L478dd8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478dde.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver`;
  #L478de2.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.<init>:()V` @kind direct;
  #L478de8.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L478dee.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478df4.  call `blockingConsume`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478dfa.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478e0c.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ERROR_CONSUMER` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L478e10.  call `blockingSubscribe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L478e16.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478e28.  v0:= "onSuccess is null" @kind object;
  #L478e2c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478e32.  v0:= "onError is null" @kind object;
  #L478e36.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478e3c.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L478e40.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L478e46.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478e4c.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L478e50.  call `blockingConsume`(v0, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind virtual;
  #L478e56.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Single` `cache`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.cache:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4776c4.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleCache`;
  #L4776c8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCache;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4776ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4776d4.  v0:= temp @kind object;
  #L4776d6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `cast`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4776e8.  v0:= "clazz is null" @kind object;
  #L4776ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4776f2.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4776f8.  v2:= temp @kind object;
  #L4776fa.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L477700.  v2:= temp @kind object;
  #L477702.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `compose`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.compose:(Lio/reactivex/rxjava3/core/SingleTransformer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477714.  v0:= "transformer is null" @kind object;
  #L477718.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47771e.  v2:= (`io.reactivex.rxjava3.core.SingleTransformer`) v2 @kind object;
  #L477722.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleTransformer;.apply:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/SingleSource;` @kind interface;
  #L477728.  v2:= temp @kind object;
  #L47772a.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477730.  v2:= temp @kind object;
  #L477732.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `concatMap`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477744.  v0:= "mapper is null" @kind object;
  #L477748.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47774e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap`;
  #L477752.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477758.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47775e.  v2:= temp @kind object;
  #L477760.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4767c8.  call temp:= `flatMapCompletable`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4767ce.  v1:= temp @kind object;
  #L4767d0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `concatMapMaybe`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L477320.  call temp:= `flatMapMaybe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L477326.  v1:= temp @kind object;
  #L477328.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L476c7c.  call temp:= `concat`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476c82.  v1:= temp @kind object;
  #L476c84.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.contains:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477774.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L47777a.  v0:= temp @kind object;
  #L47777c.  call temp:= `contains`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.contains:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L477782.  v2:= temp @kind object;
  #L477784.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.contains:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477798.  v0:= "item is null" @kind object;
  #L47779c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4777a2.  v0:= "comparer is null" @kind object;
  #L4777a6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4777ac.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleContains`;
  #L4777b0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleContains;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L4777b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4777bc.  v2:= temp @kind object;
  #L4777be.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delay`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L477830.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L477836.  v4:= temp @kind object;
  #L477838.  v5:= 0I;
  #L47783a.  v0:= v6 @kind object;
  #L47783c.  v1:= v7 @kind wide;
  #L47783e.  v3:= v9 @kind object;
  #L477840.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L477846.  v7:= temp @kind object;
  #L477848.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delay`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L477888.  v5:= 0I;
  #L47788a.  v0:= v6 @kind object;
  #L47788c.  v1:= v7 @kind wide;
  #L47788e.  v3:= v9 @kind object;
  #L477890.  v4:= v10 @kind object;
  #L477892.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L477898.  v7:= temp @kind object;
  #L47789a.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delay`(`io.reactivex.rxjava3.core.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4778ac.  v0:= "unit is null" @kind object;
  #L4778b0.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4778b6.  v0:= "scheduler is null" @kind object;
  #L4778ba.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4778c0.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelay`;
  #L4778c4.  v1:= v0 @kind object;
  #L4778c6.  v2:= v8 @kind object;
  #L4778c8.  v3:= v9 @kind wide;
  #L4778ca.  v5:= v11 @kind object;
  #L4778cc.  v6:= v12 @kind object;
  #L4778ce.  v7:= v13;
  #L4778d0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelay;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4778d6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4778dc.  v9:= temp @kind object;
  #L4778de.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delay`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47785c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L477862.  v4:= temp @kind object;
  #L477864.  v0:= v6 @kind object;
  #L477866.  v1:= v7 @kind wide;
  #L477868.  v3:= v9 @kind object;
  #L47786a.  v5:= v10;
  #L47786c.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L477872.  v7:= temp @kind object;
  #L477874.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477980.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L477986.  v0:= temp @kind object;
  #L477988.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47798e.  v2:= temp @kind object;
  #L477990.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4779a4.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4779aa.  v1:= temp @kind object;
  #L4779ac.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4779b2.  v1:= temp @kind object;
  #L4779b4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4778f0.  v0:= "subscriptionIndicator is null" @kind object;
  #L4778f4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4778fa.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithCompletable`;
  #L4778fe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L477904.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47790a.  v2:= temp @kind object;
  #L47790c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477920.  v0:= "subscriptionIndicator is null" @kind object;
  #L477924.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47792a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable`;
  #L47792e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L477934.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47793a.  v2:= temp @kind object;
  #L47793c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477950.  v0:= "subscriptionIndicator is null" @kind object;
  #L477954.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47795a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle`;
  #L47795e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L477964.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47796a.  v2:= temp @kind object;
  #L47796c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4779c8.  v0:= "subscriptionIndicator is null" @kind object;
  #L4779cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4779d2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithPublisher`;
  #L4779d6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithPublisher;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4779dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4779e2.  v2:= temp @kind object;
  #L4779e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `dematerialize`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.dematerialize:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47733c.  v0:= "selector is null" @kind object;
  #L477340.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477346.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDematerialize`;
  #L47734a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDematerialize;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477350.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L477356.  v2:= temp @kind object;
  #L477358.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doAfterSuccess`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doAfterSuccess:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4779f8.  v0:= "onAfterSuccess is null" @kind object;
  #L4779fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477a02.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess`;
  #L477a06.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterSuccess;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L477a0c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477a12.  v2:= temp @kind object;
  #L477a14.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doAfterTerminate`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doAfterTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477a28.  v0:= "onAfterTerminate is null" @kind object;
  #L477a2c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477a32.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoAfterTerminate`;
  #L477a36.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterTerminate;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L477a3c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477a42.  v2:= temp @kind object;
  #L477a44.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doFinally`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doFinally:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477a58.  v0:= "onFinally is null" @kind object;
  #L477a5c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477a62.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoFinally`;
  #L477a66.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L477a6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477a72.  v2:= temp @kind object;
  #L477a74.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnDispose`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnDispose:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477a88.  v0:= "onDispose is null" @kind object;
  #L477a8c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477a92.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnDispose`;
  #L477a96.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnDispose;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L477a9c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477aa2.  v2:= temp @kind object;
  #L477aa4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnError`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477ab8.  v0:= "onError is null" @kind object;
  #L477abc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477ac2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnError`;
  #L477ac6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnError;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L477acc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477ad2.  v2:= temp @kind object;
  #L477ad4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnEvent`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnEvent:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477ae8.  v0:= "onEvent is null" @kind object;
  #L477aec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477af2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnEvent`;
  #L477af6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnEvent;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L477afc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477b02.  v2:= temp @kind object;
  #L477b04.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnLifecycle`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477b18.  v0:= "onSubscribe is null" @kind object;
  #L477b1c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477b22.  v0:= "onDispose is null" @kind object;
  #L477b26.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477b2c.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnLifecycle`;
  #L477b30.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnLifecycle;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L477b36.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477b3c.  v2:= temp @kind object;
  #L477b3e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnSubscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477b50.  v0:= "onSubscribe is null" @kind object;
  #L477b54.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477b5a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnSubscribe`;
  #L477b5e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnSubscribe;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L477b64.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477b6a.  v2:= temp @kind object;
  #L477b6c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnSuccess`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnSuccess:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477b80.  v0:= "onSuccess is null" @kind object;
  #L477b84.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477b8a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnSuccess`;
  #L477b8e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnSuccess;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L477b94.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477b9a.  v2:= temp @kind object;
  #L477b9c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnTerminate`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477bb0.  v0:= "onTerminate is null" @kind object;
  #L477bb4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477bba.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnTerminate`;
  #L477bbe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnTerminate;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L477bc4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477bca.  v2:= temp @kind object;
  #L477bcc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `filter`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47736c.  v0:= "predicate is null" @kind object;
  #L477370.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477376.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle`;
  #L47737a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilterSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L477380.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L477386.  v2:= temp @kind object;
  #L477388.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `flatMap`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477c3c.  v0:= "mapper is null" @kind object;
  #L477c40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477c46.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap`;
  #L477c4a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477c50.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477c56.  v2:= temp @kind object;
  #L477c58.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `flatMap`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477c6c.  v0:= "mapper is null" @kind object;
  #L477c70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477c76.  v0:= "combiner is null" @kind object;
  #L477c7a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477c80.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapBiSelector`;
  #L477c84.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapBiSelector;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L477c8a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477c90.  v2:= temp @kind object;
  #L477c92.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `flatMap`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477ca4.  v0:= "onSuccessMapper is null" @kind object;
  #L477ca8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477cae.  v0:= "onErrorMapper is null" @kind object;
  #L477cb2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477cb8.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapNotification`;
  #L477cbc.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapNotification;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477cc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477cc8.  v2:= temp @kind object;
  #L477cca.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4767e4.  v0:= "mapper is null" @kind object;
  #L4767e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4767ee.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapCompletable`;
  #L4767f2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4767f8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4767fe.  v2:= temp @kind object;
  #L476800.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `flatMapMaybe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47739c.  v0:= "mapper is null" @kind object;
  #L4773a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4773a6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe`;
  #L4773aa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4773b0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4773b6.  v2:= temp @kind object;
  #L4773b8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapObservable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4774fc.  v0:= "mapper is null" @kind object;
  #L477500.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477506.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.SingleFlatMapObservable`;
  #L47750a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/SingleFlatMapObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477510.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L477516.  v2:= temp @kind object;
  #L477518.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapPublisher`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapPublisher:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L476c98.  v0:= "mapper is null" @kind object;
  #L476c9c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476ca2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher`;
  #L476ca6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L476cac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476cb2.  v2:= temp @kind object;
  #L476cb4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flattenAsFlowable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flattenAsFlowable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L476cc8.  v0:= "mapper is null" @kind object;
  #L476ccc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476cd2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapIterableFlowable`;
  #L476cd6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapIterableFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L476cdc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476ce2.  v2:= temp @kind object;
  #L476ce4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flattenAsObservable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flattenAsObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47752c.  v0:= "mapper is null" @kind object;
  #L477530.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477536.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapIterableObservable`;
  #L47753a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapIterableObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477540.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L477546.  v2:= temp @kind object;
  #L477548.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flattenStreamAsFlowable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flattenStreamAsFlowable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L476cf8.  v0:= "mapper is null" @kind object;
  #L476cfc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476d02.  v0:= new `io.reactivex.rxjava3.internal.jdk8.SingleFlattenStreamAsFlowable`;
  #L476d06.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/SingleFlattenStreamAsFlowable;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L476d0c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L476d12.  v2:= temp @kind object;
  #L476d14.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flattenStreamAsObservable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flattenStreamAsObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47755c.  v0:= "mapper is null" @kind object;
  #L477560.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477566.  v0:= new `io.reactivex.rxjava3.internal.jdk8.SingleFlattenStreamAsObservable`;
  #L47756a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/SingleFlattenStreamAsObservable;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477570.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L477576.  v2:= temp @kind object;
  #L477578.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `hide`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.hide:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477e7c.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleHide`;
  #L477e80.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleHide;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L477e86.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477e8c.  v0:= temp @kind object;
  #L477e8e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ignoreElement`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.ignoreElement:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L476814.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromSingle`;
  #L476818.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L47681e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L476824.  v0:= temp @kind object;
  #L476826.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `lift`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.lift:(Lio/reactivex/rxjava3/core/SingleOperator;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477ed0.  v0:= "lift is null" @kind object;
  #L477ed4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477eda.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleLift`;
  #L477ede.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleLift;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleOperator;)V` @kind direct;
  #L477ee4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477eea.  v2:= temp @kind object;
  #L477eec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `map`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477f00.  v0:= "mapper is null" @kind object;
  #L477f04.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477f0a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleMap`;
  #L477f0e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477f14.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477f1a.  v2:= temp @kind object;
  #L477f1c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `mapOptional`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4773cc.  v0:= "mapper is null" @kind object;
  #L4773d0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4773d6.  v0:= new `io.reactivex.rxjava3.internal.jdk8.SingleMapOptional`;
  #L4773da.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/SingleMapOptional;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4773e0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4773e6.  v2:= temp @kind object;
  #L4773e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `materialize`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.materialize:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477f30.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleMaterialize`;
  #L477f34.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMaterialize;.<init>:(Lio/reactivex/rxjava3/core/Single;)V` @kind direct;
  #L477f3a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477f40.  v0:= temp @kind object;
  #L477f42.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4770e8.  call temp:= `merge`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4770ee.  v1:= temp @kind object;
  #L4770f0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `observeOn`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477fac.  v0:= "scheduler is null" @kind object;
  #L477fb0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477fb6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleObserveOn`;
  #L477fba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleObserveOn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L477fc0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477fc6.  v2:= temp @kind object;
  #L477fc8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `ofType`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4773fc.  v0:= "clazz is null" @kind object;
  #L477400.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477406.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L47740c.  v0:= temp @kind object;
  #L47740e.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L477414.  v0:= temp @kind object;
  #L477416.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L47741c.  v2:= temp @kind object;
  #L47741e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorComplete`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorComplete:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477430.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L477436.  v0:= temp @kind object;
  #L477438.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L47743e.  v0:= temp @kind object;
  #L477440.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorComplete`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477454.  v0:= "predicate is null" @kind object;
  #L477458.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47745e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete`;
  #L477462.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L477468.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L47746e.  v2:= temp @kind object;
  #L477470.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onErrorResumeNext`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477fdc.  v0:= "fallbackSupplier is null" @kind object;
  #L477fe0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477fe6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleResumeNext`;
  #L477fea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleResumeNext;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L477ff0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L477ff6.  v2:= temp @kind object;
  #L477ff8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onErrorResumeWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorResumeWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47800c.  v0:= "fallback is null" @kind object;
  #L478010.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478016.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47801c.  v2:= temp @kind object;
  #L47801e.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L478024.  v2:= temp @kind object;
  #L478026.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onErrorReturn`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478038.  v0:= "itemSupplier is null" @kind object;
  #L47803c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478042.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorReturn`;
  #L478046.  v1:= 0I;
  #L478048.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L47804e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478054.  v3:= temp @kind object;
  #L478056.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onErrorReturnItem`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478068.  v0:= "item is null" @kind object;
  #L47806c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478072.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorReturn`;
  #L478076.  v1:= 0I;
  #L478078.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L47807e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478084.  v3:= temp @kind object;
  #L478086.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onTerminateDetach`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.onTerminateDetach:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478098.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDetach`;
  #L47809c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDetach;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4780a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4780a8.  v0:= temp @kind object;
  #L4780aa.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.repeat:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477104.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47710a.  v0:= temp @kind object;
  #L47710c.  call temp:= `repeat`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L477112.  v0:= temp @kind object;
  #L477114.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Single;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477128.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47712e.  v0:= temp @kind object;
  #L477130.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L477136.  v2:= temp @kind object;
  #L477138.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatUntil`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47714c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L477152.  v0:= temp @kind object;
  #L477154.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47715a.  v2:= temp @kind object;
  #L47715c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatWhen`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477170.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L477176.  v0:= temp @kind object;
  #L477178.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47717e.  v2:= temp @kind object;
  #L477180.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.retry:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4780bc.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4780c2.  v0:= temp @kind object;
  #L4780c4.  call temp:= `retry`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4780ca.  v0:= temp @kind object;
  #L4780cc.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4780d2.  v0:= temp @kind object;
  #L4780d4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(J)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478140.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L478146.  v0:= temp @kind object;
  #L478148.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47814e.  v2:= temp @kind object;
  #L478150.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478156.  v2:= temp @kind object;
  #L478158.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 , `io.reactivex.rxjava3.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47816c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L478172.  v0:= temp @kind object;
  #L478174.  call temp:= `retry`(v0, v2, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47817a.  v2:= temp @kind object;
  #L47817c.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478182.  v2:= temp @kind object;
  #L478184.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4780e8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4780ee.  v0:= temp @kind object;
  #L4780f0.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4780f6.  v2:= temp @kind object;
  #L4780f8.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4780fe.  v2:= temp @kind object;
  #L478100.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478114.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47811a.  v0:= temp @kind object;
  #L47811c.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L478122.  v2:= temp @kind object;
  #L478124.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47812a.  v2:= temp @kind object;
  #L47812c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retryUntil`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retryUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478198.  v0:= "stop is null" @kind object;
  #L47819c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4781a2.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4781a8.  v3:= temp @kind object;
  #L4781aa.  v0:= 9223372036854775807L;
  #L4781b4.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4781ba.  v3:= temp @kind object;
  #L4781bc.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retryWhen`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4781d0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4781d6.  v0:= temp @kind object;
  #L4781d8.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4781de.  v2:= temp @kind object;
  #L4781e0.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4781e6.  v2:= temp @kind object;
  #L4781e8.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.safeSubscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478e68.  v0:= "observer is null" @kind object;
  #L478e6c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478e72.  v0:= new `io.reactivex.rxjava3.internal.observers.SafeSingleObserver`;
  #L478e76.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L478e7c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478e82.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477194.  v0:= "other is null" @kind object;
  #L477198.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47719e.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4771a4.  v2:= temp @kind object;
  #L4771a6.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4771ac.  v2:= temp @kind object;
  #L4771ae.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4771b4.  v0:= temp @kind object;
  #L4771b6.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4771bc.  v2:= temp @kind object;
  #L4771be.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4771d0.  v0:= "other is null" @kind object;
  #L4771d4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4771da.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4771e0.  v2:= temp @kind object;
  #L4771e2.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4771e8.  v2:= temp @kind object;
  #L4771ea.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4771f0.  v0:= temp @kind object;
  #L4771f2.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4771f8.  v2:= temp @kind object;
  #L4771fa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47720c.  v0:= "other is null" @kind object;
  #L477210.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477216.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47721c.  v2:= temp @kind object;
  #L47721e.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L477224.  v2:= temp @kind object;
  #L477226.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L47722c.  v0:= temp @kind object;
  #L47722e.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L477234.  v2:= temp @kind object;
  #L477236.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477248.  v0:= "other is null" @kind object;
  #L47724c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477252.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L477258.  v0:= temp @kind object;
  #L47725a.  call temp:= `startWith`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L477260.  v2:= temp @kind object;
  #L477262.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47758c.  v0:= "other is null" @kind object;
  #L477590.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L477596.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47759c.  v2:= temp @kind object;
  #L47759e.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4775a4.  v0:= temp @kind object;
  #L4775a6.  call temp:= `concatWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4775ac.  v2:= temp @kind object;
  #L4775ae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Single` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478bf4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L478bfa.  v0:= temp @kind object;
  #L478bfc.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L478c00.  call temp:= `subscribe`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L478c06.  v0:= temp @kind object;
  #L478c08.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478c1c.  v0:= "onCallback is null" @kind object;
  #L478c20.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478c26.  v0:= new `io.reactivex.rxjava3.internal.observers.BiConsumerSingleObserver`;
  #L478c2a.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/BiConsumerSingleObserver;.<init>:(Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L478c30.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478c36.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478c48.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L478c4c.  call temp:= `subscribe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L478c52.  v2:= temp @kind object;
  #L478c54.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478c68.  v0:= "onSuccess is null" @kind object;
  #L478c6c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478c72.  v0:= "onError is null" @kind object;
  #L478c76.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478c7c.  v0:= new `io.reactivex.rxjava3.internal.observers.ConsumerSingleObserver`;
  #L478c80.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/internal/observers/ConsumerSingleObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L478c86.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478c8c.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478e94.  v0:= "observer is null" @kind object;
  #L478e98.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478e9e.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/core/SingleObserver;)Lio/reactivex/rxjava3/core/SingleObserver;` @kind static;
  #L478ea4.  v3:= temp @kind object;
  #L478ea6.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null SingleObserver. Please check the handler provided to RxJavaPlugins.setOnSingleSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L478eaa.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478eb0.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478eb6.  return @kind void;
  #L478eb8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L478eba.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L478ec0.  v0:= new `java.lang.NullPointerException`;
  #L478ec4.  v1:= "subscribeActual failed" @kind object;
  #L478ec8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L478ece.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L478ed4.  throw v0;
  #L478ed6.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L478ed8.  throw v3;
  catch `java.lang.NullPointerException` @[L478eb0..L478eb6] goto L478ed6;
  catch `java.lang.Throwable` @[L478eb0..L478eb6] goto L478eb8;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.core.SingleObserver` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Single` `subscribeOn`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478234.  v0:= "scheduler is null" @kind object;
  #L478238.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47823e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn`;
  #L478242.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L478248.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47824e.  v2:= temp @kind object;
  #L478250.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.SingleObserver` `subscribeWith`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeWith:(Lio/reactivex/rxjava3/core/SingleObserver;)Lio/reactivex/rxjava3/core/SingleObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L478bdc.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478be2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `takeUntil`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478264.  v0:= "other is null" @kind object;
  #L478268.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47826e.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableToFlowable`;
  #L478272.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L478278.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47827e.  v2:= temp @kind object;
  #L478280.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `takeUntil`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478294.  v0:= "other is null" @kind object;
  #L478298.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47829e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable`;
  #L4782a2.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4782a8.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4782ae.  v2:= temp @kind object;
  #L4782b0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `takeUntil`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4782c4.  v0:= "other is null" @kind object;
  #L4782c8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4782ce.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil`;
  #L4782d2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTakeUntil;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4782d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4782de.  v2:= temp @kind object;
  #L4782e0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.test:()Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478ca0.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L478ca4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L478caa.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478cb0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/core/Single;.test:(Z)Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478cc4.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L478cc8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L478cce.  if v2 == 0 then goto L478cd8;
  #L478cd2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.dispose:()V` @kind virtual;
  #L478cd8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L478cde.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeInterval`(`io.reactivex.rxjava3.core.Single` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4782f4.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4782f8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4782fe.  v1:= temp @kind object;
  #L478300.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L478306.  v0:= temp @kind object;
  #L478308.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeInterval`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47831c.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L478320.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L478326.  v2:= temp @kind object;
  #L478328.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeInterval`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47833c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L478342.  v0:= temp @kind object;
  #L478344.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47834a.  v2:= temp @kind object;
  #L47834c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeInterval`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478360.  v0:= "unit is null" @kind object;
  #L478364.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47836a.  v0:= "scheduler is null" @kind object;
  #L47836e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478374.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval`;
  #L478378.  v1:= 1I;
  #L47837a.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L478380.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478386.  v3:= temp @kind object;
  #L478388.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeout`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47839c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4783a2.  v4:= temp @kind object;
  #L4783a4.  v5:= 0I;
  #L4783a6.  v0:= v6 @kind object;
  #L4783a8.  v1:= v7 @kind wide;
  #L4783aa.  v3:= v9 @kind object;
  #L4783ac.  call temp:= `a`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind direct;
  #L4783b2.  v7:= temp @kind object;
  #L4783b4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeout`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4783c8.  v5:= 0I;
  #L4783ca.  v0:= v6 @kind object;
  #L4783cc.  v1:= v7 @kind wide;
  #L4783ce.  v3:= v9 @kind object;
  #L4783d0.  v4:= v10 @kind object;
  #L4783d2.  call temp:= `a`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind direct;
  #L4783d8.  v7:= temp @kind object;
  #L4783da.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeout`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4783ec.  v0:= "fallback is null" @kind object;
  #L4783f0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4783f6.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind direct;
  #L4783fc.  v2:= temp @kind object;
  #L4783fe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeout`(`io.reactivex.rxjava3.core.Single` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.SingleSource` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L478410.  v0:= "fallback is null" @kind object;
  #L478414.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47841a.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L478420.  v5:= temp @kind object;
  #L478422.  v1:= v7 @kind object;
  #L478424.  v2:= v8 @kind wide;
  #L478426.  v4:= v10 @kind object;
  #L478428.  v6:= v11 @kind object;
  #L47842a.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind direct;
  #L478430.  v8:= temp @kind object;
  #L478432.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timestamp`(`io.reactivex.rxjava3.core.Single` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4784e4.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4784e8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4784ee.  v1:= temp @kind object;
  #L4784f0.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4784f6.  v0:= temp @kind object;
  #L4784f8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timestamp`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47850c.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L478510.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L478516.  v2:= temp @kind object;
  #L478518.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timestamp`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47852c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L478532.  v0:= temp @kind object;
  #L478534.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47853a.  v2:= temp @kind object;
  #L47853c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timestamp`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L478550.  v0:= "unit is null" @kind object;
  #L478554.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47855a.  v0:= "scheduler is null" @kind object;
  #L47855e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478564.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval`;
  #L478568.  v1:= 0I;
  #L47856a.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L478570.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478576.  v3:= temp @kind object;
  #L478578.  return v3 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.to:(Lio/reactivex/rxjava3/core/SingleConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478d1c.  v0:= "converter is null" @kind object;
  #L478d20.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478d26.  v2:= (`io.reactivex.rxjava3.core.SingleConverter`) v2 @kind object;
  #L478d2a.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleConverter;.apply:(Lio/reactivex/rxjava3/core/Single;)Ljava/lang/Object;` @kind interface;
  #L478d30.  v2:= temp @kind object;
  #L478d32.  return v2 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `toCompletionStage`(`io.reactivex.rxjava3.core.Single` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toCompletionStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L478d44.  v0:= new `io.reactivex.rxjava3.internal.jdk8.CompletionStageConsumer`;
  #L478d48.  v1:= 0I;
  #L478d4a.  v2:= 0I;
  #L478d4c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/CompletionStageConsumer;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L478d52.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeWith:(Lio/reactivex/rxjava3/core/SingleObserver;)Lio/reactivex/rxjava3/core/SingleObserver;` @kind virtual;
  #L478d58.  v0:= temp @kind object;
  #L478d5a.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L478d5e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `toFlowable`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4772e4.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind boolean;
  #L4772e8.  if v0 == 0 then goto L4772fc;
  #L4772ec.  v0:= v1 @kind object;
  #L4772ee.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L4772f2.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind interface;
  #L4772f8.  v0:= temp @kind object;
  #L4772fa.  return v0 @kind object;
  #L4772fc.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable`;
  #L477300.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L477306.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L47730c.  v0:= temp @kind object;
  #L47730e.  return v0 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L478d70.  v0:= new `io.reactivex.rxjava3.internal.observers.FutureMultiObserver`;
  #L478d74.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/FutureMultiObserver;.<init>:()V` @kind direct;
  #L478d7a.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeWith:(Lio/reactivex/rxjava3/core/SingleObserver;)Lio/reactivex/rxjava3/core/SingleObserver;` @kind virtual;
  #L478d80.  v0:= temp @kind object;
  #L478d82.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L478d86.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `toMaybe`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toMaybe:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L477484.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToMaybe` @kind boolean;
  #L477488.  if v0 == 0 then goto L47749c;
  #L47748c.  v0:= v1 @kind object;
  #L47748e.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L477492.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/rxjava3/core/Maybe;` @kind interface;
  #L477498.  v0:= temp @kind object;
  #L47749a.  return v0 @kind object;
  #L47749c.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromSingle`;
  #L4774a0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4774a6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4774ac.  v0:= temp @kind object;
  #L4774ae.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4775c0.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToObservable` @kind boolean;
  #L4775c4.  if v0 == 0 then goto L4775d8;
  #L4775c8.  v0:= v1 @kind object;
  #L4775ca.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L4775ce.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind interface;
  #L4775d4.  v0:= temp @kind object;
  #L4775d6.  return v0 @kind object;
  #L4775d8.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToObservable`;
  #L4775dc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4775e2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4775e8.  v0:= temp @kind object;
  #L4775ea.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `unsubscribeOn`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.unsubscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4785fc.  v0:= "scheduler is null" @kind object;
  #L478600.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L478606.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn`;
  #L47860a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUnsubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L478610.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478616.  v2:= temp @kind object;
  #L478618.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zipWith`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zipWith:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L478bc0.  call temp:= `zip`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L478bc6.  v1:= temp @kind object;
  #L478bc8.  return v1 @kind object;
}
