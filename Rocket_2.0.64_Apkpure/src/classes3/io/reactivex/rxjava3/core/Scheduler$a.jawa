record `io.reactivex.rxjava3.core.Scheduler$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface, `io.reactivex.rxjava3.schedulers.SchedulerRunnableIntrospection` @kind interface {
  `java.lang.Runnable` `io.reactivex.rxjava3.core.Scheduler$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler$Worker` `io.reactivex.rxjava3.core.Scheduler$a.b` @AccessFlag FINAL;
  `java.lang.Thread` `io.reactivex.rxjava3.core.Scheduler$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Scheduler$a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `io.reactivex.rxjava3.core.Scheduler$Worker` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.<init>:(Ljava/lang/Runnable;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L476264.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47626a.  v0.`io.reactivex.rxjava3.core.Scheduler$a.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L47626e.  v0.`io.reactivex.rxjava3.core.Scheduler$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` := v2 @kind object;
  #L476272.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.core.Scheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476284.  v0:= v2.`io.reactivex.rxjava3.core.Scheduler$a.c` @type ^`java.lang.Thread` @kind object;
  #L476288.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L47628e.  v1:= temp @kind object;
  #L476290.  if v0 != v1 then goto L4762ac;
  #L476294.  v0:= v2.`io.reactivex.rxjava3.core.Scheduler$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L476298.  v1:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.internal.schedulers.NewThreadWorker` @kind boolean;
  #L47629c.  if v1 == 0 then goto L4762ac;
  #L4762a0.  v0:= (`io.reactivex.rxjava3.internal.schedulers.NewThreadWorker`) v0 @kind object;
  #L4762a4.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/NewThreadWorker;.shutdown:()V` @kind virtual;
  #L4762aa.  goto L4762b6;
  #L4762ac.  v0:= v2.`io.reactivex.rxjava3.core.Scheduler$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4762b0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4762b6.  return @kind void;
}
procedure `java.lang.Runnable` `getWrappedRunnable`(`io.reactivex.rxjava3.core.Scheduler$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.getWrappedRunnable:()Ljava/lang/Runnable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47624c.  v0:= v1.`io.reactivex.rxjava3.core.Scheduler$a.a` @type ^`java.lang.Runnable` @kind object;
  #L476250.  return v0 @kind object;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.core.Scheduler$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47622c.  v0:= v1.`io.reactivex.rxjava3.core.Scheduler$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L476230.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L476236.  v0:= temp;
  #L476238.  return v0;
}
procedure `void` `run`(`io.reactivex.rxjava3.core.Scheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4762c8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4762ce.  v0:= temp @kind object;
  #L4762d0.  v2.`io.reactivex.rxjava3.core.Scheduler$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L4762d4.  v0:= 0I;
  #L4762d6.  v1:= v2.`io.reactivex.rxjava3.core.Scheduler$a.a` @type ^`java.lang.Runnable` @kind object;
  #L4762da.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L4762e0.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.dispose:()V` @kind virtual;
  #L4762e6.  v2.`io.reactivex.rxjava3.core.Scheduler$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L4762ea.  return @kind void;
  #L4762ec.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4762ee.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4762f4.  throw v1;
  #L4762f6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4762f8.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.dispose:()V` @kind virtual;
  #L4762fe.  v2.`io.reactivex.rxjava3.core.Scheduler$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L476302.  throw v1;
  catch `java.lang.Throwable` @[L4762d6..L4762e0] goto L4762ec;
  catch `java.lang.Throwable` @[L4762ee..L4762f6] goto L4762f6;
}
