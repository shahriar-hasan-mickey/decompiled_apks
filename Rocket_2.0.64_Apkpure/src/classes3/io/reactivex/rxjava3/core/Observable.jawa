record `io.reactivex.rxjava3.core.Observable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.ObservableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Observable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47604c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L476052.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `a`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Consumer` v8 @kind object, `io.reactivex.rxjava3.functions.Consumer` v9 @kind object, `io.reactivex.rxjava3.functions.Action` v10 @kind object, `io.reactivex.rxjava3.functions.Action` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4710fc.  v0:= "onNext is null" @kind object;
  #L471100.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471106.  v0:= "onError is null" @kind object;
  #L47110a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471110.  v0:= "onComplete is null" @kind object;
  #L471114.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47111a.  v0:= "onAfterTerminate is null" @kind object;
  #L47111e.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471124.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach`;
  #L471128.  v1:= v0 @kind object;
  #L47112a.  v2:= v7 @kind object;
  #L47112c.  v3:= v8 @kind object;
  #L47112e.  v4:= v9 @kind object;
  #L471130.  v5:= v10 @kind object;
  #L471132.  v6:= v11 @kind object;
  #L471134.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L47113a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471140.  v8:= temp @kind object;
  #L471142.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46f590.  v0:= "sources is null" @kind object;
  #L46f594.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f59a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAmb`;
  #L46f59e.  v1:= 0I;
  #L46f5a0.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L46f5a6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f5ac.  v2:= temp @kind object;
  #L46f5ae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `ambArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.ambArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46f5c0.  v0:= "sources is null" @kind object;
  #L46f5c4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f5ca.  v0:= length @variable v2;
  #L46f5cc.  if v0 != 0 then goto L46f5da;
  #L46f5d0.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f5d6.  v2:= temp @kind object;
  #L46f5d8.  return v2 @kind object;
  #L46f5da.  v1:= 1I;
  #L46f5dc.  if v0 != v1 then goto L46f5f0;
  #L46f5e0.  v0:= 0I;
  #L46f5e2.  v2:= v2[v0] @kind object;
  #L46f5e6.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f5ec.  v2:= temp @kind object;
  #L46f5ee.  return v2 @kind object;
  #L46f5f0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAmb`;
  #L46f5f4.  v1:= 0I;
  #L46f5f6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L46f5fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f602.  v2:= temp @kind object;
  #L46f604.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `b`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474320.  v0:= "unit is null" @kind object;
  #L474324.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47432a.  v0:= "scheduler is null" @kind object;
  #L47432e.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474334.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed`;
  #L474338.  v1:= v0 @kind object;
  #L47433a.  v2:= v8 @kind object;
  #L47433c.  v3:= v9 @kind wide;
  #L47433e.  v5:= v11 @kind object;
  #L474340.  v6:= v13 @kind object;
  #L474342.  v7:= v12 @kind object;
  #L474344.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed;.<init>:(Lio/reactivex/rxjava3/core/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L47434a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474350.  v9:= temp @kind object;
  #L474352.  return v9 @kind object;
}
procedure `int` `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46f250.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46f256.  v0:= temp;
  #L46f258.  return v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `c`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.c:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4742f0.  v0:= "itemTimeoutIndicator is null" @kind object;
  #L4742f4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4742fa.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout`;
  #L4742fe.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L474304.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47430a.  v2:= temp @kind object;
  #L47430c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v10 @kind object, `io.reactivex.rxjava3.functions.Function9` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46fa44.  v0:= "source1 is null" @kind object;
  #L46fa48.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa4e.  v0:= "source2 is null" @kind object;
  #L46fa52.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa58.  v0:= "source3 is null" @kind object;
  #L46fa5c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa62.  v0:= "source4 is null" @kind object;
  #L46fa66.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa6c.  v0:= "source5 is null" @kind object;
  #L46fa70.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa76.  v0:= "source6 is null" @kind object;
  #L46fa7a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa80.  v0:= "source7 is null" @kind object;
  #L46fa84.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa8a.  v0:= "source8 is null" @kind object;
  #L46fa8e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa94.  v0:= "source9 is null" @kind object;
  #L46fa98.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa9e.  v0:= "combiner is null" @kind object;
  #L46faa2.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46faa8.  v0:= 9I;
  #L46faac.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46fab0.  v1:= 0I;
  #L46fab2.  v0[v1]:= v2 @kind object;
  #L46fab6.  v2:= 1I;
  #L46fab8.  v0[v2]:= v3 @kind object;
  #L46fabc.  v2:= 2I;
  #L46fabe.  v0[v2]:= v4 @kind object;
  #L46fac2.  v2:= 3I;
  #L46fac4.  v0[v2]:= v5 @kind object;
  #L46fac8.  v2:= 4I;
  #L46faca.  v0[v2]:= v6 @kind object;
  #L46face.  v2:= 5I;
  #L46fad0.  v0[v2]:= v7 @kind object;
  #L46fad4.  v2:= 6I;
  #L46fad6.  v0[v2]:= v8 @kind object;
  #L46fada.  v2:= 7I;
  #L46fadc.  v0[v2]:= v9 @kind object;
  #L46fae0.  v2:= 8I;
  #L46fae4.  v0[v2]:= v10 @kind object;
  #L46fae8.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46faee.  v2:= temp @kind object;
  #L46faf0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46faf6.  v3:= temp;
  #L46faf8.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fafe.  v2:= temp @kind object;
  #L46fb00.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.functions.Function8` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46fb14.  v0:= "source1 is null" @kind object;
  #L46fb18.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb1e.  v0:= "source2 is null" @kind object;
  #L46fb22.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb28.  v0:= "source3 is null" @kind object;
  #L46fb2c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb32.  v0:= "source4 is null" @kind object;
  #L46fb36.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb3c.  v0:= "source5 is null" @kind object;
  #L46fb40.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb46.  v0:= "source6 is null" @kind object;
  #L46fb4a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb50.  v0:= "source7 is null" @kind object;
  #L46fb54.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb5a.  v0:= "source8 is null" @kind object;
  #L46fb5e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb64.  v0:= "combiner is null" @kind object;
  #L46fb68.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fb6e.  v0:= 8I;
  #L46fb72.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46fb76.  v1:= 0I;
  #L46fb78.  v0[v1]:= v2 @kind object;
  #L46fb7c.  v2:= 1I;
  #L46fb7e.  v0[v2]:= v3 @kind object;
  #L46fb82.  v2:= 2I;
  #L46fb84.  v0[v2]:= v4 @kind object;
  #L46fb88.  v2:= 3I;
  #L46fb8a.  v0[v2]:= v5 @kind object;
  #L46fb8e.  v2:= 4I;
  #L46fb90.  v0[v2]:= v6 @kind object;
  #L46fb94.  v2:= 5I;
  #L46fb96.  v0[v2]:= v7 @kind object;
  #L46fb9a.  v2:= 6I;
  #L46fb9c.  v0[v2]:= v8 @kind object;
  #L46fba0.  v2:= 7I;
  #L46fba2.  v0[v2]:= v9 @kind object;
  #L46fba6.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46fbac.  v2:= temp @kind object;
  #L46fbae.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46fbb4.  v3:= temp;
  #L46fbb6.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fbbc.  v2:= temp @kind object;
  #L46fbbe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function7` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46fbd0.  v0:= "source1 is null" @kind object;
  #L46fbd4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fbda.  v0:= "source2 is null" @kind object;
  #L46fbde.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fbe4.  v0:= "source3 is null" @kind object;
  #L46fbe8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fbee.  v0:= "source4 is null" @kind object;
  #L46fbf2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fbf8.  v0:= "source5 is null" @kind object;
  #L46fbfc.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fc02.  v0:= "source6 is null" @kind object;
  #L46fc06.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fc0c.  v0:= "source7 is null" @kind object;
  #L46fc10.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fc16.  v0:= "combiner is null" @kind object;
  #L46fc1a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fc20.  v0:= 7I;
  #L46fc22.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46fc26.  v1:= 0I;
  #L46fc28.  v0[v1]:= v2 @kind object;
  #L46fc2c.  v2:= 1I;
  #L46fc2e.  v0[v2]:= v3 @kind object;
  #L46fc32.  v2:= 2I;
  #L46fc34.  v0[v2]:= v4 @kind object;
  #L46fc38.  v2:= 3I;
  #L46fc3a.  v0[v2]:= v5 @kind object;
  #L46fc3e.  v2:= 4I;
  #L46fc40.  v0[v2]:= v6 @kind object;
  #L46fc44.  v2:= 5I;
  #L46fc46.  v0[v2]:= v7 @kind object;
  #L46fc4a.  v2:= 6I;
  #L46fc4c.  v0[v2]:= v8 @kind object;
  #L46fc50.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46fc56.  v2:= temp @kind object;
  #L46fc58.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46fc5e.  v3:= temp;
  #L46fc60.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fc66.  v2:= temp @kind object;
  #L46fc68.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.functions.Function6` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46fc7c.  v0:= "source1 is null" @kind object;
  #L46fc80.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fc86.  v0:= "source2 is null" @kind object;
  #L46fc8a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fc90.  v0:= "source3 is null" @kind object;
  #L46fc94.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fc9a.  v0:= "source4 is null" @kind object;
  #L46fc9e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fca4.  v0:= "source5 is null" @kind object;
  #L46fca8.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fcae.  v0:= "source6 is null" @kind object;
  #L46fcb2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fcb8.  v0:= "combiner is null" @kind object;
  #L46fcbc.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fcc2.  v0:= 6I;
  #L46fcc4.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46fcc8.  v1:= 0I;
  #L46fcca.  v0[v1]:= v2 @kind object;
  #L46fcce.  v2:= 1I;
  #L46fcd0.  v0[v2]:= v3 @kind object;
  #L46fcd4.  v2:= 2I;
  #L46fcd6.  v0[v2]:= v4 @kind object;
  #L46fcda.  v2:= 3I;
  #L46fcdc.  v0[v2]:= v5 @kind object;
  #L46fce0.  v2:= 4I;
  #L46fce2.  v0[v2]:= v6 @kind object;
  #L46fce6.  v2:= 5I;
  #L46fce8.  v0[v2]:= v7 @kind object;
  #L46fcec.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46fcf2.  v2:= temp @kind object;
  #L46fcf4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46fcfa.  v3:= temp;
  #L46fcfc.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fd02.  v2:= temp @kind object;
  #L46fd04.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46fd18.  v0:= "source1 is null" @kind object;
  #L46fd1c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fd22.  v0:= "source2 is null" @kind object;
  #L46fd26.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fd2c.  v0:= "source3 is null" @kind object;
  #L46fd30.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fd36.  v0:= "source4 is null" @kind object;
  #L46fd3a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fd40.  v0:= "source5 is null" @kind object;
  #L46fd44.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fd4a.  v0:= "combiner is null" @kind object;
  #L46fd4e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fd54.  v0:= 5I;
  #L46fd56.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46fd5a.  v1:= 0I;
  #L46fd5c.  v0[v1]:= v2 @kind object;
  #L46fd60.  v2:= 1I;
  #L46fd62.  v0[v2]:= v3 @kind object;
  #L46fd66.  v2:= 2I;
  #L46fd68.  v0[v2]:= v4 @kind object;
  #L46fd6c.  v2:= 3I;
  #L46fd6e.  v0[v2]:= v5 @kind object;
  #L46fd72.  v2:= 4I;
  #L46fd74.  v0[v2]:= v6 @kind object;
  #L46fd78.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46fd7e.  v2:= temp @kind object;
  #L46fd80.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46fd86.  v3:= temp;
  #L46fd88.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fd8e.  v2:= temp @kind object;
  #L46fd90.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46fda4.  v0:= "source1 is null" @kind object;
  #L46fda8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fdae.  v0:= "source2 is null" @kind object;
  #L46fdb2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fdb8.  v0:= "source3 is null" @kind object;
  #L46fdbc.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fdc2.  v0:= "source4 is null" @kind object;
  #L46fdc6.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fdcc.  v0:= "combiner is null" @kind object;
  #L46fdd0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fdd6.  v0:= 4I;
  #L46fdd8.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46fddc.  v1:= 0I;
  #L46fdde.  v0[v1]:= v2 @kind object;
  #L46fde2.  v2:= 1I;
  #L46fde4.  v0[v2]:= v3 @kind object;
  #L46fde8.  v2:= 2I;
  #L46fdea.  v0[v2]:= v4 @kind object;
  #L46fdee.  v2:= 3I;
  #L46fdf0.  v0[v2]:= v5 @kind object;
  #L46fdf4.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46fdfa.  v2:= temp @kind object;
  #L46fdfc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46fe02.  v3:= temp;
  #L46fe04.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fe0a.  v2:= temp @kind object;
  #L46fe0c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46fe20.  v0:= "source1 is null" @kind object;
  #L46fe24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fe2a.  v0:= "source2 is null" @kind object;
  #L46fe2e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fe34.  v0:= "source3 is null" @kind object;
  #L46fe38.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fe3e.  v0:= "combiner is null" @kind object;
  #L46fe42.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fe48.  v0:= 3I;
  #L46fe4a.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46fe4e.  v1:= 0I;
  #L46fe50.  v0[v1]:= v2 @kind object;
  #L46fe54.  v2:= 1I;
  #L46fe56.  v0[v2]:= v3 @kind object;
  #L46fe5a.  v2:= 2I;
  #L46fe5c.  v0[v2]:= v4 @kind object;
  #L46fe60.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46fe66.  v2:= temp @kind object;
  #L46fe68.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46fe6e.  v3:= temp;
  #L46fe70.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fe76.  v2:= temp @kind object;
  #L46fe78.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46fe8c.  v0:= "source1 is null" @kind object;
  #L46fe90.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fe96.  v0:= "source2 is null" @kind object;
  #L46fe9a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fea0.  v0:= "combiner is null" @kind object;
  #L46fea4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46feaa.  v0:= 2I;
  #L46feac.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46feb0.  v1:= 0I;
  #L46feb2.  v0[v1]:= v2 @kind object;
  #L46feb6.  v2:= 1I;
  #L46feb8.  v0[v2]:= v3 @kind object;
  #L46febc.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46fec2.  v2:= temp @kind object;
  #L46fec4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46feca.  v3:= temp;
  #L46fecc.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fed2.  v2:= temp @kind object;
  #L46fed4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46fee8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46feee.  v0:= temp;
  #L46fef0.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fef6.  v1:= temp @kind object;
  #L46fef8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46ff0c.  v0:= "sources is null" @kind object;
  #L46ff10.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ff16.  v0:= "combiner is null" @kind object;
  #L46ff1a.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ff20.  v0:= "bufferSize" @kind object;
  #L46ff24.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46ff2a.  v5:= v9 ^< 1;
  #L46ff2e.  v9:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest`;
  #L46ff32.  v2:= 0I;
  #L46ff34.  v6:= 0I;
  #L46ff36.  v1:= v9 @kind object;
  #L46ff38.  v3:= v7 @kind object;
  #L46ff3a.  v4:= v8 @kind object;
  #L46ff3c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L46ff42.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46ff48.  v7:= temp @kind object;
  #L46ff4a.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46ff5c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46ff62.  v0:= temp;
  #L46ff64.  call temp:= `combineLatestArray`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46ff6a.  v1:= temp @kind object;
  #L46ff6c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46ff80.  v0:= "sources is null" @kind object;
  #L46ff84.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ff8a.  v0:= length @variable v7;
  #L46ff8c.  if v0 != 0 then goto L46ff9a;
  #L46ff90.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46ff96.  v7:= temp @kind object;
  #L46ff98.  return v7 @kind object;
  #L46ff9a.  v0:= "combiner is null" @kind object;
  #L46ff9e.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ffa4.  v0:= "bufferSize" @kind object;
  #L46ffa8.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46ffae.  v5:= v9 ^< 1;
  #L46ffb2.  v9:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest`;
  #L46ffb6.  v3:= 0I;
  #L46ffb8.  v6:= 0I;
  #L46ffba.  v1:= v9 @kind object;
  #L46ffbc.  v2:= v7 @kind object;
  #L46ffbe.  v4:= v8 @kind object;
  #L46ffc0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L46ffc6.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46ffcc.  v7:= temp @kind object;
  #L46ffce.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestArrayDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46ffe0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L46ffe6.  v0:= temp;
  #L46ffe8.  call temp:= `combineLatestArrayDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46ffee.  v1:= temp @kind object;
  #L46fff0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestArrayDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v6 @kind object, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L470004.  v0:= "sources is null" @kind object;
  #L470008.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47000e.  v0:= "combiner is null" @kind object;
  #L470012.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470018.  v0:= "bufferSize" @kind object;
  #L47001c.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470022.  v0:= length @variable v6;
  #L470024.  if v0 != 0 then goto L470032;
  #L470028.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47002e.  v6:= temp @kind object;
  #L470030.  return v6 @kind object;
  #L470032.  v4:= v8 ^< 1;
  #L470036.  v8:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest`;
  #L47003a.  v2:= 0I;
  #L47003c.  v5:= 1I;
  #L47003e.  v0:= v8 @kind object;
  #L470040.  v1:= v6 @kind object;
  #L470042.  v3:= v7 @kind object;
  #L470044.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L47004a.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470050.  v6:= temp @kind object;
  #L470052.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestDelayError`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L470064.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47006a.  v0:= temp;
  #L47006c.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470072.  v1:= temp @kind object;
  #L470074.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestDelayError`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L470088.  v0:= "sources is null" @kind object;
  #L47008c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470092.  v0:= "combiner is null" @kind object;
  #L470096.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47009c.  v0:= "bufferSize" @kind object;
  #L4700a0.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4700a6.  v5:= v9 ^< 1;
  #L4700aa.  v9:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest`;
  #L4700ae.  v2:= 0I;
  #L4700b0.  v6:= 1I;
  #L4700b2.  v1:= v9 @kind object;
  #L4700b4.  v3:= v7 @kind object;
  #L4700b6.  v4:= v8 @kind object;
  #L4700b8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4700be.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4700c4.  v7:= temp @kind object;
  #L4700c6.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L470108.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47010e.  v0:= temp;
  #L470110.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470116.  v1:= temp @kind object;
  #L470118.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47012c.  v0:= "sources is null" @kind object;
  #L470130.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470136.  v0:= "bufferSize" @kind object;
  #L47013a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470140.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L470144.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47014a.  v1:= temp @kind object;
  #L47014c.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470150.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L470156.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47015c.  v3:= temp @kind object;
  #L47015e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470170.  v0:= "source1 is null" @kind object;
  #L470174.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47017a.  v0:= "source2 is null" @kind object;
  #L47017e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470184.  v0:= 2I;
  #L470186.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L47018a.  v1:= 0I;
  #L47018c.  v0[v1]:= v2 @kind object;
  #L470190.  v2:= 1I;
  #L470192.  v0[v2]:= v3 @kind object;
  #L470196.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47019c.  v2:= temp @kind object;
  #L47019e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4701b0.  v0:= "source1 is null" @kind object;
  #L4701b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4701ba.  v0:= "source2 is null" @kind object;
  #L4701be.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4701c4.  v0:= "source3 is null" @kind object;
  #L4701c8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4701ce.  v0:= 3I;
  #L4701d0.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4701d4.  v1:= 0I;
  #L4701d6.  v0[v1]:= v2 @kind object;
  #L4701da.  v2:= 1I;
  #L4701dc.  v0[v2]:= v3 @kind object;
  #L4701e0.  v2:= 2I;
  #L4701e2.  v0[v2]:= v4 @kind object;
  #L4701e6.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4701ec.  v2:= temp @kind object;
  #L4701ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470200.  v0:= "source1 is null" @kind object;
  #L470204.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47020a.  v0:= "source2 is null" @kind object;
  #L47020e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470214.  v0:= "source3 is null" @kind object;
  #L470218.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47021e.  v0:= "source4 is null" @kind object;
  #L470222.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470228.  v0:= 4I;
  #L47022a.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L47022e.  v1:= 0I;
  #L470230.  v0[v1]:= v2 @kind object;
  #L470234.  v2:= 1I;
  #L470236.  v0[v2]:= v3 @kind object;
  #L47023a.  v2:= 2I;
  #L47023c.  v0[v2]:= v4 @kind object;
  #L470240.  v2:= 3I;
  #L470242.  v0[v2]:= v5 @kind object;
  #L470246.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47024c.  v2:= temp @kind object;
  #L47024e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L470260.  v0:= "sources is null" @kind object;
  #L470264.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47026a.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470270.  v3:= temp @kind object;
  #L470272.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L470278.  v0:= temp @kind object;
  #L47027a.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L470280.  v1:= temp;
  #L470282.  v2:= 0I;
  #L470284.  call temp:= `concatMapDelayError`(v3, v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47028a.  v3:= temp @kind object;
  #L47028c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4702a0.  v0:= "sources is null" @kind object;
  #L4702a4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4702aa.  v0:= length @variable v4;
  #L4702ac.  if v0 != 0 then goto L4702ba;
  #L4702b0.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4702b6.  v4:= temp @kind object;
  #L4702b8.  return v4 @kind object;
  #L4702ba.  v0:= length @variable v4;
  #L4702bc.  v1:= 1I;
  #L4702be.  if v0 != v1 then goto L4702d2;
  #L4702c2.  v0:= 0I;
  #L4702c4.  v4:= v4[v0] @kind object;
  #L4702c8.  call temp:= `wrap`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4702ce.  v4:= temp @kind object;
  #L4702d0.  return v4 @kind object;
  #L4702d2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L4702d6.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4702dc.  v4:= temp @kind object;
  #L4702de.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4702e4.  v1:= temp @kind object;
  #L4702e6.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4702ec.  v2:= temp;
  #L4702ee.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4702f2.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4702f8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4702fe.  v4:= temp @kind object;
  #L470300.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470314.  v0:= "sources is null" @kind object;
  #L470318.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47031e.  v0:= length @variable v2;
  #L470320.  if v0 != 0 then goto L47032e;
  #L470324.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47032a.  v2:= temp @kind object;
  #L47032c.  return v2 @kind object;
  #L47032e.  v0:= length @variable v2;
  #L470330.  v1:= 1I;
  #L470332.  if v0 != v1 then goto L470346;
  #L470336.  v0:= 0I;
  #L470338.  v2:= v2[v0] @kind object;
  #L47033c.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470342.  v2:= temp @kind object;
  #L470344.  return v2 @kind object;
  #L470346.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47034c.  v2:= temp @kind object;
  #L47034e.  call temp:= `concatDelayError`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470354.  v2:= temp @kind object;
  #L470356.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayEager`(`int` v2 , `int` v3 , `io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEager:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470368.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47036e.  v4:= temp @kind object;
  #L470370.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L470376.  v0:= temp @kind object;
  #L470378.  v1:= 0I;
  #L47037a.  call temp:= `concatMapEagerDelayError`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470380.  v2:= temp @kind object;
  #L470382.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayEager`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEager:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470394.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47039a.  v0:= temp;
  #L47039c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4703a2.  v1:= temp;
  #L4703a4.  call temp:= `concatArrayEager`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEager:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4703aa.  v2:= temp @kind object;
  #L4703ac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayEagerDelayError`(`int` v2 , `int` v3 , `io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEagerDelayError:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4703c0.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4703c6.  v4:= temp @kind object;
  #L4703c8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4703ce.  v0:= temp @kind object;
  #L4703d0.  v1:= 1I;
  #L4703d2.  call temp:= `concatMapEagerDelayError`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4703d8.  v2:= temp @kind object;
  #L4703da.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayEagerDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEagerDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4703ec.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4703f2.  v0:= temp;
  #L4703f4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4703fa.  v1:= temp;
  #L4703fc.  call temp:= `concatArrayEagerDelayError`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEagerDelayError:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470402.  v2:= temp @kind object;
  #L470404.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470418.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47041e.  v0:= temp;
  #L470420.  v1:= 1I;
  #L470422.  call temp:= `concatDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;IZ)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470428.  v2:= temp @kind object;
  #L47042a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;IZ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47043c.  v0:= "sources is null" @kind object;
  #L470440.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470446.  v0:= "bufferSize is null" @kind object;
  #L47044a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470450.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L470454.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47045a.  v1:= temp @kind object;
  #L47045c.  if v4 == 0 then goto L470466;
  #L470460.  v4:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470464.  goto L47046a;
  #L470466.  v4:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L47046a.  call `<init>`(v0, v2, v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L470470.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470476.  v2:= temp @kind object;
  #L470478.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47048c.  v0:= "sources is null" @kind object;
  #L470490.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470496.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47049c.  v1:= temp @kind object;
  #L47049e.  call temp:= `concatDelayError`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4704a4.  v1:= temp @kind object;
  #L4704a6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEager`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4704b8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4704be.  v0:= temp;
  #L4704c0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4704c6.  v1:= temp;
  #L4704c8.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Lio/reactivex/rxjava3/core/ObservableSource;II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4704ce.  v2:= temp @kind object;
  #L4704d0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEager`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Lio/reactivex/rxjava3/core/ObservableSource;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4704e4.  call temp:= `wrap`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4704ea.  v1:= temp @kind object;
  #L4704ec.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4704f2.  v0:= temp @kind object;
  #L4704f4.  call temp:= `concatMapEager`(v1, v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4704fa.  v1:= temp @kind object;
  #L4704fc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470510.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L470516.  v0:= temp;
  #L470518.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47051e.  v1:= temp;
  #L470520.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470526.  v2:= temp @kind object;
  #L470528.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47053c.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470542.  v2:= temp @kind object;
  #L470544.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47054a.  v0:= temp @kind object;
  #L47054c.  v1:= 0I;
  #L47054e.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470554.  v2:= temp @kind object;
  #L470556.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEagerDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470568.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47056e.  v0:= temp;
  #L470570.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L470576.  v1:= temp;
  #L470578.  call temp:= `concatEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47057e.  v2:= temp @kind object;
  #L470580.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEagerDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L470594.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47059a.  v2:= temp @kind object;
  #L47059c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4705a2.  v0:= temp @kind object;
  #L4705a4.  v1:= 1I;
  #L4705a6.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4705ac.  v2:= temp @kind object;
  #L4705ae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4705c0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4705c6.  v0:= temp;
  #L4705c8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4705ce.  v1:= temp;
  #L4705d0.  call temp:= `concatEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4705d6.  v2:= temp @kind object;
  #L4705d8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4705ec.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4705f2.  v2:= temp @kind object;
  #L4705f4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4705fa.  v0:= temp @kind object;
  #L4705fc.  v1:= 1I;
  #L4705fe.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470604.  v2:= temp @kind object;
  #L470606.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `create`(`io.reactivex.rxjava3.core.ObservableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.create:(Lio/reactivex/rxjava3/core/ObservableOnSubscribe;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L470b98.  v0:= "source is null" @kind object;
  #L470b9c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470ba2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCreate`;
  #L470ba6.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCreate;.<init>:(Lio/reactivex/rxjava3/core/ObservableOnSubscribe;)V` @kind direct;
  #L470bac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470bb2.  v1:= temp @kind object;
  #L470bb4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `defer`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.defer:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L470c8c.  v0:= "supplier is null" @kind object;
  #L470c90.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470c96.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDefer`;
  #L470c9a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L470ca0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470ca6.  v1:= temp @kind object;
  #L470ca8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471234.  v0:= `@@io.reactivex.rxjava3.internal.operators.observable.ObservableEmpty.INSTANCE` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L471238.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47123e.  v0:= temp @kind object;
  #L471240.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `error`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471254.  v0:= "supplier is null" @kind object;
  #L471258.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47125e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableError`;
  #L471262.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableError;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L471268.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47126e.  v1:= temp @kind object;
  #L471270.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471284.  v0:= "throwable is null" @kind object;
  #L471288.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47128e.  call temp:= `justSupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L471294.  v1:= temp @kind object;
  #L471296.  call temp:= `error`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47129c.  v1:= temp @kind object;
  #L47129e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromAction`(`io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromAction:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4716a4.  v0:= "action is null" @kind object;
  #L4716a8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4716ae.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction`;
  #L4716b2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4716b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4716be.  v1:= temp @kind object;
  #L4716c0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromArray`(`java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4716d4.  v0:= "items is null" @kind object;
  #L4716d8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4716de.  v0:= length @variable v2;
  #L4716e0.  if v0 != 0 then goto L4716ee;
  #L4716e4.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4716ea.  v2:= temp @kind object;
  #L4716ec.  return v2 @kind object;
  #L4716ee.  v0:= length @variable v2;
  #L4716f0.  v1:= 1I;
  #L4716f2.  if v0 != v1 then goto L471706;
  #L4716f6.  v0:= 0I;
  #L4716f8.  v2:= v2[v0] @kind object;
  #L4716fc.  call temp:= `just`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471702.  v2:= temp @kind object;
  #L471704.  return v2 @kind object;
  #L471706.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray`;
  #L47170a.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L471710.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471716.  v2:= temp @kind object;
  #L471718.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47172c.  v0:= "callable is null" @kind object;
  #L471730.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471736.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable`;
  #L47173a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L471740.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471746.  v1:= temp @kind object;
  #L471748.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromCompletable`(`io.reactivex.rxjava3.core.CompletableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromCompletable:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47175c.  v0:= "completableSource is null" @kind object;
  #L471760.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471766.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromCompletable`;
  #L47176a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromCompletable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L471770.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471776.  v1:= temp @kind object;
  #L471778.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromCompletionStage`(`java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromCompletionStage:(Ljava/util/concurrent/CompletionStage;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47178c.  v0:= "stage is null" @kind object;
  #L471790.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471796.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFromCompletionStage`;
  #L47179a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @kind direct;
  #L4717a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4717a6.  v1:= temp @kind object;
  #L4717a8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromFuture`(`java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4717bc.  v0:= "future is null" @kind object;
  #L4717c0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4717c6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture`;
  #L4717ca.  v1:= 0L;
  #L4717ce.  v3:= 0I;
  #L4717d0.  call `<init>`(v0, v4, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L4717d6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4717dc.  v4:= temp @kind object;
  #L4717de.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4717f0.  v0:= "future is null" @kind object;
  #L4717f4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4717fa.  v0:= "unit is null" @kind object;
  #L4717fe.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471804.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture`;
  #L471808.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L47180e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471814.  v1:= temp @kind object;
  #L471816.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromIterable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471828.  v0:= "source is null" @kind object;
  #L47182c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471832.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromIterable`;
  #L471836.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L47183c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471842.  v1:= temp @kind object;
  #L471844.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471858.  v0:= "maybe is null" @kind object;
  #L47185c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471862.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable`;
  #L471866.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L47186c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471872.  v1:= temp @kind object;
  #L471874.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromOptional`(`java.util.Optional` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromOptional:(Ljava/util/Optional;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471888.  v0:= "optional is null" @kind object;
  #L47188c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471892.  v0:= `@@io.reactivex.rxjava3.core.f.a` @type ^`io.reactivex.rxjava3.core.f` @kind object;
  #L471896.  call temp:= `map`(v1, v0) @signature `Ljava/util/Optional;.map:(Ljava/util/function/Function;)Ljava/util/Optional;` @kind virtual;
  #L47189c.  v1:= temp @kind object;
  #L47189e.  v0:= `@@io.reactivex.rxjava3.core.g.a` @type ^`io.reactivex.rxjava3.core.g` @kind object;
  #L4718a2.  call temp:= `orElseGet`(v1, v0) @signature `Ljava/util/Optional;.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;` @kind virtual;
  #L4718a8.  v1:= temp @kind object;
  #L4718aa.  v1:= (`io.reactivex.rxjava3.core.Observable`) v1 @kind object;
  #L4718ae.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4718c0.  v0:= "publisher is null" @kind object;
  #L4718c4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4718ca.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromPublisher`;
  #L4718ce.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4718d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4718da.  v1:= temp @kind object;
  #L4718dc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4718f0.  v0:= "run is null" @kind object;
  #L4718f4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4718fa.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromRunnable`;
  #L4718fe.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L471904.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47190a.  v1:= temp @kind object;
  #L47190c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromSingle`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromSingle:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471920.  v0:= "source is null" @kind object;
  #L471924.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47192a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToObservable`;
  #L47192e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L471934.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47193a.  v1:= temp @kind object;
  #L47193c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromStream`(`java.util.stream.Stream` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromStream:(Ljava/util/stream/Stream;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471950.  v0:= "stream is null" @kind object;
  #L471954.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47195a.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFromStream`;
  #L47195e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.<init>:(Ljava/util/stream/Stream;)V` @kind direct;
  #L471964.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47196a.  v1:= temp @kind object;
  #L47196c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromSupplier`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromSupplier:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471980.  v0:= "supplier is null" @kind object;
  #L471984.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47198a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier`;
  #L47198e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L471994.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47199a.  v1:= temp @kind object;
  #L47199c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4719b0.  v0:= "generator is null" @kind object;
  #L4719b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4719ba.  call temp:= `nullSupplier`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.nullSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4719c0.  v0:= temp @kind object;
  #L4719c2.  call temp:= `simpleGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.simpleGenerator:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L4719c8.  v2:= temp @kind object;
  #L4719ca.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4719d0.  v1:= temp @kind object;
  #L4719d2.  call temp:= `generate`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4719d8.  v2:= temp @kind object;
  #L4719da.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4719ec.  v0:= "generator is null" @kind object;
  #L4719f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4719f6.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L4719fc.  v2:= temp @kind object;
  #L4719fe.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L471a04.  v0:= temp @kind object;
  #L471a06.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471a0c.  v1:= temp @kind object;
  #L471a0e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471a20.  v0:= "generator is null" @kind object;
  #L471a24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471a2a.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L471a30.  v2:= temp @kind object;
  #L471a32.  call temp:= `generate`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471a38.  v1:= temp @kind object;
  #L471a3a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471a4c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L471a52.  v0:= temp @kind object;
  #L471a54.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471a5a.  v1:= temp @kind object;
  #L471a5c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471a70.  v0:= "initialState is null" @kind object;
  #L471a74.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471a7a.  v0:= "generator is null" @kind object;
  #L471a7e.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471a84.  v0:= "disposeState is null" @kind object;
  #L471a88.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471a8e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate`;
  #L471a92.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L471a98.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471a9e.  v1:= temp @kind object;
  #L471aa0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `interval`(`long` v6 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L471c6c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L471c72.  v5:= temp @kind object;
  #L471c74.  v0:= v6 @kind wide;
  #L471c76.  v2:= v8 @kind wide;
  #L471c78.  v4:= v10 @kind object;
  #L471c7a.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471c80.  v6:= temp @kind object;
  #L471c82.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `interval`(`long` v8 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L471c94.  v0:= "unit is null" @kind object;
  #L471c98.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471c9e.  v0:= "scheduler is null" @kind object;
  #L471ca2.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471ca8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableInterval`;
  #L471cac.  v1:= 0L;
  #L471cb0.  call temp:= `max`(v1, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L471cb6.  v8:= temp @kind wide;
  #L471cb8.  call temp:= `max`(v1, v10) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L471cbe.  v4:= temp @kind wide;
  #L471cc0.  v1:= v0 @kind object;
  #L471cc2.  v2:= v8 @kind wide;
  #L471cc4.  v6:= v12 @kind object;
  #L471cc6.  v7:= v13 @kind object;
  #L471cc8.  call `<init>`(v1, v2, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L471cce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471cd4.  v8:= temp @kind object;
  #L471cd6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L471c20.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L471c26.  v5:= temp @kind object;
  #L471c28.  v0:= v6 @kind wide;
  #L471c2a.  v2:= v6 @kind wide;
  #L471c2c.  v4:= v8 @kind object;
  #L471c2e.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471c34.  v6:= temp @kind object;
  #L471c36.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object, `io.reactivex.rxjava3.core.Scheduler` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L471c48.  v0:= v6 @kind wide;
  #L471c4a.  v2:= v6 @kind wide;
  #L471c4c.  v4:= v8 @kind object;
  #L471c4e.  v5:= v9 @kind object;
  #L471c50.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471c56.  v6:= temp @kind object;
  #L471c58.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `intervalRange`(`long` v10 , `long` v12 , `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L471ce8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L471cee.  v9:= temp @kind object;
  #L471cf0.  v0:= v10 @kind wide;
  #L471cf2.  v2:= v12 @kind wide;
  #L471cf4.  v4:= v14 @kind wide;
  #L471cf6.  v6:= v16 @kind wide;
  #L471cfa.  v8:= v18 @kind object;
  #L471cfe.  call temp:= `intervalRange`(v0, v2, v4, v6, v8, v9) @signature `Lio/reactivex/rxjava3/core/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471d04.  v0:= temp @kind object;
  #L471d06.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `intervalRange`(`long` v16 , `long` v18 , `long` v20 , `long` v22 , `java.util.concurrent.TimeUnit` v24 @kind object, `io.reactivex.rxjava3.core.Scheduler` v25 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L471d18.  v0:= v18 @kind wide;
  #L471d1c.  v2:= v20 @kind wide;
  #L471d20.  v9:= v24 @kind object;
  #L471d24.  v10:= v25 @kind object;
  #L471d28.  v4:= 0L;
  #L471d2c.  v6:= lcmp(v0, v4);
  #L471d30.  if v6 < 0 then goto L471dc6;
  #L471d34.  if v6 != 0 then goto L471d4a;
  #L471d38.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471d3e.  v0:= temp @kind object;
  #L471d40.  call temp:= `delay`(v0, v2, v9, v10) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471d46.  v0:= temp @kind object;
  #L471d48.  return v0 @kind object;
  #L471d4a.  v6:= 1L;
  #L471d4e.  v0:= v0 - v6 @kind long;
  #L471d50.  v6:= v16 + v0 @kind long;
  #L471d54.  v0:= lcmp(v16, v4);
  #L471d58.  if v0 <= 0 then goto L471d76;
  #L471d5c.  v0:= lcmp(v6, v4);
  #L471d60.  if v0 < 0 then goto L471d66;
  #L471d64.  goto L471d76;
  #L471d66.  v0:= new `java.lang.IllegalArgumentException`;
  #L471d6a.  v1:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L471d6e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L471d74.  throw v0;
  #L471d76.  v0:= "unit is null" @kind object;
  #L471d7a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471d80.  v0:= "scheduler is null" @kind object;
  #L471d84.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471d8a.  v11:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange`;
  #L471d8e.  call temp:= `max`(v4, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L471d94.  v12:= temp @kind wide;
  #L471d96.  v0:= v22 @kind wide;
  #L471d9a.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L471da0.  v14:= temp @kind wide;
  #L471da2.  v0:= v11 @kind object;
  #L471da4.  v1:= v16 @kind wide;
  #L471da8.  v3:= v6 @kind wide;
  #L471daa.  v5:= v12 @kind wide;
  #L471dac.  v7:= v14 @kind wide;
  #L471dae.  v9:= v24 @kind object;
  #L471db2.  v10:= v25 @kind object;
  #L471db6.  call `<init>`(v0, v1, v3, v5, v7, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableIntervalRange;.<init>:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L471dbc.  call temp:= `onAssembly`(v11) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471dc2.  v0:= temp @kind object;
  #L471dc4.  return v0 @kind object;
  #L471dc6.  v2:= new `java.lang.IllegalArgumentException`;
  #L471dca.  v3:= new `java.lang.StringBuilder`;
  #L471dce.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L471dd4.  v4:= "count >= 0 required but it was " @kind object;
  #L471dd8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L471dde.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L471de4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L471dea.  v0:= temp @kind object;
  #L471dec.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L471df2.  throw v2;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471e5c.  v0:= "item is null" @kind object;
  #L471e60.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471e66.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableJust`;
  #L471e6a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L471e70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471e76.  v1:= temp @kind object;
  #L471e78.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L471e8c.  v0:= "item1 is null" @kind object;
  #L471e90.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471e96.  v0:= "item2 is null" @kind object;
  #L471e9a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471ea0.  v0:= 2I;
  #L471ea2.  v0:= new `java.lang.Object`[v0];
  #L471ea6.  v1:= 0I;
  #L471ea8.  v0[v1]:= v2 @kind object;
  #L471eac.  v2:= 1I;
  #L471eae.  v0[v2]:= v3 @kind object;
  #L471eb2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471eb8.  v2:= temp @kind object;
  #L471eba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L471ecc.  v0:= "item1 is null" @kind object;
  #L471ed0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471ed6.  v0:= "item2 is null" @kind object;
  #L471eda.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471ee0.  v0:= "item3 is null" @kind object;
  #L471ee4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471eea.  v0:= 3I;
  #L471eec.  v0:= new `java.lang.Object`[v0];
  #L471ef0.  v1:= 0I;
  #L471ef2.  v0[v1]:= v2 @kind object;
  #L471ef6.  v2:= 1I;
  #L471ef8.  v0[v2]:= v3 @kind object;
  #L471efc.  v2:= 2I;
  #L471efe.  v0[v2]:= v4 @kind object;
  #L471f02.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471f08.  v2:= temp @kind object;
  #L471f0a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L471f1c.  v0:= "item1 is null" @kind object;
  #L471f20.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471f26.  v0:= "item2 is null" @kind object;
  #L471f2a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471f30.  v0:= "item3 is null" @kind object;
  #L471f34.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471f3a.  v0:= "item4 is null" @kind object;
  #L471f3e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471f44.  v0:= 4I;
  #L471f46.  v0:= new `java.lang.Object`[v0];
  #L471f4a.  v1:= 0I;
  #L471f4c.  v0[v1]:= v2 @kind object;
  #L471f50.  v2:= 1I;
  #L471f52.  v0[v2]:= v3 @kind object;
  #L471f56.  v2:= 2I;
  #L471f58.  v0[v2]:= v4 @kind object;
  #L471f5c.  v2:= 3I;
  #L471f5e.  v0[v2]:= v5 @kind object;
  #L471f62.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471f68.  v2:= temp @kind object;
  #L471f6a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L471f7c.  v0:= "item1 is null" @kind object;
  #L471f80.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471f86.  v0:= "item2 is null" @kind object;
  #L471f8a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471f90.  v0:= "item3 is null" @kind object;
  #L471f94.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471f9a.  v0:= "item4 is null" @kind object;
  #L471f9e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471fa4.  v0:= "item5 is null" @kind object;
  #L471fa8.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471fae.  v0:= 5I;
  #L471fb0.  v0:= new `java.lang.Object`[v0];
  #L471fb4.  v1:= 0I;
  #L471fb6.  v0[v1]:= v2 @kind object;
  #L471fba.  v2:= 1I;
  #L471fbc.  v0[v2]:= v3 @kind object;
  #L471fc0.  v2:= 2I;
  #L471fc2.  v0[v2]:= v4 @kind object;
  #L471fc6.  v2:= 3I;
  #L471fc8.  v0[v2]:= v5 @kind object;
  #L471fcc.  v2:= 4I;
  #L471fce.  v0[v2]:= v6 @kind object;
  #L471fd2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471fd8.  v2:= temp @kind object;
  #L471fda.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L471fec.  v0:= "item1 is null" @kind object;
  #L471ff0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471ff6.  v0:= "item2 is null" @kind object;
  #L471ffa.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472000.  v0:= "item3 is null" @kind object;
  #L472004.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47200a.  v0:= "item4 is null" @kind object;
  #L47200e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472014.  v0:= "item5 is null" @kind object;
  #L472018.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47201e.  v0:= "item6 is null" @kind object;
  #L472022.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472028.  v0:= 6I;
  #L47202a.  v0:= new `java.lang.Object`[v0];
  #L47202e.  v1:= 0I;
  #L472030.  v0[v1]:= v2 @kind object;
  #L472034.  v2:= 1I;
  #L472036.  v0[v2]:= v3 @kind object;
  #L47203a.  v2:= 2I;
  #L47203c.  v0[v2]:= v4 @kind object;
  #L472040.  v2:= 3I;
  #L472042.  v0[v2]:= v5 @kind object;
  #L472046.  v2:= 4I;
  #L472048.  v0[v2]:= v6 @kind object;
  #L47204c.  v2:= 5I;
  #L47204e.  v0[v2]:= v7 @kind object;
  #L472052.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472058.  v2:= temp @kind object;
  #L47205a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47206c.  v0:= "item1 is null" @kind object;
  #L472070.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472076.  v0:= "item2 is null" @kind object;
  #L47207a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472080.  v0:= "item3 is null" @kind object;
  #L472084.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47208a.  v0:= "item4 is null" @kind object;
  #L47208e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472094.  v0:= "item5 is null" @kind object;
  #L472098.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47209e.  v0:= "item6 is null" @kind object;
  #L4720a2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4720a8.  v0:= "item7 is null" @kind object;
  #L4720ac.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4720b2.  v0:= 7I;
  #L4720b4.  v0:= new `java.lang.Object`[v0];
  #L4720b8.  v1:= 0I;
  #L4720ba.  v0[v1]:= v2 @kind object;
  #L4720be.  v2:= 1I;
  #L4720c0.  v0[v2]:= v3 @kind object;
  #L4720c4.  v2:= 2I;
  #L4720c6.  v0[v2]:= v4 @kind object;
  #L4720ca.  v2:= 3I;
  #L4720cc.  v0[v2]:= v5 @kind object;
  #L4720d0.  v2:= 4I;
  #L4720d2.  v0[v2]:= v6 @kind object;
  #L4720d6.  v2:= 5I;
  #L4720d8.  v0[v2]:= v7 @kind object;
  #L4720dc.  v2:= 6I;
  #L4720de.  v0[v2]:= v8 @kind object;
  #L4720e2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4720e8.  v2:= temp @kind object;
  #L4720ea.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4720fc.  v0:= "item1 is null" @kind object;
  #L472100.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472106.  v0:= "item2 is null" @kind object;
  #L47210a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472110.  v0:= "item3 is null" @kind object;
  #L472114.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47211a.  v0:= "item4 is null" @kind object;
  #L47211e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472124.  v0:= "item5 is null" @kind object;
  #L472128.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47212e.  v0:= "item6 is null" @kind object;
  #L472132.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472138.  v0:= "item7 is null" @kind object;
  #L47213c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472142.  v0:= "item8 is null" @kind object;
  #L472146.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47214c.  v0:= 8I;
  #L472150.  v0:= new `java.lang.Object`[v0];
  #L472154.  v1:= 0I;
  #L472156.  v0[v1]:= v2 @kind object;
  #L47215a.  v2:= 1I;
  #L47215c.  v0[v2]:= v3 @kind object;
  #L472160.  v2:= 2I;
  #L472162.  v0[v2]:= v4 @kind object;
  #L472166.  v2:= 3I;
  #L472168.  v0[v2]:= v5 @kind object;
  #L47216c.  v2:= 4I;
  #L47216e.  v0[v2]:= v6 @kind object;
  #L472172.  v2:= 5I;
  #L472174.  v0[v2]:= v7 @kind object;
  #L472178.  v2:= 6I;
  #L47217a.  v0[v2]:= v8 @kind object;
  #L47217e.  v2:= 7I;
  #L472180.  v0[v2]:= v9 @kind object;
  #L472184.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47218a.  v2:= temp @kind object;
  #L47218c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4721a0.  v0:= "item1 is null" @kind object;
  #L4721a4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721aa.  v0:= "item2 is null" @kind object;
  #L4721ae.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721b4.  v0:= "item3 is null" @kind object;
  #L4721b8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721be.  v0:= "item4 is null" @kind object;
  #L4721c2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721c8.  v0:= "item5 is null" @kind object;
  #L4721cc.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721d2.  v0:= "item6 is null" @kind object;
  #L4721d6.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721dc.  v0:= "item7 is null" @kind object;
  #L4721e0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721e6.  v0:= "item8 is null" @kind object;
  #L4721ea.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721f0.  v0:= "item9 is null" @kind object;
  #L4721f4.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4721fa.  v0:= 9I;
  #L4721fe.  v0:= new `java.lang.Object`[v0];
  #L472202.  v1:= 0I;
  #L472204.  v0[v1]:= v2 @kind object;
  #L472208.  v2:= 1I;
  #L47220a.  v0[v2]:= v3 @kind object;
  #L47220e.  v2:= 2I;
  #L472210.  v0[v2]:= v4 @kind object;
  #L472214.  v2:= 3I;
  #L472216.  v0[v2]:= v5 @kind object;
  #L47221a.  v2:= 4I;
  #L47221c.  v0[v2]:= v6 @kind object;
  #L472220.  v2:= 5I;
  #L472222.  v0[v2]:= v7 @kind object;
  #L472226.  v2:= 6I;
  #L472228.  v0[v2]:= v8 @kind object;
  #L47222c.  v2:= 7I;
  #L47222e.  v0[v2]:= v9 @kind object;
  #L472232.  v2:= 8I;
  #L472236.  v0[v2]:= v10 @kind object;
  #L47223a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472240.  v2:= temp @kind object;
  #L472242.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L472254.  v0:= "item1 is null" @kind object;
  #L472258.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47225e.  v0:= "item2 is null" @kind object;
  #L472262.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472268.  v0:= "item3 is null" @kind object;
  #L47226c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472272.  v0:= "item4 is null" @kind object;
  #L472276.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47227c.  v0:= "item5 is null" @kind object;
  #L472280.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472286.  v0:= "item6 is null" @kind object;
  #L47228a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472290.  v0:= "item7 is null" @kind object;
  #L472294.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47229a.  v0:= "item8 is null" @kind object;
  #L47229e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4722a4.  v0:= "item9 is null" @kind object;
  #L4722a8.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4722ae.  v0:= "item10 is null" @kind object;
  #L4722b2.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4722b8.  v0:= 10I;
  #L4722bc.  v0:= new `java.lang.Object`[v0];
  #L4722c0.  v1:= 0I;
  #L4722c2.  v0[v1]:= v2 @kind object;
  #L4722c6.  v2:= 1I;
  #L4722c8.  v0[v2]:= v3 @kind object;
  #L4722cc.  v2:= 2I;
  #L4722ce.  v0[v2]:= v4 @kind object;
  #L4722d2.  v2:= 3I;
  #L4722d4.  v0[v2]:= v5 @kind object;
  #L4722d8.  v2:= 4I;
  #L4722da.  v0[v2]:= v6 @kind object;
  #L4722de.  v2:= 5I;
  #L4722e0.  v0[v2]:= v7 @kind object;
  #L4722e4.  v2:= 6I;
  #L4722e6.  v0[v2]:= v8 @kind object;
  #L4722ea.  v2:= 7I;
  #L4722ec.  v0[v2]:= v9 @kind object;
  #L4722f0.  v2:= 8I;
  #L4722f4.  v0[v2]:= v10 @kind object;
  #L4722f8.  v2:= 9I;
  #L4722fc.  v0[v2]:= v11 @kind object;
  #L472300.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472306.  v2:= temp @kind object;
  #L472308.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4723d0.  v0:= "sources is null" @kind object;
  #L4723d4.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4723da.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L4723de.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4723e4.  v3:= temp @kind object;
  #L4723e6.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4723ec.  v6:= temp;
  #L4723ee.  v4:= 0I;
  #L4723f0.  v5:= 2147483647I;
  #L4723f6.  v1:= v0 @kind object;
  #L4723f8.  v2:= v7 @kind object;
  #L4723fa.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L472400.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472406.  v7:= temp @kind object;
  #L472408.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47241c.  v0:= "sources is null" @kind object;
  #L472420.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472426.  v0:= "maxConcurrency" @kind object;
  #L47242a.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L472430.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L472434.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47243a.  v3:= temp @kind object;
  #L47243c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L472442.  v6:= temp;
  #L472444.  v4:= 0I;
  #L472446.  v1:= v0 @kind object;
  #L472448.  v2:= v7 @kind object;
  #L47244a.  v5:= v8;
  #L47244c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L472452.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472458.  v7:= temp @kind object;
  #L47245a.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47246c.  v0:= "source1 is null" @kind object;
  #L472470.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472476.  v0:= "source2 is null" @kind object;
  #L47247a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472480.  v0:= 2I;
  #L472482.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L472486.  v2:= 0I;
  #L472488.  v1[v2]:= v3 @kind object;
  #L47248c.  v3:= 1I;
  #L47248e.  v1[v3]:= v4 @kind object;
  #L472492.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472498.  v3:= temp @kind object;
  #L47249a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4724a0.  v4:= temp @kind object;
  #L4724a2.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4724a8.  v3:= temp @kind object;
  #L4724aa.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4724bc.  v0:= "source1 is null" @kind object;
  #L4724c0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4724c6.  v0:= "source2 is null" @kind object;
  #L4724ca.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4724d0.  v0:= "source3 is null" @kind object;
  #L4724d4.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4724da.  v0:= 3I;
  #L4724dc.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4724e0.  v2:= 0I;
  #L4724e2.  v1[v2]:= v3 @kind object;
  #L4724e6.  v3:= 1I;
  #L4724e8.  v1[v3]:= v4 @kind object;
  #L4724ec.  v3:= 2I;
  #L4724ee.  v1[v3]:= v5 @kind object;
  #L4724f2.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4724f8.  v3:= temp @kind object;
  #L4724fa.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L472500.  v4:= temp @kind object;
  #L472502.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472508.  v3:= temp @kind object;
  #L47250a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47251c.  v0:= "source1 is null" @kind object;
  #L472520.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472526.  v0:= "source2 is null" @kind object;
  #L47252a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472530.  v0:= "source3 is null" @kind object;
  #L472534.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47253a.  v0:= "source4 is null" @kind object;
  #L47253e.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472544.  v0:= 4I;
  #L472546.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L47254a.  v2:= 0I;
  #L47254c.  v1[v2]:= v3 @kind object;
  #L472550.  v3:= 1I;
  #L472552.  v1[v3]:= v4 @kind object;
  #L472556.  v3:= 2I;
  #L472558.  v1[v3]:= v5 @kind object;
  #L47255c.  v3:= 3I;
  #L47255e.  v1[v3]:= v6 @kind object;
  #L472562.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472568.  v3:= temp @kind object;
  #L47256a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L472570.  v4:= temp @kind object;
  #L472572.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472578.  v3:= temp @kind object;
  #L47257a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47258c.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472592.  v1:= temp @kind object;
  #L472594.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47259a.  v0:= temp @kind object;
  #L47259c.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4725a2.  v1:= temp @kind object;
  #L4725a4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4725b8.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4725be.  v1:= temp @kind object;
  #L4725c0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4725c6.  v0:= temp @kind object;
  #L4725c8.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4725ce.  v1:= temp @kind object;
  #L4725d0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4725e4.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4725ea.  v2:= temp @kind object;
  #L4725ec.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4725f2.  v0:= temp @kind object;
  #L4725f4.  v1:= 0I;
  #L4725f6.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4725fc.  v2:= temp @kind object;
  #L4725fe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeArray`(`int` v2 , `int` v3 , `io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeArray:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L472610.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472616.  v4:= temp @kind object;
  #L472618.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47261e.  v0:= temp @kind object;
  #L472620.  v1:= 0I;
  #L472622.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472628.  v2:= temp @kind object;
  #L47262a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47263c.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472642.  v0:= temp @kind object;
  #L472644.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47264a.  v1:= temp @kind object;
  #L47264c.  v2:= length @variable v2;
  #L47264e.  call temp:= `flatMap`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472654.  v2:= temp @kind object;
  #L472656.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeArrayDelayError`(`int` v2 , `int` v3 , `io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeArrayDelayError:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L472668.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47266e.  v4:= temp @kind object;
  #L472670.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L472676.  v0:= temp @kind object;
  #L472678.  v1:= 1I;
  #L47267a.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472680.  v2:= temp @kind object;
  #L472682.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeArrayDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L472694.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47269a.  v0:= temp @kind object;
  #L47269c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4726a2.  v1:= temp @kind object;
  #L4726a4.  v3:= length @variable v3;
  #L4726a6.  v2:= 1I;
  #L4726a8.  call temp:= `flatMap`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4726ae.  v3:= temp @kind object;
  #L4726b0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4726c4.  v0:= "sources is null" @kind object;
  #L4726c8.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4726ce.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L4726d2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4726d8.  v3:= temp @kind object;
  #L4726da.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4726e0.  v6:= temp;
  #L4726e2.  v4:= 1I;
  #L4726e4.  v5:= 2147483647I;
  #L4726ea.  v1:= v0 @kind object;
  #L4726ec.  v2:= v7 @kind object;
  #L4726ee.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L4726f4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4726fa.  v7:= temp @kind object;
  #L4726fc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L472710.  v0:= "sources is null" @kind object;
  #L472714.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47271a.  v0:= "maxConcurrency" @kind object;
  #L47271e.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L472724.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L472728.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47272e.  v3:= temp @kind object;
  #L472730.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L472736.  v6:= temp;
  #L472738.  v4:= 1I;
  #L47273a.  v1:= v0 @kind object;
  #L47273c.  v2:= v7 @kind object;
  #L47273e.  v5:= v8;
  #L472740.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L472746.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47274c.  v7:= temp @kind object;
  #L47274e.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L472760.  v0:= "source1 is null" @kind object;
  #L472764.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47276a.  v0:= "source2 is null" @kind object;
  #L47276e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472774.  v0:= 2I;
  #L472776.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L47277a.  v2:= 0I;
  #L47277c.  v1[v2]:= v3 @kind object;
  #L472780.  v3:= 1I;
  #L472782.  v1[v3]:= v4 @kind object;
  #L472786.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47278c.  v4:= temp @kind object;
  #L47278e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L472794.  v1:= temp @kind object;
  #L472796.  call temp:= `flatMap`(v4, v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47279c.  v3:= temp @kind object;
  #L47279e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4727b0.  v0:= "source1 is null" @kind object;
  #L4727b4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4727ba.  v0:= "source2 is null" @kind object;
  #L4727be.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4727c4.  v0:= "source3 is null" @kind object;
  #L4727c8.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4727ce.  v0:= 3I;
  #L4727d0.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4727d4.  v2:= 0I;
  #L4727d6.  v1[v2]:= v3 @kind object;
  #L4727da.  v3:= 1I;
  #L4727dc.  v1[v3]:= v4 @kind object;
  #L4727e0.  v4:= 2I;
  #L4727e2.  v1[v4]:= v5 @kind object;
  #L4727e6.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4727ec.  v4:= temp @kind object;
  #L4727ee.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4727f4.  v5:= temp @kind object;
  #L4727f6.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4727fc.  v3:= temp @kind object;
  #L4727fe.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L472810.  v0:= "source1 is null" @kind object;
  #L472814.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47281a.  v0:= "source2 is null" @kind object;
  #L47281e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472824.  v0:= "source3 is null" @kind object;
  #L472828.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47282e.  v0:= "source4 is null" @kind object;
  #L472832.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472838.  v0:= 4I;
  #L47283a.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L47283e.  v2:= 0I;
  #L472840.  v1[v2]:= v3 @kind object;
  #L472844.  v3:= 1I;
  #L472846.  v1[v3]:= v4 @kind object;
  #L47284a.  v4:= 2I;
  #L47284c.  v1[v4]:= v5 @kind object;
  #L472850.  v4:= 3I;
  #L472852.  v1[v4]:= v6 @kind object;
  #L472856.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47285c.  v4:= temp @kind object;
  #L47285e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L472864.  v5:= temp @kind object;
  #L472866.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47286c.  v3:= temp @kind object;
  #L47286e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L472880.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472886.  v2:= temp @kind object;
  #L472888.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47288e.  v0:= temp @kind object;
  #L472890.  v1:= 1I;
  #L472892.  call temp:= `flatMap`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472898.  v2:= temp @kind object;
  #L47289a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4728ac.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4728b2.  v2:= temp @kind object;
  #L4728b4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4728ba.  v0:= temp @kind object;
  #L4728bc.  v1:= 1I;
  #L4728be.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4728c4.  v2:= temp @kind object;
  #L4728c6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4728d8.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4728de.  v2:= temp @kind object;
  #L4728e0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4728e6.  v0:= temp @kind object;
  #L4728e8.  v1:= 1I;
  #L4728ea.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4728f0.  v2:= temp @kind object;
  #L4728f2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `never`() @signature `Lio/reactivex/rxjava3/core/Observable;.never:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4729b8.  v0:= `@@io.reactivex.rxjava3.internal.operators.observable.ObservableNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L4729bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4729c2.  v0:= temp @kind object;
  #L4729c4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `range`(`int` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.range:(II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L472bec.  if v6 < 0 then goto L472c52;
  #L472bf0.  if v6 != 0 then goto L472bfe;
  #L472bf4.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472bfa.  v5:= temp @kind object;
  #L472bfc.  return v5 @kind object;
  #L472bfe.  v0:= 1I;
  #L472c00.  if v6 != v0 then goto L472c16;
  #L472c04.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L472c0a.  v5:= temp @kind object;
  #L472c0c.  call temp:= `just`(v5) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472c12.  v5:= temp @kind object;
  #L472c14.  return v5 @kind object;
  #L472c16.  v0:= (`long`) v5 @kind i2l;
  #L472c18.  v2:= v6 + -1;
  #L472c1c.  v2:= (`long`) v2 @kind i2l;
  #L472c1e.  v0:= v0 + v2 @kind long;
  #L472c20.  v2:= 2147483647L;
  #L472c26.  v4:= lcmp(v0, v2);
  #L472c2a.  if v4 > 0 then goto L472c42;
  #L472c2e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRange`;
  #L472c32.  call `<init>`(v0, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRange;.<init>:(II)V` @kind direct;
  #L472c38.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472c3e.  v5:= temp @kind object;
  #L472c40.  return v5 @kind object;
  #L472c42.  v5:= new `java.lang.IllegalArgumentException`;
  #L472c46.  v6:= "Integer overflow" @kind object;
  #L472c4a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L472c50.  throw v5;
  #L472c52.  v5:= new `java.lang.IllegalArgumentException`;
  #L472c56.  v0:= new `java.lang.StringBuilder`;
  #L472c5a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L472c60.  v1:= "count >= 0 required but it was " @kind object;
  #L472c64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L472c6a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L472c70.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L472c76.  v6:= temp @kind object;
  #L472c78.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L472c7e.  throw v5;
}
procedure `io.reactivex.rxjava3.core.Observable` `rangeLong`(`long` v5 , `long` v7 ) @signature `Lio/reactivex/rxjava3/core/Observable;.rangeLong:(JJ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L472c90.  v0:= 0L;
  #L472c94.  v2:= lcmp(v7, v0);
  #L472c98.  if v2 < 0 then goto L472d04;
  #L472c9c.  if v2 != 0 then goto L472caa;
  #L472ca0.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472ca6.  v5:= temp @kind object;
  #L472ca8.  return v5 @kind object;
  #L472caa.  v2:= 1L;
  #L472cae.  v4:= lcmp(v7, v2);
  #L472cb2.  if v4 != 0 then goto L472cc8;
  #L472cb6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L472cbc.  v5:= temp @kind object;
  #L472cbe.  call temp:= `just`(v5) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472cc4.  v5:= temp @kind object;
  #L472cc6.  return v5 @kind object;
  #L472cc8.  v2:= v7 - v2 @kind long;
  #L472ccc.  v2:= v2 + v5 @kind long;
  #L472cce.  v4:= lcmp(v5, v0);
  #L472cd2.  if v4 <= 0 then goto L472cf0;
  #L472cd6.  v4:= lcmp(v2, v0);
  #L472cda.  if v4 < 0 then goto L472ce0;
  #L472cde.  goto L472cf0;
  #L472ce0.  v5:= new `java.lang.IllegalArgumentException`;
  #L472ce4.  v6:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L472ce8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L472cee.  throw v5;
  #L472cf0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRangeLong`;
  #L472cf4.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRangeLong;.<init>:(JJ)V` @kind direct;
  #L472cfa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472d00.  v5:= temp @kind object;
  #L472d02.  return v5 @kind object;
  #L472d04.  v5:= new `java.lang.IllegalArgumentException`;
  #L472d08.  v6:= new `java.lang.StringBuilder`;
  #L472d0c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L472d12.  v0:= "count >= 0 required but it was " @kind object;
  #L472d16.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L472d1c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L472d22.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L472d28.  v6:= temp @kind object;
  #L472d2a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L472d30.  throw v5;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L475548.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L47554e.  v0:= temp @kind object;
  #L475550.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L475556.  v1:= temp;
  #L475558.  call temp:= `sequenceEqual`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47555e.  v2:= temp @kind object;
  #L475560.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L475574.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L47557a.  v0:= temp @kind object;
  #L47557c.  call temp:= `sequenceEqual`(v1, v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L475582.  v1:= temp @kind object;
  #L475584.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L475598.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47559e.  v0:= temp;
  #L4755a0.  call temp:= `sequenceEqual`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4755a6.  v1:= temp @kind object;
  #L4755a8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4755bc.  v0:= "source1 is null" @kind object;
  #L4755c0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4755c6.  v0:= "source2 is null" @kind object;
  #L4755ca.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4755d0.  v0:= "isEqual is null" @kind object;
  #L4755d4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4755da.  v0:= "bufferSize" @kind object;
  #L4755de.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4755e4.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle`;
  #L4755e8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqualSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)V` @kind direct;
  #L4755ee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4755f4.  v1:= temp @kind object;
  #L4755f6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNext`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNext:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L473adc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473ae2.  v0:= temp;
  #L473ae4.  call temp:= `switchOnNext`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNext:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473aea.  v1:= temp @kind object;
  #L473aec.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNext`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNext:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L473b00.  v0:= "sources is null" @kind object;
  #L473b04.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473b0a.  v0:= "bufferSize" @kind object;
  #L473b0e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L473b14.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap`;
  #L473b18.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L473b1e.  v1:= temp @kind object;
  #L473b20.  v2:= 0I;
  #L473b22.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L473b28.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473b2e.  v3:= temp @kind object;
  #L473b30.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNextDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNextDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L473b44.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473b4a.  v0:= temp;
  #L473b4c.  call temp:= `switchOnNextDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNextDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473b52.  v1:= temp @kind object;
  #L473b54.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNextDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNextDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L473b68.  v0:= "sources is null" @kind object;
  #L473b6c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473b72.  v0:= "bufferSize" @kind object;
  #L473b76.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L473b7c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap`;
  #L473b80.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L473b86.  v1:= temp @kind object;
  #L473b88.  v2:= 1I;
  #L473b8a.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L473b90.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473b96.  v3:= temp @kind object;
  #L473b98.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L474364.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47436a.  v0:= temp @kind object;
  #L47436c.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474372.  v1:= temp @kind object;
  #L474374.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timer`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474388.  v0:= "unit is null" @kind object;
  #L47438c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474392.  v0:= "scheduler is null" @kind object;
  #L474396.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47439c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimer`;
  #L4743a0.  v1:= 0L;
  #L4743a4.  call temp:= `max`(v3, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4743aa.  v3:= temp @kind wide;
  #L4743ac.  call `<init>`(v0, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4743b2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4743b8.  v3:= temp @kind object;
  #L4743ba.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `unsafeCreate`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.unsafeCreate:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L474470.  v0:= "onSubscribe is null" @kind object;
  #L474474.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47447a.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Observable` @kind boolean;
  #L47447e.  if v0 != 0 then goto L474496;
  #L474482.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromUnsafeSource`;
  #L474486.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L47448c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474492.  v1:= temp @kind object;
  #L474494.  return v1 @kind object;
  #L474496.  v1:= new `java.lang.IllegalArgumentException`;
  #L47449a.  v0:= "unsafeCreate(Observable) should be upgraded" @kind object;
  #L47449e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4744a4.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Observable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4744e8.  v0:= 1I;
  #L4744ea.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4744f0.  v1:= temp @kind object;
  #L4744f2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L474504.  v0:= "resourceSupplier is null" @kind object;
  #L474508.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47450e.  v0:= "sourceSupplier is null" @kind object;
  #L474512.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474518.  v0:= "resourceCleanup is null" @kind object;
  #L47451c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474522.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing`;
  #L474526.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @kind direct;
  #L47452c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474532.  v1:= temp @kind object;
  #L474534.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `wrap`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L474ad0.  v0:= "source is null" @kind object;
  #L474ad4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474ada.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Observable` @kind boolean;
  #L474ade.  if v0 == 0 then goto L474af0;
  #L474ae2.  v1:= (`io.reactivex.rxjava3.core.Observable`) v1 @kind object;
  #L474ae6.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474aec.  v1:= temp @kind object;
  #L474aee.  return v1 @kind object;
  #L474af0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromUnsafeSource`;
  #L474af4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L474afa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474b00.  v1:= temp @kind object;
  #L474b02.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v10 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v11 @kind object, `io.reactivex.rxjava3.functions.Function9` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474b14.  v0:= "source1 is null" @kind object;
  #L474b18.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b1e.  v0:= "source2 is null" @kind object;
  #L474b22.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b28.  v0:= "source3 is null" @kind object;
  #L474b2c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b32.  v0:= "source4 is null" @kind object;
  #L474b36.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b3c.  v0:= "source5 is null" @kind object;
  #L474b40.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b46.  v0:= "source6 is null" @kind object;
  #L474b4a.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b50.  v0:= "source7 is null" @kind object;
  #L474b54.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b5a.  v0:= "source8 is null" @kind object;
  #L474b5e.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b64.  v0:= "source9 is null" @kind object;
  #L474b68.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b6e.  v0:= "zipper is null" @kind object;
  #L474b72.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474b78.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474b7e.  v12:= temp @kind object;
  #L474b80.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474b86.  v0:= temp;
  #L474b88.  v1:= 9I;
  #L474b8c.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474b90.  v2:= 0I;
  #L474b92.  v1[v2]:= v3 @kind object;
  #L474b96.  v3:= 1I;
  #L474b98.  v1[v3]:= v4 @kind object;
  #L474b9c.  v3:= 2I;
  #L474b9e.  v1[v3]:= v5 @kind object;
  #L474ba2.  v3:= 3I;
  #L474ba4.  v1[v3]:= v6 @kind object;
  #L474ba8.  v3:= 4I;
  #L474baa.  v1[v3]:= v7 @kind object;
  #L474bae.  v3:= 5I;
  #L474bb0.  v1[v3]:= v8 @kind object;
  #L474bb4.  v3:= 6I;
  #L474bb6.  v1[v3]:= v9 @kind object;
  #L474bba.  v3:= 7I;
  #L474bbc.  v1[v3]:= v10 @kind object;
  #L474bc0.  v3:= 8I;
  #L474bc4.  v1[v3]:= v11 @kind object;
  #L474bc8.  call temp:= `zipArray`(v12, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474bce.  v3:= temp @kind object;
  #L474bd0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v10 @kind object, `io.reactivex.rxjava3.functions.Function8` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474be4.  v0:= "source1 is null" @kind object;
  #L474be8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474bee.  v0:= "source2 is null" @kind object;
  #L474bf2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474bf8.  v0:= "source3 is null" @kind object;
  #L474bfc.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474c02.  v0:= "source4 is null" @kind object;
  #L474c06.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474c0c.  v0:= "source5 is null" @kind object;
  #L474c10.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474c16.  v0:= "source6 is null" @kind object;
  #L474c1a.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474c20.  v0:= "source7 is null" @kind object;
  #L474c24.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474c2a.  v0:= "source8 is null" @kind object;
  #L474c2e.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474c34.  v0:= "zipper is null" @kind object;
  #L474c38.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474c3e.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474c44.  v11:= temp @kind object;
  #L474c46.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474c4c.  v0:= temp;
  #L474c4e.  v1:= 8I;
  #L474c52.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474c56.  v2:= 0I;
  #L474c58.  v1[v2]:= v3 @kind object;
  #L474c5c.  v3:= 1I;
  #L474c5e.  v1[v3]:= v4 @kind object;
  #L474c62.  v3:= 2I;
  #L474c64.  v1[v3]:= v5 @kind object;
  #L474c68.  v3:= 3I;
  #L474c6a.  v1[v3]:= v6 @kind object;
  #L474c6e.  v3:= 4I;
  #L474c70.  v1[v3]:= v7 @kind object;
  #L474c74.  v3:= 5I;
  #L474c76.  v1[v3]:= v8 @kind object;
  #L474c7a.  v3:= 6I;
  #L474c7c.  v1[v3]:= v9 @kind object;
  #L474c80.  v3:= 7I;
  #L474c82.  v1[v3]:= v10 @kind object;
  #L474c86.  call temp:= `zipArray`(v11, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474c8c.  v3:= temp @kind object;
  #L474c8e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.functions.Function7` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474ca0.  v0:= "source1 is null" @kind object;
  #L474ca4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474caa.  v0:= "source2 is null" @kind object;
  #L474cae.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474cb4.  v0:= "source3 is null" @kind object;
  #L474cb8.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474cbe.  v0:= "source4 is null" @kind object;
  #L474cc2.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474cc8.  v0:= "source5 is null" @kind object;
  #L474ccc.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474cd2.  v0:= "source6 is null" @kind object;
  #L474cd6.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474cdc.  v0:= "source7 is null" @kind object;
  #L474ce0.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474ce6.  v0:= "zipper is null" @kind object;
  #L474cea.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474cf0.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474cf6.  v10:= temp @kind object;
  #L474cf8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474cfe.  v0:= temp;
  #L474d00.  v1:= 7I;
  #L474d02.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474d06.  v2:= 0I;
  #L474d08.  v1[v2]:= v3 @kind object;
  #L474d0c.  v3:= 1I;
  #L474d0e.  v1[v3]:= v4 @kind object;
  #L474d12.  v3:= 2I;
  #L474d14.  v1[v3]:= v5 @kind object;
  #L474d18.  v3:= 3I;
  #L474d1a.  v1[v3]:= v6 @kind object;
  #L474d1e.  v3:= 4I;
  #L474d20.  v1[v3]:= v7 @kind object;
  #L474d24.  v3:= 5I;
  #L474d26.  v1[v3]:= v8 @kind object;
  #L474d2a.  v3:= 6I;
  #L474d2c.  v1[v3]:= v9 @kind object;
  #L474d30.  call temp:= `zipArray`(v10, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474d36.  v3:= temp @kind object;
  #L474d38.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function6` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474d4c.  v0:= "source1 is null" @kind object;
  #L474d50.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474d56.  v0:= "source2 is null" @kind object;
  #L474d5a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474d60.  v0:= "source3 is null" @kind object;
  #L474d64.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474d6a.  v0:= "source4 is null" @kind object;
  #L474d6e.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474d74.  v0:= "source5 is null" @kind object;
  #L474d78.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474d7e.  v0:= "source6 is null" @kind object;
  #L474d82.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474d88.  v0:= "zipper is null" @kind object;
  #L474d8c.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474d92.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474d98.  v9:= temp @kind object;
  #L474d9a.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474da0.  v0:= temp;
  #L474da2.  v1:= 6I;
  #L474da4.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474da8.  v2:= 0I;
  #L474daa.  v1[v2]:= v3 @kind object;
  #L474dae.  v3:= 1I;
  #L474db0.  v1[v3]:= v4 @kind object;
  #L474db4.  v3:= 2I;
  #L474db6.  v1[v3]:= v5 @kind object;
  #L474dba.  v3:= 3I;
  #L474dbc.  v1[v3]:= v6 @kind object;
  #L474dc0.  v3:= 4I;
  #L474dc2.  v1[v3]:= v7 @kind object;
  #L474dc6.  v3:= 5I;
  #L474dc8.  v1[v3]:= v8 @kind object;
  #L474dcc.  call temp:= `zipArray`(v9, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474dd2.  v3:= temp @kind object;
  #L474dd4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.functions.Function5` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474de8.  v0:= "source1 is null" @kind object;
  #L474dec.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474df2.  v0:= "source2 is null" @kind object;
  #L474df6.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474dfc.  v0:= "source3 is null" @kind object;
  #L474e00.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474e06.  v0:= "source4 is null" @kind object;
  #L474e0a.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474e10.  v0:= "source5 is null" @kind object;
  #L474e14.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474e1a.  v0:= "zipper is null" @kind object;
  #L474e1e.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474e24.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474e2a.  v8:= temp @kind object;
  #L474e2c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474e32.  v0:= temp;
  #L474e34.  v1:= 5I;
  #L474e36.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474e3a.  v2:= 0I;
  #L474e3c.  v1[v2]:= v3 @kind object;
  #L474e40.  v3:= 1I;
  #L474e42.  v1[v3]:= v4 @kind object;
  #L474e46.  v3:= 2I;
  #L474e48.  v1[v3]:= v5 @kind object;
  #L474e4c.  v3:= 3I;
  #L474e4e.  v1[v3]:= v6 @kind object;
  #L474e52.  v3:= 4I;
  #L474e54.  v1[v3]:= v7 @kind object;
  #L474e58.  call temp:= `zipArray`(v8, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474e5e.  v3:= temp @kind object;
  #L474e60.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function4` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474e74.  v0:= "source1 is null" @kind object;
  #L474e78.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474e7e.  v0:= "source2 is null" @kind object;
  #L474e82.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474e88.  v0:= "source3 is null" @kind object;
  #L474e8c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474e92.  v0:= "source4 is null" @kind object;
  #L474e96.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474e9c.  v0:= "zipper is null" @kind object;
  #L474ea0.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474ea6.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474eac.  v7:= temp @kind object;
  #L474eae.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474eb4.  v0:= temp;
  #L474eb6.  v1:= 4I;
  #L474eb8.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474ebc.  v2:= 0I;
  #L474ebe.  v1[v2]:= v3 @kind object;
  #L474ec2.  v3:= 1I;
  #L474ec4.  v1[v3]:= v4 @kind object;
  #L474ec8.  v3:= 2I;
  #L474eca.  v1[v3]:= v5 @kind object;
  #L474ece.  v3:= 3I;
  #L474ed0.  v1[v3]:= v6 @kind object;
  #L474ed4.  call temp:= `zipArray`(v7, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474eda.  v3:= temp @kind object;
  #L474edc.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function3` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474ef0.  v0:= "source1 is null" @kind object;
  #L474ef4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474efa.  v0:= "source2 is null" @kind object;
  #L474efe.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474f04.  v0:= "source3 is null" @kind object;
  #L474f08.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474f0e.  v0:= "zipper is null" @kind object;
  #L474f12.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474f18.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474f1e.  v6:= temp @kind object;
  #L474f20.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474f26.  v0:= temp;
  #L474f28.  v1:= 3I;
  #L474f2a.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474f2e.  v2:= 0I;
  #L474f30.  v1[v2]:= v3 @kind object;
  #L474f34.  v3:= 1I;
  #L474f36.  v1[v3]:= v4 @kind object;
  #L474f3a.  v3:= 2I;
  #L474f3c.  v1[v3]:= v5 @kind object;
  #L474f40.  call temp:= `zipArray`(v6, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474f46.  v3:= temp @kind object;
  #L474f48.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474f5c.  v0:= "source1 is null" @kind object;
  #L474f60.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474f66.  v0:= "source2 is null" @kind object;
  #L474f6a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474f70.  v0:= "zipper is null" @kind object;
  #L474f74.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474f7a.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474f80.  v5:= temp @kind object;
  #L474f82.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474f88.  v0:= temp;
  #L474f8a.  v1:= 2I;
  #L474f8c.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474f90.  v2:= 0I;
  #L474f92.  v1[v2]:= v3 @kind object;
  #L474f96.  v3:= 1I;
  #L474f98.  v1[v3]:= v4 @kind object;
  #L474f9c.  call temp:= `zipArray`(v5, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474fa2.  v3:= temp @kind object;
  #L474fa4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L474fb8.  v0:= "source1 is null" @kind object;
  #L474fbc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474fc2.  v0:= "source2 is null" @kind object;
  #L474fc6.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474fcc.  v0:= "zipper is null" @kind object;
  #L474fd0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474fd6.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474fdc.  v5:= temp @kind object;
  #L474fde.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474fe4.  v0:= temp;
  #L474fe6.  v1:= 2I;
  #L474fe8.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L474fec.  v2:= 0I;
  #L474fee.  v1[v2]:= v3 @kind object;
  #L474ff2.  v3:= 1I;
  #L474ff4.  v1[v3]:= v4 @kind object;
  #L474ff8.  call temp:= `zipArray`(v5, v6, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474ffe.  v3:= temp @kind object;
  #L475000.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object, `boolean` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L475014.  v0:= "source1 is null" @kind object;
  #L475018.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47501e.  v0:= "source2 is null" @kind object;
  #L475022.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475028.  v0:= "zipper is null" @kind object;
  #L47502c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475032.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L475038.  v4:= temp @kind object;
  #L47503a.  v0:= 2I;
  #L47503c.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L475040.  v1:= 0I;
  #L475042.  v0[v1]:= v2 @kind object;
  #L475046.  v2:= 1I;
  #L475048.  v0[v2]:= v3 @kind object;
  #L47504c.  call temp:= `zipArray`(v4, v5, v6, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L475052.  v2:= temp @kind object;
  #L475054.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L475068.  v0:= "zipper is null" @kind object;
  #L47506c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475072.  v0:= "sources is null" @kind object;
  #L475076.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47507c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableZip`;
  #L475080.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L475086.  v5:= temp;
  #L475088.  v2:= 0I;
  #L47508a.  v6:= 0I;
  #L47508c.  v1:= v0 @kind object;
  #L47508e.  v3:= v7 @kind object;
  #L475090.  v4:= v8 @kind object;
  #L475092.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L475098.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47509e.  v7:= temp @kind object;
  #L4750a0.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4750b4.  v0:= "zipper is null" @kind object;
  #L4750b8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4750be.  v0:= "sources is null" @kind object;
  #L4750c2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4750c8.  v0:= "bufferSize" @kind object;
  #L4750cc.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4750d2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableZip`;
  #L4750d6.  v2:= 0I;
  #L4750d8.  v1:= v0 @kind object;
  #L4750da.  v3:= v7 @kind object;
  #L4750dc.  v4:= v8 @kind object;
  #L4750de.  v5:= v10;
  #L4750e0.  v6:= v9;
  #L4750e2.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4750e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4750ee.  v7:= temp @kind object;
  #L4750f0.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipArray`(`io.reactivex.rxjava3.functions.Function` v7 @kind object, `boolean` v8 , `int` v9 , `io.reactivex.rxjava3.core.ObservableSource`[] v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L475104.  v0:= "sources is null" @kind object;
  #L475108.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47510e.  v0:= length @variable v10;
  #L475110.  if v0 != 0 then goto L47511e;
  #L475114.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47511a.  v7:= temp @kind object;
  #L47511c.  return v7 @kind object;
  #L47511e.  v0:= "zipper is null" @kind object;
  #L475122.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475128.  v0:= "bufferSize" @kind object;
  #L47512c.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L475132.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableZip`;
  #L475136.  v3:= 0I;
  #L475138.  v1:= v0 @kind object;
  #L47513a.  v2:= v10 @kind object;
  #L47513c.  v4:= v7 @kind object;
  #L47513e.  v5:= v9;
  #L475140.  v6:= v8;
  #L475142.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L475148.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47514e.  v7:= temp @kind object;
  #L475150.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `all`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.all:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475210.  v0:= "predicate is null" @kind object;
  #L475214.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47521a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle`;
  #L47521e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L475224.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47522a.  v2:= temp @kind object;
  #L47522c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `ambWith`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.ambWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46f618.  v0:= "other is null" @kind object;
  #L46f61c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f622.  v0:= 2I;
  #L46f624.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L46f628.  v1:= 0I;
  #L46f62a.  v0[v1]:= v2 @kind object;
  #L46f62e.  v1:= 1I;
  #L46f630.  v0[v1]:= v3 @kind object;
  #L46f634.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.ambArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f63a.  v3:= temp @kind object;
  #L46f63c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `any`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.any:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475240.  v0:= "predicate is null" @kind object;
  #L475244.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47524a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle`;
  #L47524e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L475254.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47525a.  v2:= temp @kind object;
  #L47525c.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingFirst:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475d34.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingFirstObserver`;
  #L475d38.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L475d3e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L475d44.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L475d4a.  v0:= temp @kind object;
  #L475d4c.  if v0 == 0 then goto L475d52;
  #L475d50.  return v0 @kind object;
  #L475d52.  v0:= new `java.util.NoSuchElementException`;
  #L475d56.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L475d5c.  throw v0;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingFirst:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475d70.  v0:= "defaultItem is null" @kind object;
  #L475d74.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475d7a.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingFirstObserver`;
  #L475d7e.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L475d84.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L475d8a.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L475d90.  v0:= temp @kind object;
  #L475d92.  if v0 == 0 then goto L475d98;
  #L475d96.  v2:= v0 @kind object;
  #L475d98.  return v2 @kind object;
}
procedure `void` `blockingForEach`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L476064.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47606a.  v0:= temp;
  #L47606c.  call `blockingForEach`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @kind virtual;
  #L476072.  return @kind void;
}
procedure `void` `blockingForEach`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L476084.  v0:= "onNext is null" @kind object;
  #L476088.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47608e.  call temp:= `blockingIterable`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L476094.  v3:= temp @kind object;
  #L476096.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L47609c.  v3:= temp @kind object;
  #L47609e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4760a4.  v0:= temp;
  #L4760a6.  if v0 == 0 then goto L4760d6;
  #L4760aa.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4760b0.  v0:= temp @kind object;
  #L4760b2.  call `accept`(v2, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4760b8.  goto L47609e;
  #L4760ba.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4760bc.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4760c2.  v3:= (`io.reactivex.rxjava3.disposables.Disposable`) v3 @kind object;
  #L4760c6.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4760cc.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4760d2.  v2:= temp @kind object;
  #L4760d4.  throw v2;
  #L4760d6.  return @kind void;
  catch `java.lang.Throwable` @[L4760aa..L4760b8] goto L4760ba;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475c88.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L475c8e.  v0:= temp;
  #L475c90.  call temp:= `blockingIterable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L475c96.  v0:= temp @kind object;
  #L475c98.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475cac.  v0:= "capacityHint" @kind object;
  #L475cb0.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L475cb6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableIterable`;
  #L475cba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableIterable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L475cc0.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingLast:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475dac.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingLastObserver`;
  #L475db0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L475db6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L475dbc.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L475dc2.  v0:= temp @kind object;
  #L475dc4.  if v0 == 0 then goto L475dca;
  #L475dc8.  return v0 @kind object;
  #L475dca.  v0:= new `java.util.NoSuchElementException`;
  #L475dce.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L475dd4.  throw v0;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingLast:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475de8.  v0:= "defaultItem is null" @kind object;
  #L475dec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475df2.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingLastObserver`;
  #L475df6.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L475dfc.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L475e02.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L475e08.  v0:= temp @kind object;
  #L475e0a.  if v0 == 0 then goto L475e10;
  #L475e0e.  v2:= v0 @kind object;
  #L475e10.  return v2 @kind object;
}
procedure `java.lang.Iterable` `blockingLatest`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingLatest:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475cd4.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableLatest`;
  #L475cd8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableLatest;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L475cde.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingMostRecent`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingMostRecent:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475cf0.  v0:= "initialItem is null" @kind object;
  #L475cf4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475cfa.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent`;
  #L475cfe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L475d04.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingNext`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingNext:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475d18.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableNext`;
  #L475d1c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableNext;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L475d22.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSingle:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475e24.  call temp:= `singleElement`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L475e2a.  v0:= temp @kind object;
  #L475e2c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L475e32.  v0:= temp @kind object;
  #L475e34.  if v0 == 0 then goto L475e3a;
  #L475e38.  return v0 @kind object;
  #L475e3a.  v0:= new `java.util.NoSuchElementException`;
  #L475e3e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L475e44.  throw v0;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSingle:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L475e58.  call temp:= `single`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475e5e.  v1:= temp @kind object;
  #L475e60.  call temp:= `blockingGet`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L475e66.  v1:= temp @kind object;
  #L475e68.  return v1 @kind object;
}
procedure `java.util.stream.Stream` `blockingStream`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingStream:()Ljava/util/stream/Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475fd4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L475fda.  v0:= temp;
  #L475fdc.  call temp:= `blockingStream`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingStream:(I)Ljava/util/stream/Stream;` @kind virtual;
  #L475fe2.  v0:= temp @kind object;
  #L475fe4.  return v0 @kind object;
}
procedure `java.util.stream.Stream` `blockingStream`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingStream:(I)Ljava/util/stream/Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L475ff8.  call temp:= `blockingIterable`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L475ffe.  v3:= temp @kind object;
  #L476000.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L476006.  v3:= temp @kind object;
  #L476008.  v0:= 0I;
  #L47600a.  call temp:= `spliteratorUnknownSize`(v3, v0) @signature `Ljava/util/Spliterators;.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;` @kind static;
  #L476010.  v1:= temp @kind object;
  #L476012.  call temp:= `stream`(v1, v0) @signature `Ljava/util/stream/StreamSupport;.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;` @kind static;
  #L476018.  v0:= temp @kind object;
  #L47601a.  v3:= (`io.reactivex.rxjava3.disposables.Disposable`) v3 @kind object;
  #L47601e.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L476024.  v1:= new `io.reactivex.rxjava3.core.a`;
  #L476028.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/core/a;.<init>:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind direct;
  #L47602e.  call temp:= `onClose`(v0, v1) @signature `Ljava/util/stream/Stream;.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;` @kind interface;
  #L476034.  v3:= temp @kind object;
  #L476036.  v3:= (`java.util.stream.Stream`) v3 @kind object;
  #L47603a.  return v3 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4760f4.  call `subscribe`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind static;
  #L4760fa.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47610c.  v0:= "observer is null" @kind object;
  #L476110.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L476116.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L47611c.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L476130.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L476134.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L476138.  call `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L47613e.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L476150.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L476154.  call `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L47615a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L47616c.  call `subscribe`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L476172.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46f650.  call temp:= `buffer`(v0, v1, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(II)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f656.  v1:= temp @kind object;
  #L46f658.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f66c.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46f672.  v0:= temp @kind object;
  #L46f674.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f67a.  v2:= temp @kind object;
  #L46f67c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 , `int` v3 , `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f690.  v0:= "count" @kind object;
  #L46f694.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46f69a.  v0:= "skip" @kind object;
  #L46f69e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46f6a4.  v0:= "bufferSupplier is null" @kind object;
  #L46f6a8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f6ae.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer`;
  #L46f6b2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;IILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46f6b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f6be.  v2:= temp @kind object;
  #L46f6c0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `int` v1 , `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(ILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46f6d4.  call temp:= `buffer`(v0, v1, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f6da.  v1:= temp @kind object;
  #L46f6dc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46f908.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46f90e.  v6:= temp @kind object;
  #L46f910.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46f916.  v7:= temp @kind object;
  #L46f918.  v0:= v8 @kind object;
  #L46f91a.  v1:= v9 @kind wide;
  #L46f91c.  v3:= v11 @kind wide;
  #L46f91e.  v5:= v13 @kind object;
  #L46f920.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f926.  v9:= temp @kind object;
  #L46f928.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46f93c.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46f942.  v7:= temp @kind object;
  #L46f944.  v0:= v8 @kind object;
  #L46f946.  v1:= v9 @kind wide;
  #L46f948.  v3:= v11 @kind wide;
  #L46f94a.  v5:= v13 @kind object;
  #L46f94c.  v6:= v14 @kind object;
  #L46f94e.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f954.  v9:= temp @kind object;
  #L46f956.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v12 @kind this, `long` v13 , `long` v15 , `java.util.concurrent.TimeUnit` v17 @kind object, `io.reactivex.rxjava3.core.Scheduler` v18 @kind object, `io.reactivex.rxjava3.functions.Supplier` v19 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L46f968.  v0:= "unit is null" @kind object;
  #L46f96c.  v7:= v17 @kind object;
  #L46f970.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f976.  v0:= "scheduler is null" @kind object;
  #L46f97a.  v8:= v18 @kind object;
  #L46f97e.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f984.  v0:= "bufferSupplier is null" @kind object;
  #L46f988.  v9:= v19 @kind object;
  #L46f98c.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f992.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed`;
  #L46f996.  v10:= 2147483647I;
  #L46f99c.  v11:= 0I;
  #L46f99e.  v1:= v0 @kind object;
  #L46f9a0.  v2:= v12 @kind object;
  #L46f9a2.  v3:= v13 @kind wide;
  #L46f9a4.  v5:= v15 @kind wide;
  #L46f9a6.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @kind direct;
  #L46f9ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f9b2.  v0:= temp @kind object;
  #L46f9b4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46f7e0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46f7e6.  v4:= temp @kind object;
  #L46f7e8.  v5:= 2147483647I;
  #L46f7ee.  v0:= v6 @kind object;
  #L46f7f0.  v1:= v7 @kind wide;
  #L46f7f2.  v3:= v9 @kind object;
  #L46f7f4.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f7fa.  v7:= temp @kind object;
  #L46f7fc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46f810.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46f816.  v4:= temp @kind object;
  #L46f818.  v0:= v6 @kind object;
  #L46f81a.  v1:= v7 @kind wide;
  #L46f81c.  v3:= v9 @kind object;
  #L46f81e.  v5:= v10;
  #L46f820.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f826.  v7:= temp @kind object;
  #L46f828.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46f83c.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46f842.  v6:= temp @kind object;
  #L46f844.  v5:= 2147483647I;
  #L46f84a.  v7:= 0I;
  #L46f84c.  v0:= v8 @kind object;
  #L46f84e.  v1:= v9 @kind wide;
  #L46f850.  v3:= v11 @kind object;
  #L46f852.  v4:= v12 @kind object;
  #L46f854.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f85a.  v9:= temp @kind object;
  #L46f85c.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `int` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46f870.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46f876.  v6:= temp @kind object;
  #L46f878.  v7:= 0I;
  #L46f87a.  v0:= v8 @kind object;
  #L46f87c.  v1:= v9 @kind wide;
  #L46f87e.  v3:= v11 @kind object;
  #L46f880.  v4:= v12 @kind object;
  #L46f882.  v5:= v13;
  #L46f884.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f88a.  v9:= temp @kind object;
  #L46f88c.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v12 @kind this, `long` v13 , `java.util.concurrent.TimeUnit` v15 @kind object, `io.reactivex.rxjava3.core.Scheduler` v16 @kind object, `int` v17 , `io.reactivex.rxjava3.functions.Supplier` v18 @kind object, `boolean` v19 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L46f8a0.  v0:= "unit is null" @kind object;
  #L46f8a4.  v7:= v15 @kind object;
  #L46f8a6.  call temp:= `requireNonNull`(v15, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f8ac.  v0:= "scheduler is null" @kind object;
  #L46f8b0.  v8:= v16 @kind object;
  #L46f8b4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f8ba.  v0:= "bufferSupplier is null" @kind object;
  #L46f8be.  v9:= v18 @kind object;
  #L46f8c2.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f8c8.  v0:= "count" @kind object;
  #L46f8cc.  v10:= v17;
  #L46f8d0.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46f8d6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed`;
  #L46f8da.  v1:= v0 @kind object;
  #L46f8dc.  v2:= v12 @kind object;
  #L46f8de.  v3:= v13 @kind wide;
  #L46f8e0.  v5:= v13 @kind wide;
  #L46f8e2.  v11:= v19;
  #L46f8e6.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @kind direct;
  #L46f8ec.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f8f2.  v0:= temp @kind object;
  #L46f8f4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f6f0.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46f6f6.  v0:= temp @kind object;
  #L46f6f8.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f6fe.  v2:= temp @kind object;
  #L46f700.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f714.  v0:= "initialCapacity" @kind object;
  #L46f718.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46f71e.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createArrayList:(I)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46f724.  v3:= temp @kind object;
  #L46f726.  call temp:= `buffer`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f72c.  v2:= temp @kind object;
  #L46f72e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f740.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46f746.  v0:= temp @kind object;
  #L46f748.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f74e.  v2:= temp @kind object;
  #L46f750.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f764.  v0:= "openingIndicator is null" @kind object;
  #L46f768.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f76e.  v0:= "closingIndicator is null" @kind object;
  #L46f772.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f778.  v0:= "bufferSupplier is null" @kind object;
  #L46f77c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f782.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary`;
  #L46f786.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46f78c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f792.  v2:= temp @kind object;
  #L46f794.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f7a8.  v0:= "boundaryIndicator is null" @kind object;
  #L46f7ac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f7b2.  v0:= "bufferSupplier is null" @kind object;
  #L46f7b6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f7bc.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary`;
  #L46f7c0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46f7c6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46f7cc.  v2:= temp @kind object;
  #L46f7ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `cache`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.cache:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f9c8.  v0:= 16I;
  #L46f9cc.  call temp:= `cacheWithInitialCapacity`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.cacheWithInitialCapacity:(I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46f9d2.  v0:= temp @kind object;
  #L46f9d4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `cacheWithInitialCapacity`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.cacheWithInitialCapacity:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f9e8.  v0:= "initialCapacity" @kind object;
  #L46f9ec.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46f9f2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCache`;
  #L46f9f6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCache;.<init>:(Lio/reactivex/rxjava3/core/Observable;I)V` @kind direct;
  #L46f9fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46fa02.  v2:= temp @kind object;
  #L46fa04.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `cast`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46fa18.  v0:= "clazz is null" @kind object;
  #L46fa1c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46fa22.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46fa28.  v2:= temp @kind object;
  #L46fa2a.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46fa30.  v2:= temp @kind object;
  #L46fa32.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collect`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475270.  v0:= "initialItemSupplier is null" @kind object;
  #L475274.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47527a.  v0:= "collector is null" @kind object;
  #L47527e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475284.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle`;
  #L475288.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L47528e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L475294.  v2:= temp @kind object;
  #L475296.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collect`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.stream.Collector` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Ljava/util/stream/Collector;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4752a8.  v0:= "collector is null" @kind object;
  #L4752ac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4752b2.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableCollectWithCollectorSingle`;
  #L4752b6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableCollectWithCollectorSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Ljava/util/stream/Collector;)V` @kind direct;
  #L4752bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4752c2.  v2:= temp @kind object;
  #L4752c4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collectInto`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.collectInto:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4752d8.  v0:= "initialItem is null" @kind object;
  #L4752dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4752e2.  call temp:= `justSupplier`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4752e8.  v2:= temp @kind object;
  #L4752ea.  call temp:= `collect`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4752f0.  v2:= temp @kind object;
  #L4752f2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `compose`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.compose:(Lio/reactivex/rxjava3/core/ObservableTransformer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4700d8.  v0:= "composer is null" @kind object;
  #L4700dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4700e2.  v2:= (`io.reactivex.rxjava3.core.ObservableTransformer`) v2 @kind object;
  #L4700e6.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/ObservableTransformer;.apply:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/ObservableSource;` @kind interface;
  #L4700ec.  v2:= temp @kind object;
  #L4700ee.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4700f4.  v2:= temp @kind object;
  #L4700f6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470618.  v0:= 2I;
  #L47061a.  call temp:= `concatMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470620.  v2:= temp @kind object;
  #L470622.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMap`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L470634.  v0:= "mapper is null" @kind object;
  #L470638.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47063e.  v0:= "bufferSize" @kind object;
  #L470642.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470648.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L47064c.  if v0 == 0 then goto L470676;
  #L470650.  v4:= v2 @kind object;
  #L470652.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v4 @kind object;
  #L470656.  call temp:= `get`(v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L47065c.  v4:= temp @kind object;
  #L47065e.  if v4 != 0 then goto L47066c;
  #L470662.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470668.  v3:= temp @kind object;
  #L47066a.  return v3 @kind object;
  #L47066c.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470672.  v3:= temp @kind object;
  #L470674.  return v3 @kind object;
  #L470676.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L47067a.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L47067e.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L470684.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47068a.  v3:= temp @kind object;
  #L47068c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMap`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4706a0.  v0:= "mapper is null" @kind object;
  #L4706a4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4706aa.  v0:= "bufferSize" @kind object;
  #L4706ae.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4706b4.  v0:= "scheduler is null" @kind object;
  #L4706b8.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4706be.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler`;
  #L4706c2.  v5:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4706c6.  v1:= v0 @kind object;
  #L4706c8.  v2:= v7 @kind object;
  #L4706ca.  v3:= v8 @kind object;
  #L4706cc.  v4:= v9;
  #L4706ce.  v6:= v10 @kind object;
  #L4706d0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4706d6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4706dc.  v8:= temp @kind object;
  #L4706de.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f26c.  v0:= 2I;
  #L46f26e.  call temp:= `concatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L46f274.  v2:= temp @kind object;
  #L46f276.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46f288.  v0:= "mapper is null" @kind object;
  #L46f28c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f292.  v0:= "capacityHint" @kind object;
  #L46f296.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46f29c.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable`;
  #L46f2a0.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L46f2a4.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L46f2aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46f2b0.  v3:= temp @kind object;
  #L46f2b2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46f2c4.  v0:= 1I;
  #L46f2c6.  v1:= 2I;
  #L46f2c8.  call temp:= `concatMapCompletableDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L46f2ce.  v3:= temp @kind object;
  #L46f2d0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f2e4.  v0:= 2I;
  #L46f2e6.  call temp:= `concatMapCompletableDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L46f2ec.  v2:= temp @kind object;
  #L46f2ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f300.  v0:= "mapper is null" @kind object;
  #L46f304.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f30a.  v0:= "bufferSize" @kind object;
  #L46f30e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46f314.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable`;
  #L46f318.  if v3 == 0 then goto L46f322;
  #L46f31c.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L46f320.  goto L46f326;
  #L46f322.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L46f326.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L46f32c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46f332.  v2:= temp @kind object;
  #L46f334.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4706f0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4706f6.  v0:= temp;
  #L4706f8.  v1:= 1I;
  #L4706fa.  call temp:= `concatMapDelayError`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470700.  v3:= temp @kind object;
  #L470702.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470714.  v0:= "mapper is null" @kind object;
  #L470718.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47071e.  v0:= "bufferSize" @kind object;
  #L470722.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470728.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L47072c.  if v0 == 0 then goto L470756;
  #L470730.  v3:= v1 @kind object;
  #L470732.  v3:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v3 @kind object;
  #L470736.  call temp:= `get`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L47073c.  v3:= temp @kind object;
  #L47073e.  if v3 != 0 then goto L47074c;
  #L470742.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470748.  v2:= temp @kind object;
  #L47074a.  return v2 @kind object;
  #L47074c.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470752.  v2:= temp @kind object;
  #L470754.  return v2 @kind object;
  #L470756.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L47075a.  if v3 == 0 then goto L470764;
  #L47075e.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470762.  goto L470768;
  #L470764.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470768.  call `<init>`(v0, v1, v2, v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L47076e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470774.  v2:= temp @kind object;
  #L470776.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZILio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L470788.  v0:= "mapper is null" @kind object;
  #L47078c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470792.  v0:= "bufferSize" @kind object;
  #L470796.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L47079c.  v0:= "scheduler is null" @kind object;
  #L4707a0.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4707a6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler`;
  #L4707aa.  if v9 == 0 then goto L4707b4;
  #L4707ae.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4707b2.  goto L4707b8;
  #L4707b4.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4707b8.  v5:= v9 @kind object;
  #L4707ba.  v1:= v0 @kind object;
  #L4707bc.  v2:= v7 @kind object;
  #L4707be.  v3:= v8 @kind object;
  #L4707c0.  v4:= v10;
  #L4707c2.  v6:= v11 @kind object;
  #L4707c4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4707ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4707d0.  v8:= temp @kind object;
  #L4707d2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapEager`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4707e4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4707ea.  v0:= temp;
  #L4707ec.  v1:= 2147483647I;
  #L4707f2.  call temp:= `concatMapEager`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4707f8.  v3:= temp @kind object;
  #L4707fa.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapEager`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47080c.  v0:= "mapper is null" @kind object;
  #L470810.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470816.  v0:= "maxConcurrency" @kind object;
  #L47081a.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470820.  v0:= "bufferSize" @kind object;
  #L470824.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L47082a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager`;
  #L47082e.  v4:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470832.  v1:= v0 @kind object;
  #L470834.  v2:= v7 @kind object;
  #L470836.  v3:= v8 @kind object;
  #L470838.  v5:= v9;
  #L47083a.  v6:= v10;
  #L47083c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;II)V` @kind direct;
  #L470842.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470848.  v8:= temp @kind object;
  #L47084a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapEagerDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L47085c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L470862.  v0:= temp;
  #L470864.  v1:= 2147483647I;
  #L47086a.  call temp:= `concatMapEagerDelayError`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470870.  v3:= temp @kind object;
  #L470872.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapEagerDelayError`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L470884.  v0:= "mapper is null" @kind object;
  #L470888.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47088e.  v0:= "maxConcurrency" @kind object;
  #L470892.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470898.  v0:= "bufferSize" @kind object;
  #L47089c.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4708a2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager`;
  #L4708a6.  if v9 == 0 then goto L4708b0;
  #L4708aa.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4708ae.  goto L4708b4;
  #L4708b0.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4708b4.  v4:= v9 @kind object;
  #L4708b6.  v1:= v0 @kind object;
  #L4708b8.  v2:= v7 @kind object;
  #L4708ba.  v3:= v8 @kind object;
  #L4708bc.  v5:= v10;
  #L4708be.  v6:= v11;
  #L4708c0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;II)V` @kind direct;
  #L4708c6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4708cc.  v8:= temp @kind object;
  #L4708ce.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4708e0.  v0:= "mapper is null" @kind object;
  #L4708e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4708ea.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable`;
  #L4708ee.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4708f4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4708fa.  v2:= temp @kind object;
  #L4708fc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470910.  v0:= 2I;
  #L470912.  call temp:= `concatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470918.  v2:= temp @kind object;
  #L47091a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L47092c.  v0:= "mapper is null" @kind object;
  #L470930.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470936.  v0:= "bufferSize" @kind object;
  #L47093a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470940.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe`;
  #L470944.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470948.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L47094e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470954.  v3:= temp @kind object;
  #L470956.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L470968.  v0:= 1I;
  #L47096a.  v1:= 2I;
  #L47096c.  call temp:= `concatMapMaybeDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470972.  v3:= temp @kind object;
  #L470974.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470988.  v0:= 2I;
  #L47098a.  call temp:= `concatMapMaybeDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470990.  v2:= temp @kind object;
  #L470992.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4709a4.  v0:= "mapper is null" @kind object;
  #L4709a8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4709ae.  v0:= "bufferSize" @kind object;
  #L4709b2.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4709b8.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe`;
  #L4709bc.  if v3 == 0 then goto L4709c6;
  #L4709c0.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4709c4.  goto L4709ca;
  #L4709c6.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4709ca.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4709d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4709d6.  v2:= temp @kind object;
  #L4709d8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4709ec.  v0:= 2I;
  #L4709ee.  call temp:= `concatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4709f4.  v2:= temp @kind object;
  #L4709f6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingle`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L470a08.  v0:= "mapper is null" @kind object;
  #L470a0c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470a12.  v0:= "bufferSize" @kind object;
  #L470a16.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470a1c.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapSingle`;
  #L470a20.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470a24.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L470a2a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470a30.  v3:= temp @kind object;
  #L470a32.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L470a44.  v0:= 1I;
  #L470a46.  v1:= 2I;
  #L470a48.  call temp:= `concatMapSingleDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470a4e.  v3:= temp @kind object;
  #L470a50.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470a64.  v0:= 2I;
  #L470a66.  call temp:= `concatMapSingleDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470a6c.  v2:= temp @kind object;
  #L470a6e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470a80.  v0:= "mapper is null" @kind object;
  #L470a84.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470a8a.  v0:= "bufferSize" @kind object;
  #L470a8e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L470a94.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapSingle`;
  #L470a98.  if v3 == 0 then goto L470aa2;
  #L470a9c.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470aa0.  goto L470aa6;
  #L470aa2.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L470aa6.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L470aac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470ab2.  v2:= temp @kind object;
  #L470ab4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapStream`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L470ac8.  call temp:= `flatMapStream`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470ace.  v1:= temp @kind object;
  #L470ad0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470ae4.  v0:= "other is null" @kind object;
  #L470ae8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470aee.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable`;
  #L470af2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L470af8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470afe.  v2:= temp @kind object;
  #L470b00.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470b14.  v0:= "other is null" @kind object;
  #L470b18.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470b1e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithMaybe`;
  #L470b22.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L470b28.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470b2e.  v2:= temp @kind object;
  #L470b30.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470b44.  v0:= "other is null" @kind object;
  #L470b48.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470b4e.  call temp:= `concat`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470b54.  v2:= temp @kind object;
  #L470b56.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470b68.  v0:= "other is null" @kind object;
  #L470b6c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470b72.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithSingle`;
  #L470b76.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L470b7c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470b82.  v2:= temp @kind object;
  #L470b84.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.contains:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475304.  v0:= "item is null" @kind object;
  #L475308.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47530e.  call temp:= `equalsWith`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.equalsWith:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L475314.  v2:= temp @kind object;
  #L475316.  call temp:= `any`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.any:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47531c.  v2:= temp @kind object;
  #L47531e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `count`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.count:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475330.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle`;
  #L475334.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCountSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L47533a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L475340.  v0:= temp @kind object;
  #L475342.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `debounce`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470bf8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L470bfe.  v0:= temp @kind object;
  #L470c00.  call temp:= `debounce`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470c06.  v2:= temp @kind object;
  #L470c08.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `debounce`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L470c1c.  v0:= "unit is null" @kind object;
  #L470c20.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470c26.  v0:= "scheduler is null" @kind object;
  #L470c2a.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470c30.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed`;
  #L470c34.  v1:= v0 @kind object;
  #L470c36.  v2:= v7 @kind object;
  #L470c38.  v3:= v8 @kind wide;
  #L470c3a.  v5:= v10 @kind object;
  #L470c3c.  v6:= v11 @kind object;
  #L470c3e.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L470c44.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470c4a.  v8:= temp @kind object;
  #L470c4c.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `debounce`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470bc8.  v0:= "debounceIndicator is null" @kind object;
  #L470bcc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470bd2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce`;
  #L470bd6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L470bdc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470be2.  v2:= temp @kind object;
  #L470be4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `defaultIfEmpty`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470c60.  v0:= "defaultItem is null" @kind object;
  #L470c64.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470c6a.  call temp:= `just`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470c70.  v2:= temp @kind object;
  #L470c72.  call temp:= `switchIfEmpty`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.switchIfEmpty:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470c78.  v2:= temp @kind object;
  #L470c7a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L470d0c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L470d12.  v4:= temp @kind object;
  #L470d14.  v5:= 0I;
  #L470d16.  v0:= v6 @kind object;
  #L470d18.  v1:= v7 @kind wide;
  #L470d1a.  v3:= v9 @kind object;
  #L470d1c.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470d22.  v7:= temp @kind object;
  #L470d24.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L470d64.  v5:= 0I;
  #L470d66.  v0:= v6 @kind object;
  #L470d68.  v1:= v7 @kind wide;
  #L470d6a.  v3:= v9 @kind object;
  #L470d6c.  v4:= v10 @kind object;
  #L470d6e.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470d74.  v7:= temp @kind object;
  #L470d76.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L470d88.  v0:= "unit is null" @kind object;
  #L470d8c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470d92.  v0:= "scheduler is null" @kind object;
  #L470d96.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470d9c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDelay`;
  #L470da0.  v1:= v0 @kind object;
  #L470da2.  v2:= v8 @kind object;
  #L470da4.  v3:= v9 @kind wide;
  #L470da6.  v5:= v11 @kind object;
  #L470da8.  v6:= v12 @kind object;
  #L470daa.  v7:= v13;
  #L470dac.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelay;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L470db2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470db8.  v9:= temp @kind object;
  #L470dba.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L470d38.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L470d3e.  v4:= temp @kind object;
  #L470d40.  v0:= v6 @kind object;
  #L470d42.  v1:= v7 @kind wide;
  #L470d44.  v3:= v9 @kind object;
  #L470d46.  v5:= v10;
  #L470d48.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470d4e.  v7:= temp @kind object;
  #L470d50.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L470cbc.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470cc2.  v1:= temp @kind object;
  #L470cc4.  call temp:= `delay`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470cca.  v1:= temp @kind object;
  #L470ccc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470ce0.  v0:= "itemDelayIndicator is null" @kind object;
  #L470ce4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470cea.  call temp:= `itemDelay`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.itemDelay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L470cf0.  v2:= temp @kind object;
  #L470cf2.  call temp:= `flatMap`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470cf8.  v2:= temp @kind object;
  #L470cfa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delaySubscription`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470dfc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L470e02.  v0:= temp @kind object;
  #L470e04.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470e0a.  v2:= temp @kind object;
  #L470e0c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delaySubscription`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L470e20.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470e26.  v1:= temp @kind object;
  #L470e28.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470e2e.  v1:= temp @kind object;
  #L470e30.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delaySubscription`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470dcc.  v0:= "subscriptionIndicator is null" @kind object;
  #L470dd0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470dd6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther`;
  #L470dda.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L470de0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470de6.  v2:= temp @kind object;
  #L470de8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `dematerialize`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.dematerialize:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470e44.  v0:= "selector is null" @kind object;
  #L470e48.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470e4e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDematerialize`;
  #L470e52.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDematerialize;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L470e58.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470e5e.  v2:= temp @kind object;
  #L470e60.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinct`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L470e74.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L470e7a.  v0:= temp @kind object;
  #L470e7c.  call temp:= `createHashSet`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createHashSet:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L470e82.  v1:= temp @kind object;
  #L470e84.  call temp:= `distinct`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470e8a.  v0:= temp @kind object;
  #L470e8c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinct`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470ea0.  call temp:= `createHashSet`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createHashSet:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L470ea6.  v0:= temp @kind object;
  #L470ea8.  call temp:= `distinct`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470eae.  v2:= temp @kind object;
  #L470eb0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinct`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470ec4.  v0:= "keySelector is null" @kind object;
  #L470ec8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470ece.  v0:= "collectionSupplier is null" @kind object;
  #L470ed2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470ed8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDistinct`;
  #L470edc.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDistinct;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L470ee2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470ee8.  v2:= temp @kind object;
  #L470eea.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.distinctUntilChanged:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470efc.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L470f02.  v0:= temp @kind object;
  #L470f04.  call temp:= `distinctUntilChanged`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L470f0a.  v0:= temp @kind object;
  #L470f0c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L470f20.  v0:= "comparer is null" @kind object;
  #L470f24.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470f2a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L470f2e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L470f34.  v1:= temp @kind object;
  #L470f36.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L470f3c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470f42.  v3:= temp @kind object;
  #L470f44.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L470f58.  v0:= "keySelector is null" @kind object;
  #L470f5c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470f62.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L470f66.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L470f6c.  v1:= temp @kind object;
  #L470f6e.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L470f74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470f7a.  v3:= temp @kind object;
  #L470f7c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doAfterNext`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doAfterNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470f90.  v0:= "onAfterNext is null" @kind object;
  #L470f94.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470f9a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDoAfterNext`;
  #L470f9e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoAfterNext;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L470fa4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L470faa.  v2:= temp @kind object;
  #L470fac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doAfterTerminate`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doAfterTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L470fc0.  v0:= "onAfterTerminate is null" @kind object;
  #L470fc4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L470fca.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L470fd0.  v0:= temp @kind object;
  #L470fd2.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L470fd8.  v1:= temp @kind object;
  #L470fda.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L470fde.  call temp:= `a`(v3, v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L470fe4.  v4:= temp @kind object;
  #L470fe6.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doFinally`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doFinally:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L470ff8.  v0:= "onFinally is null" @kind object;
  #L470ffc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471002.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDoFinally`;
  #L471006.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoFinally;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L47100c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471012.  v2:= temp @kind object;
  #L471014.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnComplete`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnComplete:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L471028.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L47102e.  v0:= temp @kind object;
  #L471030.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L471036.  v1:= temp @kind object;
  #L471038.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L47103c.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L471042.  v4:= temp @kind object;
  #L471044.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnDispose`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnDispose:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L471058.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L47105e.  v0:= temp @kind object;
  #L471060.  call temp:= `doOnLifecycle`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471066.  v2:= temp @kind object;
  #L471068.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnEach`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L47107c.  v0:= "observer is null" @kind object;
  #L471080.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471086.  call temp:= `observerOnNext`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.observerOnNext:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L47108c.  v0:= temp @kind object;
  #L47108e.  call temp:= `observerOnError`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.observerOnError:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L471094.  v1:= temp @kind object;
  #L471096.  call temp:= `observerOnComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.observerOnComplete:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L47109c.  v4:= temp @kind object;
  #L47109e.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4710a2.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4710a8.  v4:= temp @kind object;
  #L4710aa.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnEach`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4710bc.  v0:= "onNotification is null" @kind object;
  #L4710c0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4710c6.  call temp:= `notificationOnNext`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4710cc.  v0:= temp @kind object;
  #L4710ce.  call temp:= `notificationOnError`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4710d4.  v1:= temp @kind object;
  #L4710d6.  call temp:= `notificationOnComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnComplete:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L4710dc.  v4:= temp @kind object;
  #L4710de.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4710e2.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4710e8.  v4:= temp @kind object;
  #L4710ea.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L471154.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L47115a.  v0:= temp @kind object;
  #L47115c.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L471160.  call temp:= `a`(v2, v0, v3, v1, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L471166.  v3:= temp @kind object;
  #L471168.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnLifecycle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47117c.  v0:= "onSubscribe is null" @kind object;
  #L471180.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471186.  v0:= "onDispose is null" @kind object;
  #L47118a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471190.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnLifecycle`;
  #L471194.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnLifecycle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L47119a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4711a0.  v2:= temp @kind object;
  #L4711a2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnNext`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4711b4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4711ba.  v0:= temp @kind object;
  #L4711bc.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4711c0.  call temp:= `a`(v2, v3, v0, v1, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4711c6.  v3:= temp @kind object;
  #L4711c8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnSubscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4711dc.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4711e0.  call temp:= `doOnLifecycle`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4711e6.  v2:= temp @kind object;
  #L4711e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnTerminate`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4711fc.  v0:= "onTerminate is null" @kind object;
  #L471200.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471206.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L47120c.  v0:= temp @kind object;
  #L47120e.  call temp:= `actionConsumer`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.actionConsumer:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L471214.  v1:= temp @kind object;
  #L471216.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L47121a.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L471220.  v4:= temp @kind object;
  #L471222.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `elementAt`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAt:(J)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46f498.  v0:= 0L;
  #L46f49c.  v2:= lcmp(v4, v0);
  #L46f4a0.  if v2 < 0 then goto L46f4b8;
  #L46f4a4.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe`;
  #L46f4a8.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;J)V` @kind direct;
  #L46f4ae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46f4b4.  v4:= temp @kind object;
  #L46f4b6.  return v4 @kind object;
  #L46f4b8.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L46f4bc.  v1:= new `java.lang.StringBuilder`;
  #L46f4c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46f4c6.  v2:= "index >= 0 required but it was " @kind object;
  #L46f4ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46f4d0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L46f4d6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46f4dc.  v4:= temp @kind object;
  #L46f4de.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46f4e4.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Single` `elementAt`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L475354.  v0:= 0L;
  #L475358.  v2:= lcmp(v4, v0);
  #L47535c.  if v2 < 0 then goto L47537e;
  #L475360.  v0:= "defaultItem is null" @kind object;
  #L475364.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47536a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtSingle`;
  #L47536e.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L475374.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47537a.  v4:= temp @kind object;
  #L47537c.  return v4 @kind object;
  #L47537e.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L475382.  v0:= new `java.lang.StringBuilder`;
  #L475386.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47538c.  v1:= "index >= 0 required but it was " @kind object;
  #L475390.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L475396.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47539c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4753a2.  v4:= temp @kind object;
  #L4753a4.  call `<init>`(v6, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4753aa.  throw v6;
}
procedure `io.reactivex.rxjava3.core.Single` `elementAtOrError`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAtOrError:(J)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4753bc.  v0:= 0L;
  #L4753c0.  v2:= lcmp(v4, v0);
  #L4753c4.  if v2 < 0 then goto L4753de;
  #L4753c8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtSingle`;
  #L4753cc.  v1:= 0I;
  #L4753ce.  call `<init>`(v0, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L4753d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4753da.  v4:= temp @kind object;
  #L4753dc.  return v4 @kind object;
  #L4753de.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L4753e2.  v1:= new `java.lang.StringBuilder`;
  #L4753e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4753ec.  v2:= "index >= 0 required but it was " @kind object;
  #L4753f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4753f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4753fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L475402.  v4:= temp @kind object;
  #L475404.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47540a.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `filter`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4712b0.  v0:= "predicate is null" @kind object;
  #L4712b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4712ba.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFilter`;
  #L4712be.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFilter;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4712c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4712ca.  v2:= temp @kind object;
  #L4712cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `first`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.first:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L47541c.  v0:= 0L;
  #L475420.  call temp:= `elementAt`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475426.  v3:= temp @kind object;
  #L475428.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `firstElement`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.firstElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46f4f8.  v0:= 0L;
  #L46f4fc.  call temp:= `elementAt`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAt:(J)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46f502.  v0:= temp @kind object;
  #L46f504.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `firstOrError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.firstOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L47543c.  v0:= 0L;
  #L475440.  call temp:= `elementAtOrError`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAtOrError:(J)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475446.  v0:= temp @kind object;
  #L475448.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `firstOrErrorStage`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.firstOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L475ea4.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver`;
  #L475ea8.  v1:= 0I;
  #L475eaa.  v2:= 0I;
  #L475eac.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFirstStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L475eb2.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L475eb8.  v0:= temp @kind object;
  #L475eba.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L475ebe.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `firstStage`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.firstStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L475ed0.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver`;
  #L475ed4.  v1:= 1I;
  #L475ed6.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFirstStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L475edc.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L475ee2.  v3:= temp @kind object;
  #L475ee4.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L475ee8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4712e0.  v0:= 0I;
  #L4712e2.  call temp:= `flatMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4712e8.  v2:= temp @kind object;
  #L4712ea.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4713bc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4713c2.  v0:= temp;
  #L4713c4.  v1:= 0I;
  #L4713c6.  call temp:= `flatMap`(v2, v3, v1, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4713cc.  v3:= temp @kind object;
  #L4713ce.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4713e0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4713e6.  v4:= temp;
  #L4713e8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4713ee.  v5:= temp;
  #L4713f0.  v3:= 0I;
  #L4713f2.  v0:= v6 @kind object;
  #L4713f4.  v1:= v7 @kind object;
  #L4713f6.  v2:= v8 @kind object;
  #L4713f8.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4713fe.  v7:= temp @kind object;
  #L471400.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4714ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4714b2.  v5:= temp;
  #L4714b4.  v3:= 0I;
  #L4714b6.  v0:= v6 @kind object;
  #L4714b8.  v1:= v7 @kind object;
  #L4714ba.  v2:= v8 @kind object;
  #L4714bc.  v4:= v9;
  #L4714be.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4714c4.  v7:= temp @kind object;
  #L4714c6.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `boolean` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L471414.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47141a.  v4:= temp;
  #L47141c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L471422.  v5:= temp;
  #L471424.  v0:= v6 @kind object;
  #L471426.  v1:= v7 @kind object;
  #L471428.  v2:= v8 @kind object;
  #L47142a.  v3:= v9;
  #L47142c.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471432.  v7:= temp @kind object;
  #L471434.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L471448.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47144e.  v5:= temp;
  #L471450.  v0:= v6 @kind object;
  #L471452.  v1:= v7 @kind object;
  #L471454.  v2:= v8 @kind object;
  #L471456.  v3:= v9;
  #L471458.  v4:= v10;
  #L47145a.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471460.  v7:= temp @kind object;
  #L471462.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L471474.  v0:= "mapper is null" @kind object;
  #L471478.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47147e.  v0:= "combiner is null" @kind object;
  #L471482.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471488.  call temp:= `flatMapWithCombiner`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.flatMapWithCombiner:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47148e.  v2:= temp @kind object;
  #L471490.  call temp:= `flatMap`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471496.  v2:= temp @kind object;
  #L471498.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4714d8.  v0:= "onNextMapper is null" @kind object;
  #L4714dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4714e2.  v0:= "onErrorMapper is null" @kind object;
  #L4714e6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4714ec.  v0:= "onCompleteSupplier is null" @kind object;
  #L4714f0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4714f6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMapNotification`;
  #L4714fa.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L471500.  call temp:= `merge`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471506.  v2:= temp @kind object;
  #L471508.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object, `int` v5 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47151c.  v0:= "onNextMapper is null" @kind object;
  #L471520.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471526.  v0:= "onErrorMapper is null" @kind object;
  #L47152a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471530.  v0:= "onCompleteSupplier is null" @kind object;
  #L471534.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47153a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMapNotification`;
  #L47153e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L471544.  call temp:= `merge`(v0, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47154a.  v2:= temp @kind object;
  #L47154c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4712fc.  v0:= 2147483647I;
  #L471302.  call temp:= `flatMap`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471308.  v2:= temp @kind object;
  #L47130a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47131c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L471322.  v0:= temp;
  #L471324.  call temp:= `flatMap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47132a.  v2:= temp @kind object;
  #L47132c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L471340.  v0:= "mapper is null" @kind object;
  #L471344.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47134a.  v0:= "maxConcurrency" @kind object;
  #L47134e.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L471354.  v0:= "bufferSize" @kind object;
  #L471358.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L47135e.  v0:= instanceof @variable v7 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L471362.  if v0 == 0 then goto L47138c;
  #L471366.  v9:= v7 @kind object;
  #L471368.  v9:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v9 @kind object;
  #L47136c.  call temp:= `get`(v9) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L471372.  v9:= temp @kind object;
  #L471374.  if v9 != 0 then goto L471382;
  #L471378.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47137e.  v8:= temp @kind object;
  #L471380.  return v8 @kind object;
  #L471382.  call temp:= `scalarXMap`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471388.  v8:= temp @kind object;
  #L47138a.  return v8 @kind object;
  #L47138c.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L471390.  v0:= v6 @kind object;
  #L471392.  v1:= v7 @kind object;
  #L471394.  v2:= v8 @kind object;
  #L471396.  v3:= v9;
  #L471398.  v4:= v10;
  #L47139a.  v5:= v11;
  #L47139c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L4713a2.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4713a8.  v8:= temp @kind object;
  #L4713aa.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f348.  v0:= 0I;
  #L46f34a.  call temp:= `flatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L46f350.  v2:= temp @kind object;
  #L46f352.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f364.  v0:= "mapper is null" @kind object;
  #L46f368.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f36e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable`;
  #L46f372.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L46f378.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46f37e.  v2:= temp @kind object;
  #L46f380.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L471560.  v0:= "mapper is null" @kind object;
  #L471564.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47156a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable`;
  #L47156e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L471574.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47157a.  v2:= temp @kind object;
  #L47157c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapIterable`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L471590.  v0:= "mapper is null" @kind object;
  #L471594.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47159a.  v0:= "combiner is null" @kind object;
  #L47159e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4715a4.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4715aa.  v2:= temp @kind object;
  #L4715ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4715b2.  v5:= temp;
  #L4715b4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4715ba.  v6:= temp;
  #L4715bc.  v4:= 0I;
  #L4715be.  v1:= v7 @kind object;
  #L4715c0.  v3:= v9 @kind object;
  #L4715c2.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4715c8.  v8:= temp @kind object;
  #L4715ca.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapMaybe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4715dc.  v0:= 0I;
  #L4715de.  call temp:= `flatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4715e4.  v2:= temp @kind object;
  #L4715e6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapMaybe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4715f8.  v0:= "mapper is null" @kind object;
  #L4715fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471602.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe`;
  #L471606.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L47160c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471612.  v2:= temp @kind object;
  #L471614.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapSingle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L471628.  v0:= 0I;
  #L47162a.  call temp:= `flatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471630.  v2:= temp @kind object;
  #L471632.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapSingle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L471644.  v0:= "mapper is null" @kind object;
  #L471648.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47164e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapSingle`;
  #L471652.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L471658.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47165e.  v2:= temp @kind object;
  #L471660.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapStream`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L471674.  v0:= "mapper is null" @kind object;
  #L471678.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47167e.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream`;
  #L471682.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L471688.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47168e.  v2:= temp @kind object;
  #L471690.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEach`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.forEach:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L475914.  call temp:= `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L47591a.  v1:= temp @kind object;
  #L47591c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L475930.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L475934.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L475938.  call temp:= `forEachWhile`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L47593e.  v3:= temp @kind object;
  #L475940.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475954.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L475958.  call temp:= `forEachWhile`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L47595e.  v2:= temp @kind object;
  #L475960.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475974.  v0:= "onNext is null" @kind object;
  #L475978.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47597e.  v0:= "onError is null" @kind object;
  #L475982.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475988.  v0:= "onComplete is null" @kind object;
  #L47598c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475992.  v0:= new `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver`;
  #L475996.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.<init>:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L47599c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4759a2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L471ab4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L471aba.  v0:= temp @kind object;
  #L471abc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L471ac2.  v1:= temp;
  #L471ac4.  v2:= 0I;
  #L471ac6.  call temp:= `groupBy`(v3, v4, v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471acc.  v4:= temp @kind object;
  #L471ace.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L471b0c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L471b12.  v0:= temp;
  #L471b14.  v1:= 0I;
  #L471b16.  call temp:= `groupBy`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471b1c.  v3:= temp @kind object;
  #L471b1e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L471b30.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L471b36.  v0:= temp;
  #L471b38.  call temp:= `groupBy`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471b3e.  v2:= temp @kind object;
  #L471b40.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `boolean` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L471b54.  v0:= "keySelector is null" @kind object;
  #L471b58.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471b5e.  v0:= "valueSelector is null" @kind object;
  #L471b62.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471b68.  v0:= "bufferSize" @kind object;
  #L471b6c.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L471b72.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupBy`;
  #L471b76.  v1:= v0 @kind object;
  #L471b78.  v2:= v7 @kind object;
  #L471b7a.  v3:= v8 @kind object;
  #L471b7c.  v4:= v9 @kind object;
  #L471b7e.  v5:= v11;
  #L471b80.  v6:= v10;
  #L471b82.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupBy;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L471b88.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471b8e.  v8:= temp @kind object;
  #L471b90.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L471ae0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L471ae6.  v0:= temp @kind object;
  #L471ae8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L471aee.  v1:= temp;
  #L471af0.  call temp:= `groupBy`(v2, v3, v0, v4, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L471af6.  v3:= temp @kind object;
  #L471af8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupJoin`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.groupJoin:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L471ba4.  v0:= "other is null" @kind object;
  #L471ba8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471bae.  v0:= "leftEnd is null" @kind object;
  #L471bb2.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471bb8.  v0:= "rightEnd is null" @kind object;
  #L471bbc.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471bc2.  v0:= "resultSelector is null" @kind object;
  #L471bc6.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471bcc.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin`;
  #L471bd0.  v1:= v0 @kind object;
  #L471bd2.  v2:= v7 @kind object;
  #L471bd4.  v3:= v8 @kind object;
  #L471bd6.  v4:= v9 @kind object;
  #L471bd8.  v5:= v10 @kind object;
  #L471bda.  v6:= v11 @kind object;
  #L471bdc.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L471be2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471be8.  v8:= temp @kind object;
  #L471bea.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `hide`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.hide:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L471bfc.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableHide`;
  #L471c00.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableHide;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L471c06.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471c0c.  v0:= temp @kind object;
  #L471c0e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ignoreElements`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.ignoreElements:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f394.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableIgnoreElementsCompletable`;
  #L46f398.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableIgnoreElementsCompletable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L46f39e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46f3a4.  v0:= temp @kind object;
  #L46f3a6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `isEmpty`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.isEmpty:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47545c.  call temp:= `alwaysFalse`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysFalse:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L475462.  v0:= temp @kind object;
  #L475464.  call temp:= `all`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.all:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47546a.  v0:= temp @kind object;
  #L47546c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `join`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.join:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L471e04.  v0:= "other is null" @kind object;
  #L471e08.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471e0e.  v0:= "leftEnd is null" @kind object;
  #L471e12.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471e18.  v0:= "rightEnd is null" @kind object;
  #L471e1c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471e22.  v0:= "resultSelector is null" @kind object;
  #L471e26.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471e2c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableJoin`;
  #L471e30.  v1:= v0 @kind object;
  #L471e32.  v2:= v7 @kind object;
  #L471e34.  v3:= v8 @kind object;
  #L471e36.  v4:= v9 @kind object;
  #L471e38.  v5:= v10 @kind object;
  #L471e3a.  v6:= v11 @kind object;
  #L471e3c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableJoin;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L471e42.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L471e48.  v8:= temp @kind object;
  #L471e4a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `last`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.last:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475480.  v0:= "defaultItem is null" @kind object;
  #L475484.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47548a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableLastSingle`;
  #L47548e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L475494.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47549a.  v2:= temp @kind object;
  #L47549c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `lastElement`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.lastElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f518.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe`;
  #L46f51c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L46f522.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46f528.  v0:= temp @kind object;
  #L46f52a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `lastOrError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.lastOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4754b0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableLastSingle`;
  #L4754b4.  v1:= 0I;
  #L4754b6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L4754bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4754c2.  v0:= temp @kind object;
  #L4754c4.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `lastOrErrorStage`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.lastOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L475efc.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableLastStageObserver`;
  #L475f00.  v1:= 0I;
  #L475f02.  v2:= 0I;
  #L475f04.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableLastStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L475f0a.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L475f10.  v0:= temp @kind object;
  #L475f12.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L475f16.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `lastStage`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.lastStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L475f28.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableLastStageObserver`;
  #L475f2c.  v1:= 1I;
  #L475f2e.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableLastStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L475f34.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L475f3a.  v3:= temp @kind object;
  #L475f3c.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L475f40.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `lift`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.lift:(Lio/reactivex/rxjava3/core/ObservableOperator;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47231c.  v0:= "lifter is null" @kind object;
  #L472320.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472326.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableLift`;
  #L47232a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLift;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableOperator;)V` @kind direct;
  #L472330.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472336.  v2:= temp @kind object;
  #L472338.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `map`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47234c.  v0:= "mapper is null" @kind object;
  #L472350.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472356.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMap`;
  #L47235a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L472360.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472366.  v2:= temp @kind object;
  #L472368.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mapOptional`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47237c.  v0:= "mapper is null" @kind object;
  #L472380.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472386.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableMapOptional`;
  #L47238a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableMapOptional;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L472390.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472396.  v2:= temp @kind object;
  #L472398.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `materialize`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.materialize:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4723ac.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize`;
  #L4723b0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4723b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4723bc.  v0:= temp @kind object;
  #L4723be.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472904.  v0:= "other is null" @kind object;
  #L472908.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47290e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithCompletable`;
  #L472912.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L472918.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47291e.  v2:= temp @kind object;
  #L472920.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472934.  v0:= "other is null" @kind object;
  #L472938.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47293e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithMaybe`;
  #L472942.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L472948.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47294e.  v2:= temp @kind object;
  #L472950.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472964.  v0:= "other is null" @kind object;
  #L472968.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47296e.  call temp:= `merge`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472974.  v2:= temp @kind object;
  #L472976.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472988.  v0:= "other is null" @kind object;
  #L47298c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472992.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithSingle`;
  #L472996.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L47299c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4729a2.  v2:= temp @kind object;
  #L4729a4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `observeOn`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4729d8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4729de.  v0:= temp;
  #L4729e0.  v1:= 0I;
  #L4729e2.  call temp:= `observeOn`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4729e8.  v3:= temp @kind object;
  #L4729ea.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `observeOn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4729fc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L472a02.  v0:= temp;
  #L472a04.  call temp:= `observeOn`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472a0a.  v2:= temp @kind object;
  #L472a0c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `observeOn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472a20.  v0:= "scheduler is null" @kind object;
  #L472a24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472a2a.  v0:= "bufferSize" @kind object;
  #L472a2e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L472a34.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn`;
  #L472a38.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableObserveOn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;ZI)V` @kind direct;
  #L472a3e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472a44.  v2:= temp @kind object;
  #L472a46.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `ofType`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472a58.  v0:= "clazz is null" @kind object;
  #L472a5c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472a62.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L472a68.  v0:= temp @kind object;
  #L472a6a.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472a70.  v0:= temp @kind object;
  #L472a72.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472a78.  v2:= temp @kind object;
  #L472a7a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorComplete`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorComplete:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472a8c.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L472a92.  v0:= temp @kind object;
  #L472a94.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472a9a.  v0:= temp @kind object;
  #L472a9c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorComplete`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472ab0.  v0:= "predicate is null" @kind object;
  #L472ab4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472aba.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete`;
  #L472abe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L472ac4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472aca.  v2:= temp @kind object;
  #L472acc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorResumeNext`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472ae0.  v0:= "fallbackSupplier is null" @kind object;
  #L472ae4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472aea.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext`;
  #L472aee.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorNext;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L472af4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472afa.  v2:= temp @kind object;
  #L472afc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorResumeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorResumeWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472b10.  v0:= "fallback is null" @kind object;
  #L472b14.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472b1a.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L472b20.  v2:= temp @kind object;
  #L472b22.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472b28.  v2:= temp @kind object;
  #L472b2a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorReturn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472b3c.  v0:= "itemSupplier is null" @kind object;
  #L472b40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472b46.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorReturn`;
  #L472b4a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L472b50.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472b56.  v2:= temp @kind object;
  #L472b58.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorReturnItem`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472b6c.  v0:= "item is null" @kind object;
  #L472b70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472b76.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L472b7c.  v2:= temp @kind object;
  #L472b7e.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472b84.  v2:= temp @kind object;
  #L472b86.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onTerminateDetach`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.onTerminateDetach:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472b98.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDetach`;
  #L472b9c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L472ba2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472ba8.  v0:= temp @kind object;
  #L472baa.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `publish`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.publish:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472bbc.  v0:= "selector is null" @kind object;
  #L472bc0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472bc6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector`;
  #L472bca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L472bd0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472bd6.  v2:= temp @kind object;
  #L472bd8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `publish`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.publish:()Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475a6c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservablePublish`;
  #L475a70.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublish;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L475a76.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/observables/ConnectableObservable;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L475a7c.  v0:= temp @kind object;
  #L475a7e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `reduce`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.reduce:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f53c.  v0:= "reducer is null" @kind object;
  #L46f540.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f546.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceMaybe`;
  #L46f54a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L46f550.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46f556.  v2:= temp @kind object;
  #L46f558.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `reduce`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.reduce:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4754d8.  v0:= "seed is null" @kind object;
  #L4754dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4754e2.  v0:= "reducer is null" @kind object;
  #L4754e6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4754ec.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle`;
  #L4754f0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4754f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4754fc.  v2:= temp @kind object;
  #L4754fe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `reduceWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.reduceWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475510.  v0:= "seedSupplier is null" @kind object;
  #L475514.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47551a.  v0:= "reducer is null" @kind object;
  #L47551e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475524.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceWithSingle`;
  #L475528.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceWithSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L47552e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L475534.  v2:= temp @kind object;
  #L475536.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `repeat`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.repeat:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L472d44.  v0:= 9223372036854775807L;
  #L472d4e.  call temp:= `repeat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.repeat:(J)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472d54.  v0:= temp @kind object;
  #L472d56.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `repeat`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.repeat:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L472d68.  v0:= 0L;
  #L472d6c.  v2:= lcmp(v4, v0);
  #L472d70.  if v2 < 0 then goto L472d96;
  #L472d74.  if v2 != 0 then goto L472d82;
  #L472d78.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472d7e.  v4:= temp @kind object;
  #L472d80.  return v4 @kind object;
  #L472d82.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeat`;
  #L472d86.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeat;.<init>:(Lio/reactivex/rxjava3/core/Observable;J)V` @kind direct;
  #L472d8c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472d92.  v4:= temp @kind object;
  #L472d94.  return v4 @kind object;
  #L472d96.  v0:= new `java.lang.IllegalArgumentException`;
  #L472d9a.  v1:= new `java.lang.StringBuilder`;
  #L472d9e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L472da4.  v2:= "times >= 0 required but it was " @kind object;
  #L472da8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L472dae.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L472db4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L472dba.  v4:= temp @kind object;
  #L472dbc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L472dc2.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `repeatUntil`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472dd4.  v0:= "stop is null" @kind object;
  #L472dd8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472dde.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil`;
  #L472de2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/BooleanSupplier;)V` @kind direct;
  #L472de8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472dee.  v2:= temp @kind object;
  #L472df0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `repeatWhen`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472e04.  v0:= "handler is null" @kind object;
  #L472e08.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472e0e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatWhen`;
  #L472e12.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatWhen;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L472e18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472e1e.  v2:= temp @kind object;
  #L472e20.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472e34.  v0:= "selector is null" @kind object;
  #L472e38.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472e3e.  call temp:= `replaySupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L472e44.  v0:= temp @kind object;
  #L472e46.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472e4c.  v2:= temp @kind object;
  #L472e4e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472e60.  v0:= "selector is null" @kind object;
  #L472e64.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472e6a.  v0:= "bufferSize" @kind object;
  #L472e6e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L472e74.  v0:= 0I;
  #L472e76.  call temp:= `replaySupplier`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;IZ)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L472e7c.  v3:= temp @kind object;
  #L472e7e.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472e84.  v2:= temp @kind object;
  #L472e86.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L472ed0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L472ed6.  v6:= temp @kind object;
  #L472ed8.  v0:= v7 @kind object;
  #L472eda.  v1:= v8 @kind object;
  #L472edc.  v2:= v9;
  #L472ede.  v3:= v10 @kind wide;
  #L472ee0.  v5:= v12 @kind object;
  #L472ee2.  call temp:= `replay`(v0, v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472ee8.  v8:= temp @kind object;
  #L472eea.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `int` v10 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L472efc.  v0:= "selector is null" @kind object;
  #L472f00.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472f06.  v0:= "bufferSize" @kind object;
  #L472f0a.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L472f10.  v0:= "unit is null" @kind object;
  #L472f14.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472f1a.  v0:= "scheduler is null" @kind object;
  #L472f1e.  call temp:= `requireNonNull`(v14, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472f24.  v7:= 0I;
  #L472f26.  v1:= v8 @kind object;
  #L472f28.  v2:= v10;
  #L472f2a.  v3:= v11 @kind wide;
  #L472f2c.  v5:= v13 @kind object;
  #L472f2e.  v6:= v14 @kind object;
  #L472f30.  call temp:= `replaySupplier`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L472f36.  v10:= temp @kind object;
  #L472f38.  call temp:= `multicastSelector`(v10, v9) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472f3e.  v9:= temp @kind object;
  #L472f40.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L472f54.  v0:= "selector is null" @kind object;
  #L472f58.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472f5e.  v0:= "bufferSize" @kind object;
  #L472f62.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L472f68.  v0:= "unit is null" @kind object;
  #L472f6c.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472f72.  v0:= "scheduler is null" @kind object;
  #L472f76.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472f7c.  v0:= v7 @kind object;
  #L472f7e.  v1:= v9;
  #L472f80.  v2:= v10 @kind wide;
  #L472f82.  v4:= v12 @kind object;
  #L472f84.  v5:= v13 @kind object;
  #L472f86.  v6:= v14;
  #L472f88.  call temp:= `replaySupplier`(v0, v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L472f8e.  v9:= temp @kind object;
  #L472f90.  call temp:= `multicastSelector`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472f96.  v8:= temp @kind object;
  #L472f98.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L472e98.  v0:= "selector is null" @kind object;
  #L472e9c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472ea2.  v0:= "bufferSize" @kind object;
  #L472ea6.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L472eac.  call temp:= `replaySupplier`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;IZ)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L472eb2.  v3:= temp @kind object;
  #L472eb4.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L472eba.  v2:= temp @kind object;
  #L472ebc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L472fac.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L472fb2.  v5:= temp @kind object;
  #L472fb4.  v0:= v6 @kind object;
  #L472fb6.  v1:= v7 @kind object;
  #L472fb8.  v2:= v8 @kind wide;
  #L472fba.  v4:= v10 @kind object;
  #L472fbc.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L472fc2.  v7:= temp @kind object;
  #L472fc4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L472fd8.  v0:= "selector is null" @kind object;
  #L472fdc.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472fe2.  v0:= "unit is null" @kind object;
  #L472fe6.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472fec.  v0:= "scheduler is null" @kind object;
  #L472ff0.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L472ff6.  v6:= 0I;
  #L472ff8.  v1:= v7 @kind object;
  #L472ffa.  v2:= v9 @kind wide;
  #L472ffc.  v4:= v11 @kind object;
  #L472ffe.  v5:= v12 @kind object;
  #L473000.  call temp:= `replaySupplier`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L473006.  v9:= temp @kind object;
  #L473008.  call temp:= `multicastSelector`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47300e.  v8:= temp @kind object;
  #L473010.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L473024.  v0:= "selector is null" @kind object;
  #L473028.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47302e.  v0:= "unit is null" @kind object;
  #L473032.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473038.  v0:= "scheduler is null" @kind object;
  #L47303c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473042.  v0:= v6 @kind object;
  #L473044.  v1:= v8 @kind wide;
  #L473046.  v3:= v10 @kind object;
  #L473048.  v4:= v11 @kind object;
  #L47304a.  v5:= v12;
  #L47304c.  call temp:= `replaySupplier`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L473052.  v8:= temp @kind object;
  #L473054.  call temp:= `multicastSelector`(v8, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47305a.  v7:= temp @kind object;
  #L47305c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:()Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475a90.  call temp:= `createFrom`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.createFrom:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L475a96.  v0:= temp @kind object;
  #L475a98.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(I)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475aac.  v0:= "bufferSize" @kind object;
  #L475ab0.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L475ab6.  v0:= 0I;
  #L475ab8.  call temp:= `create`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L475abe.  v2:= temp @kind object;
  #L475ac0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L475af8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L475afe.  v5:= temp @kind object;
  #L475b00.  v0:= v6 @kind object;
  #L475b02.  v1:= v7;
  #L475b04.  v2:= v8 @kind wide;
  #L475b06.  v4:= v10 @kind object;
  #L475b08.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind virtual;
  #L475b0e.  v7:= temp @kind object;
  #L475b10.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L475b24.  v0:= "bufferSize" @kind object;
  #L475b28.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L475b2e.  v0:= "unit is null" @kind object;
  #L475b32.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475b38.  v0:= "scheduler is null" @kind object;
  #L475b3c.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475b42.  v7:= 0I;
  #L475b44.  v1:= v8 @kind object;
  #L475b46.  v2:= v10 @kind wide;
  #L475b48.  v4:= v12 @kind object;
  #L475b4a.  v5:= v13 @kind object;
  #L475b4c.  v6:= v9;
  #L475b4e.  call temp:= `create`(v1, v2, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L475b54.  v9:= temp @kind object;
  #L475b56.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L475b68.  v0:= "bufferSize" @kind object;
  #L475b6c.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L475b72.  v0:= "unit is null" @kind object;
  #L475b76.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475b7c.  v0:= "scheduler is null" @kind object;
  #L475b80.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475b86.  v0:= v7 @kind object;
  #L475b88.  v1:= v9 @kind wide;
  #L475b8a.  v3:= v11 @kind object;
  #L475b8c.  v4:= v12 @kind object;
  #L475b8e.  v5:= v8;
  #L475b90.  v6:= v13;
  #L475b92.  call temp:= `create`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L475b98.  v8:= temp @kind object;
  #L475b9a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475ad4.  v0:= "bufferSize" @kind object;
  #L475ad8.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L475ade.  call temp:= `create`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L475ae4.  v2:= temp @kind object;
  #L475ae6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475bac.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L475bb2.  v0:= temp @kind object;
  #L475bb4.  call temp:= `replay`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind virtual;
  #L475bba.  v2:= temp @kind object;
  #L475bbc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L475bd0.  v0:= "unit is null" @kind object;
  #L475bd4.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475bda.  v0:= "scheduler is null" @kind object;
  #L475bde.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475be4.  v6:= 0I;
  #L475be6.  v1:= v7 @kind object;
  #L475be8.  v2:= v8 @kind wide;
  #L475bea.  v4:= v10 @kind object;
  #L475bec.  v5:= v11 @kind object;
  #L475bee.  call temp:= `create`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L475bf4.  v8:= temp @kind object;
  #L475bf6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475c08.  v0:= "unit is null" @kind object;
  #L475c0c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475c12.  v0:= "scheduler is null" @kind object;
  #L475c16.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475c1c.  call temp:= `create`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L475c22.  v2:= temp @kind object;
  #L475c24.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L473070.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L473076.  v0:= temp @kind object;
  #L473078.  v1:= 9223372036854775807L;
  #L473082.  call temp:= `retry`(v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473088.  v0:= temp @kind object;
  #L47308a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4730f0.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4730f6.  v0:= temp @kind object;
  #L4730f8.  call temp:= `retry`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4730fe.  v2:= temp @kind object;
  #L473100.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 , `io.reactivex.rxjava3.functions.Predicate` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L473114.  v0:= 0L;
  #L473118.  v2:= lcmp(v4, v0);
  #L47311c.  if v2 < 0 then goto L47313e;
  #L473120.  v0:= "predicate is null" @kind object;
  #L473124.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47312a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryPredicate`;
  #L47312e.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryPredicate;.<init>:(Lio/reactivex/rxjava3/core/Observable;JLio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L473134.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47313a.  v4:= temp @kind object;
  #L47313c.  return v4 @kind object;
  #L47313e.  v6:= new `java.lang.IllegalArgumentException`;
  #L473142.  v0:= new `java.lang.StringBuilder`;
  #L473146.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47314c.  v1:= "times >= 0 required but it was " @kind object;
  #L473150.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473156.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47315c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473162.  v4:= temp @kind object;
  #L473164.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47316a.  throw v6;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47309c.  v0:= "predicate is null" @kind object;
  #L4730a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4730a6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate`;
  #L4730aa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L4730b0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4730b6.  v2:= temp @kind object;
  #L4730b8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4730cc.  v0:= 9223372036854775807L;
  #L4730d6.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4730dc.  v3:= temp @kind object;
  #L4730de.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retryUntil`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retryUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L47317c.  v0:= "stop is null" @kind object;
  #L473180.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473186.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L47318c.  v3:= temp @kind object;
  #L47318e.  v0:= 9223372036854775807L;
  #L473198.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47319e.  v3:= temp @kind object;
  #L4731a0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retryWhen`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4731b4.  v0:= "handler is null" @kind object;
  #L4731b8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4731be.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryWhen`;
  #L4731c2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryWhen;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4731c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4731ce.  v2:= temp @kind object;
  #L4731d0.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.safeSubscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L476184.  v0:= "observer is null" @kind object;
  #L476188.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47618e.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.observers.SafeObserver` @kind boolean;
  #L476192.  if v0 == 0 then goto L47619e;
  #L476196.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L47619c.  goto L4761ae;
  #L47619e.  v0:= new `io.reactivex.rxjava3.observers.SafeObserver`;
  #L4761a2.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/observers/SafeObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4761a8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4761ae.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473244.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47324a.  v0:= temp @kind object;
  #L47324c.  call temp:= `sample`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473252.  v2:= temp @kind object;
  #L473254.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L473294.  v0:= "unit is null" @kind object;
  #L473298.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47329e.  v0:= "scheduler is null" @kind object;
  #L4732a2.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4732a8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed`;
  #L4732ac.  v7:= 0I;
  #L4732ae.  v1:= v0 @kind object;
  #L4732b0.  v2:= v8 @kind object;
  #L4732b2.  v3:= v9 @kind wide;
  #L4732b4.  v5:= v11 @kind object;
  #L4732b6.  v6:= v12 @kind object;
  #L4732b8.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4732be.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4732c4.  v9:= temp @kind object;
  #L4732c6.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4732d8.  v0:= "unit is null" @kind object;
  #L4732dc.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4732e2.  v0:= "scheduler is null" @kind object;
  #L4732e6.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4732ec.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed`;
  #L4732f0.  v1:= v0 @kind object;
  #L4732f2.  v2:= v8 @kind object;
  #L4732f4.  v3:= v9 @kind wide;
  #L4732f6.  v5:= v11 @kind object;
  #L4732f8.  v6:= v12 @kind object;
  #L4732fa.  v7:= v13;
  #L4732fc.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L473302.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473308.  v9:= temp @kind object;
  #L47330a.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L473268.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47326e.  v4:= temp @kind object;
  #L473270.  v0:= v6 @kind object;
  #L473272.  v1:= v7 @kind wide;
  #L473274.  v3:= v9 @kind object;
  #L473276.  v5:= v10;
  #L473278.  call temp:= `sample`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47327e.  v7:= temp @kind object;
  #L473280.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4731e4.  v0:= "sampler is null" @kind object;
  #L4731e8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4731ee.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable`;
  #L4731f2.  v1:= 0I;
  #L4731f4.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Z)V` @kind direct;
  #L4731fa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473200.  v3:= temp @kind object;
  #L473202.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(Lio/reactivex/rxjava3/core/ObservableSource;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473214.  v0:= "sampler is null" @kind object;
  #L473218.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47321e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable`;
  #L473222.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Z)V` @kind direct;
  #L473228.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47322e.  v2:= temp @kind object;
  #L473230.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `scan`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.scan:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47331c.  v0:= "accumulator is null" @kind object;
  #L473320.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473326.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableScan`;
  #L47332a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L473330.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473336.  v2:= temp @kind object;
  #L473338.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `scan`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.scan:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47334c.  v0:= "initialValue is null" @kind object;
  #L473350.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473356.  call temp:= `justSupplier`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L47335c.  v2:= temp @kind object;
  #L47335e.  call temp:= `scanWith`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.scanWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473364.  v2:= temp @kind object;
  #L473366.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `scanWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.scanWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473378.  v0:= "seedSupplier is null" @kind object;
  #L47337c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473382.  v0:= "accumulator is null" @kind object;
  #L473386.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47338c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableScanSeed`;
  #L473390.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScanSeed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L473396.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47339c.  v2:= temp @kind object;
  #L47339e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `serialize`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.serialize:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4733b0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSerialized`;
  #L4733b4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSerialized;.<init>:(Lio/reactivex/rxjava3/core/Observable;)V` @kind direct;
  #L4733ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4733c0.  v0:= temp @kind object;
  #L4733c2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `share`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.share:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4733d4.  call temp:= `publish`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.publish:()Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind virtual;
  #L4733da.  v0:= temp @kind object;
  #L4733dc.  call temp:= `refCount`(v0) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4733e2.  v0:= temp @kind object;
  #L4733e4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `single`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475608.  v0:= "defaultItem is null" @kind object;
  #L47560c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475612.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSingleSingle`;
  #L475616.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L47561c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L475622.  v2:= temp @kind object;
  #L475624.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `singleElement`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46f56c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSingleMaybe`;
  #L46f570.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSingleMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L46f576.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46f57c.  v0:= temp @kind object;
  #L46f57e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `singleOrError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.singleOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L475638.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSingleSingle`;
  #L47563c.  v1:= 0I;
  #L47563e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L475644.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47564a.  v0:= temp @kind object;
  #L47564c.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `singleOrErrorStage`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.singleOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L475f54.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableSingleStageObserver`;
  #L475f58.  v1:= 0I;
  #L475f5a.  v2:= 0I;
  #L475f5c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableSingleStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L475f62.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L475f68.  v0:= temp @kind object;
  #L475f6a.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L475f6e.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `singleStage`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.singleStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L475f80.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableSingleStageObserver`;
  #L475f84.  v1:= 1I;
  #L475f86.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableSingleStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L475f8c.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L475f92.  v3:= temp @kind object;
  #L475f94.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L475f98.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skip`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skip:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4733f8.  v0:= 0L;
  #L4733fc.  v2:= lcmp(v4, v0);
  #L473400.  if v2 < 0 then goto L473426;
  #L473404.  if v2 != 0 then goto L473412;
  #L473408.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47340e.  v4:= temp @kind object;
  #L473410.  return v4 @kind object;
  #L473412.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip`;
  #L473416.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;J)V` @kind direct;
  #L47341c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473422.  v4:= temp @kind object;
  #L473424.  return v4 @kind object;
  #L473426.  v0:= new `java.lang.IllegalArgumentException`;
  #L47342a.  v1:= new `java.lang.StringBuilder`;
  #L47342e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473434.  v2:= "count >= 0 expected but it was " @kind object;
  #L473438.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47343e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L473444.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47344a.  v4:= temp @kind object;
  #L47344c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L473452.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `skip`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skip:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L473464.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47346a.  v1:= temp @kind object;
  #L47346c.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.skipUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473472.  v1:= temp @kind object;
  #L473474.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skip`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skip:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L473488.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47348e.  v1:= temp @kind object;
  #L473490.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.skipUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473496.  v1:= temp @kind object;
  #L473498.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4734ac.  if v4 < 0 then goto L4734d2;
  #L4734b0.  if v4 != 0 then goto L4734be;
  #L4734b4.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4734ba.  v4:= temp @kind object;
  #L4734bc.  return v4 @kind object;
  #L4734be.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast`;
  #L4734c2.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L4734c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4734ce.  v4:= temp @kind object;
  #L4734d0.  return v4 @kind object;
  #L4734d2.  v0:= new `java.lang.IllegalArgumentException`;
  #L4734d6.  v1:= new `java.lang.StringBuilder`;
  #L4734da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4734e0.  v2:= "count >= 0 required but it was " @kind object;
  #L4734e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4734ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4734f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4734f6.  v4:= temp @kind object;
  #L4734f8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4734fe.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473510.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L473516.  v4:= temp @kind object;
  #L473518.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47351e.  v6:= temp;
  #L473520.  v5:= 0I;
  #L473522.  v0:= v7 @kind object;
  #L473524.  v1:= v8 @kind wide;
  #L473526.  v3:= v10 @kind object;
  #L473528.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47352e.  v8:= temp @kind object;
  #L473530.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473578.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47357e.  v6:= temp;
  #L473580.  v5:= 0I;
  #L473582.  v0:= v7 @kind object;
  #L473584.  v1:= v8 @kind wide;
  #L473586.  v3:= v10 @kind object;
  #L473588.  v4:= v11 @kind object;
  #L47358a.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473590.  v8:= temp @kind object;
  #L473592.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4735a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4735aa.  v6:= temp;
  #L4735ac.  v0:= v7 @kind object;
  #L4735ae.  v1:= v8 @kind wide;
  #L4735b0.  v3:= v10 @kind object;
  #L4735b2.  v4:= v11 @kind object;
  #L4735b4.  v5:= v12;
  #L4735b6.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4735bc.  v8:= temp @kind object;
  #L4735be.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4735d0.  v0:= "unit is null" @kind object;
  #L4735d4.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4735da.  v0:= "scheduler is null" @kind object;
  #L4735de.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4735e4.  v0:= "bufferSize" @kind object;
  #L4735e8.  call temp:= `verifyPositive`(v15, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4735ee.  v7:= v15 ^< 1;
  #L4735f2.  v15:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed`;
  #L4735f6.  v1:= v15 @kind object;
  #L4735f8.  v2:= v9 @kind object;
  #L4735fa.  v3:= v10 @kind wide;
  #L4735fc.  v5:= v12 @kind object;
  #L4735fe.  v6:= v13 @kind object;
  #L473600.  v8:= v14;
  #L473602.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @kind direct;
  #L473608.  call temp:= `onAssembly`(v15) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47360e.  v10:= temp @kind object;
  #L473610.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473544.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47354a.  v4:= temp @kind object;
  #L47354c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473552.  v6:= temp;
  #L473554.  v0:= v7 @kind object;
  #L473556.  v1:= v8 @kind wide;
  #L473558.  v3:= v10 @kind object;
  #L47355a.  v5:= v11;
  #L47355c.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473562.  v8:= temp @kind object;
  #L473564.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipUntil`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skipUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473624.  v0:= "other is null" @kind object;
  #L473628.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47362e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipUntil`;
  #L473632.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipUntil;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L473638.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47363e.  v2:= temp @kind object;
  #L473640.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipWhile`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skipWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473654.  v0:= "predicate is null" @kind object;
  #L473658.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47365e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile`;
  #L473662.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L473668.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47366e.  v2:= temp @kind object;
  #L473670.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sorted`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.sorted:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L473684.  call temp:= `toList`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47368a.  v0:= temp @kind object;
  #L47368c.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473692.  v0:= temp @kind object;
  #L473694.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L47369a.  v1:= temp @kind object;
  #L47369c.  call temp:= `listSorter`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4736a2.  v1:= temp @kind object;
  #L4736a4.  call temp:= `map`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4736aa.  v0:= temp @kind object;
  #L4736ac.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4736b2.  v1:= temp @kind object;
  #L4736b4.  call temp:= `flatMapIterable`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4736ba.  v0:= temp @kind object;
  #L4736bc.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sorted`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sorted:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4736d0.  v0:= "comparator is null" @kind object;
  #L4736d4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4736da.  call temp:= `toList`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4736e0.  v0:= temp @kind object;
  #L4736e2.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4736e8.  v0:= temp @kind object;
  #L4736ea.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4736f0.  v2:= temp @kind object;
  #L4736f2.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4736f8.  v2:= temp @kind object;
  #L4736fa.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L473700.  v0:= temp @kind object;
  #L473702.  call temp:= `flatMapIterable`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473708.  v2:= temp @kind object;
  #L47370a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47371c.  v0:= "other is null" @kind object;
  #L473720.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473726.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L47372c.  v2:= temp @kind object;
  #L47372e.  call temp:= `toObservable`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473734.  v2:= temp @kind object;
  #L473736.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47373c.  v2:= temp @kind object;
  #L47373e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473750.  v0:= "other is null" @kind object;
  #L473754.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47375a.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L473760.  v2:= temp @kind object;
  #L473762.  call temp:= `toObservable`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473768.  v2:= temp @kind object;
  #L47376a.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473770.  v2:= temp @kind object;
  #L473772.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L473784.  v0:= "other is null" @kind object;
  #L473788.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47378e.  v0:= 2I;
  #L473790.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L473794.  v1:= 0I;
  #L473796.  v0[v1]:= v3 @kind object;
  #L47379a.  v3:= 1I;
  #L47379c.  v0[v3]:= v2 @kind object;
  #L4737a0.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4737a6.  v3:= temp @kind object;
  #L4737a8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4737bc.  v0:= "other is null" @kind object;
  #L4737c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4737c6.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4737cc.  v2:= temp @kind object;
  #L4737ce.  call temp:= `toObservable`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4737d4.  v2:= temp @kind object;
  #L4737d6.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4737dc.  v2:= temp @kind object;
  #L4737de.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWithArray`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWithArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4737f0.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4737f6.  v3:= temp @kind object;
  #L4737f8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4737fe.  v0:= temp @kind object;
  #L473800.  if v3 != v0 then goto L47380e;
  #L473804.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47380a.  v3:= temp @kind object;
  #L47380c.  return v3 @kind object;
  #L47380e.  v0:= 2I;
  #L473810.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L473814.  v1:= 0I;
  #L473816.  v0[v1]:= v3 @kind object;
  #L47381a.  v3:= 1I;
  #L47381c.  v0[v3]:= v2 @kind object;
  #L473820.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473826.  v3:= temp @kind object;
  #L473828.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWithItem`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWithItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L47383c.  v0:= 2I;
  #L47383e.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L473842.  call temp:= `just`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473848.  v3:= temp @kind object;
  #L47384a.  v1:= 0I;
  #L47384c.  v0[v1]:= v3 @kind object;
  #L473850.  v3:= 1I;
  #L473852.  v0[v3]:= v2 @kind object;
  #L473856.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47385c.  v3:= temp @kind object;
  #L47385e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWithIterable`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWithIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L473870.  v0:= 2I;
  #L473872.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L473876.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47387c.  v3:= temp @kind object;
  #L47387e.  v1:= 0I;
  #L473880.  v0[v1]:= v3 @kind object;
  #L473884.  v3:= 1I;
  #L473886.  v0[v3]:= v2 @kind object;
  #L47388a.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473890.  v3:= temp @kind object;
  #L473892.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4759b4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4759ba.  v0:= temp @kind object;
  #L4759bc.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4759c0.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4759c4.  call temp:= `subscribe`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4759ca.  v0:= temp @kind object;
  #L4759cc.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4759e0.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4759e4.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4759e8.  call temp:= `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4759ee.  v3:= temp @kind object;
  #L4759f0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475a04.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L475a08.  call temp:= `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L475a0e.  v2:= temp @kind object;
  #L475a10.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L475a24.  v0:= "onNext is null" @kind object;
  #L475a28.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475a2e.  v0:= "onError is null" @kind object;
  #L475a32.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475a38.  v0:= "onComplete is null" @kind object;
  #L475a3c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475a42.  v0:= new `io.reactivex.rxjava3.internal.observers.LambdaObserver`;
  #L475a46.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L475a4c.  v1:= temp @kind object;
  #L475a4e.  call `<init>`(v0, v3, v4, v5, v1) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L475a54.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L475a5a.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4761c0.  v0:= "observer is null" @kind object;
  #L4761c4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4761ca.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind static;
  #L4761d0.  v3:= temp @kind object;
  #L4761d2.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null Observer. Please change the handler provided to RxJavaPlugins.setOnObservableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L4761d6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4761dc.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4761e2.  return @kind void;
  #L4761e4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4761e6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4761ec.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4761f2.  v0:= new `java.lang.NullPointerException`;
  #L4761f6.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L4761fa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476200.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L476206.  throw v0;
  #L476208.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L47620a.  throw v3;
  catch `java.lang.NullPointerException` @[L4761ca..L4761e2] goto L476208;
  catch `java.lang.Throwable` @[L4761ca..L4761e2] goto L4761e4;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.core.Observer` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Observable` `subscribeOn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4738a4.  v0:= "scheduler is null" @kind object;
  #L4738a8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4738ae.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSubscribeOn`;
  #L4738b2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4738b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4738be.  v2:= temp @kind object;
  #L4738c0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observer` `subscribeWith`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4751f8.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4751fe.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchIfEmpty`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchIfEmpty:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4738d4.  v0:= "other is null" @kind object;
  #L4738d8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4738de.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchIfEmpty`;
  #L4738e2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchIfEmpty;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4738e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4738ee.  v2:= temp @kind object;
  #L4738f0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473904.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47390a.  v0:= temp;
  #L47390c.  call temp:= `switchMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473912.  v2:= temp @kind object;
  #L473914.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMap`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L473928.  v0:= "mapper is null" @kind object;
  #L47392c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473932.  v0:= "bufferSize" @kind object;
  #L473936.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L47393c.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L473940.  if v0 == 0 then goto L47396a;
  #L473944.  v4:= v2 @kind object;
  #L473946.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v4 @kind object;
  #L47394a.  call temp:= `get`(v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L473950.  v4:= temp @kind object;
  #L473952.  if v4 != 0 then goto L473960;
  #L473956.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47395c.  v3:= temp @kind object;
  #L47395e.  return v3 @kind object;
  #L473960.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473966.  v3:= temp @kind object;
  #L473968.  return v3 @kind object;
  #L47396a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap`;
  #L47396e.  v1:= 0I;
  #L473970.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L473976.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47397c.  v3:= temp @kind object;
  #L47397e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchMapCompletable`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46f3b8.  v0:= "mapper is null" @kind object;
  #L46f3bc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f3c2.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable`;
  #L46f3c6.  v1:= 0I;
  #L46f3c8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L46f3ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46f3d4.  v3:= temp @kind object;
  #L46f3d6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchMapCompletableDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46f3e8.  v0:= "mapper is null" @kind object;
  #L46f3ec.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f3f2.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable`;
  #L46f3f6.  v1:= 1I;
  #L46f3f8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L46f3fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46f404.  v3:= temp @kind object;
  #L46f406.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473990.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473996.  v0:= temp;
  #L473998.  call temp:= `switchMapDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47399e.  v2:= temp @kind object;
  #L4739a0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4739b4.  v0:= "mapper is null" @kind object;
  #L4739b8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4739be.  v0:= "bufferSize" @kind object;
  #L4739c2.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4739c8.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L4739cc.  if v0 == 0 then goto L4739f6;
  #L4739d0.  v4:= v2 @kind object;
  #L4739d2.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v4 @kind object;
  #L4739d6.  call temp:= `get`(v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4739dc.  v4:= temp @kind object;
  #L4739de.  if v4 != 0 then goto L4739ec;
  #L4739e2.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4739e8.  v3:= temp @kind object;
  #L4739ea.  return v3 @kind object;
  #L4739ec.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4739f2.  v3:= temp @kind object;
  #L4739f4.  return v3 @kind object;
  #L4739f6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap`;
  #L4739fa.  v1:= 1I;
  #L4739fc.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L473a02.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473a08.  v3:= temp @kind object;
  #L473a0a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapMaybe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L473a1c.  v0:= "mapper is null" @kind object;
  #L473a20.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473a26.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapMaybe`;
  #L473a2a.  v1:= 0I;
  #L473a2c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L473a32.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473a38.  v3:= temp @kind object;
  #L473a3a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapMaybeDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L473a4c.  v0:= "mapper is null" @kind object;
  #L473a50.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473a56.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapMaybe`;
  #L473a5a.  v1:= 1I;
  #L473a5c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L473a62.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473a68.  v3:= temp @kind object;
  #L473a6a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapSingle`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L473a7c.  v0:= "mapper is null" @kind object;
  #L473a80.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473a86.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle`;
  #L473a8a.  v1:= 0I;
  #L473a8c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L473a92.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473a98.  v3:= temp @kind object;
  #L473a9a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapSingleDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L473aac.  v0:= "mapper is null" @kind object;
  #L473ab0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473ab6.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle`;
  #L473aba.  v1:= 1I;
  #L473abc.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L473ac2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473ac8.  v3:= temp @kind object;
  #L473aca.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `take`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.take:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L473bac.  v0:= 0L;
  #L473bb0.  v2:= lcmp(v4, v0);
  #L473bb4.  if v2 < 0 then goto L473bcc;
  #L473bb8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTake`;
  #L473bbc.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;J)V` @kind direct;
  #L473bc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473bc8.  v4:= temp @kind object;
  #L473bca.  return v4 @kind object;
  #L473bcc.  v0:= new `java.lang.IllegalArgumentException`;
  #L473bd0.  v1:= new `java.lang.StringBuilder`;
  #L473bd4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473bda.  v2:= "count >= 0 required but it was " @kind object;
  #L473bde.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473be4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L473bea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473bf0.  v4:= temp @kind object;
  #L473bf2.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L473bf8.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `take`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.take:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L473c0c.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473c12.  v1:= temp @kind object;
  #L473c14.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.takeUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473c1a.  v1:= temp @kind object;
  #L473c1c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `take`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.take:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L473c30.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473c36.  v1:= temp @kind object;
  #L473c38.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.takeUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473c3e.  v1:= temp @kind object;
  #L473c40.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L473c54.  if v4 < 0 then goto L473c9e;
  #L473c58.  if v4 != 0 then goto L473c70;
  #L473c5c.  v4:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableIgnoreElements`;
  #L473c60.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableIgnoreElements;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L473c66.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473c6c.  v4:= temp @kind object;
  #L473c6e.  return v4 @kind object;
  #L473c70.  v0:= 1I;
  #L473c72.  if v4 != v0 then goto L473c8a;
  #L473c76.  v4:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne`;
  #L473c7a.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastOne;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L473c80.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473c86.  v4:= temp @kind object;
  #L473c88.  return v4 @kind object;
  #L473c8a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLast`;
  #L473c8e.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLast;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L473c94.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473c9a.  v4:= temp @kind object;
  #L473c9c.  return v4 @kind object;
  #L473c9e.  v0:= new `java.lang.IllegalArgumentException`;
  #L473ca2.  v1:= new `java.lang.StringBuilder`;
  #L473ca6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473cac.  v2:= "count >= 0 required but it was " @kind object;
  #L473cb0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473cb6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L473cbc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473cc2.  v4:= temp @kind object;
  #L473cc4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L473cca.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L473dcc.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L473dd2.  v6:= temp @kind object;
  #L473dd4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473dda.  v8:= temp;
  #L473ddc.  v7:= 0I;
  #L473dde.  v0:= v9 @kind object;
  #L473de0.  v1:= v10 @kind wide;
  #L473de2.  v3:= v12 @kind wide;
  #L473de4.  v5:= v14 @kind object;
  #L473de6.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473dec.  v10:= temp @kind object;
  #L473dee.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object, `io.reactivex.rxjava3.core.Scheduler` v15 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L473e00.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473e06.  v8:= temp;
  #L473e08.  v7:= 0I;
  #L473e0a.  v0:= v9 @kind object;
  #L473e0c.  v1:= v10 @kind wide;
  #L473e0e.  v3:= v12 @kind wide;
  #L473e10.  v5:= v14 @kind object;
  #L473e12.  v6:= v15 @kind object;
  #L473e14.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473e1a.  v10:= temp @kind object;
  #L473e1c.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v11 @kind this, `long` v12 , `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.rxjava3.core.Scheduler` v17 @kind object, `boolean` v18 , `int` v19 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L473e30.  v2:= v12 @kind wide;
  #L473e32.  v0:= "unit is null" @kind object;
  #L473e36.  v6:= v16 @kind object;
  #L473e3a.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473e40.  v0:= "scheduler is null" @kind object;
  #L473e44.  v7:= v17 @kind object;
  #L473e48.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473e4e.  v0:= "bufferSize" @kind object;
  #L473e52.  v8:= v19;
  #L473e56.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L473e5c.  v0:= 0L;
  #L473e60.  v4:= lcmp(v2, v0);
  #L473e64.  if v4 < 0 then goto L473e94;
  #L473e68.  v10:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed`;
  #L473e6c.  v0:= v10 @kind object;
  #L473e6e.  v1:= v11 @kind object;
  #L473e70.  v2:= v12 @kind wide;
  #L473e72.  v4:= v14 @kind wide;
  #L473e74.  v6:= v16 @kind object;
  #L473e78.  v7:= v17 @kind object;
  #L473e7c.  v8:= v19;
  #L473e80.  v9:= v18;
  #L473e84.  call `<init>`(v0, v1, v2, v4, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @kind direct;
  #L473e8a.  call temp:= `onAssembly`(v10) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473e90.  v0:= temp @kind object;
  #L473e92.  return v0 @kind object;
  #L473e94.  v0:= new `java.lang.IllegalArgumentException`;
  #L473e98.  v1:= new `java.lang.StringBuilder`;
  #L473e9c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473ea2.  v4:= "count >= 0 required but it was " @kind object;
  #L473ea6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473eac.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L473eb2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473eb8.  v1:= temp @kind object;
  #L473eba.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L473ec0.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473cdc.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L473ce2.  v4:= temp @kind object;
  #L473ce4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473cea.  v6:= temp;
  #L473cec.  v5:= 0I;
  #L473cee.  v0:= v7 @kind object;
  #L473cf0.  v1:= v8 @kind wide;
  #L473cf2.  v3:= v10 @kind object;
  #L473cf4.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473cfa.  v8:= temp @kind object;
  #L473cfc.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473d44.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473d4a.  v6:= temp;
  #L473d4c.  v5:= 0I;
  #L473d4e.  v0:= v7 @kind object;
  #L473d50.  v1:= v8 @kind wide;
  #L473d52.  v3:= v10 @kind object;
  #L473d54.  v4:= v11 @kind object;
  #L473d56.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473d5c.  v8:= temp @kind object;
  #L473d5e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473d70.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473d76.  v6:= temp;
  #L473d78.  v0:= v7 @kind object;
  #L473d7a.  v1:= v8 @kind wide;
  #L473d7c.  v3:= v10 @kind object;
  #L473d7e.  v4:= v11 @kind object;
  #L473d80.  v5:= v12;
  #L473d82.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473d88.  v8:= temp @kind object;
  #L473d8a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L473d9c.  v1:= 9223372036854775807L;
  #L473da6.  v0:= v9 @kind object;
  #L473da8.  v3:= v10 @kind wide;
  #L473daa.  v5:= v12 @kind object;
  #L473dac.  v6:= v13 @kind object;
  #L473dae.  v7:= v14;
  #L473db0.  v8:= v15;
  #L473db2.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473db8.  v10:= temp @kind object;
  #L473dba.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473d10.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L473d16.  v4:= temp @kind object;
  #L473d18.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L473d1e.  v6:= temp;
  #L473d20.  v0:= v7 @kind object;
  #L473d22.  v1:= v8 @kind wide;
  #L473d24.  v3:= v10 @kind object;
  #L473d26.  v5:= v11;
  #L473d28.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473d2e.  v8:= temp @kind object;
  #L473d30.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeUntil`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473ed4.  v0:= "other is null" @kind object;
  #L473ed8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473ede.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil`;
  #L473ee2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeUntil;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L473ee8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473eee.  v2:= temp @kind object;
  #L473ef0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeUntil`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeUntil:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473f04.  v0:= "stopPredicate is null" @kind object;
  #L473f08.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473f0e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntilPredicate`;
  #L473f12.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeUntilPredicate;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L473f18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473f1e.  v2:= temp @kind object;
  #L473f20.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeWhile`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473f34.  v0:= "predicate is null" @kind object;
  #L473f38.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473f3e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeWhile`;
  #L473f42.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeWhile;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L473f48.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473f4e.  v2:= temp @kind object;
  #L473f50.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.test:()Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475c38.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L475c3c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L475c42.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L475c48.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.test:(Z)Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475c5c.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L475c60.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L475c66.  if v2 == 0 then goto L475c70;
  #L475c6a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.dispose:()V` @kind virtual;
  #L475c70.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L475c76.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleFirst`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L473f64.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L473f6a.  v0:= temp @kind object;
  #L473f6c.  call temp:= `throttleFirst`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473f72.  v2:= temp @kind object;
  #L473f74.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleFirst`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473f88.  v0:= "unit is null" @kind object;
  #L473f8c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473f92.  v0:= "scheduler is null" @kind object;
  #L473f96.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473f9c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed`;
  #L473fa0.  v1:= v0 @kind object;
  #L473fa2.  v2:= v7 @kind object;
  #L473fa4.  v3:= v8 @kind wide;
  #L473fa6.  v5:= v10 @kind object;
  #L473fa8.  v6:= v11 @kind object;
  #L473faa.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableThrottleFirstTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L473fb0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L473fb6.  v8:= temp @kind object;
  #L473fb8.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLast`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L473fcc.  call temp:= `sample`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473fd2.  v1:= temp @kind object;
  #L473fd4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLast`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L473fe8.  call temp:= `sample`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L473fee.  v1:= temp @kind object;
  #L473ff0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLatest`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L474004.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47400a.  v4:= temp @kind object;
  #L47400c.  v5:= 0I;
  #L47400e.  v0:= v6 @kind object;
  #L474010.  v1:= v7 @kind wide;
  #L474012.  v3:= v9 @kind object;
  #L474014.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47401a.  v7:= temp @kind object;
  #L47401c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLatest`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47405c.  v5:= 0I;
  #L47405e.  v0:= v6 @kind object;
  #L474060.  v1:= v7 @kind wide;
  #L474062.  v3:= v9 @kind object;
  #L474064.  v4:= v10 @kind object;
  #L474066.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47406c.  v7:= temp @kind object;
  #L47406e.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLatest`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474080.  v0:= "unit is null" @kind object;
  #L474084.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47408a.  v0:= "scheduler is null" @kind object;
  #L47408e.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474094.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleLatest`;
  #L474098.  v1:= v0 @kind object;
  #L47409a.  v2:= v8 @kind object;
  #L47409c.  v3:= v9 @kind wide;
  #L47409e.  v5:= v11 @kind object;
  #L4740a0.  v6:= v12 @kind object;
  #L4740a2.  v7:= v13;
  #L4740a4.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableThrottleLatest;.<init>:(Lio/reactivex/rxjava3/core/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4740aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4740b0.  v9:= temp @kind object;
  #L4740b2.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLatest`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L474030.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L474036.  v4:= temp @kind object;
  #L474038.  v0:= v6 @kind object;
  #L47403a.  v1:= v7 @kind wide;
  #L47403c.  v3:= v9 @kind object;
  #L47403e.  v5:= v10;
  #L474040.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474046.  v7:= temp @kind object;
  #L474048.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleWithTimeout`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4740c4.  call temp:= `debounce`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4740ca.  v1:= temp @kind object;
  #L4740cc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleWithTimeout`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4740e0.  call temp:= `debounce`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4740e6.  v1:= temp @kind object;
  #L4740e8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeInterval`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4740fc.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L474100.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L474106.  v1:= temp @kind object;
  #L474108.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47410e.  v0:= temp @kind object;
  #L474110.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeInterval`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474124.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L474128.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47412e.  v2:= temp @kind object;
  #L474130.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeInterval`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474144.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47414a.  v0:= temp @kind object;
  #L47414c.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474152.  v2:= temp @kind object;
  #L474154.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeInterval`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474168.  v0:= "unit is null" @kind object;
  #L47416c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474172.  v0:= "scheduler is null" @kind object;
  #L474176.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47417c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval`;
  #L474180.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L474186.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47418c.  v2:= temp @kind object;
  #L47418e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47423c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L474242.  v5:= temp @kind object;
  #L474244.  v4:= 0I;
  #L474246.  v0:= v6 @kind object;
  #L474248.  v1:= v7 @kind wide;
  #L47424a.  v3:= v9 @kind object;
  #L47424c.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L474252.  v7:= temp @kind object;
  #L474254.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L474268.  v0:= "fallback is null" @kind object;
  #L47426c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474272.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L474278.  v6:= temp @kind object;
  #L47427a.  v1:= v7 @kind object;
  #L47427c.  v2:= v8 @kind wide;
  #L47427e.  v4:= v10 @kind object;
  #L474280.  v5:= v11 @kind object;
  #L474282.  call temp:= `b`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L474288.  v8:= temp @kind object;
  #L47428a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47429c.  v4:= 0I;
  #L47429e.  v0:= v6 @kind object;
  #L4742a0.  v1:= v7 @kind wide;
  #L4742a2.  v3:= v9 @kind object;
  #L4742a4.  v5:= v10 @kind object;
  #L4742a6.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4742ac.  v7:= temp @kind object;
  #L4742ae.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4742c0.  v0:= "fallback is null" @kind object;
  #L4742c4.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4742ca.  v0:= v6 @kind object;
  #L4742cc.  v1:= v7 @kind wide;
  #L4742ce.  v3:= v9 @kind object;
  #L4742d0.  v4:= v11 @kind object;
  #L4742d2.  v5:= v10 @kind object;
  #L4742d4.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4742da.  v7:= temp @kind object;
  #L4742dc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4741a0.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L4741a4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4741aa.  v0:= 0I;
  #L4741ac.  call temp:= `c`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.c:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4741b2.  v2:= temp @kind object;
  #L4741b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4741c8.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L4741cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4741d2.  v0:= "fallback is null" @kind object;
  #L4741d6.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4741dc.  call temp:= `c`(v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.c:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4741e2.  v2:= temp @kind object;
  #L4741e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4741f8.  v0:= 0I;
  #L4741fa.  call temp:= `c`(v1, v0, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.c:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L474200.  v2:= temp @kind object;
  #L474202.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474214.  v0:= "fallback is null" @kind object;
  #L474218.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47421e.  v0:= 0I;
  #L474220.  call temp:= `c`(v1, v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.c:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L474226.  v2:= temp @kind object;
  #L474228.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timestamp`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4743cc.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4743d0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4743d6.  v1:= temp @kind object;
  #L4743d8.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4743de.  v0:= temp @kind object;
  #L4743e0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timestamp`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4743f4.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4743f8.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4743fe.  v2:= temp @kind object;
  #L474400.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timestamp`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474414.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47441a.  v0:= temp @kind object;
  #L47441c.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474422.  v2:= temp @kind object;
  #L474424.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timestamp`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474438.  v0:= "unit is null" @kind object;
  #L47443c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474442.  v0:= "scheduler is null" @kind object;
  #L474446.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47444c.  call temp:= `timestampWith`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.timestampWith:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474452.  v2:= temp @kind object;
  #L474454.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47445a.  v2:= temp @kind object;
  #L47445c.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.to:(Lio/reactivex/rxjava3/core/ObservableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475e7c.  v0:= "converter is null" @kind object;
  #L475e80.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475e86.  v2:= (`io.reactivex.rxjava3.core.ObservableConverter`) v2 @kind object;
  #L475e8a.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/ObservableConverter;.apply:(Lio/reactivex/rxjava3/core/Observable;)Ljava/lang/Object;` @kind interface;
  #L475e90.  v2:= temp @kind object;
  #L475e92.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `toFlowable`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.BackpressureStrategy` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toFlowable:(Lio/reactivex/rxjava3/core/BackpressureStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46f418.  v0:= "strategy is null" @kind object;
  #L46f41c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f422.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable`;
  #L46f426.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L46f42c.  v1:= `@@io.reactivex.rxjava3.core.Observable$a.a` @type ^`int`[] @kind object;
  #L46f430.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L46f436.  v3:= temp;
  #L46f438.  v3:= v1[v3];
  #L46f43c.  v1:= 1I;
  #L46f43e.  if v3 == v1 then goto L46f47e;
  #L46f442.  v1:= 2I;
  #L46f444.  if v3 == v1 then goto L46f474;
  #L46f448.  v1:= 3I;
  #L46f44a.  if v3 == v1 then goto L46f472;
  #L46f44e.  v1:= 4I;
  #L46f450.  if v3 == v1 then goto L46f45e;
  #L46f454.  call temp:= `onBackpressureBuffer`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46f45a.  v3:= temp @kind object;
  #L46f45c.  return v3 @kind object;
  #L46f45e.  v3:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureError`;
  #L46f462.  call `<init>`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureError;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L46f468.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46f46e.  v3:= temp @kind object;
  #L46f470.  return v3 @kind object;
  #L46f472.  return v0 @kind object;
  #L46f474.  call temp:= `onBackpressureLatest`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureLatest:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46f47a.  v3:= temp @kind object;
  #L46f47c.  return v3 @kind object;
  #L46f47e.  call temp:= `onBackpressureDrop`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureDrop:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46f484.  v3:= temp @kind object;
  #L46f486.  return v3 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475fac.  v0:= new `io.reactivex.rxjava3.internal.observers.FutureObserver`;
  #L475fb0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/FutureObserver;.<init>:()V` @kind direct;
  #L475fb6.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L475fbc.  v0:= temp @kind object;
  #L475fbe.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L475fc2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475660.  v0:= 16I;
  #L475664.  call temp:= `toList`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47566a.  v0:= temp @kind object;
  #L47566c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475680.  v0:= "capacityHint" @kind object;
  #L475684.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L47568a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle`;
  #L47568e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L475694.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L47569a.  v2:= temp @kind object;
  #L47569c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4756b0.  v0:= "collectionSupplier is null" @kind object;
  #L4756b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4756ba.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle`;
  #L4756be.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4756c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4756ca.  v2:= temp @kind object;
  #L4756cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4756e0.  v0:= "keySelector is null" @kind object;
  #L4756e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4756ea.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4756f0.  v0:= temp @kind object;
  #L4756f2.  call temp:= `toMapKeySelector`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeySelector:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L4756f8.  v2:= temp @kind object;
  #L4756fa.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475700.  v2:= temp @kind object;
  #L475702.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475714.  v0:= "keySelector is null" @kind object;
  #L475718.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47571e.  v0:= "valueSelector is null" @kind object;
  #L475722.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475728.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L47572e.  v0:= temp @kind object;
  #L475730.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L475736.  v2:= temp @kind object;
  #L475738.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47573e.  v2:= temp @kind object;
  #L475740.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475754.  v0:= "keySelector is null" @kind object;
  #L475758.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47575e.  v0:= "valueSelector is null" @kind object;
  #L475762.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475768.  v0:= "mapSupplier is null" @kind object;
  #L47576c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475772.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L475778.  v2:= temp @kind object;
  #L47577a.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475780.  v2:= temp @kind object;
  #L475782.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L475794.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47579a.  v0:= temp @kind object;
  #L47579c.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4757a2.  v1:= temp @kind object;
  #L4757a4.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4757aa.  v2:= temp @kind object;
  #L4757ac.  call temp:= `toMultimap`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4757b2.  v4:= temp @kind object;
  #L4757b4.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4757c8.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4757ce.  v0:= temp @kind object;
  #L4757d0.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4757d6.  v1:= temp @kind object;
  #L4757d8.  call temp:= `toMultimap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4757de.  v3:= temp @kind object;
  #L4757e0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4757f4.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4757fa.  v0:= temp @kind object;
  #L4757fc.  call temp:= `toMultimap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475802.  v2:= temp @kind object;
  #L475804.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object, `io.reactivex.rxjava3.functions.Function` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475818.  v0:= "keySelector is null" @kind object;
  #L47581c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475822.  v0:= "valueSelector is null" @kind object;
  #L475826.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47582c.  v0:= "mapSupplier is null" @kind object;
  #L475830.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475836.  v0:= "collectionFactory is null" @kind object;
  #L47583a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L475840.  call temp:= `toMultimapKeyValueSelector`(v2, v3, v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMultimapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L475846.  v2:= temp @kind object;
  #L475848.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L47584e.  v2:= temp @kind object;
  #L475850.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475864.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L47586a.  v0:= temp @kind object;
  #L47586c.  call temp:= `toSortedList`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475872.  v0:= temp @kind object;
  #L475874.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475888.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L47588e.  v0:= temp @kind object;
  #L475890.  call temp:= `toSortedList`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475896.  v2:= temp @kind object;
  #L475898.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4758ac.  v0:= "comparator is null" @kind object;
  #L4758b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4758b6.  call temp:= `toList`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4758bc.  v0:= temp @kind object;
  #L4758be.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4758c4.  v2:= temp @kind object;
  #L4758c6.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4758cc.  v2:= temp @kind object;
  #L4758ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4758e0.  v0:= "comparator is null" @kind object;
  #L4758e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4758ea.  call temp:= `toList`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4758f0.  v3:= temp @kind object;
  #L4758f2.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4758f8.  v2:= temp @kind object;
  #L4758fa.  call temp:= `map`(v3, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L475900.  v2:= temp @kind object;
  #L475902.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `unsubscribeOn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.unsubscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4744b8.  v0:= "scheduler is null" @kind object;
  #L4744bc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4744c2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableUnsubscribeOn`;
  #L4744c6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUnsubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4744cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4744d2.  v2:= temp @kind object;
  #L4744d4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47460c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474612.  v5:= temp;
  #L474614.  v0:= v6 @kind object;
  #L474616.  v1:= v7 @kind wide;
  #L474618.  v3:= v7 @kind wide;
  #L47461a.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474620.  v7:= temp @kind object;
  #L474622.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4747b0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4747b6.  v5:= temp;
  #L4747b8.  v0:= v6 @kind object;
  #L4747ba.  v1:= v7 @kind wide;
  #L4747bc.  v3:= v9 @kind wide;
  #L4747be.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4747c4.  v7:= temp @kind object;
  #L4747c6.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `int` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4747d8.  v0:= "count" @kind object;
  #L4747dc.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L4747e2.  v0:= "skip" @kind object;
  #L4747e6.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L4747ec.  v0:= "bufferSize" @kind object;
  #L4747f0.  call temp:= `verifyPositive`(v13, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4747f6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindow`;
  #L4747fa.  v1:= v0 @kind object;
  #L4747fc.  v2:= v8 @kind object;
  #L4747fe.  v3:= v9 @kind wide;
  #L474800.  v5:= v11 @kind wide;
  #L474802.  v7:= v13;
  #L474804.  call `<init>`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindow;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JJI)V` @kind direct;
  #L47480a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474810.  v9:= temp @kind object;
  #L474812.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474824.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47482a.  v6:= temp @kind object;
  #L47482c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L474832.  v7:= temp;
  #L474834.  v0:= v8 @kind object;
  #L474836.  v1:= v9 @kind wide;
  #L474838.  v3:= v11 @kind wide;
  #L47483a.  v5:= v13 @kind object;
  #L47483c.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474842.  v9:= temp @kind object;
  #L474844.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474858.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47485e.  v7:= temp;
  #L474860.  v0:= v8 @kind object;
  #L474862.  v1:= v9 @kind wide;
  #L474864.  v3:= v11 @kind wide;
  #L474866.  v5:= v13 @kind object;
  #L474868.  v6:= v14 @kind object;
  #L47486a.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474870.  v9:= temp @kind object;
  #L474872.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v13 @kind this, `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object, `io.reactivex.rxjava3.core.Scheduler` v19 @kind object, `int` v20 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L474884.  v0:= "timespan" @kind object;
  #L474888.  v3:= v14 @kind wide;
  #L47488a.  call temp:= `verifyPositive`(v14, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L474890.  v0:= "timeskip" @kind object;
  #L474894.  v5:= v16 @kind wide;
  #L474898.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L47489e.  v0:= "bufferSize" @kind object;
  #L4748a2.  v11:= v20;
  #L4748a6.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4748ac.  v0:= "scheduler is null" @kind object;
  #L4748b0.  v8:= v19 @kind object;
  #L4748b4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4748ba.  v0:= "unit is null" @kind object;
  #L4748be.  v7:= v18 @kind object;
  #L4748c2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4748c8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed`;
  #L4748cc.  v9:= 9223372036854775807L;
  #L4748d6.  v12:= 0I;
  #L4748d8.  v1:= v0 @kind object;
  #L4748da.  v2:= v13 @kind object;
  #L4748dc.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Observable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @kind direct;
  #L4748e2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4748e8.  v0:= temp @kind object;
  #L4748ea.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474634.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47463a.  v4:= temp @kind object;
  #L47463c.  v5:= 9223372036854775807L;
  #L474646.  v7:= 0I;
  #L474648.  v0:= v8 @kind object;
  #L47464a.  v1:= v9 @kind wide;
  #L47464c.  v3:= v11 @kind object;
  #L47464e.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474654.  v9:= temp @kind object;
  #L474656.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474758.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47475e.  v4:= temp @kind object;
  #L474760.  v7:= 0I;
  #L474762.  v0:= v8 @kind object;
  #L474764.  v1:= v9 @kind wide;
  #L474766.  v3:= v11 @kind object;
  #L474768.  v5:= v12 @kind wide;
  #L47476a.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474770.  v9:= temp @kind object;
  #L474772.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;JZ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474784.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L47478a.  v4:= temp @kind object;
  #L47478c.  v0:= v8 @kind object;
  #L47478e.  v1:= v9 @kind wide;
  #L474790.  v3:= v11 @kind object;
  #L474792.  v5:= v12 @kind wide;
  #L474794.  v7:= v14;
  #L474796.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47479c.  v9:= temp @kind object;
  #L47479e.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474668.  v5:= 9223372036854775807L;
  #L474672.  v7:= 0I;
  #L474674.  v0:= v8 @kind object;
  #L474676.  v1:= v9 @kind wide;
  #L474678.  v3:= v11 @kind object;
  #L47467a.  v4:= v12 @kind object;
  #L47467c.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474682.  v9:= temp @kind object;
  #L474684.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `long` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L474698.  v7:= 0I;
  #L47469a.  v0:= v8 @kind object;
  #L47469c.  v1:= v9 @kind wide;
  #L47469e.  v3:= v11 @kind object;
  #L4746a0.  v4:= v12 @kind object;
  #L4746a2.  v5:= v13 @kind wide;
  #L4746a4.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4746aa.  v9:= temp @kind object;
  #L4746ac.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `long` v14 , `boolean` v16 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4746c0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4746c6.  v8:= temp;
  #L4746c8.  v0:= v9 @kind object;
  #L4746ca.  v1:= v10 @kind wide;
  #L4746cc.  v3:= v12 @kind object;
  #L4746ce.  v4:= v13 @kind object;
  #L4746d0.  v5:= v14 @kind wide;
  #L4746d2.  v7:= v16;
  #L4746d6.  call temp:= `window`(v0, v1, v3, v4, v5, v7, v8) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4746dc.  v0:= temp @kind object;
  #L4746de.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v13 @kind this, `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.rxjava3.core.Scheduler` v17 @kind object, `long` v18 , `boolean` v20 , `int` v21 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4746f0.  v0:= "bufferSize" @kind object;
  #L4746f4.  v11:= v21;
  #L4746f8.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4746fe.  v0:= "scheduler is null" @kind object;
  #L474702.  v8:= v17 @kind object;
  #L474706.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47470c.  v0:= "unit is null" @kind object;
  #L474710.  v7:= v16 @kind object;
  #L474714.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47471a.  v0:= "count" @kind object;
  #L47471e.  v9:= v18 @kind wide;
  #L474722.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L474728.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed`;
  #L47472c.  v1:= v0 @kind object;
  #L47472e.  v2:= v13 @kind object;
  #L474730.  v3:= v14 @kind wide;
  #L474732.  v5:= v14 @kind wide;
  #L474734.  v12:= v20;
  #L474738.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Observable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @kind direct;
  #L47473e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474744.  v0:= temp @kind object;
  #L474746.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474548.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L47454e.  v0:= temp;
  #L474550.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474556.  v2:= temp @kind object;
  #L474558.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47456c.  v0:= "boundaryIndicator is null" @kind object;
  #L474570.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474576.  v0:= "bufferSize" @kind object;
  #L47457a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L474580.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundary`;
  #L474584.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundary;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L47458a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474590.  v2:= temp @kind object;
  #L474592.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4745a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4745aa.  v0:= temp;
  #L4745ac.  call temp:= `window`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4745b2.  v2:= temp @kind object;
  #L4745b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4745c8.  v0:= "openingIndicator is null" @kind object;
  #L4745cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4745d2.  v0:= "closingIndicator is null" @kind object;
  #L4745d6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4745dc.  v0:= "bufferSize" @kind object;
  #L4745e0.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4745e6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector`;
  #L4745ea.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4745f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4745f6.  v2:= temp @kind object;
  #L4745f8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4748fc.  v0:= "source1 is null" @kind object;
  #L474900.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474906.  v0:= "source2 is null" @kind object;
  #L47490a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474910.  v0:= "source3 is null" @kind object;
  #L474914.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47491a.  v0:= "source4 is null" @kind object;
  #L47491e.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474924.  v0:= "combiner is null" @kind object;
  #L474928.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47492e.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L474934.  v7:= temp @kind object;
  #L474936.  v0:= 4I;
  #L474938.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L47493c.  v1:= 0I;
  #L47493e.  v0[v1]:= v3 @kind object;
  #L474942.  v3:= 1I;
  #L474944.  v0[v3]:= v4 @kind object;
  #L474948.  v3:= 2I;
  #L47494a.  v0[v3]:= v5 @kind object;
  #L47494e.  v3:= 3I;
  #L474950.  v0[v3]:= v6 @kind object;
  #L474954.  call temp:= `withLatestFrom`(v2, v0, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L47495a.  v3:= temp @kind object;
  #L47495c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L474970.  v0:= "source1 is null" @kind object;
  #L474974.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47497a.  v0:= "source2 is null" @kind object;
  #L47497e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474984.  v0:= "source3 is null" @kind object;
  #L474988.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47498e.  v0:= "combiner is null" @kind object;
  #L474992.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474998.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L47499e.  v6:= temp @kind object;
  #L4749a0.  v0:= 3I;
  #L4749a2.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4749a6.  v1:= 0I;
  #L4749a8.  v0[v1]:= v3 @kind object;
  #L4749ac.  v3:= 1I;
  #L4749ae.  v0[v3]:= v4 @kind object;
  #L4749b2.  v3:= 2I;
  #L4749b4.  v0[v3]:= v5 @kind object;
  #L4749b8.  call temp:= `withLatestFrom`(v2, v0, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4749be.  v3:= temp @kind object;
  #L4749c0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4749d4.  v0:= "source1 is null" @kind object;
  #L4749d8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4749de.  v0:= "source2 is null" @kind object;
  #L4749e2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4749e8.  v0:= "combiner is null" @kind object;
  #L4749ec.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4749f2.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4749f8.  v5:= temp @kind object;
  #L4749fa.  v0:= 2I;
  #L4749fc.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L474a00.  v1:= 0I;
  #L474a02.  v0[v1]:= v3 @kind object;
  #L474a06.  v3:= 1I;
  #L474a08.  v0[v3]:= v4 @kind object;
  #L474a0c.  call temp:= `withLatestFrom`(v2, v0, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L474a12.  v3:= temp @kind object;
  #L474a14.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474a28.  v0:= "other is null" @kind object;
  #L474a2c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474a32.  v0:= "combiner is null" @kind object;
  #L474a36.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474a3c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFrom`;
  #L474a40.  call `<init>`(v0, v1, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFrom;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L474a46.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474a4c.  v2:= temp @kind object;
  #L474a4e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474a98.  v0:= "others is null" @kind object;
  #L474a9c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474aa2.  v0:= "combiner is null" @kind object;
  #L474aa6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474aac.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany`;
  #L474ab0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L474ab6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474abc.  v2:= temp @kind object;
  #L474abe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L474a60.  v0:= "others is null" @kind object;
  #L474a64.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474a6a.  v0:= "combiner is null" @kind object;
  #L474a6e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L474a74.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany`;
  #L474a78.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;[Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L474a7e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L474a84.  v2:= temp @kind object;
  #L474a86.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zipWith:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L475164.  v0:= "other is null" @kind object;
  #L475168.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47516e.  call temp:= `zip`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L475174.  v2:= temp @kind object;
  #L475176.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipWith`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zipWith:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L475188.  call temp:= `zip`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L47518e.  v1:= temp @kind object;
  #L475190.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipWith`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zipWith:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4751a4.  call temp:= `zip`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4751aa.  v1:= temp @kind object;
  #L4751ac.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zipWith:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4751c0.  v0:= "other is null" @kind object;
  #L4751c4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4751ca.  v0:= "zipper is null" @kind object;
  #L4751ce.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4751d4.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable`;
  #L4751d8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4751de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4751e4.  v2:= temp @kind object;
  #L4751e6.  return v2 @kind object;
}
