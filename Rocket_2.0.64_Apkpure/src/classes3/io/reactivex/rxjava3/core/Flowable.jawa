record `io.reactivex.rxjava3.core.Flowable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.reactivestreams.Publisher` @kind interface {
}
global `int` `@@io.reactivex.rxjava3.core.Flowable.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/core/Flowable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L46c0fc.  v0:= "rx3.buffer-size" @kind object;
  #L46c100.  v1:= 128I;
  #L46c104.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L46c10a.  v0:= temp @kind object;
  #L46c10c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L46c112.  v0:= temp;
  #L46c114.  v1:= 1I;
  #L46c116.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L46c11c.  v0:= temp;
  #L46c11e.  `@@io.reactivex.rxjava3.core.Flowable.a` @type ^`int` := v0;
  #L46c122.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46c134.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46c13a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `a`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Consumer` v8 @kind object, `io.reactivex.rxjava3.functions.Consumer` v9 @kind object, `io.reactivex.rxjava3.functions.Action` v10 @kind object, `io.reactivex.rxjava3.functions.Action` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L466c6c.  v0:= "onNext is null" @kind object;
  #L466c70.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466c76.  v0:= "onError is null" @kind object;
  #L466c7a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466c80.  v0:= "onComplete is null" @kind object;
  #L466c84.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466c8a.  v0:= "onAfterTerminate is null" @kind object;
  #L466c8e.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466c94.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach`;
  #L466c98.  v1:= v0 @kind object;
  #L466c9a.  v2:= v7 @kind object;
  #L466c9c.  v3:= v8 @kind object;
  #L466c9e.  v4:= v9 @kind object;
  #L466ca0.  v5:= v10 @kind object;
  #L466ca2.  v6:= v11 @kind object;
  #L466ca4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L466caa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466cb0.  v8:= temp @kind object;
  #L466cb2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465058.  v0:= "sources is null" @kind object;
  #L46505c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465062.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb`;
  #L465066.  v1:= 0I;
  #L465068.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAmb;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;)V` @kind direct;
  #L46506e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465074.  v2:= temp @kind object;
  #L465076.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `ambArray`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.ambArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465088.  v0:= "sources is null" @kind object;
  #L46508c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465092.  v0:= length @variable v2;
  #L465094.  if v0 != 0 then goto L4650a2;
  #L465098.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46509e.  v2:= temp @kind object;
  #L4650a0.  return v2 @kind object;
  #L4650a2.  v1:= 1I;
  #L4650a4.  if v0 != v1 then goto L4650b8;
  #L4650a8.  v0:= 0I;
  #L4650aa.  v2:= v2[v0] @kind object;
  #L4650ae.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4650b4.  v2:= temp @kind object;
  #L4650b6.  return v2 @kind object;
  #L4650b8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb`;
  #L4650bc.  v1:= 0I;
  #L4650be.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAmb;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;)V` @kind direct;
  #L4650c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4650ca.  v2:= temp @kind object;
  #L4650cc.  return v2 @kind object;
}
procedure `int` `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L464e84.  v0:= `@@io.reactivex.rxjava3.core.Flowable.a` @type ^`int`;
  #L464e88.  return v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `c`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `org.reactivestreams.Publisher` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a230.  v0:= "unit is null" @kind object;
  #L46a234.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a23a.  v0:= "scheduler is null" @kind object;
  #L46a23e.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a244.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeoutTimed`;
  #L46a248.  v1:= v0 @kind object;
  #L46a24a.  v2:= v8 @kind object;
  #L46a24c.  v3:= v9 @kind wide;
  #L46a24e.  v5:= v11 @kind object;
  #L46a250.  v6:= v13 @kind object;
  #L46a252.  v7:= v12 @kind object;
  #L46a254.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46a25a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a260.  v9:= temp @kind object;
  #L46a262.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46550c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465512.  v0:= temp;
  #L465514.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46551a.  v1:= temp @kind object;
  #L46551c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465530.  v0:= "sources is null" @kind object;
  #L465534.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46553a.  v0:= "combiner is null" @kind object;
  #L46553e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465544.  v0:= "bufferSize" @kind object;
  #L465548.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46554e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest`;
  #L465552.  v1:= 0I;
  #L465554.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L46555a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465560.  v2:= temp @kind object;
  #L465562.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465574.  v0:= "source1 is null" @kind object;
  #L465578.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46557e.  v0:= "source2 is null" @kind object;
  #L465582.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465588.  v0:= "combiner is null" @kind object;
  #L46558c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465592.  v0:= 2I;
  #L465594.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L465598.  v1:= 0I;
  #L46559a.  v0[v1]:= v2 @kind object;
  #L46559e.  v2:= 1I;
  #L4655a0.  v0[v2]:= v3 @kind object;
  #L4655a4.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4655aa.  v2:= temp @kind object;
  #L4655ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4655b2.  v3:= temp;
  #L4655b4.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4655ba.  v2:= temp @kind object;
  #L4655bc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4655d0.  v0:= "source1 is null" @kind object;
  #L4655d4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4655da.  v0:= "source2 is null" @kind object;
  #L4655de.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4655e4.  v0:= "source3 is null" @kind object;
  #L4655e8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4655ee.  v0:= "combiner is null" @kind object;
  #L4655f2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4655f8.  v0:= 3I;
  #L4655fa.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4655fe.  v1:= 0I;
  #L465600.  v0[v1]:= v2 @kind object;
  #L465604.  v2:= 1I;
  #L465606.  v0[v2]:= v3 @kind object;
  #L46560a.  v2:= 2I;
  #L46560c.  v0[v2]:= v4 @kind object;
  #L465610.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465616.  v2:= temp @kind object;
  #L465618.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46561e.  v3:= temp;
  #L465620.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465626.  v2:= temp @kind object;
  #L465628.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46563c.  v0:= "source1 is null" @kind object;
  #L465640.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465646.  v0:= "source2 is null" @kind object;
  #L46564a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465650.  v0:= "source3 is null" @kind object;
  #L465654.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46565a.  v0:= "source4 is null" @kind object;
  #L46565e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465664.  v0:= "combiner is null" @kind object;
  #L465668.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46566e.  v0:= 4I;
  #L465670.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L465674.  v1:= 0I;
  #L465676.  v0[v1]:= v2 @kind object;
  #L46567a.  v2:= 1I;
  #L46567c.  v0[v2]:= v3 @kind object;
  #L465680.  v2:= 2I;
  #L465682.  v0[v2]:= v4 @kind object;
  #L465686.  v2:= 3I;
  #L465688.  v0[v2]:= v5 @kind object;
  #L46568c.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465692.  v2:= temp @kind object;
  #L465694.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46569a.  v3:= temp;
  #L46569c.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4656a2.  v2:= temp @kind object;
  #L4656a4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4656b8.  v0:= "source1 is null" @kind object;
  #L4656bc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4656c2.  v0:= "source2 is null" @kind object;
  #L4656c6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4656cc.  v0:= "source3 is null" @kind object;
  #L4656d0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4656d6.  v0:= "source4 is null" @kind object;
  #L4656da.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4656e0.  v0:= "source5 is null" @kind object;
  #L4656e4.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4656ea.  v0:= "combiner is null" @kind object;
  #L4656ee.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4656f4.  v0:= 5I;
  #L4656f6.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4656fa.  v1:= 0I;
  #L4656fc.  v0[v1]:= v2 @kind object;
  #L465700.  v2:= 1I;
  #L465702.  v0[v2]:= v3 @kind object;
  #L465706.  v2:= 2I;
  #L465708.  v0[v2]:= v4 @kind object;
  #L46570c.  v2:= 3I;
  #L46570e.  v0[v2]:= v5 @kind object;
  #L465712.  v2:= 4I;
  #L465714.  v0[v2]:= v6 @kind object;
  #L465718.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46571e.  v2:= temp @kind object;
  #L465720.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465726.  v3:= temp;
  #L465728.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46572e.  v2:= temp @kind object;
  #L465730.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `io.reactivex.rxjava3.functions.Function6` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465744.  v0:= "source1 is null" @kind object;
  #L465748.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46574e.  v0:= "source2 is null" @kind object;
  #L465752.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465758.  v0:= "source3 is null" @kind object;
  #L46575c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465762.  v0:= "source4 is null" @kind object;
  #L465766.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46576c.  v0:= "source5 is null" @kind object;
  #L465770.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465776.  v0:= "source6 is null" @kind object;
  #L46577a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465780.  v0:= "combiner is null" @kind object;
  #L465784.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46578a.  v0:= 6I;
  #L46578c.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L465790.  v1:= 0I;
  #L465792.  v0[v1]:= v2 @kind object;
  #L465796.  v2:= 1I;
  #L465798.  v0[v2]:= v3 @kind object;
  #L46579c.  v2:= 2I;
  #L46579e.  v0[v2]:= v4 @kind object;
  #L4657a2.  v2:= 3I;
  #L4657a4.  v0[v2]:= v5 @kind object;
  #L4657a8.  v2:= 4I;
  #L4657aa.  v0[v2]:= v6 @kind object;
  #L4657ae.  v2:= 5I;
  #L4657b0.  v0[v2]:= v7 @kind object;
  #L4657b4.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4657ba.  v2:= temp @kind object;
  #L4657bc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4657c2.  v3:= temp;
  #L4657c4.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4657ca.  v2:= temp @kind object;
  #L4657cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `io.reactivex.rxjava3.functions.Function7` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4657e0.  v0:= "source1 is null" @kind object;
  #L4657e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4657ea.  v0:= "source2 is null" @kind object;
  #L4657ee.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4657f4.  v0:= "source3 is null" @kind object;
  #L4657f8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4657fe.  v0:= "source4 is null" @kind object;
  #L465802.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465808.  v0:= "source5 is null" @kind object;
  #L46580c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465812.  v0:= "source6 is null" @kind object;
  #L465816.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46581c.  v0:= "source7 is null" @kind object;
  #L465820.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465826.  v0:= "combiner is null" @kind object;
  #L46582a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465830.  v0:= 7I;
  #L465832.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L465836.  v1:= 0I;
  #L465838.  v0[v1]:= v2 @kind object;
  #L46583c.  v2:= 1I;
  #L46583e.  v0[v2]:= v3 @kind object;
  #L465842.  v2:= 2I;
  #L465844.  v0[v2]:= v4 @kind object;
  #L465848.  v2:= 3I;
  #L46584a.  v0[v2]:= v5 @kind object;
  #L46584e.  v2:= 4I;
  #L465850.  v0[v2]:= v6 @kind object;
  #L465854.  v2:= 5I;
  #L465856.  v0[v2]:= v7 @kind object;
  #L46585a.  v2:= 6I;
  #L46585c.  v0[v2]:= v8 @kind object;
  #L465860.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465866.  v2:= temp @kind object;
  #L465868.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46586e.  v3:= temp;
  #L465870.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465876.  v2:= temp @kind object;
  #L465878.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `io.reactivex.rxjava3.functions.Function8` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46588c.  v0:= "source1 is null" @kind object;
  #L465890.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465896.  v0:= "source2 is null" @kind object;
  #L46589a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4658a0.  v0:= "source3 is null" @kind object;
  #L4658a4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4658aa.  v0:= "source4 is null" @kind object;
  #L4658ae.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4658b4.  v0:= "source5 is null" @kind object;
  #L4658b8.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4658be.  v0:= "source6 is null" @kind object;
  #L4658c2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4658c8.  v0:= "source7 is null" @kind object;
  #L4658cc.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4658d2.  v0:= "source8 is null" @kind object;
  #L4658d6.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4658dc.  v0:= "combiner is null" @kind object;
  #L4658e0.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4658e6.  v0:= 8I;
  #L4658ea.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4658ee.  v1:= 0I;
  #L4658f0.  v0[v1]:= v2 @kind object;
  #L4658f4.  v2:= 1I;
  #L4658f6.  v0[v2]:= v3 @kind object;
  #L4658fa.  v2:= 2I;
  #L4658fc.  v0[v2]:= v4 @kind object;
  #L465900.  v2:= 3I;
  #L465902.  v0[v2]:= v5 @kind object;
  #L465906.  v2:= 4I;
  #L465908.  v0[v2]:= v6 @kind object;
  #L46590c.  v2:= 5I;
  #L46590e.  v0[v2]:= v7 @kind object;
  #L465912.  v2:= 6I;
  #L465914.  v0[v2]:= v8 @kind object;
  #L465918.  v2:= 7I;
  #L46591a.  v0[v2]:= v9 @kind object;
  #L46591e.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465924.  v2:= temp @kind object;
  #L465926.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46592c.  v3:= temp;
  #L46592e.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465934.  v2:= temp @kind object;
  #L465936.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `org.reactivestreams.Publisher` v10 @kind object, `io.reactivex.rxjava3.functions.Function9` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465948.  v0:= "source1 is null" @kind object;
  #L46594c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465952.  v0:= "source2 is null" @kind object;
  #L465956.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46595c.  v0:= "source3 is null" @kind object;
  #L465960.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465966.  v0:= "source4 is null" @kind object;
  #L46596a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465970.  v0:= "source5 is null" @kind object;
  #L465974.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46597a.  v0:= "source6 is null" @kind object;
  #L46597e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465984.  v0:= "source7 is null" @kind object;
  #L465988.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46598e.  v0:= "source8 is null" @kind object;
  #L465992.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465998.  v0:= "source9 is null" @kind object;
  #L46599c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4659a2.  v0:= "combiner is null" @kind object;
  #L4659a6.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4659ac.  v0:= 9I;
  #L4659b0.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4659b4.  v1:= 0I;
  #L4659b6.  v0[v1]:= v2 @kind object;
  #L4659ba.  v2:= 1I;
  #L4659bc.  v0[v2]:= v3 @kind object;
  #L4659c0.  v2:= 2I;
  #L4659c2.  v0[v2]:= v4 @kind object;
  #L4659c6.  v2:= 3I;
  #L4659c8.  v0[v2]:= v5 @kind object;
  #L4659cc.  v2:= 4I;
  #L4659ce.  v0[v2]:= v6 @kind object;
  #L4659d2.  v2:= 5I;
  #L4659d4.  v0[v2]:= v7 @kind object;
  #L4659d8.  v2:= 6I;
  #L4659da.  v0[v2]:= v8 @kind object;
  #L4659de.  v2:= 7I;
  #L4659e0.  v0[v2]:= v9 @kind object;
  #L4659e4.  v2:= 8I;
  #L4659e8.  v0[v2]:= v10 @kind object;
  #L4659ec.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4659f2.  v2:= temp @kind object;
  #L4659f4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4659fa.  v3:= temp;
  #L4659fc.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465a02.  v2:= temp @kind object;
  #L465a04.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestArray`(`org.reactivestreams.Publisher`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L465a18.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465a1e.  v0:= temp;
  #L465a20.  call temp:= `combineLatestArray`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465a26.  v1:= temp @kind object;
  #L465a28.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestArray`(`org.reactivestreams.Publisher`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465a3c.  v0:= "sources is null" @kind object;
  #L465a40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465a46.  v0:= length @variable v2;
  #L465a48.  if v0 != 0 then goto L465a56;
  #L465a4c.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465a52.  v2:= temp @kind object;
  #L465a54.  return v2 @kind object;
  #L465a56.  v0:= "combiner is null" @kind object;
  #L465a5a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465a60.  v0:= "bufferSize" @kind object;
  #L465a64.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465a6a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest`;
  #L465a6e.  v1:= 0I;
  #L465a70.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L465a76.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465a7c.  v2:= temp @kind object;
  #L465a7e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestArrayDelayError`(`org.reactivestreams.Publisher`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArrayDelayError:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L465a90.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465a96.  v0:= temp;
  #L465a98.  call temp:= `combineLatestArrayDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArrayDelayError:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465a9e.  v1:= temp @kind object;
  #L465aa0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestArrayDelayError`(`org.reactivestreams.Publisher`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArrayDelayError:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465ab4.  v0:= "sources is null" @kind object;
  #L465ab8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465abe.  v0:= "combiner is null" @kind object;
  #L465ac2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465ac8.  v0:= "bufferSize" @kind object;
  #L465acc.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465ad2.  v0:= length @variable v2;
  #L465ad4.  if v0 != 0 then goto L465ae2;
  #L465ad8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465ade.  v2:= temp @kind object;
  #L465ae0.  return v2 @kind object;
  #L465ae2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest`;
  #L465ae6.  v1:= 1I;
  #L465ae8.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L465aee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465af4.  v2:= temp @kind object;
  #L465af6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestDelayError`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L465b08.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465b0e.  v0:= temp;
  #L465b10.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465b16.  v1:= temp @kind object;
  #L465b18.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestDelayError`(`java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465b2c.  v0:= "sources is null" @kind object;
  #L465b30.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465b36.  v0:= "combiner is null" @kind object;
  #L465b3a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465b40.  v0:= "bufferSize" @kind object;
  #L465b44.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465b4a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest`;
  #L465b4e.  v1:= 1I;
  #L465b50.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L465b56.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465b5c.  v2:= temp @kind object;
  #L465b5e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L465ba0.  v0:= "sources is null" @kind object;
  #L465ba4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465baa.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465bb0.  v3:= temp @kind object;
  #L465bb2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465bb8.  v0:= temp @kind object;
  #L465bba.  v1:= 0I;
  #L465bbc.  v2:= 2I;
  #L465bbe.  call temp:= `concatMapDelayError`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L465bc4.  v3:= temp @kind object;
  #L465bc6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L465bd8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465bde.  v0:= temp;
  #L465be0.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465be6.  v1:= temp @kind object;
  #L465be8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L465bfc.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465c02.  v1:= temp @kind object;
  #L465c04.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465c0a.  v0:= temp @kind object;
  #L465c0c.  call temp:= `concatMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L465c12.  v1:= temp @kind object;
  #L465c14.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465c28.  v0:= "source1 is null" @kind object;
  #L465c2c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465c32.  v0:= "source2 is null" @kind object;
  #L465c36.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465c3c.  v0:= 2I;
  #L465c3e.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L465c42.  v1:= 0I;
  #L465c44.  v0[v1]:= v2 @kind object;
  #L465c48.  v2:= 1I;
  #L465c4a.  v0[v2]:= v3 @kind object;
  #L465c4e.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465c54.  v2:= temp @kind object;
  #L465c56.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465c68.  v0:= "source1 is null" @kind object;
  #L465c6c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465c72.  v0:= "source2 is null" @kind object;
  #L465c76.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465c7c.  v0:= "source3 is null" @kind object;
  #L465c80.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465c86.  v0:= 3I;
  #L465c88.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L465c8c.  v1:= 0I;
  #L465c8e.  v0[v1]:= v2 @kind object;
  #L465c92.  v2:= 1I;
  #L465c94.  v0[v2]:= v3 @kind object;
  #L465c98.  v2:= 2I;
  #L465c9a.  v0[v2]:= v4 @kind object;
  #L465c9e.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465ca4.  v2:= temp @kind object;
  #L465ca6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465cb8.  v0:= "source1 is null" @kind object;
  #L465cbc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465cc2.  v0:= "source2 is null" @kind object;
  #L465cc6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465ccc.  v0:= "source3 is null" @kind object;
  #L465cd0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465cd6.  v0:= "source4 is null" @kind object;
  #L465cda.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465ce0.  v0:= 4I;
  #L465ce2.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L465ce6.  v1:= 0I;
  #L465ce8.  v0[v1]:= v2 @kind object;
  #L465cec.  v2:= 1I;
  #L465cee.  v0[v2]:= v3 @kind object;
  #L465cf2.  v2:= 2I;
  #L465cf4.  v0[v2]:= v4 @kind object;
  #L465cf8.  v2:= 3I;
  #L465cfa.  v0[v2]:= v5 @kind object;
  #L465cfe.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465d04.  v2:= temp @kind object;
  #L465d06.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArray`(`org.reactivestreams.Publisher`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L465d18.  v0:= "sources is null" @kind object;
  #L465d1c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465d22.  v0:= length @variable v3;
  #L465d24.  if v0 != 0 then goto L465d32;
  #L465d28.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465d2e.  v3:= temp @kind object;
  #L465d30.  return v3 @kind object;
  #L465d32.  v0:= length @variable v3;
  #L465d34.  v1:= 1I;
  #L465d36.  v2:= 0I;
  #L465d38.  if v0 != v1 then goto L465d4a;
  #L465d3c.  v3:= v3[v2] @kind object;
  #L465d40.  call temp:= `fromPublisher`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465d46.  v3:= temp @kind object;
  #L465d48.  return v3 @kind object;
  #L465d4a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatArray`;
  #L465d4e.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatArray;.<init>:([Lorg/reactivestreams/Publisher;Z)V` @kind direct;
  #L465d54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465d5a.  v3:= temp @kind object;
  #L465d5c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayDelayError`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayDelayError:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465d70.  v0:= "sources is null" @kind object;
  #L465d74.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465d7a.  v0:= length @variable v2;
  #L465d7c.  if v0 != 0 then goto L465d8a;
  #L465d80.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465d86.  v2:= temp @kind object;
  #L465d88.  return v2 @kind object;
  #L465d8a.  v0:= length @variable v2;
  #L465d8c.  v1:= 1I;
  #L465d8e.  if v0 != v1 then goto L465da2;
  #L465d92.  v0:= 0I;
  #L465d94.  v2:= v2[v0] @kind object;
  #L465d98.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465d9e.  v2:= temp @kind object;
  #L465da0.  return v2 @kind object;
  #L465da2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatArray`;
  #L465da6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatArray;.<init>:([Lorg/reactivestreams/Publisher;Z)V` @kind direct;
  #L465dac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465db2.  v2:= temp @kind object;
  #L465db4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEager`(`int` v7 , `int` v8 , `org.reactivestreams.Publisher`[] v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEager:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L465dc8.  v0:= "sources is null" @kind object;
  #L465dcc.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465dd2.  v0:= "maxConcurrency" @kind object;
  #L465dd6.  call temp:= `verifyPositive`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465ddc.  v0:= "prefetch" @kind object;
  #L465de0.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465de6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L465dea.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray`;
  #L465dee.  call `<init>`(v2, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L465df4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465dfa.  v3:= temp @kind object;
  #L465dfc.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L465e00.  v1:= v0 @kind object;
  #L465e02.  v4:= v7;
  #L465e04.  v5:= v8;
  #L465e06.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L465e0c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465e12.  v7:= temp @kind object;
  #L465e14.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEager`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEager:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465e28.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465e2e.  v0:= temp;
  #L465e30.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465e36.  v1:= temp;
  #L465e38.  call temp:= `concatArrayEager`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEager:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465e3e.  v2:= temp @kind object;
  #L465e40.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEagerDelayError`(`int` v2 , `int` v3 , `org.reactivestreams.Publisher`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEagerDelayError:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465e54.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465e5a.  v4:= temp @kind object;
  #L465e5c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465e62.  v0:= temp @kind object;
  #L465e64.  v1:= 1I;
  #L465e66.  call temp:= `concatMapEagerDelayError`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L465e6c.  v2:= temp @kind object;
  #L465e6e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEagerDelayError`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEagerDelayError:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465e80.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465e86.  v0:= temp;
  #L465e88.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465e8e.  v1:= temp;
  #L465e90.  call temp:= `concatArrayEagerDelayError`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEagerDelayError:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465e96.  v2:= temp @kind object;
  #L465e98.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L465eac.  v0:= "sources is null" @kind object;
  #L465eb0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465eb6.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465ebc.  v1:= temp @kind object;
  #L465ebe.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465ec4.  v0:= temp @kind object;
  #L465ec6.  call temp:= `concatMapDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L465ecc.  v1:= temp @kind object;
  #L465ece.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465ee0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465ee6.  v0:= temp;
  #L465ee8.  v1:= 1I;
  #L465eea.  call temp:= `concatDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatDelayError:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465ef0.  v2:= temp @kind object;
  #L465ef2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatDelayError:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L465f04.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465f0a.  v1:= temp @kind object;
  #L465f0c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465f12.  v0:= temp @kind object;
  #L465f14.  call temp:= `concatMapDelayError`(v1, v0, v3, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L465f1a.  v1:= temp @kind object;
  #L465f1c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465f30.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465f36.  v0:= temp;
  #L465f38.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465f3e.  v1:= temp;
  #L465f40.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465f46.  v2:= temp @kind object;
  #L465f48.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L465f5c.  v0:= "sources is null" @kind object;
  #L465f60.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465f66.  v0:= "maxConcurrency" @kind object;
  #L465f6a.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465f70.  v0:= "prefetch" @kind object;
  #L465f74.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465f7a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L465f7e.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable`;
  #L465f82.  call `<init>`(v2, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L465f88.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L465f8e.  v3:= temp @kind object;
  #L465f90.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L465f94.  v1:= v0 @kind object;
  #L465f96.  v4:= v8;
  #L465f98.  v5:= v9;
  #L465f9a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L465fa0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465fa6.  v7:= temp @kind object;
  #L465fa8.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L465fbc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465fc2.  v0:= temp;
  #L465fc4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L465fca.  v1:= temp;
  #L465fcc.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465fd2.  v2:= temp @kind object;
  #L465fd4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L465fe8.  v0:= "sources is null" @kind object;
  #L465fec.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465ff2.  v0:= "maxConcurrency" @kind object;
  #L465ff6.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465ffc.  v0:= "prefetch" @kind object;
  #L466000.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466006.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEagerPublisher`;
  #L46600a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L466010.  v3:= temp @kind object;
  #L466012.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L466016.  v1:= v0 @kind object;
  #L466018.  v2:= v7 @kind object;
  #L46601a.  v4:= v8;
  #L46601c.  v5:= v9;
  #L46601e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEagerPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L466024.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46602a.  v7:= temp @kind object;
  #L46602c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L466040.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466046.  v0:= temp;
  #L466048.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46604e.  v1:= temp;
  #L466050.  call temp:= `concatEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466056.  v2:= temp @kind object;
  #L466058.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46606c.  v0:= "sources is null" @kind object;
  #L466070.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466076.  v0:= "maxConcurrency" @kind object;
  #L46607a.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466080.  v0:= "prefetch" @kind object;
  #L466084.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46608a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L46608e.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable`;
  #L466092.  call `<init>`(v2, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L466098.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46609e.  v3:= temp @kind object;
  #L4660a0.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4660a4.  v1:= v0 @kind object;
  #L4660a6.  v4:= v8;
  #L4660a8.  v5:= v9;
  #L4660aa.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4660b0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4660b6.  v7:= temp @kind object;
  #L4660b8.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4660cc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4660d2.  v0:= temp;
  #L4660d4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4660da.  v1:= temp;
  #L4660dc.  call temp:= `concatEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4660e2.  v2:= temp @kind object;
  #L4660e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4660f8.  v0:= "sources is null" @kind object;
  #L4660fc.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466102.  v0:= "maxConcurrency" @kind object;
  #L466106.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46610c.  v0:= "prefetch" @kind object;
  #L466110.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466116.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEagerPublisher`;
  #L46611a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L466120.  v3:= temp @kind object;
  #L466122.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L466126.  v1:= v0 @kind object;
  #L466128.  v2:= v7 @kind object;
  #L46612a.  v4:= v8;
  #L46612c.  v5:= v9;
  #L46612e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEagerPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L466134.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46613a.  v7:= temp @kind object;
  #L46613c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `create`(`io.reactivex.rxjava3.core.FlowableOnSubscribe` v1 @kind object, `io.reactivex.rxjava3.core.BackpressureStrategy` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.create:(Lio/reactivex/rxjava3/core/FlowableOnSubscribe;Lio/reactivex/rxjava3/core/BackpressureStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L466738.  v0:= "source is null" @kind object;
  #L46673c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466742.  v0:= "mode is null" @kind object;
  #L466746.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46674c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate`;
  #L466750.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate;.<init>:(Lio/reactivex/rxjava3/core/FlowableOnSubscribe;Lio/reactivex/rxjava3/core/BackpressureStrategy;)V` @kind direct;
  #L466756.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46675c.  v1:= temp @kind object;
  #L46675e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `d`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L46a274.  v0:= "itemTimeoutIndicator is null" @kind object;
  #L46a278.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a27e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout`;
  #L46a282.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46a288.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a28e.  v2:= temp @kind object;
  #L46a290.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `defer`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.defer:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L466834.  v0:= "supplier is null" @kind object;
  #L466838.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46683e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDefer`;
  #L466842.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L466848.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46684e.  v1:= temp @kind object;
  #L466850.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L466e14.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableEmpty.INSTANCE` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L466e18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466e1e.  v0:= temp @kind object;
  #L466e20.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `error`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L466e34.  v0:= "supplier is null" @kind object;
  #L466e38.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466e3e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableError`;
  #L466e42.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableError;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L466e48.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466e4e.  v1:= temp @kind object;
  #L466e50.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L466e64.  v0:= "throwable is null" @kind object;
  #L466e68.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466e6e.  call temp:= `justSupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L466e74.  v1:= temp @kind object;
  #L466e76.  call temp:= `error`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466e7c.  v1:= temp @kind object;
  #L466e7e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromAction`(`io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromAction:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L467374.  v0:= "action is null" @kind object;
  #L467378.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46737e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction`;
  #L467382.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L467388.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46738e.  v1:= temp @kind object;
  #L467390.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromArray`(`java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4673a4.  v0:= "items is null" @kind object;
  #L4673a8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4673ae.  v0:= length @variable v2;
  #L4673b0.  if v0 != 0 then goto L4673be;
  #L4673b4.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4673ba.  v2:= temp @kind object;
  #L4673bc.  return v2 @kind object;
  #L4673be.  v0:= length @variable v2;
  #L4673c0.  v1:= 1I;
  #L4673c2.  if v0 != v1 then goto L4673d6;
  #L4673c6.  v0:= 0I;
  #L4673c8.  v2:= v2[v0] @kind object;
  #L4673cc.  call temp:= `just`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4673d2.  v2:= temp @kind object;
  #L4673d4.  return v2 @kind object;
  #L4673d6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray`;
  #L4673da.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L4673e0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4673e6.  v2:= temp @kind object;
  #L4673e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4673fc.  v0:= "callable is null" @kind object;
  #L467400.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467406.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable`;
  #L46740a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L467410.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467416.  v1:= temp @kind object;
  #L467418.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromCompletable`(`io.reactivex.rxjava3.core.CompletableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromCompletable:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46742c.  v0:= "completableSource is null" @kind object;
  #L467430.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467436.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCompletable`;
  #L46743a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromCompletable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L467440.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467446.  v1:= temp @kind object;
  #L467448.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromCompletionStage`(`java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromCompletionStage:(Ljava/util/concurrent/CompletionStage;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46745c.  v0:= "stage is null" @kind object;
  #L467460.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467466.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage`;
  #L46746a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @kind direct;
  #L467470.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467476.  v1:= temp @kind object;
  #L467478.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromFuture`(`java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46748c.  v0:= "future is null" @kind object;
  #L467490.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467496.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromFuture`;
  #L46749a.  v1:= 0L;
  #L46749e.  v3:= 0I;
  #L4674a0.  call `<init>`(v0, v4, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L4674a6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4674ac.  v4:= temp @kind object;
  #L4674ae.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4674c0.  v0:= "future is null" @kind object;
  #L4674c4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4674ca.  v0:= "unit is null" @kind object;
  #L4674ce.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4674d4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromFuture`;
  #L4674d8.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L4674de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4674e4.  v1:= temp @kind object;
  #L4674e6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromIterable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4674f8.  v0:= "source is null" @kind object;
  #L4674fc.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467502.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable`;
  #L467506.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L46750c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467512.  v1:= temp @kind object;
  #L467514.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L467528.  v0:= "maybe is null" @kind object;
  #L46752c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467532.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToFlowable`;
  #L467536.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToFlowable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46753c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467542.  v1:= temp @kind object;
  #L467544.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromObservable`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.BackpressureStrategy` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromObservable:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/BackpressureStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L467558.  v0:= "source is null" @kind object;
  #L46755c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467562.  v0:= "strategy is null" @kind object;
  #L467566.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46756c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable`;
  #L467570.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L467576.  v1:= `@@io.reactivex.rxjava3.core.Flowable$a.a` @type ^`int`[] @kind object;
  #L46757a.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L467580.  v2:= temp;
  #L467582.  v1:= v1[v2];
  #L467586.  v2:= 1I;
  #L467588.  if v1 == v2 then goto L4675c8;
  #L46758c.  v2:= 2I;
  #L46758e.  if v1 == v2 then goto L4675be;
  #L467592.  v2:= 3I;
  #L467594.  if v1 == v2 then goto L4675bc;
  #L467598.  v2:= 4I;
  #L46759a.  if v1 == v2 then goto L4675a8;
  #L46759e.  call temp:= `onBackpressureBuffer`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4675a4.  v1:= temp @kind object;
  #L4675a6.  return v1 @kind object;
  #L4675a8.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureError`;
  #L4675ac.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureError;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4675b2.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4675b8.  v1:= temp @kind object;
  #L4675ba.  return v1 @kind object;
  #L4675bc.  return v0 @kind object;
  #L4675be.  call temp:= `onBackpressureLatest`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureLatest:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4675c4.  v1:= temp @kind object;
  #L4675c6.  return v1 @kind object;
  #L4675c8.  call temp:= `onBackpressureDrop`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureDrop:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4675ce.  v1:= temp @kind object;
  #L4675d0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromOptional`(`java.util.Optional` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromOptional:(Ljava/util/Optional;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4675e4.  v0:= "optional is null" @kind object;
  #L4675e8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4675ee.  v0:= `@@io.reactivex.rxjava3.core.b.a` @type ^`io.reactivex.rxjava3.core.b` @kind object;
  #L4675f2.  call temp:= `map`(v1, v0) @signature `Ljava/util/Optional;.map:(Ljava/util/function/Function;)Ljava/util/Optional;` @kind virtual;
  #L4675f8.  v1:= temp @kind object;
  #L4675fa.  v0:= `@@io.reactivex.rxjava3.core.c.a` @type ^`io.reactivex.rxjava3.core.c` @kind object;
  #L4675fe.  call temp:= `orElseGet`(v1, v0) @signature `Ljava/util/Optional;.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;` @kind virtual;
  #L467604.  v1:= temp @kind object;
  #L467606.  v1:= (`io.reactivex.rxjava3.core.Flowable`) v1 @kind object;
  #L46760a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46761c.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Flowable` @kind boolean;
  #L467620.  if v0 == 0 then goto L467632;
  #L467624.  v1:= (`io.reactivex.rxjava3.core.Flowable`) v1 @kind object;
  #L467628.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46762e.  v1:= temp @kind object;
  #L467630.  return v1 @kind object;
  #L467632.  v0:= "publisher is null" @kind object;
  #L467636.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46763c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher`;
  #L467640.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L467646.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46764c.  v1:= temp @kind object;
  #L46764e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L467660.  v0:= "run is null" @kind object;
  #L467664.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46766a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromRunnable`;
  #L46766e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L467674.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46767a.  v1:= temp @kind object;
  #L46767c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromSingle`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromSingle:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L467690.  v0:= "source is null" @kind object;
  #L467694.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46769a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable`;
  #L46769e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4676a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4676aa.  v1:= temp @kind object;
  #L4676ac.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromStream`(`java.util.stream.Stream` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromStream:(Ljava/util/stream/Stream;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4676c0.  v0:= "stream is null" @kind object;
  #L4676c4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4676ca.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream`;
  #L4676ce.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.<init>:(Ljava/util/stream/Stream;)V` @kind direct;
  #L4676d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4676da.  v1:= temp @kind object;
  #L4676dc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromSupplier`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromSupplier:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4676f0.  v0:= "supplier is null" @kind object;
  #L4676f4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4676fa.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromSupplier`;
  #L4676fe.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L467704.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46770a.  v1:= temp @kind object;
  #L46770c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467720.  v0:= "generator is null" @kind object;
  #L467724.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46772a.  call temp:= `nullSupplier`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.nullSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L467730.  v0:= temp @kind object;
  #L467732.  call temp:= `simpleGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.simpleGenerator:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L467738.  v2:= temp @kind object;
  #L46773a.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L467740.  v1:= temp @kind object;
  #L467742.  call temp:= `generate`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467748.  v2:= temp @kind object;
  #L46774a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46775c.  v0:= "generator is null" @kind object;
  #L467760.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467766.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.simpleBiGenerator:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L46776c.  v2:= temp @kind object;
  #L46776e.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L467774.  v0:= temp @kind object;
  #L467776.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46777c.  v1:= temp @kind object;
  #L46777e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L467790.  v0:= "generator is null" @kind object;
  #L467794.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46779a.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.simpleBiGenerator:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L4677a0.  v2:= temp @kind object;
  #L4677a2.  call temp:= `generate`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4677a8.  v1:= temp @kind object;
  #L4677aa.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4677bc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4677c2.  v0:= temp @kind object;
  #L4677c4.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4677ca.  v1:= temp @kind object;
  #L4677cc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4677e0.  v0:= "initialState is null" @kind object;
  #L4677e4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4677ea.  v0:= "generator is null" @kind object;
  #L4677ee.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4677f4.  v0:= "disposeState is null" @kind object;
  #L4677f8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4677fe.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate`;
  #L467802.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGenerate;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L467808.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46780e.  v1:= temp @kind object;
  #L467810.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `interval`(`long` v6 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L467a38.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L467a3e.  v5:= temp @kind object;
  #L467a40.  v0:= v6 @kind wide;
  #L467a42.  v2:= v8 @kind wide;
  #L467a44.  v4:= v10 @kind object;
  #L467a46.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467a4c.  v6:= temp @kind object;
  #L467a4e.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `interval`(`long` v8 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L467a60.  v0:= "unit is null" @kind object;
  #L467a64.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467a6a.  v0:= "scheduler is null" @kind object;
  #L467a6e.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467a74.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval`;
  #L467a78.  v1:= 0L;
  #L467a7c.  call temp:= `max`(v1, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L467a82.  v8:= temp @kind wide;
  #L467a84.  call temp:= `max`(v1, v10) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L467a8a.  v4:= temp @kind wide;
  #L467a8c.  v1:= v0 @kind object;
  #L467a8e.  v2:= v8 @kind wide;
  #L467a90.  v6:= v12 @kind object;
  #L467a92.  v7:= v13 @kind object;
  #L467a94.  call `<init>`(v1, v2, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L467a9a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467aa0.  v8:= temp @kind object;
  #L467aa2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4679ec.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4679f2.  v5:= temp @kind object;
  #L4679f4.  v0:= v6 @kind wide;
  #L4679f6.  v2:= v6 @kind wide;
  #L4679f8.  v4:= v8 @kind object;
  #L4679fa.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467a00.  v6:= temp @kind object;
  #L467a02.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object, `io.reactivex.rxjava3.core.Scheduler` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L467a14.  v0:= v6 @kind wide;
  #L467a16.  v2:= v6 @kind wide;
  #L467a18.  v4:= v8 @kind object;
  #L467a1a.  v5:= v9 @kind object;
  #L467a1c.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467a22.  v6:= temp @kind object;
  #L467a24.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `intervalRange`(`long` v10 , `long` v12 , `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L467ab4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L467aba.  v9:= temp @kind object;
  #L467abc.  v0:= v10 @kind wide;
  #L467abe.  v2:= v12 @kind wide;
  #L467ac0.  v4:= v14 @kind wide;
  #L467ac2.  v6:= v16 @kind wide;
  #L467ac6.  v8:= v18 @kind object;
  #L467aca.  call temp:= `intervalRange`(v0, v2, v4, v6, v8, v9) @signature `Lio/reactivex/rxjava3/core/Flowable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467ad0.  v0:= temp @kind object;
  #L467ad2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `intervalRange`(`long` v16 , `long` v18 , `long` v20 , `long` v22 , `java.util.concurrent.TimeUnit` v24 @kind object, `io.reactivex.rxjava3.core.Scheduler` v25 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L467ae4.  v0:= v18 @kind wide;
  #L467ae8.  v2:= v20 @kind wide;
  #L467aec.  v9:= v24 @kind object;
  #L467af0.  v10:= v25 @kind object;
  #L467af4.  v4:= 0L;
  #L467af8.  v6:= lcmp(v0, v4);
  #L467afc.  if v6 < 0 then goto L467b92;
  #L467b00.  if v6 != 0 then goto L467b16;
  #L467b04.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467b0a.  v0:= temp @kind object;
  #L467b0c.  call temp:= `delay`(v0, v2, v9, v10) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L467b12.  v0:= temp @kind object;
  #L467b14.  return v0 @kind object;
  #L467b16.  v6:= 1L;
  #L467b1a.  v0:= v0 - v6 @kind long;
  #L467b1c.  v6:= v16 + v0 @kind long;
  #L467b20.  v0:= lcmp(v16, v4);
  #L467b24.  if v0 <= 0 then goto L467b42;
  #L467b28.  v0:= lcmp(v6, v4);
  #L467b2c.  if v0 < 0 then goto L467b32;
  #L467b30.  goto L467b42;
  #L467b32.  v0:= new `java.lang.IllegalArgumentException`;
  #L467b36.  v1:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L467b3a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L467b40.  throw v0;
  #L467b42.  v0:= "unit is null" @kind object;
  #L467b46.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467b4c.  v0:= "scheduler is null" @kind object;
  #L467b50.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467b56.  v11:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableIntervalRange`;
  #L467b5a.  call temp:= `max`(v4, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L467b60.  v12:= temp @kind wide;
  #L467b62.  v0:= v22 @kind wide;
  #L467b66.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L467b6c.  v14:= temp @kind wide;
  #L467b6e.  v0:= v11 @kind object;
  #L467b70.  v1:= v16 @kind wide;
  #L467b74.  v3:= v6 @kind wide;
  #L467b76.  v5:= v12 @kind wide;
  #L467b78.  v7:= v14 @kind wide;
  #L467b7a.  v9:= v24 @kind object;
  #L467b7e.  v10:= v25 @kind object;
  #L467b82.  call `<init>`(v0, v1, v3, v5, v7, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableIntervalRange;.<init>:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L467b88.  call temp:= `onAssembly`(v11) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467b8e.  v0:= temp @kind object;
  #L467b90.  return v0 @kind object;
  #L467b92.  v2:= new `java.lang.IllegalArgumentException`;
  #L467b96.  v3:= new `java.lang.StringBuilder`;
  #L467b9a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L467ba0.  v4:= "count >= 0 required but it was " @kind object;
  #L467ba4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467baa.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L467bb0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L467bb6.  v0:= temp @kind object;
  #L467bb8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L467bbe.  throw v2;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L467c28.  v0:= "item is null" @kind object;
  #L467c2c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467c32.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableJust`;
  #L467c36.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L467c3c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467c42.  v1:= temp @kind object;
  #L467c44.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467c58.  v0:= "item1 is null" @kind object;
  #L467c5c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467c62.  v0:= "item2 is null" @kind object;
  #L467c66.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467c6c.  v0:= 2I;
  #L467c6e.  v0:= new `java.lang.Object`[v0];
  #L467c72.  v1:= 0I;
  #L467c74.  v0[v1]:= v2 @kind object;
  #L467c78.  v2:= 1I;
  #L467c7a.  v0[v2]:= v3 @kind object;
  #L467c7e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467c84.  v2:= temp @kind object;
  #L467c86.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467c98.  v0:= "item1 is null" @kind object;
  #L467c9c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467ca2.  v0:= "item2 is null" @kind object;
  #L467ca6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467cac.  v0:= "item3 is null" @kind object;
  #L467cb0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467cb6.  v0:= 3I;
  #L467cb8.  v0:= new `java.lang.Object`[v0];
  #L467cbc.  v1:= 0I;
  #L467cbe.  v0[v1]:= v2 @kind object;
  #L467cc2.  v2:= 1I;
  #L467cc4.  v0[v2]:= v3 @kind object;
  #L467cc8.  v2:= 2I;
  #L467cca.  v0[v2]:= v4 @kind object;
  #L467cce.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467cd4.  v2:= temp @kind object;
  #L467cd6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467ce8.  v0:= "item1 is null" @kind object;
  #L467cec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467cf2.  v0:= "item2 is null" @kind object;
  #L467cf6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467cfc.  v0:= "item3 is null" @kind object;
  #L467d00.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467d06.  v0:= "item4 is null" @kind object;
  #L467d0a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467d10.  v0:= 4I;
  #L467d12.  v0:= new `java.lang.Object`[v0];
  #L467d16.  v1:= 0I;
  #L467d18.  v0[v1]:= v2 @kind object;
  #L467d1c.  v2:= 1I;
  #L467d1e.  v0[v2]:= v3 @kind object;
  #L467d22.  v2:= 2I;
  #L467d24.  v0[v2]:= v4 @kind object;
  #L467d28.  v2:= 3I;
  #L467d2a.  v0[v2]:= v5 @kind object;
  #L467d2e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467d34.  v2:= temp @kind object;
  #L467d36.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467d48.  v0:= "item1 is null" @kind object;
  #L467d4c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467d52.  v0:= "item2 is null" @kind object;
  #L467d56.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467d5c.  v0:= "item3 is null" @kind object;
  #L467d60.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467d66.  v0:= "item4 is null" @kind object;
  #L467d6a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467d70.  v0:= "item5 is null" @kind object;
  #L467d74.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467d7a.  v0:= 5I;
  #L467d7c.  v0:= new `java.lang.Object`[v0];
  #L467d80.  v1:= 0I;
  #L467d82.  v0[v1]:= v2 @kind object;
  #L467d86.  v2:= 1I;
  #L467d88.  v0[v2]:= v3 @kind object;
  #L467d8c.  v2:= 2I;
  #L467d8e.  v0[v2]:= v4 @kind object;
  #L467d92.  v2:= 3I;
  #L467d94.  v0[v2]:= v5 @kind object;
  #L467d98.  v2:= 4I;
  #L467d9a.  v0[v2]:= v6 @kind object;
  #L467d9e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467da4.  v2:= temp @kind object;
  #L467da6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467db8.  v0:= "item1 is null" @kind object;
  #L467dbc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467dc2.  v0:= "item2 is null" @kind object;
  #L467dc6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467dcc.  v0:= "item3 is null" @kind object;
  #L467dd0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467dd6.  v0:= "item4 is null" @kind object;
  #L467dda.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467de0.  v0:= "item5 is null" @kind object;
  #L467de4.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467dea.  v0:= "item6 is null" @kind object;
  #L467dee.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467df4.  v0:= 6I;
  #L467df6.  v0:= new `java.lang.Object`[v0];
  #L467dfa.  v1:= 0I;
  #L467dfc.  v0[v1]:= v2 @kind object;
  #L467e00.  v2:= 1I;
  #L467e02.  v0[v2]:= v3 @kind object;
  #L467e06.  v2:= 2I;
  #L467e08.  v0[v2]:= v4 @kind object;
  #L467e0c.  v2:= 3I;
  #L467e0e.  v0[v2]:= v5 @kind object;
  #L467e12.  v2:= 4I;
  #L467e14.  v0[v2]:= v6 @kind object;
  #L467e18.  v2:= 5I;
  #L467e1a.  v0[v2]:= v7 @kind object;
  #L467e1e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467e24.  v2:= temp @kind object;
  #L467e26.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467e38.  v0:= "item1 is null" @kind object;
  #L467e3c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467e42.  v0:= "item2 is null" @kind object;
  #L467e46.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467e4c.  v0:= "item3 is null" @kind object;
  #L467e50.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467e56.  v0:= "item4 is null" @kind object;
  #L467e5a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467e60.  v0:= "item5 is null" @kind object;
  #L467e64.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467e6a.  v0:= "item6 is null" @kind object;
  #L467e6e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467e74.  v0:= "item7 is null" @kind object;
  #L467e78.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467e7e.  v0:= 7I;
  #L467e80.  v0:= new `java.lang.Object`[v0];
  #L467e84.  v1:= 0I;
  #L467e86.  v0[v1]:= v2 @kind object;
  #L467e8a.  v2:= 1I;
  #L467e8c.  v0[v2]:= v3 @kind object;
  #L467e90.  v2:= 2I;
  #L467e92.  v0[v2]:= v4 @kind object;
  #L467e96.  v2:= 3I;
  #L467e98.  v0[v2]:= v5 @kind object;
  #L467e9c.  v2:= 4I;
  #L467e9e.  v0[v2]:= v6 @kind object;
  #L467ea2.  v2:= 5I;
  #L467ea4.  v0[v2]:= v7 @kind object;
  #L467ea8.  v2:= 6I;
  #L467eaa.  v0[v2]:= v8 @kind object;
  #L467eae.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467eb4.  v2:= temp @kind object;
  #L467eb6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467ec8.  v0:= "item1 is null" @kind object;
  #L467ecc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467ed2.  v0:= "item2 is null" @kind object;
  #L467ed6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467edc.  v0:= "item3 is null" @kind object;
  #L467ee0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467ee6.  v0:= "item4 is null" @kind object;
  #L467eea.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467ef0.  v0:= "item5 is null" @kind object;
  #L467ef4.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467efa.  v0:= "item6 is null" @kind object;
  #L467efe.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467f04.  v0:= "item7 is null" @kind object;
  #L467f08.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467f0e.  v0:= "item8 is null" @kind object;
  #L467f12.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467f18.  v0:= 8I;
  #L467f1c.  v0:= new `java.lang.Object`[v0];
  #L467f20.  v1:= 0I;
  #L467f22.  v0[v1]:= v2 @kind object;
  #L467f26.  v2:= 1I;
  #L467f28.  v0[v2]:= v3 @kind object;
  #L467f2c.  v2:= 2I;
  #L467f2e.  v0[v2]:= v4 @kind object;
  #L467f32.  v2:= 3I;
  #L467f34.  v0[v2]:= v5 @kind object;
  #L467f38.  v2:= 4I;
  #L467f3a.  v0[v2]:= v6 @kind object;
  #L467f3e.  v2:= 5I;
  #L467f40.  v0[v2]:= v7 @kind object;
  #L467f44.  v2:= 6I;
  #L467f46.  v0[v2]:= v8 @kind object;
  #L467f4a.  v2:= 7I;
  #L467f4c.  v0[v2]:= v9 @kind object;
  #L467f50.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467f56.  v2:= temp @kind object;
  #L467f58.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L467f6c.  v0:= "item1 is null" @kind object;
  #L467f70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467f76.  v0:= "item2 is null" @kind object;
  #L467f7a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467f80.  v0:= "item3 is null" @kind object;
  #L467f84.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467f8a.  v0:= "item4 is null" @kind object;
  #L467f8e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467f94.  v0:= "item5 is null" @kind object;
  #L467f98.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467f9e.  v0:= "item6 is null" @kind object;
  #L467fa2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467fa8.  v0:= "item7 is null" @kind object;
  #L467fac.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467fb2.  v0:= "item8 is null" @kind object;
  #L467fb6.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467fbc.  v0:= "item9 is null" @kind object;
  #L467fc0.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467fc6.  v0:= 9I;
  #L467fca.  v0:= new `java.lang.Object`[v0];
  #L467fce.  v1:= 0I;
  #L467fd0.  v0[v1]:= v2 @kind object;
  #L467fd4.  v2:= 1I;
  #L467fd6.  v0[v2]:= v3 @kind object;
  #L467fda.  v2:= 2I;
  #L467fdc.  v0[v2]:= v4 @kind object;
  #L467fe0.  v2:= 3I;
  #L467fe2.  v0[v2]:= v5 @kind object;
  #L467fe6.  v2:= 4I;
  #L467fe8.  v0[v2]:= v6 @kind object;
  #L467fec.  v2:= 5I;
  #L467fee.  v0[v2]:= v7 @kind object;
  #L467ff2.  v2:= 6I;
  #L467ff4.  v0[v2]:= v8 @kind object;
  #L467ff8.  v2:= 7I;
  #L467ffa.  v0[v2]:= v9 @kind object;
  #L467ffe.  v2:= 8I;
  #L468002.  v0[v2]:= v10 @kind object;
  #L468006.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46800c.  v2:= temp @kind object;
  #L46800e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L468020.  v0:= "item1 is null" @kind object;
  #L468024.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46802a.  v0:= "item2 is null" @kind object;
  #L46802e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468034.  v0:= "item3 is null" @kind object;
  #L468038.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46803e.  v0:= "item4 is null" @kind object;
  #L468042.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468048.  v0:= "item5 is null" @kind object;
  #L46804c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468052.  v0:= "item6 is null" @kind object;
  #L468056.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46805c.  v0:= "item7 is null" @kind object;
  #L468060.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468066.  v0:= "item8 is null" @kind object;
  #L46806a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468070.  v0:= "item9 is null" @kind object;
  #L468074.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46807a.  v0:= "item10 is null" @kind object;
  #L46807e.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468084.  v0:= 10I;
  #L468088.  v0:= new `java.lang.Object`[v0];
  #L46808c.  v1:= 0I;
  #L46808e.  v0[v1]:= v2 @kind object;
  #L468092.  v2:= 1I;
  #L468094.  v0[v2]:= v3 @kind object;
  #L468098.  v2:= 2I;
  #L46809a.  v0[v2]:= v4 @kind object;
  #L46809e.  v2:= 3I;
  #L4680a0.  v0[v2]:= v5 @kind object;
  #L4680a4.  v2:= 4I;
  #L4680a6.  v0[v2]:= v6 @kind object;
  #L4680aa.  v2:= 5I;
  #L4680ac.  v0[v2]:= v7 @kind object;
  #L4680b0.  v2:= 6I;
  #L4680b2.  v0[v2]:= v8 @kind object;
  #L4680b6.  v2:= 7I;
  #L4680b8.  v0[v2]:= v9 @kind object;
  #L4680bc.  v2:= 8I;
  #L4680c0.  v0[v2]:= v10 @kind object;
  #L4680c4.  v2:= 9I;
  #L4680c8.  v0[v2]:= v11 @kind object;
  #L4680cc.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4680d2.  v2:= temp @kind object;
  #L4680d4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46819c.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4681a2.  v1:= temp @kind object;
  #L4681a4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4681aa.  v0:= temp @kind object;
  #L4681ac.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4681b2.  v1:= temp @kind object;
  #L4681b4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4681c8.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4681ce.  v1:= temp @kind object;
  #L4681d0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4681d6.  v0:= temp @kind object;
  #L4681d8.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4681de.  v1:= temp @kind object;
  #L4681e0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4681f4.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4681fa.  v2:= temp @kind object;
  #L4681fc.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L468202.  v0:= temp @kind object;
  #L468204.  v1:= 0I;
  #L468206.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46820c.  v2:= temp @kind object;
  #L46820e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L468220.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L468226.  v0:= temp;
  #L468228.  call temp:= `merge`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46822e.  v1:= temp @kind object;
  #L468230.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L468244.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46824a.  v1:= temp @kind object;
  #L46824c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L468252.  v0:= temp @kind object;
  #L468254.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46825a.  v1:= temp @kind object;
  #L46825c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L468270.  v0:= "source1 is null" @kind object;
  #L468274.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46827a.  v0:= "source2 is null" @kind object;
  #L46827e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468284.  v0:= 2I;
  #L468286.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L46828a.  v2:= 0I;
  #L46828c.  v1[v2]:= v3 @kind object;
  #L468290.  v3:= 1I;
  #L468292.  v1[v3]:= v4 @kind object;
  #L468296.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46829c.  v3:= temp @kind object;
  #L46829e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4682a4.  v4:= temp @kind object;
  #L4682a6.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4682ac.  v3:= temp @kind object;
  #L4682ae.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4682c0.  v0:= "source1 is null" @kind object;
  #L4682c4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4682ca.  v0:= "source2 is null" @kind object;
  #L4682ce.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4682d4.  v0:= "source3 is null" @kind object;
  #L4682d8.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4682de.  v0:= 3I;
  #L4682e0.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L4682e4.  v2:= 0I;
  #L4682e6.  v1[v2]:= v3 @kind object;
  #L4682ea.  v3:= 1I;
  #L4682ec.  v1[v3]:= v4 @kind object;
  #L4682f0.  v3:= 2I;
  #L4682f2.  v1[v3]:= v5 @kind object;
  #L4682f6.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4682fc.  v3:= temp @kind object;
  #L4682fe.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L468304.  v4:= temp @kind object;
  #L468306.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46830c.  v3:= temp @kind object;
  #L46830e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L468320.  v0:= "source1 is null" @kind object;
  #L468324.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46832a.  v0:= "source2 is null" @kind object;
  #L46832e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468334.  v0:= "source3 is null" @kind object;
  #L468338.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46833e.  v0:= "source4 is null" @kind object;
  #L468342.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468348.  v0:= 4I;
  #L46834a.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L46834e.  v2:= 0I;
  #L468350.  v1[v2]:= v3 @kind object;
  #L468354.  v3:= 1I;
  #L468356.  v1[v3]:= v4 @kind object;
  #L46835a.  v3:= 2I;
  #L46835c.  v1[v3]:= v5 @kind object;
  #L468360.  v3:= 3I;
  #L468362.  v1[v3]:= v6 @kind object;
  #L468366.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46836c.  v3:= temp @kind object;
  #L46836e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L468374.  v4:= temp @kind object;
  #L468376.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46837c.  v3:= temp @kind object;
  #L46837e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArray`(`int` v2 , `int` v3 , `org.reactivestreams.Publisher`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeArray:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L468390.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468396.  v4:= temp @kind object;
  #L468398.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46839e.  v0:= temp @kind object;
  #L4683a0.  v1:= 0I;
  #L4683a2.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4683a8.  v2:= temp @kind object;
  #L4683aa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArray`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4683bc.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4683c2.  v0:= temp @kind object;
  #L4683c4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4683ca.  v1:= temp @kind object;
  #L4683cc.  v2:= length @variable v2;
  #L4683ce.  call temp:= `flatMap`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4683d4.  v2:= temp @kind object;
  #L4683d6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArrayDelayError`(`int` v2 , `int` v3 , `org.reactivestreams.Publisher`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeArrayDelayError:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4683e8.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4683ee.  v4:= temp @kind object;
  #L4683f0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4683f6.  v0:= temp @kind object;
  #L4683f8.  v1:= 1I;
  #L4683fa.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468400.  v2:= temp @kind object;
  #L468402.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArrayDelayError`(`org.reactivestreams.Publisher`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeArrayDelayError:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L468414.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46841a.  v0:= temp @kind object;
  #L46841c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L468422.  v1:= temp @kind object;
  #L468424.  v3:= length @variable v3;
  #L468426.  v2:= 1I;
  #L468428.  call temp:= `flatMap`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46842e.  v3:= temp @kind object;
  #L468430.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L468444.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46844a.  v2:= temp @kind object;
  #L46844c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L468452.  v0:= temp @kind object;
  #L468454.  v1:= 1I;
  #L468456.  call temp:= `flatMap`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46845c.  v2:= temp @kind object;
  #L46845e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L468470.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468476.  v2:= temp @kind object;
  #L468478.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46847e.  v0:= temp @kind object;
  #L468480.  v1:= 1I;
  #L468482.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468488.  v2:= temp @kind object;
  #L46848a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46849c.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4684a2.  v2:= temp @kind object;
  #L4684a4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4684aa.  v0:= temp @kind object;
  #L4684ac.  v1:= 1I;
  #L4684ae.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4684b4.  v2:= temp @kind object;
  #L4684b6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4684c8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4684ce.  v0:= temp;
  #L4684d0.  call temp:= `mergeDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4684d6.  v1:= temp @kind object;
  #L4684d8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4684ec.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4684f2.  v2:= temp @kind object;
  #L4684f4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4684fa.  v0:= temp @kind object;
  #L4684fc.  v1:= 1I;
  #L4684fe.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468504.  v2:= temp @kind object;
  #L468506.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L468518.  v0:= "source1 is null" @kind object;
  #L46851c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468522.  v0:= "source2 is null" @kind object;
  #L468526.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46852c.  v0:= 2I;
  #L46852e.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L468532.  v2:= 0I;
  #L468534.  v1[v2]:= v3 @kind object;
  #L468538.  v3:= 1I;
  #L46853a.  v1[v3]:= v4 @kind object;
  #L46853e.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468544.  v4:= temp @kind object;
  #L468546.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46854c.  v1:= temp @kind object;
  #L46854e.  call temp:= `flatMap`(v4, v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468554.  v3:= temp @kind object;
  #L468556.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L468568.  v0:= "source1 is null" @kind object;
  #L46856c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468572.  v0:= "source2 is null" @kind object;
  #L468576.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46857c.  v0:= "source3 is null" @kind object;
  #L468580.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468586.  v0:= 3I;
  #L468588.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L46858c.  v2:= 0I;
  #L46858e.  v1[v2]:= v3 @kind object;
  #L468592.  v3:= 1I;
  #L468594.  v1[v3]:= v4 @kind object;
  #L468598.  v4:= 2I;
  #L46859a.  v1[v4]:= v5 @kind object;
  #L46859e.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4685a4.  v4:= temp @kind object;
  #L4685a6.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4685ac.  v5:= temp @kind object;
  #L4685ae.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4685b4.  v3:= temp @kind object;
  #L4685b6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4685c8.  v0:= "source1 is null" @kind object;
  #L4685cc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4685d2.  v0:= "source2 is null" @kind object;
  #L4685d6.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4685dc.  v0:= "source3 is null" @kind object;
  #L4685e0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4685e6.  v0:= "source4 is null" @kind object;
  #L4685ea.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4685f0.  v0:= 4I;
  #L4685f2.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L4685f6.  v2:= 0I;
  #L4685f8.  v1[v2]:= v3 @kind object;
  #L4685fc.  v3:= 1I;
  #L4685fe.  v1[v3]:= v4 @kind object;
  #L468602.  v4:= 2I;
  #L468604.  v1[v4]:= v5 @kind object;
  #L468608.  v4:= 3I;
  #L46860a.  v1[v4]:= v6 @kind object;
  #L46860e.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468614.  v4:= temp @kind object;
  #L468616.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46861c.  v5:= temp @kind object;
  #L46861e.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468624.  v3:= temp @kind object;
  #L468626.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `never`() @signature `Lio/reactivex/rxjava3/core/Flowable;.never:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4686ec.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4686f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4686f6.  v0:= temp @kind object;
  #L4686f8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `range`(`int` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.range:(II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L468b2c.  if v6 < 0 then goto L468b92;
  #L468b30.  if v6 != 0 then goto L468b3e;
  #L468b34.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468b3a.  v5:= temp @kind object;
  #L468b3c.  return v5 @kind object;
  #L468b3e.  v0:= 1I;
  #L468b40.  if v6 != v0 then goto L468b56;
  #L468b44.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L468b4a.  v5:= temp @kind object;
  #L468b4c.  call temp:= `just`(v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468b52.  v5:= temp @kind object;
  #L468b54.  return v5 @kind object;
  #L468b56.  v0:= (`long`) v5 @kind i2l;
  #L468b58.  v2:= v6 + -1;
  #L468b5c.  v2:= (`long`) v2 @kind i2l;
  #L468b5e.  v0:= v0 + v2 @kind long;
  #L468b60.  v2:= 2147483647L;
  #L468b66.  v4:= lcmp(v0, v2);
  #L468b6a.  if v4 > 0 then goto L468b82;
  #L468b6e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRange`;
  #L468b72.  call `<init>`(v0, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRange;.<init>:(II)V` @kind direct;
  #L468b78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468b7e.  v5:= temp @kind object;
  #L468b80.  return v5 @kind object;
  #L468b82.  v5:= new `java.lang.IllegalArgumentException`;
  #L468b86.  v6:= "Integer overflow" @kind object;
  #L468b8a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L468b90.  throw v5;
  #L468b92.  v5:= new `java.lang.IllegalArgumentException`;
  #L468b96.  v0:= new `java.lang.StringBuilder`;
  #L468b9a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L468ba0.  v1:= "count >= 0 required but it was " @kind object;
  #L468ba4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L468baa.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L468bb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L468bb6.  v6:= temp @kind object;
  #L468bb8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L468bbe.  throw v5;
}
procedure `io.reactivex.rxjava3.core.Flowable` `rangeLong`(`long` v5 , `long` v7 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.rangeLong:(JJ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L468bd0.  v0:= 0L;
  #L468bd4.  v2:= lcmp(v7, v0);
  #L468bd8.  if v2 < 0 then goto L468c44;
  #L468bdc.  if v2 != 0 then goto L468bea;
  #L468be0.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468be6.  v5:= temp @kind object;
  #L468be8.  return v5 @kind object;
  #L468bea.  v2:= 1L;
  #L468bee.  v4:= lcmp(v7, v2);
  #L468bf2.  if v4 != 0 then goto L468c08;
  #L468bf6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L468bfc.  v5:= temp @kind object;
  #L468bfe.  call temp:= `just`(v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468c04.  v5:= temp @kind object;
  #L468c06.  return v5 @kind object;
  #L468c08.  v2:= v7 - v2 @kind long;
  #L468c0c.  v2:= v2 + v5 @kind long;
  #L468c0e.  v4:= lcmp(v5, v0);
  #L468c12.  if v4 <= 0 then goto L468c30;
  #L468c16.  v4:= lcmp(v2, v0);
  #L468c1a.  if v4 < 0 then goto L468c20;
  #L468c1e.  goto L468c30;
  #L468c20.  v5:= new `java.lang.IllegalArgumentException`;
  #L468c24.  v6:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L468c28.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L468c2e.  throw v5;
  #L468c30.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong`;
  #L468c34.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRangeLong;.<init>:(JJ)V` @kind direct;
  #L468c3a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468c40.  v5:= temp @kind object;
  #L468c42.  return v5 @kind object;
  #L468c44.  v5:= new `java.lang.IllegalArgumentException`;
  #L468c48.  v6:= new `java.lang.StringBuilder`;
  #L468c4c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L468c52.  v0:= "count >= 0 required but it was " @kind object;
  #L468c56.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L468c5c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L468c62.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L468c68.  v6:= temp @kind object;
  #L468c6a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L468c70.  throw v5;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46b548.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L46b54e.  v0:= temp @kind object;
  #L46b550.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46b556.  v1:= temp;
  #L46b558.  call temp:= `sequenceEqual`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b55e.  v2:= temp @kind object;
  #L46b560.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46b574.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L46b57a.  v0:= temp @kind object;
  #L46b57c.  call temp:= `sequenceEqual`(v1, v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b582.  v1:= temp @kind object;
  #L46b584.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46b598.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46b59e.  v0:= temp;
  #L46b5a0.  call temp:= `sequenceEqual`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b5a6.  v1:= temp @kind object;
  #L46b5a8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46b5bc.  v0:= "source1 is null" @kind object;
  #L46b5c0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b5c6.  v0:= "source2 is null" @kind object;
  #L46b5ca.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b5d0.  v0:= "isEqual is null" @kind object;
  #L46b5d4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b5da.  v0:= "bufferSize" @kind object;
  #L46b5de.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46b5e4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSequenceEqualSingle`;
  #L46b5e8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSequenceEqualSingle;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)V` @kind direct;
  #L46b5ee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b5f4.  v1:= temp @kind object;
  #L46b5f6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNext`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNext:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L469a44.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469a4a.  v1:= temp @kind object;
  #L469a4c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L469a52.  v0:= temp @kind object;
  #L469a54.  call temp:= `switchMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469a5a.  v1:= temp @kind object;
  #L469a5c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNext`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNext:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L469a70.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469a76.  v1:= temp @kind object;
  #L469a78.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L469a7e.  v0:= temp @kind object;
  #L469a80.  call temp:= `switchMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469a86.  v1:= temp @kind object;
  #L469a88.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNextDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L469a9c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L469aa2.  v0:= temp;
  #L469aa4.  call temp:= `switchOnNextDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469aaa.  v1:= temp @kind object;
  #L469aac.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNextDelayError`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L469ac0.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469ac6.  v1:= temp @kind object;
  #L469ac8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L469ace.  v0:= temp @kind object;
  #L469ad0.  call temp:= `switchMapDelayError`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469ad6.  v1:= temp @kind object;
  #L469ad8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46a2a4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a2aa.  v0:= temp @kind object;
  #L46a2ac.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a2b2.  v1:= temp @kind object;
  #L46a2b4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timer`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46a2c8.  v0:= "unit is null" @kind object;
  #L46a2cc.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a2d2.  v0:= "scheduler is null" @kind object;
  #L46a2d6.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a2dc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimer`;
  #L46a2e0.  v1:= 0L;
  #L46a2e4.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L46a2ea.  v3:= temp @kind wide;
  #L46a2ec.  call `<init>`(v0, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L46a2f2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a2f8.  v3:= temp @kind object;
  #L46a2fa.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `unsafeCreate`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.unsafeCreate:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46a3b0.  v0:= "onSubscribe is null" @kind object;
  #L46a3b4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a3ba.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Flowable` @kind boolean;
  #L46a3be.  if v0 != 0 then goto L46a3d6;
  #L46a3c2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher`;
  #L46a3c6.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46a3cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a3d2.  v1:= temp @kind object;
  #L46a3d4.  return v1 @kind object;
  #L46a3d6.  v1:= new `java.lang.IllegalArgumentException`;
  #L46a3da.  v0:= "unsafeCreate(Flowable) should be upgraded" @kind object;
  #L46a3de.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46a3e4.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Flowable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46a428.  v0:= 1I;
  #L46a42a.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a430.  v1:= temp @kind object;
  #L46a432.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46a444.  v0:= "resourceSupplier is null" @kind object;
  #L46a448.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a44e.  v0:= "sourceSupplier is null" @kind object;
  #L46a452.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a458.  v0:= "resourceCleanup is null" @kind object;
  #L46a45c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a462.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableUsing`;
  #L46a466.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableUsing;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @kind direct;
  #L46a46c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a472.  v1:= temp @kind object;
  #L46a474.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46aa10.  v0:= "zipper is null" @kind object;
  #L46aa14.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aa1a.  v0:= "sources is null" @kind object;
  #L46aa1e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aa24.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZip`;
  #L46aa28.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46aa2e.  v5:= temp;
  #L46aa30.  v2:= 0I;
  #L46aa32.  v6:= 0I;
  #L46aa34.  v1:= v0 @kind object;
  #L46aa36.  v3:= v7 @kind object;
  #L46aa38.  v4:= v8 @kind object;
  #L46aa3a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZip;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L46aa40.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46aa46.  v7:= temp @kind object;
  #L46aa48.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46aa5c.  v0:= "zipper is null" @kind object;
  #L46aa60.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aa66.  v0:= "sources is null" @kind object;
  #L46aa6a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aa70.  v0:= "bufferSize" @kind object;
  #L46aa74.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46aa7a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZip`;
  #L46aa7e.  v2:= 0I;
  #L46aa80.  v1:= v0 @kind object;
  #L46aa82.  v3:= v7 @kind object;
  #L46aa84.  v4:= v8 @kind object;
  #L46aa86.  v5:= v10;
  #L46aa88.  v6:= v9;
  #L46aa8a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZip;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L46aa90.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46aa96.  v7:= temp @kind object;
  #L46aa98.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46aaac.  v0:= "source1 is null" @kind object;
  #L46aab0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aab6.  v0:= "source2 is null" @kind object;
  #L46aaba.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aac0.  v0:= "zipper is null" @kind object;
  #L46aac4.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aaca.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46aad0.  v5:= temp @kind object;
  #L46aad2.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46aad8.  v0:= temp;
  #L46aada.  v1:= 2I;
  #L46aadc.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46aae0.  v2:= 0I;
  #L46aae2.  v1[v2]:= v3 @kind object;
  #L46aae6.  v3:= 1I;
  #L46aae8.  v1[v3]:= v4 @kind object;
  #L46aaec.  call temp:= `zipArray`(v5, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46aaf2.  v3:= temp @kind object;
  #L46aaf4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46ab08.  v0:= "source1 is null" @kind object;
  #L46ab0c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ab12.  v0:= "source2 is null" @kind object;
  #L46ab16.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ab1c.  v0:= "zipper is null" @kind object;
  #L46ab20.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ab26.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46ab2c.  v5:= temp @kind object;
  #L46ab2e.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46ab34.  v0:= temp;
  #L46ab36.  v1:= 2I;
  #L46ab38.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46ab3c.  v2:= 0I;
  #L46ab3e.  v1[v2]:= v3 @kind object;
  #L46ab42.  v3:= 1I;
  #L46ab44.  v1[v3]:= v4 @kind object;
  #L46ab48.  call temp:= `zipArray`(v5, v6, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ab4e.  v3:= temp @kind object;
  #L46ab50.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object, `boolean` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46ab64.  v0:= "source1 is null" @kind object;
  #L46ab68.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ab6e.  v0:= "source2 is null" @kind object;
  #L46ab72.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ab78.  v0:= "zipper is null" @kind object;
  #L46ab7c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ab82.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46ab88.  v4:= temp @kind object;
  #L46ab8a.  v0:= 2I;
  #L46ab8c.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L46ab90.  v1:= 0I;
  #L46ab92.  v0[v1]:= v2 @kind object;
  #L46ab96.  v2:= 1I;
  #L46ab98.  v0[v2]:= v3 @kind object;
  #L46ab9c.  call temp:= `zipArray`(v4, v5, v6, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46aba2.  v2:= temp @kind object;
  #L46aba4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `io.reactivex.rxjava3.functions.Function3` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46abb8.  v0:= "source1 is null" @kind object;
  #L46abbc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46abc2.  v0:= "source2 is null" @kind object;
  #L46abc6.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46abcc.  v0:= "source3 is null" @kind object;
  #L46abd0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46abd6.  v0:= "zipper is null" @kind object;
  #L46abda.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46abe0.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46abe6.  v6:= temp @kind object;
  #L46abe8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46abee.  v0:= temp;
  #L46abf0.  v1:= 3I;
  #L46abf2.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46abf6.  v2:= 0I;
  #L46abf8.  v1[v2]:= v3 @kind object;
  #L46abfc.  v3:= 1I;
  #L46abfe.  v1[v3]:= v4 @kind object;
  #L46ac02.  v3:= 2I;
  #L46ac04.  v1[v3]:= v5 @kind object;
  #L46ac08.  call temp:= `zipArray`(v6, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ac0e.  v3:= temp @kind object;
  #L46ac10.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `io.reactivex.rxjava3.functions.Function4` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46ac24.  v0:= "source1 is null" @kind object;
  #L46ac28.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ac2e.  v0:= "source2 is null" @kind object;
  #L46ac32.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ac38.  v0:= "source3 is null" @kind object;
  #L46ac3c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ac42.  v0:= "source4 is null" @kind object;
  #L46ac46.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ac4c.  v0:= "zipper is null" @kind object;
  #L46ac50.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ac56.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46ac5c.  v7:= temp @kind object;
  #L46ac5e.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46ac64.  v0:= temp;
  #L46ac66.  v1:= 4I;
  #L46ac68.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46ac6c.  v2:= 0I;
  #L46ac6e.  v1[v2]:= v3 @kind object;
  #L46ac72.  v3:= 1I;
  #L46ac74.  v1[v3]:= v4 @kind object;
  #L46ac78.  v3:= 2I;
  #L46ac7a.  v1[v3]:= v5 @kind object;
  #L46ac7e.  v3:= 3I;
  #L46ac80.  v1[v3]:= v6 @kind object;
  #L46ac84.  call temp:= `zipArray`(v7, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ac8a.  v3:= temp @kind object;
  #L46ac8c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `io.reactivex.rxjava3.functions.Function5` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46aca0.  v0:= "source1 is null" @kind object;
  #L46aca4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46acaa.  v0:= "source2 is null" @kind object;
  #L46acae.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46acb4.  v0:= "source3 is null" @kind object;
  #L46acb8.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46acbe.  v0:= "source4 is null" @kind object;
  #L46acc2.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46acc8.  v0:= "source5 is null" @kind object;
  #L46accc.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46acd2.  v0:= "zipper is null" @kind object;
  #L46acd6.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46acdc.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46ace2.  v8:= temp @kind object;
  #L46ace4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46acea.  v0:= temp;
  #L46acec.  v1:= 5I;
  #L46acee.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46acf2.  v2:= 0I;
  #L46acf4.  v1[v2]:= v3 @kind object;
  #L46acf8.  v3:= 1I;
  #L46acfa.  v1[v3]:= v4 @kind object;
  #L46acfe.  v3:= 2I;
  #L46ad00.  v1[v3]:= v5 @kind object;
  #L46ad04.  v3:= 3I;
  #L46ad06.  v1[v3]:= v6 @kind object;
  #L46ad0a.  v3:= 4I;
  #L46ad0c.  v1[v3]:= v7 @kind object;
  #L46ad10.  call temp:= `zipArray`(v8, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ad16.  v3:= temp @kind object;
  #L46ad18.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `io.reactivex.rxjava3.functions.Function6` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46ad2c.  v0:= "source1 is null" @kind object;
  #L46ad30.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ad36.  v0:= "source2 is null" @kind object;
  #L46ad3a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ad40.  v0:= "source3 is null" @kind object;
  #L46ad44.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ad4a.  v0:= "source4 is null" @kind object;
  #L46ad4e.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ad54.  v0:= "source5 is null" @kind object;
  #L46ad58.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ad5e.  v0:= "source6 is null" @kind object;
  #L46ad62.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ad68.  v0:= "zipper is null" @kind object;
  #L46ad6c.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ad72.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46ad78.  v9:= temp @kind object;
  #L46ad7a.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46ad80.  v0:= temp;
  #L46ad82.  v1:= 6I;
  #L46ad84.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46ad88.  v2:= 0I;
  #L46ad8a.  v1[v2]:= v3 @kind object;
  #L46ad8e.  v3:= 1I;
  #L46ad90.  v1[v3]:= v4 @kind object;
  #L46ad94.  v3:= 2I;
  #L46ad96.  v1[v3]:= v5 @kind object;
  #L46ad9a.  v3:= 3I;
  #L46ad9c.  v1[v3]:= v6 @kind object;
  #L46ada0.  v3:= 4I;
  #L46ada2.  v1[v3]:= v7 @kind object;
  #L46ada6.  v3:= 5I;
  #L46ada8.  v1[v3]:= v8 @kind object;
  #L46adac.  call temp:= `zipArray`(v9, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46adb2.  v3:= temp @kind object;
  #L46adb4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `io.reactivex.rxjava3.functions.Function7` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46adc8.  v0:= "source1 is null" @kind object;
  #L46adcc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46add2.  v0:= "source2 is null" @kind object;
  #L46add6.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46addc.  v0:= "source3 is null" @kind object;
  #L46ade0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ade6.  v0:= "source4 is null" @kind object;
  #L46adea.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46adf0.  v0:= "source5 is null" @kind object;
  #L46adf4.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46adfa.  v0:= "source6 is null" @kind object;
  #L46adfe.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ae04.  v0:= "source7 is null" @kind object;
  #L46ae08.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ae0e.  v0:= "zipper is null" @kind object;
  #L46ae12.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ae18.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46ae1e.  v10:= temp @kind object;
  #L46ae20.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46ae26.  v0:= temp;
  #L46ae28.  v1:= 7I;
  #L46ae2a.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46ae2e.  v2:= 0I;
  #L46ae30.  v1[v2]:= v3 @kind object;
  #L46ae34.  v3:= 1I;
  #L46ae36.  v1[v3]:= v4 @kind object;
  #L46ae3a.  v3:= 2I;
  #L46ae3c.  v1[v3]:= v5 @kind object;
  #L46ae40.  v3:= 3I;
  #L46ae42.  v1[v3]:= v6 @kind object;
  #L46ae46.  v3:= 4I;
  #L46ae48.  v1[v3]:= v7 @kind object;
  #L46ae4c.  v3:= 5I;
  #L46ae4e.  v1[v3]:= v8 @kind object;
  #L46ae52.  v3:= 6I;
  #L46ae54.  v1[v3]:= v9 @kind object;
  #L46ae58.  call temp:= `zipArray`(v10, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ae5e.  v3:= temp @kind object;
  #L46ae60.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `org.reactivestreams.Publisher` v10 @kind object, `io.reactivex.rxjava3.functions.Function8` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46ae74.  v0:= "source1 is null" @kind object;
  #L46ae78.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ae7e.  v0:= "source2 is null" @kind object;
  #L46ae82.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ae88.  v0:= "source3 is null" @kind object;
  #L46ae8c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ae92.  v0:= "source4 is null" @kind object;
  #L46ae96.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ae9c.  v0:= "source5 is null" @kind object;
  #L46aea0.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aea6.  v0:= "source6 is null" @kind object;
  #L46aeaa.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aeb0.  v0:= "source7 is null" @kind object;
  #L46aeb4.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aeba.  v0:= "source8 is null" @kind object;
  #L46aebe.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aec4.  v0:= "zipper is null" @kind object;
  #L46aec8.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46aece.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46aed4.  v11:= temp @kind object;
  #L46aed6.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46aedc.  v0:= temp;
  #L46aede.  v1:= 8I;
  #L46aee2.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46aee6.  v2:= 0I;
  #L46aee8.  v1[v2]:= v3 @kind object;
  #L46aeec.  v3:= 1I;
  #L46aeee.  v1[v3]:= v4 @kind object;
  #L46aef2.  v3:= 2I;
  #L46aef4.  v1[v3]:= v5 @kind object;
  #L46aef8.  v3:= 3I;
  #L46aefa.  v1[v3]:= v6 @kind object;
  #L46aefe.  v3:= 4I;
  #L46af00.  v1[v3]:= v7 @kind object;
  #L46af04.  v3:= 5I;
  #L46af06.  v1[v3]:= v8 @kind object;
  #L46af0a.  v3:= 6I;
  #L46af0c.  v1[v3]:= v9 @kind object;
  #L46af10.  v3:= 7I;
  #L46af12.  v1[v3]:= v10 @kind object;
  #L46af16.  call temp:= `zipArray`(v11, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46af1c.  v3:= temp @kind object;
  #L46af1e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `org.reactivestreams.Publisher` v10 @kind object, `org.reactivestreams.Publisher` v11 @kind object, `io.reactivex.rxjava3.functions.Function9` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46af30.  v0:= "source1 is null" @kind object;
  #L46af34.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af3a.  v0:= "source2 is null" @kind object;
  #L46af3e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af44.  v0:= "source3 is null" @kind object;
  #L46af48.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af4e.  v0:= "source4 is null" @kind object;
  #L46af52.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af58.  v0:= "source5 is null" @kind object;
  #L46af5c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af62.  v0:= "source6 is null" @kind object;
  #L46af66.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af6c.  v0:= "source7 is null" @kind object;
  #L46af70.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af76.  v0:= "source8 is null" @kind object;
  #L46af7a.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af80.  v0:= "source9 is null" @kind object;
  #L46af84.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af8a.  v0:= "zipper is null" @kind object;
  #L46af8e.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46af94.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46af9a.  v12:= temp @kind object;
  #L46af9c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46afa2.  v0:= temp;
  #L46afa4.  v1:= 9I;
  #L46afa8.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L46afac.  v2:= 0I;
  #L46afae.  v1[v2]:= v3 @kind object;
  #L46afb2.  v3:= 1I;
  #L46afb4.  v1[v3]:= v4 @kind object;
  #L46afb8.  v3:= 2I;
  #L46afba.  v1[v3]:= v5 @kind object;
  #L46afbe.  v3:= 3I;
  #L46afc0.  v1[v3]:= v6 @kind object;
  #L46afc4.  v3:= 4I;
  #L46afc6.  v1[v3]:= v7 @kind object;
  #L46afca.  v3:= 5I;
  #L46afcc.  v1[v3]:= v8 @kind object;
  #L46afd0.  v3:= 6I;
  #L46afd2.  v1[v3]:= v9 @kind object;
  #L46afd6.  v3:= 7I;
  #L46afd8.  v1[v3]:= v10 @kind object;
  #L46afdc.  v3:= 8I;
  #L46afe0.  v1[v3]:= v11 @kind object;
  #L46afe4.  call temp:= `zipArray`(v12, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46afea.  v3:= temp @kind object;
  #L46afec.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipArray`(`io.reactivex.rxjava3.functions.Function` v7 @kind object, `boolean` v8 , `int` v9 , `org.reactivestreams.Publisher`[] v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46b000.  v0:= "sources is null" @kind object;
  #L46b004.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b00a.  v0:= length @variable v10;
  #L46b00c.  if v0 != 0 then goto L46b01a;
  #L46b010.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46b016.  v7:= temp @kind object;
  #L46b018.  return v7 @kind object;
  #L46b01a.  v0:= "zipper is null" @kind object;
  #L46b01e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b024.  v0:= "bufferSize" @kind object;
  #L46b028.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46b02e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZip`;
  #L46b032.  v3:= 0I;
  #L46b034.  v1:= v0 @kind object;
  #L46b036.  v2:= v10 @kind object;
  #L46b038.  v4:= v7 @kind object;
  #L46b03a.  v5:= v9;
  #L46b03c.  v6:= v8;
  #L46b03e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZip;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L46b044.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46b04a.  v7:= temp @kind object;
  #L46b04c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `all`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.all:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b210.  v0:= "predicate is null" @kind object;
  #L46b214.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b21a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle`;
  #L46b21e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L46b224.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b22a.  v2:= temp @kind object;
  #L46b22c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `ambWith`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.ambWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4650e0.  v0:= "other is null" @kind object;
  #L4650e4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4650ea.  v0:= 2I;
  #L4650ec.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4650f0.  v1:= 0I;
  #L4650f2.  v0[v1]:= v2 @kind object;
  #L4650f6.  v1:= 1I;
  #L4650f8.  v0[v1]:= v3 @kind object;
  #L4650fc.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.ambArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465102.  v3:= temp @kind object;
  #L465104.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `any`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.any:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b240.  v0:= "predicate is null" @kind object;
  #L46b244.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b24a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle`;
  #L46b24e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L46b254.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b25a.  v2:= temp @kind object;
  #L46b25c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `b`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.b:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag  {
    temp;
    v0;

  #L4698dc.  v0:= "mapper is null" @kind object;
  #L4698e0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4698e6.  v0:= "bufferSize" @kind object;
  #L4698ea.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4698f0.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L4698f4.  if v0 == 0 then goto L46991e;
  #L4698f8.  v3:= v1 @kind object;
  #L4698fa.  v3:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v3 @kind object;
  #L4698fe.  call temp:= `get`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L469904.  v3:= temp @kind object;
  #L469906.  if v3 != 0 then goto L469914;
  #L46990a.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469910.  v2:= temp @kind object;
  #L469912.  return v2 @kind object;
  #L469914.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46991a.  v2:= temp @kind object;
  #L46991c.  return v2 @kind object;
  #L46991e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap`;
  #L469922.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L469928.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46992e.  v2:= temp @kind object;
  #L469930.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingFirst:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bddc.  v0:= new `io.reactivex.rxjava3.internal.subscribers.BlockingFirstSubscriber`;
  #L46bde0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingFirstSubscriber;.<init>:()V` @kind direct;
  #L46bde6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46bdec.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingBaseSubscriber;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L46bdf2.  v0:= temp @kind object;
  #L46bdf4.  if v0 == 0 then goto L46bdfa;
  #L46bdf8.  return v0 @kind object;
  #L46bdfa.  v0:= new `java.util.NoSuchElementException`;
  #L46bdfe.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L46be04.  throw v0;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingFirst:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46be18.  v0:= "defaultItem is null" @kind object;
  #L46be1c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46be22.  v0:= new `io.reactivex.rxjava3.internal.subscribers.BlockingFirstSubscriber`;
  #L46be26.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingFirstSubscriber;.<init>:()V` @kind direct;
  #L46be2c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46be32.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingBaseSubscriber;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L46be38.  v0:= temp @kind object;
  #L46be3a.  if v0 == 0 then goto L46be40;
  #L46be3e.  v2:= v0 @kind object;
  #L46be40.  return v2 @kind object;
}
procedure `void` `blockingForEach`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c14c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46c152.  v0:= temp;
  #L46c154.  call `blockingForEach`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @kind virtual;
  #L46c15a.  return @kind void;
}
procedure `void` `blockingForEach`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c16c.  v0:= "onNext is null" @kind object;
  #L46c170.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c176.  call temp:= `blockingIterable`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L46c17c.  v3:= temp @kind object;
  #L46c17e.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L46c184.  v3:= temp @kind object;
  #L46c186.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L46c18c.  v0:= temp;
  #L46c18e.  if v0 == 0 then goto L46c1be;
  #L46c192.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L46c198.  v0:= temp @kind object;
  #L46c19a.  call `accept`(v2, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L46c1a0.  goto L46c186;
  #L46c1a2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46c1a4.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L46c1aa.  v3:= (`io.reactivex.rxjava3.disposables.Disposable`) v3 @kind object;
  #L46c1ae.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L46c1b4.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L46c1ba.  v2:= temp @kind object;
  #L46c1bc.  throw v2;
  #L46c1be.  return @kind void;
  catch `java.lang.Throwable` @[L46c192..L46c1a0] goto L46c1a2;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bd30.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46bd36.  v0:= temp;
  #L46bd38.  call temp:= `blockingIterable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L46bd3e.  v0:= temp @kind object;
  #L46bd40.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:(I)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bd54.  v0:= "bufferSize" @kind object;
  #L46bd58.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46bd5e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableIterable`;
  #L46bd62.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @kind direct;
  #L46bd68.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingLast:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46be54.  v0:= new `io.reactivex.rxjava3.internal.subscribers.BlockingLastSubscriber`;
  #L46be58.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingLastSubscriber;.<init>:()V` @kind direct;
  #L46be5e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46be64.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingBaseSubscriber;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L46be6a.  v0:= temp @kind object;
  #L46be6c.  if v0 == 0 then goto L46be72;
  #L46be70.  return v0 @kind object;
  #L46be72.  v0:= new `java.util.NoSuchElementException`;
  #L46be76.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L46be7c.  throw v0;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingLast:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46be90.  v0:= "defaultItem is null" @kind object;
  #L46be94.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46be9a.  v0:= new `io.reactivex.rxjava3.internal.subscribers.BlockingLastSubscriber`;
  #L46be9e.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingLastSubscriber;.<init>:()V` @kind direct;
  #L46bea4.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46beaa.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingBaseSubscriber;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L46beb0.  v0:= temp @kind object;
  #L46beb2.  if v0 == 0 then goto L46beb8;
  #L46beb6.  v2:= v0 @kind object;
  #L46beb8.  return v2 @kind object;
}
procedure `java.lang.Iterable` `blockingLatest`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingLatest:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bd7c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableLatest`;
  #L46bd80.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableLatest;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46bd86.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingMostRecent`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingMostRecent:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bd98.  v0:= "initialItem is null" @kind object;
  #L46bd9c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bda2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent`;
  #L46bda6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L46bdac.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingNext`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingNext:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bdc0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableNext`;
  #L46bdc4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableNext;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46bdca.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSingle:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46becc.  call temp:= `singleOrError`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleOrError:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46bed2.  v0:= temp @kind object;
  #L46bed4.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L46beda.  v0:= temp @kind object;
  #L46bedc.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSingle:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46bef0.  call temp:= `single`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.single:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46bef6.  v1:= temp @kind object;
  #L46bef8.  call temp:= `blockingGet`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L46befe.  v1:= temp @kind object;
  #L46bf00.  return v1 @kind object;
}
procedure `java.util.stream.Stream` `blockingStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingStream:()Ljava/util/stream/Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c06c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46c072.  v0:= temp;
  #L46c074.  call temp:= `blockingStream`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingStream:(I)Ljava/util/stream/Stream;` @kind virtual;
  #L46c07a.  v0:= temp @kind object;
  #L46c07c.  return v0 @kind object;
}
procedure `java.util.stream.Stream` `blockingStream`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingStream:(I)Ljava/util/stream/Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46c090.  call temp:= `blockingIterable`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L46c096.  v3:= temp @kind object;
  #L46c098.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L46c09e.  v3:= temp @kind object;
  #L46c0a0.  v0:= 0I;
  #L46c0a2.  call temp:= `spliteratorUnknownSize`(v3, v0) @signature `Ljava/util/Spliterators;.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;` @kind static;
  #L46c0a8.  v1:= temp @kind object;
  #L46c0aa.  call temp:= `stream`(v1, v0) @signature `Ljava/util/stream/StreamSupport;.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;` @kind static;
  #L46c0b0.  v0:= temp @kind object;
  #L46c0b2.  v3:= (`io.reactivex.rxjava3.disposables.Disposable`) v3 @kind object;
  #L46c0b6.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L46c0bc.  v1:= new `io.reactivex.rxjava3.core.a`;
  #L46c0c0.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/core/a;.<init>:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind direct;
  #L46c0c6.  call temp:= `onClose`(v0, v1) @signature `Ljava/util/stream/Stream;.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;` @kind interface;
  #L46c0cc.  v3:= temp @kind object;
  #L46c0ce.  v3:= (`java.util.stream.Stream`) v3 @kind object;
  #L46c0d2.  return v3 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46c1dc.  call `subscribe`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;)V` @kind static;
  #L46c1e2.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46c1f4.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46c1f8.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46c1fc.  call `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L46c202.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46c214.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46c218.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46c21c.  call `subscribe`(v2, v3, v0, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;I)V` @kind static;
  #L46c222.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c234.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46c238.  call `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L46c23e.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c250.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46c254.  call `subscribe`(v1, v2, v3, v0, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;I)V` @kind static;
  #L46c25a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46c26c.  call `subscribe`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L46c272.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46c284.  call `subscribe`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;I)V` @kind static;
  #L46c28a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c29c.  v0:= "subscriber is null" @kind object;
  #L46c2a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c2a6.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L46c2ac.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L465118.  call temp:= `buffer`(v0, v1, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(II)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46511e.  v1:= temp @kind object;
  #L465120.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L465134.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46513a.  v0:= temp @kind object;
  #L46513c.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L465142.  v2:= temp @kind object;
  #L465144.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `int` v3 , `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L465158.  v0:= "count" @kind object;
  #L46515c.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L465162.  v0:= "skip" @kind object;
  #L465166.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46516c.  v0:= "bufferSupplier is null" @kind object;
  #L465170.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465176.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer`;
  #L46517a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L465180.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465186.  v2:= temp @kind object;
  #L465188.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `int` v1 , `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(ILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46519c.  call temp:= `buffer`(v0, v1, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4651a2.  v1:= temp @kind object;
  #L4651a4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4652e0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4652e6.  v6:= temp @kind object;
  #L4652e8.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4652ee.  v7:= temp @kind object;
  #L4652f0.  v0:= v8 @kind object;
  #L4652f2.  v1:= v9 @kind wide;
  #L4652f4.  v3:= v11 @kind wide;
  #L4652f6.  v5:= v13 @kind object;
  #L4652f8.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4652fe.  v9:= temp @kind object;
  #L465300.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L465314.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46531a.  v7:= temp @kind object;
  #L46531c.  v0:= v8 @kind object;
  #L46531e.  v1:= v9 @kind wide;
  #L465320.  v3:= v11 @kind wide;
  #L465322.  v5:= v13 @kind object;
  #L465324.  v6:= v14 @kind object;
  #L465326.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46532c.  v9:= temp @kind object;
  #L46532e.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v12 @kind this, `long` v13 , `long` v15 , `java.util.concurrent.TimeUnit` v17 @kind object, `io.reactivex.rxjava3.core.Scheduler` v18 @kind object, `io.reactivex.rxjava3.functions.Supplier` v19 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L465340.  v0:= "unit is null" @kind object;
  #L465344.  v7:= v17 @kind object;
  #L465348.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46534e.  v0:= "scheduler is null" @kind object;
  #L465352.  v8:= v18 @kind object;
  #L465356.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46535c.  v0:= "bufferSupplier is null" @kind object;
  #L465360.  v9:= v19 @kind object;
  #L465364.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46536a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed`;
  #L46536e.  v10:= 2147483647I;
  #L465374.  v11:= 0I;
  #L465376.  v1:= v0 @kind object;
  #L465378.  v2:= v12 @kind object;
  #L46537a.  v3:= v13 @kind wide;
  #L46537c.  v5:= v15 @kind wide;
  #L46537e.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @kind direct;
  #L465384.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46538a.  v0:= temp @kind object;
  #L46538c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4651b8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4651be.  v4:= temp @kind object;
  #L4651c0.  v5:= 2147483647I;
  #L4651c6.  v0:= v6 @kind object;
  #L4651c8.  v1:= v7 @kind wide;
  #L4651ca.  v3:= v9 @kind object;
  #L4651cc.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4651d2.  v7:= temp @kind object;
  #L4651d4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4651e8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4651ee.  v4:= temp @kind object;
  #L4651f0.  v0:= v6 @kind object;
  #L4651f2.  v1:= v7 @kind wide;
  #L4651f4.  v3:= v9 @kind object;
  #L4651f6.  v5:= v10;
  #L4651f8.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4651fe.  v7:= temp @kind object;
  #L465200.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L465214.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46521a.  v6:= temp @kind object;
  #L46521c.  v5:= 2147483647I;
  #L465222.  v7:= 0I;
  #L465224.  v0:= v8 @kind object;
  #L465226.  v1:= v9 @kind wide;
  #L465228.  v3:= v11 @kind object;
  #L46522a.  v4:= v12 @kind object;
  #L46522c.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L465232.  v9:= temp @kind object;
  #L465234.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `int` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L465248.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46524e.  v6:= temp @kind object;
  #L465250.  v7:= 0I;
  #L465252.  v0:= v8 @kind object;
  #L465254.  v1:= v9 @kind wide;
  #L465256.  v3:= v11 @kind object;
  #L465258.  v4:= v12 @kind object;
  #L46525a.  v5:= v13;
  #L46525c.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L465262.  v9:= temp @kind object;
  #L465264.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v12 @kind this, `long` v13 , `java.util.concurrent.TimeUnit` v15 @kind object, `io.reactivex.rxjava3.core.Scheduler` v16 @kind object, `int` v17 , `io.reactivex.rxjava3.functions.Supplier` v18 @kind object, `boolean` v19 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L465278.  v0:= "unit is null" @kind object;
  #L46527c.  v7:= v15 @kind object;
  #L46527e.  call temp:= `requireNonNull`(v15, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465284.  v0:= "scheduler is null" @kind object;
  #L465288.  v8:= v16 @kind object;
  #L46528c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465292.  v0:= "bufferSupplier is null" @kind object;
  #L465296.  v9:= v18 @kind object;
  #L46529a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4652a0.  v0:= "count" @kind object;
  #L4652a4.  v10:= v17;
  #L4652a8.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4652ae.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed`;
  #L4652b2.  v1:= v0 @kind object;
  #L4652b4.  v2:= v12 @kind object;
  #L4652b6.  v3:= v13 @kind wide;
  #L4652b8.  v5:= v13 @kind wide;
  #L4652ba.  v11:= v19;
  #L4652be.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @kind direct;
  #L4652c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4652ca.  v0:= temp @kind object;
  #L4652cc.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4653a0.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4653a6.  v0:= temp @kind object;
  #L4653a8.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4653ae.  v2:= temp @kind object;
  #L4653b0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4653c4.  v0:= "initialCapacity" @kind object;
  #L4653c8.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4653ce.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createArrayList:(I)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4653d4.  v3:= temp @kind object;
  #L4653d6.  call temp:= `buffer`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4653dc.  v2:= temp @kind object;
  #L4653de.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4653f0.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4653f6.  v0:= temp @kind object;
  #L4653f8.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4653fe.  v2:= temp @kind object;
  #L465400.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L465414.  v0:= "openingIndicator is null" @kind object;
  #L465418.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46541e.  v0:= "closingIndicator is null" @kind object;
  #L465422.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465428.  v0:= "bufferSupplier is null" @kind object;
  #L46542c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465432.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary`;
  #L465436.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46543c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465442.  v2:= temp @kind object;
  #L465444.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L465458.  v0:= "boundaryIndicator is null" @kind object;
  #L46545c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465462.  v0:= "bufferSupplier is null" @kind object;
  #L465466.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46546c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary`;
  #L465470.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L465476.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46547c.  v2:= temp @kind object;
  #L46547e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `cache`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.cache:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L465490.  v0:= 16I;
  #L465494.  call temp:= `cacheWithInitialCapacity`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.cacheWithInitialCapacity:(I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46549a.  v0:= temp @kind object;
  #L46549c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `cacheWithInitialCapacity`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.cacheWithInitialCapacity:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4654b0.  v0:= "initialCapacity" @kind object;
  #L4654b4.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4654ba.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCache`;
  #L4654be.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCache;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @kind direct;
  #L4654c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4654ca.  v2:= temp @kind object;
  #L4654cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `cast`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4654e0.  v0:= "clazz is null" @kind object;
  #L4654e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4654ea.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4654f0.  v2:= temp @kind object;
  #L4654f2.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4654f8.  v2:= temp @kind object;
  #L4654fa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collect`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b270.  v0:= "initialItemSupplier is null" @kind object;
  #L46b274.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b27a.  v0:= "collector is null" @kind object;
  #L46b27e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b284.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle`;
  #L46b288.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCollectSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L46b28e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b294.  v2:= temp @kind object;
  #L46b296.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collect`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.stream.Collector` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Ljava/util/stream/Collector;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b2a8.  v0:= "collector is null" @kind object;
  #L46b2ac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b2b2.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle`;
  #L46b2b6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/util/stream/Collector;)V` @kind direct;
  #L46b2bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b2c2.  v2:= temp @kind object;
  #L46b2c4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collectInto`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.collectInto:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b2d8.  v0:= "initialItem is null" @kind object;
  #L46b2dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b2e2.  call temp:= `justSupplier`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46b2e8.  v2:= temp @kind object;
  #L46b2ea.  call temp:= `collect`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b2f0.  v2:= temp @kind object;
  #L46b2f2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `compose`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.FlowableTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.compose:(Lio/reactivex/rxjava3/core/FlowableTransformer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L465b70.  v0:= "composer is null" @kind object;
  #L465b74.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465b7a.  v2:= (`io.reactivex.rxjava3.core.FlowableTransformer`) v2 @kind object;
  #L465b7e.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/FlowableTransformer;.apply:(Lio/reactivex/rxjava3/core/Flowable;)Lorg/reactivestreams/Publisher;` @kind interface;
  #L465b84.  v2:= temp @kind object;
  #L465b86.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L465b8c.  v2:= temp @kind object;
  #L465b8e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466150.  v0:= 2I;
  #L466152.  call temp:= `concatMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466158.  v2:= temp @kind object;
  #L46615a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMap`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46616c.  v0:= "mapper is null" @kind object;
  #L466170.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466176.  v0:= "prefetch" @kind object;
  #L46617a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466180.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L466184.  if v0 == 0 then goto L4661ae;
  #L466188.  v4:= v2 @kind object;
  #L46618a.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v4 @kind object;
  #L46618e.  call temp:= `get`(v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L466194.  v4:= temp @kind object;
  #L466196.  if v4 != 0 then goto L4661a4;
  #L46619a.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4661a0.  v3:= temp @kind object;
  #L4661a2.  return v3 @kind object;
  #L4661a4.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4661aa.  v3:= temp @kind object;
  #L4661ac.  return v3 @kind object;
  #L4661ae.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap`;
  #L4661b2.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4661b6.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4661bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4661c2.  v3:= temp @kind object;
  #L4661c4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMap`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4661d8.  v0:= "mapper is null" @kind object;
  #L4661dc.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4661e2.  v0:= "prefetch" @kind object;
  #L4661e6.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4661ec.  v0:= "scheduler is null" @kind object;
  #L4661f0.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4661f6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler`;
  #L4661fa.  v5:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4661fe.  v1:= v0 @kind object;
  #L466200.  v2:= v7 @kind object;
  #L466202.  v3:= v8 @kind object;
  #L466204.  v4:= v9;
  #L466206.  v6:= v10 @kind object;
  #L466208.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L46620e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466214.  v8:= temp @kind object;
  #L466216.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L464e9c.  v0:= 2I;
  #L464e9e.  call temp:= `concatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L464ea4.  v2:= temp @kind object;
  #L464ea6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L464eb8.  v0:= "mapper is null" @kind object;
  #L464ebc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L464ec2.  v0:= "prefetch" @kind object;
  #L464ec6.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L464ecc.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable`;
  #L464ed0.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L464ed4.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L464eda.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L464ee0.  v3:= temp @kind object;
  #L464ee2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L464ef4.  v0:= 1I;
  #L464ef6.  v1:= 2I;
  #L464ef8.  call temp:= `concatMapCompletableDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L464efe.  v3:= temp @kind object;
  #L464f00.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L464f14.  v0:= 2I;
  #L464f16.  call temp:= `concatMapCompletableDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L464f1c.  v2:= temp @kind object;
  #L464f1e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L464f30.  v0:= "mapper is null" @kind object;
  #L464f34.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L464f3a.  v0:= "prefetch" @kind object;
  #L464f3e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L464f44.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable`;
  #L464f48.  if v3 == 0 then goto L464f52;
  #L464f4c.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L464f50.  goto L464f56;
  #L464f52.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L464f56.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L464f5c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L464f62.  v2:= temp @kind object;
  #L464f64.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466228.  v0:= 1I;
  #L46622a.  v1:= 2I;
  #L46622c.  call temp:= `concatMapDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466232.  v3:= temp @kind object;
  #L466234.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466248.  v0:= "mapper is null" @kind object;
  #L46624c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466252.  v0:= "prefetch" @kind object;
  #L466256.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46625c.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L466260.  if v0 == 0 then goto L46628a;
  #L466264.  v3:= v1 @kind object;
  #L466266.  v3:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v3 @kind object;
  #L46626a.  call temp:= `get`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L466270.  v3:= temp @kind object;
  #L466272.  if v3 != 0 then goto L466280;
  #L466276.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46627c.  v2:= temp @kind object;
  #L46627e.  return v2 @kind object;
  #L466280.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466286.  v2:= temp @kind object;
  #L466288.  return v2 @kind object;
  #L46628a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap`;
  #L46628e.  if v3 == 0 then goto L466298;
  #L466292.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L466296.  goto L46629c;
  #L466298.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L46629c.  call `<init>`(v0, v1, v2, v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4662a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4662a8.  v2:= temp @kind object;
  #L4662aa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZILio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4662bc.  v0:= "mapper is null" @kind object;
  #L4662c0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4662c6.  v0:= "prefetch" @kind object;
  #L4662ca.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4662d0.  v0:= "scheduler is null" @kind object;
  #L4662d4.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4662da.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler`;
  #L4662de.  if v9 == 0 then goto L4662e8;
  #L4662e2.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4662e6.  goto L4662ec;
  #L4662e8.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4662ec.  v5:= v9 @kind object;
  #L4662ee.  v1:= v0 @kind object;
  #L4662f0.  v2:= v7 @kind object;
  #L4662f2.  v3:= v8 @kind object;
  #L4662f4.  v4:= v10;
  #L4662f6.  v6:= v11 @kind object;
  #L4662f8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4662fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466304.  v8:= temp @kind object;
  #L466306.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapEager`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466318.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46631e.  v0:= temp;
  #L466320.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466326.  v1:= temp;
  #L466328.  call temp:= `concatMapEager`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46632e.  v3:= temp @kind object;
  #L466330.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapEager`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L466344.  v0:= "mapper is null" @kind object;
  #L466348.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46634e.  v0:= "maxConcurrency" @kind object;
  #L466352.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466358.  v0:= "prefetch" @kind object;
  #L46635c.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466362.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L466366.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L46636a.  v1:= v0 @kind object;
  #L46636c.  v2:= v7 @kind object;
  #L46636e.  v3:= v8 @kind object;
  #L466370.  v4:= v9;
  #L466372.  v5:= v10;
  #L466374.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L46637a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466380.  v8:= temp @kind object;
  #L466382.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapEagerDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466394.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46639a.  v0:= temp;
  #L46639c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4663a2.  v1:= temp;
  #L4663a4.  call temp:= `concatMapEagerDelayError`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4663aa.  v3:= temp @kind object;
  #L4663ac.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapEagerDelayError`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4663c0.  v0:= "mapper is null" @kind object;
  #L4663c4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4663ca.  v0:= "maxConcurrency" @kind object;
  #L4663ce.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4663d4.  v0:= "prefetch" @kind object;
  #L4663d8.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4663de.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L4663e2.  if v9 == 0 then goto L4663ec;
  #L4663e6.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4663ea.  goto L4663f0;
  #L4663ec.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4663f0.  v6:= v9 @kind object;
  #L4663f2.  v1:= v0 @kind object;
  #L4663f4.  v2:= v7 @kind object;
  #L4663f6.  v3:= v8 @kind object;
  #L4663f8.  v4:= v10;
  #L4663fa.  v5:= v11;
  #L4663fc.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L466402.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466408.  v8:= temp @kind object;
  #L46640a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46641c.  v0:= 2I;
  #L46641e.  call temp:= `concatMapIterable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466424.  v2:= temp @kind object;
  #L466426.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466438.  v0:= "mapper is null" @kind object;
  #L46643c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466442.  v0:= "prefetch" @kind object;
  #L466446.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46644c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable`;
  #L466450.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L466456.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46645c.  v2:= temp @kind object;
  #L46645e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466470.  v0:= 2I;
  #L466472.  call temp:= `concatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466478.  v2:= temp @kind object;
  #L46647a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46648c.  v0:= "mapper is null" @kind object;
  #L466490.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466496.  v0:= "prefetch" @kind object;
  #L46649a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4664a0.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapMaybe`;
  #L4664a4.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4664a8.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4664ae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4664b4.  v3:= temp @kind object;
  #L4664b6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4664c8.  v0:= 1I;
  #L4664ca.  v1:= 2I;
  #L4664cc.  call temp:= `concatMapMaybeDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4664d2.  v3:= temp @kind object;
  #L4664d4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4664e8.  v0:= 2I;
  #L4664ea.  call temp:= `concatMapMaybeDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4664f0.  v2:= temp @kind object;
  #L4664f2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466504.  v0:= "mapper is null" @kind object;
  #L466508.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46650e.  v0:= "prefetch" @kind object;
  #L466512.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466518.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapMaybe`;
  #L46651c.  if v3 == 0 then goto L466526;
  #L466520.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L466524.  goto L46652a;
  #L466526.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L46652a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L466530.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466536.  v2:= temp @kind object;
  #L466538.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingle`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46654c.  v0:= 2I;
  #L46654e.  call temp:= `concatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466554.  v2:= temp @kind object;
  #L466556.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingle`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466568.  v0:= "mapper is null" @kind object;
  #L46656c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466572.  v0:= "prefetch" @kind object;
  #L466576.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46657c.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSingle`;
  #L466580.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L466584.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L46658a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466590.  v3:= temp @kind object;
  #L466592.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4665a4.  v0:= 1I;
  #L4665a6.  v1:= 2I;
  #L4665a8.  call temp:= `concatMapSingleDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4665ae.  v3:= temp @kind object;
  #L4665b0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4665c4.  v0:= 2I;
  #L4665c6.  call temp:= `concatMapSingleDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4665cc.  v2:= temp @kind object;
  #L4665ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4665e0.  v0:= "mapper is null" @kind object;
  #L4665e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4665ea.  v0:= "prefetch" @kind object;
  #L4665ee.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4665f4.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSingle`;
  #L4665f8.  if v3 == 0 then goto L466602;
  #L4665fc.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L466600.  goto L466606;
  #L466602.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L466606.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L46660c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466612.  v2:= temp @kind object;
  #L466614.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466628.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46662e.  v0:= temp;
  #L466630.  call temp:= `flatMapStream`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466636.  v2:= temp @kind object;
  #L466638.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46664c.  v0:= "mapper is null" @kind object;
  #L466650.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466656.  v0:= "prefetch" @kind object;
  #L46665a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466660.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream`;
  #L466664.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L46666a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466670.  v2:= temp @kind object;
  #L466672.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466684.  v0:= "other is null" @kind object;
  #L466688.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46668e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable`;
  #L466692.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L466698.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46669e.  v2:= temp @kind object;
  #L4666a0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4666b4.  v0:= "other is null" @kind object;
  #L4666b8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4666be.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithMaybe`;
  #L4666c2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4666c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4666ce.  v2:= temp @kind object;
  #L4666d0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4666e4.  v0:= "other is null" @kind object;
  #L4666e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4666ee.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle`;
  #L4666f2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4666f8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4666fe.  v2:= temp @kind object;
  #L466700.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466714.  v0:= "other is null" @kind object;
  #L466718.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46671e.  call temp:= `concat`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466724.  v2:= temp @kind object;
  #L466726.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.contains:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b304.  v0:= "item is null" @kind object;
  #L46b308.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b30e.  call temp:= `equalsWith`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.equalsWith:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L46b314.  v2:= temp @kind object;
  #L46b316.  call temp:= `any`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.any:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b31c.  v2:= temp @kind object;
  #L46b31e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `count`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.count:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b330.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle`;
  #L46b334.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L46b33a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b340.  v0:= temp @kind object;
  #L46b342.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `debounce`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4667a0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4667a6.  v0:= temp @kind object;
  #L4667a8.  call temp:= `debounce`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4667ae.  v2:= temp @kind object;
  #L4667b0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `debounce`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4667c4.  v0:= "unit is null" @kind object;
  #L4667c8.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4667ce.  v0:= "scheduler is null" @kind object;
  #L4667d2.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4667d8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounceTimed`;
  #L4667dc.  v1:= v0 @kind object;
  #L4667de.  v2:= v7 @kind object;
  #L4667e0.  v3:= v8 @kind wide;
  #L4667e2.  v5:= v10 @kind object;
  #L4667e4.  v6:= v11 @kind object;
  #L4667e6.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounceTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4667ec.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4667f2.  v8:= temp @kind object;
  #L4667f4.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `debounce`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466770.  v0:= "debounceIndicator is null" @kind object;
  #L466774.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46677a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce`;
  #L46677e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L466784.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46678a.  v2:= temp @kind object;
  #L46678c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `defaultIfEmpty`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466808.  v0:= "defaultItem is null" @kind object;
  #L46680c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466812.  call temp:= `just`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466818.  v2:= temp @kind object;
  #L46681a.  call temp:= `switchIfEmpty`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchIfEmpty:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466820.  v2:= temp @kind object;
  #L466822.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L466890.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L466896.  v4:= temp @kind object;
  #L466898.  v5:= 0I;
  #L46689a.  v0:= v6 @kind object;
  #L46689c.  v1:= v7 @kind wide;
  #L46689e.  v3:= v9 @kind object;
  #L4668a0.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4668a6.  v7:= temp @kind object;
  #L4668a8.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4668e8.  v5:= 0I;
  #L4668ea.  v0:= v6 @kind object;
  #L4668ec.  v1:= v7 @kind wide;
  #L4668ee.  v3:= v9 @kind object;
  #L4668f0.  v4:= v10 @kind object;
  #L4668f2.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4668f8.  v7:= temp @kind object;
  #L4668fa.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46690c.  v0:= "unit is null" @kind object;
  #L466910.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466916.  v0:= "scheduler is null" @kind object;
  #L46691a.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466920.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelay`;
  #L466924.  v1:= 0L;
  #L466928.  call temp:= `max`(v1, v9) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L46692e.  v3:= temp @kind wide;
  #L466930.  v1:= v0 @kind object;
  #L466932.  v2:= v8 @kind object;
  #L466934.  v5:= v11 @kind object;
  #L466936.  v6:= v12 @kind object;
  #L466938.  v7:= v13;
  #L46693a.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelay;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L466940.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466946.  v9:= temp @kind object;
  #L466948.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4668bc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4668c2.  v4:= temp @kind object;
  #L4668c4.  v0:= v6 @kind object;
  #L4668c6.  v1:= v7 @kind wide;
  #L4668c8.  v3:= v9 @kind object;
  #L4668ca.  v5:= v10;
  #L4668cc.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4668d2.  v7:= temp @kind object;
  #L4668d4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466864.  v0:= "itemDelayIndicator is null" @kind object;
  #L466868.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46686e.  call temp:= `itemDelay`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.itemDelay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L466874.  v2:= temp @kind object;
  #L466876.  call temp:= `flatMap`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46687c.  v2:= temp @kind object;
  #L46687e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46695c.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466962.  v1:= temp @kind object;
  #L466964.  call temp:= `delay`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46696a.  v1:= temp @kind object;
  #L46696c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delaySubscription`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466980.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L466986.  v0:= temp @kind object;
  #L466988.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46698e.  v2:= temp @kind object;
  #L466990.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delaySubscription`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4669a4.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4669aa.  v1:= temp @kind object;
  #L4669ac.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4669b2.  v1:= temp @kind object;
  #L4669b4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delaySubscription`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4669c8.  v0:= "subscriptionIndicator is null" @kind object;
  #L4669cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4669d2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther`;
  #L4669d6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4669dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4669e2.  v2:= temp @kind object;
  #L4669e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `dematerialize`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.dematerialize:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4669f8.  v0:= "selector is null" @kind object;
  #L4669fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466a02.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDematerialize`;
  #L466a06.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDematerialize;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L466a0c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466a12.  v2:= temp @kind object;
  #L466a14.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinct`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466a28.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L466a2e.  v0:= temp @kind object;
  #L466a30.  call temp:= `createHashSet`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createHashSet:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L466a36.  v1:= temp @kind object;
  #L466a38.  call temp:= `distinct`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466a3e.  v0:= temp @kind object;
  #L466a40.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinct`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466a54.  call temp:= `createHashSet`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createHashSet:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L466a5a.  v0:= temp @kind object;
  #L466a5c.  call temp:= `distinct`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466a62.  v2:= temp @kind object;
  #L466a64.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinct`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466a78.  v0:= "keySelector is null" @kind object;
  #L466a7c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466a82.  v0:= "collectionSupplier is null" @kind object;
  #L466a86.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466a8c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinct`;
  #L466a90.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDistinct;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L466a96.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466a9c.  v2:= temp @kind object;
  #L466a9e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinctUntilChanged:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466ab0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L466ab6.  v0:= temp @kind object;
  #L466ab8.  call temp:= `distinctUntilChanged`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466abe.  v0:= temp @kind object;
  #L466ac0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466ad4.  v0:= "comparer is null" @kind object;
  #L466ad8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466ade.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged`;
  #L466ae2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L466ae8.  v1:= temp @kind object;
  #L466aea.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDistinctUntilChanged;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L466af0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466af6.  v3:= temp @kind object;
  #L466af8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466b0c.  v0:= "keySelector is null" @kind object;
  #L466b10.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466b16.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged`;
  #L466b1a.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L466b20.  v1:= temp @kind object;
  #L466b22.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDistinctUntilChanged;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L466b28.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466b2e.  v3:= temp @kind object;
  #L466b30.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doAfterNext`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doAfterNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466b44.  v0:= "onAfterNext is null" @kind object;
  #L466b48.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466b4e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoAfterNext`;
  #L466b52.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoAfterNext;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L466b58.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466b5e.  v2:= temp @kind object;
  #L466b60.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doAfterTerminate`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doAfterTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L466b74.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466b7a.  v0:= temp @kind object;
  #L466b7c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466b82.  v1:= temp @kind object;
  #L466b84.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466b88.  call temp:= `a`(v3, v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L466b8e.  v4:= temp @kind object;
  #L466b90.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doFinally`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doFinally:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466ba4.  v0:= "onFinally is null" @kind object;
  #L466ba8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466bae.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally`;
  #L466bb2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L466bb8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466bbe.  v2:= temp @kind object;
  #L466bc0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnCancel`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnCancel:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466bd4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466bda.  v0:= temp @kind object;
  #L466bdc.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L466be0.  call temp:= `doOnLifecycle`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466be6.  v3:= temp @kind object;
  #L466be8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnComplete`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnComplete:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L466bfc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466c02.  v0:= temp @kind object;
  #L466c04.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466c0a.  v1:= temp @kind object;
  #L466c0c.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466c10.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L466c16.  v4:= temp @kind object;
  #L466c18.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnEach`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L466c2c.  v0:= "onNotification is null" @kind object;
  #L466c30.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466c36.  call temp:= `notificationOnNext`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466c3c.  v0:= temp @kind object;
  #L466c3e.  call temp:= `notificationOnError`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466c44.  v1:= temp @kind object;
  #L466c46.  call temp:= `notificationOnComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnComplete:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L466c4c.  v4:= temp @kind object;
  #L466c4e.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466c52.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L466c58.  v4:= temp @kind object;
  #L466c5a.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnEach`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnEach:(Lorg/reactivestreams/Subscriber;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L466cc4.  v0:= "subscriber is null" @kind object;
  #L466cc8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466cce.  call temp:= `subscriberOnNext`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.subscriberOnNext:(Lorg/reactivestreams/Subscriber;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466cd4.  v0:= temp @kind object;
  #L466cd6.  call temp:= `subscriberOnError`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.subscriberOnError:(Lorg/reactivestreams/Subscriber;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466cdc.  v1:= temp @kind object;
  #L466cde.  call temp:= `subscriberOnComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.subscriberOnComplete:(Lorg/reactivestreams/Subscriber;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L466ce4.  v4:= temp @kind object;
  #L466ce6.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466cea.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L466cf0.  v4:= temp @kind object;
  #L466cf2.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466d04.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466d0a.  v0:= temp @kind object;
  #L466d0c.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466d10.  call temp:= `a`(v2, v0, v3, v1, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L466d16.  v3:= temp @kind object;
  #L466d18.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnLifecycle`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.LongConsumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466d2c.  v0:= "onSubscribe is null" @kind object;
  #L466d30.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466d36.  v0:= "onRequest is null" @kind object;
  #L466d3a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466d40.  v0:= "onCancel is null" @kind object;
  #L466d44.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466d4a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle`;
  #L466d4e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L466d54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466d5a.  v2:= temp @kind object;
  #L466d5c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnNext`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466d70.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466d76.  v0:= temp @kind object;
  #L466d78.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466d7c.  call temp:= `a`(v2, v3, v0, v1, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L466d82.  v3:= temp @kind object;
  #L466d84.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnRequest`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.LongConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnRequest:(Lio/reactivex/rxjava3/functions/LongConsumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466d98.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466d9e.  v0:= temp @kind object;
  #L466da0.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466da4.  call temp:= `doOnLifecycle`(v2, v0, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466daa.  v3:= temp @kind object;
  #L466dac.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnSubscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466dc0.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L466dc4.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466dc8.  call temp:= `doOnLifecycle`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466dce.  v3:= temp @kind object;
  #L466dd0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnTerminate`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L466de4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466dea.  v0:= temp @kind object;
  #L466dec.  call temp:= `actionConsumer`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.actionConsumer:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L466df2.  v1:= temp @kind object;
  #L466df4.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L466df8.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L466dfe.  v4:= temp @kind object;
  #L466e00.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `elementAt`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAt:(J)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46b0f4.  v0:= 0L;
  #L46b0f8.  v2:= lcmp(v4, v0);
  #L46b0fc.  if v2 < 0 then goto L46b114;
  #L46b100.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtMaybe`;
  #L46b104.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;J)V` @kind direct;
  #L46b10a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46b110.  v4:= temp @kind object;
  #L46b112.  return v4 @kind object;
  #L46b114.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L46b118.  v1:= new `java.lang.StringBuilder`;
  #L46b11c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46b122.  v2:= "index >= 0 required but it was " @kind object;
  #L46b126.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b12c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b132.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46b138.  v4:= temp @kind object;
  #L46b13a.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46b140.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Single` `elementAt`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46b354.  v0:= 0L;
  #L46b358.  v2:= lcmp(v4, v0);
  #L46b35c.  if v2 < 0 then goto L46b37e;
  #L46b360.  v0:= "defaultItem is null" @kind object;
  #L46b364.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b36a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle`;
  #L46b36e.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/lang/Object;)V` @kind direct;
  #L46b374.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b37a.  v4:= temp @kind object;
  #L46b37c.  return v4 @kind object;
  #L46b37e.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L46b382.  v0:= new `java.lang.StringBuilder`;
  #L46b386.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46b38c.  v1:= "index >= 0 required but it was " @kind object;
  #L46b390.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b396.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b39c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46b3a2.  v4:= temp @kind object;
  #L46b3a4.  call `<init>`(v6, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46b3aa.  throw v6;
}
procedure `io.reactivex.rxjava3.core.Single` `elementAtOrError`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAtOrError:(J)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46b3bc.  v0:= 0L;
  #L46b3c0.  v2:= lcmp(v4, v0);
  #L46b3c4.  if v2 < 0 then goto L46b3de;
  #L46b3c8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle`;
  #L46b3cc.  v1:= 0I;
  #L46b3ce.  call `<init>`(v0, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/lang/Object;)V` @kind direct;
  #L46b3d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b3da.  v4:= temp @kind object;
  #L46b3dc.  return v4 @kind object;
  #L46b3de.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L46b3e2.  v1:= new `java.lang.StringBuilder`;
  #L46b3e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46b3ec.  v2:= "index >= 0 required but it was " @kind object;
  #L46b3f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b3f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b3fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46b402.  v4:= temp @kind object;
  #L46b404.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46b40a.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `filter`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466e90.  v0:= "predicate is null" @kind object;
  #L466e94.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466e9a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter`;
  #L466e9e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFilter;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L466ea4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466eaa.  v2:= temp @kind object;
  #L466eac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `first`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.first:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46b41c.  v0:= 0L;
  #L46b420.  call temp:= `elementAt`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b426.  v3:= temp @kind object;
  #L46b428.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `firstElement`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.firstElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46b154.  v0:= 0L;
  #L46b158.  call temp:= `elementAt`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAt:(J)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46b15e.  v0:= temp @kind object;
  #L46b160.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `firstOrError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.firstOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46b43c.  v0:= 0L;
  #L46b440.  call temp:= `elementAtOrError`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAtOrError:(J)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b446.  v0:= temp @kind object;
  #L46b448.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `firstOrErrorStage`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.firstOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46bf3c.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFirstStageSubscriber`;
  #L46bf40.  v1:= 0I;
  #L46bf42.  v2:= 0I;
  #L46bf44.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFirstStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L46bf4a.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L46bf50.  v0:= temp @kind object;
  #L46bf52.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L46bf56.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `firstStage`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.firstStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46bf68.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFirstStageSubscriber`;
  #L46bf6c.  v1:= 1I;
  #L46bf6e.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFirstStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L46bf74.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L46bf7a.  v3:= temp @kind object;
  #L46bf7c.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L46bf80.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L466ec0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466ec6.  v0:= temp;
  #L466ec8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466ece.  v1:= temp;
  #L466ed0.  v2:= 0I;
  #L466ed2.  call temp:= `flatMap`(v3, v4, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466ed8.  v4:= temp @kind object;
  #L466eda.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466fb8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466fbe.  v0:= temp;
  #L466fc0.  v1:= 0I;
  #L466fc2.  call temp:= `flatMap`(v2, v3, v1, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466fc8.  v3:= temp @kind object;
  #L466fca.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L466fdc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466fe2.  v4:= temp;
  #L466fe4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466fea.  v5:= temp;
  #L466fec.  v3:= 0I;
  #L466fee.  v0:= v6 @kind object;
  #L466ff0.  v1:= v7 @kind object;
  #L466ff2.  v2:= v8 @kind object;
  #L466ff4.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466ffa.  v7:= temp @kind object;
  #L466ffc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4670bc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4670c2.  v5:= temp;
  #L4670c4.  v3:= 0I;
  #L4670c6.  v0:= v6 @kind object;
  #L4670c8.  v1:= v7 @kind object;
  #L4670ca.  v2:= v8 @kind object;
  #L4670cc.  v4:= v9;
  #L4670ce.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4670d4.  v7:= temp @kind object;
  #L4670d6.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `boolean` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L467010.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L467016.  v4:= temp;
  #L467018.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46701e.  v5:= temp;
  #L467020.  v0:= v6 @kind object;
  #L467022.  v1:= v7 @kind object;
  #L467024.  v2:= v8 @kind object;
  #L467026.  v3:= v9;
  #L467028.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46702e.  v7:= temp @kind object;
  #L467030.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L467044.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46704a.  v5:= temp;
  #L46704c.  v0:= v6 @kind object;
  #L46704e.  v1:= v7 @kind object;
  #L467050.  v2:= v8 @kind object;
  #L467052.  v3:= v9;
  #L467054.  v4:= v10;
  #L467056.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46705c.  v7:= temp @kind object;
  #L46705e.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L467070.  v0:= "mapper is null" @kind object;
  #L467074.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46707a.  v0:= "combiner is null" @kind object;
  #L46707e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467084.  v0:= "maxConcurrency" @kind object;
  #L467088.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46708e.  v0:= "bufferSize" @kind object;
  #L467092.  call temp:= `verifyPositive`(v6, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L467098.  call temp:= `flatMapWithCombiner`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.flatMapWithCombiner:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46709e.  v2:= temp @kind object;
  #L4670a0.  call temp:= `flatMap`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4670a6.  v2:= temp @kind object;
  #L4670a8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4670e8.  v0:= "onNextMapper is null" @kind object;
  #L4670ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4670f2.  v0:= "onErrorMapper is null" @kind object;
  #L4670f6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4670fc.  v0:= "onCompleteSupplier is null" @kind object;
  #L467100.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467106.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMapNotification`;
  #L46710a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMapNotification;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L467110.  call temp:= `merge`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467116.  v2:= temp @kind object;
  #L467118.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object, `int` v5 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46712c.  v0:= "onNextMapper is null" @kind object;
  #L467130.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467136.  v0:= "onErrorMapper is null" @kind object;
  #L46713a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467140.  v0:= "onCompleteSupplier is null" @kind object;
  #L467144.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46714a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMapNotification`;
  #L46714e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMapNotification;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L467154.  call temp:= `merge`(v0, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46715a.  v2:= temp @kind object;
  #L46715c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466eec.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466ef2.  v0:= temp;
  #L466ef4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466efa.  v1:= temp;
  #L466efc.  call temp:= `flatMap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466f02.  v3:= temp @kind object;
  #L466f04.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466f18.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L466f1e.  v0:= temp;
  #L466f20.  call temp:= `flatMap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L466f26.  v2:= temp @kind object;
  #L466f28.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L466f3c.  v0:= "mapper is null" @kind object;
  #L466f40.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L466f46.  v0:= "maxConcurrency" @kind object;
  #L466f4a.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466f50.  v0:= "bufferSize" @kind object;
  #L466f54.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L466f5a.  v0:= instanceof @variable v7 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L466f5e.  if v0 == 0 then goto L466f88;
  #L466f62.  v9:= v7 @kind object;
  #L466f64.  v9:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v9 @kind object;
  #L466f68.  call temp:= `get`(v9) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L466f6e.  v9:= temp @kind object;
  #L466f70.  if v9 != 0 then goto L466f7e;
  #L466f74.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466f7a.  v8:= temp @kind object;
  #L466f7c.  return v8 @kind object;
  #L466f7e.  call temp:= `scalarXMap`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466f84.  v8:= temp @kind object;
  #L466f86.  return v8 @kind object;
  #L466f88.  v6:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap`;
  #L466f8c.  v0:= v6 @kind object;
  #L466f8e.  v1:= v7 @kind object;
  #L466f90.  v2:= v8 @kind object;
  #L466f92.  v3:= v9;
  #L466f94.  v4:= v10;
  #L466f96.  v5:= v11;
  #L466f98.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L466f9e.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L466fa4.  v8:= temp @kind object;
  #L466fa6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L464f78.  v0:= 0I;
  #L464f7a.  v1:= 2147483647I;
  #L464f80.  call temp:= `flatMapCompletable`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L464f86.  v3:= temp @kind object;
  #L464f88.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L464f9c.  v0:= "mapper is null" @kind object;
  #L464fa0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L464fa6.  v0:= "maxConcurrency" @kind object;
  #L464faa.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L464fb0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable`;
  #L464fb4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L464fba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L464fc0.  v2:= temp @kind object;
  #L464fc2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L467170.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L467176.  v0:= temp;
  #L467178.  call temp:= `flatMapIterable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46717e.  v2:= temp @kind object;
  #L467180.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L467194.  v0:= "mapper is null" @kind object;
  #L467198.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46719e.  v0:= "bufferSize" @kind object;
  #L4671a2.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4671a8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable`;
  #L4671ac.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4671b2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4671b8.  v2:= temp @kind object;
  #L4671ba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4671cc.  v0:= "mapper is null" @kind object;
  #L4671d0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4671d6.  v0:= "combiner is null" @kind object;
  #L4671da.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4671e0.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4671e6.  v2:= temp @kind object;
  #L4671e8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4671ee.  v5:= temp;
  #L4671f0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4671f6.  v6:= temp;
  #L4671f8.  v4:= 0I;
  #L4671fa.  v1:= v7 @kind object;
  #L4671fc.  v3:= v9 @kind object;
  #L4671fe.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L467204.  v8:= temp @kind object;
  #L467206.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L467218.  v0:= "mapper is null" @kind object;
  #L46721c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467222.  v0:= "combiner is null" @kind object;
  #L467226.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46722c.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L467232.  v2:= temp @kind object;
  #L467234.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46723a.  v5:= temp;
  #L46723c.  v4:= 0I;
  #L46723e.  v1:= v7 @kind object;
  #L467240.  v3:= v9 @kind object;
  #L467242.  v6:= v10;
  #L467244.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46724a.  v8:= temp @kind object;
  #L46724c.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L467260.  v0:= 0I;
  #L467262.  v1:= 2147483647I;
  #L467268.  call temp:= `flatMapMaybe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46726e.  v3:= temp @kind object;
  #L467270.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L467284.  v0:= "mapper is null" @kind object;
  #L467288.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46728e.  v0:= "maxConcurrency" @kind object;
  #L467292.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L467298.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe`;
  #L46729c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4672a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4672a8.  v2:= temp @kind object;
  #L4672aa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapSingle`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4672bc.  v0:= 0I;
  #L4672be.  v1:= 2147483647I;
  #L4672c4.  call temp:= `flatMapSingle`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4672ca.  v3:= temp @kind object;
  #L4672cc.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapSingle`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4672e0.  v0:= "mapper is null" @kind object;
  #L4672e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4672ea.  v0:= "maxConcurrency" @kind object;
  #L4672ee.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4672f4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSingle`;
  #L4672f8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4672fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467304.  v2:= temp @kind object;
  #L467306.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L467318.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46731e.  v0:= temp;
  #L467320.  call temp:= `flatMapStream`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L467326.  v2:= temp @kind object;
  #L467328.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46733c.  v0:= "mapper is null" @kind object;
  #L467340.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467346.  v0:= "prefetch" @kind object;
  #L46734a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L467350.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream`;
  #L467354.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L46735a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467360.  v2:= temp @kind object;
  #L467362.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEach`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEach:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46b918.  call temp:= `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46b91e.  v1:= temp @kind object;
  #L46b920.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46b934.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46b938.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46b93c.  call temp:= `forEachWhile`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46b942.  v3:= temp @kind object;
  #L46b944.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b958.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46b95c.  call temp:= `forEachWhile`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46b962.  v2:= temp @kind object;
  #L46b964.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b978.  v0:= "onNext is null" @kind object;
  #L46b97c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b982.  v0:= "onError is null" @kind object;
  #L46b986.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b98c.  v0:= "onComplete is null" @kind object;
  #L46b990.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b996.  v0:= new `io.reactivex.rxjava3.internal.subscribers.ForEachWhileSubscriber`;
  #L46b99a.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/subscribers/ForEachWhileSubscriber;.<init>:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46b9a0.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46b9a6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L467824.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46782a.  v0:= temp @kind object;
  #L46782c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L467832.  v1:= temp;
  #L467834.  v2:= 0I;
  #L467836.  call temp:= `groupBy`(v3, v4, v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46783c.  v4:= temp @kind object;
  #L46783e.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46787c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L467882.  v0:= temp;
  #L467884.  v1:= 0I;
  #L467886.  call temp:= `groupBy`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46788c.  v3:= temp @kind object;
  #L46788e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4678a0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4678a6.  v0:= temp;
  #L4678a8.  call temp:= `groupBy`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4678ae.  v2:= temp @kind object;
  #L4678b0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `boolean` v11 , `int` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4678c4.  v0:= "keySelector is null" @kind object;
  #L4678c8.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4678ce.  v0:= "valueSelector is null" @kind object;
  #L4678d2.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4678d8.  v0:= "bufferSize" @kind object;
  #L4678dc.  call temp:= `verifyPositive`(v12, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4678e2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy`;
  #L4678e6.  v7:= 0I;
  #L4678e8.  v1:= v0 @kind object;
  #L4678ea.  v2:= v8 @kind object;
  #L4678ec.  v3:= v9 @kind object;
  #L4678ee.  v4:= v10 @kind object;
  #L4678f0.  v5:= v12;
  #L4678f2.  v6:= v11;
  #L4678f4.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4678fa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467900.  v9:= temp @kind object;
  #L467902.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `boolean` v11 , `int` v12 , `io.reactivex.rxjava3.functions.Function` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZILio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L467914.  v0:= "keySelector is null" @kind object;
  #L467918.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46791e.  v0:= "valueSelector is null" @kind object;
  #L467922.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467928.  v0:= "bufferSize" @kind object;
  #L46792c.  call temp:= `verifyPositive`(v12, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L467932.  v0:= "evictingMapFactory is null" @kind object;
  #L467936.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46793c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy`;
  #L467940.  v1:= v0 @kind object;
  #L467942.  v2:= v8 @kind object;
  #L467944.  v3:= v9 @kind object;
  #L467946.  v4:= v10 @kind object;
  #L467948.  v5:= v12;
  #L46794a.  v6:= v11;
  #L46794c.  v7:= v13 @kind object;
  #L46794e.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L467954.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46795a.  v9:= temp @kind object;
  #L46795c.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L467850.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L467856.  v0:= temp @kind object;
  #L467858.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46785e.  v1:= temp;
  #L467860.  call temp:= `groupBy`(v2, v3, v0, v4, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L467866.  v3:= temp @kind object;
  #L467868.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupJoin`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `org.reactivestreams.Publisher` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupJoin:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L467970.  v0:= "other is null" @kind object;
  #L467974.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46797a.  v0:= "leftEnd is null" @kind object;
  #L46797e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467984.  v0:= "rightEnd is null" @kind object;
  #L467988.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46798e.  v0:= "resultSelector is null" @kind object;
  #L467992.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467998.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin`;
  #L46799c.  v1:= v0 @kind object;
  #L46799e.  v2:= v7 @kind object;
  #L4679a0.  v3:= v8 @kind object;
  #L4679a2.  v4:= v9 @kind object;
  #L4679a4.  v5:= v10 @kind object;
  #L4679a6.  v6:= v11 @kind object;
  #L4679a8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4679ae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4679b4.  v8:= temp @kind object;
  #L4679b6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `hide`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.hide:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4679c8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableHide`;
  #L4679cc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableHide;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4679d2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4679d8.  v0:= temp @kind object;
  #L4679da.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ignoreElements`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.ignoreElements:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L464fd4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableIgnoreElementsCompletable`;
  #L464fd8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableIgnoreElementsCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L464fde.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L464fe4.  v0:= temp @kind object;
  #L464fe6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `isEmpty`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.isEmpty:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b45c.  call temp:= `alwaysFalse`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysFalse:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L46b462.  v0:= temp @kind object;
  #L46b464.  call temp:= `all`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.all:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b46a.  v0:= temp @kind object;
  #L46b46c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `join`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `org.reactivestreams.Publisher` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.join:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L467bd0.  v0:= "other is null" @kind object;
  #L467bd4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467bda.  v0:= "leftEnd is null" @kind object;
  #L467bde.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467be4.  v0:= "rightEnd is null" @kind object;
  #L467be8.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467bee.  v0:= "resultSelector is null" @kind object;
  #L467bf2.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L467bf8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableJoin`;
  #L467bfc.  v1:= v0 @kind object;
  #L467bfe.  v2:= v7 @kind object;
  #L467c00.  v3:= v8 @kind object;
  #L467c02.  v4:= v9 @kind object;
  #L467c04.  v5:= v10 @kind object;
  #L467c06.  v6:= v11 @kind object;
  #L467c08.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableJoin;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L467c0e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L467c14.  v8:= temp @kind object;
  #L467c16.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `last`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.last:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b480.  v0:= "defaultItem is null" @kind object;
  #L46b484.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b48a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastSingle`;
  #L46b48e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastSingle;.<init>:(Lorg/reactivestreams/Publisher;Ljava/lang/Object;)V` @kind direct;
  #L46b494.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b49a.  v2:= temp @kind object;
  #L46b49c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `lastElement`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.lastElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b174.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe`;
  #L46b178.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46b17e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46b184.  v0:= temp @kind object;
  #L46b186.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `lastOrError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.lastOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46b4b0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastSingle`;
  #L46b4b4.  v1:= 0I;
  #L46b4b6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastSingle;.<init>:(Lorg/reactivestreams/Publisher;Ljava/lang/Object;)V` @kind direct;
  #L46b4bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b4c2.  v0:= temp @kind object;
  #L46b4c4.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `lastOrErrorStage`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.lastOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46bf94.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableLastStageSubscriber`;
  #L46bf98.  v1:= 0I;
  #L46bf9a.  v2:= 0I;
  #L46bf9c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableLastStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L46bfa2.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L46bfa8.  v0:= temp @kind object;
  #L46bfaa.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L46bfae.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `lastStage`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.lastStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46bfc0.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableLastStageSubscriber`;
  #L46bfc4.  v1:= 1I;
  #L46bfc6.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableLastStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L46bfcc.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L46bfd2.  v3:= temp @kind object;
  #L46bfd4.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L46bfd8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `lift`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.FlowableOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.lift:(Lio/reactivex/rxjava3/core/FlowableOperator;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4680e8.  v0:= "lifter is null" @kind object;
  #L4680ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4680f2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableLift`;
  #L4680f6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLift;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/FlowableOperator;)V` @kind direct;
  #L4680fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468102.  v2:= temp @kind object;
  #L468104.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `map`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468118.  v0:= "mapper is null" @kind object;
  #L46811c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468122.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMap`;
  #L468126.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46812c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468132.  v2:= temp @kind object;
  #L468134.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mapOptional`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468148.  v0:= "mapper is null" @kind object;
  #L46814c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468152.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional`;
  #L468156.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46815c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468162.  v2:= temp @kind object;
  #L468164.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `materialize`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.materialize:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468178.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize`;
  #L46817c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L468182.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468188.  v0:= temp @kind object;
  #L46818a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468638.  v0:= "other is null" @kind object;
  #L46863c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468642.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithCompletable`;
  #L468646.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L46864c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468652.  v2:= temp @kind object;
  #L468654.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468668.  v0:= "other is null" @kind object;
  #L46866c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468672.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe`;
  #L468676.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46867c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468682.  v2:= temp @kind object;
  #L468684.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468698.  v0:= "other is null" @kind object;
  #L46869c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4686a2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle`;
  #L4686a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4686ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4686b2.  v2:= temp @kind object;
  #L4686b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4686c8.  v0:= "other is null" @kind object;
  #L4686cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4686d2.  call temp:= `merge`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4686d8.  v2:= temp @kind object;
  #L4686da.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `observeOn`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46870c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L468712.  v0:= temp;
  #L468714.  v1:= 0I;
  #L468716.  call temp:= `observeOn`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46871c.  v3:= temp @kind object;
  #L46871e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `observeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468730.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L468736.  v0:= temp;
  #L468738.  call temp:= `observeOn`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46873e.  v2:= temp @kind object;
  #L468740.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `observeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468754.  v0:= "scheduler is null" @kind object;
  #L468758.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46875e.  v0:= "bufferSize" @kind object;
  #L468762.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L468768.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableObserveOn`;
  #L46876c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableObserveOn;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/Scheduler;ZI)V` @kind direct;
  #L468772.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468778.  v2:= temp @kind object;
  #L46877a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `ofType`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46878c.  v0:= "clazz is null" @kind object;
  #L468790.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468796.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L46879c.  v0:= temp @kind object;
  #L46879e.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4687a4.  v0:= temp @kind object;
  #L4687a6.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4687ac.  v2:= temp @kind object;
  #L4687ae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4687c0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4687c6.  v0:= temp;
  #L4687c8.  v1:= 0I;
  #L4687ca.  v2:= 1I;
  #L4687cc.  call temp:= `onBackpressureBuffer`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4687d2.  v0:= temp @kind object;
  #L4687d4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46880c.  v0:= 0I;
  #L46880e.  call temp:= `onBackpressureBuffer`(v1, v2, v0, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468814.  v2:= temp @kind object;
  #L468816.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(ILio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4688c4.  v0:= 0I;
  #L4688c6.  call temp:= `onBackpressureBuffer`(v1, v2, v0, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZLio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4688cc.  v2:= temp @kind object;
  #L4688ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468828.  v0:= 0I;
  #L46882a.  call temp:= `onBackpressureBuffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468830.  v2:= temp @kind object;
  #L468832.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `int` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L468844.  v0:= "capacity" @kind object;
  #L468848.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46884e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBuffer`;
  #L468852.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L468856.  v1:= v0 @kind object;
  #L468858.  v2:= v7 @kind object;
  #L46885a.  v3:= v8;
  #L46885c.  v4:= v10;
  #L46885e.  v5:= v9;
  #L468860.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBuffer;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IZZLio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L468866.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46886c.  v8:= temp @kind object;
  #L46886e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `int` v8 , `boolean` v9 , `boolean` v10 , `io.reactivex.rxjava3.functions.Action` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZLio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L468880.  v0:= "onOverflow is null" @kind object;
  #L468884.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46888a.  v0:= "capacity" @kind object;
  #L46888e.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L468894.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBuffer`;
  #L468898.  v1:= v0 @kind object;
  #L46889a.  v2:= v7 @kind object;
  #L46889c.  v3:= v8;
  #L46889e.  v4:= v10;
  #L4688a0.  v5:= v9;
  #L4688a2.  v6:= v11 @kind object;
  #L4688a4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBuffer;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IZZLio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4688aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4688b0.  v8:= temp @kind object;
  #L4688b2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `io.reactivex.rxjava3.functions.Action` v10 @kind object, `io.reactivex.rxjava3.core.BackpressureOverflowStrategy` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(JLio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4688e0.  v0:= "overflowStrategy is null" @kind object;
  #L4688e4.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4688ea.  v0:= "capacity" @kind object;
  #L4688ee.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L4688f4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy`;
  #L4688f8.  v1:= v0 @kind object;
  #L4688fa.  v2:= v7 @kind object;
  #L4688fc.  v3:= v8 @kind wide;
  #L4688fe.  v5:= v10 @kind object;
  #L468900.  v6:= v11 @kind object;
  #L468902.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBufferStrategy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;)V` @kind direct;
  #L468908.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46890e.  v8:= temp @kind object;
  #L468910.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4687e8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4687ee.  v0:= temp;
  #L4687f0.  v1:= 1I;
  #L4687f2.  call temp:= `onBackpressureBuffer`(v2, v0, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4687f8.  v3:= temp @kind object;
  #L4687fa.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureDrop`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureDrop:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468924.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureDrop`;
  #L468928.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureDrop;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L46892e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468934.  v0:= temp @kind object;
  #L468936.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureDrop`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureDrop:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468948.  v0:= "onDrop is null" @kind object;
  #L46894c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468952.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureDrop`;
  #L468956.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureDrop;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L46895c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468962.  v2:= temp @kind object;
  #L468964.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureLatest`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureLatest:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468978.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureLatest`;
  #L46897c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureLatest;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L468982.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468988.  v0:= temp @kind object;
  #L46898a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorComplete`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorComplete:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46899c.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4689a2.  v0:= temp @kind object;
  #L4689a4.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4689aa.  v0:= temp @kind object;
  #L4689ac.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorComplete`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4689c0.  v0:= "predicate is null" @kind object;
  #L4689c4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4689ca.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete`;
  #L4689ce.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4689d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4689da.  v2:= temp @kind object;
  #L4689dc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorResumeNext`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4689f0.  v0:= "fallbackSupplier is null" @kind object;
  #L4689f4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4689fa.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext`;
  #L4689fe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorNext;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L468a04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468a0a.  v2:= temp @kind object;
  #L468a0c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorResumeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorResumeWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468a20.  v0:= "fallback is null" @kind object;
  #L468a24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468a2a.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L468a30.  v2:= temp @kind object;
  #L468a32.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468a38.  v2:= temp @kind object;
  #L468a3a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorReturn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468a4c.  v0:= "itemSupplier is null" @kind object;
  #L468a50.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468a56.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorReturn`;
  #L468a5a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L468a60.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468a66.  v2:= temp @kind object;
  #L468a68.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorReturnItem`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468a7c.  v0:= "item is null" @kind object;
  #L468a80.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468a86.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L468a8c.  v2:= temp @kind object;
  #L468a8e.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468a94.  v2:= temp @kind object;
  #L468a96.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onTerminateDetach`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onTerminateDetach:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468aa8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDetach`;
  #L468aac.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDetach;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L468ab2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468ab8.  v0:= temp @kind object;
  #L468aba.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `parallel`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.parallel:()Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bc68.  call temp:= `from`(v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L46bc6e.  v0:= temp @kind object;
  #L46bc70.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `parallel`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.parallel:(I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46bc84.  call temp:= `from`(v0, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L46bc8a.  v1:= temp @kind object;
  #L46bc8c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `parallel`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.parallel:(II)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46bca0.  call temp:= `from`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L46bca6.  v1:= temp @kind object;
  #L46bca8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `publish`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468acc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L468ad2.  v0:= temp;
  #L468ad4.  call temp:= `publish`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468ada.  v2:= temp @kind object;
  #L468adc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `publish`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L468af0.  v0:= "selector is null" @kind object;
  #L468af4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468afa.  v0:= "prefetch" @kind object;
  #L468afe.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L468b04.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowablePublishMulticast`;
  #L468b08.  v1:= 0I;
  #L468b0a.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublishMulticast;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L468b10.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468b16.  v3:= temp @kind object;
  #L468b18.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `publish`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:()Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ba6c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46ba72.  v0:= temp;
  #L46ba74.  call temp:= `publish`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(I)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L46ba7a.  v0:= temp @kind object;
  #L46ba7c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `publish`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(I)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ba90.  v0:= "bufferSize" @kind object;
  #L46ba94.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46ba9a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish`;
  #L46ba9e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish;.<init>:(Lorg/reactivestreams/Publisher;I)V` @kind direct;
  #L46baa4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L46baaa.  v2:= temp @kind object;
  #L46baac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `rebatchRequests`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.rebatchRequests:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L468c84.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.ImmediateThinScheduler.INSTANCE` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L468c88.  v1:= 1I;
  #L468c8a.  call temp:= `observeOn`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468c90.  v3:= temp @kind object;
  #L468c92.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `reduce`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.reduce:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b198.  v0:= "reducer is null" @kind object;
  #L46b19c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b1a2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceMaybe`;
  #L46b1a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L46b1ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46b1b2.  v2:= temp @kind object;
  #L46b1b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `reduce`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.reduce:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b4d8.  v0:= "seed is null" @kind object;
  #L46b4dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b4e2.  v0:= "reducer is null" @kind object;
  #L46b4e6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b4ec.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle`;
  #L46b4f0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle;.<init>:(Lorg/reactivestreams/Publisher;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L46b4f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b4fc.  v2:= temp @kind object;
  #L46b4fe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `reduceWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.reduceWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b510.  v0:= "seedSupplier is null" @kind object;
  #L46b514.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b51a.  v0:= "reducer is null" @kind object;
  #L46b51e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b524.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceWithSingle`;
  #L46b528.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceWithSingle;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L46b52e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b534.  v2:= temp @kind object;
  #L46b536.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L468ca4.  v0:= 9223372036854775807L;
  #L468cae.  call temp:= `repeat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468cb4.  v0:= temp @kind object;
  #L468cb6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L468cc8.  v0:= 0L;
  #L468ccc.  v2:= lcmp(v4, v0);
  #L468cd0.  if v2 < 0 then goto L468cf6;
  #L468cd4.  if v2 != 0 then goto L468ce2;
  #L468cd8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468cde.  v4:= temp @kind object;
  #L468ce0.  return v4 @kind object;
  #L468ce2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeat`;
  #L468ce6.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeat;.<init>:(Lio/reactivex/rxjava3/core/Flowable;J)V` @kind direct;
  #L468cec.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468cf2.  v4:= temp @kind object;
  #L468cf4.  return v4 @kind object;
  #L468cf6.  v0:= new `java.lang.IllegalArgumentException`;
  #L468cfa.  v1:= new `java.lang.StringBuilder`;
  #L468cfe.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L468d04.  v2:= "times >= 0 required but it was " @kind object;
  #L468d08.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L468d0e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L468d14.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L468d1a.  v4:= temp @kind object;
  #L468d1c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L468d22.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatUntil`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468d34.  v0:= "stop is null" @kind object;
  #L468d38.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468d3e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatUntil`;
  #L468d42.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatUntil;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BooleanSupplier;)V` @kind direct;
  #L468d48.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468d4e.  v2:= temp @kind object;
  #L468d50.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatWhen`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468d64.  v0:= "handler is null" @kind object;
  #L468d68.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468d6e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen`;
  #L468d72.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L468d78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468d7e.  v2:= temp @kind object;
  #L468d80.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468d94.  v0:= "selector is null" @kind object;
  #L468d98.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468d9e.  call temp:= `replaySupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L468da4.  v0:= temp @kind object;
  #L468da6.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468dac.  v2:= temp @kind object;
  #L468dae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468dc0.  v0:= "selector is null" @kind object;
  #L468dc4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468dca.  v0:= "bufferSize" @kind object;
  #L468dce.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L468dd4.  v0:= 0I;
  #L468dd6.  call temp:= `replaySupplier`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;IZ)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L468ddc.  v3:= temp @kind object;
  #L468dde.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468de4.  v2:= temp @kind object;
  #L468de6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L468e30.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L468e36.  v6:= temp @kind object;
  #L468e38.  v0:= v7 @kind object;
  #L468e3a.  v1:= v8 @kind object;
  #L468e3c.  v2:= v9;
  #L468e3e.  v3:= v10 @kind wide;
  #L468e40.  v5:= v12 @kind object;
  #L468e42.  call temp:= `replay`(v0, v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468e48.  v8:= temp @kind object;
  #L468e4a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `int` v10 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L468e5c.  v0:= "selector is null" @kind object;
  #L468e60.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468e66.  v0:= "unit is null" @kind object;
  #L468e6a.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468e70.  v0:= "bufferSize" @kind object;
  #L468e74.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L468e7a.  v0:= "scheduler is null" @kind object;
  #L468e7e.  call temp:= `requireNonNull`(v14, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468e84.  v7:= 0I;
  #L468e86.  v1:= v8 @kind object;
  #L468e88.  v2:= v10;
  #L468e8a.  v3:= v11 @kind wide;
  #L468e8c.  v5:= v13 @kind object;
  #L468e8e.  v6:= v14 @kind object;
  #L468e90.  call temp:= `replaySupplier`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L468e96.  v10:= temp @kind object;
  #L468e98.  call temp:= `multicastSelector`(v10, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468e9e.  v9:= temp @kind object;
  #L468ea0.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L468eb4.  v0:= "selector is null" @kind object;
  #L468eb8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468ebe.  v0:= "unit is null" @kind object;
  #L468ec2.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468ec8.  v0:= "bufferSize" @kind object;
  #L468ecc.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L468ed2.  v0:= "scheduler is null" @kind object;
  #L468ed6.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468edc.  v0:= v7 @kind object;
  #L468ede.  v1:= v9;
  #L468ee0.  v2:= v10 @kind wide;
  #L468ee2.  v4:= v12 @kind object;
  #L468ee4.  v5:= v13 @kind object;
  #L468ee6.  v6:= v14;
  #L468ee8.  call temp:= `replaySupplier`(v0, v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L468eee.  v9:= temp @kind object;
  #L468ef0.  call temp:= `multicastSelector`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468ef6.  v8:= temp @kind object;
  #L468ef8.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468df8.  v0:= "selector is null" @kind object;
  #L468dfc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468e02.  v0:= "bufferSize" @kind object;
  #L468e06.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L468e0c.  call temp:= `replaySupplier`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;IZ)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L468e12.  v3:= temp @kind object;
  #L468e14.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468e1a.  v2:= temp @kind object;
  #L468e1c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L468f0c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L468f12.  v5:= temp @kind object;
  #L468f14.  v0:= v6 @kind object;
  #L468f16.  v1:= v7 @kind object;
  #L468f18.  v2:= v8 @kind wide;
  #L468f1a.  v4:= v10 @kind object;
  #L468f1c.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468f22.  v7:= temp @kind object;
  #L468f24.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L468f38.  v0:= "selector is null" @kind object;
  #L468f3c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468f42.  v0:= "unit is null" @kind object;
  #L468f46.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468f4c.  v0:= "scheduler is null" @kind object;
  #L468f50.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468f56.  v6:= 0I;
  #L468f58.  v1:= v7 @kind object;
  #L468f5a.  v2:= v9 @kind wide;
  #L468f5c.  v4:= v11 @kind object;
  #L468f5e.  v5:= v12 @kind object;
  #L468f60.  call temp:= `replaySupplier`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L468f66.  v9:= temp @kind object;
  #L468f68.  call temp:= `multicastSelector`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468f6e.  v8:= temp @kind object;
  #L468f70.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L468f84.  v0:= "selector is null" @kind object;
  #L468f88.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468f8e.  v0:= "unit is null" @kind object;
  #L468f92.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468f98.  v0:= "scheduler is null" @kind object;
  #L468f9c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L468fa2.  v0:= v6 @kind object;
  #L468fa4.  v1:= v8 @kind wide;
  #L468fa6.  v3:= v10 @kind object;
  #L468fa8.  v4:= v11 @kind object;
  #L468faa.  v5:= v12;
  #L468fac.  call temp:= `replaySupplier`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L468fb2.  v8:= temp @kind object;
  #L468fb4.  call temp:= `multicastSelector`(v8, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L468fba.  v7:= temp @kind object;
  #L468fbc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:()Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bac0.  call temp:= `createFrom`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.createFrom:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L46bac6.  v0:= temp @kind object;
  #L46bac8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(I)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46badc.  v0:= "bufferSize" @kind object;
  #L46bae0.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46bae6.  v0:= 0I;
  #L46bae8.  call temp:= `create`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L46baee.  v2:= temp @kind object;
  #L46baf0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46bb28.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46bb2e.  v5:= temp @kind object;
  #L46bb30.  v0:= v6 @kind object;
  #L46bb32.  v1:= v7;
  #L46bb34.  v2:= v8 @kind wide;
  #L46bb36.  v4:= v10 @kind object;
  #L46bb38.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L46bb3e.  v7:= temp @kind object;
  #L46bb40.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46bb54.  v0:= "unit is null" @kind object;
  #L46bb58.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bb5e.  v0:= "scheduler is null" @kind object;
  #L46bb62.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bb68.  v0:= "bufferSize" @kind object;
  #L46bb6c.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46bb72.  v7:= 0I;
  #L46bb74.  v1:= v8 @kind object;
  #L46bb76.  v2:= v10 @kind wide;
  #L46bb78.  v4:= v12 @kind object;
  #L46bb7a.  v5:= v13 @kind object;
  #L46bb7c.  v6:= v9;
  #L46bb7e.  call temp:= `create`(v1, v2, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L46bb84.  v9:= temp @kind object;
  #L46bb86.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46bb98.  v0:= "unit is null" @kind object;
  #L46bb9c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bba2.  v0:= "scheduler is null" @kind object;
  #L46bba6.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bbac.  v0:= "bufferSize" @kind object;
  #L46bbb0.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46bbb6.  v0:= v7 @kind object;
  #L46bbb8.  v1:= v9 @kind wide;
  #L46bbba.  v3:= v11 @kind object;
  #L46bbbc.  v4:= v12 @kind object;
  #L46bbbe.  v5:= v8;
  #L46bbc0.  v6:= v13;
  #L46bbc2.  call temp:= `create`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L46bbc8.  v8:= temp @kind object;
  #L46bbca.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bb04.  v0:= "bufferSize" @kind object;
  #L46bb08.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46bb0e.  call temp:= `create`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L46bb14.  v2:= temp @kind object;
  #L46bb16.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bbdc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46bbe2.  v0:= temp @kind object;
  #L46bbe4.  call temp:= `replay`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L46bbea.  v2:= temp @kind object;
  #L46bbec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46bc00.  v0:= "unit is null" @kind object;
  #L46bc04.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bc0a.  v0:= "scheduler is null" @kind object;
  #L46bc0e.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bc14.  v6:= 0I;
  #L46bc16.  v1:= v7 @kind object;
  #L46bc18.  v2:= v8 @kind wide;
  #L46bc1a.  v4:= v10 @kind object;
  #L46bc1c.  v5:= v11 @kind object;
  #L46bc1e.  call temp:= `create`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L46bc24.  v8:= temp @kind object;
  #L46bc26.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bc38.  v0:= "unit is null" @kind object;
  #L46bc3c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bc42.  v0:= "scheduler is null" @kind object;
  #L46bc46.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bc4c.  call temp:= `create`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L46bc52.  v2:= temp @kind object;
  #L46bc54.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L468fd0.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L468fd6.  v0:= temp @kind object;
  #L468fd8.  v1:= 9223372036854775807L;
  #L468fe2.  call temp:= `retry`(v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L468fe8.  v0:= temp @kind object;
  #L468fea.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469050.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L469056.  v0:= temp @kind object;
  #L469058.  call temp:= `retry`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46905e.  v2:= temp @kind object;
  #L469060.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 , `io.reactivex.rxjava3.functions.Predicate` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L469074.  v0:= 0L;
  #L469078.  v2:= lcmp(v4, v0);
  #L46907c.  if v2 < 0 then goto L46909e;
  #L469080.  v0:= "predicate is null" @kind object;
  #L469084.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46908a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate`;
  #L46908e.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryPredicate;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L469094.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46909a.  v4:= temp @kind object;
  #L46909c.  return v4 @kind object;
  #L46909e.  v6:= new `java.lang.IllegalArgumentException`;
  #L4690a2.  v0:= new `java.lang.StringBuilder`;
  #L4690a6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4690ac.  v1:= "times >= 0 required but it was " @kind object;
  #L4690b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4690b6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4690bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4690c2.  v4:= temp @kind object;
  #L4690c4.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4690ca.  throw v6;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L468ffc.  v0:= "predicate is null" @kind object;
  #L469000.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469006.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryBiPredicate`;
  #L46900a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryBiPredicate;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L469010.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469016.  v2:= temp @kind object;
  #L469018.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46902c.  v0:= 9223372036854775807L;
  #L469036.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46903c.  v3:= temp @kind object;
  #L46903e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retryUntil`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retryUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4690dc.  v0:= "stop is null" @kind object;
  #L4690e0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4690e6.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4690ec.  v3:= temp @kind object;
  #L4690ee.  v0:= 9223372036854775807L;
  #L4690f8.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4690fe.  v3:= temp @kind object;
  #L469100.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retryWhen`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469114.  v0:= "handler is null" @kind object;
  #L469118.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46911e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryWhen`;
  #L469122.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryWhen;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L469128.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46912e.  v2:= temp @kind object;
  #L469130.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.safeSubscribe:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c2c0.  v0:= "subscriber is null" @kind object;
  #L46c2c4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c2ca.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.subscribers.SafeSubscriber` @kind boolean;
  #L46c2ce.  if v0 == 0 then goto L46c2de;
  #L46c2d2.  v2:= (`io.reactivex.rxjava3.subscribers.SafeSubscriber`) v2 @kind object;
  #L46c2d6.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46c2dc.  goto L46c2ee;
  #L46c2de.  v0:= new `io.reactivex.rxjava3.subscribers.SafeSubscriber`;
  #L46c2e2.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/subscribers/SafeSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L46c2e8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46c2ee.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469144.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46914a.  v0:= temp @kind object;
  #L46914c.  call temp:= `sample`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469152.  v2:= temp @kind object;
  #L469154.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L469194.  v0:= "unit is null" @kind object;
  #L469198.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46919e.  v0:= "scheduler is null" @kind object;
  #L4691a2.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4691a8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSampleTimed`;
  #L4691ac.  v7:= 0I;
  #L4691ae.  v1:= v0 @kind object;
  #L4691b0.  v2:= v8 @kind object;
  #L4691b2.  v3:= v9 @kind wide;
  #L4691b4.  v5:= v11 @kind object;
  #L4691b6.  v6:= v12 @kind object;
  #L4691b8.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4691be.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4691c4.  v9:= temp @kind object;
  #L4691c6.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4691d8.  v0:= "unit is null" @kind object;
  #L4691dc.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4691e2.  v0:= "scheduler is null" @kind object;
  #L4691e6.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4691ec.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSampleTimed`;
  #L4691f0.  v1:= v0 @kind object;
  #L4691f2.  v2:= v8 @kind object;
  #L4691f4.  v3:= v9 @kind wide;
  #L4691f6.  v5:= v11 @kind object;
  #L4691f8.  v6:= v12 @kind object;
  #L4691fa.  v7:= v13;
  #L4691fc.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L469202.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469208.  v9:= temp @kind object;
  #L46920a.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L469168.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46916e.  v4:= temp @kind object;
  #L469170.  v0:= v6 @kind object;
  #L469172.  v1:= v7 @kind wide;
  #L469174.  v3:= v9 @kind object;
  #L469176.  v5:= v10;
  #L469178.  call temp:= `sample`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46917e.  v7:= temp @kind object;
  #L469180.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46921c.  v0:= "sampler is null" @kind object;
  #L469220.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469226.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher`;
  #L46922a.  v1:= 0I;
  #L46922c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSamplePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Z)V` @kind direct;
  #L469232.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469238.  v3:= temp @kind object;
  #L46923a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(Lorg/reactivestreams/Publisher;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46924c.  v0:= "sampler is null" @kind object;
  #L469250.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469256.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher`;
  #L46925a.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSamplePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Z)V` @kind direct;
  #L469260.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469266.  v2:= temp @kind object;
  #L469268.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `scan`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.scan:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46927c.  v0:= "accumulator is null" @kind object;
  #L469280.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469286.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableScan`;
  #L46928a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScan;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L469290.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469296.  v2:= temp @kind object;
  #L469298.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `scan`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.scan:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4692ac.  v0:= "initialValue is null" @kind object;
  #L4692b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4692b6.  call temp:= `justSupplier`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4692bc.  v2:= temp @kind object;
  #L4692be.  call temp:= `scanWith`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.scanWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4692c4.  v2:= temp @kind object;
  #L4692c6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `scanWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.scanWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4692d8.  v0:= "seedSupplier is null" @kind object;
  #L4692dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4692e2.  v0:= "accumulator is null" @kind object;
  #L4692e6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4692ec.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableScanSeed`;
  #L4692f0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScanSeed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4692f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4692fc.  v2:= temp @kind object;
  #L4692fe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `serialize`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.serialize:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469310.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSerialized`;
  #L469314.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSerialized;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L46931a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469320.  v0:= temp @kind object;
  #L469322.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `share`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.share:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469334.  call temp:= `publish`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:()Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L46933a.  v0:= temp @kind object;
  #L46933c.  call temp:= `refCount`(v0) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469342.  v0:= temp @kind object;
  #L469344.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `single`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.single:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b608.  v0:= "defaultItem is null" @kind object;
  #L46b60c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b612.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingleSingle`;
  #L46b616.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L46b61c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b622.  v2:= temp @kind object;
  #L46b624.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `singleElement`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b1c8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingleMaybe`;
  #L46b1cc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingleMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L46b1d2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46b1d8.  v0:= temp @kind object;
  #L46b1da.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `singleOrError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46b638.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingleSingle`;
  #L46b63c.  v1:= 0I;
  #L46b63e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L46b644.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b64a.  v0:= temp @kind object;
  #L46b64c.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `singleOrErrorStage`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46bfec.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber`;
  #L46bff0.  v1:= 0I;
  #L46bff2.  v2:= 0I;
  #L46bff4.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableSingleStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L46bffa.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L46c000.  v0:= temp @kind object;
  #L46c002.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L46c006.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `singleStage`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46c018.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber`;
  #L46c01c.  v1:= 1I;
  #L46c01e.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableSingleStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L46c024.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L46c02a.  v3:= temp @kind object;
  #L46c02c.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L46c030.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skip`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skip:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L469358.  v0:= 0L;
  #L46935c.  v2:= lcmp(v4, v0);
  #L469360.  if v2 < 0 then goto L469386;
  #L469364.  if v2 != 0 then goto L469372;
  #L469368.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46936e.  v4:= temp @kind object;
  #L469370.  return v4 @kind object;
  #L469372.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip`;
  #L469376.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip;.<init>:(Lio/reactivex/rxjava3/core/Flowable;J)V` @kind direct;
  #L46937c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469382.  v4:= temp @kind object;
  #L469384.  return v4 @kind object;
  #L469386.  v0:= new `java.lang.IllegalArgumentException`;
  #L46938a.  v1:= new `java.lang.StringBuilder`;
  #L46938e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L469394.  v2:= "count >= 0 expected but it was " @kind object;
  #L469398.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46939e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4693a4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4693aa.  v4:= temp @kind object;
  #L4693ac.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4693b2.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skip`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skip:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4693c4.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4693ca.  v1:= temp @kind object;
  #L4693cc.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4693d2.  v1:= temp @kind object;
  #L4693d4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skip`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skip:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4693e8.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4693ee.  v1:= temp @kind object;
  #L4693f0.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4693f6.  v1:= temp @kind object;
  #L4693f8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46940c.  if v4 < 0 then goto L469432;
  #L469410.  if v4 != 0 then goto L46941e;
  #L469414.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46941a.  v4:= temp @kind object;
  #L46941c.  return v4 @kind object;
  #L46941e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLast`;
  #L469422.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLast;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @kind direct;
  #L469428.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46942e.  v4:= temp @kind object;
  #L469430.  return v4 @kind object;
  #L469432.  v0:= new `java.lang.IllegalArgumentException`;
  #L469436.  v1:= new `java.lang.StringBuilder`;
  #L46943a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L469440.  v2:= "count >= 0 required but it was " @kind object;
  #L469444.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46944a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L469450.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L469456.  v4:= temp @kind object;
  #L469458.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46945e.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L469470.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L469476.  v4:= temp @kind object;
  #L469478.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46947e.  v6:= temp;
  #L469480.  v5:= 0I;
  #L469482.  v0:= v7 @kind object;
  #L469484.  v1:= v8 @kind wide;
  #L469486.  v3:= v10 @kind object;
  #L469488.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46948e.  v8:= temp @kind object;
  #L469490.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4694d8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4694de.  v6:= temp;
  #L4694e0.  v5:= 0I;
  #L4694e2.  v0:= v7 @kind object;
  #L4694e4.  v1:= v8 @kind wide;
  #L4694e6.  v3:= v10 @kind object;
  #L4694e8.  v4:= v11 @kind object;
  #L4694ea.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4694f0.  v8:= temp @kind object;
  #L4694f2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L469504.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46950a.  v6:= temp;
  #L46950c.  v0:= v7 @kind object;
  #L46950e.  v1:= v8 @kind wide;
  #L469510.  v3:= v10 @kind object;
  #L469512.  v4:= v11 @kind object;
  #L469514.  v5:= v12;
  #L469516.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46951c.  v8:= temp @kind object;
  #L46951e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L469530.  v0:= "unit is null" @kind object;
  #L469534.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46953a.  v0:= "scheduler is null" @kind object;
  #L46953e.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469544.  v0:= "bufferSize" @kind object;
  #L469548.  call temp:= `verifyPositive`(v15, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46954e.  v7:= v15 ^< 1;
  #L469552.  v15:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed`;
  #L469556.  v1:= v15 @kind object;
  #L469558.  v2:= v9 @kind object;
  #L46955a.  v3:= v10 @kind wide;
  #L46955c.  v5:= v12 @kind object;
  #L46955e.  v6:= v13 @kind object;
  #L469560.  v8:= v14;
  #L469562.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @kind direct;
  #L469568.  call temp:= `onAssembly`(v15) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46956e.  v10:= temp @kind object;
  #L469570.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4694a4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4694aa.  v4:= temp @kind object;
  #L4694ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4694b2.  v6:= temp;
  #L4694b4.  v0:= v7 @kind object;
  #L4694b6.  v1:= v8 @kind wide;
  #L4694b8.  v3:= v10 @kind object;
  #L4694ba.  v5:= v11;
  #L4694bc.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4694c2.  v8:= temp @kind object;
  #L4694c4.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipUntil`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469584.  v0:= "other is null" @kind object;
  #L469588.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46958e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipUntil`;
  #L469592.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipUntil;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L469598.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46959e.  v2:= temp @kind object;
  #L4695a0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipWhile`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4695b4.  v0:= "predicate is null" @kind object;
  #L4695b8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4695be.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipWhile`;
  #L4695c2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipWhile;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4695c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4695ce.  v2:= temp @kind object;
  #L4695d0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sorted`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.sorted:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4695e4.  call temp:= `toList`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4695ea.  v0:= temp @kind object;
  #L4695ec.  call temp:= `toFlowable`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4695f2.  v0:= temp @kind object;
  #L4695f4.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L4695fa.  v1:= temp @kind object;
  #L4695fc.  call temp:= `listSorter`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L469602.  v1:= temp @kind object;
  #L469604.  call temp:= `map`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46960a.  v0:= temp @kind object;
  #L46960c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L469612.  v1:= temp @kind object;
  #L469614.  call temp:= `flatMapIterable`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46961a.  v0:= temp @kind object;
  #L46961c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sorted`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sorted:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469630.  v0:= "comparator is null" @kind object;
  #L469634.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46963a.  call temp:= `toList`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L469640.  v0:= temp @kind object;
  #L469642.  call temp:= `toFlowable`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469648.  v0:= temp @kind object;
  #L46964a.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L469650.  v2:= temp @kind object;
  #L469652.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469658.  v2:= temp @kind object;
  #L46965a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L469660.  v0:= temp @kind object;
  #L469662.  call temp:= `flatMapIterable`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469668.  v2:= temp @kind object;
  #L46966a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46967c.  v0:= "other is null" @kind object;
  #L469680.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469686.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46968c.  v2:= temp @kind object;
  #L46968e.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469694.  v2:= temp @kind object;
  #L469696.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46969c.  v2:= temp @kind object;
  #L46969e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4696b0.  v0:= "other is null" @kind object;
  #L4696b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4696ba.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4696c0.  v2:= temp @kind object;
  #L4696c2.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4696c8.  v2:= temp @kind object;
  #L4696ca.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4696d0.  v2:= temp @kind object;
  #L4696d2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4696e4.  v0:= "other is null" @kind object;
  #L4696e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4696ee.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4696f4.  v2:= temp @kind object;
  #L4696f6.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4696fc.  v2:= temp @kind object;
  #L4696fe.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469704.  v2:= temp @kind object;
  #L469706.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L469718.  v0:= "other is null" @kind object;
  #L46971c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469722.  v0:= 2I;
  #L469724.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L469728.  v1:= 0I;
  #L46972a.  v0[v1]:= v3 @kind object;
  #L46972e.  v3:= 1I;
  #L469730.  v0[v3]:= v2 @kind object;
  #L469734.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46973a.  v3:= temp @kind object;
  #L46973c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWithArray`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWithArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L469750.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469756.  v3:= temp @kind object;
  #L469758.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46975e.  v0:= temp @kind object;
  #L469760.  if v3 != v0 then goto L46976e;
  #L469764.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46976a.  v3:= temp @kind object;
  #L46976c.  return v3 @kind object;
  #L46976e.  v0:= 2I;
  #L469770.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L469774.  v1:= 0I;
  #L469776.  v0[v1]:= v3 @kind object;
  #L46977a.  v3:= 1I;
  #L46977c.  v0[v3]:= v2 @kind object;
  #L469780.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469786.  v3:= temp @kind object;
  #L469788.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWithItem`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWithItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46979c.  v0:= "item is null" @kind object;
  #L4697a0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4697a6.  v0:= 2I;
  #L4697a8.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4697ac.  call temp:= `just`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4697b2.  v3:= temp @kind object;
  #L4697b4.  v1:= 0I;
  #L4697b6.  v0[v1]:= v3 @kind object;
  #L4697ba.  v3:= 1I;
  #L4697bc.  v0[v3]:= v2 @kind object;
  #L4697c0.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4697c6.  v3:= temp @kind object;
  #L4697c8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWithIterable`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWithIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4697dc.  v0:= 2I;
  #L4697de.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4697e2.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4697e8.  v3:= temp @kind object;
  #L4697ea.  v1:= 0I;
  #L4697ec.  v0[v1]:= v3 @kind object;
  #L4697f0.  v3:= 1I;
  #L4697f2.  v0[v3]:= v2 @kind object;
  #L4697f6.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4697fc.  v3:= temp @kind object;
  #L4697fe.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46b9b8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46b9be.  v0:= temp @kind object;
  #L46b9c0.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46b9c4.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46b9c8.  call temp:= `subscribe`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46b9ce.  v0:= temp @kind object;
  #L46b9d0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46b9e4.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46b9e8.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46b9ec.  call temp:= `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46b9f2.  v3:= temp @kind object;
  #L46b9f4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ba08.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46ba0c.  call temp:= `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46ba12.  v2:= temp @kind object;
  #L46ba14.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46ba28.  v0:= "onNext is null" @kind object;
  #L46ba2c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ba32.  v0:= "onError is null" @kind object;
  #L46ba36.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ba3c.  v0:= "onComplete is null" @kind object;
  #L46ba40.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ba46.  v0:= new `io.reactivex.rxjava3.internal.subscribers.LambdaSubscriber`;
  #L46ba4a.  v1:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$RequestMax.INSTANCE` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$RequestMax` @kind object;
  #L46ba4e.  call `<init>`(v0, v3, v4, v5, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/LambdaSubscriber;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L46ba54.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46ba5a.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.core.FlowableSubscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46c300.  v0:= "subscriber is null" @kind object;
  #L46c304.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c30a.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind static;
  #L46c310.  v3:= temp @kind object;
  #L46c312.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null FlowableSubscriber. Please check the handler provided to RxJavaPlugins.setOnFlowableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L46c316.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c31c.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L46c322.  return @kind void;
  #L46c324.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46c326.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L46c32c.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L46c332.  v0:= new `java.lang.NullPointerException`;
  #L46c336.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L46c33a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46c340.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L46c346.  throw v0;
  #L46c348.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L46c34a.  throw v3;
  catch `java.lang.NullPointerException` @[L46c30a..L46c322] goto L46c348;
  catch `java.lang.Throwable` @[L46c30a..L46c322] goto L46c324;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c36c.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.core.FlowableSubscriber` @kind boolean;
  #L46c370.  if v0 == 0 then goto L46c380;
  #L46c374.  v2:= (`io.reactivex.rxjava3.core.FlowableSubscriber`) v2 @kind object;
  #L46c378.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46c37e.  goto L46c39a;
  #L46c380.  v0:= "subscriber is null" @kind object;
  #L46c384.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c38a.  v0:= new `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber`;
  #L46c38e.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L46c394.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46c39a.  return @kind void;
}
procedure `void` `subscribeActual`(`org.reactivestreams.Subscriber` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Flowable` `subscribeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469810.  v0:= "scheduler is null" @kind object;
  #L469814.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46981a.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate` @kind boolean;
  #L46981e.  v0:= v0 ^~ 1;
  #L469822.  call temp:= `subscribeOn`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469828.  v2:= temp @kind object;
  #L46982a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `subscribeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46983c.  v0:= "scheduler is null" @kind object;
  #L469840.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469846.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSubscribeOn`;
  #L46984a.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L469850.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469856.  v2:= temp @kind object;
  #L469858.  return v2 @kind object;
}
procedure `org.reactivestreams.Subscriber` `subscribeWith`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46c0e4.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L46c0ea.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchIfEmpty`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchIfEmpty:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46986c.  v0:= "other is null" @kind object;
  #L469870.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469876.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchIfEmpty`;
  #L46987a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchIfEmpty;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L469880.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469886.  v2:= temp @kind object;
  #L469888.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46989c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4698a2.  v0:= temp;
  #L4698a4.  call temp:= `switchMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4698aa.  v2:= temp @kind object;
  #L4698ac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4698c0.  v0:= 0I;
  #L4698c2.  call temp:= `b`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.b:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4698c8.  v2:= temp @kind object;
  #L4698ca.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L464ff8.  v0:= "mapper is null" @kind object;
  #L464ffc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465002.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable`;
  #L465006.  v1:= 0I;
  #L465008.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L46500e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L465014.  v3:= temp @kind object;
  #L465016.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchMapCompletableDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L465028.  v0:= "mapper is null" @kind object;
  #L46502c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L465032.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable`;
  #L465036.  v1:= 1I;
  #L465038.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L46503e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L465044.  v3:= temp @kind object;
  #L465046.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469944.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46994a.  v0:= temp;
  #L46994c.  call temp:= `switchMapDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469952.  v2:= temp @kind object;
  #L469954.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469968.  v0:= 1I;
  #L46996a.  call temp:= `b`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.b:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469970.  v2:= temp @kind object;
  #L469972.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L469984.  v0:= "mapper is null" @kind object;
  #L469988.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46998e.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe`;
  #L469992.  v1:= 0I;
  #L469994.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L46999a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4699a0.  v3:= temp @kind object;
  #L4699a2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapMaybeDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4699b4.  v0:= "mapper is null" @kind object;
  #L4699b8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4699be.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe`;
  #L4699c2.  v1:= 1I;
  #L4699c4.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4699ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4699d0.  v3:= temp @kind object;
  #L4699d2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapSingle`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4699e4.  v0:= "mapper is null" @kind object;
  #L4699e8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4699ee.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapSingle`;
  #L4699f2.  v1:= 0I;
  #L4699f4.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4699fa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469a00.  v3:= temp @kind object;
  #L469a02.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapSingleDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L469a14.  v0:= "mapper is null" @kind object;
  #L469a18.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469a1e.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapSingle`;
  #L469a22.  v1:= 1I;
  #L469a24.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L469a2a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469a30.  v3:= temp @kind object;
  #L469a32.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `take`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.take:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L469aec.  v0:= 0L;
  #L469af0.  v2:= lcmp(v4, v0);
  #L469af4.  if v2 < 0 then goto L469b0c;
  #L469af8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTake`;
  #L469afc.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTake;.<init>:(Lio/reactivex/rxjava3/core/Flowable;J)V` @kind direct;
  #L469b02.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469b08.  v4:= temp @kind object;
  #L469b0a.  return v4 @kind object;
  #L469b0c.  v0:= new `java.lang.IllegalArgumentException`;
  #L469b10.  v1:= new `java.lang.StringBuilder`;
  #L469b14.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L469b1a.  v2:= "count >= 0 required but it was " @kind object;
  #L469b1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469b24.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L469b2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L469b30.  v4:= temp @kind object;
  #L469b32.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L469b38.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `take`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.take:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L469b4c.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469b52.  v1:= temp @kind object;
  #L469b54.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469b5a.  v1:= temp @kind object;
  #L469b5c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `take`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.take:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L469b70.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469b76.  v1:= temp @kind object;
  #L469b78.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469b7e.  v1:= temp @kind object;
  #L469b80.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L469b94.  if v4 < 0 then goto L469bde;
  #L469b98.  if v4 != 0 then goto L469bb0;
  #L469b9c.  v4:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableIgnoreElements`;
  #L469ba0.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableIgnoreElements;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L469ba6.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469bac.  v4:= temp @kind object;
  #L469bae.  return v4 @kind object;
  #L469bb0.  v0:= 1I;
  #L469bb2.  if v4 != v0 then goto L469bca;
  #L469bb6.  v4:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLastOne`;
  #L469bba.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLastOne;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L469bc0.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469bc6.  v4:= temp @kind object;
  #L469bc8.  return v4 @kind object;
  #L469bca.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast`;
  #L469bce.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLast;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @kind direct;
  #L469bd4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469bda.  v4:= temp @kind object;
  #L469bdc.  return v4 @kind object;
  #L469bde.  v0:= new `java.lang.IllegalArgumentException`;
  #L469be2.  v1:= new `java.lang.StringBuilder`;
  #L469be6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L469bec.  v2:= "count >= 0 required but it was " @kind object;
  #L469bf0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469bf6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L469bfc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L469c02.  v4:= temp @kind object;
  #L469c04.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L469c0a.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L469d0c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L469d12.  v6:= temp @kind object;
  #L469d14.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L469d1a.  v8:= temp;
  #L469d1c.  v7:= 0I;
  #L469d1e.  v0:= v9 @kind object;
  #L469d20.  v1:= v10 @kind wide;
  #L469d22.  v3:= v12 @kind wide;
  #L469d24.  v5:= v14 @kind object;
  #L469d26.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469d2c.  v10:= temp @kind object;
  #L469d2e.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object, `io.reactivex.rxjava3.core.Scheduler` v15 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L469d40.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L469d46.  v8:= temp;
  #L469d48.  v7:= 0I;
  #L469d4a.  v0:= v9 @kind object;
  #L469d4c.  v1:= v10 @kind wide;
  #L469d4e.  v3:= v12 @kind wide;
  #L469d50.  v5:= v14 @kind object;
  #L469d52.  v6:= v15 @kind object;
  #L469d54.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469d5a.  v10:= temp @kind object;
  #L469d5c.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v11 @kind this, `long` v12 , `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.rxjava3.core.Scheduler` v17 @kind object, `boolean` v18 , `int` v19 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L469d70.  v2:= v12 @kind wide;
  #L469d72.  v0:= "unit is null" @kind object;
  #L469d76.  v6:= v16 @kind object;
  #L469d7a.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469d80.  v0:= "scheduler is null" @kind object;
  #L469d84.  v7:= v17 @kind object;
  #L469d88.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469d8e.  v0:= "bufferSize" @kind object;
  #L469d92.  v8:= v19;
  #L469d96.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L469d9c.  v0:= 0L;
  #L469da0.  v4:= lcmp(v2, v0);
  #L469da4.  if v4 < 0 then goto L469dd4;
  #L469da8.  v10:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLastTimed`;
  #L469dac.  v0:= v10 @kind object;
  #L469dae.  v1:= v11 @kind object;
  #L469db0.  v2:= v12 @kind wide;
  #L469db2.  v4:= v14 @kind wide;
  #L469db4.  v6:= v16 @kind object;
  #L469db8.  v7:= v17 @kind object;
  #L469dbc.  v8:= v19;
  #L469dc0.  v9:= v18;
  #L469dc4.  call `<init>`(v0, v1, v2, v4, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLastTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @kind direct;
  #L469dca.  call temp:= `onAssembly`(v10) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469dd0.  v0:= temp @kind object;
  #L469dd2.  return v0 @kind object;
  #L469dd4.  v0:= new `java.lang.IllegalArgumentException`;
  #L469dd8.  v1:= new `java.lang.StringBuilder`;
  #L469ddc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L469de2.  v4:= "count >= 0 required but it was " @kind object;
  #L469de6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469dec.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L469df2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L469df8.  v1:= temp @kind object;
  #L469dfa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L469e00.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L469c1c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L469c22.  v4:= temp @kind object;
  #L469c24.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L469c2a.  v6:= temp;
  #L469c2c.  v5:= 0I;
  #L469c2e.  v0:= v7 @kind object;
  #L469c30.  v1:= v8 @kind wide;
  #L469c32.  v3:= v10 @kind object;
  #L469c34.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469c3a.  v8:= temp @kind object;
  #L469c3c.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L469c84.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L469c8a.  v6:= temp;
  #L469c8c.  v5:= 0I;
  #L469c8e.  v0:= v7 @kind object;
  #L469c90.  v1:= v8 @kind wide;
  #L469c92.  v3:= v10 @kind object;
  #L469c94.  v4:= v11 @kind object;
  #L469c96.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469c9c.  v8:= temp @kind object;
  #L469c9e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L469cb0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L469cb6.  v6:= temp;
  #L469cb8.  v0:= v7 @kind object;
  #L469cba.  v1:= v8 @kind wide;
  #L469cbc.  v3:= v10 @kind object;
  #L469cbe.  v4:= v11 @kind object;
  #L469cc0.  v5:= v12;
  #L469cc2.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469cc8.  v8:= temp @kind object;
  #L469cca.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L469cdc.  v1:= 9223372036854775807L;
  #L469ce6.  v0:= v9 @kind object;
  #L469ce8.  v3:= v10 @kind wide;
  #L469cea.  v5:= v12 @kind object;
  #L469cec.  v6:= v13 @kind object;
  #L469cee.  v7:= v14;
  #L469cf0.  v8:= v15;
  #L469cf2.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469cf8.  v10:= temp @kind object;
  #L469cfa.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L469c50.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L469c56.  v4:= temp @kind object;
  #L469c58.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L469c5e.  v6:= temp;
  #L469c60.  v0:= v7 @kind object;
  #L469c62.  v1:= v8 @kind wide;
  #L469c64.  v3:= v10 @kind object;
  #L469c66.  v5:= v11;
  #L469c68.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469c6e.  v8:= temp @kind object;
  #L469c70.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeUntil`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeUntil:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469e14.  v0:= "stopPredicate is null" @kind object;
  #L469e18.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469e1e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeUntilPredicate`;
  #L469e22.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntilPredicate;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L469e28.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469e2e.  v2:= temp @kind object;
  #L469e30.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeUntil`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469e44.  v0:= "other is null" @kind object;
  #L469e48.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469e4e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeUntil`;
  #L469e52.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L469e58.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469e5e.  v2:= temp @kind object;
  #L469e60.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeWhile`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469e74.  v0:= "predicate is null" @kind object;
  #L469e78.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469e7e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeWhile`;
  #L469e82.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeWhile;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L469e88.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469e8e.  v2:= temp @kind object;
  #L469e90.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.subscribers.TestSubscriber` `test`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.test:()Lio/reactivex/rxjava3/subscribers/TestSubscriber;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bcbc.  v0:= new `io.reactivex.rxjava3.subscribers.TestSubscriber`;
  #L46bcc0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/subscribers/TestSubscriber;.<init>:()V` @kind direct;
  #L46bcc6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46bccc.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.subscribers.TestSubscriber` `test`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.test:(J)Lio/reactivex/rxjava3/subscribers/TestSubscriber;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bce0.  v0:= new `io.reactivex.rxjava3.subscribers.TestSubscriber`;
  #L46bce4.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/subscribers/TestSubscriber;.<init>:(J)V` @kind direct;
  #L46bcea.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46bcf0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.subscribers.TestSubscriber` `test`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.test:(JZ)Lio/reactivex/rxjava3/subscribers/TestSubscriber;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bd04.  v0:= new `io.reactivex.rxjava3.subscribers.TestSubscriber`;
  #L46bd08.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/subscribers/TestSubscriber;.<init>:(J)V` @kind direct;
  #L46bd0e.  if v4 == 0 then goto L46bd18;
  #L46bd12.  call `cancel`(v0) @signature `Lio/reactivex/rxjava3/subscribers/TestSubscriber;.cancel:()V` @kind virtual;
  #L46bd18.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L46bd1e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleFirst`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L469ea4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L469eaa.  v0:= temp @kind object;
  #L469eac.  call temp:= `throttleFirst`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469eb2.  v2:= temp @kind object;
  #L469eb4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleFirst`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L469ec8.  v0:= "unit is null" @kind object;
  #L469ecc.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469ed2.  v0:= "scheduler is null" @kind object;
  #L469ed6.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469edc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed`;
  #L469ee0.  v1:= v0 @kind object;
  #L469ee2.  v2:= v7 @kind object;
  #L469ee4.  v3:= v8 @kind wide;
  #L469ee6.  v5:= v10 @kind object;
  #L469ee8.  v6:= v11 @kind object;
  #L469eea.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L469ef0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469ef6.  v8:= temp @kind object;
  #L469ef8.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLast`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L469f0c.  call temp:= `sample`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469f12.  v1:= temp @kind object;
  #L469f14.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLast`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L469f28.  call temp:= `sample`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469f2e.  v1:= temp @kind object;
  #L469f30.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLatest`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L469f44.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L469f4a.  v4:= temp @kind object;
  #L469f4c.  v5:= 0I;
  #L469f4e.  v0:= v6 @kind object;
  #L469f50.  v1:= v7 @kind wide;
  #L469f52.  v3:= v9 @kind object;
  #L469f54.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469f5a.  v7:= temp @kind object;
  #L469f5c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLatest`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L469f9c.  v5:= 0I;
  #L469f9e.  v0:= v6 @kind object;
  #L469fa0.  v1:= v7 @kind wide;
  #L469fa2.  v3:= v9 @kind object;
  #L469fa4.  v4:= v10 @kind object;
  #L469fa6.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469fac.  v7:= temp @kind object;
  #L469fae.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLatest`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L469fc0.  v0:= "unit is null" @kind object;
  #L469fc4.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469fca.  v0:= "scheduler is null" @kind object;
  #L469fce.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L469fd4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest`;
  #L469fd8.  v1:= v0 @kind object;
  #L469fda.  v2:= v8 @kind object;
  #L469fdc.  v3:= v9 @kind wide;
  #L469fde.  v5:= v11 @kind object;
  #L469fe0.  v6:= v12 @kind object;
  #L469fe2.  v7:= v13;
  #L469fe4.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleLatest;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L469fea.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L469ff0.  v9:= temp @kind object;
  #L469ff2.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLatest`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L469f70.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L469f76.  v4:= temp @kind object;
  #L469f78.  v0:= v6 @kind object;
  #L469f7a.  v1:= v7 @kind wide;
  #L469f7c.  v3:= v9 @kind object;
  #L469f7e.  v5:= v10;
  #L469f80.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L469f86.  v7:= temp @kind object;
  #L469f88.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleWithTimeout`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46a004.  call temp:= `debounce`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a00a.  v1:= temp @kind object;
  #L46a00c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleWithTimeout`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46a020.  call temp:= `debounce`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a026.  v1:= temp @kind object;
  #L46a028.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeInterval`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46a03c.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46a040.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a046.  v1:= temp @kind object;
  #L46a048.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a04e.  v0:= temp @kind object;
  #L46a050.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeInterval`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a064.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46a068.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a06e.  v2:= temp @kind object;
  #L46a070.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeInterval`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a084.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a08a.  v0:= temp @kind object;
  #L46a08c.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a092.  v2:= temp @kind object;
  #L46a094.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeInterval`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a0a8.  v0:= "unit is null" @kind object;
  #L46a0ac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a0b2.  v0:= "scheduler is null" @kind object;
  #L46a0b6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a0bc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval`;
  #L46a0c0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L46a0c6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a0cc.  v2:= temp @kind object;
  #L46a0ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46a124.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a12a.  v5:= temp @kind object;
  #L46a12c.  v4:= 0I;
  #L46a12e.  v0:= v6 @kind object;
  #L46a130.  v1:= v7 @kind wide;
  #L46a132.  v3:= v9 @kind object;
  #L46a134.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L46a13a.  v7:= temp @kind object;
  #L46a13c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46a150.  v4:= 0I;
  #L46a152.  v0:= v6 @kind object;
  #L46a154.  v1:= v7 @kind wide;
  #L46a156.  v3:= v9 @kind object;
  #L46a158.  v5:= v10 @kind object;
  #L46a15a.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L46a160.  v7:= temp @kind object;
  #L46a162.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object, `org.reactivestreams.Publisher` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46a174.  v0:= "fallback is null" @kind object;
  #L46a178.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a17e.  v0:= v6 @kind object;
  #L46a180.  v1:= v7 @kind wide;
  #L46a182.  v3:= v9 @kind object;
  #L46a184.  v4:= v11 @kind object;
  #L46a186.  v5:= v10 @kind object;
  #L46a188.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L46a18e.  v7:= temp @kind object;
  #L46a190.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `org.reactivestreams.Publisher` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46a1a4.  v0:= "fallback is null" @kind object;
  #L46a1a8.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a1ae.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a1b4.  v6:= temp @kind object;
  #L46a1b6.  v1:= v7 @kind object;
  #L46a1b8.  v2:= v8 @kind wide;
  #L46a1ba.  v4:= v10 @kind object;
  #L46a1bc.  v5:= v11 @kind object;
  #L46a1be.  call temp:= `c`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L46a1c4.  v8:= temp @kind object;
  #L46a1c6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a0e0.  v0:= 0I;
  #L46a0e2.  call temp:= `d`(v1, v0, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L46a0e8.  v2:= temp @kind object;
  #L46a0ea.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a0fc.  v0:= "fallback is null" @kind object;
  #L46a100.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a106.  v0:= 0I;
  #L46a108.  call temp:= `d`(v1, v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L46a10e.  v2:= temp @kind object;
  #L46a110.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a1d8.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L46a1dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a1e2.  v0:= 0I;
  #L46a1e4.  call temp:= `d`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L46a1ea.  v2:= temp @kind object;
  #L46a1ec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a200.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L46a204.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a20a.  v0:= "fallback is null" @kind object;
  #L46a20e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a214.  call temp:= `d`(v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L46a21a.  v2:= temp @kind object;
  #L46a21c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timestamp`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46a30c.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46a310.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a316.  v1:= temp @kind object;
  #L46a318.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a31e.  v0:= temp @kind object;
  #L46a320.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timestamp`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a334.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46a338.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a33e.  v2:= temp @kind object;
  #L46a340.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timestamp`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a354.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a35a.  v0:= temp @kind object;
  #L46a35c.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a362.  v2:= temp @kind object;
  #L46a364.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timestamp`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a378.  v0:= "unit is null" @kind object;
  #L46a37c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a382.  v0:= "scheduler is null" @kind object;
  #L46a386.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a38c.  call temp:= `timestampWith`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.timestampWith:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46a392.  v2:= temp @kind object;
  #L46a394.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a39a.  v2:= temp @kind object;
  #L46a39c.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.FlowableConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.to:(Lio/reactivex/rxjava3/core/FlowableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46bf14.  v0:= "converter is null" @kind object;
  #L46bf18.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46bf1e.  v2:= (`io.reactivex.rxjava3.core.FlowableConverter`) v2 @kind object;
  #L46bf22.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/FlowableConverter;.apply:(Lio/reactivex/rxjava3/core/Flowable;)Ljava/lang/Object;` @kind interface;
  #L46bf28.  v2:= temp @kind object;
  #L46bf2a.  return v2 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c044.  v0:= new `io.reactivex.rxjava3.internal.subscribers.FutureSubscriber`;
  #L46c048.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/FutureSubscriber;.<init>:()V` @kind direct;
  #L46c04e.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L46c054.  v0:= temp @kind object;
  #L46c056.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L46c05a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b660.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle`;
  #L46b664.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L46b66a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b670.  v0:= temp @kind object;
  #L46b672.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b684.  v0:= "capacityHint" @kind object;
  #L46b688.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46b68e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle`;
  #L46b692.  call temp:= `createArrayList`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createArrayList:(I)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46b698.  v2:= temp @kind object;
  #L46b69a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46b6a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b6a6.  v2:= temp @kind object;
  #L46b6a8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b6bc.  v0:= "collectionSupplier is null" @kind object;
  #L46b6c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b6c6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle`;
  #L46b6ca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46b6d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46b6d6.  v2:= temp @kind object;
  #L46b6d8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b6ec.  v0:= "keySelector is null" @kind object;
  #L46b6f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b6f6.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46b6fc.  v0:= temp @kind object;
  #L46b6fe.  call temp:= `toMapKeySelector`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeySelector:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L46b704.  v2:= temp @kind object;
  #L46b706.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b70c.  v2:= temp @kind object;
  #L46b70e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b720.  v0:= "keySelector is null" @kind object;
  #L46b724.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b72a.  v0:= "valueSelector is null" @kind object;
  #L46b72e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b734.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46b73a.  v0:= temp @kind object;
  #L46b73c.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L46b742.  v2:= temp @kind object;
  #L46b744.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b74a.  v2:= temp @kind object;
  #L46b74c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b760.  v0:= "keySelector is null" @kind object;
  #L46b764.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b76a.  v0:= "valueSelector is null" @kind object;
  #L46b76e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b774.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L46b77a.  v2:= temp @kind object;
  #L46b77c.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b782.  v2:= temp @kind object;
  #L46b784.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46b798.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46b79e.  v0:= temp @kind object;
  #L46b7a0.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46b7a6.  v1:= temp @kind object;
  #L46b7a8.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46b7ae.  v2:= temp @kind object;
  #L46b7b0.  call temp:= `toMultimap`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b7b6.  v4:= temp @kind object;
  #L46b7b8.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46b7cc.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L46b7d2.  v0:= temp @kind object;
  #L46b7d4.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46b7da.  v1:= temp @kind object;
  #L46b7dc.  call temp:= `toMultimap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b7e2.  v3:= temp @kind object;
  #L46b7e4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b7f8.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46b7fe.  v0:= temp @kind object;
  #L46b800.  call temp:= `toMultimap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b806.  v2:= temp @kind object;
  #L46b808.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object, `io.reactivex.rxjava3.functions.Function` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b81c.  v0:= "keySelector is null" @kind object;
  #L46b820.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b826.  v0:= "valueSelector is null" @kind object;
  #L46b82a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b830.  v0:= "mapSupplier is null" @kind object;
  #L46b834.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b83a.  v0:= "collectionFactory is null" @kind object;
  #L46b83e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b844.  call temp:= `toMultimapKeyValueSelector`(v2, v3, v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMultimapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L46b84a.  v2:= temp @kind object;
  #L46b84c.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b852.  v2:= temp @kind object;
  #L46b854.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b1ec.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromPublisher`;
  #L46b1f0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46b1f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46b1fc.  v0:= temp @kind object;
  #L46b1fe.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b868.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L46b86e.  v0:= temp @kind object;
  #L46b870.  call temp:= `toSortedList`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b876.  v0:= temp @kind object;
  #L46b878.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b88c.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L46b892.  v0:= temp @kind object;
  #L46b894.  call temp:= `toSortedList`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b89a.  v2:= temp @kind object;
  #L46b89c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b8b0.  v0:= "comparator is null" @kind object;
  #L46b8b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b8ba.  call temp:= `toList`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b8c0.  v0:= temp @kind object;
  #L46b8c2.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46b8c8.  v2:= temp @kind object;
  #L46b8ca.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b8d0.  v2:= temp @kind object;
  #L46b8d2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b8e4.  v0:= "comparator is null" @kind object;
  #L46b8e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b8ee.  call temp:= `toList`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b8f4.  v3:= temp @kind object;
  #L46b8f6.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46b8fc.  v2:= temp @kind object;
  #L46b8fe.  call temp:= `map`(v3, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L46b904.  v2:= temp @kind object;
  #L46b906.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `unsubscribeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.unsubscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a3f8.  v0:= "scheduler is null" @kind object;
  #L46a3fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a402.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn`;
  #L46a406.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableUnsubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L46a40c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a412.  v2:= temp @kind object;
  #L46a414.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46a488.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46a48e.  v5:= temp;
  #L46a490.  v0:= v6 @kind object;
  #L46a492.  v1:= v7 @kind wide;
  #L46a494.  v3:= v7 @kind wide;
  #L46a496.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a49c.  v7:= temp @kind object;
  #L46a49e.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46a62c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46a632.  v5:= temp;
  #L46a634.  v0:= v6 @kind object;
  #L46a636.  v1:= v7 @kind wide;
  #L46a638.  v3:= v9 @kind wide;
  #L46a63a.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a640.  v7:= temp @kind object;
  #L46a642.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `int` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a654.  v0:= "skip" @kind object;
  #L46a658.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L46a65e.  v0:= "count" @kind object;
  #L46a662.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L46a668.  v0:= "bufferSize" @kind object;
  #L46a66c.  call temp:= `verifyPositive`(v13, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46a672.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindow`;
  #L46a676.  v1:= v0 @kind object;
  #L46a678.  v2:= v8 @kind object;
  #L46a67a.  v3:= v9 @kind wide;
  #L46a67c.  v5:= v11 @kind wide;
  #L46a67e.  v7:= v13;
  #L46a680.  call `<init>`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindow;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJI)V` @kind direct;
  #L46a686.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a68c.  v9:= temp @kind object;
  #L46a68e.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a6a0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a6a6.  v6:= temp @kind object;
  #L46a6a8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46a6ae.  v7:= temp;
  #L46a6b0.  v0:= v8 @kind object;
  #L46a6b2.  v1:= v9 @kind wide;
  #L46a6b4.  v3:= v11 @kind wide;
  #L46a6b6.  v5:= v13 @kind object;
  #L46a6b8.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a6be.  v9:= temp @kind object;
  #L46a6c0.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a6d4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46a6da.  v7:= temp;
  #L46a6dc.  v0:= v8 @kind object;
  #L46a6de.  v1:= v9 @kind wide;
  #L46a6e0.  v3:= v11 @kind wide;
  #L46a6e2.  v5:= v13 @kind object;
  #L46a6e4.  v6:= v14 @kind object;
  #L46a6e6.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a6ec.  v9:= temp @kind object;
  #L46a6ee.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v13 @kind this, `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object, `io.reactivex.rxjava3.core.Scheduler` v19 @kind object, `int` v20 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L46a700.  v0:= "bufferSize" @kind object;
  #L46a704.  v11:= v20;
  #L46a708.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46a70e.  v0:= "timespan" @kind object;
  #L46a712.  v3:= v14 @kind wide;
  #L46a714.  call temp:= `verifyPositive`(v14, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L46a71a.  v0:= "timeskip" @kind object;
  #L46a71e.  v5:= v16 @kind wide;
  #L46a722.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L46a728.  v0:= "scheduler is null" @kind object;
  #L46a72c.  v8:= v19 @kind object;
  #L46a730.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a736.  v0:= "unit is null" @kind object;
  #L46a73a.  v7:= v18 @kind object;
  #L46a73e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a744.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed`;
  #L46a748.  v9:= 9223372036854775807L;
  #L46a752.  v12:= 0I;
  #L46a754.  v1:= v0 @kind object;
  #L46a756.  v2:= v13 @kind object;
  #L46a758.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @kind direct;
  #L46a75e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a764.  v0:= temp @kind object;
  #L46a766.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a4b0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a4b6.  v4:= temp @kind object;
  #L46a4b8.  v5:= 9223372036854775807L;
  #L46a4c2.  v7:= 0I;
  #L46a4c4.  v0:= v8 @kind object;
  #L46a4c6.  v1:= v9 @kind wide;
  #L46a4c8.  v3:= v11 @kind object;
  #L46a4ca.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a4d0.  v9:= temp @kind object;
  #L46a4d2.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a5d4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a5da.  v4:= temp @kind object;
  #L46a5dc.  v7:= 0I;
  #L46a5de.  v0:= v8 @kind object;
  #L46a5e0.  v1:= v9 @kind wide;
  #L46a5e2.  v3:= v11 @kind object;
  #L46a5e4.  v5:= v12 @kind wide;
  #L46a5e6.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a5ec.  v9:= temp @kind object;
  #L46a5ee.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;JZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a600.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46a606.  v4:= temp @kind object;
  #L46a608.  v0:= v8 @kind object;
  #L46a60a.  v1:= v9 @kind wide;
  #L46a60c.  v3:= v11 @kind object;
  #L46a60e.  v5:= v12 @kind wide;
  #L46a610.  v7:= v14;
  #L46a612.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a618.  v9:= temp @kind object;
  #L46a61a.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a4e4.  v5:= 9223372036854775807L;
  #L46a4ee.  v7:= 0I;
  #L46a4f0.  v0:= v8 @kind object;
  #L46a4f2.  v1:= v9 @kind wide;
  #L46a4f4.  v3:= v11 @kind object;
  #L46a4f6.  v4:= v12 @kind object;
  #L46a4f8.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a4fe.  v9:= temp @kind object;
  #L46a500.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `long` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a514.  v7:= 0I;
  #L46a516.  v0:= v8 @kind object;
  #L46a518.  v1:= v9 @kind wide;
  #L46a51a.  v3:= v11 @kind object;
  #L46a51c.  v4:= v12 @kind object;
  #L46a51e.  v5:= v13 @kind wide;
  #L46a520.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a526.  v9:= temp @kind object;
  #L46a528.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `long` v14 , `boolean` v16 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46a53c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46a542.  v8:= temp;
  #L46a544.  v0:= v9 @kind object;
  #L46a546.  v1:= v10 @kind wide;
  #L46a548.  v3:= v12 @kind object;
  #L46a54a.  v4:= v13 @kind object;
  #L46a54c.  v5:= v14 @kind wide;
  #L46a54e.  v7:= v16;
  #L46a552.  call temp:= `window`(v0, v1, v3, v4, v5, v7, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a558.  v0:= temp @kind object;
  #L46a55a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v13 @kind this, `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.rxjava3.core.Scheduler` v17 @kind object, `long` v18 , `boolean` v20 , `int` v21 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L46a56c.  v0:= "bufferSize" @kind object;
  #L46a570.  v11:= v21;
  #L46a574.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46a57a.  v0:= "scheduler is null" @kind object;
  #L46a57e.  v8:= v17 @kind object;
  #L46a582.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a588.  v0:= "unit is null" @kind object;
  #L46a58c.  v7:= v16 @kind object;
  #L46a590.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a596.  v0:= "count" @kind object;
  #L46a59a.  v9:= v18 @kind wide;
  #L46a59e.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L46a5a4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed`;
  #L46a5a8.  v1:= v0 @kind object;
  #L46a5aa.  v2:= v13 @kind object;
  #L46a5ac.  v3:= v14 @kind wide;
  #L46a5ae.  v5:= v14 @kind wide;
  #L46a5b0.  v12:= v20;
  #L46a5b4.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @kind direct;
  #L46a5ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a5c0.  v0:= temp @kind object;
  #L46a5c2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a778.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46a77e.  v0:= temp;
  #L46a780.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a786.  v2:= temp @kind object;
  #L46a788.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a79c.  v0:= "boundaryIndicator is null" @kind object;
  #L46a7a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a7a6.  v0:= "bufferSize" @kind object;
  #L46a7aa.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46a7b0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary`;
  #L46a7b4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;I)V` @kind direct;
  #L46a7ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a7c0.  v2:= temp @kind object;
  #L46a7c2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a7d4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L46a7da.  v0:= temp;
  #L46a7dc.  call temp:= `window`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a7e2.  v2:= temp @kind object;
  #L46a7e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a7f8.  v0:= "openingIndicator is null" @kind object;
  #L46a7fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a802.  v0:= "closingIndicator is null" @kind object;
  #L46a806.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a80c.  v0:= "bufferSize" @kind object;
  #L46a810.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46a816.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundarySelector`;
  #L46a81a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L46a820.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a826.  v2:= temp @kind object;
  #L46a828.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a83c.  v0:= "others is null" @kind object;
  #L46a840.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a846.  v0:= "combiner is null" @kind object;
  #L46a84a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a850.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany`;
  #L46a854.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46a85a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a860.  v2:= temp @kind object;
  #L46a862.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a874.  v0:= "other is null" @kind object;
  #L46a878.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a87e.  v0:= "combiner is null" @kind object;
  #L46a882.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a888.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom`;
  #L46a88c.  call `<init>`(v0, v1, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiFunction;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46a892.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a898.  v2:= temp @kind object;
  #L46a89a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46a8ac.  v0:= "source1 is null" @kind object;
  #L46a8b0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a8b6.  v0:= "source2 is null" @kind object;
  #L46a8ba.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a8c0.  v0:= "combiner is null" @kind object;
  #L46a8c4.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a8ca.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46a8d0.  v5:= temp @kind object;
  #L46a8d2.  v0:= 2I;
  #L46a8d4.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L46a8d8.  v1:= 0I;
  #L46a8da.  v0[v1]:= v3 @kind object;
  #L46a8de.  v3:= 1I;
  #L46a8e0.  v0[v3]:= v4 @kind object;
  #L46a8e4.  call temp:= `withLatestFrom`(v2, v0, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a8ea.  v3:= temp @kind object;
  #L46a8ec.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46a900.  v0:= "source1 is null" @kind object;
  #L46a904.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a90a.  v0:= "source2 is null" @kind object;
  #L46a90e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a914.  v0:= "source3 is null" @kind object;
  #L46a918.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a91e.  v0:= "combiner is null" @kind object;
  #L46a922.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a928.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46a92e.  v6:= temp @kind object;
  #L46a930.  v0:= 3I;
  #L46a932.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L46a936.  v1:= 0I;
  #L46a938.  v0[v1]:= v3 @kind object;
  #L46a93c.  v3:= 1I;
  #L46a93e.  v0[v3]:= v4 @kind object;
  #L46a942.  v3:= 2I;
  #L46a944.  v0[v3]:= v5 @kind object;
  #L46a948.  call temp:= `withLatestFrom`(v2, v0, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a94e.  v3:= temp @kind object;
  #L46a950.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46a964.  v0:= "source1 is null" @kind object;
  #L46a968.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a96e.  v0:= "source2 is null" @kind object;
  #L46a972.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a978.  v0:= "source3 is null" @kind object;
  #L46a97c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a982.  v0:= "source4 is null" @kind object;
  #L46a986.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a98c.  v0:= "combiner is null" @kind object;
  #L46a990.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a996.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46a99c.  v7:= temp @kind object;
  #L46a99e.  v0:= 4I;
  #L46a9a0.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L46a9a4.  v1:= 0I;
  #L46a9a6.  v0[v1]:= v3 @kind object;
  #L46a9aa.  v3:= 1I;
  #L46a9ac.  v0[v3]:= v4 @kind object;
  #L46a9b0.  v3:= 2I;
  #L46a9b2.  v0[v3]:= v5 @kind object;
  #L46a9b6.  v3:= 3I;
  #L46a9b8.  v0[v3]:= v6 @kind object;
  #L46a9bc.  call temp:= `withLatestFrom`(v2, v0, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46a9c2.  v3:= temp @kind object;
  #L46a9c4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46a9d8.  v0:= "others is null" @kind object;
  #L46a9dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a9e2.  v0:= "combiner is null" @kind object;
  #L46a9e6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46a9ec.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany`;
  #L46a9f0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/Flowable;[Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46a9f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46a9fc.  v2:= temp @kind object;
  #L46a9fe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipWith:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b060.  v0:= "other is null" @kind object;
  #L46b064.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b06a.  v0:= "zipper is null" @kind object;
  #L46b06e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b074.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable`;
  #L46b078.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZipIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L46b07e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46b084.  v2:= temp @kind object;
  #L46b086.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipWith:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46b098.  v0:= "other is null" @kind object;
  #L46b09c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46b0a2.  call temp:= `zip`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46b0a8.  v2:= temp @kind object;
  #L46b0aa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipWith`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipWith:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46b0bc.  call temp:= `zip`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46b0c2.  v1:= temp @kind object;
  #L46b0c4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipWith`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipWith:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46b0d8.  call temp:= `zip`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46b0de.  v1:= temp @kind object;
  #L46b0e0.  return v1 @kind object;
}
