record `io.reactivex.rxjava3.core.Maybe` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.MaybeSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Maybe` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46ed04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46ed0a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Maybe` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.amb:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46cfe8.  v0:= "sources is null" @kind object;
  #L46cfec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cff2.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb`;
  #L46cff6.  v1:= 0I;
  #L46cff8.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb;.<init>:([Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Iterable;)V` @kind direct;
  #L46cffe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d004.  v2:= temp @kind object;
  #L46d006.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `ambArray`(`io.reactivex.rxjava3.core.MaybeSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.ambArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46d018.  v0:= "sources is null" @kind object;
  #L46d01c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d022.  v0:= length @variable v2;
  #L46d024.  if v0 != 0 then goto L46d032;
  #L46d028.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Maybe;.empty:()Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d02e.  v2:= temp @kind object;
  #L46d030.  return v2 @kind object;
  #L46d032.  v0:= length @variable v2;
  #L46d034.  v1:= 1I;
  #L46d036.  if v0 != v1 then goto L46d04a;
  #L46d03a.  v0:= 0I;
  #L46d03c.  v2:= v2[v0] @kind object;
  #L46d040.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d046.  v2:= temp @kind object;
  #L46d048.  return v2 @kind object;
  #L46d04a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb`;
  #L46d04e.  v1:= 0I;
  #L46d050.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb;.<init>:([Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Iterable;)V` @kind direct;
  #L46d056.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d05c.  v2:= temp @kind object;
  #L46d05e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c4c4.  v0:= "source1 is null" @kind object;
  #L46c4c8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c4ce.  v0:= "source2 is null" @kind object;
  #L46c4d2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c4d8.  v0:= 2I;
  #L46c4da.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46c4de.  v1:= 0I;
  #L46c4e0.  v0[v1]:= v2 @kind object;
  #L46c4e4.  v2:= 1I;
  #L46c4e6.  v0[v2]:= v3 @kind object;
  #L46c4ea.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c4f0.  v2:= temp @kind object;
  #L46c4f2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c504.  v0:= "source1 is null" @kind object;
  #L46c508.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c50e.  v0:= "source2 is null" @kind object;
  #L46c512.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c518.  v0:= "source3 is null" @kind object;
  #L46c51c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c522.  v0:= 3I;
  #L46c524.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46c528.  v1:= 0I;
  #L46c52a.  v0[v1]:= v2 @kind object;
  #L46c52e.  v2:= 1I;
  #L46c530.  v0[v2]:= v3 @kind object;
  #L46c534.  v2:= 2I;
  #L46c536.  v0[v2]:= v4 @kind object;
  #L46c53a.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c540.  v2:= temp @kind object;
  #L46c542.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c554.  v0:= "source1 is null" @kind object;
  #L46c558.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c55e.  v0:= "source2 is null" @kind object;
  #L46c562.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c568.  v0:= "source3 is null" @kind object;
  #L46c56c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c572.  v0:= "source4 is null" @kind object;
  #L46c576.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c57c.  v0:= 4I;
  #L46c57e.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46c582.  v1:= 0I;
  #L46c584.  v0[v1]:= v2 @kind object;
  #L46c588.  v2:= 1I;
  #L46c58a.  v0[v2]:= v3 @kind object;
  #L46c58e.  v2:= 2I;
  #L46c590.  v0[v2]:= v4 @kind object;
  #L46c594.  v2:= 3I;
  #L46c596.  v0[v2]:= v5 @kind object;
  #L46c59a.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c5a0.  v2:= temp @kind object;
  #L46c5a2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46c5b4.  v0:= "sources is null" @kind object;
  #L46c5b8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c5be.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeConcatIterable`;
  #L46c5c2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeConcatIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L46c5c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c5ce.  v1:= temp @kind object;
  #L46c5d0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46c5e4.  v0:= 2I;
  #L46c5e6.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c5ec.  v1:= temp @kind object;
  #L46c5ee.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46c600.  v0:= "sources is null" @kind object;
  #L46c604.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c60a.  v0:= "prefetch" @kind object;
  #L46c60e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46c614.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapMaybePublisher`;
  #L46c618.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c61e.  v1:= temp @kind object;
  #L46c620.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L46c624.  call `<init>`(v0, v3, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L46c62a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c630.  v3:= temp @kind object;
  #L46c632.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArray`(`io.reactivex.rxjava3.core.MaybeSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c644.  v0:= "sources is null" @kind object;
  #L46c648.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c64e.  v0:= length @variable v2;
  #L46c650.  if v0 != 0 then goto L46c65e;
  #L46c654.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c65a.  v2:= temp @kind object;
  #L46c65c.  return v2 @kind object;
  #L46c65e.  v0:= length @variable v2;
  #L46c660.  v1:= 1I;
  #L46c662.  if v0 != v1 then goto L46c680;
  #L46c666.  v0:= 0I;
  #L46c668.  v2:= v2[v0] @kind object;
  #L46c66c.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToFlowable`;
  #L46c670.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToFlowable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46c676.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c67c.  v2:= temp @kind object;
  #L46c67e.  return v2 @kind object;
  #L46c680.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeConcatArray`;
  #L46c684.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeConcatArray;.<init>:([Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46c68a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c690.  v2:= temp @kind object;
  #L46c692.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayDelayError`(`io.reactivex.rxjava3.core.MaybeSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatArrayDelayError:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c6a4.  v0:= "sources is null" @kind object;
  #L46c6a8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c6ae.  v0:= length @variable v2;
  #L46c6b0.  if v0 != 0 then goto L46c6be;
  #L46c6b4.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c6ba.  v2:= temp @kind object;
  #L46c6bc.  return v2 @kind object;
  #L46c6be.  v0:= length @variable v2;
  #L46c6c0.  v1:= 1I;
  #L46c6c2.  if v0 != v1 then goto L46c6e0;
  #L46c6c6.  v0:= 0I;
  #L46c6c8.  v2:= v2[v0] @kind object;
  #L46c6cc.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToFlowable`;
  #L46c6d0.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToFlowable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46c6d6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c6dc.  v2:= temp @kind object;
  #L46c6de.  return v2 @kind object;
  #L46c6e0.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeConcatArrayDelayError`;
  #L46c6e4.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeConcatArrayDelayError;.<init>:([Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46c6ea.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c6f0.  v2:= temp @kind object;
  #L46c6f2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEager`(`io.reactivex.rxjava3.core.MaybeSource`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatArrayEager:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46c704.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c70a.  v1:= temp @kind object;
  #L46c70c.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c712.  v0:= temp @kind object;
  #L46c714.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c71a.  v1:= temp @kind object;
  #L46c71c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEagerDelayError`(`io.reactivex.rxjava3.core.MaybeSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatArrayEagerDelayError:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c730.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c736.  v2:= temp @kind object;
  #L46c738.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c73e.  v0:= temp @kind object;
  #L46c740.  v1:= 1I;
  #L46c742.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c748.  v2:= temp @kind object;
  #L46c74a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46c75c.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c762.  v1:= temp @kind object;
  #L46c764.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c76a.  v0:= temp @kind object;
  #L46c76c.  call temp:= `concatMapMaybeDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c772.  v1:= temp @kind object;
  #L46c774.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46c788.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c78e.  v1:= temp @kind object;
  #L46c790.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c796.  v0:= temp @kind object;
  #L46c798.  call temp:= `concatMapMaybeDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c79e.  v1:= temp @kind object;
  #L46c7a0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c7b4.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c7ba.  v2:= temp @kind object;
  #L46c7bc.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c7c2.  v0:= temp @kind object;
  #L46c7c4.  v1:= 1I;
  #L46c7c6.  call temp:= `concatMapMaybeDelayError`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c7cc.  v2:= temp @kind object;
  #L46c7ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c7e0.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c7e6.  v2:= temp @kind object;
  #L46c7e8.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c7ee.  v0:= temp @kind object;
  #L46c7f0.  v1:= 0I;
  #L46c7f2.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c7f8.  v2:= temp @kind object;
  #L46c7fa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatEager:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46c80c.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c812.  v3:= temp @kind object;
  #L46c814.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c81a.  v0:= temp @kind object;
  #L46c81c.  v1:= 0I;
  #L46c81e.  v2:= 1I;
  #L46c820.  call temp:= `concatMapEagerDelayError`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c826.  v3:= temp @kind object;
  #L46c828.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatEager:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46c83c.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c842.  v1:= temp @kind object;
  #L46c844.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c84a.  v0:= temp @kind object;
  #L46c84c.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c852.  v1:= temp @kind object;
  #L46c854.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatEager:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c868.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c86e.  v2:= temp @kind object;
  #L46c870.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c876.  v0:= temp @kind object;
  #L46c878.  v1:= 1I;
  #L46c87a.  call temp:= `concatMapEager`(v2, v0, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c880.  v2:= temp @kind object;
  #L46c882.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatEagerDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c894.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c89a.  v2:= temp @kind object;
  #L46c89c.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c8a2.  v0:= temp @kind object;
  #L46c8a4.  v1:= 1I;
  #L46c8a6.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c8ac.  v2:= temp @kind object;
  #L46c8ae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatEagerDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c8c0.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c8c6.  v2:= temp @kind object;
  #L46c8c8.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c8ce.  v0:= temp @kind object;
  #L46c8d0.  v1:= 1I;
  #L46c8d2.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c8d8.  v2:= temp @kind object;
  #L46c8da.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c8ec.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c8f2.  v2:= temp @kind object;
  #L46c8f4.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c8fa.  v0:= temp @kind object;
  #L46c8fc.  v1:= 1I;
  #L46c8fe.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c904.  v2:= temp @kind object;
  #L46c906.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c918.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c91e.  v2:= temp @kind object;
  #L46c920.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToPublisher;.instance:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46c926.  v0:= temp @kind object;
  #L46c928.  v1:= 1I;
  #L46c92a.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46c930.  v2:= temp @kind object;
  #L46c932.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `create`(`io.reactivex.rxjava3.core.MaybeOnSubscribe` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.create:(Lio/reactivex/rxjava3/core/MaybeOnSubscribe;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d160.  v0:= "onSubscribe is null" @kind object;
  #L46d164.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d16a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeCreate`;
  #L46d16e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCreate;.<init>:(Lio/reactivex/rxjava3/core/MaybeOnSubscribe;)V` @kind direct;
  #L46d174.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d17a.  v1:= temp @kind object;
  #L46d17c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `defer`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.defer:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d190.  v0:= "supplier is null" @kind object;
  #L46d194.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d19a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDefer`;
  #L46d19e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46d1a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d1aa.  v1:= temp @kind object;
  #L46d1ac.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `empty`() @signature `Lio/reactivex/rxjava3/core/Maybe;.empty:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d654.  v0:= `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeEmpty.INSTANCE` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeEmpty` @kind object;
  #L46d658.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d65e.  v0:= temp @kind object;
  #L46d660.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `error`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d674.  v0:= "supplier is null" @kind object;
  #L46d678.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d67e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeErrorCallable`;
  #L46d682.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeErrorCallable;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46d688.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d68e.  v1:= temp @kind object;
  #L46d690.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d6a4.  v0:= "throwable is null" @kind object;
  #L46d6a8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d6ae.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeError`;
  #L46d6b2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L46d6b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d6be.  v1:= temp @kind object;
  #L46d6c0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromAction`(`io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromAction:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d7e0.  v0:= "action is null" @kind object;
  #L46d7e4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d7ea.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction`;
  #L46d7ee.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d7f4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d7fa.  v1:= temp @kind object;
  #L46d7fc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d810.  v0:= "callable is null" @kind object;
  #L46d814.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d81a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable`;
  #L46d81e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L46d824.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d82a.  v1:= temp @kind object;
  #L46d82c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromCompletable`(`io.reactivex.rxjava3.core.CompletableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromCompletable:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d840.  v0:= "completableSource is null" @kind object;
  #L46d844.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d84a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCompletable`;
  #L46d84e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromCompletable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L46d854.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d85a.  v1:= temp @kind object;
  #L46d85c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromCompletionStage`(`java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromCompletionStage:(Ljava/util/concurrent/CompletionStage;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d870.  v0:= "stage is null" @kind object;
  #L46d874.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d87a.  v0:= new `io.reactivex.rxjava3.internal.jdk8.MaybeFromCompletionStage`;
  #L46d87e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/MaybeFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @kind direct;
  #L46d884.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d88a.  v1:= temp @kind object;
  #L46d88c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromFuture`(`java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46d8a0.  v0:= "future is null" @kind object;
  #L46d8a4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d8aa.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture`;
  #L46d8ae.  v1:= 0L;
  #L46d8b2.  v3:= 0I;
  #L46d8b4.  call `<init>`(v0, v4, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L46d8ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d8c0.  v4:= temp @kind object;
  #L46d8c2.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d8d4.  v0:= "future is null" @kind object;
  #L46d8d8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d8de.  v0:= "unit is null" @kind object;
  #L46d8e2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d8e8.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture`;
  #L46d8ec.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L46d8f2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d8f8.  v1:= temp @kind object;
  #L46d8fa.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromObservable`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromObservable:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46d90c.  v0:= "source is null" @kind object;
  #L46d910.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d916.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe`;
  #L46d91a.  v1:= 0L;
  #L46d91e.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;J)V` @kind direct;
  #L46d924.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d92a.  v3:= temp @kind object;
  #L46d92c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromOptional`(`java.util.Optional` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromOptional:(Ljava/util/Optional;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d940.  v0:= "optional is null" @kind object;
  #L46d944.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d94a.  v0:= `@@io.reactivex.rxjava3.core.d.a` @type ^`io.reactivex.rxjava3.core.d` @kind object;
  #L46d94e.  call temp:= `map`(v1, v0) @signature `Ljava/util/Optional;.map:(Ljava/util/function/Function;)Ljava/util/Optional;` @kind virtual;
  #L46d954.  v1:= temp @kind object;
  #L46d956.  v0:= `@@io.reactivex.rxjava3.core.e.a` @type ^`io.reactivex.rxjava3.core.e` @kind object;
  #L46d95a.  call temp:= `orElseGet`(v1, v0) @signature `Ljava/util/Optional;.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;` @kind virtual;
  #L46d960.  v1:= temp @kind object;
  #L46d962.  v1:= (`io.reactivex.rxjava3.core.Maybe`) v1 @kind object;
  #L46d966.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromPublisher`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46d978.  v0:= "source is null" @kind object;
  #L46d97c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d982.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtMaybePublisher`;
  #L46d986.  v1:= 0L;
  #L46d98a.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtMaybePublisher;.<init>:(Lorg/reactivestreams/Publisher;J)V` @kind direct;
  #L46d990.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d996.  v3:= temp @kind object;
  #L46d998.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d9ac.  v0:= "run is null" @kind object;
  #L46d9b0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d9b6.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromRunnable`;
  #L46d9ba.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L46d9c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d9c6.  v1:= temp @kind object;
  #L46d9c8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromSingle`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromSingle:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46d9dc.  v0:= "single is null" @kind object;
  #L46d9e0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d9e6.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromSingle`;
  #L46d9ea.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L46d9f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d9f6.  v1:= temp @kind object;
  #L46d9f8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fromSupplier`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.fromSupplier:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46da0c.  v0:= "supplier is null" @kind object;
  #L46da10.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46da16.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromSupplier`;
  #L46da1a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46da20.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46da26.  v1:= temp @kind object;
  #L46da28.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46da60.  v0:= "item is null" @kind object;
  #L46da64.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46da6a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeJust`;
  #L46da6e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L46da74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46da7a.  v1:= temp @kind object;
  #L46da7c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46c9f8.  v0:= "source1 is null" @kind object;
  #L46c9fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ca02.  v0:= "source2 is null" @kind object;
  #L46ca06.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ca0c.  v0:= 2I;
  #L46ca0e.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46ca12.  v1:= 0I;
  #L46ca14.  v0[v1]:= v2 @kind object;
  #L46ca18.  v2:= 1I;
  #L46ca1a.  v0[v2]:= v3 @kind object;
  #L46ca1e.  call temp:= `mergeArray`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ca24.  v2:= temp @kind object;
  #L46ca26.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46ca38.  v0:= "source1 is null" @kind object;
  #L46ca3c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ca42.  v0:= "source2 is null" @kind object;
  #L46ca46.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ca4c.  v0:= "source3 is null" @kind object;
  #L46ca50.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ca56.  v0:= 3I;
  #L46ca58.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46ca5c.  v1:= 0I;
  #L46ca5e.  v0[v1]:= v2 @kind object;
  #L46ca62.  v2:= 1I;
  #L46ca64.  v0[v2]:= v3 @kind object;
  #L46ca68.  v2:= 2I;
  #L46ca6a.  v0[v2]:= v4 @kind object;
  #L46ca6e.  call temp:= `mergeArray`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ca74.  v2:= temp @kind object;
  #L46ca76.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46ca88.  v0:= "source1 is null" @kind object;
  #L46ca8c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ca92.  v0:= "source2 is null" @kind object;
  #L46ca96.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ca9c.  v0:= "source3 is null" @kind object;
  #L46caa0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46caa6.  v0:= "source4 is null" @kind object;
  #L46caaa.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cab0.  v0:= 4I;
  #L46cab2.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46cab6.  v1:= 0I;
  #L46cab8.  v0[v1]:= v2 @kind object;
  #L46cabc.  v2:= 1I;
  #L46cabe.  v0[v2]:= v3 @kind object;
  #L46cac2.  v2:= 2I;
  #L46cac4.  v0[v2]:= v4 @kind object;
  #L46cac8.  v2:= 3I;
  #L46caca.  v0[v2]:= v5 @kind object;
  #L46cace.  call temp:= `mergeArray`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cad4.  v2:= temp @kind object;
  #L46cad6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46cae8.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46caee.  v3:= temp @kind object;
  #L46caf0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46caf6.  v0:= temp @kind object;
  #L46caf8.  v1:= 0I;
  #L46cafa.  v2:= 2147483647I;
  #L46cb00.  call temp:= `flatMapMaybe`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cb06.  v3:= temp @kind object;
  #L46cb08.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46cb1c.  v0:= 2147483647I;
  #L46cb22.  call temp:= `merge`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cb28.  v1:= temp @kind object;
  #L46cb2a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46cb3c.  v0:= "sources is null" @kind object;
  #L46cb40.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cb46.  v0:= "maxConcurrency" @kind object;
  #L46cb4a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46cb50.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybePublisher`;
  #L46cb54.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46cb5a.  v1:= temp @kind object;
  #L46cb5c.  v2:= 0I;
  #L46cb5e.  call `<init>`(v0, v3, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapMaybePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L46cb64.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cb6a.  v3:= temp @kind object;
  #L46cb6c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `merge`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46db20.  v0:= "source is null" @kind object;
  #L46db24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46db2a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatten`;
  #L46db2e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46db34.  v1:= temp @kind object;
  #L46db36.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatten;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46db3c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46db42.  v2:= temp @kind object;
  #L46db44.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArray`(`io.reactivex.rxjava3.core.MaybeSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46cb80.  v0:= "sources is null" @kind object;
  #L46cb84.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cb8a.  v0:= length @variable v2;
  #L46cb8c.  if v0 != 0 then goto L46cb9a;
  #L46cb90.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cb96.  v2:= temp @kind object;
  #L46cb98.  return v2 @kind object;
  #L46cb9a.  v0:= length @variable v2;
  #L46cb9c.  v1:= 1I;
  #L46cb9e.  if v0 != v1 then goto L46cbbc;
  #L46cba2.  v0:= 0I;
  #L46cba4.  v2:= v2[v0] @kind object;
  #L46cba8.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToFlowable`;
  #L46cbac.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToFlowable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46cbb2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cbb8.  v2:= temp @kind object;
  #L46cbba.  return v2 @kind object;
  #L46cbbc.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeMergeArray`;
  #L46cbc0.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMergeArray;.<init>:([Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46cbc6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cbcc.  v2:= temp @kind object;
  #L46cbce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArrayDelayError`(`io.reactivex.rxjava3.core.MaybeSource`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46cbe0.  v0:= "sources is null" @kind object;
  #L46cbe4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cbea.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cbf0.  v0:= temp @kind object;
  #L46cbf2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46cbf8.  v1:= temp @kind object;
  #L46cbfa.  v3:= length @variable v3;
  #L46cbfc.  v2:= 1I;
  #L46cbfe.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L46cc04.  v3:= temp;
  #L46cc06.  call temp:= `flatMapMaybe`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cc0c.  v3:= temp @kind object;
  #L46cc0e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeDelayError:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46cc20.  v0:= "source1 is null" @kind object;
  #L46cc24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cc2a.  v0:= "source2 is null" @kind object;
  #L46cc2e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cc34.  v0:= 2I;
  #L46cc36.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46cc3a.  v1:= 0I;
  #L46cc3c.  v0[v1]:= v2 @kind object;
  #L46cc40.  v2:= 1I;
  #L46cc42.  v0[v2]:= v3 @kind object;
  #L46cc46.  call temp:= `mergeArrayDelayError`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cc4c.  v2:= temp @kind object;
  #L46cc4e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeDelayError:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46cc60.  v0:= "source1 is null" @kind object;
  #L46cc64.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cc6a.  v0:= "source2 is null" @kind object;
  #L46cc6e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cc74.  v0:= "source3 is null" @kind object;
  #L46cc78.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cc7e.  v0:= 3I;
  #L46cc80.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46cc84.  v1:= 0I;
  #L46cc86.  v0[v1]:= v2 @kind object;
  #L46cc8a.  v2:= 1I;
  #L46cc8c.  v0[v2]:= v3 @kind object;
  #L46cc90.  v2:= 2I;
  #L46cc92.  v0[v2]:= v4 @kind object;
  #L46cc96.  call temp:= `mergeArrayDelayError`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cc9c.  v2:= temp @kind object;
  #L46cc9e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeDelayError:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46ccb0.  v0:= "source1 is null" @kind object;
  #L46ccb4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ccba.  v0:= "source2 is null" @kind object;
  #L46ccbe.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ccc4.  v0:= "source3 is null" @kind object;
  #L46ccc8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ccce.  v0:= "source4 is null" @kind object;
  #L46ccd2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ccd8.  v0:= 4I;
  #L46ccda.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46ccde.  v1:= 0I;
  #L46cce0.  v0[v1]:= v2 @kind object;
  #L46cce4.  v2:= 1I;
  #L46cce6.  v0[v2]:= v3 @kind object;
  #L46ccea.  v2:= 2I;
  #L46ccec.  v0[v2]:= v4 @kind object;
  #L46ccf0.  v2:= 3I;
  #L46ccf2.  v0[v2]:= v5 @kind object;
  #L46ccf6.  call temp:= `mergeArrayDelayError`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ccfc.  v2:= temp @kind object;
  #L46ccfe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46cd10.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cd16.  v3:= temp @kind object;
  #L46cd18.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46cd1e.  v0:= temp @kind object;
  #L46cd20.  v1:= 1I;
  #L46cd22.  v2:= 2147483647I;
  #L46cd28.  call temp:= `flatMapMaybe`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cd2e.  v3:= temp @kind object;
  #L46cd30.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46cd44.  v0:= 2147483647I;
  #L46cd4a.  call temp:= `mergeDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cd50.  v1:= temp @kind object;
  #L46cd52.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46cd64.  v0:= "sources is null" @kind object;
  #L46cd68.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cd6e.  v0:= "maxConcurrency" @kind object;
  #L46cd72.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L46cd78.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybePublisher`;
  #L46cd7c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46cd82.  v1:= temp @kind object;
  #L46cd84.  v2:= 1I;
  #L46cd86.  call `<init>`(v0, v3, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapMaybePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L46cd8c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cd92.  v3:= temp @kind object;
  #L46cd94.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `never`() @signature `Lio/reactivex/rxjava3/core/Maybe;.never:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46db58.  v0:= `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeNever.INSTANCE` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeNever` @kind object;
  #L46db5c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46db62.  v0:= temp @kind object;
  #L46db64.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.sequenceEqual:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46ea34.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L46ea3a.  v0:= temp @kind object;
  #L46ea3c.  call temp:= `sequenceEqual`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.sequenceEqual:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46ea42.  v1:= temp @kind object;
  #L46ea44.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.sequenceEqual:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46ea58.  v0:= "source1 is null" @kind object;
  #L46ea5c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ea62.  v0:= "source2 is null" @kind object;
  #L46ea66.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ea6c.  v0:= "isEqual is null" @kind object;
  #L46ea70.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ea76.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeEqualSingle`;
  #L46ea7a.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L46ea80.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46ea86.  v1:= temp @kind object;
  #L46ea88.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNext`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.switchOnNext:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46cf3c.  v0:= "sources is null" @kind object;
  #L46cf40.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cf46.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybePublisher`;
  #L46cf4a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46cf50.  v1:= temp @kind object;
  #L46cf52.  v2:= 0I;
  #L46cf54.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L46cf5a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cf60.  v3:= temp @kind object;
  #L46cf62.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNextDelayError`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46cf74.  v0:= "sources is null" @kind object;
  #L46cf78.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cf7e.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybePublisher`;
  #L46cf82.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46cf88.  v1:= temp @kind object;
  #L46cf8a.  v2:= 1I;
  #L46cf8c.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L46cf92.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cf98.  v3:= temp @kind object;
  #L46cf9a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46e11c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46e122.  v0:= temp @kind object;
  #L46e124.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e12a.  v1:= temp @kind object;
  #L46e12c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timer`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46e140.  v0:= "unit is null" @kind object;
  #L46e144.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e14a.  v0:= "scheduler is null" @kind object;
  #L46e14e.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e154.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer`;
  #L46e158.  v1:= 0L;
  #L46e15c.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L46e162.  v3:= temp @kind wide;
  #L46e164.  call `<init>`(v0, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L46e16a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e170.  v3:= temp @kind object;
  #L46e172.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `unsafeCreate`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.unsafeCreate:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46e22c.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Maybe` @kind boolean;
  #L46e230.  if v0 != 0 then goto L46e252;
  #L46e234.  v0:= "onSubscribe is null" @kind object;
  #L46e238.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e23e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeUnsafeCreate`;
  #L46e242.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeUnsafeCreate;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46e248.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e24e.  v1:= temp @kind object;
  #L46e250.  return v1 @kind object;
  #L46e252.  v1:= new `java.lang.IllegalArgumentException`;
  #L46e256.  v0:= "unsafeCreate(Maybe) should be upgraded" @kind object;
  #L46e25a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46e260.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Maybe` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46e2a4.  v0:= 1I;
  #L46e2a6.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e2ac.  v1:= temp @kind object;
  #L46e2ae.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46e2c0.  v0:= "resourceSupplier is null" @kind object;
  #L46e2c4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e2ca.  v0:= "sourceSupplier is null" @kind object;
  #L46e2ce.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e2d4.  v0:= "resourceCleanup is null" @kind object;
  #L46e2d8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e2de.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing`;
  #L46e2e2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeUsing;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @kind direct;
  #L46e2e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e2ee.  v1:= temp @kind object;
  #L46e2f0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `wrap`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46e304.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Maybe` @kind boolean;
  #L46e308.  if v0 == 0 then goto L46e31a;
  #L46e30c.  v1:= (`io.reactivex.rxjava3.core.Maybe`) v1 @kind object;
  #L46e310.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e316.  v1:= temp @kind object;
  #L46e318.  return v1 @kind object;
  #L46e31a.  v0:= "source is null" @kind object;
  #L46e31e.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e324.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeUnsafeCreate`;
  #L46e328.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeUnsafeCreate;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46e32e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e334.  v1:= temp @kind object;
  #L46e336.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v6 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v7 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v8 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v9 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v10 @kind object, `io.reactivex.rxjava3.functions.Function9` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46e348.  v0:= "source1 is null" @kind object;
  #L46e34c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e352.  v0:= "source2 is null" @kind object;
  #L46e356.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e35c.  v0:= "source3 is null" @kind object;
  #L46e360.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e366.  v0:= "source4 is null" @kind object;
  #L46e36a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e370.  v0:= "source5 is null" @kind object;
  #L46e374.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e37a.  v0:= "source6 is null" @kind object;
  #L46e37e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e384.  v0:= "source7 is null" @kind object;
  #L46e388.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e38e.  v0:= "source8 is null" @kind object;
  #L46e392.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e398.  v0:= "source9 is null" @kind object;
  #L46e39c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e3a2.  v0:= "zipper is null" @kind object;
  #L46e3a6.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e3ac.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46e3b2.  v11:= temp @kind object;
  #L46e3b4.  v0:= 9I;
  #L46e3b8.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46e3bc.  v1:= 0I;
  #L46e3be.  v0[v1]:= v2 @kind object;
  #L46e3c2.  v2:= 1I;
  #L46e3c4.  v0[v2]:= v3 @kind object;
  #L46e3c8.  v2:= 2I;
  #L46e3ca.  v0[v2]:= v4 @kind object;
  #L46e3ce.  v2:= 3I;
  #L46e3d0.  v0[v2]:= v5 @kind object;
  #L46e3d4.  v2:= 4I;
  #L46e3d6.  v0[v2]:= v6 @kind object;
  #L46e3da.  v2:= 5I;
  #L46e3dc.  v0[v2]:= v7 @kind object;
  #L46e3e0.  v2:= 6I;
  #L46e3e2.  v0[v2]:= v8 @kind object;
  #L46e3e6.  v2:= 7I;
  #L46e3e8.  v0[v2]:= v9 @kind object;
  #L46e3ec.  v2:= 8I;
  #L46e3f0.  v0[v2]:= v10 @kind object;
  #L46e3f4.  call temp:= `zipArray`(v11, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e3fa.  v2:= temp @kind object;
  #L46e3fc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v6 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v7 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v8 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v9 @kind object, `io.reactivex.rxjava3.functions.Function8` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46e410.  v0:= "source1 is null" @kind object;
  #L46e414.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e41a.  v0:= "source2 is null" @kind object;
  #L46e41e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e424.  v0:= "source3 is null" @kind object;
  #L46e428.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e42e.  v0:= "source4 is null" @kind object;
  #L46e432.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e438.  v0:= "source5 is null" @kind object;
  #L46e43c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e442.  v0:= "source6 is null" @kind object;
  #L46e446.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e44c.  v0:= "source7 is null" @kind object;
  #L46e450.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e456.  v0:= "source8 is null" @kind object;
  #L46e45a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e460.  v0:= "zipper is null" @kind object;
  #L46e464.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e46a.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46e470.  v10:= temp @kind object;
  #L46e472.  v0:= 8I;
  #L46e476.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46e47a.  v1:= 0I;
  #L46e47c.  v0[v1]:= v2 @kind object;
  #L46e480.  v2:= 1I;
  #L46e482.  v0[v2]:= v3 @kind object;
  #L46e486.  v2:= 2I;
  #L46e488.  v0[v2]:= v4 @kind object;
  #L46e48c.  v2:= 3I;
  #L46e48e.  v0[v2]:= v5 @kind object;
  #L46e492.  v2:= 4I;
  #L46e494.  v0[v2]:= v6 @kind object;
  #L46e498.  v2:= 5I;
  #L46e49a.  v0[v2]:= v7 @kind object;
  #L46e49e.  v2:= 6I;
  #L46e4a0.  v0[v2]:= v8 @kind object;
  #L46e4a4.  v2:= 7I;
  #L46e4a6.  v0[v2]:= v9 @kind object;
  #L46e4aa.  call temp:= `zipArray`(v10, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e4b0.  v2:= temp @kind object;
  #L46e4b2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v6 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v7 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function7` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46e4c4.  v0:= "source1 is null" @kind object;
  #L46e4c8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e4ce.  v0:= "source2 is null" @kind object;
  #L46e4d2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e4d8.  v0:= "source3 is null" @kind object;
  #L46e4dc.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e4e2.  v0:= "source4 is null" @kind object;
  #L46e4e6.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e4ec.  v0:= "source5 is null" @kind object;
  #L46e4f0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e4f6.  v0:= "source6 is null" @kind object;
  #L46e4fa.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e500.  v0:= "source7 is null" @kind object;
  #L46e504.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e50a.  v0:= "zipper is null" @kind object;
  #L46e50e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e514.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46e51a.  v9:= temp @kind object;
  #L46e51c.  v0:= 7I;
  #L46e51e.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46e522.  v1:= 0I;
  #L46e524.  v0[v1]:= v2 @kind object;
  #L46e528.  v2:= 1I;
  #L46e52a.  v0[v2]:= v3 @kind object;
  #L46e52e.  v2:= 2I;
  #L46e530.  v0[v2]:= v4 @kind object;
  #L46e534.  v2:= 3I;
  #L46e536.  v0[v2]:= v5 @kind object;
  #L46e53a.  v2:= 4I;
  #L46e53c.  v0[v2]:= v6 @kind object;
  #L46e540.  v2:= 5I;
  #L46e542.  v0[v2]:= v7 @kind object;
  #L46e546.  v2:= 6I;
  #L46e548.  v0[v2]:= v8 @kind object;
  #L46e54c.  call temp:= `zipArray`(v9, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e552.  v2:= temp @kind object;
  #L46e554.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v6 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v7 @kind object, `io.reactivex.rxjava3.functions.Function6` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46e568.  v0:= "source1 is null" @kind object;
  #L46e56c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e572.  v0:= "source2 is null" @kind object;
  #L46e576.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e57c.  v0:= "source3 is null" @kind object;
  #L46e580.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e586.  v0:= "source4 is null" @kind object;
  #L46e58a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e590.  v0:= "source5 is null" @kind object;
  #L46e594.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e59a.  v0:= "source6 is null" @kind object;
  #L46e59e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e5a4.  v0:= "zipper is null" @kind object;
  #L46e5a8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e5ae.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46e5b4.  v8:= temp @kind object;
  #L46e5b6.  v0:= 6I;
  #L46e5b8.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46e5bc.  v1:= 0I;
  #L46e5be.  v0[v1]:= v2 @kind object;
  #L46e5c2.  v2:= 1I;
  #L46e5c4.  v0[v2]:= v3 @kind object;
  #L46e5c8.  v2:= 2I;
  #L46e5ca.  v0[v2]:= v4 @kind object;
  #L46e5ce.  v2:= 3I;
  #L46e5d0.  v0[v2]:= v5 @kind object;
  #L46e5d4.  v2:= 4I;
  #L46e5d6.  v0[v2]:= v6 @kind object;
  #L46e5da.  v2:= 5I;
  #L46e5dc.  v0[v2]:= v7 @kind object;
  #L46e5e0.  call temp:= `zipArray`(v8, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e5e6.  v2:= temp @kind object;
  #L46e5e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46e5fc.  v0:= "source1 is null" @kind object;
  #L46e600.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e606.  v0:= "source2 is null" @kind object;
  #L46e60a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e610.  v0:= "source3 is null" @kind object;
  #L46e614.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e61a.  v0:= "source4 is null" @kind object;
  #L46e61e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e624.  v0:= "source5 is null" @kind object;
  #L46e628.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e62e.  v0:= "zipper is null" @kind object;
  #L46e632.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e638.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46e63e.  v7:= temp @kind object;
  #L46e640.  v0:= 5I;
  #L46e642.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46e646.  v1:= 0I;
  #L46e648.  v0[v1]:= v2 @kind object;
  #L46e64c.  v2:= 1I;
  #L46e64e.  v0[v2]:= v3 @kind object;
  #L46e652.  v2:= 2I;
  #L46e654.  v0[v2]:= v4 @kind object;
  #L46e658.  v2:= 3I;
  #L46e65a.  v0[v2]:= v5 @kind object;
  #L46e65e.  v2:= 4I;
  #L46e660.  v0[v2]:= v6 @kind object;
  #L46e664.  call temp:= `zipArray`(v7, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e66a.  v2:= temp @kind object;
  #L46e66c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46e680.  v0:= "source1 is null" @kind object;
  #L46e684.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e68a.  v0:= "source2 is null" @kind object;
  #L46e68e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e694.  v0:= "source3 is null" @kind object;
  #L46e698.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e69e.  v0:= "source4 is null" @kind object;
  #L46e6a2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e6a8.  v0:= "zipper is null" @kind object;
  #L46e6ac.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e6b2.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46e6b8.  v6:= temp @kind object;
  #L46e6ba.  v0:= 4I;
  #L46e6bc.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46e6c0.  v1:= 0I;
  #L46e6c2.  v0[v1]:= v2 @kind object;
  #L46e6c6.  v2:= 1I;
  #L46e6c8.  v0[v2]:= v3 @kind object;
  #L46e6cc.  v2:= 2I;
  #L46e6ce.  v0[v2]:= v4 @kind object;
  #L46e6d2.  v2:= 3I;
  #L46e6d4.  v0[v2]:= v5 @kind object;
  #L46e6d8.  call temp:= `zipArray`(v6, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e6de.  v2:= temp @kind object;
  #L46e6e0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46e6f4.  v0:= "source1 is null" @kind object;
  #L46e6f8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e6fe.  v0:= "source2 is null" @kind object;
  #L46e702.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e708.  v0:= "source3 is null" @kind object;
  #L46e70c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e712.  v0:= "zipper is null" @kind object;
  #L46e716.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e71c.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46e722.  v5:= temp @kind object;
  #L46e724.  v0:= 3I;
  #L46e726.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46e72a.  v1:= 0I;
  #L46e72c.  v0[v1]:= v2 @kind object;
  #L46e730.  v2:= 1I;
  #L46e732.  v0[v2]:= v3 @kind object;
  #L46e736.  v2:= 2I;
  #L46e738.  v0[v2]:= v4 @kind object;
  #L46e73c.  call temp:= `zipArray`(v5, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e742.  v2:= temp @kind object;
  #L46e744.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46e758.  v0:= "source1 is null" @kind object;
  #L46e75c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e762.  v0:= "source2 is null" @kind object;
  #L46e766.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e76c.  v0:= "zipper is null" @kind object;
  #L46e770.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e776.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46e77c.  v4:= temp @kind object;
  #L46e77e.  v0:= 2I;
  #L46e780.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46e784.  v1:= 0I;
  #L46e786.  v0[v1]:= v2 @kind object;
  #L46e78a.  v2:= 1I;
  #L46e78c.  v0[v2]:= v3 @kind object;
  #L46e790.  call temp:= `zipArray`(v4, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e796.  v2:= temp @kind object;
  #L46e798.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zip`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46e7ac.  v0:= "zipper is null" @kind object;
  #L46e7b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e7b6.  v0:= "sources is null" @kind object;
  #L46e7ba.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e7c0.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable`;
  #L46e7c4.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipIterable;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46e7ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e7d0.  v1:= temp @kind object;
  #L46e7d2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zipArray`(`io.reactivex.rxjava3.functions.Function` v1 @kind object, `io.reactivex.rxjava3.core.MaybeSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46e7e4.  v0:= "sources is null" @kind object;
  #L46e7e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e7ee.  v0:= length @variable v2;
  #L46e7f0.  if v0 != 0 then goto L46e7fe;
  #L46e7f4.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Maybe;.empty:()Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e7fa.  v1:= temp @kind object;
  #L46e7fc.  return v1 @kind object;
  #L46e7fe.  v0:= "zipper is null" @kind object;
  #L46e802.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e808.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray`;
  #L46e80c.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipArray;.<init>:([Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46e812.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e818.  v1:= temp @kind object;
  #L46e81a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `ambWith`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.ambWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46d070.  v0:= "other is null" @kind object;
  #L46d074.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d07a.  v0:= 2I;
  #L46d07c.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L46d080.  v1:= 0I;
  #L46d082.  v0[v1]:= v2 @kind object;
  #L46d086.  v1:= 1I;
  #L46d088.  v0[v1]:= v3 @kind object;
  #L46d08c.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.ambArray:([Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d092.  v3:= temp @kind object;
  #L46d094.  return v3 @kind object;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ebfc.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L46ec00.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L46ec06.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ec0c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L46ec12.  v0:= temp @kind object;
  #L46ec14.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingGet:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ec28.  v0:= "defaultValue is null" @kind object;
  #L46ec2c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ec32.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L46ec36.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L46ec3c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ec42.  call temp:= `blockingGet`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingGet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L46ec48.  v2:= temp @kind object;
  #L46ec4a.  return v2 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Maybe` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46ed1c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46ed22.  v0:= temp @kind object;
  #L46ed24.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ERROR_CONSUMER` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46ed28.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46ed2c.  call `blockingSubscribe`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind virtual;
  #L46ed32.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingSubscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ed44.  v0:= "observer is null" @kind object;
  #L46ed48.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ed4e.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver`;
  #L46ed52.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.<init>:()V` @kind direct;
  #L46ed58.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L46ed5e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ed64.  call `blockingConsume`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ed6a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46ed7c.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ERROR_CONSUMER` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46ed80.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46ed84.  call `blockingSubscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind virtual;
  #L46ed8a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ed9c.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46eda0.  call `blockingSubscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind virtual;
  #L46eda6.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46edb8.  v0:= "onSuccess is null" @kind object;
  #L46edbc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46edc2.  v0:= "onError is null" @kind object;
  #L46edc6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46edcc.  v0:= "onComplete is null" @kind object;
  #L46edd0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46edd6.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L46edda.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L46ede0.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ede6.  call `blockingConsume`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind virtual;
  #L46edec.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Maybe` `cache`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.cache:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d0a8.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeCache`;
  #L46d0ac.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46d0b2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d0b8.  v0:= temp @kind object;
  #L46d0ba.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `cast`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d0cc.  v0:= "clazz is null" @kind object;
  #L46d0d0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d0d6.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46d0dc.  v2:= temp @kind object;
  #L46d0de.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46d0e4.  v2:= temp @kind object;
  #L46d0e6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `compose`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.compose:(Lio/reactivex/rxjava3/core/MaybeTransformer;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d0f8.  v0:= "transformer is null" @kind object;
  #L46d0fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d102.  v2:= (`io.reactivex.rxjava3.core.MaybeTransformer`) v2 @kind object;
  #L46d106.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeTransformer;.apply:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/MaybeSource;` @kind interface;
  #L46d10c.  v2:= temp @kind object;
  #L46d10e.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d114.  v2:= temp @kind object;
  #L46d116.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `concatMap`(`io.reactivex.rxjava3.core.Maybe` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46d128.  call temp:= `flatMap`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46d12e.  v1:= temp @kind object;
  #L46d130.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Maybe` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46c454.  call temp:= `flatMapCompletable`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L46c45a.  v1:= temp @kind object;
  #L46c45c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `concatMapSingle`(`io.reactivex.rxjava3.core.Maybe` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46d144.  call temp:= `flatMapSingle`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46d14a.  v1:= temp @kind object;
  #L46d14c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.concatWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c944.  v0:= "other is null" @kind object;
  #L46c948.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c94e.  call temp:= `concat`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c954.  v2:= temp @kind object;
  #L46c956.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.contains:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e968.  v0:= "item is null" @kind object;
  #L46e96c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e972.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeContains`;
  #L46e976.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeContains;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)V` @kind direct;
  #L46e97c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46e982.  v2:= temp @kind object;
  #L46e984.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `count`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.count:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e998.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeCount`;
  #L46e99c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46e9a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46e9a8.  v0:= temp @kind object;
  #L46e9aa.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `defaultIfEmpty`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e9bc.  v0:= "defaultItem is null" @kind object;
  #L46e9c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e9c6.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToSingle`;
  #L46e9ca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToSingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)V` @kind direct;
  #L46e9d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46e9d6.  v2:= temp @kind object;
  #L46e9d8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `delay`(`io.reactivex.rxjava3.core.Maybe` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46d1c0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46d1c6.  v4:= temp @kind object;
  #L46d1c8.  v5:= 0I;
  #L46d1ca.  v0:= v6 @kind object;
  #L46d1cc.  v1:= v7 @kind wide;
  #L46d1ce.  v3:= v9 @kind object;
  #L46d1d0.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Maybe;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46d1d6.  v7:= temp @kind object;
  #L46d1d8.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `delay`(`io.reactivex.rxjava3.core.Maybe` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46d218.  v5:= 0I;
  #L46d21a.  v0:= v6 @kind object;
  #L46d21c.  v1:= v7 @kind wide;
  #L46d21e.  v3:= v9 @kind object;
  #L46d220.  v4:= v10 @kind object;
  #L46d222.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Maybe;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46d228.  v7:= temp @kind object;
  #L46d22a.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `delay`(`io.reactivex.rxjava3.core.Maybe` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46d23c.  v0:= "unit is null" @kind object;
  #L46d240.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d246.  v0:= "scheduler is null" @kind object;
  #L46d24a.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d250.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay`;
  #L46d254.  v1:= 0L;
  #L46d258.  call temp:= `max`(v1, v9) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L46d25e.  v3:= temp @kind wide;
  #L46d260.  v1:= v0 @kind object;
  #L46d262.  v2:= v8 @kind object;
  #L46d264.  v5:= v11 @kind object;
  #L46d266.  v6:= v12 @kind object;
  #L46d268.  v7:= v13;
  #L46d26a.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L46d270.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d276.  v9:= temp @kind object;
  #L46d278.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `delay`(`io.reactivex.rxjava3.core.Maybe` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46d1ec.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46d1f2.  v4:= temp @kind object;
  #L46d1f4.  v0:= v6 @kind object;
  #L46d1f6.  v1:= v7 @kind wide;
  #L46d1f8.  v3:= v9 @kind object;
  #L46d1fa.  v5:= v10;
  #L46d1fc.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Maybe;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46d202.  v7:= temp @kind object;
  #L46d204.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `delay`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.delay:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d28c.  v0:= "delayIndicator is null" @kind object;
  #L46d290.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d296.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher`;
  #L46d29a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayOtherPublisher;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46d2a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d2a6.  v2:= temp @kind object;
  #L46d2a8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `delaySubscription`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d2bc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46d2c2.  v0:= temp @kind object;
  #L46d2c4.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46d2ca.  v2:= temp @kind object;
  #L46d2cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `delaySubscription`(`io.reactivex.rxjava3.core.Maybe` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46d2e0.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46d2e6.  v1:= temp @kind object;
  #L46d2e8.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46d2ee.  v1:= temp @kind object;
  #L46d2f0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `delaySubscription`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d304.  v0:= "subscriptionIndicator is null" @kind object;
  #L46d308.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d30e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher`;
  #L46d312.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46d318.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d31e.  v2:= temp @kind object;
  #L46d320.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `dematerialize`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.dematerialize:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d334.  v0:= "selector is null" @kind object;
  #L46d338.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d33e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize`;
  #L46d342.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize;.<init>:(Lio/reactivex/rxjava3/core/Maybe;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46d348.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d34e.  v2:= temp @kind object;
  #L46d350.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doAfterSuccess`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doAfterSuccess:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d364.  v0:= "onAfterSuccess is null" @kind object;
  #L46d368.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d36e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoAfterSuccess`;
  #L46d372.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoAfterSuccess;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L46d378.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d37e.  v2:= temp @kind object;
  #L46d380.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doAfterTerminate`(`io.reactivex.rxjava3.core.Maybe` v9 @kind this, `io.reactivex.rxjava3.functions.Action` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doAfterTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46d394.  v8:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybePeek`;
  #L46d398.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d39e.  v2:= temp @kind object;
  #L46d3a0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d3a6.  v3:= temp @kind object;
  #L46d3a8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d3ae.  v4:= temp @kind object;
  #L46d3b0.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46d3b4.  v0:= "onAfterTerminate is null" @kind object;
  #L46d3b8.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d3be.  v6:= v10 @kind object;
  #L46d3c0.  v6:= (`io.reactivex.rxjava3.functions.Action`) v6 @kind object;
  #L46d3c4.  v0:= v8 @kind object;
  #L46d3c6.  v1:= v9 @kind object;
  #L46d3c8.  v5:= v7 @kind object;
  #L46d3ca.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybePeek;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d3d0.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d3d6.  v10:= temp @kind object;
  #L46d3d8.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doFinally`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doFinally:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d3ec.  v0:= "onFinally is null" @kind object;
  #L46d3f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d3f6.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally`;
  #L46d3fa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d400.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d406.  v2:= temp @kind object;
  #L46d408.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doOnComplete`(`io.reactivex.rxjava3.core.Maybe` v9 @kind this, `io.reactivex.rxjava3.functions.Action` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doOnComplete:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46d41c.  v8:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybePeek`;
  #L46d420.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d426.  v2:= temp @kind object;
  #L46d428.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d42e.  v3:= temp @kind object;
  #L46d430.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d436.  v4:= temp @kind object;
  #L46d438.  v0:= "onComplete is null" @kind object;
  #L46d43c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d442.  v5:= v10 @kind object;
  #L46d444.  v5:= (`io.reactivex.rxjava3.functions.Action`) v5 @kind object;
  #L46d448.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46d44c.  v0:= v8 @kind object;
  #L46d44e.  v1:= v9 @kind object;
  #L46d450.  v6:= v7 @kind object;
  #L46d452.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybePeek;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d458.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d45e.  v10:= temp @kind object;
  #L46d460.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doOnDispose`(`io.reactivex.rxjava3.core.Maybe` v9 @kind this, `io.reactivex.rxjava3.functions.Action` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doOnDispose:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46d474.  v8:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybePeek`;
  #L46d478.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d47e.  v2:= temp @kind object;
  #L46d480.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d486.  v3:= temp @kind object;
  #L46d488.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d48e.  v4:= temp @kind object;
  #L46d490.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46d494.  v0:= "onDispose is null" @kind object;
  #L46d498.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d49e.  v7:= v10 @kind object;
  #L46d4a0.  v7:= (`io.reactivex.rxjava3.functions.Action`) v7 @kind object;
  #L46d4a4.  v0:= v8 @kind object;
  #L46d4a6.  v1:= v9 @kind object;
  #L46d4a8.  v5:= v6 @kind object;
  #L46d4aa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybePeek;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d4b0.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d4b6.  v10:= temp @kind object;
  #L46d4b8.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doOnError`(`io.reactivex.rxjava3.core.Maybe` v9 @kind this, `io.reactivex.rxjava3.functions.Consumer` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46d4cc.  v8:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybePeek`;
  #L46d4d0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d4d6.  v2:= temp @kind object;
  #L46d4d8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d4de.  v3:= temp @kind object;
  #L46d4e0.  v0:= "onError is null" @kind object;
  #L46d4e4.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d4ea.  v4:= v10 @kind object;
  #L46d4ec.  v4:= (`io.reactivex.rxjava3.functions.Consumer`) v4 @kind object;
  #L46d4f0.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46d4f4.  v0:= v8 @kind object;
  #L46d4f6.  v1:= v9 @kind object;
  #L46d4f8.  v5:= v7 @kind object;
  #L46d4fa.  v6:= v7 @kind object;
  #L46d4fc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybePeek;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d502.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d508.  v10:= temp @kind object;
  #L46d50a.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doOnEvent`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doOnEvent:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d51c.  v0:= "onEvent is null" @kind object;
  #L46d520.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d526.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent`;
  #L46d52a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L46d530.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d536.  v2:= temp @kind object;
  #L46d538.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doOnLifecycle`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d54c.  v0:= "onSubscribe is null" @kind object;
  #L46d550.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d556.  v0:= "onDispose is null" @kind object;
  #L46d55a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d560.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle`;
  #L46d564.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle;.<init>:(Lio/reactivex/rxjava3/core/Maybe;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d56a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d570.  v2:= temp @kind object;
  #L46d572.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doOnSubscribe`(`io.reactivex.rxjava3.core.Maybe` v9 @kind this, `io.reactivex.rxjava3.functions.Consumer` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46d584.  v8:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybePeek`;
  #L46d588.  v0:= "onSubscribe is null" @kind object;
  #L46d58c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d592.  v2:= v10 @kind object;
  #L46d594.  v2:= (`io.reactivex.rxjava3.functions.Consumer`) v2 @kind object;
  #L46d598.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d59e.  v3:= temp @kind object;
  #L46d5a0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d5a6.  v4:= temp @kind object;
  #L46d5a8.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46d5ac.  v0:= v8 @kind object;
  #L46d5ae.  v1:= v9 @kind object;
  #L46d5b0.  v5:= v7 @kind object;
  #L46d5b2.  v6:= v7 @kind object;
  #L46d5b4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybePeek;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d5ba.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d5c0.  v10:= temp @kind object;
  #L46d5c2.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doOnSuccess`(`io.reactivex.rxjava3.core.Maybe` v9 @kind this, `io.reactivex.rxjava3.functions.Consumer` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doOnSuccess:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46d5d4.  v8:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybePeek`;
  #L46d5d8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d5de.  v2:= temp @kind object;
  #L46d5e0.  v0:= "onSuccess is null" @kind object;
  #L46d5e4.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d5ea.  v3:= v10 @kind object;
  #L46d5ec.  v3:= (`io.reactivex.rxjava3.functions.Consumer`) v3 @kind object;
  #L46d5f0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46d5f6.  v4:= temp @kind object;
  #L46d5f8.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46d5fc.  v0:= v8 @kind object;
  #L46d5fe.  v1:= v9 @kind object;
  #L46d600.  v5:= v7 @kind object;
  #L46d602.  v6:= v7 @kind object;
  #L46d604.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybePeek;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d60a.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d610.  v10:= temp @kind object;
  #L46d612.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `doOnTerminate`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.doOnTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d624.  v0:= "onTerminate is null" @kind object;
  #L46d628.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d62e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate`;
  #L46d632.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnTerminate;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46d638.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d63e.  v2:= temp @kind object;
  #L46d640.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `filter`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d6d4.  v0:= "predicate is null" @kind object;
  #L46d6d8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d6de.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter`;
  #L46d6e2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L46d6e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d6ee.  v2:= temp @kind object;
  #L46d6f0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `flatMap`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d704.  v0:= "mapper is null" @kind object;
  #L46d708.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d70e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatten`;
  #L46d712.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatten;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46d718.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d71e.  v2:= temp @kind object;
  #L46d720.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `flatMap`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d734.  v0:= "mapper is null" @kind object;
  #L46d738.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d73e.  v0:= "combiner is null" @kind object;
  #L46d742.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d748.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector`;
  #L46d74c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L46d752.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d758.  v2:= temp @kind object;
  #L46d75a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `flatMap`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d76c.  v0:= "onSuccessMapper is null" @kind object;
  #L46d770.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d776.  v0:= "onErrorMapper is null" @kind object;
  #L46d77a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d780.  v0:= "onCompleteSupplier is null" @kind object;
  #L46d784.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d78a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification`;
  #L46d78e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L46d794.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d79a.  v2:= temp @kind object;
  #L46d79c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c470.  v0:= "mapper is null" @kind object;
  #L46c474.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c47a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapCompletable`;
  #L46c47e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46c484.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46c48a.  v2:= temp @kind object;
  #L46c48c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapObservable`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMapObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e868.  v0:= "mapper is null" @kind object;
  #L46e86c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e872.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable`;
  #L46e876.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/MaybeFlatMapObservable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46e87c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46e882.  v2:= temp @kind object;
  #L46e884.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapPublisher`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMapPublisher:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c968.  v0:= "mapper is null" @kind object;
  #L46c96c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c972.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapPublisher`;
  #L46c976.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/MaybeFlatMapPublisher;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46c97c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c982.  v2:= temp @kind object;
  #L46c984.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `flatMapSingle`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46d7b0.  v0:= "mapper is null" @kind object;
  #L46d7b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46d7ba.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapSingle`;
  #L46d7be.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46d7c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46d7ca.  v2:= temp @kind object;
  #L46d7cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flattenAsFlowable`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flattenAsFlowable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c998.  v0:= "mapper is null" @kind object;
  #L46c99c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c9a2.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableFlowable`;
  #L46c9a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapIterableFlowable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46c9ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c9b2.  v2:= temp @kind object;
  #L46c9b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flattenAsObservable`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flattenAsObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e898.  v0:= "mapper is null" @kind object;
  #L46e89c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e8a2.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable`;
  #L46e8a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapIterableObservable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46e8ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46e8b2.  v2:= temp @kind object;
  #L46e8b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flattenStreamAsFlowable`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flattenStreamAsFlowable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c9c8.  v0:= "mapper is null" @kind object;
  #L46c9cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c9d2.  v0:= new `io.reactivex.rxjava3.internal.jdk8.MaybeFlattenStreamAsFlowable`;
  #L46c9d6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/MaybeFlattenStreamAsFlowable;.<init>:(Lio/reactivex/rxjava3/core/Maybe;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46c9dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46c9e2.  v2:= temp @kind object;
  #L46c9e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flattenStreamAsObservable`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.flattenStreamAsObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e8c8.  v0:= "mapper is null" @kind object;
  #L46e8cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e8d2.  v0:= new `io.reactivex.rxjava3.internal.jdk8.MaybeFlattenStreamAsObservable`;
  #L46e8d6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/MaybeFlattenStreamAsObservable;.<init>:(Lio/reactivex/rxjava3/core/Maybe;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46e8dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46e8e2.  v2:= temp @kind object;
  #L46e8e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `hide`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.hide:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46da3c.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeHide`;
  #L46da40.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeHide;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46da46.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46da4c.  v0:= temp @kind object;
  #L46da4e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ignoreElement`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.ignoreElement:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46c4a0.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable`;
  #L46c4a4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElementCompletable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46c4aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46c4b0.  v0:= temp @kind object;
  #L46c4b2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `isEmpty`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.isEmpty:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e9ec.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmptySingle`;
  #L46e9f0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmptySingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46e9f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46e9fc.  v0:= temp @kind object;
  #L46e9fe.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `lift`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.lift:(Lio/reactivex/rxjava3/core/MaybeOperator;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46da90.  v0:= "lift is null" @kind object;
  #L46da94.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46da9a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeLift`;
  #L46da9e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeLift;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeOperator;)V` @kind direct;
  #L46daa4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46daaa.  v2:= temp @kind object;
  #L46daac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `map`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dac0.  v0:= "mapper is null" @kind object;
  #L46dac4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46daca.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap`;
  #L46dace.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46dad4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46dada.  v2:= temp @kind object;
  #L46dadc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `mapOptional`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46daf0.  v0:= "mapper is null" @kind object;
  #L46daf4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dafa.  v0:= new `io.reactivex.rxjava3.internal.jdk8.MaybeMapOptional`;
  #L46dafe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/MaybeMapOptional;.<init>:(Lio/reactivex/rxjava3/core/Maybe;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46db04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46db0a.  v2:= temp @kind object;
  #L46db0c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `materialize`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.materialize:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ea10.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeMaterialize`;
  #L46ea14.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMaterialize;.<init>:(Lio/reactivex/rxjava3/core/Maybe;)V` @kind direct;
  #L46ea1a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46ea20.  v0:= temp @kind object;
  #L46ea22.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.mergeWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46cda8.  v0:= "other is null" @kind object;
  #L46cdac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cdb2.  call temp:= `merge`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.merge:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cdb8.  v2:= temp @kind object;
  #L46cdba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `observeOn`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46db78.  v0:= "scheduler is null" @kind object;
  #L46db7c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46db82.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn`;
  #L46db86.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L46db8c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46db92.  v2:= temp @kind object;
  #L46db94.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `ofType`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dba8.  v0:= "clazz is null" @kind object;
  #L46dbac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dbb2.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L46dbb8.  v0:= temp @kind object;
  #L46dbba.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dbc0.  v0:= temp @kind object;
  #L46dbc2.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dbc8.  v2:= temp @kind object;
  #L46dbca.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorComplete`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorComplete:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dbdc.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L46dbe2.  v0:= temp @kind object;
  #L46dbe4.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dbea.  v0:= temp @kind object;
  #L46dbec.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorComplete`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dc00.  v0:= "predicate is null" @kind object;
  #L46dc04.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dc0a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeOnErrorComplete`;
  #L46dc0e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L46dc14.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46dc1a.  v2:= temp @kind object;
  #L46dc1c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorResumeNext`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dc30.  v0:= "fallbackSupplier is null" @kind object;
  #L46dc34.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dc3a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeOnErrorNext`;
  #L46dc3e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeOnErrorNext;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46dc44.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46dc4a.  v2:= temp @kind object;
  #L46dc4c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorResumeWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorResumeWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dc60.  v0:= "fallback is null" @kind object;
  #L46dc64.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dc6a.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46dc70.  v2:= temp @kind object;
  #L46dc72.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dc78.  v2:= temp @kind object;
  #L46dc7a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorReturn`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dc8c.  v0:= "itemSupplier is null" @kind object;
  #L46dc90.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dc96.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeOnErrorReturn`;
  #L46dc9a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L46dca0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46dca6.  v2:= temp @kind object;
  #L46dca8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorReturnItem`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dcbc.  v0:= "item is null" @kind object;
  #L46dcc0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dcc6.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L46dccc.  v2:= temp @kind object;
  #L46dcce.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dcd4.  v2:= temp @kind object;
  #L46dcd6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onTerminateDetach`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.onTerminateDetach:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dce8.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDetach`;
  #L46dcec.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDetach;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46dcf2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46dcf8.  v0:= temp @kind object;
  #L46dcfa.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.repeat:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46cdcc.  v0:= 9223372036854775807L;
  #L46cdd6.  call temp:= `repeat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cddc.  v0:= temp @kind object;
  #L46cdde.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46cdf0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cdf6.  v0:= temp @kind object;
  #L46cdf8.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cdfe.  v2:= temp @kind object;
  #L46ce00.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatUntil`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ce14.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ce1a.  v0:= temp @kind object;
  #L46ce1c.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ce22.  v2:= temp @kind object;
  #L46ce24.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatWhen`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ce38.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ce3e.  v0:= temp @kind object;
  #L46ce40.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ce46.  v2:= temp @kind object;
  #L46ce48.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `retry`(`io.reactivex.rxjava3.core.Maybe` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46dd0c.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L46dd12.  v0:= temp @kind object;
  #L46dd14.  v1:= 9223372036854775807L;
  #L46dd1e.  call temp:= `retry`(v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dd24.  v0:= temp @kind object;
  #L46dd26.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `retry`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:(J)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dd88.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L46dd8e.  v0:= temp @kind object;
  #L46dd90.  call temp:= `retry`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dd96.  v2:= temp @kind object;
  #L46dd98.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `retry`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `long` v2 , `io.reactivex.rxjava3.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ddac.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ddb2.  v0:= temp @kind object;
  #L46ddb4.  call temp:= `retry`(v0, v2, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ddba.  v2:= temp @kind object;
  #L46ddbc.  call temp:= `singleElement`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46ddc2.  v2:= temp @kind object;
  #L46ddc4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `retry`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dd38.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46dd3e.  v0:= temp @kind object;
  #L46dd40.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46dd46.  v2:= temp @kind object;
  #L46dd48.  call temp:= `singleElement`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dd4e.  v2:= temp @kind object;
  #L46dd50.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `retry`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46dd64.  v0:= 9223372036854775807L;
  #L46dd6e.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46dd74.  v3:= temp @kind object;
  #L46dd76.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `retryUntil`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.retryUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46ddd8.  v0:= "stop is null" @kind object;
  #L46dddc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dde2.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L46dde8.  v3:= temp @kind object;
  #L46ddea.  v0:= 9223372036854775807L;
  #L46ddf4.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Maybe;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46ddfa.  v3:= temp @kind object;
  #L46ddfc.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `retryWhen`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46de10.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46de16.  v0:= temp @kind object;
  #L46de18.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46de1e.  v2:= temp @kind object;
  #L46de20.  call temp:= `singleElement`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46de26.  v2:= temp @kind object;
  #L46de28.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.safeSubscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ee00.  v0:= "observer is null" @kind object;
  #L46ee04.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ee0a.  v0:= new `io.reactivex.rxjava3.internal.observers.SafeMaybeObserver`;
  #L46ee0e.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L46ee14.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ee1a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.startWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ce5c.  v0:= "other is null" @kind object;
  #L46ce60.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ce66.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L46ce6c.  v2:= temp @kind object;
  #L46ce6e.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ce74.  v2:= temp @kind object;
  #L46ce76.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ce7c.  v0:= temp @kind object;
  #L46ce7e.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46ce84.  v2:= temp @kind object;
  #L46ce86.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.startWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ce98.  v0:= "other is null" @kind object;
  #L46ce9c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cea2.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46cea8.  v2:= temp @kind object;
  #L46ceaa.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ceb0.  v2:= temp @kind object;
  #L46ceb2.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ceb8.  v0:= temp @kind object;
  #L46ceba.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cec0.  v2:= temp @kind object;
  #L46cec2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.startWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ced4.  v0:= "other is null" @kind object;
  #L46ced8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cede.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46cee4.  v2:= temp @kind object;
  #L46cee6.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46ceec.  v2:= temp @kind object;
  #L46ceee.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cef4.  v0:= temp @kind object;
  #L46cef6.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cefc.  v2:= temp @kind object;
  #L46cefe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46cf10.  v0:= "other is null" @kind object;
  #L46cf14.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46cf1a.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cf20.  v0:= temp @kind object;
  #L46cf22.  call temp:= `startWith`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L46cf28.  v2:= temp @kind object;
  #L46cf2a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.startWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e8f8.  v0:= "other is null" @kind object;
  #L46e8fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e902.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46e908.  v2:= temp @kind object;
  #L46e90a.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46e910.  v0:= temp @kind object;
  #L46e912.  call temp:= `concatWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L46e918.  v2:= temp @kind object;
  #L46e91a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Maybe` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46eaf4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L46eafa.  v0:= temp @kind object;
  #L46eafc.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46eb00.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46eb04.  call temp:= `subscribe`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46eb0a.  v0:= temp @kind object;
  #L46eb0c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46eb20.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L46eb24.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46eb28.  call temp:= `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46eb2e.  v3:= temp @kind object;
  #L46eb30.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46eb44.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L46eb48.  call temp:= `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L46eb4e.  v2:= temp @kind object;
  #L46eb50.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46eb64.  v0:= "onSuccess is null" @kind object;
  #L46eb68.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46eb6e.  v0:= "onError is null" @kind object;
  #L46eb72.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46eb78.  v0:= "onComplete is null" @kind object;
  #L46eb7c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46eb82.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver`;
  #L46eb86.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L46eb8c.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribeWith:(Lio/reactivex/rxjava3/core/MaybeObserver;)Lio/reactivex/rxjava3/core/MaybeObserver;` @kind virtual;
  #L46eb92.  v2:= temp @kind object;
  #L46eb94.  v2:= (`io.reactivex.rxjava3.disposables.Disposable`) v2 @kind object;
  #L46eb98.  return v2 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46ee2c.  v0:= "observer is null" @kind object;
  #L46ee30.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ee36.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/rxjava3/core/Maybe;Lio/reactivex/rxjava3/core/MaybeObserver;)Lio/reactivex/rxjava3/core/MaybeObserver;` @kind static;
  #L46ee3c.  v3:= temp @kind object;
  #L46ee3e.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null MaybeObserver. Please check the handler provided to RxJavaPlugins.setOnMaybeSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L46ee42.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ee48.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ee4e.  return @kind void;
  #L46ee50.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46ee52.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L46ee58.  v0:= new `java.lang.NullPointerException`;
  #L46ee5c.  v1:= "subscribeActual failed" @kind object;
  #L46ee60.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46ee66.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L46ee6c.  throw v0;
  #L46ee6e.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L46ee70.  throw v3;
  catch `java.lang.NullPointerException` @[L46ee48..L46ee4e] goto L46ee6e;
  catch `java.lang.Throwable` @[L46ee48..L46ee4e] goto L46ee50;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.core.MaybeObserver` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Maybe` `subscribeOn`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46de3c.  v0:= "scheduler is null" @kind object;
  #L46de40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46de46.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn`;
  #L46de4a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L46de50.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46de56.  v2:= temp @kind object;
  #L46de58.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.MaybeObserver` `subscribeWith`(`io.reactivex.rxjava3.core.Maybe` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribeWith:(Lio/reactivex/rxjava3/core/MaybeObserver;)Lio/reactivex/rxjava3/core/MaybeObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46e850.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46e856.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `switchIfEmpty`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.switchIfEmpty:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46de6c.  v0:= "other is null" @kind object;
  #L46de70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46de76.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeSwitchIfEmpty`;
  #L46de7a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeSwitchIfEmpty;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46de80.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46de86.  v2:= temp @kind object;
  #L46de88.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `switchIfEmpty`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.switchIfEmpty:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ea9c.  v0:= "other is null" @kind object;
  #L46eaa0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46eaa6.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeSwitchIfEmptySingle`;
  #L46eaaa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeSwitchIfEmptySingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L46eab0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46eab6.  v2:= temp @kind object;
  #L46eab8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `takeUntil`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.takeUntil:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46de9c.  v0:= "other is null" @kind object;
  #L46dea0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dea6.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe`;
  #L46deaa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTakeUntilMaybe;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46deb0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46deb6.  v2:= temp @kind object;
  #L46deb8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `takeUntil`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46decc.  v0:= "other is null" @kind object;
  #L46ded0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ded6.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilPublisher`;
  #L46deda.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTakeUntilPublisher;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L46dee0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46dee6.  v2:= temp @kind object;
  #L46dee8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.test:()Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ebac.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L46ebb0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L46ebb6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ebbc.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/core/Maybe;.test:(Z)Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ebd0.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L46ebd4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L46ebda.  if v2 == 0 then goto L46ebe4;
  #L46ebde.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.dispose:()V` @kind virtual;
  #L46ebe4.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind virtual;
  #L46ebea.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeInterval`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeInterval:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46defc.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46df00.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46df06.  v1:= temp @kind object;
  #L46df08.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46df0e.  v0:= temp @kind object;
  #L46df10.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeInterval`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeInterval:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46df24.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46df28.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46df2e.  v2:= temp @kind object;
  #L46df30.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeInterval`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46df44.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46df4a.  v0:= temp @kind object;
  #L46df4c.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46df52.  v2:= temp @kind object;
  #L46df54.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeInterval`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46df68.  v0:= "unit is null" @kind object;
  #L46df6c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46df72.  v0:= "scheduler is null" @kind object;
  #L46df76.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46df7c.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval`;
  #L46df80.  v1:= 1I;
  #L46df82.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L46df88.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46df8e.  v3:= temp @kind object;
  #L46df90.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeout`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e00c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46e012.  v0:= temp @kind object;
  #L46e014.  call temp:= `timeout`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46e01a.  v2:= temp @kind object;
  #L46e01c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeout`(`io.reactivex.rxjava3.core.Maybe` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46e030.  v0:= "fallback is null" @kind object;
  #L46e034.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e03a.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46e040.  v5:= temp @kind object;
  #L46e042.  v1:= v7 @kind object;
  #L46e044.  v2:= v8 @kind wide;
  #L46e046.  v4:= v10 @kind object;
  #L46e048.  v6:= v11 @kind object;
  #L46e04a.  call temp:= `timeout`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46e050.  v8:= temp @kind object;
  #L46e052.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeout`(`io.reactivex.rxjava3.core.Maybe` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L46e064.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Maybe;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e06a.  v1:= temp @kind object;
  #L46e06c.  call temp:= `timeout`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46e072.  v1:= temp @kind object;
  #L46e074.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeout`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e088.  v0:= "fallback is null" @kind object;
  #L46e08c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e092.  call temp:= `timer`(v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Maybe;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e098.  v2:= temp @kind object;
  #L46e09a.  call temp:= `timeout`(v1, v2, v6) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46e0a0.  v2:= temp @kind object;
  #L46e0a2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeout`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46dfa4.  v0:= "timeoutIndicator is null" @kind object;
  #L46dfa8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dfae.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe`;
  #L46dfb2.  v1:= 0I;
  #L46dfb4.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46dfba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46dfc0.  v3:= temp @kind object;
  #L46dfc2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeout`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46dfd4.  v0:= "timeoutIndicator is null" @kind object;
  #L46dfd8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dfde.  v0:= "fallback is null" @kind object;
  #L46dfe2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46dfe8.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe`;
  #L46dfec.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46dff2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46dff8.  v2:= temp @kind object;
  #L46dffa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeout`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46e0b4.  v0:= "timeoutIndicator is null" @kind object;
  #L46e0b8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e0be.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher`;
  #L46e0c2.  v1:= 0I;
  #L46e0c4.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46e0ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e0d0.  v3:= temp @kind object;
  #L46e0d2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timeout`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timeout:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e0e4.  v0:= "timeoutIndicator is null" @kind object;
  #L46e0e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e0ee.  v0:= "fallback is null" @kind object;
  #L46e0f2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e0f8.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher`;
  #L46e0fc.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46e102.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e108.  v2:= temp @kind object;
  #L46e10a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timestamp`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.timestamp:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46e184.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46e188.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46e18e.  v1:= temp @kind object;
  #L46e190.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46e196.  v0:= temp @kind object;
  #L46e198.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timestamp`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timestamp:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e1ac.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46e1b0.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46e1b6.  v2:= temp @kind object;
  #L46e1b8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timestamp`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e1cc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L46e1d2.  v0:= temp @kind object;
  #L46e1d4.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L46e1da.  v2:= temp @kind object;
  #L46e1dc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `timestamp`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46e1f0.  v0:= "unit is null" @kind object;
  #L46e1f4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e1fa.  v0:= "scheduler is null" @kind object;
  #L46e1fe.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e204.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval`;
  #L46e208.  v1:= 0I;
  #L46e20a.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L46e210.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e216.  v3:= temp @kind object;
  #L46e218.  return v3 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.to:(Lio/reactivex/rxjava3/core/MaybeConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ec5c.  v0:= "converter is null" @kind object;
  #L46ec60.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46ec66.  v2:= (`io.reactivex.rxjava3.core.MaybeConverter`) v2 @kind object;
  #L46ec6a.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeConverter;.apply:(Lio/reactivex/rxjava3/core/Maybe;)Ljava/lang/Object;` @kind interface;
  #L46ec70.  v2:= temp @kind object;
  #L46ec72.  return v2 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `toCompletionStage`(`io.reactivex.rxjava3.core.Maybe` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.toCompletionStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46ec84.  v0:= new `io.reactivex.rxjava3.internal.jdk8.CompletionStageConsumer`;
  #L46ec88.  v1:= 0I;
  #L46ec8a.  v2:= 0I;
  #L46ec8c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/CompletionStageConsumer;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L46ec92.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribeWith:(Lio/reactivex/rxjava3/core/MaybeObserver;)Lio/reactivex/rxjava3/core/MaybeObserver;` @kind virtual;
  #L46ec98.  v0:= temp @kind object;
  #L46ec9a.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L46ec9e.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `toCompletionStage`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.toCompletionStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46ecb0.  v0:= new `io.reactivex.rxjava3.internal.jdk8.CompletionStageConsumer`;
  #L46ecb4.  v1:= 1I;
  #L46ecb6.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/CompletionStageConsumer;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L46ecbc.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribeWith:(Lio/reactivex/rxjava3/core/MaybeObserver;)Lio/reactivex/rxjava3/core/MaybeObserver;` @kind virtual;
  #L46ecc2.  v3:= temp @kind object;
  #L46ecc4.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L46ecc8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `toFlowable`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46cfac.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind boolean;
  #L46cfb0.  if v0 == 0 then goto L46cfc4;
  #L46cfb4.  v0:= v1 @kind object;
  #L46cfb6.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L46cfba.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind interface;
  #L46cfc0.  v0:= temp @kind object;
  #L46cfc2.  return v0 @kind object;
  #L46cfc4.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToFlowable`;
  #L46cfc8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToFlowable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46cfce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L46cfd4.  v0:= temp @kind object;
  #L46cfd6.  return v0 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46ecdc.  v0:= new `io.reactivex.rxjava3.internal.observers.FutureMultiObserver`;
  #L46ece0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/FutureMultiObserver;.<init>:()V` @kind direct;
  #L46ece6.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.subscribeWith:(Lio/reactivex/rxjava3/core/MaybeObserver;)Lio/reactivex/rxjava3/core/MaybeObserver;` @kind virtual;
  #L46ecec.  v0:= temp @kind object;
  #L46ecee.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L46ecf2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e92c.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToObservable` @kind boolean;
  #L46e930.  if v0 == 0 then goto L46e944;
  #L46e934.  v0:= v1 @kind object;
  #L46e936.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L46e93a.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind interface;
  #L46e940.  v0:= temp @kind object;
  #L46e942.  return v0 @kind object;
  #L46e944.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable`;
  #L46e948.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L46e94e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L46e954.  v0:= temp @kind object;
  #L46e956.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSingle`(`io.reactivex.rxjava3.core.Maybe` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Maybe;.toSingle:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46eacc.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToSingle`;
  #L46ead0.  v1:= 0I;
  #L46ead2.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToSingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)V` @kind direct;
  #L46ead8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L46eade.  v0:= temp @kind object;
  #L46eae0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `unsubscribeOn`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.unsubscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e274.  v0:= "scheduler is null" @kind object;
  #L46e278.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e27e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeUnsubscribeOn`;
  #L46e282.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeUnsubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L46e288.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e28e.  v2:= temp @kind object;
  #L46e290.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `zipWith`(`io.reactivex.rxjava3.core.Maybe` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Maybe;.zipWith:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46e82c.  v0:= "other is null" @kind object;
  #L46e830.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e836.  call temp:= `zip`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Maybe;.zip:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L46e83c.  v2:= temp @kind object;
  #L46e83e.  return v2 @kind object;
}
