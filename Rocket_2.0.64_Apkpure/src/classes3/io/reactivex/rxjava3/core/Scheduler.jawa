record `io.reactivex.rxjava3.core.Scheduler` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `long` `@@io.reactivex.rxjava3.core.Scheduler.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/core/Scheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L476740.  v0:= "rx3.scheduler.drift-tolerance" @kind object;
  #L476744.  v1:= 15L;
  #L476748.  call temp:= `getLong`(v0, v1) @signature `Ljava/lang/Long;.getLong:(Ljava/lang/String;J)Ljava/lang/Long;` @kind static;
  #L47674e.  v0:= temp @kind object;
  #L476750.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L476756.  v0:= temp @kind wide;
  #L476758.  v2:= "rx3.scheduler.drift-tolerance-unit" @kind object;
  #L47675c.  v3:= "minutes" @kind object;
  #L476760.  call temp:= `getProperty`(v2, v3) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L476766.  v2:= temp @kind object;
  #L476768.  call temp:= `a`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.a:(JLjava/lang/String;)J` @kind static;
  #L47676e.  v0:= temp @kind wide;
  #L476770.  `@@io.reactivex.rxjava3.core.Scheduler.a` @type ^`long` := v0 @kind wide;
  #L476774.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Scheduler` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L476788.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47678e.  return @kind void;
}
procedure `long` `a`(`long` v1 , `java.lang.String` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Scheduler;.a:(JLjava/lang/String;)J` @AccessFlag STATIC {
    temp;
    v0;

  #L4766bc.  v0:= "seconds" @kind object;
  #L4766c0.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4766c6.  v0:= temp;
  #L4766c8.  if v0 == 0 then goto L4766da;
  #L4766cc.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4766d0.  call temp:= `toNanos`(v3, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L4766d6.  v1:= temp @kind wide;
  #L4766d8.  return v1 @kind wide;
  #L4766da.  v0:= "milliseconds" @kind object;
  #L4766de.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4766e4.  v3:= temp;
  #L4766e6.  if v3 == 0 then goto L4766f8;
  #L4766ea.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4766ee.  call temp:= `toNanos`(v3, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L4766f4.  v1:= temp @kind wide;
  #L4766f6.  return v1 @kind wide;
  #L4766f8.  v3:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4766fc.  call temp:= `toNanos`(v3, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L476702.  v1:= temp @kind wide;
  #L476704.  return v1 @kind wide;
}
procedure `long` `clockDriftTolerance`() @signature `Lio/reactivex/rxjava3/core/Scheduler;.clockDriftTolerance:()J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4766a4.  v0:= `@@io.reactivex.rxjava3.core.Scheduler.a` @type ^`long` @kind wide;
  #L4766a8.  return v0 @kind wide;
}
procedure `io.reactivex.rxjava3.core.Scheduler$Worker` `createWorker`() @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `now`(`io.reactivex.rxjava3.core.Scheduler` v3 @kind this, `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L476718.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L47671e.  v0:= temp @kind wide;
  #L476720.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L476724.  call temp:= `convert`(v4, v0, v2) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L47672a.  v0:= temp @kind wide;
  #L47672c.  return v0 @kind wide;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `scheduleDirect`(`io.reactivex.rxjava3.core.Scheduler` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L476604.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L476608.  v1:= 0L;
  #L47660c.  call temp:= `scheduleDirect`(v3, v4, v1, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L476612.  v4:= temp @kind object;
  #L476614.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `scheduleDirect`(`io.reactivex.rxjava3.core.Scheduler` v2 @kind this, `java.lang.Runnable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476628.  call temp:= `createWorker`(v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L47662e.  v0:= temp @kind object;
  #L476630.  call temp:= `onSchedule`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L476636.  v3:= temp @kind object;
  #L476638.  v1:= new `io.reactivex.rxjava3.core.Scheduler$a`;
  #L47663c.  call `<init>`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.<init>:(Ljava/lang/Runnable;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L476642.  call temp:= `schedule`(v0, v1, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L476648.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `schedulePeriodicallyDirect`(`io.reactivex.rxjava3.core.Scheduler` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Scheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L47665c.  call temp:= `createWorker`(v8) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L476662.  v0:= temp @kind object;
  #L476664.  call temp:= `onSchedule`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L47666a.  v9:= temp @kind object;
  #L47666c.  v7:= new `io.reactivex.rxjava3.core.Scheduler$b`;
  #L476670.  call `<init>`(v7, v9, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler$b;.<init>:(Ljava/lang/Runnable;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L476676.  v1:= v7 @kind object;
  #L476678.  v2:= v10 @kind wide;
  #L47667a.  v4:= v12 @kind wide;
  #L47667c.  v6:= v14 @kind object;
  #L47667e.  call temp:= `schedulePeriodically`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L476684.  v9:= temp @kind object;
  #L476686.  v10:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L47668a.  if v9 != v10 then goto L476690;
  #L47668e.  return v9 @kind object;
  #L476690.  return v7 @kind object;
}
procedure `void` `shutdown`(`io.reactivex.rxjava3.core.Scheduler` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @AccessFlag PUBLIC {
    temp;

  #L4767a0.  return @kind void;
}
procedure `void` `start`(`io.reactivex.rxjava3.core.Scheduler` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @AccessFlag PUBLIC {
    temp;

  #L4767b4.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `when`(`io.reactivex.rxjava3.core.Scheduler` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Scheduler;.when:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4765dc.  v0:= "combine is null" @kind object;
  #L4765e0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4765e6.  v0:= new `io.reactivex.rxjava3.internal.schedulers.SchedulerWhen`;
  #L4765ea.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerWhen;.<init>:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4765f0.  return v0 @kind object;
}
