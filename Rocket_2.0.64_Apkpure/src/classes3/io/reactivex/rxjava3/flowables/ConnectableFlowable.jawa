record `io.reactivex.rxjava3.flowables.ConnectableFlowable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.Flowable` @kind class {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L479dd4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L479dda.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `autoConnect`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479c08.  v0:= 1I;
  #L479c0a.  call temp:= `autoConnect`(v1, v0) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:(I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L479c10.  v0:= temp @kind object;
  #L479c12.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `autoConnect`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479c24.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L479c2a.  v0:= temp @kind object;
  #L479c2c.  call temp:= `autoConnect`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:(ILio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L479c32.  v2:= temp @kind object;
  #L479c34.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `autoConnect`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this, `int` v2 , `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:(ILio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479c48.  v0:= "connection is null" @kind object;
  #L479c4c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L479c52.  if v2 > 0 then goto L479c66;
  #L479c56.  call `connect`(v1, v3) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L479c5c.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L479c62.  v2:= temp @kind object;
  #L479c64.  return v2 @kind object;
  #L479c66.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAutoConnect`;
  #L479c6a.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAutoConnect;.<init>:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;ILio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L479c70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L479c76.  v2:= temp @kind object;
  #L479c78.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `connect`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.connect:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L479dac.  v0:= new `io.reactivex.rxjava3.internal.util.ConnectConsumer`;
  #L479db0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ConnectConsumer;.<init>:()V` @kind direct;
  #L479db6.  call `connect`(v1, v0) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L479dbc.  v0:= v0.`io.reactivex.rxjava3.internal.util.ConnectConsumer.disposable` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L479dc0.  return v0 @kind object;
}
procedure `void` `connect`(`io.reactivex.rxjava3.functions.Consumer` v0 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479c8c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRefCount`;
  #L479c90.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount;.<init>:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;)V` @kind direct;
  #L479c96.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L479c9c.  v0:= temp @kind object;
  #L479c9e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v6 @kind this, `int` v7 ) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L479cb0.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L479cb4.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L479cba.  v5:= temp @kind object;
  #L479cbc.  v2:= 0L;
  #L479cc0.  v0:= v6 @kind object;
  #L479cc2.  v1:= v7;
  #L479cc4.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L479cca.  v7:= temp @kind object;
  #L479ccc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L479ce0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L479ce6.  v5:= temp @kind object;
  #L479ce8.  v0:= v6 @kind object;
  #L479cea.  v1:= v7;
  #L479cec.  v2:= v8 @kind wide;
  #L479cee.  v4:= v10 @kind object;
  #L479cf0.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L479cf6.  v7:= temp @kind object;
  #L479cf8.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L479d0c.  v0:= "subscriberCount" @kind object;
  #L479d10.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L479d16.  v0:= "unit is null" @kind object;
  #L479d1a.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L479d20.  v0:= "scheduler is null" @kind object;
  #L479d24.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L479d2a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRefCount`;
  #L479d2e.  v1:= v0 @kind object;
  #L479d30.  v2:= v8 @kind object;
  #L479d32.  v3:= v9;
  #L479d34.  v4:= v10 @kind wide;
  #L479d36.  v6:= v12 @kind object;
  #L479d38.  v7:= v13 @kind object;
  #L479d3a.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount;.<init>:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L479d40.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L479d46.  v9:= temp @kind object;
  #L479d48.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L479d5c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L479d62.  v5:= temp @kind object;
  #L479d64.  v1:= 1I;
  #L479d66.  v0:= v6 @kind object;
  #L479d68.  v2:= v7 @kind wide;
  #L479d6a.  v4:= v9 @kind object;
  #L479d6c.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L479d72.  v7:= temp @kind object;
  #L479d74.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L479d88.  v1:= 1I;
  #L479d8a.  v0:= v6 @kind object;
  #L479d8c.  v2:= v7 @kind wide;
  #L479d8e.  v4:= v9 @kind object;
  #L479d90.  v5:= v10 @kind object;
  #L479d92.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L479d98.  v7:= temp @kind object;
  #L479d9a.  return v7 @kind object;
}
procedure `void` `reset`() @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.reset:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
