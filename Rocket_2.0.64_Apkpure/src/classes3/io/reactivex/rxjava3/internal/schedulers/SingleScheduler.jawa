record `io.reactivex.rxjava3.internal.schedulers.SingleScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Scheduler` @kind class {
  `java.util.concurrent.ThreadFactory` `io.reactivex.rxjava3.internal.schedulers.SingleScheduler.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @AccessFlag FINAL;
}
global `io.reactivex.rxjava3.internal.schedulers.RxThreadFactory` `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.d` @AccessFlag STATIC_FINAL;
global `java.util.concurrent.ScheduledExecutorService` `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dc30c.  v0:= 0I;
  #L4dc30e.  call temp:= `newScheduledThreadPool`(v0) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L4dc314.  v0:= temp @kind object;
  #L4dc316.  `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @type ^`java.util.concurrent.ScheduledExecutorService` := v0 @kind object;
  #L4dc31a.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L4dc320.  v0:= "rx3.single-priority" @kind object;
  #L4dc324.  v1:= 5I;
  #L4dc326.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L4dc32c.  v0:= temp @kind object;
  #L4dc32e.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4dc334.  v0:= temp;
  #L4dc336.  v1:= 10I;
  #L4dc33a.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4dc340.  v0:= temp;
  #L4dc342.  v1:= 1I;
  #L4dc344.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4dc34a.  v0:= temp;
  #L4dc34c.  v2:= new `io.reactivex.rxjava3.internal.schedulers.RxThreadFactory`;
  #L4dc350.  v3:= "RxSingleScheduler" @kind object;
  #L4dc354.  call `<init>`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/RxThreadFactory;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L4dc35a.  `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.d` @type ^`io.reactivex.rxjava3.internal.schedulers.RxThreadFactory` := v2 @kind object;
  #L4dc35e.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4dc370.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.d` @type ^`io.reactivex.rxjava3.internal.schedulers.RxThreadFactory` @kind object;
  #L4dc374.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L4dc37a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v1 @kind this, `java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4dc38c.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.<init>:()V` @kind direct;
  #L4dc392.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4dc396.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4dc39c.  v1.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4dc3a0.  v1.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.b` @type ^`java.util.concurrent.ThreadFactory` := v2 @kind object;
  #L4dc3a4.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.b:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L4dc3aa.  v2:= temp @kind object;
  #L4dc3ac.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4dc3b2.  return @kind void;
}
procedure `java.util.concurrent.ScheduledExecutorService` `b`(`java.util.concurrent.ThreadFactory` v0 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.b:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC {
    temp;

  #L4dc2f0.  call temp:= `create`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory;.create:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L4dc2f6.  v0:= temp @kind object;
  #L4dc2f8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler$Worker` `createWorker`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dc170.  v0:= new `io.reactivex.rxjava3.internal.schedulers.SingleScheduler$a`;
  #L4dc174.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4dc178.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4dc17e.  v1:= temp @kind object;
  #L4dc180.  v1:= (`java.util.concurrent.ScheduledExecutorService`) v1 @kind object;
  #L4dc184.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler$a;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V` @kind direct;
  #L4dc18a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `scheduleDirect`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4dc19c.  v0:= new `io.reactivex.rxjava3.internal.schedulers.ScheduledDirectTask`;
  #L4dc1a0.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L4dc1a6.  v4:= temp @kind object;
  #L4dc1a8.  call `<init>`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L4dc1ae.  v1:= 0L;
  #L4dc1b2.  v4:= lcmp(v5, v1);
  #L4dc1b6.  if v4 > 0 then goto L4dc1d4;
  #L4dc1ba.  v4:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4dc1be.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4dc1c4.  v4:= temp @kind object;
  #L4dc1c6.  v4:= (`java.util.concurrent.ScheduledExecutorService`) v4 @kind object;
  #L4dc1ca.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L4dc1d0.  v4:= temp @kind object;
  #L4dc1d2.  goto L4dc1ec;
  #L4dc1d4.  v4:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4dc1d8.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4dc1de.  v4:= temp @kind object;
  #L4dc1e0.  v4:= (`java.util.concurrent.ScheduledExecutorService`) v4 @kind object;
  #L4dc1e4.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L4dc1ea.  v4:= temp @kind object;
  #L4dc1ec.  call `setFuture`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L4dc1f2.  return v0 @kind object;
  #L4dc1f4.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L4dc1f6.  call `onError`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4dc1fc.  v4:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4dc200.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L4dc1ba..L4dc1f2] goto L4dc1f4;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `schedulePeriodicallyDirect`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4dc224.  call temp:= `onSchedule`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L4dc22a.  v9:= temp @kind object;
  #L4dc22c.  v0:= 0L;
  #L4dc230.  v2:= lcmp(v12, v0);
  #L4dc234.  if v2 > 0 then goto L4dc282;
  #L4dc238.  v12:= v8.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4dc23c.  call temp:= `get`(v12) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4dc242.  v12:= temp @kind object;
  #L4dc244.  v12:= (`java.util.concurrent.ScheduledExecutorService`) v12 @kind object;
  #L4dc248.  v13:= new `io.reactivex.rxjava3.internal.schedulers.c`;
  #L4dc24c.  call `<init>`(v13, v9, v12) @signature `Lio/reactivex/rxjava3/internal/schedulers/c;.<init>:(Ljava/lang/Runnable;Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L4dc252.  v9:= lcmp(v10, v0);
  #L4dc256.  if v9 > 0 then goto L4dc264;
  #L4dc25a.  call temp:= `submit`(v12, v13) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L4dc260.  v9:= temp @kind object;
  #L4dc262.  goto L4dc26c;
  #L4dc264.  call temp:= `schedule`(v12, v13, v10, v14) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L4dc26a.  v9:= temp @kind object;
  #L4dc26c.  call `b`(v13, v9) @signature `Lio/reactivex/rxjava3/internal/schedulers/c;.b:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L4dc272.  return v13 @kind object;
  #L4dc274.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L4dc276.  call `onError`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4dc27c.  v9:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4dc280.  return v9 @kind object;
  #L4dc282.  v7:= new `io.reactivex.rxjava3.internal.schedulers.ScheduledDirectPeriodicTask`;
  #L4dc286.  call `<init>`(v7, v9) @signature `Lio/reactivex/rxjava3/internal/schedulers/ScheduledDirectPeriodicTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L4dc28c.  v9:= v8.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4dc290.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4dc296.  v9:= temp @kind object;
  #L4dc298.  v0:= v9 @kind object;
  #L4dc29a.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L4dc29e.  v1:= v7 @kind object;
  #L4dc2a0.  v2:= v10 @kind wide;
  #L4dc2a2.  v4:= v12 @kind wide;
  #L4dc2a4.  v6:= v14 @kind object;
  #L4dc2a6.  call temp:= `scheduleAtFixedRate`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L4dc2ac.  v9:= temp @kind object;
  #L4dc2ae.  call `setFuture`(v7, v9) @signature `Lio/reactivex/rxjava3/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L4dc2b4.  return v7 @kind object;
  #L4dc2b6.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L4dc2b8.  call `onError`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4dc2be.  v9:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4dc2c2.  return v9 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L4dc25a..L4dc272] goto L4dc274;
  catch `java.util.concurrent.RejectedExecutionException` @[L4dc28c..L4dc2b4] goto L4dc2b6;
}
procedure `void` `shutdown`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dc3c4.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4dc3c8.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L4dc3cc.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4dc3d2.  v0:= temp @kind object;
  #L4dc3d4.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L4dc3d8.  if v0 == v1 then goto L4dc3e2;
  #L4dc3dc.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L4dc3e2.  return @kind void;
}
procedure `void` `start`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.start:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4dc3f4.  v0:= 0I;
  #L4dc3f6.  v1:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4dc3fa.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4dc400.  v1:= temp @kind object;
  #L4dc402.  v1:= (`java.util.concurrent.ScheduledExecutorService`) v1 @kind object;
  #L4dc406.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L4dc40a.  if v1 == v2 then goto L4dc41a;
  #L4dc40e.  if v0 == 0 then goto L4dc418;
  #L4dc412.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L4dc418.  return @kind void;
  #L4dc41a.  if v0 != 0 then goto L4dc42a;
  #L4dc41e.  v0:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.b` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L4dc422.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.b:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L4dc428.  v0:= temp @kind object;
  #L4dc42a.  v2:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4dc42e.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4dc434.  v1:= temp;
  #L4dc436.  if v1 == 0 then goto L4dc3f6;
  #L4dc43a.  return @kind void;
}
