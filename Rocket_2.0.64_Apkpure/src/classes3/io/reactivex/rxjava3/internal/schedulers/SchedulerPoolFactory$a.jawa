record `io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4db8cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4db8d2.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4db8e4.  v0:= new `java.util.ArrayList`;
  #L4db8e8.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory.b` @type ^`java.util.Map` @kind object;
  #L4db8ec.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L4db8f2.  v1:= temp @kind object;
  #L4db8f4.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4db8fa.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4db900.  v0:= temp @kind object;
  #L4db902.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4db908.  v1:= temp;
  #L4db90a.  if v1 == 0 then goto L4db93a;
  #L4db90e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4db914.  v1:= temp @kind object;
  #L4db916.  v1:= (`java.util.concurrent.ScheduledThreadPoolExecutor`) v1 @kind object;
  #L4db91a.  call temp:= `isShutdown`(v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isShutdown:()Z` @kind virtual;
  #L4db920.  v2:= temp;
  #L4db922.  if v2 == 0 then goto L4db932;
  #L4db926.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory.b` @type ^`java.util.Map` @kind object;
  #L4db92a.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4db930.  goto L4db902;
  #L4db932.  call `purge`(v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.purge:()V` @kind virtual;
  #L4db938.  goto L4db902;
  #L4db93a.  return @kind void;
}
