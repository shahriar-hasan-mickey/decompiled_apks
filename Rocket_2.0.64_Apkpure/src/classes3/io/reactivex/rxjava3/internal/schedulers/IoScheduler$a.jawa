record `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentLinkedQueue` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @AccessFlag FINAL;
  `java.util.concurrent.ScheduledExecutorService` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Future` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.e` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ThreadFactory` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `java.util.concurrent.ThreadFactory` v11 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.<init>:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4dabbc.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dabc2.  if v10 == 0 then goto L4dabd0;
  #L4dabc6.  call temp:= `toNanos`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L4dabcc.  v8:= temp @kind wide;
  #L4dabce.  goto L4dabd4;
  #L4dabd0.  v8:= 0L;
  #L4dabd4.  v4:= v8 @kind wide;
  #L4dabd6.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.a` @type ^`long` := v4 @kind wide;
  #L4dabda.  v8:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L4dabde.  call `<init>`(v8) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L4dabe4.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` := v8 @kind object;
  #L4dabe8.  v8:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4dabec.  call `<init>`(v8) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4dabf2.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v8 @kind object;
  #L4dabf6.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.f` @type ^`java.util.concurrent.ThreadFactory` := v11 @kind object;
  #L4dabfa.  v8:= 0I;
  #L4dabfc.  if v10 == 0 then goto L4dac22;
  #L4dac00.  v8:= 1I;
  #L4dac02.  v9:= `@@io.reactivex.rxjava3.internal.schedulers.IoScheduler.e` @type ^`io.reactivex.rxjava3.internal.schedulers.RxThreadFactory` @kind object;
  #L4dac06.  call temp:= `newScheduledThreadPool`(v8, v9) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L4dac0c.  v8:= temp @kind object;
  #L4dac0e.  v6:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4dac12.  v0:= v8 @kind object;
  #L4dac14.  v1:= v7 @kind object;
  #L4dac16.  v2:= v4 @kind wide;
  #L4dac18.  call temp:= `scheduleWithFixedDelay`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L4dac1e.  v9:= temp @kind object;
  #L4dac20.  goto L4dac24;
  #L4dac22.  v9:= v8 @kind object;
  #L4dac24.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.d` @type ^`java.util.concurrent.ScheduledExecutorService` := v8 @kind object;
  #L4dac28.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.e` @type ^`java.util.concurrent.Future` := v9 @kind object;
  #L4dac2c.  return @kind void;
}
procedure `void` `a`(`java.util.concurrent.ConcurrentLinkedQueue` v7 @kind object, `io.reactivex.rxjava3.disposables.CompositeDisposable` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.a:(Ljava/util/concurrent/ConcurrentLinkedQueue;Lio/reactivex/rxjava3/disposables/CompositeDisposable;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4dac40.  call temp:= `isEmpty`(v7) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L4dac46.  v0:= temp;
  #L4dac48.  if v0 != 0 then goto L4dac98;
  #L4dac4c.  call temp:= `c`() @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.c:()J` @kind static;
  #L4dac52.  v0:= temp @kind wide;
  #L4dac54.  call temp:= `iterator`(v7) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4dac5a.  v2:= temp @kind object;
  #L4dac5c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4dac62.  v3:= temp;
  #L4dac64.  if v3 == 0 then goto L4dac98;
  #L4dac68.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4dac6e.  v3:= temp @kind object;
  #L4dac70.  v3:= (`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c`) v3 @kind object;
  #L4dac74.  call temp:= `a`(v3) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;.a:()J` @kind virtual;
  #L4dac7a.  v4:= temp @kind wide;
  #L4dac7c.  v6:= lcmp(v4, v0);
  #L4dac80.  if v6 > 0 then goto L4dac98;
  #L4dac84.  call temp:= `remove`(v7, v3) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L4dac8a.  v4:= temp;
  #L4dac8c.  if v4 == 0 then goto L4dac5c;
  #L4dac90.  call temp:= `remove`(v8, v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.remove:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4dac96.  goto L4dac5c;
  #L4dac98.  return @kind void;
}
procedure `long` `c`() @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.c:()J` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4daba0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L4daba6.  v0:= temp @kind wide;
  #L4daba8.  return v0 @kind wide;
}
procedure `io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` `b`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.b:()Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4dab38.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4dab3c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4dab42.  v0:= temp;
  #L4dab44.  if v0 == 0 then goto L4dab4e;
  #L4dab48.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.IoScheduler.h` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` @kind object;
  #L4dab4c.  return v0 @kind object;
  #L4dab4e.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L4dab52.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L4dab58.  v0:= temp;
  #L4dab5a.  if v0 != 0 then goto L4dab74;
  #L4dab5e.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L4dab62.  call temp:= `poll`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4dab68.  v0:= temp @kind object;
  #L4dab6a.  v0:= (`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c`) v0 @kind object;
  #L4dab6e.  if v0 == 0 then goto L4dab4e;
  #L4dab72.  return v0 @kind object;
  #L4dab74.  v0:= new `io.reactivex.rxjava3.internal.schedulers.IoScheduler$c`;
  #L4dab78.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.f` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L4dab7c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L4dab82.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4dab86.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4dab8c.  return v0 @kind object;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v4 @kind this, `io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.d:(Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dacac.  call temp:= `c`() @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.c:()J` @kind static;
  #L4dacb2.  v0:= temp @kind wide;
  #L4dacb4.  v2:= v4.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.a` @type ^`long` @kind wide;
  #L4dacb8.  v0:= v0 + v2 @kind long;
  #L4dacba.  call `b`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;.b:(J)V` @kind virtual;
  #L4dacc0.  v0:= v4.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L4dacc4.  call temp:= `offer`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4dacca.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4dacfc.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4dad00.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4dad06.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.e` @type ^`java.util.concurrent.Future` @kind object;
  #L4dad0a.  if v0 == 0 then goto L4dad16;
  #L4dad0e.  v1:= 1I;
  #L4dad10.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L4dad16.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.d` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L4dad1a.  if v0 == 0 then goto L4dad24;
  #L4dad1e.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L4dad24.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dacdc.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L4dace0.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4dace4.  call `a`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.a:(Ljava/util/concurrent/ConcurrentLinkedQueue;Lio/reactivex/rxjava3/disposables/CompositeDisposable;)V` @kind static;
  #L4dacea.  return @kind void;
}
