record `io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Scheduler` @kind class {
}
global `io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` `@@io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4dc810.  v0:= new `io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler`;
  #L4dc814.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.<init>:()V` @kind direct;
  #L4dc81a.  `@@io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler.b` @type ^`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` := v0 @kind object;
  #L4dc81e.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4dc830.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.<init>:()V` @kind direct;
  #L4dc836.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` `instance`() @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.instance:()Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4dc7f8.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler.b` @type ^`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` @kind object;
  #L4dc7fc.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler$Worker` `createWorker`(`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc764.  v0:= new `io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler$c`;
  #L4dc768.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$c;.<init>:()V` @kind direct;
  #L4dc76e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `scheduleDirect`(`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;

  #L4dc780.  call temp:= `onSchedule`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L4dc786.  v1:= temp @kind object;
  #L4dc788.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L4dc78e.  v1:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4dc792.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `scheduleDirect`(`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` v0 @kind this, `java.lang.Runnable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;

  #L4dc7a4.  call `sleep`(v4, v2) @signature `Ljava/util/concurrent/TimeUnit;.sleep:(J)V` @kind virtual;
  #L4dc7aa.  call temp:= `onSchedule`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L4dc7b0.  v1:= temp @kind object;
  #L4dc7b2.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L4dc7b8.  goto L4dc7d0;
  #L4dc7ba.  v1:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4dc7bc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4dc7c2.  v2:= temp @kind object;
  #L4dc7c4.  call `interrupt`(v2) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L4dc7ca.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4dc7d0.  v1:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4dc7d4.  return v1 @kind object;
  catch `java.lang.InterruptedException` @[L4dc7a4..L4dc7b8] goto L4dc7ba;
}
