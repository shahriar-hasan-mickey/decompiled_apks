record `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Scheduler$Worker` @kind class {
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` v1 @kind this, `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$b;.<init>:(Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4dad98.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.<init>:()V` @kind direct;
  #L4dad9e.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4dada2.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4dada8.  v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L4dadac.  v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.b` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` := v2 @kind object;
  #L4dadb0.  v0:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4dadb4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4dadba.  v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v0 @kind object;
  #L4dadbe.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.b:()Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;` @kind virtual;
  #L4dadc4.  v2:= temp @kind object;
  #L4dadc6.  v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.c` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` := v2 @kind object;
  #L4dadca.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4daddc.  v0:= v3.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4dade0.  v1:= 0I;
  #L4dade2.  v2:= 1I;
  #L4dade4.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4dadea.  v0:= temp;
  #L4dadec.  if v0 == 0 then goto L4dae08;
  #L4dadf0.  v0:= v3.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4dadf4.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4dadfa.  v0:= v3.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.b` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` @kind object;
  #L4dadfe.  v1:= v3.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.c` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` @kind object;
  #L4dae02.  call `d`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.d:(Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;)V` @kind virtual;
  #L4dae08.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dad38.  v0:= v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4dad3c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4dad42.  v0:= temp;
  #L4dad44.  return v0;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `schedule`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$b;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4dad58.  v0:= v6.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4dad5c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4dad62.  v0:= temp;
  #L4dad64.  if v0 == 0 then goto L4dad6e;
  #L4dad68.  v7:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4dad6c.  return v7 @kind object;
  #L4dad6e.  v0:= v6.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.c` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` @kind object;
  #L4dad72.  v5:= v6.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4dad76.  v1:= v7 @kind object;
  #L4dad78.  v2:= v8 @kind wide;
  #L4dad7a.  v4:= v10 @kind object;
  #L4dad7c.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/disposables/DisposableContainer;)Lio/reactivex/rxjava3/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L4dad82.  v7:= temp @kind object;
  #L4dad84.  return v7 @kind object;
}
