record `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind class @AccessFlag PUBLIC {
  `int` `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4df558.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4df55e.  v0.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int` := v1;
  #L4df562.  v1:= v1 + 1;
  #L4df566.  v1:= new `java.lang.Object`[v1];
  #L4df56a.  v0.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] := v1 @kind object;
  #L4df56e.  v0.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @type ^`java.lang.Object`[] := v1 @kind object;
  #L4df572.  return @kind void;
}
procedure `boolean` `accept`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v4 @kind this, `io.reactivex.rxjava3.core.Observer` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.accept:(Lio/reactivex/rxjava3/core/Observer;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4df4b8.  v0:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L4df4bc.  v1:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L4df4c0.  v2:= 0I;
  #L4df4c2.  if v0 == 0 then goto L4df4f4;
  #L4df4c6.  if v2 >= v1 then goto L4df4ea;
  #L4df4ca.  v3:= v0[v2] @kind object;
  #L4df4ce.  if v3 != 0 then goto L4df4d4;
  #L4df4d2.  goto L4df4ea;
  #L4df4d4.  call temp:= `acceptFull`(v3, v5) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lio/reactivex/rxjava3/core/Observer;)Z` @kind static;
  #L4df4da.  v3:= temp;
  #L4df4dc.  if v3 == 0 then goto L4df4e4;
  #L4df4e0.  v5:= 1I;
  #L4df4e2.  return v5;
  #L4df4e4.  v2:= v2 + 1;
  #L4df4e8.  goto L4df4c6;
  #L4df4ea.  v0:= v0[v1] @kind object;
  #L4df4ee.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L4df4f2.  goto L4df4c0;
  #L4df4f4.  return v2;
}
procedure `boolean` `accept`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.accept:(Lorg/reactivestreams/Subscriber;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4df508.  v0:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L4df50c.  v1:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L4df510.  v2:= 0I;
  #L4df512.  if v0 == 0 then goto L4df544;
  #L4df516.  if v2 >= v1 then goto L4df53a;
  #L4df51a.  v3:= v0[v2] @kind object;
  #L4df51e.  if v3 != 0 then goto L4df524;
  #L4df522.  goto L4df53a;
  #L4df524.  call temp:= `acceptFull`(v3, v5) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z` @kind static;
  #L4df52a.  v3:= temp;
  #L4df52c.  if v3 == 0 then goto L4df534;
  #L4df530.  v5:= 1I;
  #L4df532.  return v5;
  #L4df534.  v2:= v2 + 1;
  #L4df538.  goto L4df516;
  #L4df53a.  v0:= v0[v1] @kind object;
  #L4df53e.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L4df542.  goto L4df510;
  #L4df544.  return v2;
}
procedure `void` `add`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4df584.  v0:= v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L4df588.  v1:= v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.d` @type ^`int`;
  #L4df58c.  if v1 != v0 then goto L4df5a6;
  #L4df590.  v1:= v0 + 1;
  #L4df594.  v1:= new `java.lang.Object`[v1];
  #L4df598.  v2:= v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L4df59c.  v2[v0]:= v1 @kind object;
  #L4df5a0.  v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @type ^`java.lang.Object`[] := v1 @kind object;
  #L4df5a4.  v1:= 0I;
  #L4df5a6.  v0:= v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L4df5aa.  v0[v1]:= v4 @kind object;
  #L4df5ae.  v1:= v1 + 1;
  #L4df5b2.  v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.d` @type ^`int` := v1;
  #L4df5b6.  return @kind void;
}
procedure `void` `forEachWhile`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v4 @kind this, `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.forEachWhile:(Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4df5c8.  v0:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L4df5cc.  v1:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L4df5d0.  if v0 == 0 then goto L4df602;
  #L4df5d4.  v2:= 0I;
  #L4df5d6.  if v2 >= v1 then goto L4df5f8;
  #L4df5da.  v3:= v0[v2] @kind object;
  #L4df5de.  if v3 != 0 then goto L4df5e4;
  #L4df5e2.  goto L4df5f8;
  #L4df5e4.  call temp:= `test`(v5, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4df5ea.  v3:= temp;
  #L4df5ec.  if v3 == 0 then goto L4df5f2;
  #L4df5f0.  return @kind void;
  #L4df5f2.  v2:= v2 + 1;
  #L4df5f6.  goto L4df5d6;
  #L4df5f8.  v0:= v0[v1] @kind object;
  #L4df5fc.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L4df600.  goto L4df5d0;
  #L4df602.  return @kind void;
}
procedure `void` `forEachWhile`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v4 @kind this, `java.lang.Object` v5 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.forEachWhile:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4df614.  v0:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L4df618.  v1:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L4df61c.  v2:= 0I;
  #L4df61e.  if v2 >= v1 then goto L4df640;
  #L4df622.  v3:= v0[v2] @kind object;
  #L4df626.  if v3 != 0 then goto L4df62c;
  #L4df62a.  return @kind void;
  #L4df62c.  call temp:= `test`(v6, v5, v3) @signature `Lio/reactivex/rxjava3/functions/BiPredicate;.test:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #L4df632.  v3:= temp;
  #L4df634.  if v3 == 0 then goto L4df63a;
  #L4df638.  return @kind void;
  #L4df63a.  v2:= v2 + 1;
  #L4df63e.  goto L4df61e;
  #L4df640.  v0:= v0[v1] @kind object;
  #L4df644.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L4df648.  goto L4df61c;
}
procedure `void` `setFirst`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.setFirst:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df65c.  v0:= v2.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L4df660.  v1:= 0I;
  #L4df662.  v0[v1]:= v3 @kind object;
  #L4df666.  return @kind void;
}
