record `io.reactivex.rxjava3.internal.util.ExceptionHelper` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Throwable` `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e043c.  v0:= new `io.reactivex.rxjava3.internal.util.ExceptionHelper$a`;
  #L4e0440.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper$a;.<init>:()V` @kind direct;
  #L4e0446.  `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` := v0 @kind object;
  #L4e044a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.ExceptionHelper` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4e045c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e0462.  v0:= new `java.lang.IllegalStateException`;
  #L4e0466.  v1:= "No instances!" @kind object;
  #L4e046a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e0470.  throw v0;
}
procedure `boolean` `addThrowable`(`java.util.concurrent.atomic.AtomicReference` v5 @kind object, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.addThrowable:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e01fc.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e0202.  v0:= temp @kind object;
  #L4e0204.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L4e0208.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4e020c.  v2:= 0I;
  #L4e020e.  if v0 != v1 then goto L4e0214;
  #L4e0212.  return v2;
  #L4e0214.  v1:= 1I;
  #L4e0216.  if v0 != 0 then goto L4e021e;
  #L4e021a.  v3:= v6 @kind object;
  #L4e021c.  goto L4e0236;
  #L4e021e.  v3:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4e0222.  v4:= 2I;
  #L4e0224.  v4:= new `java.lang.Throwable`[v4];
  #L4e0228.  v4[v2]:= v0 @kind object;
  #L4e022c.  v4[v1]:= v6 @kind object;
  #L4e0230.  call `<init>`(v3, v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4e0236.  call temp:= `compareAndSet`(v5, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4e023c.  v0:= temp;
  #L4e023e.  if v0 == 0 then goto L4e01fc;
  #L4e0242.  return v1;
}
procedure `java.lang.NullPointerException` `createNullPointerException`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4e0274.  v0:= new `java.lang.NullPointerException`;
  #L4e0278.  call temp:= `nullWarning`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullWarning:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4e027e.  v1:= temp @kind object;
  #L4e0280.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e0286.  return v0 @kind object;
}
procedure `java.util.List` `flatten`(`java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.flatten:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e03b8.  v0:= new `java.util.ArrayList`;
  #L4e03bc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4e03c2.  v1:= new `java.util.ArrayDeque`;
  #L4e03c6.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L4e03cc.  call temp:= `offer`(v1, v4) @signature `Ljava/util/ArrayDeque;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4e03d2.  call temp:= `isEmpty`(v1) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L4e03d8.  v4:= temp;
  #L4e03da.  if v4 != 0 then goto L4e042a;
  #L4e03de.  call temp:= `removeFirst`(v1) @signature `Ljava/util/ArrayDeque;.removeFirst:()Ljava/lang/Object;` @kind virtual;
  #L4e03e4.  v4:= temp @kind object;
  #L4e03e6.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L4e03ea.  v2:= instanceof @variable v4 @type ^`io.reactivex.rxjava3.exceptions.CompositeException` @kind boolean;
  #L4e03ee.  if v2 == 0 then goto L4e0422;
  #L4e03f2.  v4:= (`io.reactivex.rxjava3.exceptions.CompositeException`) v4 @kind object;
  #L4e03f6.  call temp:= `getExceptions`(v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.getExceptions:()Ljava/util/List;` @kind virtual;
  #L4e03fc.  v4:= temp @kind object;
  #L4e03fe.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4e0404.  v2:= temp;
  #L4e0406.  v2:= v2 + -1;
  #L4e040a.  if v2 < 0 then goto L4e03d2;
  #L4e040e.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4e0414.  v3:= temp @kind object;
  #L4e0416.  call temp:= `offerFirst`(v1, v3) @signature `Ljava/util/ArrayDeque;.offerFirst:(Ljava/lang/Object;)Z` @kind virtual;
  #L4e041c.  v2:= v2 + -1;
  #L4e0420.  goto L4e040a;
  #L4e0422.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e0428.  goto L4e03d2;
  #L4e042a.  return v0 @kind object;
}
procedure `java.lang.Object` `nullCheck`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4e0298.  if v0 == 0 then goto L4e029e;
  #L4e029c.  return v0 @kind object;
  #L4e029e.  call temp:= `createNullPointerException`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4e02a4.  v0:= temp @kind object;
  #L4e02a6.  throw v0;
}
procedure `java.lang.String` `nullWarning`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullWarning:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4e02f0.  v0:= new `java.lang.StringBuilder`;
  #L4e02f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4e02fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e0300.  v1:= " Null values are generally not allowed in 3.x operators and sources." @kind object;
  #L4e0304.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e030a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e0310.  v1:= temp @kind object;
  #L4e0312.  return v1 @kind object;
}
procedure `java.lang.Throwable` `terminate`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.terminate:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4e0384.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e038a.  v0:= temp @kind object;
  #L4e038c.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L4e0390.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4e0394.  if v0 == v1 then goto L4e03a6;
  #L4e0398.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4e039e.  v2:= temp @kind object;
  #L4e03a0.  v0:= v2 @kind object;
  #L4e03a2.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L4e03a6.  return v0 @kind object;
}
procedure `java.lang.Exception` `throwIfThrowable`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.throwIfThrowable:(Ljava/lang/Throwable;)Ljava/lang/Exception;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4e0254.  v0:= instanceof @variable v1 @type ^`java.lang.Exception` @kind boolean;
  #L4e0258.  if v0 == 0 then goto L4e0262;
  #L4e025c.  v1:= (`java.lang.Exception`) v1 @kind object;
  #L4e0260.  return v1 @kind object;
  #L4e0262.  throw v1;
}
procedure `java.lang.String` `timeoutMessage`(`long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.timeoutMessage:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4e0324.  v0:= new `java.lang.StringBuilder`;
  #L4e0328.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4e032e.  v1:= "The source did not signal an event for " @kind object;
  #L4e0332.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e0338.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e033e.  v2:= " " @kind object;
  #L4e0342.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e0348.  call temp:= `toString`(v4) @signature `Ljava/util/concurrent/TimeUnit;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e034e.  v2:= temp @kind object;
  #L4e0350.  call temp:= `toLowerCase`(v2) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L4e0356.  v2:= temp @kind object;
  #L4e0358.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e035e.  v2:= " and has been terminated." @kind object;
  #L4e0362.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e0368.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e036e.  v2:= temp @kind object;
  #L4e0370.  return v2 @kind object;
}
procedure `java.lang.RuntimeException` `wrapOrThrow`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4e02b8.  v0:= instanceof @variable v1 @type ^`java.lang.Error` @kind boolean;
  #L4e02bc.  if v0 != 0 then goto L4e02da;
  #L4e02c0.  v0:= instanceof @variable v1 @type ^`java.lang.RuntimeException` @kind boolean;
  #L4e02c4.  if v0 == 0 then goto L4e02ce;
  #L4e02c8.  v1:= (`java.lang.RuntimeException`) v1 @kind object;
  #L4e02cc.  return v1 @kind object;
  #L4e02ce.  v0:= new `java.lang.RuntimeException`;
  #L4e02d2.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4e02d8.  return v0 @kind object;
  #L4e02da.  v1:= (`java.lang.Error`) v1 @kind object;
  #L4e02de.  throw v1;
}
