record `io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class {
}
global `long` `@@io.reactivex.rxjava3.internal.util.AtomicThrowable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4df838.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4df83e.  return @kind void;
}
procedure `boolean` `isTerminated`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.isTerminated:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df7ac.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4df7b2.  v0:= temp @kind object;
  #L4df7b4.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4df7b8.  if v0 != v1 then goto L4df7c0;
  #L4df7bc.  v0:= 1I;
  #L4df7be.  goto L4df7c2;
  #L4df7c0.  v0:= 0I;
  #L4df7c2.  return v0;
}
procedure `java.lang.Throwable` `terminate`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4df81c.  call temp:= `terminate`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.terminate:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Throwable;` @kind static;
  #L4df822.  v0:= temp @kind object;
  #L4df824.  return v0 @kind object;
}
procedure `boolean` `tryAddThrowable`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowable:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;

  #L4df7d4.  call temp:= `addThrowable`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.addThrowable:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z` @kind static;
  #L4df7da.  v1:= temp;
  #L4df7dc.  return v1;
}
procedure `boolean` `tryAddThrowableOrReport`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4df7f0.  call temp:= `tryAddThrowable`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowable:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4df7f6.  v0:= temp;
  #L4df7f8.  if v0 == 0 then goto L4df800;
  #L4df7fc.  v2:= 1I;
  #L4df7fe.  return v2;
  #L4df800.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4df806.  v2:= 0I;
  #L4df808.  return v2;
}
procedure `void` `tryTerminateAndReport`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df850.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L4df856.  v0:= temp @kind object;
  #L4df858.  if v0 == 0 then goto L4df86a;
  #L4df85c.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4df860.  if v0 == v1 then goto L4df86a;
  #L4df864.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4df86a.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df87c.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L4df882.  v0:= temp @kind object;
  #L4df884.  if v0 != 0 then goto L4df890;
  #L4df888.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4df88e.  goto L4df89e;
  #L4df890.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4df894.  if v0 == v1 then goto L4df89e;
  #L4df898.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4df89e.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.Emitter` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Emitter;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df8b0.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L4df8b6.  v0:= temp @kind object;
  #L4df8b8.  if v0 != 0 then goto L4df8c4;
  #L4df8bc.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/Emitter;.onComplete:()V` @kind interface;
  #L4df8c2.  goto L4df8d2;
  #L4df8c4.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4df8c8.  if v0 == v1 then goto L4df8d2;
  #L4df8cc.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Emitter;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4df8d2.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df8e4.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L4df8ea.  v0:= temp @kind object;
  #L4df8ec.  if v0 != 0 then goto L4df8f8;
  #L4df8f0.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4df8f6.  goto L4df906;
  #L4df8f8.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4df8fc.  if v0 == v1 then goto L4df906;
  #L4df900.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4df906.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df918.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L4df91e.  v0:= temp @kind object;
  #L4df920.  if v0 != 0 then goto L4df92c;
  #L4df924.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4df92a.  goto L4df93a;
  #L4df92c.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4df930.  if v0 == v1 then goto L4df93a;
  #L4df934.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4df93a.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df94c.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L4df952.  v0:= temp @kind object;
  #L4df954.  if v0 == 0 then goto L4df966;
  #L4df958.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4df95c.  if v0 == v1 then goto L4df966;
  #L4df960.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4df966.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df978.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L4df97e.  v0:= temp @kind object;
  #L4df980.  if v0 != 0 then goto L4df98c;
  #L4df984.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4df98a.  goto L4df99a;
  #L4df98c.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4df990.  if v0 == v1 then goto L4df99a;
  #L4df994.  call `onError`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4df99a.  return @kind void;
}
