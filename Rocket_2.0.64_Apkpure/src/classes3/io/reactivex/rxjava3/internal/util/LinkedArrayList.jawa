record `io.reactivex.rxjava3.internal.util.LinkedArrayList` @kind class @AccessFlag PUBLIC {
  `int` `io.reactivex.rxjava3.internal.util.LinkedArrayList.a` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.util.LinkedArrayList.b` @AccessFlag ;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.util.LinkedArrayList.c` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @AccessFlag VOLATILE;
  `int` `io.reactivex.rxjava3.internal.util.LinkedArrayList.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.LinkedArrayList` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/util/LinkedArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e075c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e0762.  v0.`io.reactivex.rxjava3.internal.util.LinkedArrayList.a` @type ^`int` := v1;
  #L4e0766.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.internal.util.LinkedArrayList` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/LinkedArrayList;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e0778.  v0:= v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @type ^`int`;
  #L4e077c.  v1:= 0I;
  #L4e077e.  v2:= 1I;
  #L4e0780.  if v0 != 0 then goto L4e07a4;
  #L4e0784.  v0:= v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.a` @type ^`int`;
  #L4e0788.  v0:= v0 + v2 @kind int;
  #L4e078a.  v0:= new `java.lang.Object`[v0];
  #L4e078e.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4e0792.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4e0796.  v0[v1]:= v5 @kind object;
  #L4e079a.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.e` @type ^`int` := v2;
  #L4e079e.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @type ^`int` := v2;
  #L4e07a2.  goto L4e07f0;
  #L4e07a4.  v0:= v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.e` @type ^`int`;
  #L4e07a8.  v3:= v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.a` @type ^`int`;
  #L4e07ac.  if v0 != v3 then goto L4e07d8;
  #L4e07b0.  v0:= v3 + 1;
  #L4e07b4.  v0:= new `java.lang.Object`[v0];
  #L4e07b8.  v0[v1]:= v5 @kind object;
  #L4e07bc.  v5:= v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L4e07c0.  v5[v3]:= v0 @kind object;
  #L4e07c4.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4e07c8.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.e` @type ^`int` := v2;
  #L4e07cc.  v5:= v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @type ^`int`;
  #L4e07d0.  v5:= v5 + v2 @kind int;
  #L4e07d2.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @type ^`int` := v5;
  #L4e07d6.  goto L4e07f0;
  #L4e07d8.  v1:= v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L4e07dc.  v1[v0]:= v5 @kind object;
  #L4e07e0.  v0:= v0 + v2 @kind int;
  #L4e07e2.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.e` @type ^`int` := v0;
  #L4e07e6.  v5:= v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @type ^`int`;
  #L4e07ea.  v5:= v5 + v2 @kind int;
  #L4e07ec.  v4.`io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @type ^`int` := v5;
  #L4e07f0.  return @kind void;
}
procedure `java.lang.Object`[] `head`(`io.reactivex.rxjava3.internal.util.LinkedArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/LinkedArrayList;.head:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e06e0.  v0:= v1.`io.reactivex.rxjava3.internal.util.LinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L4e06e4.  return v0 @kind object;
}
procedure `int` `size`(`io.reactivex.rxjava3.internal.util.LinkedArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/LinkedArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e06c8.  v0:= v1.`io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @type ^`int`;
  #L4e06cc.  return v0;
}
procedure `java.lang.String` `toString`(`io.reactivex.rxjava3.internal.util.LinkedArrayList` v8 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/LinkedArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4e06f8.  v0:= v8.`io.reactivex.rxjava3.internal.util.LinkedArrayList.a` @type ^`int`;
  #L4e06fc.  v1:= v8.`io.reactivex.rxjava3.internal.util.LinkedArrayList.d` @type ^`int`;
  #L4e0700.  v2:= new `java.util.ArrayList`;
  #L4e0704.  v3:= v1 + 1;
  #L4e0708.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4e070e.  call temp:= `head`(v8) @signature `Lio/reactivex/rxjava3/internal/util/LinkedArrayList;.head:()[Ljava/lang/Object;` @kind virtual;
  #L4e0714.  v3:= temp @kind object;
  #L4e0716.  v4:= 0I;
  #L4e0718.  v5:= 0I;
  #L4e071a.  v6:= 0I;
  #L4e071c.  if v5 >= v1 then goto L4e0740;
  #L4e0720.  v7:= v3[v6] @kind object;
  #L4e0724.  call temp:= `add`(v2, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e072a.  v5:= v5 + 1;
  #L4e072e.  v6:= v6 + 1;
  #L4e0732.  if v6 != v0 then goto L4e071c;
  #L4e0736.  v3:= v3[v0] @kind object;
  #L4e073a.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L4e073e.  goto L4e071a;
  #L4e0740.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e0746.  v0:= temp @kind object;
  #L4e0748.  return v0 @kind object;
}
