record `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bcc14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bcc1a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4bcc1e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4bcc22.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4bcc26.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.d` @type ^`io.reactivex.rxjava3.functions.Action` := v4 @kind object;
  #L4bcc2a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.rxjava3.functions.Action` := v5 @kind object;
  #L4bcc2e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bcc40.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bcc44.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bcc4a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bcbf4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bcbf8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4bcbfe.  v0:= temp;
  #L4bcc00.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bcc5c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L4bcc60.  if v0 == 0 then goto L4bcc66;
  #L4bcc64.  return @kind void;
  #L4bcc66.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4bcc6a.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4bcc70.  v0:= 1I;
  #L4bcc72.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4bcc76.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bcc7a.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4bcc80.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4bcc84.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4bcc8a.  goto L4bcc9a;
  #L4bcc8c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bcc8e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bcc94.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bcc9a.  return @kind void;
  #L4bcc9c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bcc9e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bcca4.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bccaa.  return @kind void;
  catch `java.lang.Throwable` @[L4bcc66..L4bcc70] goto L4bcc9c;
  catch `java.lang.Throwable` @[L4bcc80..L4bcc8a] goto L4bcc8c;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4bccd4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L4bccd8.  if v0 == 0 then goto L4bcce4;
  #L4bccdc.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bcce2.  return @kind void;
  #L4bcce4.  v0:= 1I;
  #L4bcce6.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4bccea.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4bccee.  call `accept`(v1, v6) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4bccf4.  goto L4bcd1a;
  #L4bccf6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bccf8.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bccfe.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4bcd02.  v3:= 2I;
  #L4bcd04.  v3:= new `java.lang.Throwable`[v3];
  #L4bcd08.  v4:= 0I;
  #L4bcd0a.  v3[v4]:= v6 @kind object;
  #L4bcd0e.  v3[v0]:= v1 @kind object;
  #L4bcd12.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4bcd18.  v6:= v2 @kind object;
  #L4bcd1a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bcd1e.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bcd24.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4bcd28.  call `run`(v6) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4bcd2e.  goto L4bcd3e;
  #L4bcd30.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bcd32.  call `throwIfFatal`(v6) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bcd38.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bcd3e.  return @kind void;
  catch `java.lang.Throwable` @[L4bccea..L4bccf4] goto L4bccf6;
  catch `java.lang.Throwable` @[L4bcd24..L4bcd2e] goto L4bcd30;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bcd68.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L4bcd6c.  if v0 == 0 then goto L4bcd72;
  #L4bcd70.  return @kind void;
  #L4bcd72.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4bcd76.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4bcd7c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bcd80.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4bcd86.  return @kind void;
  #L4bcd88.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bcd8a.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bcd90.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bcd94.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bcd9a.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bcda0.  return @kind void;
  catch `java.lang.Throwable` @[L4bcd72..L4bcd7c] goto L4bcd88;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bcdc0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bcdc4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4bcdca.  v0:= temp;
  #L4bcdcc.  if v0 == 0 then goto L4bcdde;
  #L4bcdd0.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4bcdd4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bcdd8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4bcdde.  return @kind void;
}
