record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction` v0 @kind this, `io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L493c70.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L493c76.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction.b` @type ^`io.reactivex.rxjava3.functions.Action` := v1 @kind object;
  #L493c7a.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromAction;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L493c50.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L493c54.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L493c5a.  v0:= 0I;
  #L493c5c.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromAction;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L493c8c.  v0:= new `io.reactivex.rxjava3.internal.fuseable.CancellableQueueFuseable`;
  #L493c90.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.<init>:()V` @kind direct;
  #L493c96.  call `onSubscribe`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L493c9c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L493ca2.  v1:= temp;
  #L493ca4.  if v1 != 0 then goto L493ce8;
  #L493ca8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L493cac.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L493cb2.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L493cb8.  v0:= temp;
  #L493cba.  if v0 != 0 then goto L493ce8;
  #L493cbe.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L493cc4.  goto L493ce8;
  #L493cc6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L493cc8.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L493cce.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L493cd4.  v0:= temp;
  #L493cd6.  if v0 != 0 then goto L493ce2;
  #L493cda.  call `onError`(v3, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L493ce0.  goto L493ce8;
  #L493ce2.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L493ce8.  return @kind void;
  catch `java.lang.Throwable` @[L493ca8..L493cb2] goto L493cc6;
}
