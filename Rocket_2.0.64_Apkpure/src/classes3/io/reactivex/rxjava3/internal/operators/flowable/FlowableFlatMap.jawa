record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L493498.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49349e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4934a2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.c` @type ^`boolean` := v3 @kind boolean;
  #L4934a6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.d` @type ^`int` := v4;
  #L4934aa.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.e` @type ^`int` := v5;
  #L4934ae.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.FlowableSubscriber` `subscribe`(`org.reactivestreams.Subscriber` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/FlowableSubscriber;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L493470.  v6:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$b`;
  #L493474.  v0:= v6 @kind object;
  #L493476.  v1:= v7 @kind object;
  #L493478.  v2:= v8 @kind object;
  #L49347a.  v3:= v9;
  #L49347c.  v4:= v10;
  #L49347e.  v5:= v11;
  #L493480.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L493486.  return v6 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4934c0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4934c4.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4934c8.  call temp:= `tryScalarXMapSubscribe`(v0, v6, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)Z` @kind static;
  #L4934ce.  v0:= temp;
  #L4934d0.  if v0 == 0 then goto L4934d6;
  #L4934d4.  return @kind void;
  #L4934d6.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4934da.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4934de.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.c` @type ^`boolean` @kind boolean;
  #L4934e2.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.d` @type ^`int`;
  #L4934e6.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap.e` @type ^`int`;
  #L4934ea.  call temp:= `subscribe`(v6, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/FlowableSubscriber;` @kind static;
  #L4934f0.  v6:= temp @kind object;
  #L4934f2.  call `subscribe`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4934f8.  return @kind void;
}
