record `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.c` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.d` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval` v0 @kind this, `long` v1 , `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4974d4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4974da.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.c` @type ^`long` := v1 @kind wide;
  #L4974de.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.d` @type ^`long` := v3 @kind wide;
  #L4974e2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.e` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L4974e6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v6 @kind object;
  #L4974ea.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval` v8 @kind this, `org.reactivestreams.Subscriber` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4974fc.  v7:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval$a`;
  #L497500.  call `<init>`(v7, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L497506.  call `onSubscribe`(v9, v7) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L49750c.  v0:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L497510.  v9:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` @kind boolean;
  #L497514.  if v9 == 0 then goto L49753c;
  #L497518.  call temp:= `createWorker`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L49751e.  v0:= temp @kind object;
  #L497520.  call `a`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval$a;.a:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L497526.  v2:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.c` @type ^`long` @kind wide;
  #L49752a.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.d` @type ^`long` @kind wide;
  #L49752e.  v6:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.e` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L497532.  v1:= v7 @kind object;
  #L497534.  call temp:= `schedulePeriodically`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L49753a.  goto L497558;
  #L49753c.  v2:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.c` @type ^`long` @kind wide;
  #L497540.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.d` @type ^`long` @kind wide;
  #L497544.  v6:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.e` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L497548.  v1:= v7 @kind object;
  #L49754a.  call temp:= `schedulePeriodicallyDirect`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L497550.  v9:= temp @kind object;
  #L497552.  call `a`(v7, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval$a;.a:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L497558.  return @kind void;
}
