record `io.reactivex.rxjava3.internal.operators.single.SingleMap$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleMap$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleMap$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleMap$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d7224.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d722a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d722e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4d7232.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleMap$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d7244.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d7248.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d724e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleMap$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d7260.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d7264.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d726a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleMap$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d727c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4d7280.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4d7286.  v2:= temp @kind object;
  #L4d7288.  v0:= "The mapper function returned a null value." @kind object;
  #L4d728c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d7292.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d7296.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d729c.  return @kind void;
  #L4d729e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d72a0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d72a6.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4d72ac.  return @kind void;
  catch `java.lang.Throwable` @[L4d727c..L4d7292] goto L4d729e;
}
