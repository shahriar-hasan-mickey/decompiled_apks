record `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bf264.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bf26a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4bf26e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4bf272.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf284.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf288.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bf28e.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4bf292.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4bf296.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf244.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf248.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4bf24e.  v0:= temp;
  #L4bf250.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bf2a8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf2ac.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4bf2b0.  if v0 != v1 then goto L4bf2b6;
  #L4bf2b4.  return @kind void;
  #L4bf2b6.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4bf2ba.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bf2be.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4bf2c4.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bf2d8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf2dc.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4bf2e0.  if v0 != v1 then goto L4bf2ec;
  #L4bf2e4.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf2ea.  return @kind void;
  #L4bf2ec.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4bf2f0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bf2f4.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bf2fa.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4bf30c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf310.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4bf314.  if v0 != v1 then goto L4bf31a;
  #L4bf318.  return @kind void;
  #L4bf31a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4bf31e.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4bf324.  v4:= temp @kind object;
  #L4bf326.  v4:= (`java.lang.Iterable`) v4 @kind object;
  #L4bf32a.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4bf330.  v4:= temp @kind object;
  #L4bf332.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bf336.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4bf33c.  v1:= temp;
  #L4bf33e.  if v1 == 0 then goto L4bf374;
  #L4bf342.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4bf348.  v1:= temp @kind object;
  #L4bf34a.  v2:= "The iterator returned a null value" @kind object;
  #L4bf34e.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bf354.  call `onNext`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4bf35a.  goto L4bf336;
  #L4bf35c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bf35e.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf364.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf368.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bf36e.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bf374.  return @kind void;
  #L4bf376.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bf378.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf37e.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf382.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bf388.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bf38e.  return @kind void;
  #L4bf390.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bf392.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf398.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf39c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bf3a2.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bf3a8.  return @kind void;
  catch `java.lang.Throwable` @[L4bf31a..L4bf332] goto L4bf390;
  catch `java.lang.Throwable` @[L4bf336..L4bf33e] goto L4bf376;
  catch `java.lang.Throwable` @[L4bf342..L4bf354] goto L4bf35c;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf3dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bf3e0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4bf3e6.  v0:= temp;
  #L4bf3e8.  if v0 == 0 then goto L4bf3fa;
  #L4bf3ec.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4bf3f0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bf3f4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4bf3fa.  return @kind void;
}
