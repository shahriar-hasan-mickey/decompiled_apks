record `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `io.reactivex.rxjava3.core.CompletableSource`[] `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb` v0 @kind this, `io.reactivex.rxjava3.core.CompletableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/rxjava3/core/CompletableSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4829b0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4829b6.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.a` @type ^`io.reactivex.rxjava3.core.CompletableSource`[] := v1 @kind object;
  #L4829ba.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4829be.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb` v9 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAmb;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4829d0.  v0:= v9.`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.a` @type ^`io.reactivex.rxjava3.core.CompletableSource`[] @kind object;
  #L4829d4.  v1:= "One of the sources is null" @kind object;
  #L4829d8.  v2:= 0I;
  #L4829da.  if v0 != 0 then goto L482a56;
  #L4829de.  v0:= 8I;
  #L4829e2.  v0:= new `io.reactivex.rxjava3.core.CompletableSource`[v0];
  #L4829e6.  v3:= v9.`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.b` @type ^`java.lang.Iterable` @kind object;
  #L4829ea.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4829f0.  v3:= temp @kind object;
  #L4829f2.  v4:= 0I;
  #L4829f4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4829fa.  v5:= temp;
  #L4829fc.  if v5 == 0 then goto L482a58;
  #L482a00.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L482a06.  v5:= temp @kind object;
  #L482a08.  v5:= (`io.reactivex.rxjava3.core.CompletableSource`) v5 @kind object;
  #L482a0c.  if v5 != 0 then goto L482a22;
  #L482a10.  v0:= new `java.lang.NullPointerException`;
  #L482a14.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L482a1a.  call `error`(v0, v10) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind static;
  #L482a20.  return @kind void;
  #L482a22.  v6:= length @variable v0;
  #L482a24.  if v4 != v6 then goto L482a3a;
  #L482a28.  v6:= v4 ^> 2;
  #L482a2c.  v6:= v6 + v4 @kind int;
  #L482a2e.  v6:= new `io.reactivex.rxjava3.core.CompletableSource`[v6];
  #L482a32.  call `arraycopy`(v0, v2, v6, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L482a38.  v0:= v6 @kind object;
  #L482a3a.  v6:= v4 + 1;
  #L482a3e.  v0[v4]:= v5 @kind object;
  #L482a42.  v4:= v6;
  #L482a44.  goto L4829f4;
  #L482a46.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L482a48.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L482a4e.  call `error`(v0, v10) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind static;
  #L482a54.  return @kind void;
  #L482a56.  v4:= length @variable v0;
  #L482a58.  v3:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L482a5c.  call `<init>`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L482a62.  call `onSubscribe`(v10, v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L482a68.  v5:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L482a6c.  call `<init>`(v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L482a72.  v6:= 0I;
  #L482a74.  if v6 >= v4 then goto L482ad2;
  #L482a78.  v7:= v0[v6] @kind object;
  #L482a7c.  call temp:= `isDisposed`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L482a82.  v8:= temp;
  #L482a84.  if v8 == 0 then goto L482a8a;
  #L482a88.  return @kind void;
  #L482a8a.  if v7 != 0 then goto L482abc;
  #L482a8e.  v0:= new `java.lang.NullPointerException`;
  #L482a92.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L482a98.  v1:= 1I;
  #L482a9a.  call temp:= `compareAndSet`(v5, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L482aa0.  v1:= temp;
  #L482aa2.  if v1 == 0 then goto L482ab4;
  #L482aa6.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L482aac.  call `onError`(v10, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L482ab2.  goto L482aba;
  #L482ab4.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L482aba.  return @kind void;
  #L482abc.  v8:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb$a`;
  #L482ac0.  call `<init>`(v8, v5, v3, v10) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAmb$a;.<init>:(Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/rxjava3/disposables/CompositeDisposable;Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind direct;
  #L482ac6.  call `subscribe`(v7, v8) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L482acc.  v6:= v6 + 1;
  #L482ad0.  goto L482a74;
  #L482ad2.  if v4 != 0 then goto L482adc;
  #L482ad6.  call `onComplete`(v10) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L482adc.  return @kind void;
  catch `java.lang.Throwable` @[L4829e6..L482a42] goto L482a46;
}
