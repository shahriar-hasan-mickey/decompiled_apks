record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4ac028.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ac02e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a`;
  #L4ac032.  call `<init>`(v0, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector$a$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4ac038.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` := v0 @kind object;
  #L4ac03c.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.a` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4ac040.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ac054.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac058.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4ac05e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4abffc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac000.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ac006.  v0:= temp @kind object;
  #L4ac008.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ac00c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ac012.  v0:= temp;
  #L4ac014.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ac070.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac074.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ac078.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4ac07e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ac090.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac094.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ac098.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ac09e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ac0b0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac0b4.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ac0ba.  v2:= temp;
  #L4ac0bc.  if v2 == 0 then goto L4ac0ce;
  #L4ac0c0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac0c4.  v2:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ac0c8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ac0ce.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapBiSelector$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ac0e0.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ac0e4.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ac0ea.  v0:= temp @kind object;
  #L4ac0ec.  v1:= "The mapper returned a null MaybeSource" @kind object;
  #L4ac0f0.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ac0f6.  v0:= (`io.reactivex.rxjava3.core.MaybeSource`) v0 @kind object;
  #L4ac0fa.  v1:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac0fe.  v2:= 0I;
  #L4ac100.  call temp:= `replace`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ac106.  v1:= temp;
  #L4ac108.  if v1 == 0 then goto L4ac11a;
  #L4ac10c.  v1:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac110.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.c` @type ^`java.lang.Object` := v4 @kind object;
  #L4ac114.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4ac11a.  return @kind void;
  #L4ac11c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ac11e.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ac124.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind object;
  #L4ac128.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ac12c.  call `onError`(v0, v4) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ac132.  return @kind void;
  catch `java.lang.Throwable` @[L4ac0e0..L4ac0fa] goto L4ac11c;
}
