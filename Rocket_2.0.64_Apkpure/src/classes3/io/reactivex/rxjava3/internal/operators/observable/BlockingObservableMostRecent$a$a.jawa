record `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @AccessFlag PRIVATE;
  `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b58a4.  v0.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` := v1 @kind object;
  #L4b58a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b58ae.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b57e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` @kind object;
  #L4b57e4.  v0:= v0.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L4b57e8.  v1.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4b57ec.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4b57f2.  v0:= temp;
  #L4b57f4.  v0:= v0 ^~ 1;
  #L4b57f8.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b580c.  v0:= 0I;
  #L4b580e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b5812.  if v1 != 0 then goto L4b5822;
  #L4b5816.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` @kind object;
  #L4b581a.  v1:= v1.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L4b581e.  v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L4b5822.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b5826.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4b582c.  v1:= temp;
  #L4b582e.  if v1 != 0 then goto L4b586a;
  #L4b5832.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b5836.  call temp:= `isError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4b583c.  v1:= temp;
  #L4b583e.  if v1 != 0 then goto L4b5854;
  #L4b5842.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b5846.  call temp:= `getValue`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4b584c.  v1:= temp @kind object;
  #L4b584e.  v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4b5852.  return v1 @kind object;
  #L4b5854.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b5858.  call temp:= `getError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L4b585e.  v1:= temp @kind object;
  #L4b5860.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4b5866.  v1:= temp @kind object;
  #L4b5868.  throw v1;
  #L4b586a.  v1:= new `java.util.NoSuchElementException`;
  #L4b586e.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4b5874.  throw v1;
  #L4b5876.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b5878.  v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4b587c.  throw v1;
  catch `java.lang.Throwable` @[L4b580e..L4b584e] goto L4b5876;
  catch `java.lang.Throwable` @[L4b5854..L4b5876] goto L4b5876;
}
procedure `void` `remove`(`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b58c0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L4b58c4.  v1:= "Read only iterator" @kind object;
  #L4b58c8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b58ce.  throw v0;
}
