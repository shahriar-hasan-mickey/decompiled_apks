record `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L497d68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L497d6e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L497d72.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L497d84.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L497d88.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L497d8e.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L497d92.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L497d96.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L497d44.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L497d48.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L497d4c.  if v0 != v1 then goto L497d54;
  #L497d50.  v0:= 1I;
  #L497d52.  goto L497d56;
  #L497d54.  v0:= 0I;
  #L497d56.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L497da8.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L497dac.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L497db0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @type ^`java.lang.Object` @kind object;
  #L497db4.  if v0 == 0 then goto L497dca;
  #L497db8.  v1:= 0I;
  #L497dba.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L497dbe.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L497dc2.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L497dc8.  goto L497dd4;
  #L497dca.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L497dce.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L497dd4.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L497de8.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L497dec.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L497df0.  v0:= 0I;
  #L497df2.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L497df6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L497dfa.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L497e00.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L497e14.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L497e18.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L497e2c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L497e30.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L497e36.  v0:= temp;
  #L497e38.  if v0 == 0 then goto L497e5a;
  #L497e3c.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L497e40.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L497e44.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L497e4a.  v0:= 9223372036854775807L;
  #L497e54.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L497e5a.  return @kind void;
}
