record `io.reactivex.rxjava3.internal.operators.single.SingleAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `io.reactivex.rxjava3.core.SingleSource`[] `io.reactivex.rxjava3.internal.operators.single.SingleAmb.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.single.SingleAmb.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleAmb` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d3898.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4d389e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleAmb.a` @type ^`io.reactivex.rxjava3.core.SingleSource`[] := v1 @kind object;
  #L4d38a2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleAmb.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4d38a6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleAmb` v9 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4d38b8.  v0:= v9.`io.reactivex.rxjava3.internal.operators.single.SingleAmb.a` @type ^`io.reactivex.rxjava3.core.SingleSource`[] @kind object;
  #L4d38bc.  v1:= "One of the sources is null" @kind object;
  #L4d38c0.  v2:= 0I;
  #L4d38c2.  if v0 != 0 then goto L4d393e;
  #L4d38c6.  v0:= 8I;
  #L4d38ca.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4d38ce.  v3:= v9.`io.reactivex.rxjava3.internal.operators.single.SingleAmb.b` @type ^`java.lang.Iterable` @kind object;
  #L4d38d2.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4d38d8.  v3:= temp @kind object;
  #L4d38da.  v4:= 0I;
  #L4d38dc.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4d38e2.  v5:= temp;
  #L4d38e4.  if v5 == 0 then goto L4d3940;
  #L4d38e8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4d38ee.  v5:= temp @kind object;
  #L4d38f0.  v5:= (`io.reactivex.rxjava3.core.SingleSource`) v5 @kind object;
  #L4d38f4.  if v5 != 0 then goto L4d390a;
  #L4d38f8.  v0:= new `java.lang.NullPointerException`;
  #L4d38fc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d3902.  call `error`(v0, v10) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind static;
  #L4d3908.  return @kind void;
  #L4d390a.  v6:= length @variable v0;
  #L4d390c.  if v4 != v6 then goto L4d3922;
  #L4d3910.  v6:= v4 ^> 2;
  #L4d3914.  v6:= v6 + v4 @kind int;
  #L4d3916.  v6:= new `io.reactivex.rxjava3.core.SingleSource`[v6];
  #L4d391a.  call `arraycopy`(v0, v2, v6, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4d3920.  v0:= v6 @kind object;
  #L4d3922.  v6:= v4 + 1;
  #L4d3926.  v0[v4]:= v5 @kind object;
  #L4d392a.  v4:= v6;
  #L4d392c.  goto L4d38dc;
  #L4d392e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d3930.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d3936.  call `error`(v0, v10) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind static;
  #L4d393c.  return @kind void;
  #L4d393e.  v4:= length @variable v0;
  #L4d3940.  v3:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4d3944.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4d394a.  v5:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4d394e.  call `<init>`(v5) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4d3954.  call `onSubscribe`(v10, v5) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d395a.  v6:= 0I;
  #L4d395c.  if v6 >= v4 then goto L4d39ba;
  #L4d3960.  v7:= v0[v6] @kind object;
  #L4d3964.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4d396a.  v8:= temp;
  #L4d396c.  if v8 == 0 then goto L4d3972;
  #L4d3970.  return @kind void;
  #L4d3972.  if v7 != 0 then goto L4d39a4;
  #L4d3976.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4d397c.  v0:= new `java.lang.NullPointerException`;
  #L4d3980.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d3986.  v1:= 1I;
  #L4d3988.  call temp:= `compareAndSet`(v3, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4d398e.  v1:= temp;
  #L4d3990.  if v1 == 0 then goto L4d399c;
  #L4d3994.  call `onError`(v10, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d399a.  goto L4d39a2;
  #L4d399c.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d39a2.  return @kind void;
  #L4d39a4.  v8:= new `io.reactivex.rxjava3.internal.operators.single.SingleAmb$a`;
  #L4d39a8.  call `<init>`(v8, v10, v5, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/disposables/CompositeDisposable;Ljava/util/concurrent/atomic/AtomicBoolean;)V` @kind direct;
  #L4d39ae.  call `subscribe`(v7, v8) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d39b4.  v6:= v6 + 1;
  #L4d39b8.  goto L4d395c;
  #L4d39ba.  return @kind void;
  catch `java.lang.Throwable` @[L4d38ce..L4d392a] goto L4d392e;
}
