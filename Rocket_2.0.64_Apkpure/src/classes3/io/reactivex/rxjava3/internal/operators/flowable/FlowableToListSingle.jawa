record `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind interface {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle` v1 @kind this, `io.reactivex.rxjava3.core.Flowable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4a50e8.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a50ee.  v0:= temp @kind object;
  #L4a50f0.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a50f6.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a5108.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4a510e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4a5112.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v2 @kind object;
  #L4a5116.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fuseToFlowable`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a50bc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableToList`;
  #L4a50c0.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a50c4.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4a50c8.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToList;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a50ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a50d4.  v0:= temp @kind object;
  #L4a50d6.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle` v3 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4a5128.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4a512c.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4a5132.  v0:= temp @kind object;
  #L4a5134.  v1:= "The collectionSupplier returned a null Collection." @kind object;
  #L4a5138.  call temp:= `nullCheck`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a513e.  v0:= temp @kind object;
  #L4a5140.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4a5144.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a5148.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a`;
  #L4a514c.  call `<init>`(v2, v4, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/util/Collection;)V` @kind direct;
  #L4a5152.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4a5158.  return @kind void;
  #L4a515a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a515c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a5162.  call `error`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind static;
  #L4a5168.  return @kind void;
  catch `java.lang.Throwable` @[L4a5128..L4a5144] goto L4a515a;
}
