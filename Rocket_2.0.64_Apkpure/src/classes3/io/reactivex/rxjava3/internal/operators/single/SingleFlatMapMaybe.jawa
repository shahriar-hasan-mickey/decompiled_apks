record `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d6588.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4d658e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4d6592.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe.a` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L4d6596.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe` v3 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapMaybe;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4d65a8.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe.a` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L4d65ac.  v1:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe$b`;
  #L4d65b0.  v2:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4d65b4.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapMaybe$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4d65ba.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d65c0.  return @kind void;
}
