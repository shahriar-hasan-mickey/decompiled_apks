record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.h` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;ZI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4920d4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4920da.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4920de.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4920e2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.d` @type ^`boolean` := v3 @kind boolean;
  #L4920e6.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4920ea.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4920f0.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L4920f4.  v1:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4920f8.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4920fe.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v1 @kind object;
  #L492102.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @type ^`int` := v4;
  #L492106.  v1:= 1I;
  #L492108.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L49210e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.a:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a$a;)V` @AccessFlag  {
    temp;
    v0;

  #L492158.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L49215c.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L492162.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onComplete:()V` @kind virtual;
  #L492168.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a$a` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.b:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a$a;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L49217c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L492180.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L492186.  call `onError`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49218c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492120.  v0:= 1I;
  #L492122.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.h` @type ^`boolean` := v0 @kind boolean;
  #L492126.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49212a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L492130.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L492134.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L49213a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L49213e.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L492144.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4920b4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4920b8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4920be.  v0:= temp;
  #L4920c0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4921a0.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4921a6.  v0:= temp;
  #L4921a8.  if v0 != 0 then goto L4921bc;
  #L4921ac.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4921b0.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4921b4.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4921ba.  goto L4921d8;
  #L4921bc.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @type ^`int`;
  #L4921c0.  v1:= 2147483647I;
  #L4921c6.  if v0 == v1 then goto L4921d8;
  #L4921ca.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4921ce.  v1:= 1L;
  #L4921d2.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4921d8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4921ec.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4921f0.  call temp:= `tryAddThrowableOrReport`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4921f6.  v3:= temp;
  #L4921f8.  if v3 == 0 then goto L492266;
  #L4921fc.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.d` @type ^`boolean` @kind boolean;
  #L492200.  if v3 == 0 then goto L49223e;
  #L492204.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L49220a.  v3:= temp;
  #L49220c.  if v3 != 0 then goto L492220;
  #L492210.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L492214.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L492218.  call `tryTerminateConsumer`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L49221e.  goto L492266;
  #L492220.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @type ^`int`;
  #L492224.  v0:= 2147483647I;
  #L49222a.  if v3 == v0 then goto L492266;
  #L49222e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L492232.  v0:= 1L;
  #L492236.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L49223c.  goto L492266;
  #L49223e.  v3:= 1I;
  #L492240.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.h` @type ^`boolean` := v3 @kind boolean;
  #L492244.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L492248.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L49224e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L492252.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L492258.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L49225c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L492260.  call `tryTerminateConsumer`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L492266.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492278.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L49227c.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L492282.  v3:= temp @kind object;
  #L492284.  v0:= "The mapper returned a null CompletableSource" @kind object;
  #L492288.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49228e.  v3:= (`io.reactivex.rxjava3.core.CompletableSource`) v3 @kind object;
  #L492292.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L492298.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a$a`;
  #L49229c.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;)V` @kind direct;
  #L4922a2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.h` @type ^`boolean` @kind boolean;
  #L4922a6.  if v1 != 0 then goto L4922c0;
  #L4922aa.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4922ae.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4922b4.  v1:= temp;
  #L4922b6.  if v1 == 0 then goto L4922c0;
  #L4922ba.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4922c0.  return @kind void;
  #L4922c2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4922c4.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4922ca.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4922ce.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4922d4.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4922da.  return @kind void;
  catch `java.lang.Throwable` @[L492278..L492292] goto L4922c2;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4922f8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4922fc.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L492302.  v0:= temp;
  #L492304.  if v0 == 0 then goto L49233e;
  #L492308.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L49230c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L492310.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L492316.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @type ^`int`;
  #L49231a.  v1:= 2147483647I;
  #L492320.  if v0 != v1 then goto L492336;
  #L492324.  v0:= 9223372036854775807L;
  #L49232e.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L492334.  goto L49233e;
  #L492336.  v0:= (`long`) v0 @kind i2l;
  #L492338.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L49233e.  return @kind void;
}
