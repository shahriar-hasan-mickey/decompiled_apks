record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L492c80.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L492c86.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L492c8a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.c` @type ^`boolean` := v3 @kind boolean;
  #L492c8e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.d` @type ^`int` := v4;
  #L492c92.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapMaybe;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L492ca4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L492ca8.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe$a`;
  #L492cac.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L492cb0.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.c` @type ^`boolean` @kind boolean;
  #L492cb4.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe.d` @type ^`int`;
  #L492cb8.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapMaybe$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L492cbe.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L492cc4.  return @kind void;
}
