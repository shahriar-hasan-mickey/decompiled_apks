record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$a` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b` v0 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$a` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$b;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$a;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48adec.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L48adf2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$a` := v1 @kind object;
  #L48adf6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.b` @type ^`int` := v2;
  #L48adfa.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.c` @type ^`int` := v3;
  #L48adfe.  v1:= v3 ^> 2;
  #L48ae02.  v3:= v3 - v1 @kind int;
  #L48ae04.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.d` @type ^`int` := v3;
  #L48ae08.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$b;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L48ae1c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L48ae22.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$b;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48aeb4.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.e` @type ^`int`;
  #L48aeb8.  v0:= v0 + 1;
  #L48aebc.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.d` @type ^`int`;
  #L48aec0.  if v0 != v1 then goto L48aee0;
  #L48aec4.  v1:= 0I;
  #L48aec6.  v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.e` @type ^`int` := v1;
  #L48aeca.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L48aed0.  v1:= temp @kind object;
  #L48aed2.  v1:= (`org.reactivestreams.Subscription`) v1 @kind object;
  #L48aed6.  v2:= (`long`) v0 @kind i2l;
  #L48aed8.  call `request`(v1, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48aede.  goto L48aee4;
  #L48aee0.  v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.e` @type ^`int` := v0;
  #L48aee4.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48ae34.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$a` @kind object;
  #L48ae38.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.b` @type ^`int`;
  #L48ae3c.  call `i`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$a;.i:(I)V` @kind virtual;
  #L48ae42.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48ae54.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$a` @kind object;
  #L48ae58.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.b` @type ^`int`;
  #L48ae5c.  call `j`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$a;.j:(ILjava/lang/Throwable;)V` @kind virtual;
  #L48ae62.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48ae74.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$a` @kind object;
  #L48ae78.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.b` @type ^`int`;
  #L48ae7c.  call `k`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$a;.k:(ILjava/lang/Object;)V` @kind virtual;
  #L48ae82.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48ae94.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$b.c` @type ^`int`;
  #L48ae98.  v0:= (`long`) v0 @kind i2l;
  #L48ae9a.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L48aea0.  return @kind void;
}
