record `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4afc2c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4afc32.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v1 @kind object;
  #L4afc36.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.b` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L4afc3a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v3 @kind object;
  #L4afc3e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.d` @type ^`boolean` := v4 @kind boolean;
  #L4afc42.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval` v5 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeInterval;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4afc54.  v0:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4afc58.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval$a`;
  #L4afc5c.  v2:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4afc60.  v3:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4afc64.  v4:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeInterval.d` @type ^`boolean` @kind boolean;
  #L4afc68.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeInterval$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4afc6e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4afc74.  return @kind void;
}
