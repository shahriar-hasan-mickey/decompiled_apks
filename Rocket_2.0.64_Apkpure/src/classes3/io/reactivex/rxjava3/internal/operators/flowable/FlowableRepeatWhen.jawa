record `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49db08.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49db0e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L49db12.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49db24.  v0:= new `io.reactivex.rxjava3.subscribers.SerializedSubscriber`;
  #L49db28.  call `<init>`(v0, v6) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L49db2e.  v1:= 8I;
  #L49db32.  call temp:= `create`(v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.create:(I)Lio/reactivex/rxjava3/processors/UnicastProcessor;` @kind static;
  #L49db38.  v1:= temp @kind object;
  #L49db3a.  call temp:= `toSerialized`(v1) @signature `Lio/reactivex/rxjava3/processors/FlowableProcessor;.toSerialized:()Lio/reactivex/rxjava3/processors/FlowableProcessor;` @kind virtual;
  #L49db40.  v1:= temp @kind object;
  #L49db42.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L49db46.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49db4c.  v2:= temp @kind object;
  #L49db4e.  v3:= "handler returned a null Publisher" @kind object;
  #L49db52.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49db58.  v2:= (`org.reactivestreams.Publisher`) v2 @kind object;
  #L49db5c.  v3:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen$b`;
  #L49db60.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L49db64.  call `<init>`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen$b;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49db6a.  v4:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen$a`;
  #L49db6e.  call `<init>`(v4, v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/processors/FlowableProcessor;Lorg/reactivestreams/Subscription;)V` @kind direct;
  #L49db74.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen$b.d` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen$c` := v4 @kind object;
  #L49db78.  call `onSubscribe`(v6, v4) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L49db7e.  call `subscribe`(v2, v3) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L49db84.  v6:= 0I;
  #L49db86.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49db8c.  v6:= temp @kind object;
  #L49db8e.  call `onNext`(v3, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen$b;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L49db94.  return @kind void;
  #L49db96.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49db98.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49db9e.  call `error`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L49dba4.  return @kind void;
  catch `java.lang.Throwable` @[L49db42..L49db5c] goto L49db96;
}
