record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayWithCompletable$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aac40.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4aac46.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4aac4a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v2 @kind object;
  #L4aac4e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayWithCompletable$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4aac60.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4aac66.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayWithCompletable$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aac18.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4aac1e.  v0:= temp @kind object;
  #L4aac20.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4aac24.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aac2a.  v0:= temp;
  #L4aac2c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayWithCompletable$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4aac78.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4aac7c.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$a`;
  #L4aac80.  v2:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aac84.  call `<init>`(v1, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayWithCompletable$a;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4aac8a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4aac90.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayWithCompletable$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aaca4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aaca8.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aacae.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayWithCompletable$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4aacc0.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aacc6.  v1:= temp;
  #L4aacc8.  if v1 == 0 then goto L4aacd6;
  #L4aaccc.  v1:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aacd0.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4aacd6.  return @kind void;
}
