record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiConsumer` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab3a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ab3aa.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4ab3ae.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` := v2 @kind object;
  #L4ab3b2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab3c4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab3c8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab3ce.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab3d2.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4ab3d6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab384.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab388.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ab38e.  v0:= temp;
  #L4ab390.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab3e8.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab3ec.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4ab3f0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L4ab3f4.  v1:= 0I;
  #L4ab3f6.  call `accept`(v0, v1, v1) @signature `Lio/reactivex/rxjava3/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4ab3fc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab400.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4ab406.  return @kind void;
  #L4ab408.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab40a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab410.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab414.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ab41a.  return @kind void;
  catch `java.lang.Throwable` @[L4ab3f0..L4ab3fc] goto L4ab408;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ab438.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab43c.  v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4ab440.  v0:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L4ab444.  v1:= 0I;
  #L4ab446.  call `accept`(v0, v1, v5) @signature `Lio/reactivex/rxjava3/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4ab44c.  goto L4ab474;
  #L4ab44e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab450.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab456.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4ab45a.  v2:= 2I;
  #L4ab45c.  v2:= new `java.lang.Throwable`[v2];
  #L4ab460.  v3:= 0I;
  #L4ab462.  v2[v3]:= v5 @kind object;
  #L4ab466.  v5:= 1I;
  #L4ab468.  v2[v5]:= v0 @kind object;
  #L4ab46c.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4ab472.  v5:= v1 @kind object;
  #L4ab474.  v0:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab478.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ab47e.  return @kind void;
  catch `java.lang.Throwable` @[L4ab440..L4ab44c] goto L4ab44e;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab49c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab4a0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ab4a6.  v0:= temp;
  #L4ab4a8.  if v0 == 0 then goto L4ab4ba;
  #L4ab4ac.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4ab4b0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab4b4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ab4ba.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab4cc.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab4d0.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4ab4d4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L4ab4d8.  v1:= 0I;
  #L4ab4da.  call `accept`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4ab4e0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab4e4.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4ab4ea.  return @kind void;
  #L4ab4ec.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab4ee.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab4f4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab4f8.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ab4fe.  return @kind void;
  catch `java.lang.Throwable` @[L4ab4d4..L4ab4e0] goto L4ab4ec;
}
