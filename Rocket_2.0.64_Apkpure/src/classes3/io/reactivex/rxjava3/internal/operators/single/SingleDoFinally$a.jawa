record `io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d4ce0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4d4ce6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d4cea.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.b` @type ^`io.reactivex.rxjava3.functions.Action` := v2 @kind object;
  #L4d4cee.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4d4d9c.  v0:= 0I;
  #L4d4d9e.  v1:= 1I;
  #L4d4da0.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L4d4da6.  v0:= temp;
  #L4d4da8.  if v0 == 0 then goto L4d4dc6;
  #L4d4dac.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4d4db0.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4d4db6.  goto L4d4dc6;
  #L4d4db8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d4dba.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d4dc0.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d4dc6.  return @kind void;
  catch `java.lang.Throwable` @[L4d4dac..L4d4db6] goto L4d4db8;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4d00.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d4d04.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d4d0a.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.a:()V` @kind virtual;
  #L4d4d10.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4cc0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d4cc4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d4cca.  v0:= temp;
  #L4d4ccc.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4d24.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d4d28.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d4d2e.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.a:()V` @kind virtual;
  #L4d4d34.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4d48.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d4d4c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d4d52.  v0:= temp;
  #L4d4d54.  if v0 == 0 then goto L4d4d66;
  #L4d4d58.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4d4d5c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d4d60.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d4d66.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4d78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d4d7c.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d4d82.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally$a;.a:()V` @kind virtual;
  #L4d4d88.  return @kind void;
}
