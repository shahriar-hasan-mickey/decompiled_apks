record `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription` @kind class {
  `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`[] `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.e` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object, `int` v4 , `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.<init>:(Lorg/reactivestreams/Subscriber;ILio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4d2904.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4d290a.  v3:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4d290e.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d2914.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v3 @kind object;
  #L4d2918.  v3:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L4d291c.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4d2922.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.d` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L4d2926.  v3:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4d292a.  call `<init>`(v3) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4d2930.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.e` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v3 @kind object;
  #L4d2934.  v3:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`[v4];
  #L4d2938.  v0:= 0I;
  #L4d293a.  if v0 >= v4 then goto L4d2952;
  #L4d293e.  v1:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`;
  #L4d2942.  call `<init>`(v1, v2, v5) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4d2948.  v3[v0]:= v1 @kind object;
  #L4d294c.  v0:= v0 + 1;
  #L4d2950.  goto L4d293a;
  #L4d2952.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.a` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`[] := v3 @kind object;
  #L4d2956.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v5 @kind object;
  #L4d295a.  v3:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4d295e.  call `lazySet`(v3, v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L4d2964.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.a:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4d2a4c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.e` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4d2a50.  v1:= 0I;
  #L4d2a52.  call temp:= `compareAndSet`(v0, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4d2a58.  v0:= temp;
  #L4d2a5a.  if v0 == 0 then goto L4d2a70;
  #L4d2a5e.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.cancel:()V` @kind virtual;
  #L4d2a64.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d2a68.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d2a6e.  goto L4d2a86;
  #L4d2a70.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.e` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4d2a74.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d2a7a.  v0:= temp @kind object;
  #L4d2a7c.  if v3 == v0 then goto L4d2a86;
  #L4d2a80.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d2a86.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d2978.  v0:= v4.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.a` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`[] @kind object;
  #L4d297c.  v1:= length @variable v0;
  #L4d297e.  v2:= 0I;
  #L4d2980.  if v2 >= v1 then goto L4d2994;
  #L4d2984.  v3:= v0[v2] @kind object;
  #L4d2988.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$a;.a:()V` @kind virtual;
  #L4d298e.  v2:= v2 + 1;
  #L4d2992.  goto L4d2980;
  #L4d2994.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c` `e`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.e:(Ljava/lang/Object;)Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4d2880.  v0:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d2884.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d288a.  v0:= temp @kind object;
  #L4d288c.  v0:= (`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c`) v0 @kind object;
  #L4d2890.  v1:= 0I;
  #L4d2892.  if v0 != 0 then goto L4d28b2;
  #L4d2896.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c`;
  #L4d289a.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;.<init>:()V` @kind direct;
  #L4d28a0.  v2:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d28a4.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4d28aa.  v2:= temp;
  #L4d28ac.  if v2 != 0 then goto L4d28b2;
  #L4d28b0.  goto L4d2880;
  #L4d28b2.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;.b:()I` @kind virtual;
  #L4d28b8.  v2:= temp;
  #L4d28ba.  if v2 >= 0 then goto L4d28ca;
  #L4d28be.  v2:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d28c2.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4d28c8.  goto L4d2880;
  #L4d28ca.  if v2 != 0 then goto L4d28d4;
  #L4d28ce.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.a` @type ^`java.lang.Object` := v4 @kind object;
  #L4d28d2.  goto L4d28d8;
  #L4d28d4.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.b` @type ^`java.lang.Object` := v4 @kind object;
  #L4d28d8.  call temp:= `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;.a:()Z` @kind virtual;
  #L4d28de.  v4:= temp;
  #L4d28e0.  if v4 == 0 then goto L4d28f0;
  #L4d28e4.  v4:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d28e8.  call temp:= `compareAndSet`(v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4d28ee.  return v0 @kind object;
  #L4d28f0.  return v1 @kind object;
}
procedure `void` `f`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.f:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4d29a8.  if v3 == 0 then goto L4d29e8;
  #L4d29ac.  call temp:= `e`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.e:(Ljava/lang/Object;)Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;` @kind virtual;
  #L4d29b2.  v3:= temp @kind object;
  #L4d29b4.  if v3 == 0 then goto L4d29e8;
  #L4d29b8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4d29bc.  v1:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.a` @type ^`java.lang.Object` @kind object;
  #L4d29c0.  v3:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.b` @type ^`java.lang.Object` @kind object;
  #L4d29c4.  call temp:= `apply`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4d29ca.  v3:= temp @kind object;
  #L4d29cc.  v0:= "The reducer returned a null value" @kind object;
  #L4d29d0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d29d6.  goto L4d29ac;
  #L4d29d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d29da.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d29e0.  call `a`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4d29e6.  return @kind void;
  #L4d29e8.  v3:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4d29ec.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4d29f2.  v3:= temp;
  #L4d29f4.  if v3 != 0 then goto L4d2a2e;
  #L4d29f8.  v3:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d29fc.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d2a02.  v3:= temp @kind object;
  #L4d2a04.  v3:= (`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c`) v3 @kind object;
  #L4d2a08.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d2a0c.  v1:= 0I;
  #L4d2a0e.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4d2a14.  if v3 == 0 then goto L4d2a24;
  #L4d2a18.  v3:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.a` @type ^`java.lang.Object` @kind object;
  #L4d2a1c.  call `complete`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4d2a22.  goto L4d2a2e;
  #L4d2a24.  v3:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d2a28.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4d2a2e.  return @kind void;
  catch `java.lang.Throwable` @[L4d29b8..L4d29d6] goto L4d29d8;
}
