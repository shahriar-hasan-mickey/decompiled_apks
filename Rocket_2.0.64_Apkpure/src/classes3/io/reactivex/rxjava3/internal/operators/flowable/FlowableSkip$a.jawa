record `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.b` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip$a;.<init>:(Lorg/reactivestreams/Subscriber;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a1374.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a137a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4a137e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.b` @type ^`long` := v2 @kind wide;
  #L4a1382.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a1394.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4a1398.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4a139e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a13b0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a13b4.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4a13ba.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a13cc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a13d0.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a13d6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4a13e8.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.b` @type ^`long` @kind wide;
  #L4a13ec.  v2:= 0L;
  #L4a13f0.  v4:= lcmp(v0, v2);
  #L4a13f4.  if v4 == 0 then goto L4a1404;
  #L4a13f8.  v2:= 1L;
  #L4a13fc.  v0:= v0 - v2 @kind long;
  #L4a13fe.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.b` @type ^`long` := v0 @kind wide;
  #L4a1402.  goto L4a140e;
  #L4a1404.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a1408.  call `onNext`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4a140e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a` v3 @kind this, `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a1420.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4a1424.  call temp:= `validate`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4a142a.  v0:= temp;
  #L4a142c.  if v0 == 0 then goto L4a1448;
  #L4a1430.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.b` @type ^`long` @kind wide;
  #L4a1434.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.c` @type ^`org.reactivestreams.Subscription` := v4 @kind object;
  #L4a1438.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a143c.  call `onSubscribe`(v2, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4a1442.  call `request`(v4, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4a1448.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a145c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4a1460.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4a1466.  return @kind void;
}
