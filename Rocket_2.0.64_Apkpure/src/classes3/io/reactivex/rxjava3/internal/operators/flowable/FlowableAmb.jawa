record `io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `org.reactivestreams.Publisher`[] `io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb` v0 @kind this, `org.reactivestreams.Publisher`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAmb;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4878f4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4878fa.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb.b` @type ^`org.reactivestreams.Publisher`[] := v1 @kind object;
  #L4878fe.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L487902.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb` v6 @kind this, `org.reactivestreams.Subscriber` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAmb;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L487914.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb.b` @type ^`org.reactivestreams.Publisher`[] @kind object;
  #L487918.  v1:= 0I;
  #L48791a.  if v0 != 0 then goto L48799a;
  #L48791e.  v0:= 8I;
  #L487922.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L487926.  v2:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb.c` @type ^`java.lang.Iterable` @kind object;
  #L48792a.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L487930.  v2:= temp @kind object;
  #L487932.  v3:= 0I;
  #L487934.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48793a.  v4:= temp;
  #L48793c.  if v4 == 0 then goto L48799c;
  #L487940.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L487946.  v4:= temp @kind object;
  #L487948.  v4:= (`org.reactivestreams.Publisher`) v4 @kind object;
  #L48794c.  if v4 != 0 then goto L487966;
  #L487950.  v0:= new `java.lang.NullPointerException`;
  #L487954.  v1:= "One of the sources is null" @kind object;
  #L487958.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48795e.  call `error`(v0, v7) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L487964.  return @kind void;
  #L487966.  v5:= length @variable v0;
  #L487968.  if v3 != v5 then goto L48797e;
  #L48796c.  v5:= v3 ^> 2;
  #L487970.  v5:= v5 + v3 @kind int;
  #L487972.  v5:= new `org.reactivestreams.Publisher`[v5];
  #L487976.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L48797c.  v0:= v5 @kind object;
  #L48797e.  v5:= v3 + 1;
  #L487982.  v0[v3]:= v4 @kind object;
  #L487986.  v3:= v5;
  #L487988.  goto L487934;
  #L48798a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48798c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L487992.  call `error`(v0, v7) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L487998.  return @kind void;
  #L48799a.  v3:= length @variable v0;
  #L48799c.  if v3 != 0 then goto L4879a8;
  #L4879a0.  call `complete`(v7) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4879a6.  return @kind void;
  #L4879a8.  v2:= 1I;
  #L4879aa.  if v3 != v2 then goto L4879ba;
  #L4879ae.  v0:= v0[v1] @kind object;
  #L4879b2.  call `subscribe`(v0, v7) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4879b8.  return @kind void;
  #L4879ba.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb$a`;
  #L4879be.  call `<init>`(v1, v7, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAmb$a;.<init>:(Lorg/reactivestreams/Subscriber;I)V` @kind direct;
  #L4879c4.  call `a`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAmb$a;.a:([Lorg/reactivestreams/Publisher;)V` @kind virtual;
  #L4879ca.  return @kind void;
  catch `java.lang.Throwable` @[L487926..L487986] goto L48798a;
}
