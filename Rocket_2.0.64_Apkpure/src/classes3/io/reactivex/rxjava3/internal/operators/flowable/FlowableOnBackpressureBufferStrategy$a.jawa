record `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBufferStrategy$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L49a33c.  call temp:= `values`() @signature `Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;.values:()[Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;` @kind static;
  #L49a342.  v0:= temp @kind object;
  #L49a344.  v0:= length @variable v0;
  #L49a346.  v0:= new `int`[v0];
  #L49a34a.  `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$a.a` @type ^`int`[] := v0 @kind object;
  #L49a34e.  v1:= `@@io.reactivex.rxjava3.core.BackpressureOverflowStrategy.DROP_LATEST` @type ^`io.reactivex.rxjava3.core.BackpressureOverflowStrategy` @kind object;
  #L49a352.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L49a358.  v1:= temp;
  #L49a35a.  v2:= 1I;
  #L49a35c.  v0[v1]:= v2;
  #L49a360.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$a.a` @type ^`int`[] @kind object;
  #L49a364.  v1:= `@@io.reactivex.rxjava3.core.BackpressureOverflowStrategy.DROP_OLDEST` @type ^`io.reactivex.rxjava3.core.BackpressureOverflowStrategy` @kind object;
  #L49a368.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L49a36e.  v1:= temp;
  #L49a370.  v2:= 2I;
  #L49a372.  v0[v1]:= v2;
  #L49a376.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L49a34e..L49a360] goto L49a360;
  catch `java.lang.NoSuchFieldError` @[L49a360..L49a376] goto L49a376;
}
