record `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b65e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b65ea.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4b65ee.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4b65f2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b6604.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b6608.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b660e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b65c4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b65c8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4b65ce.  v0:= temp;
  #L4b65d0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b6620.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4b6624.  if v0 != 0 then goto L4b663c;
  #L4b6628.  v0:= 1I;
  #L4b662a.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b662e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b6632.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4b6636.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b663c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b6650.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4b6654.  if v0 == 0 then goto L4b6660;
  #L4b6658.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b665e.  return @kind void;
  #L4b6660.  v0:= 1I;
  #L4b6662.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b6666.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b666a.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b6670.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b6684.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4b6688.  if v0 == 0 then goto L4b668e;
  #L4b668c.  return @kind void;
  #L4b668e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4b6692.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4b6698.  v2:= temp;
  #L4b669a.  if v2 == 0 then goto L4b66bc;
  #L4b669e.  v2:= 1I;
  #L4b66a0.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4b66a4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b66a8.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b66ae.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b66b2.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b66b6.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b66bc.  return @kind void;
  #L4b66be.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b66c0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b66c6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b66ca.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b66d0.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b66d6.  return @kind void;
  catch `java.lang.Throwable` @[L4b668e..L4b669a] goto L4b66be;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b66f4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b66f8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b66fe.  v0:= temp;
  #L4b6700.  if v0 == 0 then goto L4b6712;
  #L4b6704.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4b6708.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b670c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b6712.  return @kind void;
}
