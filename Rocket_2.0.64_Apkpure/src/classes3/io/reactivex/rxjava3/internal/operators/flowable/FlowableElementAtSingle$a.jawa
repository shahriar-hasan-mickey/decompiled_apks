record `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.c` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.e` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;JLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4909cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4909d2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4909d6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.b` @type ^`long` := v2 @kind wide;
  #L4909da.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.c` @type ^`java.lang.Object` := v4 @kind object;
  #L4909de.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4909f0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4909f4.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4909fa.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4909fe.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L490a02.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4909a8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4909ac.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4909b0.  if v0 != v1 then goto L4909b8;
  #L4909b4.  v0:= 1I;
  #L4909b6.  goto L4909ba;
  #L4909b8.  v0:= 0I;
  #L4909ba.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L490a14.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L490a18.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L490a1c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L490a20.  if v0 != 0 then goto L490a52;
  #L490a24.  v0:= 1I;
  #L490a26.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L490a2a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L490a2e.  if v0 == 0 then goto L490a3e;
  #L490a32.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L490a36.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L490a3c.  goto L490a52;
  #L490a3e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L490a42.  v1:= new `java.util.NoSuchElementException`;
  #L490a46.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L490a4c.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L490a52.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L490a64.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L490a68.  if v0 == 0 then goto L490a74;
  #L490a6c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L490a72.  return @kind void;
  #L490a74.  v0:= 1I;
  #L490a76.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L490a7a.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L490a7e.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L490a82.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L490a86.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L490a8c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L490aa0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L490aa4.  if v0 == 0 then goto L490aaa;
  #L490aa8.  return @kind void;
  #L490aaa.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.e` @type ^`long` @kind wide;
  #L490aae.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.b` @type ^`long` @kind wide;
  #L490ab2.  v4:= lcmp(v0, v2);
  #L490ab6.  if v4 != 0 then goto L490ade;
  #L490aba.  v0:= 1I;
  #L490abc.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L490ac0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L490ac4.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L490aca.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L490ace.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L490ad2.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L490ad6.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L490adc.  return @kind void;
  #L490ade.  v2:= 1L;
  #L490ae2.  v0:= v0 + v2 @kind long;
  #L490ae4.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.e` @type ^`long` := v0 @kind wide;
  #L490ae8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v4 @kind this, `org.reactivestreams.Subscription` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L490afc.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L490b00.  call temp:= `validate`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L490b06.  v0:= temp;
  #L490b08.  if v0 == 0 then goto L490b2a;
  #L490b0c.  v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v5 @kind object;
  #L490b10.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L490b14.  call `onSubscribe`(v0, v4) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L490b1a.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.b` @type ^`long` @kind wide;
  #L490b1e.  v2:= 1L;
  #L490b22.  v0:= v0 + v2 @kind long;
  #L490b24.  call `request`(v5, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L490b2a.  return @kind void;
}
