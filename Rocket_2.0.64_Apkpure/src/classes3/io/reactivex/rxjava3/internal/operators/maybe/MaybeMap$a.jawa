record `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ade18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ade1e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4ade22.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4ade26.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ade38.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ade3c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ade40.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4ade44.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ade4a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4addf8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4addfc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ade02.  v0:= temp;
  #L4ade04.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ade5c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ade60.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4ade66.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ade78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ade7c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ade82.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ade94.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ade98.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ade9e.  v0:= temp;
  #L4adea0.  if v0 == 0 then goto L4adeb2;
  #L4adea4.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4adea8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4adeac.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4adeb2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4adec4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4adec8.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4adece.  v2:= temp @kind object;
  #L4aded0.  v0:= "The mapper returned a null item" @kind object;
  #L4aded4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4adeda.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4adede.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4adee4.  return @kind void;
  #L4adee6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4adee8.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4adeee.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4adef2.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4adef8.  return @kind void;
  catch `java.lang.Throwable` @[L4adec4..L4adeda] goto L4adee6;
}
