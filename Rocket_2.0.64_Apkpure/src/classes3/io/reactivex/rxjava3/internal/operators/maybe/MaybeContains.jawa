record `io.reactivex.rxjava3.internal.operators.maybe.MaybeContains` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.HasUpstreamMaybeSource` @kind interface {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeContains.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.maybe.MaybeContains.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeContains` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeContains;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4aa044.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4aa04a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeContains.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v1 @kind object;
  #L4aa04e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeContains.b` @type ^`java.lang.Object` := v2 @kind object;
  #L4aa052.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.MaybeSource` `source`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeContains` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeContains;.source:()Lio/reactivex/rxjava3/core/MaybeSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa02c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeContains.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4aa030.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeContains` v3 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeContains;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4aa064.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeContains.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4aa068.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeContains$a`;
  #L4aa06c.  v2:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeContains.b` @type ^`java.lang.Object` @kind object;
  #L4aa070.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeContains$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/lang/Object;)V` @kind direct;
  #L4aa076.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4aa07c.  return @kind void;
}
