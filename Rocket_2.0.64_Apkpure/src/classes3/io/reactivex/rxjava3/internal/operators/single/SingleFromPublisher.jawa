record `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d6c50.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4d6c56.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher.a` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L4d6c5a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4d6c6c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher.a` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4d6c70.  v1:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a`;
  #L4d6c74.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4d6c7a.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4d6c80.  return @kind void;
}
