record `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/core/SingleSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d7824.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d782a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d782e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.c` @type ^`io.reactivex.rxjava3.core.SingleSource` := v2 @kind object;
  #L4d7832.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4d7836.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4d783c.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4d7840.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d7854.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d785a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4d785e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4d7864.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d77fc.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d7802.  v0:= temp @kind object;
  #L4d7804.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d7808.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d780e.  v0:= temp;
  #L4d7810.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d7878.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d787c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d7882.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4d7894.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d789a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d78ac.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d78b0.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d78b6.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d78c8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.c` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L4d78cc.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d78d2.  return @kind void;
}
