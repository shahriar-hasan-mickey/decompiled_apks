record `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.BasicIntQueueDisposable` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.g` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4be044.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L4be04a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4be04e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4be052.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.d` @type ^`boolean` := v3 @kind boolean;
  #L4be056.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4be05a.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4be060.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L4be064.  v1:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4be068.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4be06e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v1 @kind object;
  #L4be072.  v1:= 1I;
  #L4be074.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L4be07a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.a:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a$a;)V` @AccessFlag  {
    temp;
    v0;

  #L4be0d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be0dc.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4be0e2.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onComplete:()V` @kind virtual;
  #L4be0e8.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L4be08c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be0a0.  v0:= 1I;
  #L4be0a2.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4be0a6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be0aa.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4be0b0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be0b4.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4be0ba.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be0be.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L4be0c4.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a$a` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.e:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a$a;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L4be0fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be100.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4be106.  call `onError`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4be10c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bdfe4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bdfe8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4bdfee.  v0:= temp;
  #L4bdff0.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be004.  v0:= 1I;
  #L4be006.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be120.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4be126.  v0:= temp;
  #L4be128.  if v0 != 0 then goto L4be13a;
  #L4be12c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be130.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4be134.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4be13a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be14c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be150.  call temp:= `tryAddThrowableOrReport`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4be156.  v2:= temp;
  #L4be158.  if v2 == 0 then goto L4be1a8;
  #L4be15c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.d` @type ^`boolean` @kind boolean;
  #L4be160.  if v2 == 0 then goto L4be180;
  #L4be164.  call temp:= `decrementAndGet`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4be16a.  v2:= temp;
  #L4be16c.  if v2 != 0 then goto L4be1a8;
  #L4be170.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be174.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4be178.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4be17e.  goto L4be1a8;
  #L4be180.  v2:= 1I;
  #L4be182.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.g` @type ^`boolean` := v2 @kind boolean;
  #L4be186.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be18a.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4be190.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be194.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4be19a.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be19e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4be1a2.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4be1a8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be1bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4be1c0.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4be1c6.  v3:= temp @kind object;
  #L4be1c8.  v0:= "The mapper returned a null CompletableSource" @kind object;
  #L4be1cc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4be1d2.  v3:= (`io.reactivex.rxjava3.core.CompletableSource`) v3 @kind object;
  #L4be1d6.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4be1dc.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a$a`;
  #L4be1e0.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;)V` @kind direct;
  #L4be1e6.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.g` @type ^`boolean` @kind boolean;
  #L4be1ea.  if v1 != 0 then goto L4be204;
  #L4be1ee.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be1f2.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4be1f8.  v1:= temp;
  #L4be1fa.  if v1 == 0 then goto L4be204;
  #L4be1fe.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4be204.  return @kind void;
  #L4be206.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4be208.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4be20e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be212.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4be218.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4be21e.  return @kind void;
  catch `java.lang.Throwable` @[L4be1bc..L4be1d6] goto L4be206;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be23c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be240.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4be246.  v0:= temp;
  #L4be248.  if v0 == 0 then goto L4be25a;
  #L4be24c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4be250.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4be254.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4be25a.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be030.  v0:= 0I;
  #L4be032.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L4be018.  v1:= v1 ^& 2;
  #L4be01c.  return v1;
}
