record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$h` @kind class @AccessFlag ABSTRACT extends `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` @kind class {
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$h.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$h` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$h;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48dd14.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L48dd1a.  return @kind void;
}
procedure `void` `f`() @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$h;.f:()V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$h` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$h;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48dd2c.  call temp:= `isCancelled`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.isCancelled:()Z` @kind virtual;
  #L48dd32.  v0:= temp;
  #L48dd34.  if v0 == 0 then goto L48dd3a;
  #L48dd38.  return @kind void;
  #L48dd3a.  if v6 != 0 then goto L48dd52;
  #L48dd3e.  v6:= "onNext called with a null value." @kind object;
  #L48dd42.  call temp:= `createNullPointerException`(v6) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L48dd48.  v6:= temp @kind object;
  #L48dd4a.  call `onError`(v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48dd50.  return @kind void;
  #L48dd52.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L48dd58.  v0:= temp @kind wide;
  #L48dd5a.  v2:= 0L;
  #L48dd5e.  v4:= lcmp(v0, v2);
  #L48dd62.  if v4 == 0 then goto L48dd7c;
  #L48dd66.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48dd6a.  call `onNext`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L48dd70.  v0:= 1L;
  #L48dd74.  call temp:= `produced`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L48dd7a.  goto L48dd82;
  #L48dd7c.  call `f`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$h;.f:()V` @kind virtual;
  #L48dd82.  return @kind void;
}
