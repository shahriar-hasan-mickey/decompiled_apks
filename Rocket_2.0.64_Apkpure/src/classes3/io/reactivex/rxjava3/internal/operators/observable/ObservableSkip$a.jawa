record `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.b` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c8b0c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c8b12.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c8b16.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.b` @type ^`long` := v2 @kind wide;
  #L4c8b1a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8b2c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c8b30.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c8b36.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8aec.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c8af0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4c8af6.  v0:= temp;
  #L4c8af8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8b48.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8b4c.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c8b52.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8b64.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8b68.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c8b6e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c8b80.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.b` @type ^`long` @kind wide;
  #L4c8b84.  v2:= 0L;
  #L4c8b88.  v4:= lcmp(v0, v2);
  #L4c8b8c.  if v4 == 0 then goto L4c8b9c;
  #L4c8b90.  v2:= 1L;
  #L4c8b94.  v0:= v0 - v2 @kind long;
  #L4c8b96.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.b` @type ^`long` := v0 @kind wide;
  #L4c8b9a.  goto L4c8ba6;
  #L4c8b9c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8ba0.  call `onNext`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c8ba6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8bb8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c8bbc.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c8bc2.  v0:= temp;
  #L4c8bc4.  if v0 == 0 then goto L4c8bd6;
  #L4c8bc8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c8bcc.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8bd0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c8bd6.  return @kind void;
}
