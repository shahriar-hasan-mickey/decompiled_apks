record `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.g` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4be338.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4be33e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4be342.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4be346.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.d` @type ^`boolean` := v3 @kind boolean;
  #L4be34a.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4be34e.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4be354.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L4be358.  v1:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4be35c.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4be362.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v1 @kind object;
  #L4be366.  v1:= 1I;
  #L4be368.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L4be36e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.a:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a$a;)V` @AccessFlag  {
    temp;
    v0;

  #L4be3b8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be3bc.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4be3c2.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.onComplete:()V` @kind virtual;
  #L4be3c8.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a$a` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.b:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a$a;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L4be3dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be3e0.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4be3e6.  call `onError`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4be3ec.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be380.  v0:= 1I;
  #L4be382.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4be386.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be38a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4be390.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be394.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4be39a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be39e.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L4be3a4.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be318.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be31c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4be322.  v0:= temp;
  #L4be324.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be400.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4be406.  v0:= temp;
  #L4be408.  if v0 != 0 then goto L4be41a;
  #L4be40c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be410.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4be414.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4be41a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be42c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be430.  call temp:= `tryAddThrowableOrReport`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4be436.  v2:= temp;
  #L4be438.  if v2 == 0 then goto L4be488;
  #L4be43c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.d` @type ^`boolean` @kind boolean;
  #L4be440.  if v2 == 0 then goto L4be460;
  #L4be444.  call temp:= `decrementAndGet`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4be44a.  v2:= temp;
  #L4be44c.  if v2 != 0 then goto L4be488;
  #L4be450.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be454.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4be458.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4be45e.  goto L4be488;
  #L4be460.  v2:= 1I;
  #L4be462.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.g` @type ^`boolean` := v2 @kind boolean;
  #L4be466.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be46a.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4be470.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be474.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4be47a.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4be47e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4be482.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4be488.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be49c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4be4a0.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4be4a6.  v3:= temp @kind object;
  #L4be4a8.  v0:= "The mapper returned a null CompletableSource" @kind object;
  #L4be4ac.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4be4b2.  v3:= (`io.reactivex.rxjava3.core.CompletableSource`) v3 @kind object;
  #L4be4b6.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4be4bc.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a$a`;
  #L4be4c0.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;)V` @kind direct;
  #L4be4c6.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.g` @type ^`boolean` @kind boolean;
  #L4be4ca.  if v1 != 0 then goto L4be4e4;
  #L4be4ce.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4be4d2.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4be4d8.  v1:= temp;
  #L4be4da.  if v1 == 0 then goto L4be4e4;
  #L4be4de.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4be4e4.  return @kind void;
  #L4be4e6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4be4e8.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4be4ee.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be4f2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4be4f8.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4be4fe.  return @kind void;
  catch `java.lang.Throwable` @[L4be49c..L4be4b6] goto L4be4e6;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be51c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4be520.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4be526.  v0:= temp;
  #L4be528.  if v0 == 0 then goto L4be53a;
  #L4be52c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4be530.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4be534.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4be53a.  return @kind void;
}
