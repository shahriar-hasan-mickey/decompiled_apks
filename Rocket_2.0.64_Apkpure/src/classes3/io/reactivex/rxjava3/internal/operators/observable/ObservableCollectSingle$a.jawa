record `io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiConsumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b8b3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b8b42.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4b8b46.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` := v3 @kind object;
  #L4b8b4a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.c` @type ^`java.lang.Object` := v2 @kind object;
  #L4b8b4e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b8b60.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b8b64.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b8b6a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b8b1c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b8b20.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4b8b26.  v0:= temp;
  #L4b8b28.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b8b7c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.e` @type ^`boolean` @kind boolean;
  #L4b8b80.  if v0 == 0 then goto L4b8b86;
  #L4b8b84.  return @kind void;
  #L4b8b86.  v0:= 1I;
  #L4b8b88.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4b8b8c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b8b90.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4b8b94.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b8b9a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b8bac.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.e` @type ^`boolean` @kind boolean;
  #L4b8bb0.  if v0 == 0 then goto L4b8bbc;
  #L4b8bb4.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b8bba.  return @kind void;
  #L4b8bbc.  v0:= 1I;
  #L4b8bbe.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4b8bc2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b8bc6.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b8bcc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b8be0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.e` @type ^`boolean` @kind boolean;
  #L4b8be4.  if v0 == 0 then goto L4b8bea;
  #L4b8be8.  return @kind void;
  #L4b8bea.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L4b8bee.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4b8bf2.  call `accept`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4b8bf8.  goto L4b8c12;
  #L4b8bfa.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b8bfc.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b8c02.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b8c06.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b8c0c.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b8c12.  return @kind void;
  catch `java.lang.Throwable` @[L4b8bea..L4b8bf8] goto L4b8bfa;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b8c30.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b8c34.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b8c3a.  v0:= temp;
  #L4b8c3c.  if v0 == 0 then goto L4b8c4e;
  #L4b8c40.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4b8c44.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b8c48.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b8c4e.  return @kind void;
}
