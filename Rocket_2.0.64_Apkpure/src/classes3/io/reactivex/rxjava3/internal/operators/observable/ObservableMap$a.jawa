record `io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.BasicFuseableObserver` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMap$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c2928.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/observers/BasicFuseableObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4c292e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4c2932.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMap$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2944.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BasicFuseableObserver.done` @type ^`boolean` @kind boolean;
  #L4c2948.  if v0 == 0 then goto L4c294e;
  #L4c294c.  return @kind void;
  #L4c294e.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BasicFuseableObserver.sourceMode` @type ^`int`;
  #L4c2952.  if v0 == 0 then goto L4c2964;
  #L4c2956.  v2:= v1.`io.reactivex.rxjava3.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c295a.  v0:= 0I;
  #L4c295c.  call `onNext`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c2962.  return @kind void;
  #L4c2964.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c2968.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c296e.  v2:= temp @kind object;
  #L4c2970.  v0:= "The mapper function returned a null value." @kind object;
  #L4c2974.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c297a.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c297e.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c2984.  return @kind void;
  #L4c2986.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c2988.  call `fail`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/observers/BasicFuseableObserver;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c298e.  return @kind void;
  catch `java.lang.Throwable` @[L4c2964..L4c297a] goto L4c2986;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMap$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c28ec.  v0:= v2.`io.reactivex.rxjava3.internal.observers.BasicFuseableObserver.qd` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueDisposable` @kind object;
  #L4c28f0.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4c28f6.  v0:= temp @kind object;
  #L4c28f8.  if v0 == 0 then goto L4c2914;
  #L4c28fc.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c2900.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c2906.  v0:= temp @kind object;
  #L4c2908.  v1:= "The mapper function returned a null value." @kind object;
  #L4c290c.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c2912.  goto L4c2916;
  #L4c2914.  v0:= 0I;
  #L4c2916.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMap$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMap$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L4c28d0.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/observers/BasicFuseableObserver;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L4c28d6.  v1:= temp;
  #L4c28d8.  return v1;
}
