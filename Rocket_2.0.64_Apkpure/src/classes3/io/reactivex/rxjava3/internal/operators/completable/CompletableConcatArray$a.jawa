record `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.CompletableSource`[] `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.c` @AccessFlag ;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `io.reactivex.rxjava3.core.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatArray$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;[Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L483360.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L483366.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L48336a.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.b` @type ^`io.reactivex.rxjava3.core.CompletableSource`[] := v2 @kind object;
  #L48336e.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L483372.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L483378.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.d` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L48337c.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatArray$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L483390.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.d` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L483394.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L48339a.  v0:= temp;
  #L48339c.  if v0 == 0 then goto L4833a2;
  #L4833a0.  return @kind void;
  #L4833a2.  call temp:= `getAndIncrement`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4833a8.  v0:= temp;
  #L4833aa.  if v0 == 0 then goto L4833b0;
  #L4833ae.  return @kind void;
  #L4833b0.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.b` @type ^`io.reactivex.rxjava3.core.CompletableSource`[] @kind object;
  #L4833b4.  v1:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.d` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4833b8.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L4833be.  v1:= temp;
  #L4833c0.  if v1 == 0 then goto L4833c6;
  #L4833c4.  return @kind void;
  #L4833c6.  v1:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.c` @type ^`int`;
  #L4833ca.  v2:= v1 + 1;
  #L4833ce.  v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.c` @type ^`int` := v2;
  #L4833d2.  v2:= length @variable v0;
  #L4833d4.  if v1 != v2 then goto L4833e4;
  #L4833d8.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4833dc.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4833e2.  return @kind void;
  #L4833e4.  v1:= v0[v1] @kind object;
  #L4833e8.  call `subscribe`(v1, v3) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4833ee.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4833f4.  v1:= temp;
  #L4833f6.  if v1 != 0 then goto L4833b4;
  #L4833fa.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatArray$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L48340c.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatArray$a;.a:()V` @kind virtual;
  #L483412.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatArray$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483424.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L483428.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48342e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatArray$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483440.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray$a.d` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L483444.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L48344a.  return @kind void;
}
