record `io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ada9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4adaa2.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4adaa6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4adab8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4adabc.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4adac2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ada7c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ada80.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ada86.  v0:= temp;
  #L4ada88.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4adad4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4adad8.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4adadc.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4adae2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4adaf4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4adaf8.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4adafe.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4adb10.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4adb14.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4adb1a.  v0:= temp;
  #L4adb1c.  if v0 == 0 then goto L4adb2e;
  #L4adb20.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4adb24.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4adb28.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4adb2e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4adb40.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4adb44.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4adb48.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4adb4e.  return @kind void;
}
