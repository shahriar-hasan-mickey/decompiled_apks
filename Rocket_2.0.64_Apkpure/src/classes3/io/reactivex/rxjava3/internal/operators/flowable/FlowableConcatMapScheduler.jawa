record `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.rxjava3.internal.util.ErrorMode` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48cc04.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L48cc0a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L48cc0e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.c` @type ^`int` := v3;
  #L48cc12.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.d` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v4 @kind object;
  #L48cc16.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.e` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L48cc1a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler` v8 @kind this, `org.reactivestreams.Subscriber` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L48cc2c.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$a.a` @type ^`int`[] @kind object;
  #L48cc30.  v1:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.d` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L48cc34.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L48cc3a.  v1:= temp;
  #L48cc3c.  v0:= v0[v1];
  #L48cc40.  v1:= 1I;
  #L48cc42.  if v0 == v1 then goto L48cca6;
  #L48cc46.  v1:= 2I;
  #L48cc48.  if v0 == v1 then goto L48cc76;
  #L48cc4c.  v0:= v8.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L48cc50.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$d`;
  #L48cc54.  v2:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L48cc58.  v3:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.c` @type ^`int`;
  #L48cc5c.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L48cc60.  call temp:= `createWorker`(v4) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L48cc66.  v4:= temp @kind object;
  #L48cc68.  call `<init>`(v1, v9, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler$d;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L48cc6e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L48cc74.  goto L48ccd4;
  #L48cc76.  v0:= v8.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L48cc7a.  v7:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$c`;
  #L48cc7e.  v3:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L48cc82.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.c` @type ^`int`;
  #L48cc86.  v5:= 1I;
  #L48cc88.  v1:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L48cc8c.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L48cc92.  v6:= temp @kind object;
  #L48cc94.  v1:= v7 @kind object;
  #L48cc96.  v2:= v9 @kind object;
  #L48cc98.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L48cc9e.  call `subscribe`(v0, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L48cca4.  goto L48ccd4;
  #L48cca6.  v0:= v8.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L48ccaa.  v7:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$c`;
  #L48ccae.  v3:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L48ccb2.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.c` @type ^`int`;
  #L48ccb6.  v5:= 0I;
  #L48ccb8.  v1:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L48ccbc.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L48ccc2.  v6:= temp @kind object;
  #L48ccc4.  v1:= v7 @kind object;
  #L48ccc6.  v2:= v9 @kind object;
  #L48ccc8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L48ccce.  call `subscribe`(v0, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L48ccd4.  return @kind void;
}
