record `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.BasicQueueDisposable` @kind class {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.e` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bf5ac.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BasicQueueDisposable;.<init>:()V` @kind direct;
  #L4bf5b2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4bf5b6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] := v2 @kind object;
  #L4bf5ba.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4bf600.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] @kind object;
  #L4bf604.  v1:= length @variable v0;
  #L4bf606.  v2:= 0I;
  #L4bf608.  if v2 >= v1 then goto L4bf672;
  #L4bf60c.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.isDisposed:()Z` @kind virtual;
  #L4bf612.  v3:= temp;
  #L4bf614.  if v3 != 0 then goto L4bf672;
  #L4bf618.  v3:= v0[v2] @kind object;
  #L4bf61c.  if v3 != 0 then goto L4bf662;
  #L4bf620.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bf624.  v1:= new `java.lang.NullPointerException`;
  #L4bf628.  v3:= new `java.lang.StringBuilder`;
  #L4bf62c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4bf632.  v4:= "The element at index " @kind object;
  #L4bf636.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4bf63c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4bf642.  v2:= " is null" @kind object;
  #L4bf646.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4bf64c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4bf652.  v2:= temp @kind object;
  #L4bf654.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4bf65a.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bf660.  return @kind void;
  #L4bf662.  v4:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bf666.  call `onNext`(v4, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4bf66c.  v2:= v2 + 1;
  #L4bf670.  goto L4bf608;
  #L4bf672.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.isDisposed:()Z` @kind virtual;
  #L4bf678.  v0:= temp;
  #L4bf67a.  if v0 != 0 then goto L4bf688;
  #L4bf67e.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bf682.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4bf688.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf5cc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] @kind object;
  #L4bf5d0.  v0:= length @variable v0;
  #L4bf5d2.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @type ^`int` := v0;
  #L4bf5d6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf5e8.  v0:= 1I;
  #L4bf5ea.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4bf5ee.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf50c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.e` @type ^`boolean` @kind boolean;
  #L4bf510.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bf524.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @type ^`int`;
  #L4bf528.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] @kind object;
  #L4bf52c.  v1:= length @variable v1;
  #L4bf52e.  if v0 != v1 then goto L4bf536;
  #L4bf532.  v0:= 1I;
  #L4bf534.  goto L4bf538;
  #L4bf536.  v0:= 0I;
  #L4bf538.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4bf570.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @type ^`int`;
  #L4bf574.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] @kind object;
  #L4bf578.  v2:= length @variable v1;
  #L4bf57a.  if v0 == v2 then goto L4bf596;
  #L4bf57e.  v2:= v0 + 1;
  #L4bf582.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @type ^`int` := v2;
  #L4bf586.  v0:= v1[v0] @kind object;
  #L4bf58a.  v1:= "The array element is null" @kind object;
  #L4bf58e.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bf594.  return v0 @kind object;
  #L4bf596.  v0:= 0I;
  #L4bf598.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf54c.  v0:= 1I;
  #L4bf54e.  v2:= v2 ^& v0 @kind int;
  #L4bf550.  if v2 == 0 then goto L4bf55a;
  #L4bf554.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4bf558.  return v0;
  #L4bf55a.  v2:= 0I;
  #L4bf55c.  return v2;
}
