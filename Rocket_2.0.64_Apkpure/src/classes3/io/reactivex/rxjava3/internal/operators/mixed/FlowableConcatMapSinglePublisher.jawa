record `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.internal.util.ErrorMode` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b23a0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4b23a6.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.b` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L4b23aa.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4b23ae.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.d` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v3 @kind object;
  #L4b23b2.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.e` @type ^`int` := v4;
  #L4b23b6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSinglePublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b23c8.  v0:= v5.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4b23cc.  v1:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSingle$a`;
  #L4b23d0.  v2:= v5.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b23d4.  v3:= v5.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.e` @type ^`int`;
  #L4b23d8.  v4:= v5.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher.d` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4b23dc.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSingle$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4b23e2.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4b23e8.  return @kind void;
}
