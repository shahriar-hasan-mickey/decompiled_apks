record `io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.observers.LambdaConsumerIntrospection` @kind interface {
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a965c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4a9662.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.a` @type ^`io.reactivex.rxjava3.functions.Consumer` := v1 @kind object;
  #L4a9666.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4a966a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` := v3 @kind object;
  #L4a966e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4a9680.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4a9686.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a9610.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a9614.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a9618.  if v0 == v1 then goto L4a9620;
  #L4a961c.  v0:= 1I;
  #L4a961e.  goto L4a9622;
  #L4a9620.  v0:= 0I;
  #L4a9622.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a9634.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4a963a.  v0:= temp @kind object;
  #L4a963c.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4a9640.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4a9646.  v0:= temp;
  #L4a9648.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a9698.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4a969c.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4a96a2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a96a6.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4a96ac.  goto L4a96bc;
  #L4a96ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a96b0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a96b6.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a96bc.  return @kind void;
  catch `java.lang.Throwable` @[L4a96a2..L4a96ac] goto L4a96ae;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a96dc.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4a96e0.  call `lazySet`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4a96e6.  v0:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a96ea.  call `accept`(v0, v5) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4a96f0.  goto L4a971c;
  #L4a96f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a96f4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a96fa.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4a96fe.  v2:= 2I;
  #L4a9700.  v2:= new `java.lang.Throwable`[v2];
  #L4a9704.  v3:= 0I;
  #L4a9706.  v2[v3]:= v5 @kind object;
  #L4a970a.  v5:= 1I;
  #L4a970c.  v2[v5]:= v0 @kind object;
  #L4a9710.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4a9716.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a971c.  return @kind void;
  catch `java.lang.Throwable` @[L4a96e6..L4a96f0] goto L4a96f2;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4a973c.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4a9742.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCallbackObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a9754.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4a9758.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4a975e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCallbackObserver.a` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a9762.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4a9768.  goto L4a9778;
  #L4a976a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a976c.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a9772.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a9778.  return @kind void;
  catch `java.lang.Throwable` @[L4a975e..L4a9768] goto L4a976a;
}
