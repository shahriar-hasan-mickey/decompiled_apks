record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction` v0 @kind this, `io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ad0a0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4ad0a6.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` := v1 @kind object;
  #L4ad0aa.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromAction;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad080.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4ad084.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4ad08a.  v0:= 0I;
  #L4ad08c.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromAction;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4ad0bc.  call temp:= `b`() @signature `Ls0/d;.b:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4ad0c2.  v0:= temp @kind object;
  #L4ad0c4.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ad0ca.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ad0d0.  v1:= temp;
  #L4ad0d2.  if v1 != 0 then goto L4ad116;
  #L4ad0d6.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4ad0da.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4ad0e0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ad0e6.  v0:= temp;
  #L4ad0e8.  if v0 != 0 then goto L4ad116;
  #L4ad0ec.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4ad0f2.  goto L4ad116;
  #L4ad0f4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad0f6.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad0fc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ad102.  v0:= temp;
  #L4ad104.  if v0 != 0 then goto L4ad110;
  #L4ad108.  call `onError`(v3, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ad10e.  goto L4ad116;
  #L4ad110.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad116.  return @kind void;
  catch `java.lang.Throwable` @[L4ad0d6..L4ad0e0] goto L4ad0f4;
}
