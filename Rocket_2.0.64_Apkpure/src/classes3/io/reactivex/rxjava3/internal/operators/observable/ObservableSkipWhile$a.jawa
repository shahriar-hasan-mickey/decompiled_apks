record `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c9220.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c9226.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c922a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4c922e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9240.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c9244.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c924a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9200.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c9204.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4c920a.  v0:= temp;
  #L4c920c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c925c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c9260.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c9266.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9278.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c927c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c9282.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9294.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.d` @type ^`boolean` @kind boolean;
  #L4c9298.  if v0 == 0 then goto L4c92a8;
  #L4c929c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c92a0.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c92a6.  goto L4c92c8;
  #L4c92a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4c92ac.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4c92b2.  v0:= temp;
  #L4c92b4.  if v0 != 0 then goto L4c92c8;
  #L4c92b8.  v0:= 1I;
  #L4c92ba.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4c92be.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c92c2.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c92c8.  return @kind void;
  #L4c92ca.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c92cc.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c92d2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c92d6.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c92dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c92e0.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c92e6.  return @kind void;
  catch `java.lang.Throwable` @[L4c92a8..L4c92b4] goto L4c92ca;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9304.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c9308.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c930e.  v0:= temp;
  #L4c9310.  if v0 == 0 then goto L4c9322;
  #L4c9314.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c9318.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c931c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c9322.  return @kind void;
}
