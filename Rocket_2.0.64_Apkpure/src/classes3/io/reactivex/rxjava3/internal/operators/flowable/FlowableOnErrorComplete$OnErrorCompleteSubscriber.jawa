record `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete$OnErrorCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49ae54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ae5a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L49ae5e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L49ae62.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete$OnErrorCompleteSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49ae74.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49ae78.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L49ae7e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete$OnErrorCompleteSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49ae90.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49ae94.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L49ae9a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete$OnErrorCompleteSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49aeac.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L49aeb0.  call temp:= `test`(v0, v6) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L49aeb6.  v0:= temp;
  #L49aeb8.  if v0 == 0 then goto L49aec8;
  #L49aebc.  v6:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49aec0.  call `onComplete`(v6) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L49aec6.  goto L49aed2;
  #L49aec8.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49aecc.  call `onError`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L49aed2.  return @kind void;
  #L49aed4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49aed6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49aedc.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49aee0.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L49aee4.  v3:= 2I;
  #L49aee6.  v3:= new `java.lang.Throwable`[v3];
  #L49aeea.  v4:= 0I;
  #L49aeec.  v3[v4]:= v6 @kind object;
  #L49aef0.  v6:= 1I;
  #L49aef2.  v3[v6]:= v0 @kind object;
  #L49aef6.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L49aefc.  call `onError`(v1, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L49af02.  return @kind void;
  catch `java.lang.Throwable` @[L49aeac..L49aeb8] goto L49aed4;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete$OnErrorCompleteSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49af20.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49af24.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L49af2a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete$OnErrorCompleteSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49af3c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49af40.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L49af46.  v0:= temp;
  #L49af48.  if v0 == 0 then goto L49af5a;
  #L49af4c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L49af50.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49af54.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L49af5a.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete$OnErrorCompleteSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49af6c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete$OnErrorCompleteSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49af70.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L49af76.  return @kind void;
}
