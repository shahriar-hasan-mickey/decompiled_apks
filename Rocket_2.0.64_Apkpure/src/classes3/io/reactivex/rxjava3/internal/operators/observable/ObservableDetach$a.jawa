record `io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bc3fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bc402.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4bc406.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bc418.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bc41c.  v1:= `@@io.reactivex.rxjava3.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.EmptyComponent` @kind object;
  #L4bc420.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4bc424.  call temp:= `asObserver`() @signature `Lio/reactivex/rxjava3/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/rxjava3/core/Observer;` @kind static;
  #L4bc42a.  v1:= temp @kind object;
  #L4bc42c.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4bc430.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bc436.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc3dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bc3e0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4bc3e6.  v0:= temp;
  #L4bc3e8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bc448.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bc44c.  v1:= `@@io.reactivex.rxjava3.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.EmptyComponent` @kind object;
  #L4bc450.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4bc454.  call temp:= `asObserver`() @signature `Lio/reactivex/rxjava3/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/rxjava3/core/Observer;` @kind static;
  #L4bc45a.  v1:= temp @kind object;
  #L4bc45c.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4bc460.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4bc466.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bc478.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bc47c.  v1:= `@@io.reactivex.rxjava3.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.EmptyComponent` @kind object;
  #L4bc480.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4bc484.  call temp:= `asObserver`() @signature `Lio/reactivex/rxjava3/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/rxjava3/core/Observer;` @kind static;
  #L4bc48a.  v1:= temp @kind object;
  #L4bc48c.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4bc490.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bc496.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc4a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bc4ac.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4bc4b2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc4c4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bc4c8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4bc4ce.  v0:= temp;
  #L4bc4d0.  if v0 == 0 then goto L4bc4e2;
  #L4bc4d4.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4bc4d8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bc4dc.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4bc4e2.  return @kind void;
}
