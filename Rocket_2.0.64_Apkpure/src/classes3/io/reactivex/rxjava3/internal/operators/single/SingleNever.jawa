record `io.reactivex.rxjava3.internal.operators.single.SingleNever` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
}
global `io.reactivex.rxjava3.core.Single` `@@io.reactivex.rxjava3.internal.operators.single.SingleNever.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleNever;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4d735c.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleNever`;
  #L4d7360.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleNever;.<init>:()V` @kind direct;
  #L4d7366.  `@@io.reactivex.rxjava3.internal.operators.single.SingleNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Single` := v0 @kind object;
  #L4d736a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleNever` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleNever;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4d737c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4d7382.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleNever` v1 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleNever;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d7394.  v0:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.NEVER` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4d7398.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d739e.  return @kind void;
}
