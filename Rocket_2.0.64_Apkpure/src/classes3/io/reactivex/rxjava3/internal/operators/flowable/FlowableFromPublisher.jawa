record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L494aa8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L494aae.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher.b` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L494ab2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L494ac4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L494ac8.  call `subscribe`(v0, v2) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L494ace.  return @kind void;
}
