record `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.QueueDrainObserver` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.d` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.e` @AccessFlag ;
  `java.util.Collection` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4b755c.  v0:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue`;
  #L4b7560.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L4b7566.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;)V` @kind direct;
  #L4b756c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v3 @kind object;
  #L4b7570.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.c` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v4 @kind object;
  #L4b7574.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.a:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;

  #L4b75a4.  v1:= v0.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b75a8.  call `onNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4b75ae.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.accept:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b7588.  v2:= (`java.util.Collection`) v2 @kind object;
  #L4b758c.  call `a`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.a:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Collection;)V` @kind virtual;
  #L4b7592.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4b760c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4b7610.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4b7616.  v0:= temp @kind object;
  #L4b7618.  v1:= "The buffer supplied is null" @kind object;
  #L4b761c.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b7622.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4b7626.  @monitorenter v2
  #L4b7628.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.f` @type ^`java.util.Collection` @kind object;
  #L4b762c.  if v1 != 0 then goto L4b7634;
  #L4b7630.  @monitorexit v2
  #L4b7632.  return @kind void;
  #L4b7634.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.f` @type ^`java.util.Collection` := v0 @kind object;
  #L4b7638.  @monitorexit v2
  #L4b763a.  v0:= 0I;
  #L4b763c.  call `fastPathEmit`(v2, v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.fastPathEmit:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4b7642.  return @kind void;
  #L4b7644.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7646.  @monitorexit v2
  #L4b7648.  throw v0;
  #L4b764a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b764c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b7652.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.dispose:()V` @kind virtual;
  #L4b7658.  v1:= v2.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b765c.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b7662.  return @kind void;
  catch `java.lang.Throwable` @[L4b760c..L4b7626] goto L4b764a;
  catch `java.lang.Throwable` @[L4b7628..L4b763a] goto L4b7644;
  catch `java.lang.Throwable` @[L4b7646..L4b7648] goto L4b7644;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b75c0.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4b75c4.  if v0 != 0 then goto L4b75f8;
  #L4b75c8.  v0:= 1I;
  #L4b75ca.  v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L4b75ce.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b75d2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b75d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b75dc.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b75e2.  call temp:= `enter`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.enter:()Z` @kind virtual;
  #L4b75e8.  v0:= temp;
  #L4b75ea.  if v0 == 0 then goto L4b75f8;
  #L4b75ee.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L4b75f2.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4b75f8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7544.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4b7548.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b7694.  @monitorenter v3
  #L4b7696.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.f` @type ^`java.util.Collection` @kind object;
  #L4b769a.  if v0 != 0 then goto L4b76a2;
  #L4b769e.  @monitorexit v3
  #L4b76a0.  return @kind void;
  #L4b76a2.  v1:= 0I;
  #L4b76a4.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.f` @type ^`java.util.Collection` := v1 @kind object;
  #L4b76a8.  @monitorexit v3
  #L4b76aa.  v1:= v3.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L4b76ae.  call temp:= `offer`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4b76b4.  v0:= 1I;
  #L4b76b6.  v3.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L4b76ba.  call temp:= `enter`(v3) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.enter:()Z` @kind virtual;
  #L4b76c0.  v0:= temp;
  #L4b76c2.  if v0 == 0 then goto L4b76d6;
  #L4b76c6.  v0:= v3.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L4b76ca.  v1:= v3.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b76ce.  v2:= 0I;
  #L4b76d0.  call `drainLoop`(v0, v1, v2, v3, v3) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.drainLoop:(Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;Lio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)V` @kind static;
  #L4b76d6.  return @kind void;
  #L4b76d8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b76da.  @monitorexit v3
  #L4b76dc.  throw v0;
  catch `java.lang.Throwable` @[L4b7696..L4b76aa] goto L4b76d8;
  catch `java.lang.Throwable` @[L4b76da..L4b76dc] goto L4b76d8;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7704.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.dispose:()V` @kind virtual;
  #L4b770a.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b770e.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b7714.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7728.  @monitorenter v1
  #L4b772a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.f` @type ^`java.util.Collection` @kind object;
  #L4b772e.  if v0 != 0 then goto L4b7736;
  #L4b7732.  @monitorexit v1
  #L4b7734.  return @kind void;
  #L4b7736.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4b773c.  @monitorexit v1
  #L4b773e.  return @kind void;
  #L4b7740.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7742.  @monitorexit v1
  #L4b7744.  throw v2;
  catch `java.lang.Throwable` @[L4b772a..L4b7744] goto L4b7740;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b7764.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b7768.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b776e.  v0:= temp;
  #L4b7770.  if v0 == 0 then goto L4b77e0;
  #L4b7774.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v3 @kind object;
  #L4b7778.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4b777c.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4b7782.  v0:= temp @kind object;
  #L4b7784.  v1:= "The buffer supplied is null" @kind object;
  #L4b7788.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b778e.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4b7792.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.f` @type ^`java.util.Collection` := v0 @kind object;
  #L4b7796.  v3:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$a`;
  #L4b779a.  call `<init>`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary$b;)V` @kind direct;
  #L4b77a0.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v3 @kind object;
  #L4b77a4.  v0:= v2.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b77a8.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b77ae.  v0:= v2.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4b77b2.  if v0 != 0 then goto L4b77e0;
  #L4b77b6.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary$b.c` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4b77ba.  call `subscribe`(v0, v3) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4b77c0.  goto L4b77e0;
  #L4b77c2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b77c4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b77ca.  v1:= 1I;
  #L4b77cc.  v2.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` := v1 @kind boolean;
  #L4b77d0.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b77d6.  v3:= v2.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b77da.  call `error`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b77e0.  return @kind void;
  catch `java.lang.Throwable` @[L4b7778..L4b7792] goto L4b77c2;
}
