record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab584.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ab58a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4ab58e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4ab592.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.c` @type ^`io.reactivex.rxjava3.functions.Action` := v3 @kind object;
  #L4ab596.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab5a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4ab5ac.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4ab5b2.  goto L4ab5c2;
  #L4ab5b4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab5b6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab5bc.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab5c2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab5c6.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab5cc.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab5d0.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4ab5d4.  return @kind void;
  catch `java.lang.Throwable` @[L4ab5a8..L4ab5b2] goto L4ab5b4;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab564.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab568.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ab56e.  v0:= temp;
  #L4ab570.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab5f4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab5f8.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab5fc.  if v0 == v1 then goto L4ab60e;
  #L4ab600.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4ab604.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab608.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4ab60e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab620.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab624.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab628.  if v0 == v1 then goto L4ab63c;
  #L4ab62c.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4ab630.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab634.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ab63a.  goto L4ab642;
  #L4ab63c.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab642.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab654.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4ab658.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4ab65e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab662.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ab668.  v0:= temp;
  #L4ab66a.  if v0 == 0 then goto L4ab67c;
  #L4ab66e.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4ab672.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab676.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ab67c.  return @kind void;
  #L4ab67e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab680.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab686.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab68c.  v2:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab690.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4ab694.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab698.  call `error`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind static;
  #L4ab69e.  return @kind void;
  catch `java.lang.Throwable` @[L4ab654..L4ab65e] goto L4ab67e;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab6bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab6c0.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab6c4.  if v0 == v1 then goto L4ab6d6;
  #L4ab6c8.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4ab6cc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab6d0.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4ab6d6.  return @kind void;
}
