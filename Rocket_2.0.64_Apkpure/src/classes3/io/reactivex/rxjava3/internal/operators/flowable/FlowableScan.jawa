record `io.reactivex.rxjava3.internal.operators.flowable.FlowableScan` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.flowable.FlowableScan.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableScan` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScan;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a0308.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4a030e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableScan.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L4a0312.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableScan` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScan;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4a0324.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a0328.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableScan$a`;
  #L4a032c.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableScan.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4a0330.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScan$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a0336.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4a033c.  return @kind void;
}
