record `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiPredicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object, `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/BiPredicate;Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c6a64.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4c6a6a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c6a6e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v3 @kind object;
  #L4c6a72.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.c` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v4 @kind object;
  #L4c6a76.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.d` @type ^`io.reactivex.rxjava3.functions.BiPredicate` := v2 @kind object;
  #L4c6a7a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4c6b64.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4c6b6a.  v0:= temp;
  #L4c6b6c.  if v0 != 0 then goto L4c6b9c;
  #L4c6b70.  v0:= 1I;
  #L4c6b72.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4c6b76.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L4c6b7c.  v1:= temp;
  #L4c6b7e.  if v1 == 0 then goto L4c6b84;
  #L4c6b82.  return @kind void;
  #L4c6b84.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.c` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4c6b88.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4c6b8e.  v0:= -v0 @kind int;
  #L4c6b90.  call temp:= `addAndGet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4c6b96.  v0:= temp;
  #L4c6b98.  if v0 != 0 then goto L4c6b72;
  #L4c6b9c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c6a8c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c6a90.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c6a96.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4c6aa8.  v0:= 1I;
  #L4c6aaa.  v1:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.d` @type ^`io.reactivex.rxjava3.functions.BiPredicate` @kind object;
  #L4c6aae.  v2:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.e` @type ^`int`;
  #L4c6ab2.  v2:= v2 + v0 @kind int;
  #L4c6ab4.  v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.e` @type ^`int` := v2;
  #L4c6ab8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4c6abe.  v2:= temp @kind object;
  #L4c6ac0.  call temp:= `test`(v1, v2, v7) @signature `Lio/reactivex/rxjava3/functions/BiPredicate;.test:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #L4c6ac6.  v0:= temp;
  #L4c6ac8.  if v0 != 0 then goto L4c6ad8;
  #L4c6acc.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c6ad0.  call `onError`(v0, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c6ad6.  return @kind void;
  #L4c6ad8.  call `a`(v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate$a;.a:()V` @kind virtual;
  #L4c6ade.  return @kind void;
  #L4c6ae0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c6ae2.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c6ae8.  v2:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c6aec.  v3:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4c6af0.  v4:= 2I;
  #L4c6af2.  v4:= new `java.lang.Throwable`[v4];
  #L4c6af6.  v5:= 0I;
  #L4c6af8.  v4[v5]:= v7 @kind object;
  #L4c6afc.  v4[v0]:= v1 @kind object;
  #L4c6b00.  call `<init>`(v3, v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4c6b06.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c6b0c.  return @kind void;
  catch `java.lang.Throwable` @[L4c6aaa..L4c6ac8] goto L4c6ae0;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c6b2c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c6b30.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c6b36.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c6b48.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$a.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4c6b4c.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4c6b52.  return @kind void;
}
