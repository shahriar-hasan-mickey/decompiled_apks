record `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b5e8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b5e92.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4b5e96.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4b5e9a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5eac.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b5eb0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b5eb6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5e6c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b5e70.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4b5e76.  v0:= temp;
  #L4b5e78.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b5ec8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4b5ecc.  if v0 == 0 then goto L4b5ed2;
  #L4b5ed0.  return @kind void;
  #L4b5ed2.  v0:= 1I;
  #L4b5ed4.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b5ed8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b5edc.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b5ee0.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b5ee6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5ef8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4b5efc.  if v0 == 0 then goto L4b5f08;
  #L4b5f00.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b5f06.  return @kind void;
  #L4b5f08.  v0:= 1I;
  #L4b5f0a.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b5f0e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b5f12.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b5f18.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5f2c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4b5f30.  if v0 == 0 then goto L4b5f36;
  #L4b5f34.  return @kind void;
  #L4b5f36.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4b5f3a.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4b5f40.  v2:= temp;
  #L4b5f42.  if v2 != 0 then goto L4b5f64;
  #L4b5f46.  v2:= 1I;
  #L4b5f48.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4b5f4c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b5f50.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b5f56.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b5f5a.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4b5f5e.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b5f64.  return @kind void;
  #L4b5f66.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b5f68.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b5f6e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b5f72.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b5f78.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b5f7e.  return @kind void;
  catch `java.lang.Throwable` @[L4b5f36..L4b5f42] goto L4b5f66;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5f9c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b5fa0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b5fa6.  v0:= temp;
  #L4b5fa8.  if v0 == 0 then goto L4b5fba;
  #L4b5fac.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4b5fb0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b5fb4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b5fba.  return @kind void;
}
