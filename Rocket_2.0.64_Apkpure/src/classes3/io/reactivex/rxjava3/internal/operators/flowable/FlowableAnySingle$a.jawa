record `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L487b58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L487b5e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L487b62.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L487b66.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487b78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L487b7c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L487b82.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487b86.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L487b8a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L487b34.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L487b38.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487b3c.  if v0 != v1 then goto L487b44;
  #L487b40.  v0:= 1I;
  #L487b42.  goto L487b46;
  #L487b44.  v0:= 0I;
  #L487b46.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L487b9c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L487ba0.  if v0 != 0 then goto L487bc0;
  #L487ba4.  v0:= 1I;
  #L487ba6.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L487baa.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487bae.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L487bb2.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L487bb6.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L487bba.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L487bc0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487bd4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L487bd8.  if v0 == 0 then goto L487be4;
  #L487bdc.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L487be2.  return @kind void;
  #L487be4.  v0:= 1I;
  #L487be6.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L487bea.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487bee.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L487bf2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L487bf6.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L487bfc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487c10.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L487c14.  if v0 == 0 then goto L487c1a;
  #L487c18.  return @kind void;
  #L487c1a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L487c1e.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L487c24.  v2:= temp;
  #L487c26.  if v2 == 0 then goto L487c50;
  #L487c2a.  v2:= 1I;
  #L487c2c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L487c30.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L487c34.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L487c3a.  v2:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487c3e.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L487c42.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L487c46.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L487c4a.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L487c50.  return @kind void;
  #L487c52.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L487c54.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L487c5a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L487c5e.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L487c64.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487c68.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L487c6c.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L487c72.  return @kind void;
  catch `java.lang.Throwable` @[L487c1a..L487c26] goto L487c52;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L487c90.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L487c94.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L487c9a.  v0:= temp;
  #L487c9c.  if v0 == 0 then goto L487cbe;
  #L487ca0.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L487ca4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L487ca8.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L487cae.  v0:= 9223372036854775807L;
  #L487cb8.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L487cbe.  return @kind void;
}
