record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.e` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.f` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.g` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aa554.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4aa55a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4aa55e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.b` @type ^`long` := v2 @kind wide;
  #L4aa562.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4aa566.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4aa56a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.e` @type ^`boolean` := v6 @kind boolean;
  #L4aa56e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.a:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4aa670.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4aa674.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4aa678.  call temp:= `scheduleDirect`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4aa67e.  v3:= temp @kind object;
  #L4aa680.  call temp:= `replace`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aa686.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4aa580.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4aa586.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa52c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4aa532.  v0:= temp @kind object;
  #L4aa534.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4aa538.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aa53e.  v0:= temp;
  #L4aa540.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa598.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.b` @type ^`long` @kind wide;
  #L4aa59c.  call `a`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.a:(J)V` @kind virtual;
  #L4aa5a2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa5b4.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.g` @type ^`java.lang.Throwable` := v3 @kind object;
  #L4aa5b8.  v3:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.e` @type ^`boolean` @kind boolean;
  #L4aa5bc.  if v3 == 0 then goto L4aa5c6;
  #L4aa5c0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.b` @type ^`long` @kind wide;
  #L4aa5c4.  goto L4aa5ca;
  #L4aa5c6.  v0:= 0L;
  #L4aa5ca.  call `a`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.a:(J)V` @kind virtual;
  #L4aa5d0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4aa5e4.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aa5ea.  v1:= temp;
  #L4aa5ec.  if v1 == 0 then goto L4aa5fa;
  #L4aa5f0.  v1:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa5f4.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4aa5fa.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa60c.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.f` @type ^`java.lang.Object` := v3 @kind object;
  #L4aa610.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.b` @type ^`long` @kind wide;
  #L4aa614.  call `a`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.a:(J)V` @kind virtual;
  #L4aa61a.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa62c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.g` @type ^`java.lang.Throwable` @kind object;
  #L4aa630.  if v0 == 0 then goto L4aa640;
  #L4aa634.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa638.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aa63e.  goto L4aa65e;
  #L4aa640.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.f` @type ^`java.lang.Object` @kind object;
  #L4aa644.  if v0 == 0 then goto L4aa654;
  #L4aa648.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa64c.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4aa652.  goto L4aa65e;
  #L4aa654.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa658.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4aa65e.  return @kind void;
}
