record `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber` @kind class, `org.reactivestreams.Subscription` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.c` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.d` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.e` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.f` @AccessFlag ;
  `java.util.Collection` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Supplier;Lorg/reactivestreams/Publisher;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L488f50.  v0:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue`;
  #L488f54.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L488f5a.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/QueueDrainSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;)V` @kind direct;
  #L488f60.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.c` @type ^`io.reactivex.rxjava3.functions.Supplier` := v3 @kind object;
  #L488f64.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.d` @type ^`org.reactivestreams.Publisher` := v4 @kind object;
  #L488f68.  return @kind void;
}
procedure `boolean` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.a:(Lorg/reactivestreams/Subscriber;Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L488f18.  v1:= v0.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L488f1c.  call `onNext`(v1, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L488f22.  v1:= 1I;
  #L488f24.  return v1;
}
procedure `boolean` `accept`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.accept:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L488ef8.  v2:= (`java.util.Collection`) v2 @kind object;
  #L488efc.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.a:(Lorg/reactivestreams/Subscriber;Ljava/util/Collection;)Z` @kind virtual;
  #L488f02.  v1:= temp;
  #L488f04.  return v1;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L488fe0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.c` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L488fe4.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L488fea.  v0:= temp @kind object;
  #L488fec.  v1:= "The buffer supplied is null" @kind object;
  #L488ff0.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L488ff6.  v0:= (`java.util.Collection`) v0 @kind object;
  #L488ffa.  @monitorenter v2
  #L488ffc.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.g` @type ^`java.util.Collection` @kind object;
  #L489000.  if v1 != 0 then goto L489008;
  #L489004.  @monitorexit v2
  #L489006.  return @kind void;
  #L489008.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.g` @type ^`java.util.Collection` := v0 @kind object;
  #L48900c.  @monitorexit v2
  #L48900e.  v0:= 0I;
  #L489010.  call `fastPathEmitMax`(v2, v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/QueueDrainSubscriber;.fastPathEmitMax:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L489016.  return @kind void;
  #L489018.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48901a.  @monitorexit v2
  #L48901c.  throw v0;
  #L48901e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L489020.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L489026.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.cancel:()V` @kind virtual;
  #L48902c.  v1:= v2.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L489030.  call `onError`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L489036.  return @kind void;
  catch `java.lang.Throwable` @[L488fe0..L488ffa] goto L48901e;
  catch `java.lang.Throwable` @[L488ffc..L48900e] goto L489018;
  catch `java.lang.Throwable` @[L48901a..L48901c] goto L489018;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L488f7c.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.cancelled` @type ^`boolean` @kind boolean;
  #L488f80.  if v0 != 0 then goto L488fb4;
  #L488f84.  v0:= 1I;
  #L488f86.  v1.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L488f8a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L488f8e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L488f94.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L488f98.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L488f9e.  call temp:= `enter`(v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/QueueDrainSubscriber;.enter:()Z` @kind virtual;
  #L488fa4.  v0:= temp;
  #L488fa6.  if v0 == 0 then goto L488fb4;
  #L488faa.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L488fae.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L488fb4.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L488fc8.  call `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.cancel:()V` @kind virtual;
  #L488fce.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L488f38.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.cancelled` @type ^`boolean` @kind boolean;
  #L488f3c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L489068.  @monitorenter v3
  #L48906a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.g` @type ^`java.util.Collection` @kind object;
  #L48906e.  if v0 != 0 then goto L489076;
  #L489072.  @monitorexit v3
  #L489074.  return @kind void;
  #L489076.  v1:= 0I;
  #L489078.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.g` @type ^`java.util.Collection` := v1 @kind object;
  #L48907c.  @monitorexit v3
  #L48907e.  v1:= v3.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L489082.  call temp:= `offer`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L489088.  v0:= 1I;
  #L48908a.  v3.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L48908e.  call temp:= `enter`(v3) @signature `Lio/reactivex/rxjava3/internal/subscribers/QueueDrainSubscriber;.enter:()Z` @kind virtual;
  #L489094.  v0:= temp;
  #L489096.  if v0 == 0 then goto L4890aa;
  #L48909a.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L48909e.  v1:= v3.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4890a2.  v2:= 0I;
  #L4890a4.  call `drainMaxLoop`(v0, v1, v2, v3, v3) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.drainMaxLoop:(Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/QueueDrain;)V` @kind static;
  #L4890aa.  return @kind void;
  #L4890ac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4890ae.  @monitorexit v3
  #L4890b0.  throw v0;
  catch `java.lang.Throwable` @[L48906a..L48907e] goto L4890ac;
  catch `java.lang.Throwable` @[L4890ae..L4890b0] goto L4890ac;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4890d8.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.cancel:()V` @kind virtual;
  #L4890de.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4890e2.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4890e8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4890fc.  @monitorenter v1
  #L4890fe.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.g` @type ^`java.util.Collection` @kind object;
  #L489102.  if v0 != 0 then goto L48910a;
  #L489106.  @monitorexit v1
  #L489108.  return @kind void;
  #L48910a.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L489110.  @monitorexit v1
  #L489112.  return @kind void;
  #L489114.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L489116.  @monitorexit v1
  #L489118.  throw v2;
  catch `java.lang.Throwable` @[L4890fe..L489118] goto L489114;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v3 @kind this, `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L489138.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48913c.  call temp:= `validate`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L489142.  v0:= temp;
  #L489144.  if v0 != 0 then goto L48914a;
  #L489148.  return @kind void;
  #L48914a.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.e` @type ^`org.reactivestreams.Subscription` := v4 @kind object;
  #L48914e.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.c` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L489152.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L489158.  v0:= temp @kind object;
  #L48915a.  v1:= "The buffer supplied is null" @kind object;
  #L48915e.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L489164.  v0:= (`java.util.Collection`) v0 @kind object;
  #L489168.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.g` @type ^`java.util.Collection` := v0 @kind object;
  #L48916c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$a`;
  #L489170.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;)V` @kind direct;
  #L489176.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L48917a.  v1:= v3.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48917e.  call `onSubscribe`(v1, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L489184.  v1:= v3.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.cancelled` @type ^`boolean` @kind boolean;
  #L489188.  if v1 != 0 then goto L4891a6;
  #L48918c.  v1:= 9223372036854775807L;
  #L489196.  call `request`(v4, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48919c.  v4:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b.d` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4891a0.  call `subscribe`(v4, v0) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4891a6.  return @kind void;
  #L4891a8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4891aa.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4891b0.  v1:= 1I;
  #L4891b2.  v3.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.cancelled` @type ^`boolean` := v1 @kind boolean;
  #L4891b6.  call `cancel`(v4) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4891bc.  v4:= v3.`io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4891c0.  call `error`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4891c6.  return @kind void;
  catch `java.lang.Throwable` @[L48914e..L489168] goto L4891a8;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary$b` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary$b;.request:(J)V` @AccessFlag PUBLIC {
    temp;

  #L4891e4.  call `requested`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/QueueDrainSubscriber;.requested:(J)V` @kind virtual;
  #L4891ea.  return @kind void;
}
