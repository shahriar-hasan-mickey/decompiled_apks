record `io.reactivex.rxjava3.internal.operators.observable.ObservableScalarXMap` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableScalarXMap` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4c7b34.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c7b3a.  v0:= new `java.lang.IllegalStateException`;
  #L4c7b3e.  v1:= "No instances!" @kind object;
  #L4c7b42.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c7b48.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `scalarXMap`(`java.lang.Object` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c7b10.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableScalarXMap$a`;
  #L4c7b14.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap$a;.<init>:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4c7b1a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4c7b20.  v1:= temp @kind object;
  #L4c7b22.  return v1 @kind object;
}
procedure `boolean` `tryScalarXMapSubscribe`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.Observer` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.tryScalarXMapSubscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c7a34.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4c7a38.  if v0 == 0 then goto L4c7adc;
  #L4c7a3c.  v0:= 1I;
  #L4c7a3e.  v1:= (`io.reactivex.rxjava3.functions.Supplier`) v1 @kind object;
  #L4c7a42.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4c7a48.  v1:= temp @kind object;
  #L4c7a4a.  if v1 != 0 then goto L4c7a56;
  #L4c7a4e.  call `complete`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4c7a54.  return v0;
  #L4c7a56.  call temp:= `apply`(v3, v1) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c7a5c.  v1:= temp @kind object;
  #L4c7a5e.  v3:= "The mapper returned a null ObservableSource" @kind object;
  #L4c7a62.  call temp:= `requireNonNull`(v1, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c7a68.  v1:= (`io.reactivex.rxjava3.core.ObservableSource`) v1 @kind object;
  #L4c7a6c.  v3:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4c7a70.  if v3 == 0 then goto L4c7ab4;
  #L4c7a74.  v1:= (`io.reactivex.rxjava3.functions.Supplier`) v1 @kind object;
  #L4c7a78.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4c7a7e.  v1:= temp @kind object;
  #L4c7a80.  if v1 != 0 then goto L4c7a8c;
  #L4c7a84.  call `complete`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4c7a8a.  return v0;
  #L4c7a8c.  v3:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableScalarXMap$ScalarDisposable`;
  #L4c7a90.  call `<init>`(v3, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;)V` @kind direct;
  #L4c7a96.  call `onSubscribe`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c7a9c.  call `run`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.run:()V` @kind virtual;
  #L4c7aa2.  goto L4c7aba;
  #L4c7aa4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c7aa6.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c7aac.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4c7ab2.  return v0;
  #L4c7ab4.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4c7aba.  return v0;
  #L4c7abc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c7abe.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c7ac4.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4c7aca.  return v0;
  #L4c7acc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c7ace.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c7ad4.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4c7ada.  return v0;
  #L4c7adc.  v1:= 0I;
  #L4c7ade.  return v1;
  catch `java.lang.Throwable` @[L4c7a3e..L4c7a4a] goto L4c7acc;
  catch `java.lang.Throwable` @[L4c7a56..L4c7a6c] goto L4c7abc;
  catch `java.lang.Throwable` @[L4c7a74..L4c7a80] goto L4c7aa4;
}
