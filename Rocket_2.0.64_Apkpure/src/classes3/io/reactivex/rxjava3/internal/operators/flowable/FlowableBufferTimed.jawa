record `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.g` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.h` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.rxjava3.core.Scheduler` v7 @kind object, `io.reactivex.rxjava3.functions.Supplier` v8 @kind object, `int` v9 , `boolean` v10 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L489e04.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L489e0a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` := v2 @kind wide;
  #L489e0e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @type ^`long` := v4 @kind wide;
  #L489e12.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L489e16.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.e` @type ^`io.reactivex.rxjava3.core.Scheduler` := v7 @kind object;
  #L489e1a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @type ^`io.reactivex.rxjava3.functions.Supplier` := v8 @kind object;
  #L489e1e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.g` @type ^`int` := v9;
  #L489e22.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.h` @type ^`boolean` := v10 @kind boolean;
  #L489e26.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed` v11 @kind this, `org.reactivestreams.Subscriber` v12 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L489e38.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L489e3c.  v2:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @type ^`long` @kind wide;
  #L489e40.  v4:= lcmp(v0, v2);
  #L489e44.  if v4 != 0 then goto L489e88;
  #L489e48.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.g` @type ^`int`;
  #L489e4c.  v1:= 2147483647I;
  #L489e52.  if v0 != v1 then goto L489e88;
  #L489e56.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L489e5a.  v8:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$b`;
  #L489e5e.  v2:= new `io.reactivex.rxjava3.subscribers.SerializedSubscriber`;
  #L489e62.  call `<init>`(v2, v12) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L489e68.  v3:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L489e6c.  v4:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L489e70.  v6:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L489e74.  v7:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L489e78.  v1:= v8 @kind object;
  #L489e7a.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Supplier;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L489e80.  call `subscribe`(v0, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L489e86.  return @kind void;
  #L489e88.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L489e8c.  call temp:= `createWorker`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L489e92.  v9:= temp @kind object;
  #L489e94.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L489e98.  v2:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @type ^`long` @kind wide;
  #L489e9c.  v4:= lcmp(v0, v2);
  #L489ea0.  if v4 != 0 then goto L489eda;
  #L489ea4.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L489ea8.  v10:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$a`;
  #L489eac.  v2:= new `io.reactivex.rxjava3.subscribers.SerializedSubscriber`;
  #L489eb0.  call `<init>`(v2, v12) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L489eb6.  v3:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L489eba.  v4:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L489ebe.  v6:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L489ec2.  v7:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.g` @type ^`int`;
  #L489ec6.  v8:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.h` @type ^`boolean` @kind boolean;
  #L489eca.  v1:= v10 @kind object;
  #L489ecc.  call `<init>`(v1, v2, v3, v4, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Supplier;JLjava/util/concurrent/TimeUnit;IZLio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L489ed2.  call `subscribe`(v0, v10) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L489ed8.  return @kind void;
  #L489eda.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L489ede.  v10:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c`;
  #L489ee2.  v2:= new `io.reactivex.rxjava3.subscribers.SerializedSubscriber`;
  #L489ee6.  call `<init>`(v2, v12) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L489eec.  v3:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L489ef0.  v4:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L489ef4.  v6:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @type ^`long` @kind wide;
  #L489ef8.  v8:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L489efc.  v1:= v10 @kind object;
  #L489efe.  call `<init>`(v1, v2, v3, v4, v6, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Supplier;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L489f04.  call `subscribe`(v0, v10) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L489f0a.  return @kind void;
}
