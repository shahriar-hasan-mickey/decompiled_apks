record `io.reactivex.rxjava3.internal.operators.maybe.MaybeNever` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
}
global `io.reactivex.rxjava3.internal.operators.maybe.MaybeNever` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeNever.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeNever;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ae6d0.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeNever`;
  #L4ae6d4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeNever;.<init>:()V` @kind direct;
  #L4ae6da.  `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeNever.INSTANCE` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeNever` := v0 @kind object;
  #L4ae6de.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeNever` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeNever;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ae6f0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4ae6f6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeNever` v1 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeNever;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4ae708.  v0:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.NEVER` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4ae70c.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ae712.  return @kind void;
}
