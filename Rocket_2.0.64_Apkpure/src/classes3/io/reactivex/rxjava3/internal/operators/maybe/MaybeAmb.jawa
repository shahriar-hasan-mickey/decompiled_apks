record `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
  `io.reactivex.rxjava3.core.MaybeSource`[] `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb;.<init>:([Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a917c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4a9182.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb.a` @type ^`io.reactivex.rxjava3.core.MaybeSource`[] := v1 @kind object;
  #L4a9186.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4a918a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb` v8 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a919c.  v0:= v8.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb.a` @type ^`io.reactivex.rxjava3.core.MaybeSource`[] @kind object;
  #L4a91a0.  v1:= 0I;
  #L4a91a2.  if v0 != 0 then goto L4a9222;
  #L4a91a6.  v0:= 8I;
  #L4a91aa.  v0:= new `io.reactivex.rxjava3.core.MaybeSource`[v0];
  #L4a91ae.  v2:= v8.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb.b` @type ^`java.lang.Iterable` @kind object;
  #L4a91b2.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4a91b8.  v2:= temp @kind object;
  #L4a91ba.  v3:= 0I;
  #L4a91bc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4a91c2.  v4:= temp;
  #L4a91c4.  if v4 == 0 then goto L4a9224;
  #L4a91c8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4a91ce.  v4:= temp @kind object;
  #L4a91d0.  v4:= (`io.reactivex.rxjava3.core.MaybeSource`) v4 @kind object;
  #L4a91d4.  if v4 != 0 then goto L4a91ee;
  #L4a91d8.  v0:= new `java.lang.NullPointerException`;
  #L4a91dc.  v1:= "One of the sources is null" @kind object;
  #L4a91e0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a91e6.  call `error`(v0, v9) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind static;
  #L4a91ec.  return @kind void;
  #L4a91ee.  v5:= length @variable v0;
  #L4a91f0.  if v3 != v5 then goto L4a9206;
  #L4a91f4.  v5:= v3 ^> 2;
  #L4a91f8.  v5:= v5 + v3 @kind int;
  #L4a91fa.  v5:= new `io.reactivex.rxjava3.core.MaybeSource`[v5];
  #L4a91fe.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4a9204.  v0:= v5 @kind object;
  #L4a9206.  v5:= v3 + 1;
  #L4a920a.  v0[v3]:= v4 @kind object;
  #L4a920e.  v3:= v5;
  #L4a9210.  goto L4a91bc;
  #L4a9212.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a9214.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a921a.  call `error`(v0, v9) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind static;
  #L4a9220.  return @kind void;
  #L4a9222.  v3:= length @variable v0;
  #L4a9224.  v2:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4a9228.  call `<init>`(v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4a922e.  call `onSubscribe`(v9, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4a9234.  v4:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4a9238.  call `<init>`(v4) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4a923e.  v5:= 0I;
  #L4a9240.  if v5 >= v3 then goto L4a92a2;
  #L4a9244.  v6:= v0[v5] @kind object;
  #L4a9248.  call temp:= `isDisposed`(v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4a924e.  v7:= temp;
  #L4a9250.  if v7 == 0 then goto L4a9256;
  #L4a9254.  return @kind void;
  #L4a9256.  if v6 != 0 then goto L4a928c;
  #L4a925a.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4a9260.  v0:= new `java.lang.NullPointerException`;
  #L4a9264.  v2:= "One of the MaybeSources is null" @kind object;
  #L4a9268.  call `<init>`(v0, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a926e.  v2:= 1I;
  #L4a9270.  call temp:= `compareAndSet`(v4, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4a9276.  v1:= temp;
  #L4a9278.  if v1 == 0 then goto L4a9284;
  #L4a927c.  call `onError`(v9, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a9282.  goto L4a928a;
  #L4a9284.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a928a.  return @kind void;
  #L4a928c.  v7:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a`;
  #L4a9290.  call `<init>`(v7, v9, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/disposables/CompositeDisposable;Ljava/util/concurrent/atomic/AtomicBoolean;)V` @kind direct;
  #L4a9296.  call `subscribe`(v6, v7) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4a929c.  v5:= v5 + 1;
  #L4a92a0.  goto L4a9240;
  #L4a92a2.  if v3 != 0 then goto L4a92ac;
  #L4a92a6.  call `onComplete`(v9) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4a92ac.  return @kind void;
  catch `java.lang.Throwable` @[L4a91ae..L4a920e] goto L4a9212;
}
