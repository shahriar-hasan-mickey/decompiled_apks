record `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @AccessFlag PRIVATE;
  `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L486d9c.  v0.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` := v1 @kind object;
  #L486da0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486da6.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486cd8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` @kind object;
  #L486cdc.  v0:= v0.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L486ce0.  v1.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L486ce4.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L486cea.  v0:= temp;
  #L486cec.  v0:= v0 ^~ 1;
  #L486cf0.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L486d04.  v0:= 0I;
  #L486d06.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L486d0a.  if v1 != 0 then goto L486d1a;
  #L486d0e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` @kind object;
  #L486d12.  v1:= v1.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L486d16.  v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L486d1a.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L486d1e.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L486d24.  v1:= temp;
  #L486d26.  if v1 != 0 then goto L486d62;
  #L486d2a.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L486d2e.  call temp:= `isError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L486d34.  v1:= temp;
  #L486d36.  if v1 != 0 then goto L486d4c;
  #L486d3a.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L486d3e.  call temp:= `getValue`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L486d44.  v1:= temp @kind object;
  #L486d46.  v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L486d4a.  return v1 @kind object;
  #L486d4c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L486d50.  call temp:= `getError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L486d56.  v1:= temp @kind object;
  #L486d58.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L486d5e.  v1:= temp @kind object;
  #L486d60.  throw v1;
  #L486d62.  v1:= new `java.util.NoSuchElementException`;
  #L486d66.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L486d6c.  throw v1;
  #L486d6e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L486d70.  v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L486d74.  throw v1;
  catch `java.lang.Throwable` @[L486d06..L486d46] goto L486d6e;
  catch `java.lang.Throwable` @[L486d4c..L486d6e] goto L486d6e;
}
procedure `void` `remove`(`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L486db8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L486dbc.  v1:= "Read only iterator" @kind object;
  #L486dc0.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L486dc6.  throw v0;
}
