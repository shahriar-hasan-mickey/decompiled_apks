record `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.Observable` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe` v0 @kind this, `io.reactivex.rxjava3.core.Observable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.internal.util.ErrorMode` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b3ec0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4b3ec6.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.a` @type ^`io.reactivex.rxjava3.core.Observable` := v1 @kind object;
  #L4b3eca.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4b3ece.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v3 @kind object;
  #L4b3ed2.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.d` @type ^`int` := v4;
  #L4b3ed6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe` v5 @kind this, `io.reactivex.rxjava3.core.Observer` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapMaybe;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b3ee8.  v0:= v5.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.a` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L4b3eec.  v1:= v5.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b3ef0.  call temp:= `b`(v0, v1, v6) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/a;.b:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/Observer;)Z` @kind static;
  #L4b3ef6.  v0:= temp;
  #L4b3ef8.  if v0 != 0 then goto L4b3f1c;
  #L4b3efc.  v0:= v5.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.a` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L4b3f00.  v1:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe$a`;
  #L4b3f04.  v2:= v5.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b3f08.  v3:= v5.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.d` @type ^`int`;
  #L4b3f0c.  v4:= v5.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4b3f10.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapMaybe$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4b3f16.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4b3f1c.  return @kind void;
}
