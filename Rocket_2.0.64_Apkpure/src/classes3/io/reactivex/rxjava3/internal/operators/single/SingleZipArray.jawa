record `io.reactivex.rxjava3.internal.operators.single.SingleZipArray` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `io.reactivex.rxjava3.core.SingleSource`[] `io.reactivex.rxjava3.internal.operators.single.SingleZipArray.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleZipArray.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleZipArray` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d89d0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4d89d6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray.a` @type ^`io.reactivex.rxjava3.core.SingleSource`[] := v1 @kind object;
  #L4d89da.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4d89de.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleZipArray` v5 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d89f0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray.a` @type ^`io.reactivex.rxjava3.core.SingleSource`[] @kind object;
  #L4d89f4.  v1:= length @variable v0;
  #L4d89f6.  v2:= 0I;
  #L4d89f8.  v3:= 1I;
  #L4d89fa.  if v1 != v3 then goto L4d8a1e;
  #L4d89fe.  v0:= v0[v2] @kind object;
  #L4d8a02.  v1:= new `io.reactivex.rxjava3.internal.operators.single.SingleMap$a`;
  #L4d8a06.  v2:= new `io.reactivex.rxjava3.internal.operators.single.SingleZipArray$a`;
  #L4d8a0a.  call `<init>`(v2, v5) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray;)V` @kind direct;
  #L4d8a10.  call `<init>`(v1, v6, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4d8a16.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d8a1c.  return @kind void;
  #L4d8a1e.  v3:= new `io.reactivex.rxjava3.internal.operators.single.SingleZipArray$b`;
  #L4d8a22.  v4:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4d8a26.  call `<init>`(v3, v6, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray$b;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;ILio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4d8a2c.  call `onSubscribe`(v6, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d8a32.  if v2 >= v1 then goto L4d8a76;
  #L4d8a36.  call temp:= `isDisposed`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray$b;.isDisposed:()Z` @kind virtual;
  #L4d8a3c.  v6:= temp;
  #L4d8a3e.  if v6 == 0 then goto L4d8a44;
  #L4d8a42.  return @kind void;
  #L4d8a44.  v6:= v0[v2] @kind object;
  #L4d8a48.  if v6 != 0 then goto L4d8a62;
  #L4d8a4c.  v6:= new `java.lang.NullPointerException`;
  #L4d8a50.  v0:= "One of the sources is null" @kind object;
  #L4d8a54.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d8a5a.  call `b`(v3, v6, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray$b;.b:(Ljava/lang/Throwable;I)V` @kind virtual;
  #L4d8a60.  return @kind void;
  #L4d8a62.  v4:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray$b.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleZipArray$c`[] @kind object;
  #L4d8a66.  v4:= v4[v2] @kind object;
  #L4d8a6a.  call `subscribe`(v6, v4) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d8a70.  v2:= v2 + 1;
  #L4d8a74.  goto L4d8a32;
  #L4d8a76.  return @kind void;
}
