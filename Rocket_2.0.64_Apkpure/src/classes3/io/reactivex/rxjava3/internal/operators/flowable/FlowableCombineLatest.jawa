record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `org.reactivestreams.Publisher`[] `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L48af44.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L48af4a.  v0:= 0I;
  #L48af4c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] := v0 @kind object;
  #L48af50.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L48af54.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L48af58.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int` := v4;
  #L48af5c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` := v5 @kind boolean;
  #L48af60.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest` v0 @kind this, `org.reactivestreams.Publisher`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48af74.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L48af7a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] := v1 @kind object;
  #L48af7e.  v1:= 0I;
  #L48af80.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` := v1 @kind object;
  #L48af84.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L48af88.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int` := v3;
  #L48af8c.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` := v4 @kind boolean;
  #L48af90.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest` v9 @kind this, `org.reactivestreams.Subscriber` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48afa4.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] @kind object;
  #L48afa8.  v1:= 0I;
  #L48afaa.  if v0 != 0 then goto L48b01e;
  #L48afae.  v0:= 8I;
  #L48afb2.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L48afb6.  v2:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` @kind object;
  #L48afba.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48afc0.  v2:= temp @kind object;
  #L48afc2.  v3:= 0I;
  #L48afc4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48afca.  v4:= temp;
  #L48afcc.  if v4 == 0 then goto L48b020;
  #L48afd0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48afd6.  v4:= temp @kind object;
  #L48afd8.  v4:= (`org.reactivestreams.Publisher`) v4 @kind object;
  #L48afdc.  v5:= length @variable v0;
  #L48afde.  if v3 != v5 then goto L48aff4;
  #L48afe2.  v5:= v3 ^> 2;
  #L48afe6.  v5:= v5 + v3 @kind int;
  #L48afe8.  v5:= new `org.reactivestreams.Publisher`[v5];
  #L48afec.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L48aff2.  v0:= v5 @kind object;
  #L48aff4.  v5:= v3 + 1;
  #L48aff8.  v6:= "The Iterator returned a null Publisher" @kind object;
  #L48affc.  call temp:= `requireNonNull`(v4, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48b002.  v4:= (`org.reactivestreams.Publisher`) v4 @kind object;
  #L48b006.  v0[v3]:= v4 @kind object;
  #L48b00a.  v3:= v5;
  #L48b00c.  goto L48afc4;
  #L48b00e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48b010.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48b016.  call `error`(v0, v10) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L48b01c.  return @kind void;
  #L48b01e.  v3:= length @variable v0;
  #L48b020.  v8:= v3;
  #L48b022.  if v8 != 0 then goto L48b02e;
  #L48b026.  call `complete`(v10) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L48b02c.  return @kind void;
  #L48b02e.  v2:= 1I;
  #L48b030.  if v8 != v2 then goto L48b054;
  #L48b034.  v0:= v0[v1] @kind object;
  #L48b038.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMap$b`;
  #L48b03c.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$c`;
  #L48b040.  call `<init>`(v2, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$c;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;)V` @kind direct;
  #L48b046.  call `<init>`(v1, v10, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L48b04c.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L48b052.  return @kind void;
  #L48b054.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$a`;
  #L48b058.  v4:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L48b05c.  v6:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int`;
  #L48b060.  v7:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` @kind boolean;
  #L48b064.  v2:= v1 @kind object;
  #L48b066.  v3:= v10 @kind object;
  #L48b068.  v5:= v8;
  #L48b06a.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IIZ)V` @kind direct;
  #L48b070.  call `onSubscribe`(v10, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L48b076.  call `l`(v1, v0, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$a;.l:([Lorg/reactivestreams/Publisher;I)V` @kind virtual;
  #L48b07c.  return @kind void;
  catch `java.lang.Throwable` @[L48afb6..L48b00a] goto L48b00e;
}
