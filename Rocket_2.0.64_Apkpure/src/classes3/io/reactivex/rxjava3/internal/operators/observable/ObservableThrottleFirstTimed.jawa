record `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableThrottleFirstTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4cab00.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4cab06.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.a` @type ^`long` := v2 @kind wide;
  #L4cab0a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.b` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4cab0e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4cab12.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed` v8 @kind this, `io.reactivex.rxjava3.core.Observer` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableThrottleFirstTimed;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4cab24.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4cab28.  v7:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed$a`;
  #L4cab2c.  v2:= new `io.reactivex.rxjava3.observers.SerializedObserver`;
  #L4cab30.  call `<init>`(v2, v9) @signature `Lio/reactivex/rxjava3/observers/SerializedObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4cab36.  v3:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.a` @type ^`long` @kind wide;
  #L4cab3a.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4cab3e.  v9:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4cab42.  call temp:= `createWorker`(v9) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4cab48.  v6:= temp @kind object;
  #L4cab4a.  v1:= v7 @kind object;
  #L4cab4c.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableThrottleFirstTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L4cab52.  call `subscribe`(v0, v7) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4cab58.  return @kind void;
}
