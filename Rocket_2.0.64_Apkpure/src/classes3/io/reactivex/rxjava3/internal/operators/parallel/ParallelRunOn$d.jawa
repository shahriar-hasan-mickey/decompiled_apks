record `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a` @kind class {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.k` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `int` v2 , `io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler$Worker` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$d;.<init>:(Lorg/reactivestreams/Subscriber;ILio/reactivex/rxjava3/internal/queue/SpscArrayQueue;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d3004.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$a;.<init>:(ILio/reactivex/rxjava3/internal/queue/SpscArrayQueue;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L4d300a.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.k` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4d300e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$d;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d3020.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d3024.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4d302a.  v0:= temp;
  #L4d302c.  if v0 == 0 then goto L4d304a;
  #L4d3030.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4d3034.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.k` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d3038.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4d303e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.a` @type ^`int`;
  #L4d3042.  v0:= (`long`) v0 @kind i2l;
  #L4d3044.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4d304a.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d` v18 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$d;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L4d305c.  v0:= v18 @kind object;
  #L4d3060.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.j` @type ^`int`;
  #L4d3064.  v2:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.c` @type ^`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` @kind object;
  #L4d3068.  v3:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.k` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d306c.  v4:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.b` @type ^`int`;
  #L4d3070.  v5:= 1I;
  #L4d3072.  v6:= 1I;
  #L4d3074.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d3078.  call temp:= `get`(v7) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d307e.  v7:= temp @kind wide;
  #L4d3080.  v9:= 0L;
  #L4d3084.  v11:= v9 @kind wide;
  #L4d3086.  v13:= lcmp(v11, v7);
  #L4d308a.  if v13 == 0 then goto L4d3124;
  #L4d308e.  v14:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.i` @type ^`boolean` @kind boolean;
  #L4d3092.  if v14 == 0 then goto L4d309e;
  #L4d3096.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L4d309c.  return @kind void;
  #L4d309e.  v14:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.f` @type ^`boolean` @kind boolean;
  #L4d30a2.  if v14 == 0 then goto L4d30c6;
  #L4d30a6.  v15:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.g` @type ^`java.lang.Throwable` @kind object;
  #L4d30aa.  if v15 == 0 then goto L4d30c6;
  #L4d30ae.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L4d30b4.  call `onError`(v3, v15) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d30ba.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4d30be.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d30c4.  return @kind void;
  #L4d30c6.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4d30cc.  v15:= temp @kind object;
  #L4d30ce.  v16:= 0I;
  #L4d30d2.  if v15 != 0 then goto L4d30dc;
  #L4d30d6.  v17:= 1I;
  #L4d30da.  goto L4d30e0;
  #L4d30dc.  v17:= 0I;
  #L4d30e0.  if v14 == 0 then goto L4d30fa;
  #L4d30e4.  if v17 == 0 then goto L4d30fa;
  #L4d30e8.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4d30ee.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4d30f2.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d30f8.  return @kind void;
  #L4d30fa.  if v17 == 0 then goto L4d3100;
  #L4d30fe.  goto L4d3124;
  #L4d3100.  call `onNext`(v3, v15) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4d3106.  v13:= 1L;
  #L4d310a.  v11:= v11 + v13 @kind long;
  #L4d310c.  v1:= v1 + 1;
  #L4d3110.  if v1 != v4 then goto L4d3086;
  #L4d3114.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d3118.  v14:= (`long`) v1 @kind i2l;
  #L4d311a.  call `request`(v13, v14) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4d3120.  v1:= 0I;
  #L4d3122.  goto L4d3086;
  #L4d3124.  if v13 != 0 then goto L4d317e;
  #L4d3128.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.i` @type ^`boolean` @kind boolean;
  #L4d312c.  if v13 == 0 then goto L4d3138;
  #L4d3130.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L4d3136.  return @kind void;
  #L4d3138.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.f` @type ^`boolean` @kind boolean;
  #L4d313c.  if v13 == 0 then goto L4d317e;
  #L4d3140.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.g` @type ^`java.lang.Throwable` @kind object;
  #L4d3144.  if v13 == 0 then goto L4d3160;
  #L4d3148.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L4d314e.  call `onError`(v3, v13) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d3154.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4d3158.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d315e.  return @kind void;
  #L4d3160.  call temp:= `isEmpty`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.isEmpty:()Z` @kind virtual;
  #L4d3166.  v13:= temp;
  #L4d3168.  if v13 == 0 then goto L4d317e;
  #L4d316c.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4d3172.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4d3176.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d317c.  return @kind void;
  #L4d317e.  v13:= lcmp(v11, v9);
  #L4d3182.  if v13 == 0 then goto L4d31a4;
  #L4d3186.  v9:= 9223372036854775807L;
  #L4d3190.  v13:= lcmp(v7, v9);
  #L4d3194.  if v13 == 0 then goto L4d31a4;
  #L4d3198.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d319c.  v8:= -v11 @kind long;
  #L4d319e.  call temp:= `addAndGet`(v7, v8) @signature `Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J` @kind virtual;
  #L4d31a4.  call temp:= `get`(v18) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L4d31aa.  v7:= temp;
  #L4d31ac.  if v7 != v6 then goto L4d31c4;
  #L4d31b0.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.j` @type ^`int` := v1;
  #L4d31b4.  v6:= -v6 @kind int;
  #L4d31b6.  call temp:= `addAndGet`(v0, v6) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4d31bc.  v6:= temp;
  #L4d31be.  if v6 != 0 then goto L4d3074;
  #L4d31c2.  return @kind void;
  #L4d31c4.  v6:= v7;
  #L4d31c6.  goto L4d3074;
}
