record `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` @kind class @AccessFlag  extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface {
  `int` `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.b` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` v0 @kind this, `int` v1 , `io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind object, `java.lang.Object`[] v3 @kind object, `io.reactivex.rxjava3.core.SingleObserver` v4 @kind object, `java.util.concurrent.atomic.AtomicInteger` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals$a;.<init>:(ILio/reactivex/rxjava3/disposables/CompositeDisposable;[Ljava/lang/Object;Lio/reactivex/rxjava3/core/SingleObserver;Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d5684.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d568a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.a` @type ^`int` := v1;
  #L4d568e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v2 @kind object;
  #L4d5692.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] := v3 @kind object;
  #L4d5696.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v4 @kind object;
  #L4d569a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` := v5 @kind object;
  #L4d569e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d56b0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4d56b4.  v1:= -1I;
  #L4d56b6.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L4d56bc.  v0:= temp;
  #L4d56be.  if v0 == 0 then goto L4d56d2;
  #L4d56c2.  v1:= 1I;
  #L4d56c4.  if v0 != v1 then goto L4d56ca;
  #L4d56c8.  goto L4d56d2;
  #L4d56ca.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d56d0.  goto L4d56e6;
  #L4d56d2.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4d56d6.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4d56dc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d56e0.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d56e6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d56f8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4d56fc.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4d5702.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d5714.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] @kind object;
  #L4d5718.  v1:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.a` @type ^`int`;
  #L4d571c.  v0[v1]:= v4 @kind object;
  #L4d5720.  v4:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4d5724.  call temp:= `incrementAndGet`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L4d572a.  v4:= temp;
  #L4d572c.  v0:= 2I;
  #L4d572e.  if v4 != v0 then goto L4d575c;
  #L4d5732.  v4:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d5736.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] @kind object;
  #L4d573a.  v1:= 0I;
  #L4d573c.  v1:= v0[v1] @kind object;
  #L4d5740.  v2:= 1I;
  #L4d5742.  v0:= v0[v2] @kind object;
  #L4d5746.  call temp:= `equals`(v1, v0) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4d574c.  v0:= temp;
  #L4d574e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4d5754.  v0:= temp @kind object;
  #L4d5756.  call `onSuccess`(v4, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d575c.  return @kind void;
}
