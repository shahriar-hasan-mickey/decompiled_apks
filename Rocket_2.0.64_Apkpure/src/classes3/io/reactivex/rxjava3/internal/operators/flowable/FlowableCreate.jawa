record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.FlowableOnSubscribe` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.BackpressureStrategy` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate` v0 @kind this, `io.reactivex.rxjava3.core.FlowableOnSubscribe` v1 @kind object, `io.reactivex.rxjava3.core.BackpressureStrategy` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate;.<init>:(Lio/reactivex/rxjava3/core/FlowableOnSubscribe;Lio/reactivex/rxjava3/core/BackpressureStrategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48e0a0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L48e0a6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.b` @type ^`io.reactivex.rxjava3.core.FlowableOnSubscribe` := v1 @kind object;
  #L48e0aa.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.c` @type ^`io.reactivex.rxjava3.core.BackpressureStrategy` := v2 @kind object;
  #L48e0ae.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48e0c0.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L48e0c4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.c` @type ^`io.reactivex.rxjava3.core.BackpressureStrategy` @kind object;
  #L48e0c8.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L48e0ce.  v1:= temp;
  #L48e0d0.  v0:= v0[v1];
  #L48e0d4.  v1:= 1I;
  #L48e0d6.  if v0 == v1 then goto L48e124;
  #L48e0da.  v1:= 2I;
  #L48e0dc.  if v0 == v1 then goto L48e118;
  #L48e0e0.  v1:= 3I;
  #L48e0e2.  if v0 == v1 then goto L48e10c;
  #L48e0e6.  v1:= 4I;
  #L48e0e8.  if v0 == v1 then goto L48e100;
  #L48e0ec.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$c`;
  #L48e0f0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L48e0f6.  v1:= temp;
  #L48e0f8.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$c;.<init>:(Lorg/reactivestreams/Subscriber;I)V` @kind direct;
  #L48e0fe.  goto L48e12e;
  #L48e100.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$f`;
  #L48e104.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$f;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L48e10a.  goto L48e12e;
  #L48e10c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$d`;
  #L48e110.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$d;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L48e116.  goto L48e12e;
  #L48e118.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$e`;
  #L48e11c.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$e;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L48e122.  goto L48e12e;
  #L48e124.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$g`;
  #L48e128.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$g;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L48e12e.  call `onSubscribe`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L48e134.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.b` @type ^`io.reactivex.rxjava3.core.FlowableOnSubscribe` @kind object;
  #L48e138.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/FlowableOnSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/FlowableEmitter;)V` @kind interface;
  #L48e13e.  goto L48e14e;
  #L48e140.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48e142.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48e148.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48e14e.  return @kind void;
  catch `java.lang.Throwable` @[L48e134..L48e13e] goto L48e140;
}
