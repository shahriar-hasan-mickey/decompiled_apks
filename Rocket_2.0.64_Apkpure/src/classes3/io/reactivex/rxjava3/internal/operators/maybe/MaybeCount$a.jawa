record `io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aa0b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aa0b6.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4aa0ba.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa0cc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4aa0d0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4aa0d6.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4aa0da.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4aa0de.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa090.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4aa094.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4aa09a.  v0:= temp;
  #L4aa09c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4aa0f0.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4aa0f4.  v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4aa0f8.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4aa0fc.  v1:= 0L;
  #L4aa100.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4aa106.  v1:= temp @kind object;
  #L4aa108.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4aa10e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa120.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4aa124.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4aa128.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4aa12c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aa132.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa144.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4aa148.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aa14e.  v0:= temp;
  #L4aa150.  if v0 == 0 then goto L4aa162;
  #L4aa154.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4aa158.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4aa15c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4aa162.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa174.  v3:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4aa178.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v3 @kind object;
  #L4aa17c.  v3:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4aa180.  v0:= 1L;
  #L4aa184.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4aa18a.  v0:= temp @kind object;
  #L4aa18c.  call `onSuccess`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4aa192.  return @kind void;
}
