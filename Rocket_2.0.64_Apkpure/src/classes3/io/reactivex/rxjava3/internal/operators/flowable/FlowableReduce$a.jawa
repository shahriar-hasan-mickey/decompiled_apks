record `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduce$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49cb28.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L49cb2e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.a` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L49cb32.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduce$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49cb44.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L49cb4a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49cb4e.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L49cb54.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L49cb58.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L49cb5c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduce$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49cb70.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49cb74.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L49cb78.  if v0 != v1 then goto L49cb7e;
  #L49cb7c.  return @kind void;
  #L49cb7e.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L49cb82.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L49cb86.  if v0 == 0 then goto L49cb92;
  #L49cb8a.  call `complete`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L49cb90.  goto L49cb9c;
  #L49cb92.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49cb96.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L49cb9c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduce$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49cbb0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49cbb4.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L49cbb8.  if v0 != v1 then goto L49cbc4;
  #L49cbbc.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L49cbc2.  return @kind void;
  #L49cbc4.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L49cbc8.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49cbcc.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L49cbd2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduce$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49cbe4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49cbe8.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L49cbec.  if v0 != v1 then goto L49cbf2;
  #L49cbf0.  return @kind void;
  #L49cbf2.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L49cbf6.  if v0 != 0 then goto L49cc00;
  #L49cbfa.  v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v3 @kind object;
  #L49cbfe.  goto L49cc34;
  #L49cc00.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.a` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L49cc04.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49cc0a.  v3:= temp @kind object;
  #L49cc0c.  v0:= "The reducer returned a null value" @kind object;
  #L49cc10.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cc16.  v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v3 @kind object;
  #L49cc1a.  goto L49cc34;
  #L49cc1c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49cc1e.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49cc24.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49cc28.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L49cc2e.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49cc34.  return @kind void;
  catch `java.lang.Throwable` @[L49cc00..L49cc1a] goto L49cc1c;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduce$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49cc54.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49cc58.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L49cc5e.  v0:= temp;
  #L49cc60.  if v0 == 0 then goto L49cc82;
  #L49cc64.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L49cc68.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49cc6c.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L49cc72.  v0:= 9223372036854775807L;
  #L49cc7c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L49cc82.  return @kind void;
}
