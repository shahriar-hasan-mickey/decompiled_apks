record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4abc90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4abc96.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4abc9a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4abc9e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4abcb0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4abcb4.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4abcb8.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4abcbc.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4abcc2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4abc70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4abc74.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4abc7a.  v0:= temp;
  #L4abc7c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4abcd4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4abcd8.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4abcde.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4abcf0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4abcf4.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4abcfa.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4abd0c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4abd10.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4abd16.  v0:= temp;
  #L4abd18.  if v0 == 0 then goto L4abd2a;
  #L4abd1c.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4abd20.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4abd24.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4abd2a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4abd3c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4abd40.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4abd46.  v0:= temp;
  #L4abd48.  if v0 == 0 then goto L4abd58;
  #L4abd4c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4abd50.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4abd56.  goto L4abd62;
  #L4abd58.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4abd5c.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4abd62.  return @kind void;
  #L4abd64.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4abd66.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4abd6c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4abd70.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4abd76.  return @kind void;
  catch `java.lang.Throwable` @[L4abd3c..L4abd48] goto L4abd64;
}
