record `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
  `io.reactivex.rxjava3.core.MaybeSource`[] `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipArray;.<init>:([Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b10e0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4b10e6.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray.a` @type ^`io.reactivex.rxjava3.core.MaybeSource`[] := v1 @kind object;
  #L4b10ea.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4b10ee.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray` v5 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipArray;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b1100.  v0:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray.a` @type ^`io.reactivex.rxjava3.core.MaybeSource`[] @kind object;
  #L4b1104.  v1:= length @variable v0;
  #L4b1106.  v2:= 0I;
  #L4b1108.  v3:= 1I;
  #L4b110a.  if v1 != v3 then goto L4b112e;
  #L4b110e.  v0:= v0[v2] @kind object;
  #L4b1112.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a`;
  #L4b1116.  v2:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray$a`;
  #L4b111a.  call `<init>`(v2, v5) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipArray$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipArray;)V` @kind direct;
  #L4b1120.  call `<init>`(v1, v6, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4b1126.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4b112c.  return @kind void;
  #L4b112e.  v3:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray$b`;
  #L4b1132.  v4:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b1136.  call `<init>`(v3, v6, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipArray$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;ILio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4b113c.  call `onSubscribe`(v6, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b1142.  if v2 >= v1 then goto L4b1186;
  #L4b1146.  call temp:= `isDisposed`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipArray$b;.isDisposed:()Z` @kind virtual;
  #L4b114c.  v6:= temp;
  #L4b114e.  if v6 == 0 then goto L4b1154;
  #L4b1152.  return @kind void;
  #L4b1154.  v6:= v0[v2] @kind object;
  #L4b1158.  if v6 != 0 then goto L4b1172;
  #L4b115c.  v6:= new `java.lang.NullPointerException`;
  #L4b1160.  v0:= "One of the sources is null" @kind object;
  #L4b1164.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b116a.  call `c`(v3, v6, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipArray$b;.c:(Ljava/lang/Throwable;I)V` @kind virtual;
  #L4b1170.  return @kind void;
  #L4b1172.  v4:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray$b.c` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipArray$c`[] @kind object;
  #L4b1176.  v4:= v4[v2] @kind object;
  #L4b117a.  call `subscribe`(v6, v4) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4b1180.  v2:= v2 + 1;
  #L4b1184.  goto L4b1142;
  #L4b1186.  return @kind void;
}
