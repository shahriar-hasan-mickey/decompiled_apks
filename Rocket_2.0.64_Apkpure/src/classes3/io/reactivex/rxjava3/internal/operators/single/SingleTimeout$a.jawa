record `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `java.lang.Runnable` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.d` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.e` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.f` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/core/SingleSource;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d7de8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d7dee.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d7df2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.rxjava3.core.SingleSource` := v2 @kind object;
  #L4d7df6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.e` @type ^`long` := v3 @kind wide;
  #L4d7dfa.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.f` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L4d7dfe.  v3:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4d7e02.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d7e08.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v3 @kind object;
  #L4d7e0c.  if v2 == 0 then goto L4d7e20;
  #L4d7e10.  v2:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a`;
  #L4d7e14.  call `<init>`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4d7e1a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` := v2 @kind object;
  #L4d7e1e.  goto L4d7e26;
  #L4d7e20.  v1:= 0I;
  #L4d7e22.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` := v1 @kind object;
  #L4d7e26.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d7e38.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d7e3e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d7e42.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d7e48.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` @kind object;
  #L4d7e4c.  if v0 == 0 then goto L4d7e56;
  #L4d7e50.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d7e56.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d7dc0.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d7dc6.  v0:= temp @kind object;
  #L4d7dc8.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d7dcc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d7dd2.  v0:= temp;
  #L4d7dd4.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d7e68.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d7e6e.  v0:= temp @kind object;
  #L4d7e70.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d7e74.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d7e78.  if v0 == v1 then goto L4d7e9e;
  #L4d7e7c.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4d7e82.  v0:= temp;
  #L4d7e84.  if v0 == 0 then goto L4d7e9e;
  #L4d7e88.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d7e8c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d7e92.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d7e96.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d7e9c.  goto L4d7ea4;
  #L4d7e9e.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d7ea4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4d7eb8.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d7ebe.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d7ed0.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d7ed6.  v0:= temp @kind object;
  #L4d7ed8.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d7edc.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d7ee0.  if v0 == v1 then goto L4d7f04;
  #L4d7ee4.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4d7eea.  v0:= temp;
  #L4d7eec.  if v0 == 0 then goto L4d7f04;
  #L4d7ef0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d7ef4.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d7efa.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d7efe.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d7f04.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d7f18.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d7f1e.  v0:= temp @kind object;
  #L4d7f20.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d7f24.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d7f28.  if v0 == v1 then goto L4d7f80;
  #L4d7f2c.  call temp:= `compareAndSet`(v5, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4d7f32.  v1:= temp;
  #L4d7f34.  if v1 == 0 then goto L4d7f80;
  #L4d7f38.  if v0 == 0 then goto L4d7f42;
  #L4d7f3c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d7f42.  v0:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L4d7f46.  if v0 != 0 then goto L4d7f70;
  #L4d7f4a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d7f4e.  v1:= new `java.util.concurrent.TimeoutException`;
  #L4d7f52.  v2:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.e` @type ^`long` @kind wide;
  #L4d7f56.  v4:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.f` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4d7f5a.  call temp:= `timeoutMessage`(v2, v4) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.timeoutMessage:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/String;` @kind static;
  #L4d7f60.  v2:= temp @kind object;
  #L4d7f62.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d7f68.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d7f6e.  goto L4d7f80;
  #L4d7f70.  v1:= 0I;
  #L4d7f72.  v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L4d7f76.  v1:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` @kind object;
  #L4d7f7a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d7f80.  return @kind void;
}
