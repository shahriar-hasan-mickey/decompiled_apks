record `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorNext;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49b124.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49b12a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L49b12e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorNext;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L49b140.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext$a`;
  #L49b144.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L49b148.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorNext$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L49b14e.  call `onSubscribe`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L49b154.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L49b158.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49b15e.  return @kind void;
}
