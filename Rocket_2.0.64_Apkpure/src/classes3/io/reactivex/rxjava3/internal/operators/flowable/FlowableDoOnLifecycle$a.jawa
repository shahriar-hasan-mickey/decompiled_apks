record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.LongConsumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.LongConsumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L490414.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49041a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L49041e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L490422.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.functions.Action` := v4 @kind object;
  #L490426.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @type ^`io.reactivex.rxjava3.functions.LongConsumer` := v3 @kind object;
  #L49042a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49043c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L490440.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L490444.  if v0 == v1 then goto L49046c;
  #L490448.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L49044c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L490450.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L490456.  goto L490466;
  #L490458.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49045a.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L490460.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L490466.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L49046c.  return @kind void;
  catch `java.lang.Throwable` @[L49044c..L490456] goto L490458;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49048c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L490490.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L490494.  if v0 == v1 then goto L4904a2;
  #L490498.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49049c.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4904a2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4904b4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4904b8.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4904bc.  if v0 == v1 then goto L4904cc;
  #L4904c0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4904c4.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4904ca.  goto L4904d2;
  #L4904cc.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4904d2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4904e4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4904e8.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4904ee.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L490500.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L490504.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L49050a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L49050e.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L490514.  v0:= temp;
  #L490516.  if v0 == 0 then goto L490528;
  #L49051a.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L49051e.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L490522.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L490528.  return @kind void;
  #L49052a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49052c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L490532.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L490538.  v2:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L49053c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L490540.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L490544.  call `error`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L49054a.  return @kind void;
  catch `java.lang.Throwable` @[L490500..L49050a] goto L49052a;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L490568.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L49056c.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/LongConsumer;.accept:(J)V` @kind interface;
  #L490572.  goto L490582;
  #L490574.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L490576.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49057c.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L490582.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L490586.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L49058c.  return @kind void;
  catch `java.lang.Throwable` @[L490568..L490572] goto L490574;
}
