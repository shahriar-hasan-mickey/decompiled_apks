record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$g` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` @kind class {
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$g.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$g` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$g;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48dc90.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L48dc96.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$g` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$g;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48dca8.  call temp:= `isCancelled`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.isCancelled:()Z` @kind virtual;
  #L48dcae.  v0:= temp;
  #L48dcb0.  if v0 == 0 then goto L48dcb6;
  #L48dcb4.  return @kind void;
  #L48dcb6.  if v5 == 0 then goto L48dcee;
  #L48dcba.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48dcbe.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L48dcc4.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L48dcca.  v0:= temp @kind wide;
  #L48dccc.  v2:= 0L;
  #L48dcd0.  v5:= lcmp(v0, v2);
  #L48dcd4.  if v5 == 0 then goto L48dcec;
  #L48dcd8.  v2:= 1L;
  #L48dcdc.  v2:= v0 - v2 @kind long;
  #L48dce0.  call temp:= `compareAndSet`(v4, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L48dce6.  v5:= temp;
  #L48dce8.  if v5 == 0 then goto L48dcc4;
  #L48dcec.  return @kind void;
  #L48dcee.  v5:= "onNext called with a null value." @kind object;
  #L48dcf2.  call temp:= `createNullPointerException`(v5) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L48dcf8.  v5:= temp @kind object;
  #L48dcfa.  call `onError`(v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48dd00.  return @kind void;
}
