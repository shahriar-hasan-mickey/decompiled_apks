record `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L498e78.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L498e7e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v2 @kind object;
  #L498e82.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithMaybe;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L498e94.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe$a`;
  #L498e98.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithMaybe$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L498e9e.  call `onSubscribe`(v2, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L498ea4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L498ea8.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L498eae.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L498eb2.  v0:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe$a.c` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe$a$a` @kind object;
  #L498eb6.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L498ebc.  return @kind void;
}
