record `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$d` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cb428.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4cb42e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4cb432.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4cb436.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4cb43a.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4cb440.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4cb444.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4cb448.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4cb44e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4cb452.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v2 @kind this, `long` v3 , `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.a:(JLjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4cb654.  v0:= 9223372036854775807L;
  #L4cb65e.  call temp:= `compareAndSet`(v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4cb664.  v3:= temp;
  #L4cb666.  if v3 == 0 then goto L4cb680;
  #L4cb66a.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb66e.  call temp:= `dispose`(v3) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4cb674.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb678.  call `onError`(v3, v5) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cb67e.  goto L4cb686;
  #L4cb680.  call `onError`(v5) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4cb686.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4cb60c.  v0:= 9223372036854775807L;
  #L4cb616.  call temp:= `compareAndSet`(v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4cb61c.  v3:= temp;
  #L4cb61e.  if v3 == 0 then goto L4cb640;
  #L4cb622.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb626.  call temp:= `dispose`(v3) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4cb62c.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb630.  v4:= new `java.util.concurrent.TimeoutException`;
  #L4cb634.  call `<init>`(v4) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L4cb63a.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cb640.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v3 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.c:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4cb698.  if v4 == 0 then goto L4cb6c0;
  #L4cb69c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$a`;
  #L4cb6a0.  v1:= 0L;
  #L4cb6a4.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$a;.<init>:(JLio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$d;)V` @kind direct;
  #L4cb6aa.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb6ae.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4cb6b4.  v1:= temp;
  #L4cb6b6.  if v1 == 0 then goto L4cb6c0;
  #L4cb6ba.  call `subscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4cb6c0.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb464.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb468.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4cb46e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb472.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4cb478.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb3fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb400.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4cb406.  v0:= temp @kind object;
  #L4cb408.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4cb40c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4cb412.  v0:= temp;
  #L4cb414.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cb48c.  v0:= 9223372036854775807L;
  #L4cb496.  call temp:= `getAndSet`(v5, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4cb49c.  v2:= temp @kind wide;
  #L4cb49e.  v4:= lcmp(v2, v0);
  #L4cb4a2.  if v4 == 0 then goto L4cb4ba;
  #L4cb4a6.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb4aa.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4cb4b0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb4b4.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4cb4ba.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cb4cc.  v0:= 9223372036854775807L;
  #L4cb4d6.  call temp:= `getAndSet`(v5, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4cb4dc.  v2:= temp @kind wide;
  #L4cb4de.  v4:= lcmp(v2, v0);
  #L4cb4e2.  if v4 == 0 then goto L4cb4fc;
  #L4cb4e6.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb4ea.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4cb4f0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb4f4.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cb4fa.  goto L4cb502;
  #L4cb4fc.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4cb502.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4cb514.  call temp:= `get`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4cb51a.  v0:= temp @kind wide;
  #L4cb51c.  v2:= 9223372036854775807L;
  #L4cb526.  v4:= lcmp(v0, v2);
  #L4cb52a.  if v4 == 0 then goto L4cb5d0;
  #L4cb52e.  v4:= 1L;
  #L4cb532.  v4:= v4 + v0 @kind long;
  #L4cb534.  call temp:= `compareAndSet`(v6, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4cb53a.  v0:= temp;
  #L4cb53c.  if v0 != 0 then goto L4cb542;
  #L4cb540.  goto L4cb5d0;
  #L4cb542.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb546.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4cb54c.  v0:= temp @kind object;
  #L4cb54e.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4cb552.  if v0 == 0 then goto L4cb55c;
  #L4cb556.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cb55c.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb560.  call `onNext`(v0, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4cb566.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4cb56a.  call temp:= `apply`(v0, v7) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cb570.  v7:= temp @kind object;
  #L4cb572.  v0:= "The itemTimeoutIndicator returned a null ObservableSource." @kind object;
  #L4cb576.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4cb57c.  v7:= (`io.reactivex.rxjava3.core.ObservableSource`) v7 @kind object;
  #L4cb580.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$a`;
  #L4cb584.  call `<init>`(v0, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$a;.<init>:(JLio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$d;)V` @kind direct;
  #L4cb58a.  v1:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb58e.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4cb594.  v1:= temp;
  #L4cb596.  if v1 == 0 then goto L4cb5a0;
  #L4cb59a.  call `subscribe`(v7, v0) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4cb5a0.  return @kind void;
  #L4cb5a2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4cb5a4.  call `throwIfFatal`(v7) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4cb5aa.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb5ae.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4cb5b4.  v0:= temp @kind object;
  #L4cb5b6.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4cb5ba.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cb5c0.  call temp:= `getAndSet`(v6, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4cb5c6.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb5ca.  call `onError`(v0, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cb5d0.  return @kind void;
  catch `java.lang.Throwable` @[L4cb566..L4cb580] goto L4cb5a2;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$c;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb5f0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$c.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb5f4.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4cb5fa.  return @kind void;
}
