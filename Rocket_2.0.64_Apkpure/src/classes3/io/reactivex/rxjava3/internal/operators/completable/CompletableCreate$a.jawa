record `io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.CompletableEmitter` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4837a0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4837a6.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4837aa.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4837bc.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4837c2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4836bc.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4836c2.  v0:= temp @kind object;
  #L4836c4.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4836c8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4836ce.  v0:= temp;
  #L4836d0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4837d4.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4837da.  v0:= temp @kind object;
  #L4837dc.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4837e0.  if v0 == v1 then goto L483818;
  #L4837e4.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4837ea.  v0:= temp @kind object;
  #L4837ec.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4837f0.  if v0 == v1 then goto L483818;
  #L4837f4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4837f8.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4837fe.  if v0 == 0 then goto L483818;
  #L483802.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L483808.  goto L483818;
  #L48380a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48380c.  if v0 == 0 then goto L483816;
  #L483810.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L483816.  throw v1;
  #L483818.  return @kind void;
  catch `java.lang.Throwable` @[L4837f4..L4837fe] goto L48380a;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483838.  call temp:= `tryOnError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.tryOnError:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L48383e.  v0:= temp;
  #L483840.  if v0 != 0 then goto L48384a;
  #L483844.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48384a.  return @kind void;
}
procedure `void` `setCancellable`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v1 @kind this, `io.reactivex.rxjava3.functions.Cancellable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.setCancellable:(Lio/reactivex/rxjava3/functions/Cancellable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48385c.  v0:= new `io.reactivex.rxjava3.internal.disposables.CancellableDisposable`;
  #L483860.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/CancellableDisposable;.<init>:(Lio/reactivex/rxjava3/functions/Cancellable;)V` @kind direct;
  #L483866.  call `setDisposable`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.setDisposable:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L48386c.  return @kind void;
}
procedure `void` `setDisposable`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.setDisposable:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L483880.  call temp:= `set`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L483886.  return @kind void;
}
procedure `java.lang.String` `toString`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48375c.  v0:= 2I;
  #L48375e.  v0:= new `java.lang.Object`[v0];
  #L483762.  v1:= constclass @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` @kind object;
  #L483766.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L48376c.  v1:= temp @kind object;
  #L48376e.  v2:= 0I;
  #L483770.  v0[v2]:= v1 @kind object;
  #L483774.  call temp:= `toString`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.toString:()Ljava/lang/String;` @kind super;
  #L48377a.  v1:= temp @kind object;
  #L48377c.  v2:= 1I;
  #L48377e.  v0[v2]:= v1 @kind object;
  #L483782.  v1:= "%s{%s}" @kind object;
  #L483786.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L48378c.  v0:= temp @kind object;
  #L48378e.  return v0 @kind object;
}
procedure `boolean` `tryOnError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate$a;.tryOnError:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4836e4.  if v3 != 0 then goto L4836f4;
  #L4836e8.  v3:= "onError called with a null Throwable." @kind object;
  #L4836ec.  call temp:= `createNullPointerException`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4836f2.  v3:= temp @kind object;
  #L4836f4.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4836fa.  v0:= temp @kind object;
  #L4836fc.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L483700.  if v0 == v1 then goto L48373a;
  #L483704.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L48370a.  v0:= temp @kind object;
  #L48370c.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L483710.  if v0 == v1 then goto L48373a;
  #L483714.  v1:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableCreate$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L483718.  call `onError`(v1, v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48371e.  if v0 == 0 then goto L483728;
  #L483722.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L483728.  v3:= 1I;
  #L48372a.  return v3;
  #L48372c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48372e.  if v0 == 0 then goto L483738;
  #L483732.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L483738.  throw v3;
  #L48373a.  v3:= 0I;
  #L48373c.  return v3;
  catch `java.lang.Throwable` @[L483714..L48371e] goto L48372c;
}
