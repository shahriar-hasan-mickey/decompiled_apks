record `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind interface {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L487504.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L48750a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L48750e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L487512.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fuseToFlowable`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4874d8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAll`;
  #L4874dc.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4874e0.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4874e4.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAll;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4874ea.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4874f0.  v0:= temp @kind object;
  #L4874f2.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle` v3 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L487524.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L487528.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a`;
  #L48752c.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L487530.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L487536.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L48753c.  return @kind void;
}
