record `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.e` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.g` @AccessFlag VOLATILE;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.h` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.i` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.j` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.k` @AccessFlag VOLATILE;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.l` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `int` v5 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cd978.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4cd97e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4cd982.  v1:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue`;
  #L4cd986.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L4cd98c.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.b` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` := v1 @kind object;
  #L4cd990.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.c` @type ^`long` := v2 @kind wide;
  #L4cd994.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.d` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4cd998.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.e` @type ^`int` := v5;
  #L4cd99c.  v1:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4cd9a0.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4cd9a6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.j` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v1 @kind object;
  #L4cd9aa.  v1:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L4cd9ae.  v2:= 1I;
  #L4cd9b0.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L4cd9b6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.l` @type ^`java.util.concurrent.atomic.AtomicInteger` := v1 @kind object;
  #L4cd9ba.  return @kind void;
}
procedure `void` `a`() @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.a:()V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `b`() @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.b:()V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `c`() @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.c:()V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.d:()V` @AccessFlag FINAL {
    temp;
    v0;

  #L4cda98.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.l` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4cda9c.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4cdaa2.  v0:= temp;
  #L4cdaa4.  if v0 != 0 then goto L4cdac4;
  #L4cdaa8.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.a:()V` @kind virtual;
  #L4cdaae.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.i` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cdab2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cdab8.  v0:= 1I;
  #L4cdaba.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.k` @type ^`boolean` := v0 @kind boolean;
  #L4cdabe.  call `c`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.c:()V` @kind virtual;
  #L4cdac4.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4cd9cc.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.j` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4cd9d0.  v1:= 0I;
  #L4cd9d2.  v2:= 1I;
  #L4cd9d4.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4cd9da.  v0:= temp;
  #L4cd9dc.  if v0 == 0 then goto L4cd9e6;
  #L4cd9e0.  call `d`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.d:()V` @kind virtual;
  #L4cd9e6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4cd958.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.j` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4cd95c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4cd962.  v0:= temp;
  #L4cd964.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.onComplete:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4cd9f8.  v0:= 1I;
  #L4cd9fa.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4cd9fe.  call `c`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.c:()V` @kind virtual;
  #L4cda04.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4cda18.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.h` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4cda1c.  v1:= 1I;
  #L4cda1e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.g` @type ^`boolean` := v1 @kind boolean;
  #L4cda22.  call `c`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.c:()V` @kind virtual;
  #L4cda28.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4cda3c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.b` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L4cda40.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4cda46.  call `c`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.c:()V` @kind virtual;
  #L4cda4c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4cda60.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.i` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cda64.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4cda6a.  v0:= temp;
  #L4cda6c.  if v0 == 0 then goto L4cda84;
  #L4cda70.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.i` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4cda74.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cda78.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4cda7e.  call `b`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$a;.b:()V` @kind virtual;
  #L4cda84.  return @kind void;
}
