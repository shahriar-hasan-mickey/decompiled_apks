record `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a$a` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.e` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.f` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.fuseable.SimpleQueue` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.h` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.i` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.j` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.internal.util.ErrorMode` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b36f8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4b36fe.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4b3702.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4b3706.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v3 @kind object;
  #L4b370a.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.f` @type ^`int` := v4;
  #L4b370e.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4b3712.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4b3718.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L4b371c.  v1:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a$a`;
  #L4b3720.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;)V` @kind direct;
  #L4b3726.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a$a` := v1 @kind object;
  #L4b372a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v6 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b3788.  call temp:= `getAndIncrement`(v6) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b378e.  v0:= temp;
  #L4b3790.  if v0 == 0 then goto L4b3796;
  #L4b3794.  return @kind void;
  #L4b3796.  v0:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b379a.  v1:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4b379e.  v2:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @type ^`boolean` @kind boolean;
  #L4b37a2.  if v2 == 0 then goto L4b37b2;
  #L4b37a6.  v0:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b37aa.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4b37b0.  return @kind void;
  #L4b37b2.  v2:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.i` @type ^`boolean` @kind boolean;
  #L4b37b6.  if v2 != 0 then goto L4b387e;
  #L4b37ba.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4b37be.  v3:= 1I;
  #L4b37c0.  if v1 != v2 then goto L4b37ea;
  #L4b37c4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b37ca.  v2:= temp @kind object;
  #L4b37cc.  if v2 == 0 then goto L4b37ea;
  #L4b37d0.  v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @type ^`boolean` := v3 @kind boolean;
  #L4b37d4.  v1:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b37d8.  call `clear`(v1) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4b37de.  v1:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b37e2.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b37e8.  return @kind void;
  #L4b37ea.  v2:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.j` @type ^`boolean` @kind boolean;
  #L4b37ee.  v4:= 0I;
  #L4b37f0.  v5:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b37f4.  call temp:= `poll`(v5) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4b37fa.  v5:= temp @kind object;
  #L4b37fc.  if v5 == 0 then goto L4b381e;
  #L4b3800.  v4:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b3804.  call temp:= `apply`(v4, v5) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4b380a.  v4:= temp @kind object;
  #L4b380c.  v5:= "The mapper returned a null CompletableSource" @kind object;
  #L4b3810.  call temp:= `requireNonNull`(v4, v5) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b3816.  v4:= (`io.reactivex.rxjava3.core.CompletableSource`) v4 @kind object;
  #L4b381a.  v5:= 0I;
  #L4b381c.  goto L4b3820;
  #L4b381e.  v5:= 1I;
  #L4b3820.  if v2 == 0 then goto L4b3838;
  #L4b3824.  if v5 == 0 then goto L4b3838;
  #L4b3828.  v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @type ^`boolean` := v3 @kind boolean;
  #L4b382c.  v1:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b3830.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b3836.  return @kind void;
  #L4b3838.  if v5 != 0 then goto L4b387e;
  #L4b383c.  v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.i` @type ^`boolean` := v3 @kind boolean;
  #L4b3840.  v2:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a$a` @kind object;
  #L4b3844.  call `subscribe`(v4, v2) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4b384a.  goto L4b387e;
  #L4b384c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b384e.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3854.  v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @type ^`boolean` := v3 @kind boolean;
  #L4b3858.  v2:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b385c.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4b3862.  v2:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b3866.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b386c.  call temp:= `tryAddThrowableOrReport`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b3872.  v1:= v6.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b3876.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b387c.  return @kind void;
  #L4b387e.  call temp:= `decrementAndGet`(v6) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4b3884.  v2:= temp;
  #L4b3886.  if v2 != 0 then goto L4b379e;
  #L4b388a.  return @kind void;
  catch `java.lang.Throwable` @[L4b37f0..L4b381a] goto L4b384c;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L4b38a8.  v0:= 0I;
  #L4b38aa.  v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.i` @type ^`boolean` := v0 @kind boolean;
  #L4b38ae.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.a:()V` @kind virtual;
  #L4b38b4.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.c:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L4b38c8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b38cc.  call temp:= `tryAddThrowableOrReport`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b38d2.  v2:= temp;
  #L4b38d4.  if v2 == 0 then goto L4b3926;
  #L4b38d8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4b38dc.  v0:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4b38e0.  if v2 != v0 then goto L4b391a;
  #L4b38e4.  v2:= 1I;
  #L4b38e6.  v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @type ^`boolean` := v2 @kind boolean;
  #L4b38ea.  v2:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b38ee.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b38f4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b38f8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b38fc.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b3902.  call temp:= `getAndIncrement`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b3908.  v2:= temp;
  #L4b390a.  if v2 != 0 then goto L4b3926;
  #L4b390e.  v2:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b3912.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4b3918.  goto L4b3926;
  #L4b391a.  v2:= 0I;
  #L4b391c.  v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.i` @type ^`boolean` := v2 @kind boolean;
  #L4b3920.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.a:()V` @kind virtual;
  #L4b3926.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b373c.  v0:= 1I;
  #L4b373e.  v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @type ^`boolean` := v0 @kind boolean;
  #L4b3742.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b3746.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b374c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a$a` @kind object;
  #L4b3750.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a$a;.a:()V` @kind virtual;
  #L4b3756.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b375a.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L4b3760.  call temp:= `getAndIncrement`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b3766.  v0:= temp;
  #L4b3768.  if v0 != 0 then goto L4b3776;
  #L4b376c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b3770.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4b3776.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b36e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @type ^`boolean` @kind boolean;
  #L4b36e4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3938.  v0:= 1I;
  #L4b393a.  v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.j` @type ^`boolean` := v0 @kind boolean;
  #L4b393e.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.a:()V` @kind virtual;
  #L4b3944.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b3958.  v0:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b395c.  call temp:= `tryAddThrowableOrReport`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b3962.  v3:= temp;
  #L4b3964.  if v3 == 0 then goto L4b39b4;
  #L4b3968.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4b396c.  v0:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4b3970.  v1:= 1I;
  #L4b3972.  if v3 != v0 then goto L4b39aa;
  #L4b3976.  v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.k` @type ^`boolean` := v1 @kind boolean;
  #L4b397a.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a$a` @kind object;
  #L4b397e.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a$a;.a:()V` @kind virtual;
  #L4b3984.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b3988.  v0:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b398c.  call `tryTerminateConsumer`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b3992.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b3998.  v3:= temp;
  #L4b399a.  if v3 != 0 then goto L4b39b4;
  #L4b399e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b39a2.  call `clear`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4b39a8.  goto L4b39b4;
  #L4b39aa.  v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.j` @type ^`boolean` := v1 @kind boolean;
  #L4b39ae.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.a:()V` @kind virtual;
  #L4b39b4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b39c8.  if v2 == 0 then goto L4b39d6;
  #L4b39cc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b39d0.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4b39d6.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.a:()V` @kind virtual;
  #L4b39dc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b39f0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b39f4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b39fa.  v0:= temp;
  #L4b39fc.  if v0 == 0 then goto L4b3a6c;
  #L4b3a00.  v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v3 @kind object;
  #L4b3a04.  v0:= instanceof @variable v3 @type ^`io.reactivex.rxjava3.internal.fuseable.QueueDisposable` @kind boolean;
  #L4b3a08.  if v0 == 0 then goto L4b3a50;
  #L4b3a0c.  v3:= (`io.reactivex.rxjava3.internal.fuseable.QueueDisposable`) v3 @kind object;
  #L4b3a10.  v0:= 3I;
  #L4b3a12.  call temp:= `requestFusion`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L4b3a18.  v0:= temp;
  #L4b3a1a.  v1:= 1I;
  #L4b3a1c.  if v0 != v1 then goto L4b3a3a;
  #L4b3a20.  v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L4b3a24.  v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.j` @type ^`boolean` := v1 @kind boolean;
  #L4b3a28.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b3a2c.  call `onSubscribe`(v3, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b3a32.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable$a;.a:()V` @kind virtual;
  #L4b3a38.  return @kind void;
  #L4b3a3a.  v1:= 2I;
  #L4b3a3c.  if v0 != v1 then goto L4b3a50;
  #L4b3a40.  v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L4b3a44.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b3a48.  call `onSubscribe`(v3, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b3a4e.  return @kind void;
  #L4b3a50.  v3:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4b3a54.  v0:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.f` @type ^`int`;
  #L4b3a58.  call `<init>`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4b3a5e.  v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.g` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L4b3a62.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b3a66.  call `onSubscribe`(v3, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b3a6c.  return @kind void;
}
