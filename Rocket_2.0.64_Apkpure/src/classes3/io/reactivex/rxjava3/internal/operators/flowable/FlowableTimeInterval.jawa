record `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a3eec.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4a3ef2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v3 @kind object;
  #L4a3ef6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval.c` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L4a3efa.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeInterval;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a3f0c.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a3f10.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval$a`;
  #L4a3f14.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a3f18.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4a3f1c.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeInterval$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a3f22.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4a3f28.  return @kind void;
}
