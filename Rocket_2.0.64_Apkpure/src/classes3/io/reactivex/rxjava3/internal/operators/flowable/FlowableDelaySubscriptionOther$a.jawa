record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.<init>:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48ec24.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L48ec2a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L48ec2e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.b` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L48ec32.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a`;
  #L48ec36.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;)V` @kind direct;
  #L48ec3c.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.c` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` := v1 @kind object;
  #L48ec40.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L48ec44.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L48ec4a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L48ec4e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L48ec88.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L48ec8c.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L48ec92.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48ec60.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.c` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` @kind object;
  #L48ec64.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L48ec6a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L48ec6e.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L48ec74.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48eca4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48eca8.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L48ecae.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48ecc0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48ecc4.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48ecca.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48ecdc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48ece0.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L48ece6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48ecf8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L48ecfc.  call temp:= `deferredSetOnce`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L48ed02.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48ed14.  call temp:= `validate`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L48ed1a.  v0:= temp;
  #L48ed1c.  if v0 == 0 then goto L48ed2a;
  #L48ed20.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L48ed24.  call `deferredRequest`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L48ed2a.  return @kind void;
}
