record `io.reactivex.rxjava3.internal.operators.maybe.MaybeLift` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.maybe.a` @kind class {
  `io.reactivex.rxjava3.core.MaybeOperator` `io.reactivex.rxjava3.internal.operators.maybe.MaybeLift.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeLift` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `io.reactivex.rxjava3.core.MaybeOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeLift;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeOperator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4add88.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/a;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4add8e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeLift.a` @type ^`io.reactivex.rxjava3.core.MaybeOperator` := v2 @kind object;
  #L4add92.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeLift` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeLift;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4adda4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeLift.a` @type ^`io.reactivex.rxjava3.core.MaybeOperator` @kind object;
  #L4adda8.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeOperator;.apply:(Lio/reactivex/rxjava3/core/MaybeObserver;)Lio/reactivex/rxjava3/core/MaybeObserver;` @kind interface;
  #L4addae.  v0:= temp @kind object;
  #L4addb0.  v1:= "The operator returned a null MaybeObserver" @kind object;
  #L4addb4.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4addba.  v0:= (`io.reactivex.rxjava3.core.MaybeObserver`) v0 @kind object;
  #L4addbe.  v3:= v2.`io.reactivex.rxjava3.internal.operators.maybe.a.source` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4addc2.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4addc8.  return @kind void;
  #L4addca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4addcc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4addd2.  call `error`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind static;
  #L4addd8.  return @kind void;
  catch `java.lang.Throwable` @[L4adda4..L4addbe] goto L4addca;
}
