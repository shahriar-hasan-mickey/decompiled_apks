record `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4a7f8c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4a7f92.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4a7f96.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4a7f9c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4a7fa0.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4a7fa4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4a7faa.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4a7fae.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4a7fb2.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4a7fb8.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4a7fbc.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L4a7fc0.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v3 @kind object;
  #L4a7fc4.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a80a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a80ac.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4a80b2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a80b6.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a80bc.  return @kind void;
}
procedure `boolean` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.b:(Lorg/reactivestreams/Subscription;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a7f04.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a7f08.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4a7f0e.  v2:= temp;
  #L4a7f10.  return v2;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a7fd8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a7fdc.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4a7fe2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a7fe6.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4a7fec.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a8000.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a8004.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4a800a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a800e.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4a8014.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a8028.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a802c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4a8032.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a8036.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a803c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a8050.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a8056.  v3:= temp;
  #L4a8058.  if v3 != 0 then goto L4a8076;
  #L4a805c.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a8060.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4a8066.  v3:= temp @kind object;
  #L4a8068.  v3:= (`org.reactivestreams.Subscription`) v3 @kind object;
  #L4a806c.  v0:= 1L;
  #L4a8070.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4a8076.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a8088.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a808c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a8090.  call temp:= `deferredSetOnce`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4a8096.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a80d0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a80d4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a80d8.  call `deferredRequest`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L4a80de.  return @kind void;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a7f24.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4a7f2a.  v0:= temp @kind object;
  #L4a7f2c.  v1:= 0I;
  #L4a7f2e.  if v0 == 0 then goto L4a7f6e;
  #L4a7f32.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4a7f36.  call temp:= `apply`(v2, v4, v0) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4a7f3c.  v4:= temp @kind object;
  #L4a7f3e.  v0:= "The combiner returned a null value" @kind object;
  #L4a7f42.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7f48.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a7f4c.  call `onNext`(v0, v4) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4a7f52.  v4:= 1I;
  #L4a7f54.  return v4;
  #L4a7f56.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a7f58.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a7f5e.  call `cancel`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.cancel:()V` @kind virtual;
  #L4a7f64.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a7f68.  call `onError`(v0, v4) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a7f6e.  return v1;
  catch `java.lang.Throwable` @[L4a7f32..L4a7f48] goto L4a7f56;
}
