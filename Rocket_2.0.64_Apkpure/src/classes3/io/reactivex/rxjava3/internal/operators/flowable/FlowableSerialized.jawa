record `io.reactivex.rxjava3.internal.operators.flowable.FlowableSerialized` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSerialized` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSerialized;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a0d58.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4a0d5e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSerialized` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSerialized;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4a0d70.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a0d74.  v1:= new `io.reactivex.rxjava3.subscribers.SerializedSubscriber`;
  #L4a0d78.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4a0d7e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4a0d84.  return @kind void;
}
