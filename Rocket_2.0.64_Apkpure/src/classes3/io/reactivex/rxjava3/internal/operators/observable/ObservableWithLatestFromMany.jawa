record `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.core.ObservableSource`[] `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.a` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ceca4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4cecaa.  v1:= 0I;
  #L4cecac.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.a` @type ^`io.reactivex.rxjava3.core.ObservableSource`[] := v1 @kind object;
  #L4cecb0.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4cecb4.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4cecb8.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;[Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4cec7c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4cec82.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.a` @type ^`io.reactivex.rxjava3.core.ObservableSource`[] := v2 @kind object;
  #L4cec86.  v1:= 0I;
  #L4cec88.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.b` @type ^`java.lang.Iterable` := v1 @kind object;
  #L4cec8c.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4cec90.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany` v5 @kind this, `io.reactivex.rxjava3.core.Observer` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ceccc.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.a` @type ^`io.reactivex.rxjava3.core.ObservableSource`[] @kind object;
  #L4cecd0.  if v0 != 0 then goto L4ced36;
  #L4cecd4.  v0:= 8I;
  #L4cecd8.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4cecdc.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.b` @type ^`java.lang.Iterable` @kind object;
  #L4cece0.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4cece6.  v1:= temp @kind object;
  #L4cece8.  v2:= 0I;
  #L4cecea.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4cecf0.  v3:= temp;
  #L4cecf2.  if v3 == 0 then goto L4ced38;
  #L4cecf6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4cecfc.  v3:= temp @kind object;
  #L4cecfe.  v3:= (`io.reactivex.rxjava3.core.ObservableSource`) v3 @kind object;
  #L4ced02.  v4:= length @variable v0;
  #L4ced04.  if v2 != v4 then goto L4ced1a;
  #L4ced08.  v4:= v2 ^> 1;
  #L4ced0c.  v4:= v4 + v2 @kind int;
  #L4ced0e.  call temp:= `copyOf`(v0, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4ced14.  v0:= temp @kind object;
  #L4ced16.  v0:= (`io.reactivex.rxjava3.core.ObservableSource`[]) v0 @kind object;
  #L4ced1a.  v4:= v2 + 1;
  #L4ced1e.  v0[v2]:= v3 @kind object;
  #L4ced22.  v2:= v4;
  #L4ced24.  goto L4cecea;
  #L4ced26.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ced28.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ced2e.  call `error`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4ced34.  return @kind void;
  #L4ced36.  v2:= length @variable v0;
  #L4ced38.  if v2 != 0 then goto L4ced5c;
  #L4ced3c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMap`;
  #L4ced40.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ced44.  v2:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany$a`;
  #L4ced48.  call `<init>`(v2, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany;)V` @kind direct;
  #L4ced4e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4ced54.  call `subscribeActual`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMap;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4ced5a.  return @kind void;
  #L4ced5c.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany$b`;
  #L4ced60.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ced64.  call `<init>`(v1, v6, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4ced6a.  call `onSubscribe`(v6, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ced70.  call `e`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$b;.e:([Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind virtual;
  #L4ced76.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ced7a.  call `subscribe`(v6, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ced80.  return @kind void;
  catch `java.lang.Throwable` @[L4cecdc..L4ced22] goto L4ced26;
}
