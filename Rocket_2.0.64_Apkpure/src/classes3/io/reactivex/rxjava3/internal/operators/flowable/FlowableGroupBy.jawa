record `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 , `io.reactivex.rxjava3.functions.Function` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L495bf8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L495bfe.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L495c02.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.c` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L495c06.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.d` @type ^`int` := v4;
  #L495c0a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.e` @type ^`boolean` := v5 @kind boolean;
  #L495c0e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.f` @type ^`io.reactivex.rxjava3.functions.Function` := v6 @kind object;
  #L495c12.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy` v10 @kind this, `org.reactivestreams.Subscriber` v11 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L495c24.  v0:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.f` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L495c28.  if v0 != 0 then goto L495c3e;
  #L495c2c.  v0:= 0I;
  #L495c2e.  v1:= new `java.util.concurrent.ConcurrentHashMap`;
  #L495c32.  call `<init>`(v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L495c38.  v9:= v0 @kind object;
  #L495c3a.  v8:= v1 @kind object;
  #L495c3c.  goto L495c64;
  #L495c3e.  v0:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L495c42.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L495c48.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy$a`;
  #L495c4c.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$a;.<init>:(Ljava/util/Queue;)V` @kind direct;
  #L495c52.  v2:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.f` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L495c56.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L495c5c.  v1:= temp @kind object;
  #L495c5e.  v1:= (`java.util.Map`) v1 @kind object;
  #L495c62.  goto L495c38;
  #L495c64.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber`;
  #L495c68.  v4:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L495c6c.  v5:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L495c70.  v6:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.d` @type ^`int`;
  #L495c74.  v7:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.e` @type ^`boolean` @kind boolean;
  #L495c78.  v2:= v0 @kind object;
  #L495c7a.  v3:= v11 @kind object;
  #L495c7c.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLjava/util/Map;Ljava/util/Queue;)V` @kind direct;
  #L495c82.  v11:= v10.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L495c86.  call `subscribe`(v11, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L495c8c.  return @kind void;
  #L495c8e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L495c90.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L495c96.  v1:= `@@io.reactivex.rxjava3.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.EmptyComponent` @kind object;
  #L495c9a.  call `onSubscribe`(v11, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L495ca0.  call `onError`(v11, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L495ca6.  return @kind void;
  catch `java.lang.Throwable` @[L495c24..L495c62] goto L495c8e;
}
