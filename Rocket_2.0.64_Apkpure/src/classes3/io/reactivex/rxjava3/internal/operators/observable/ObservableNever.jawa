record `io.reactivex.rxjava3.internal.operators.observable.ObservableNever` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
}
global `io.reactivex.rxjava3.core.Observable` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableNever.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableNever;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c37d0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableNever`;
  #L4c37d4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableNever;.<init>:()V` @kind direct;
  #L4c37da.  `@@io.reactivex.rxjava3.internal.operators.observable.ObservableNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Observable` := v0 @kind object;
  #L4c37de.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableNever` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableNever;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4c37f0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4c37f6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableNever` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableNever;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4c3808.  v0:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.NEVER` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L4c380c.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c3812.  return @kind void;
}
