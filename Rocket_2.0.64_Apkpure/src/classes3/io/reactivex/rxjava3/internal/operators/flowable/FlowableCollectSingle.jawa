record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind interface {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiConsumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCollectSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48a738.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L48a73e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L48a742.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v2 @kind object;
  #L48a746.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.c` @type ^`io.reactivex.rxjava3.functions.BiConsumer` := v3 @kind object;
  #L48a74a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fuseToFlowable`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCollectSingle;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48a708.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCollect`;
  #L48a70c.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L48a710.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L48a714.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.c` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L48a718.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCollect;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L48a71e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L48a724.  v0:= temp @kind object;
  #L48a726.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle` v4 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCollectSingle;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48a75c.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L48a760.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L48a766.  v0:= temp @kind object;
  #L48a768.  v1:= "The initialSupplier returned a null value" @kind object;
  #L48a76c.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48a772.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L48a776.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle$a`;
  #L48a77a.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle.c` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L48a77e.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCollectSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L48a784.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L48a78a.  return @kind void;
  #L48a78c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48a78e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48a794.  call `error`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind static;
  #L48a79a.  return @kind void;
  catch `java.lang.Throwable` @[L48a75c..L48a772] goto L48a78c;
}
