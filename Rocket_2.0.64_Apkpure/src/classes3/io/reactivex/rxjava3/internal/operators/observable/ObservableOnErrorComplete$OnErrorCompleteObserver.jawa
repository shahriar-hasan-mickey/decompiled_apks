record `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c3d3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c3d42.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c3d46.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4c3d4a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c3d5c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c3d60.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c3d66.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c3d1c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c3d20.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4c3d26.  v0:= temp;
  #L4c3d28.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c3d78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c3d7c.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c3d82.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c3d94.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4c3d98.  call temp:= `test`(v0, v6) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4c3d9e.  v0:= temp;
  #L4c3da0.  if v0 == 0 then goto L4c3db0;
  #L4c3da4.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c3da8.  call `onComplete`(v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c3dae.  goto L4c3dba;
  #L4c3db0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c3db4.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c3dba.  return @kind void;
  #L4c3dbc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c3dbe.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c3dc4.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c3dc8.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4c3dcc.  v3:= 2I;
  #L4c3dce.  v3:= new `java.lang.Throwable`[v3];
  #L4c3dd2.  v4:= 0I;
  #L4c3dd4.  v3[v4]:= v6 @kind object;
  #L4c3dd8.  v6:= 1I;
  #L4c3dda.  v3[v6]:= v0 @kind object;
  #L4c3dde.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4c3de4.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c3dea.  return @kind void;
  catch `java.lang.Throwable` @[L4c3d94..L4c3da0] goto L4c3dbc;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c3e08.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c3e0c.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c3e12.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c3e24.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c3e28.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c3e2e.  v0:= temp;
  #L4c3e30.  if v0 == 0 then goto L4c3e42;
  #L4c3e34.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c3e38.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c3e3c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c3e42.  return @kind void;
}
