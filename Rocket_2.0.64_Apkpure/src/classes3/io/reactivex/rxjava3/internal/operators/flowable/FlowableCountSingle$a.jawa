record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48d2ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48d2b2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L48d2b6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d2c8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48d2cc.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L48d2d2.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L48d2d6.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L48d2da.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48d288.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48d28c.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L48d290.  if v0 != v1 then goto L48d298;
  #L48d294.  v0:= 1I;
  #L48d296.  goto L48d29a;
  #L48d298.  v0:= 0I;
  #L48d29a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48d2ec.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L48d2f0.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L48d2f4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L48d2f8.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.c` @type ^`long` @kind wide;
  #L48d2fc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L48d302.  v1:= temp @kind object;
  #L48d304.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L48d30a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d31c.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L48d320.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L48d324.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L48d328.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48d32e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48d340.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.c` @type ^`long` @kind wide;
  #L48d344.  v2:= 1L;
  #L48d348.  v0:= v0 + v2 @kind long;
  #L48d34a.  v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.c` @type ^`long` := v0 @kind wide;
  #L48d34e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48d360.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48d364.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L48d36a.  v0:= temp;
  #L48d36c.  if v0 == 0 then goto L48d38e;
  #L48d370.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L48d374.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L48d378.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L48d37e.  v0:= 9223372036854775807L;
  #L48d388.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48d38e.  return @kind void;
}
