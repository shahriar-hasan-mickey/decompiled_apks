record `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.e` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.g` @AccessFlag ;
  `io.reactivex.rxjava3.internal.fuseable.SimpleQueue` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.j` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.k` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L482ff8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L482ffe.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L483002.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @type ^`int` := v2;
  #L483006.  v1:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a`;
  #L48300a.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;)V` @kind direct;
  #L483010.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` := v1 @kind object;
  #L483014.  v1:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L483018.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L48301e.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v1 @kind object;
  #L483022.  v1:= v2 ^> 2;
  #L483026.  v2:= v2 - v1 @kind int;
  #L483028.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.c` @type ^`int` := v2;
  #L48302c.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L483068.  call temp:= `getAndIncrement`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L48306e.  v0:= temp;
  #L483070.  if v0 == 0 then goto L483076;
  #L483074.  return @kind void;
  #L483076.  call temp:= `isDisposed`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.isDisposed:()Z` @kind virtual;
  #L48307c.  v0:= temp;
  #L48307e.  if v0 == 0 then goto L483084;
  #L483082.  return @kind void;
  #L483084.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.k` @type ^`boolean` @kind boolean;
  #L483088.  if v0 != 0 then goto L4830ea;
  #L48308c.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.j` @type ^`boolean` @kind boolean;
  #L483090.  v1:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L483094.  call temp:= `poll`(v1) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L48309a.  v1:= temp @kind object;
  #L48309c.  v1:= (`io.reactivex.rxjava3.core.CompletableSource`) v1 @kind object;
  #L4830a0.  v2:= 1I;
  #L4830a2.  if v1 != 0 then goto L4830aa;
  #L4830a6.  v3:= 1I;
  #L4830a8.  goto L4830ac;
  #L4830aa.  v3:= 0I;
  #L4830ac.  if v0 == 0 then goto L4830c0;
  #L4830b0.  if v3 == 0 then goto L4830c0;
  #L4830b4.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4830b8.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4830be.  return @kind void;
  #L4830c0.  if v3 != 0 then goto L4830ea;
  #L4830c4.  v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.k` @type ^`boolean` := v2 @kind boolean;
  #L4830c8.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` @kind object;
  #L4830cc.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4830d2.  call `e`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.e:()V` @kind virtual;
  #L4830d8.  goto L4830ea;
  #L4830da.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4830dc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4830e2.  call `c`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4830e8.  return @kind void;
  #L4830ea.  call temp:= `decrementAndGet`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4830f0.  v0:= temp;
  #L4830f2.  if v0 != 0 then goto L483076;
  #L4830f6.  return @kind void;
  catch `java.lang.Throwable` @[L483090..L4830a0] goto L4830da;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L483114.  v0:= 0I;
  #L483116.  v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.k` @type ^`boolean` := v0 @kind boolean;
  #L48311a.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @kind virtual;
  #L483120.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.c:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L483134.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L483138.  v1:= 0I;
  #L48313a.  v2:= 1I;
  #L48313c.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L483142.  v0:= temp;
  #L483144.  if v0 == 0 then goto L48315e;
  #L483148.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48314c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L483152.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L483156.  call `onError`(v0, v4) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48315c.  goto L483164;
  #L48315e.  call `onError`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L483164.  return @kind void;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.d:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4831dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @type ^`int`;
  #L4831e0.  if v0 != 0 then goto L483206;
  #L4831e4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4831e8.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4831ee.  v2:= temp;
  #L4831f0.  if v2 != 0 then goto L483206;
  #L4831f4.  v2:= new `io.reactivex.rxjava3.exceptions.MissingBackpressureException`;
  #L4831f8.  call `<init>`(v2) @signature `Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;.<init>:()V` @kind direct;
  #L4831fe.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L483204.  return @kind void;
  #L483206.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @kind virtual;
  #L48320c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483040.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L483044.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L48304a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` @kind object;
  #L48304e.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L483054.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48331c.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @type ^`int`;
  #L483320.  v1:= 1I;
  #L483322.  if v0 == v1 then goto L48334c;
  #L483326.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.g` @type ^`int`;
  #L48332a.  v0:= v0 + v1 @kind int;
  #L48332c.  v1:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.c` @type ^`int`;
  #L483330.  if v0 != v1 then goto L483348;
  #L483334.  v1:= 0I;
  #L483336.  v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.g` @type ^`int` := v1;
  #L48333a.  v1:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48333e.  v2:= (`long`) v0 @kind i2l;
  #L483340.  call `request`(v1, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L483346.  goto L48334c;
  #L483348.  v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.g` @type ^`int` := v0;
  #L48334c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482fcc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` @kind object;
  #L482fd0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L482fd6.  v0:= temp @kind object;
  #L482fd8.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L482fdc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L482fe2.  v0:= temp;
  #L482fe4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483178.  v0:= 1I;
  #L48317a.  v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.j` @type ^`boolean` := v0 @kind boolean;
  #L48317e.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @kind virtual;
  #L483184.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L483198.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L48319c.  v1:= 0I;
  #L48319e.  v2:= 1I;
  #L4831a0.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4831a6.  v0:= temp;
  #L4831a8.  if v0 == 0 then goto L4831c2;
  #L4831ac.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` @kind object;
  #L4831b0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4831b6.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4831ba.  call `onError`(v0, v4) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4831c0.  goto L4831c8;
  #L4831c2.  call `onError`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4831c8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L483220.  v1:= (`io.reactivex.rxjava3.core.CompletableSource`) v1 @kind object;
  #L483224.  call `d`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.d:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind virtual;
  #L48322a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v6 @kind this, `org.reactivestreams.Subscription` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48323c.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L483240.  call temp:= `validate`(v0, v7) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L483246.  v0:= temp;
  #L483248.  if v0 == 0 then goto L48330a;
  #L48324c.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` := v7 @kind object;
  #L483250.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @type ^`int`;
  #L483254.  v1:= 2147483647I;
  #L48325a.  if v0 != v1 then goto L48326a;
  #L48325e.  v2:= 9223372036854775807L;
  #L483268.  goto L48326c;
  #L48326a.  v2:= (`long`) v0 @kind i2l;
  #L48326c.  v0:= instanceof @variable v7 @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind boolean;
  #L483270.  if v0 == 0 then goto L4832c8;
  #L483274.  v0:= v7 @kind object;
  #L483276.  v0:= (`io.reactivex.rxjava3.internal.fuseable.QueueSubscription`) v0 @kind object;
  #L48327a.  v4:= 3I;
  #L48327c.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L483282.  v4:= temp;
  #L483284.  v5:= 1I;
  #L483286.  if v4 != v5 then goto L4832a8;
  #L48328a.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @type ^`int` := v4;
  #L48328e.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L483292.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.j` @type ^`boolean` := v5 @kind boolean;
  #L483296.  v7:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L48329a.  call `onSubscribe`(v7, v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4832a0.  call `a`(v6) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @kind virtual;
  #L4832a6.  return @kind void;
  #L4832a8.  v5:= 2I;
  #L4832aa.  if v4 != v5 then goto L4832c8;
  #L4832ae.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @type ^`int` := v4;
  #L4832b2.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4832b6.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4832ba.  call `onSubscribe`(v0, v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4832c0.  call `request`(v7, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4832c6.  return @kind void;
  #L4832c8.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @type ^`int`;
  #L4832cc.  if v0 != v1 then goto L4832e8;
  #L4832d0.  v0:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4832d4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4832da.  v1:= temp;
  #L4832dc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4832e2.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4832e6.  goto L4832fa;
  #L4832e8.  v0:= new `io.reactivex.rxjava3.internal.queue.SpscArrayQueue`;
  #L4832ec.  v1:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @type ^`int`;
  #L4832f0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.<init>:(I)V` @kind direct;
  #L4832f6.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4832fa.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4832fe.  call `onSubscribe`(v0, v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L483304.  call `request`(v7, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48330a.  return @kind void;
}
