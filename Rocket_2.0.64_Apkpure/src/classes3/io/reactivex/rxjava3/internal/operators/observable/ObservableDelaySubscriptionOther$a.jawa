record `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.c` @AccessFlag ;
  `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther` `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther` v1 @kind object, `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` v2 @kind object, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther;Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bc030.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.d` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther` := v1 @kind object;
  #L4bc034.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bc03a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.a` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v2 @kind object;
  #L4bc03e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.b` @type ^`io.reactivex.rxjava3.core.Observer` := v3 @kind object;
  #L4bc042.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bc054.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.c` @type ^`boolean` @kind boolean;
  #L4bc058.  if v0 == 0 then goto L4bc05e;
  #L4bc05c.  return @kind void;
  #L4bc05e.  v0:= 1I;
  #L4bc060.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.c` @type ^`boolean` := v0 @kind boolean;
  #L4bc064.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.d` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther` @kind object;
  #L4bc068.  v0:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4bc06c.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a$a`;
  #L4bc070.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther$a;)V` @kind direct;
  #L4bc076.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4bc07c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc090.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.c` @type ^`boolean` @kind boolean;
  #L4bc094.  if v0 == 0 then goto L4bc0a0;
  #L4bc098.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bc09e.  return @kind void;
  #L4bc0a0.  v0:= 1I;
  #L4bc0a2.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.c` @type ^`boolean` := v0 @kind boolean;
  #L4bc0a6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.b` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bc0aa.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bc0b0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4bc0c4.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther$a;.onComplete:()V` @kind virtual;
  #L4bc0ca.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc0dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther$a.a` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4bc0e0.  call temp:= `update`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.update:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4bc0e6.  return @kind void;
}
