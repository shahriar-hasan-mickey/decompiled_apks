record `io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToObservable` @kind interface {
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCountSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bb0b8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4bb0be.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v1 @kind object;
  #L4bb0c2.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `fuseToObservable`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCountSingle;.fuseToObservable:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bb090.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCount`;
  #L4bb094.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4bb098.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCount;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4bb09e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4bb0a4.  v0:= temp @kind object;
  #L4bb0a6.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCountSingle;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bb0d4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4bb0d8.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle$a`;
  #L4bb0dc.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCountSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4bb0e2.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4bb0e8.  return @kind void;
}
