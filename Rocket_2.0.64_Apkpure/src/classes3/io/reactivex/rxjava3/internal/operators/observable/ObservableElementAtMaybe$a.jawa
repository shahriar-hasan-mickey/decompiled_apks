record `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.c` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bd048.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bd04e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4bd052.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.b` @type ^`long` := v2 @kind wide;
  #L4bd056.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bd068.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bd06c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bd072.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bd028.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bd02c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4bd032.  v0:= temp;
  #L4bd034.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bd084.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L4bd088.  if v0 != 0 then goto L4bd09c;
  #L4bd08c.  v0:= 1I;
  #L4bd08e.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4bd092.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4bd096.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4bd09c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bd0b0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L4bd0b4.  if v0 == 0 then goto L4bd0c0;
  #L4bd0b8.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bd0be.  return @kind void;
  #L4bd0c0.  v0:= 1I;
  #L4bd0c2.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4bd0c6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4bd0ca.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bd0d0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4bd0e4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L4bd0e8.  if v0 == 0 then goto L4bd0ee;
  #L4bd0ec.  return @kind void;
  #L4bd0ee.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.d` @type ^`long` @kind wide;
  #L4bd0f2.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.b` @type ^`long` @kind wide;
  #L4bd0f6.  v4:= lcmp(v0, v2);
  #L4bd0fa.  if v4 != 0 then goto L4bd11a;
  #L4bd0fe.  v0:= 1I;
  #L4bd100.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4bd104.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bd108.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4bd10e.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4bd112.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4bd118.  return @kind void;
  #L4bd11a.  v2:= 1L;
  #L4bd11e.  v0:= v0 + v2 @kind long;
  #L4bd120.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.d` @type ^`long` := v0 @kind wide;
  #L4bd124.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bd138.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4bd13c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4bd142.  v0:= temp;
  #L4bd144.  if v0 == 0 then goto L4bd156;
  #L4bd148.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4bd14c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4bd150.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4bd156.  return @kind void;
}
