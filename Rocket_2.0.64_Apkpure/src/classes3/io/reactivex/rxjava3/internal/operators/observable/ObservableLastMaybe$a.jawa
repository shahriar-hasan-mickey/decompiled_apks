record `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c255c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c2562.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4c2566.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2578.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c257c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c2582.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4c2586.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4c258a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c2538.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c253c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4c2540.  if v0 != v1 then goto L4c2548;
  #L4c2544.  v0:= 1I;
  #L4c2546.  goto L4c254a;
  #L4c2548.  v0:= 0I;
  #L4c254a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c259c.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4c25a0.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4c25a4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` @kind object;
  #L4c25a8.  if v0 == 0 then goto L4c25be;
  #L4c25ac.  v1:= 0I;
  #L4c25ae.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4c25b2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4c25b6.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4c25bc.  goto L4c25c8;
  #L4c25be.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4c25c2.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4c25c8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c25dc.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4c25e0.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4c25e4.  v0:= 0I;
  #L4c25e6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L4c25ea.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4c25ee.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c25f4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4c2608.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4c260c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2620.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c2624.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c262a.  v0:= temp;
  #L4c262c.  if v0 == 0 then goto L4c263e;
  #L4c2630.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c2634.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4c2638.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c263e.  return @kind void;
}
