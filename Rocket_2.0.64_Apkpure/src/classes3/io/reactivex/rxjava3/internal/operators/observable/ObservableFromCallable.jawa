record `io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `java.util.concurrent.Callable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bf71c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4bf722.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L4bf726.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromCallable;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bf6f0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L4bf6f4.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4bf6fa.  v0:= temp @kind object;
  #L4bf6fc.  v1:= "The Callable returned a null value." @kind object;
  #L4bf700.  call temp:= `nullCheck`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bf706.  v0:= temp @kind object;
  #L4bf708.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable` v3 @kind this, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromCallable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4bf738.  v0:= new `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable`;
  #L4bf73c.  call `<init>`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4bf742.  call `onSubscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4bf748.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4bf74e.  v1:= temp;
  #L4bf750.  if v1 == 0 then goto L4bf756;
  #L4bf754.  return @kind void;
  #L4bf756.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L4bf75a.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4bf760.  v1:= temp @kind object;
  #L4bf762.  v2:= "Callable returned a null value." @kind object;
  #L4bf766.  call temp:= `nullCheck`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bf76c.  v4:= temp @kind object;
  #L4bf76e.  call `complete`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4bf774.  return @kind void;
  #L4bf776.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bf778.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf77e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4bf784.  v0:= temp;
  #L4bf786.  if v0 != 0 then goto L4bf792;
  #L4bf78a.  call `onError`(v4, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bf790.  goto L4bf798;
  #L4bf792.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf798.  return @kind void;
  catch `java.lang.Throwable` @[L4bf756..L4bf76e] goto L4bf776;
}
