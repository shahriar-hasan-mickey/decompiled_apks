record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` @kind class {
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4901e0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4901e6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.a` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4901ea.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4901ee.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.c` @type ^`io.reactivex.rxjava3.functions.Action` := v4 @kind object;
  #L4901f2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` := v5 @kind object;
  #L4901f6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L490208.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L49020c.  if v0 == 0 then goto L490212;
  #L490210.  return @kind void;
  #L490212.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L490216.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L49021c.  v0:= 1I;
  #L49021e.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L490222.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L490226.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L49022c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L490230.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L490236.  goto L490246;
  #L490238.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49023a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L490240.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L490246.  return @kind void;
  #L490248.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49024a.  call `fail`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L490250.  return @kind void;
  catch `java.lang.Throwable` @[L490212..L49021c] goto L490248;
  catch `java.lang.Throwable` @[L49022c..L490236] goto L490238;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49027c.  v0:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L490280.  if v0 == 0 then goto L49028c;
  #L490284.  call `onError`(v7) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L49028a.  return @kind void;
  #L49028c.  v0:= 1I;
  #L49028e.  v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L490292.  v1:= 0I;
  #L490294.  v2:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L490298.  call `accept`(v2, v7) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L49029e.  goto L4902cc;
  #L4902a0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4902a2.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4902a8.  v3:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4902ac.  v4:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4902b0.  v5:= 2I;
  #L4902b2.  v5:= new `java.lang.Throwable`[v5];
  #L4902b6.  v5[v1]:= v7 @kind object;
  #L4902ba.  v5[v0]:= v2 @kind object;
  #L4902be.  call `<init>`(v4, v5) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4902c4.  call `onError`(v3, v4) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4902ca.  v0:= 0I;
  #L4902cc.  if v0 == 0 then goto L4902da;
  #L4902d0.  v0:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4902d4.  call `onError`(v0, v7) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4902da.  v7:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4902de.  call `run`(v7) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4902e4.  goto L4902f4;
  #L4902e6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4902e8.  call `throwIfFatal`(v7) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4902ee.  call `onError`(v7) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4902f4.  return @kind void;
  catch `java.lang.Throwable` @[L490294..L49029e] goto L4902a0;
  catch `java.lang.Throwable` @[L4902da..L4902e4] goto L4902e6;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L490320.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L490324.  if v0 == 0 then goto L49032a;
  #L490328.  return @kind void;
  #L49032a.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L49032e.  if v0 == 0 then goto L490340;
  #L490332.  v2:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L490336.  v0:= 0I;
  #L490338.  call `onNext`(v2, v0) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L49033e.  return @kind void;
  #L490340.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.a` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L490344.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L49034a.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L49034e.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L490354.  return @kind void;
  #L490356.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L490358.  call `fail`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49035e.  return @kind void;
  catch `java.lang.Throwable` @[L490340..L49034a] goto L490356;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v6 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4900c4.  v0:= 0I;
  #L4900c6.  v1:= 2I;
  #L4900c8.  v2:= 1I;
  #L4900ca.  v3:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4900ce.  call temp:= `poll`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4900d4.  v3:= temp @kind object;
  #L4900d6.  if v3 == 0 then goto L49013a;
  #L4900da.  v4:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.a` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4900de.  call `accept`(v4, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4900e4.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4900e8.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4900ee.  goto L490156;
  #L4900f0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4900f2.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4900f8.  v4:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4900fc.  call `accept`(v4, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L490102.  call temp:= `throwIfThrowable`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.throwIfThrowable:(Ljava/lang/Throwable;)Ljava/lang/Exception;` @kind static;
  #L490108.  v0:= temp @kind object;
  #L49010a.  throw v0;
  #L49010c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49010e.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L490114.  v5:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L490118.  v1:= new `java.lang.Throwable`[v1];
  #L49011c.  v1[v0]:= v3 @kind object;
  #L490120.  v1[v2]:= v4 @kind object;
  #L490124.  call `<init>`(v5, v1) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L49012a.  throw v5;
  #L49012c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49012e.  v1:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L490132.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L490138.  throw v0;
  #L49013a.  v0:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L49013e.  if v0 != v2 then goto L490156;
  #L490142.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L490146.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L49014c.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L490150.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L490156.  return v3 @kind object;
  #L490158.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49015a.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L490160.  v4:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L490164.  call `accept`(v4, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L49016a.  call temp:= `throwIfThrowable`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.throwIfThrowable:(Ljava/lang/Throwable;)Ljava/lang/Exception;` @kind static;
  #L490170.  v0:= temp @kind object;
  #L490172.  throw v0;
  #L490174.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L490176.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49017c.  v5:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L490180.  v1:= new `java.lang.Throwable`[v1];
  #L490184.  v1[v0]:= v3 @kind object;
  #L490188.  v1[v2]:= v4 @kind object;
  #L49018c.  call `<init>`(v5, v1) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L490192.  throw v5;
  catch `java.lang.Throwable` @[L4900ca..L4900d6] goto L490158;
  catch `java.lang.Throwable` @[L4900da..L4900e4] goto L4900f0;
  catch `java.lang.Throwable` @[L4900f2..L4900f8] goto L49012c;
  catch `java.lang.Throwable` @[L4900f8..L490102] goto L49010c;
  catch `java.lang.Throwable` @[L490102..L49012c] goto L49012c;
  catch `java.lang.Throwable` @[L490160..L49016a] goto L490174;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L4900a8.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L4900ae.  v1:= temp;
  #L4900b0.  return v1;
}
