record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFilter;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L490f24.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L490f2a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L490f2e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFilter;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L490f40.  v0:= instanceof @variable v4 @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L490f44.  if v0 == 0 then goto L490f66;
  #L490f48.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L490f4c.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter$a`;
  #L490f50.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber`) v4 @kind object;
  #L490f54.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L490f58.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFilter$a;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L490f5e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L490f64.  goto L490f7e;
  #L490f66.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L490f6a.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter$b`;
  #L490f6e.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L490f72.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFilter$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L490f78.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L490f7e.  return @kind void;
}
