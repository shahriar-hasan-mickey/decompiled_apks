record `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d682c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4d6832.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4d6836.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4d683a.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4d683e.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d6844.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4d6848.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d685c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d6860.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d6866.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d686a.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d6870.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6884.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d6888.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4d688e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d68a0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d68a4.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d68aa.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d68bc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d68c0.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4d68c6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4d68d8.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4d68dc.  v1:= v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d68e0.  call `onSubscribe`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4d68e6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d68f8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d68fc.  call temp:= `deferredSetOnce`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4d6902.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d6914.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4d6918.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4d691e.  v3:= temp @kind object;
  #L4d6920.  v0:= "the mapper returned a null Publisher" @kind object;
  #L4d6924.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d692a.  v3:= (`org.reactivestreams.Publisher`) v3 @kind object;
  #L4d692e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d6932.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d6938.  v0:= temp @kind object;
  #L4d693a.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4d693e.  if v0 == v1 then goto L4d6948;
  #L4d6942.  call `subscribe`(v3, v2) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4d6948.  return @kind void;
  #L4d694a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d694c.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d6952.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d6956.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d695c.  return @kind void;
  catch `java.lang.Throwable` @[L4d6914..L4d692e] goto L4d694a;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d697c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d6980.  call `deferredRequest`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L4d6986.  return @kind void;
}
