record `io.reactivex.rxjava3.internal.operators.observable.ObservableRange` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableRange.a` @AccessFlag PRIVATE_FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableRange.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRange` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRange;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4c4c5c.  call `<init>`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4c4c62.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableRange.a` @type ^`int` := v3;
  #L4c4c66.  v0:= (`long`) v3 @kind i2l;
  #L4c4c68.  v3:= (`long`) v4 @kind i2l;
  #L4c4c6a.  v0:= v0 + v3 @kind long;
  #L4c4c6c.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableRange.b` @type ^`long` := v0 @kind wide;
  #L4c4c70.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRange` v7 @kind this, `io.reactivex.rxjava3.core.Observer` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRange;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c4c84.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRange$a`;
  #L4c4c88.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableRange.a` @type ^`int`;
  #L4c4c8c.  v2:= (`long`) v0 @kind i2l;
  #L4c4c8e.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableRange.b` @type ^`long` @kind wide;
  #L4c4c92.  v0:= v6 @kind object;
  #L4c4c94.  v1:= v8 @kind object;
  #L4c4c96.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRange$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;JJ)V` @kind direct;
  #L4c4c9c.  call `onSubscribe`(v8, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c4ca2.  call `run`(v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRange$a;.run:()V` @kind virtual;
  #L4c4ca8.  return @kind void;
}
