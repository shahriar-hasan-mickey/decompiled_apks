record `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$d` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.f` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cb100.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4cb106.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4cb10a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4cb10e.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4cb112.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4cb118.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4cb11c.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v3 @kind object;
  #L4cb120.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4cb124.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4cb12a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L4cb12e.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4cb132.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4cb138.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4cb13c.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `long` v4 , `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.a:(JLjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4cb37c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4cb380.  v1:= 9223372036854775807L;
  #L4cb38a.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4cb390.  v4:= temp;
  #L4cb392.  if v4 == 0 then goto L4cb3a8;
  #L4cb396.  call temp:= `dispose`(v3) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4cb39c.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb3a0.  call `onError`(v4, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cb3a6.  goto L4cb3ae;
  #L4cb3a8.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4cb3ae.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4cb328.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4cb32c.  v1:= 9223372036854775807L;
  #L4cb336.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4cb33c.  v4:= temp;
  #L4cb33e.  if v4 == 0 then goto L4cb36a;
  #L4cb342.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb346.  call temp:= `dispose`(v4) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4cb34c.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4cb350.  v5:= 0I;
  #L4cb352.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v5 @kind object;
  #L4cb356.  v5:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a`;
  #L4cb35a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb35e.  call `<init>`(v5, v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/concurrent/atomic/AtomicReference;)V` @kind direct;
  #L4cb364.  call `subscribe`(v4, v5) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4cb36a.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.c:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4cb3c0.  if v4 == 0 then goto L4cb3e8;
  #L4cb3c4.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$a`;
  #L4cb3c8.  v1:= 0L;
  #L4cb3cc.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$a;.<init>:(JLio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$d;)V` @kind direct;
  #L4cb3d2.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb3d6.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4cb3dc.  v1:= temp;
  #L4cb3de.  if v1 == 0 then goto L4cb3e8;
  #L4cb3e2.  call `subscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4cb3e8.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb150.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb154.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4cb15a.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4cb160.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb164.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4cb16a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb0d8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4cb0de.  v0:= temp @kind object;
  #L4cb0e0.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4cb0e4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4cb0ea.  v0:= temp;
  #L4cb0ec.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cb17c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4cb180.  v1:= 9223372036854775807L;
  #L4cb18a.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4cb190.  v3:= temp @kind wide;
  #L4cb192.  v0:= lcmp(v3, v1);
  #L4cb196.  if v0 == 0 then goto L4cb1b8;
  #L4cb19a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb19e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4cb1a4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb1a8.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4cb1ae.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb1b2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4cb1b8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cb1cc.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4cb1d0.  v1:= 9223372036854775807L;
  #L4cb1da.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4cb1e0.  v3:= temp @kind wide;
  #L4cb1e2.  v0:= lcmp(v3, v1);
  #L4cb1e6.  if v0 == 0 then goto L4cb20a;
  #L4cb1ea.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb1ee.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4cb1f4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb1f8.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cb1fe.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb202.  call `dispose`(v6) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4cb208.  goto L4cb210;
  #L4cb20a.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4cb210.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4cb224.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4cb228.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4cb22e.  v0:= temp @kind wide;
  #L4cb230.  v2:= 9223372036854775807L;
  #L4cb23a.  v4:= lcmp(v0, v2);
  #L4cb23e.  if v4 == 0 then goto L4cb2ec;
  #L4cb242.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4cb246.  v5:= 1L;
  #L4cb24a.  v5:= v5 + v0 @kind long;
  #L4cb24c.  call temp:= `compareAndSet`(v4, v0, v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4cb252.  v0:= temp;
  #L4cb254.  if v0 != 0 then goto L4cb25a;
  #L4cb258.  goto L4cb2ec;
  #L4cb25a.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb25e.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4cb264.  v0:= temp @kind object;
  #L4cb266.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4cb26a.  if v0 == 0 then goto L4cb274;
  #L4cb26e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cb274.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb278.  call `onNext`(v0, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4cb27e.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4cb282.  call temp:= `apply`(v0, v8) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cb288.  v8:= temp @kind object;
  #L4cb28a.  v0:= "The itemTimeoutIndicator returned a null ObservableSource." @kind object;
  #L4cb28e.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4cb294.  v8:= (`io.reactivex.rxjava3.core.ObservableSource`) v8 @kind object;
  #L4cb298.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$a`;
  #L4cb29c.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$a;.<init>:(JLio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$d;)V` @kind direct;
  #L4cb2a2.  v1:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4cb2a6.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4cb2ac.  v1:= temp;
  #L4cb2ae.  if v1 == 0 then goto L4cb2b8;
  #L4cb2b2.  call `subscribe`(v8, v0) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4cb2b8.  return @kind void;
  #L4cb2ba.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4cb2bc.  call `throwIfFatal`(v8) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4cb2c2.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb2c6.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4cb2cc.  v0:= temp @kind object;
  #L4cb2ce.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4cb2d2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cb2d8.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4cb2dc.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4cb2e2.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb2e6.  call `onError`(v0, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cb2ec.  return @kind void;
  catch `java.lang.Throwable` @[L4cb27e..L4cb298] goto L4cb2ba;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb30c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb310.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4cb316.  return @kind void;
}
