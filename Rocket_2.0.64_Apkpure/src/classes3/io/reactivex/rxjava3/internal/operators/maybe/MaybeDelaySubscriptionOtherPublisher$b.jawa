record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4aa9e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aa9ee.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a`;
  #L4aa9f2.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4aa9f8.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` := v0 @kind object;
  #L4aa9fc.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v3 @kind object;
  #L4aaa00.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4aab18.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4aab1c.  v1:= 0I;
  #L4aab1e.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v1 @kind object;
  #L4aab22.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L4aab26.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4aab2c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aaa14.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4aaa18.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4aaa1e.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4aaa22.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4aaa26.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L4aaa2a.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4aaa30.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa9bc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L4aa9c0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4aa9c6.  v0:= temp @kind object;
  #L4aa9c8.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4aa9cc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aa9d2.  v0:= temp;
  #L4aa9d4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aaa44.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4aaa48.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4aaa4c.  if v0 == v1 then goto L4aaa5a;
  #L4aaa50.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L4aaa54.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @kind virtual;
  #L4aaa5a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aaa6c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4aaa70.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4aaa74.  if v0 == v1 then goto L4aaa8c;
  #L4aaa78.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L4aaa7c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L4aaa80.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aaa84.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aaa8a.  goto L4aaa92;
  #L4aaa8c.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4aaa92.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aaaa4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4aaaa8.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4aaaac.  if v2 == v0 then goto L4aaac0;
  #L4aaab0.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4aaab6.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4aaaba.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @kind virtual;
  #L4aaac0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aaad4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4aaad8.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4aaade.  v0:= temp;
  #L4aaae0.  if v0 == 0 then goto L4aab06;
  #L4aaae4.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4aaae8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L4aaaec.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aaaf0.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4aaaf6.  v0:= 9223372036854775807L;
  #L4aab00.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4aab06.  return @kind void;
}
