record `io.reactivex.rxjava3.internal.operators.single.SingleFromCallable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.rxjava3.internal.operators.single.SingleFromCallable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFromCallable` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d6a30.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4d6a36.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFromCallable.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L4d6a3a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleFromCallable` v3 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromCallable;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4d6a4c.  call temp:= `b`() @signature `Ls0/d;.b:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4d6a52.  v0:= temp @kind object;
  #L4d6a54.  call `onSubscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d6a5a.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d6a60.  v1:= temp;
  #L4d6a62.  if v1 == 0 then goto L4d6a68;
  #L4d6a66.  return @kind void;
  #L4d6a68.  v1:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromCallable.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L4d6a6c.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4d6a72.  v1:= temp @kind object;
  #L4d6a74.  v2:= "The callable returned a null value" @kind object;
  #L4d6a78.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d6a7e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d6a84.  v0:= temp;
  #L4d6a86.  if v0 != 0 then goto L4d6a90;
  #L4d6a8a.  call `onSuccess`(v4, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d6a90.  return @kind void;
  #L4d6a92.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d6a94.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d6a9a.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d6aa0.  v0:= temp;
  #L4d6aa2.  if v0 != 0 then goto L4d6aae;
  #L4d6aa6.  call `onError`(v4, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d6aac.  goto L4d6ab4;
  #L4d6aae.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d6ab4.  return @kind void;
  catch `java.lang.Throwable` @[L4d6a68..L4d6a7e] goto L4d6a92;
}
