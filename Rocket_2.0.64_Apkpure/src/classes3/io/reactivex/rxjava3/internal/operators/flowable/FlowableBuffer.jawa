record `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `int` v2 , `int` v3 , `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IILio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L489f1c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L489f22.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @type ^`int` := v2;
  #L489f26.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @type ^`int` := v3;
  #L489f2a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @type ^`io.reactivex.rxjava3.functions.Supplier` := v4 @kind object;
  #L489f2e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L489f40.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @type ^`int`;
  #L489f44.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @type ^`int`;
  #L489f48.  if v0 != v1 then goto L489f66;
  #L489f4c.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L489f50.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$a`;
  #L489f54.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L489f58.  call `<init>`(v2, v6, v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer$a;.<init>:(Lorg/reactivestreams/Subscriber;ILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L489f5e.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L489f64.  goto L489fac;
  #L489f66.  if v1 <= v0 then goto L489f8c;
  #L489f6a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L489f6e.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$c`;
  #L489f72.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @type ^`int`;
  #L489f76.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @type ^`int`;
  #L489f7a.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L489f7e.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer$c;.<init>:(Lorg/reactivestreams/Subscriber;IILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L489f84.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L489f8a.  goto L489fac;
  #L489f8c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L489f90.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$b`;
  #L489f94.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @type ^`int`;
  #L489f98.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @type ^`int`;
  #L489f9c.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L489fa0.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer$b;.<init>:(Lorg/reactivestreams/Subscriber;IILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L489fa6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L489fac.  return @kind void;
}
