record `io.reactivex.rxjava3.internal.operators.mixed.a` @kind class @AccessFlag FINAL {
}
procedure `boolean` `a`(`java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.core.CompletableObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/a;.a:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/CompletableObserver;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4b4f98.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4b4f9c.  if v0 == 0 then goto L4b4ff0;
  #L4b4fa0.  v2:= (`io.reactivex.rxjava3.functions.Supplier`) v2 @kind object;
  #L4b4fa4.  v0:= 0I;
  #L4b4fa6.  v1:= 1I;
  #L4b4fa8.  call temp:= `get`(v2) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4b4fae.  v2:= temp @kind object;
  #L4b4fb0.  if v2 == 0 then goto L4b4fcc;
  #L4b4fb4.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4b4fba.  v2:= temp @kind object;
  #L4b4fbc.  v3:= "The mapper returned a null CompletableSource" @kind object;
  #L4b4fc0.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b4fc6.  v0:= v2 @kind object;
  #L4b4fc8.  v0:= (`io.reactivex.rxjava3.core.CompletableSource`) v0 @kind object;
  #L4b4fcc.  if v0 != 0 then goto L4b4fd8;
  #L4b4fd0.  call `complete`(v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind static;
  #L4b4fd6.  goto L4b4fde;
  #L4b4fd8.  call `subscribe`(v0, v4) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4b4fde.  return v1;
  #L4b4fe0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b4fe2.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b4fe8.  call `error`(v2, v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind static;
  #L4b4fee.  return v1;
  #L4b4ff0.  v2:= 0I;
  #L4b4ff2.  return v2;
  catch `java.lang.Throwable` @[L4b4fa8..L4b4fcc] goto L4b4fe0;
}
procedure `boolean` `b`(`java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/a;.b:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/Observer;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4b5010.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4b5014.  if v0 == 0 then goto L4b5070;
  #L4b5018.  v2:= (`io.reactivex.rxjava3.functions.Supplier`) v2 @kind object;
  #L4b501c.  v0:= 0I;
  #L4b501e.  v1:= 1I;
  #L4b5020.  call temp:= `get`(v2) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4b5026.  v2:= temp @kind object;
  #L4b5028.  if v2 == 0 then goto L4b5044;
  #L4b502c.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4b5032.  v2:= temp @kind object;
  #L4b5034.  v3:= "The mapper returned a null MaybeSource" @kind object;
  #L4b5038.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b503e.  v0:= v2 @kind object;
  #L4b5040.  v0:= (`io.reactivex.rxjava3.core.MaybeSource`) v0 @kind object;
  #L4b5044.  if v0 != 0 then goto L4b5050;
  #L4b5048.  call `complete`(v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b504e.  goto L4b505e;
  #L4b5050.  call temp:= `create`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.create:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/MaybeObserver;` @kind static;
  #L4b5056.  v2:= temp @kind object;
  #L4b5058.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4b505e.  return v1;
  #L4b5060.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b5062.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b5068.  call `error`(v2, v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b506e.  return v1;
  #L4b5070.  v2:= 0I;
  #L4b5072.  return v2;
  catch `java.lang.Throwable` @[L4b5020..L4b5044] goto L4b5060;
}
procedure `boolean` `c`(`java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/a;.c:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/Observer;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4b5090.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4b5094.  if v0 == 0 then goto L4b50f0;
  #L4b5098.  v2:= (`io.reactivex.rxjava3.functions.Supplier`) v2 @kind object;
  #L4b509c.  v0:= 0I;
  #L4b509e.  v1:= 1I;
  #L4b50a0.  call temp:= `get`(v2) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4b50a6.  v2:= temp @kind object;
  #L4b50a8.  if v2 == 0 then goto L4b50c4;
  #L4b50ac.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4b50b2.  v2:= temp @kind object;
  #L4b50b4.  v3:= "The mapper returned a null SingleSource" @kind object;
  #L4b50b8.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b50be.  v0:= v2 @kind object;
  #L4b50c0.  v0:= (`io.reactivex.rxjava3.core.SingleSource`) v0 @kind object;
  #L4b50c4.  if v0 != 0 then goto L4b50d0;
  #L4b50c8.  call `complete`(v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b50ce.  goto L4b50de;
  #L4b50d0.  call temp:= `create`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.create:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/SingleObserver;` @kind static;
  #L4b50d6.  v2:= temp @kind object;
  #L4b50d8.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4b50de.  return v1;
  #L4b50e0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b50e2.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b50e8.  call `error`(v2, v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b50ee.  return v1;
  #L4b50f0.  v2:= 0I;
  #L4b50f2.  return v2;
  catch `java.lang.Throwable` @[L4b50a0..L4b50c4] goto L4b50e0;
}
