record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab214.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4ab21a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4ab21e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.b` @type ^`io.reactivex.rxjava3.functions.Action` := v2 @kind object;
  #L4ab222.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4ab2f4.  v0:= 0I;
  #L4ab2f6.  v1:= 1I;
  #L4ab2f8.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L4ab2fe.  v0:= temp;
  #L4ab300.  if v0 == 0 then goto L4ab31e;
  #L4ab304.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4ab308.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4ab30e.  goto L4ab31e;
  #L4ab310.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab312.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab318.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab31e.  return @kind void;
  catch `java.lang.Throwable` @[L4ab304..L4ab30e] goto L4ab310;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab234.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab238.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab23e.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.a:()V` @kind virtual;
  #L4ab244.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab1f4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab1f8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ab1fe.  v0:= temp;
  #L4ab200.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab258.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab25c.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4ab262.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.a:()V` @kind virtual;
  #L4ab268.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab27c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab280.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ab286.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.a:()V` @kind virtual;
  #L4ab28c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab2a0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab2a4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ab2aa.  v0:= temp;
  #L4ab2ac.  if v0 == 0 then goto L4ab2be;
  #L4ab2b0.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4ab2b4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab2b8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ab2be.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab2d0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoFinally$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ab2d4.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4ab2da.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoFinally$a;.a:()V` @kind virtual;
  #L4ab2e0.  return @kind void;
}
