record `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a284c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4a2852.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4a2856.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.c` @type ^`int` := v3;
  #L4a285a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.d` @type ^`boolean` := v4 @kind boolean;
  #L4a285e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4a2870.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a2874.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4a2878.  call temp:= `tryScalarXMapSubscribe`(v0, v6, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)Z` @kind static;
  #L4a287e.  v0:= temp;
  #L4a2880.  if v0 == 0 then goto L4a2886;
  #L4a2884.  return @kind void;
  #L4a2886.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a288a.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$b`;
  #L4a288e.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4a2892.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.c` @type ^`int`;
  #L4a2896.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap.d` @type ^`boolean` @kind boolean;
  #L4a289a.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a28a0.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4a28a6.  return @kind void;
}
