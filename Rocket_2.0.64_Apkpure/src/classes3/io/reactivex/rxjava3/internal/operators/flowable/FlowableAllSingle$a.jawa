record `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L487360.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L487366.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L48736a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L48736e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487380.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L487384.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L48738a.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L48738e.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L487392.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48733c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L487340.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487344.  if v0 != v1 then goto L48734c;
  #L487348.  v0:= 1I;
  #L48734a.  goto L48734e;
  #L48734c.  v0:= 0I;
  #L48734e.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4873a4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4873a8.  if v0 == 0 then goto L4873ae;
  #L4873ac.  return @kind void;
  #L4873ae.  v0:= 1I;
  #L4873b0.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4873b4.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4873b8.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4873bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4873c0.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4873c4.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4873ca.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4873dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4873e0.  if v0 == 0 then goto L4873ec;
  #L4873e4.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4873ea.  return @kind void;
  #L4873ec.  v0:= 1I;
  #L4873ee.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4873f2.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4873f6.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4873fa.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4873fe.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L487404.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487418.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L48741c.  if v0 == 0 then goto L487422;
  #L487420.  return @kind void;
  #L487422.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L487426.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L48742c.  v2:= temp;
  #L48742e.  if v2 != 0 then goto L487458;
  #L487432.  v2:= 1I;
  #L487434.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L487438.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48743c.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L487442.  v2:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487446.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L48744a.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L48744e.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L487452.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L487458.  return @kind void;
  #L48745a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48745c.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L487462.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L487466.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L48746c.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L487470.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L487474.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48747a.  return @kind void;
  catch `java.lang.Throwable` @[L487422..L48742e] goto L48745a;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L487498.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48749c.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4874a2.  v0:= temp;
  #L4874a4.  if v0 == 0 then goto L4874c6;
  #L4874a8.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4874ac.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4874b0.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4874b6.  v0:= 9223372036854775807L;
  #L4874c0.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4874c6.  return @kind void;
}
