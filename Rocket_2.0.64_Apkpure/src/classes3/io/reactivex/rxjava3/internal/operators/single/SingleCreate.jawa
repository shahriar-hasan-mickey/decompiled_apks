record `io.reactivex.rxjava3.internal.operators.single.SingleCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `io.reactivex.rxjava3.core.SingleOnSubscribe` `io.reactivex.rxjava3.internal.operators.single.SingleCreate.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate` v0 @kind this, `io.reactivex.rxjava3.core.SingleOnSubscribe` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate;.<init>:(Lio/reactivex/rxjava3/core/SingleOnSubscribe;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d3fa4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4d3faa.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleCreate.a` @type ^`io.reactivex.rxjava3.core.SingleOnSubscribe` := v1 @kind object;
  #L4d3fae.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate` v1 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d3fc0.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleCreate$a`;
  #L4d3fc4.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4d3fca.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d3fd0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleCreate.a` @type ^`io.reactivex.rxjava3.core.SingleOnSubscribe` @kind object;
  #L4d3fd4.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleOnSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/SingleEmitter;)V` @kind interface;
  #L4d3fda.  goto L4d3fea;
  #L4d3fdc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d3fde.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d3fe4.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4d3fea.  return @kind void;
  catch `java.lang.Throwable` @[L4d3fd0..L4d3fda] goto L4d3fdc;
}
