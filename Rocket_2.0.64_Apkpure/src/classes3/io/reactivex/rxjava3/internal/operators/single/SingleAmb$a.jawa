record `io.reactivex.rxjava3.internal.operators.single.SingleAmb$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface {
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/disposables/CompositeDisposable;Ljava/util/concurrent/atomic/AtomicBoolean;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d37bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d37c2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.b` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d37c6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v2 @kind object;
  #L4d37ca.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v3 @kind object;
  #L4d37ce.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d37e0.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4d37e4.  v1:= 0I;
  #L4d37e6.  v2:= 1I;
  #L4d37e8.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4d37ee.  v0:= temp;
  #L4d37f0.  if v0 == 0 then goto L4d3818;
  #L4d37f4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4d37f8.  v1:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d37fc.  call temp:= `delete`(v0, v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4d3802.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4d3806.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4d380c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.b` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d3810.  call `onError`(v0, v4) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d3816.  goto L4d381e;
  #L4d3818.  call `onError`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d381e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d3830.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4d3834.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4d3838.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4d383e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d3850.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4d3854.  v1:= 0I;
  #L4d3856.  v2:= 1I;
  #L4d3858.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4d385e.  v0:= temp;
  #L4d3860.  if v0 == 0 then goto L4d3886;
  #L4d3864.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4d3868.  v1:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d386c.  call temp:= `delete`(v0, v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4d3872.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4d3876.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4d387c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleAmb$a.b` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d3880.  call `onSuccess`(v0, v4) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d3886.  return @kind void;
}
