record `io.reactivex.rxjava3.internal.operators.flowable.FlowableScalarXMap` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableScalarXMap` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L49fdfc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49fe02.  v0:= new `java.lang.IllegalStateException`;
  #L49fe06.  v1:= "No instances!" @kind object;
  #L49fe0a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49fe10.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `scalarXMap`(`java.lang.Object` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49fdd8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableScalarXMap$a`;
  #L49fddc.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap$a;.<init>:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L49fde2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49fde8.  v1:= temp @kind object;
  #L49fdea.  return v1 @kind object;
}
procedure `boolean` `tryScalarXMapSubscribe`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49fd00.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L49fd04.  if v0 == 0 then goto L49fda2;
  #L49fd08.  v0:= 1I;
  #L49fd0a.  v1:= (`io.reactivex.rxjava3.functions.Supplier`) v1 @kind object;
  #L49fd0e.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L49fd14.  v1:= temp @kind object;
  #L49fd16.  if v1 != 0 then goto L49fd22;
  #L49fd1a.  call `complete`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L49fd20.  return v0;
  #L49fd22.  call temp:= `apply`(v3, v1) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49fd28.  v1:= temp @kind object;
  #L49fd2a.  v3:= "The mapper returned a null Publisher" @kind object;
  #L49fd2e.  call temp:= `requireNonNull`(v1, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49fd34.  v1:= (`org.reactivestreams.Publisher`) v1 @kind object;
  #L49fd38.  v3:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L49fd3c.  if v3 == 0 then goto L49fd7a;
  #L49fd40.  v1:= (`io.reactivex.rxjava3.functions.Supplier`) v1 @kind object;
  #L49fd44.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L49fd4a.  v1:= temp @kind object;
  #L49fd4c.  if v1 != 0 then goto L49fd58;
  #L49fd50.  call `complete`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L49fd56.  return v0;
  #L49fd58.  v3:= new `io.reactivex.rxjava3.internal.subscriptions.ScalarSubscription`;
  #L49fd5c.  call `<init>`(v3, v2, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/ScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V` @kind direct;
  #L49fd62.  call `onSubscribe`(v2, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L49fd68.  goto L49fd80;
  #L49fd6a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49fd6c.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49fd72.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L49fd78.  return v0;
  #L49fd7a.  call `subscribe`(v1, v2) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L49fd80.  return v0;
  #L49fd82.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49fd84.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49fd8a.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L49fd90.  return v0;
  #L49fd92.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49fd94.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49fd9a.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L49fda0.  return v0;
  #L49fda2.  v1:= 0I;
  #L49fda4.  return v1;
  catch `java.lang.Throwable` @[L49fd0a..L49fd16] goto L49fd92;
  catch `java.lang.Throwable` @[L49fd22..L49fd38] goto L49fd82;
  catch `java.lang.Throwable` @[L49fd40..L49fd4c] goto L49fd6a;
}
