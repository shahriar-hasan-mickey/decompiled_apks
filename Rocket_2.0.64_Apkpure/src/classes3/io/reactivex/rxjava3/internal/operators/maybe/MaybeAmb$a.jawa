record `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/disposables/CompositeDisposable;Ljava/util/concurrent/atomic/AtomicBoolean;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a9058.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a905e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4a9062.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v2 @kind object;
  #L4a9066.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.b` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v3 @kind object;
  #L4a906a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a907c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.b` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4a9080.  v1:= 0I;
  #L4a9082.  v2:= 1I;
  #L4a9084.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4a908a.  v0:= temp;
  #L4a908c.  if v0 == 0 then goto L4a90b2;
  #L4a9090.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4a9094.  v1:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4a9098.  call temp:= `delete`(v0, v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4a909e.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4a90a2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4a90a8.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4a90ac.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4a90b2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a90c4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.b` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4a90c8.  v1:= 0I;
  #L4a90ca.  v2:= 1I;
  #L4a90cc.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4a90d2.  v0:= temp;
  #L4a90d4.  if v0 == 0 then goto L4a90fc;
  #L4a90d8.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4a90dc.  v1:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4a90e0.  call temp:= `delete`(v0, v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4a90e6.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4a90ea.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4a90f0.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4a90f4.  call `onError`(v0, v4) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a90fa.  goto L4a9102;
  #L4a90fc.  call `onError`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a9102.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a9114.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4a9118.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4a911c.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4a9122.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeAmb$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a9134.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.b` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4a9138.  v1:= 0I;
  #L4a913a.  v2:= 1I;
  #L4a913c.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4a9142.  v0:= temp;
  #L4a9144.  if v0 == 0 then goto L4a916a;
  #L4a9148.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4a914c.  v1:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4a9150.  call temp:= `delete`(v0, v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4a9156.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4a915a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4a9160.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeAmb$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4a9164.  call `onSuccess`(v0, v4) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4a916a.  return @kind void;
}
