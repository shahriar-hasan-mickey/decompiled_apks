record `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4848c8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4848ce.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4848d2.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @type ^`int` := v2;
  #L4848d6.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.c` @type ^`boolean` := v3 @kind boolean;
  #L4848da.  v1:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4848de.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4848e4.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v1 @kind object;
  #L4848e8.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4848ec.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4848f2.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L4848f6.  v1:= 1I;
  #L4848f8.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L4848fe.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this, `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a$a` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.a:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L484940.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L484944.  call temp:= `delete`(v0, v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L48494a.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L484950.  v3:= temp;
  #L484952.  if v3 != 0 then goto L484966;
  #L484956.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L48495a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L48495e.  call `tryTerminateConsumer`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L484964.  goto L484982;
  #L484966.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @type ^`int`;
  #L48496a.  v0:= 2147483647I;
  #L484970.  if v3 == v0 then goto L484982;
  #L484974.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L484978.  v0:= 1L;
  #L48497c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L484982.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this, `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a$a` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.b:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a$a;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L484994.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L484998.  call temp:= `delete`(v0, v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L48499e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.c` @type ^`boolean` @kind boolean;
  #L4849a2.  if v3 != 0 then goto L4849e8;
  #L4849a6.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4849aa.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4849b0.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4849b4.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4849ba.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4849be.  call temp:= `tryAddThrowableOrReport`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4849c4.  v3:= temp;
  #L4849c6.  if v3 == 0 then goto L484a30;
  #L4849ca.  v3:= 0I;
  #L4849cc.  call temp:= `getAndSet`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L4849d2.  v3:= temp;
  #L4849d4.  if v3 <= 0 then goto L484a30;
  #L4849d8.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4849dc.  v4:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4849e0.  call `tryTerminateConsumer`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4849e6.  goto L484a30;
  #L4849e8.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4849ec.  call temp:= `tryAddThrowableOrReport`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4849f2.  v3:= temp;
  #L4849f4.  if v3 == 0 then goto L484a30;
  #L4849f8.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4849fe.  v3:= temp;
  #L484a00.  if v3 != 0 then goto L484a14;
  #L484a04.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L484a08.  v4:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L484a0c.  call `tryTerminateConsumer`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L484a12.  goto L484a30;
  #L484a14.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @type ^`int`;
  #L484a18.  v4:= 2147483647I;
  #L484a1e.  if v3 == v4 then goto L484a30;
  #L484a22.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L484a26.  v0:= 1L;
  #L484a2a.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L484a30.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.c:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L484aec.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L484af2.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a$a`;
  #L484af6.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;)V` @kind direct;
  #L484afc.  v1:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L484b00.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L484b06.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L484b0c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L484910.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L484914.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L48491a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L48491e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L484924.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L484928.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L48492e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4848a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4848ac.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4848b2.  v0:= temp;
  #L4848b4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L484a44.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L484a4a.  v0:= temp;
  #L484a4c.  if v0 != 0 then goto L484a5e;
  #L484a50.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L484a54.  v1:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L484a58.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L484a5e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L484a70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.c` @type ^`boolean` @kind boolean;
  #L484a74.  if v0 != 0 then goto L484ab0;
  #L484a78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L484a7c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L484a82.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L484a86.  call temp:= `tryAddThrowableOrReport`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L484a8c.  v2:= temp;
  #L484a8e.  if v2 == 0 then goto L484ada;
  #L484a92.  v2:= 0I;
  #L484a94.  call temp:= `getAndSet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L484a9a.  v2:= temp;
  #L484a9c.  if v2 <= 0 then goto L484ada;
  #L484aa0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L484aa4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L484aa8.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L484aae.  goto L484ada;
  #L484ab0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L484ab4.  call temp:= `tryAddThrowableOrReport`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L484aba.  v2:= temp;
  #L484abc.  if v2 == 0 then goto L484ada;
  #L484ac0.  call temp:= `decrementAndGet`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L484ac6.  v2:= temp;
  #L484ac8.  if v2 != 0 then goto L484ada;
  #L484acc.  v2:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L484ad0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L484ad4.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L484ada.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L484b20.  v1:= (`io.reactivex.rxjava3.core.CompletableSource`) v1 @kind object;
  #L484b24.  call `c`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.c:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind virtual;
  #L484b2a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L484b3c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L484b40.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L484b46.  v0:= temp;
  #L484b48.  if v0 == 0 then goto L484b82;
  #L484b4c.  v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L484b50.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L484b54.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L484b5a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @type ^`int`;
  #L484b5e.  v1:= 2147483647I;
  #L484b64.  if v0 != v1 then goto L484b7a;
  #L484b68.  v0:= 9223372036854775807L;
  #L484b72.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L484b78.  goto L484b82;
  #L484b7a.  v0:= (`long`) v0 @kind i2l;
  #L484b7c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L484b82.  return @kind void;
}
