record `io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDematerialize$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d4788.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d478e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4d4792.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4d4796.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDematerialize$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d47a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d47ac.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d47b2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDematerialize$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4768.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d476c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d4772.  v0:= temp;
  #L4d4774.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d47c4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4d47c8.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d47ce.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDematerialize$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d47e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d47e4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d47ea.  v0:= temp;
  #L4d47ec.  if v0 == 0 then goto L4d47fe;
  #L4d47f0.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4d47f4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4d47f8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d47fe.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDematerialize$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4810.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4d4814.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4d481a.  v2:= temp @kind object;
  #L4d481c.  v0:= "The selector returned a null Notification" @kind object;
  #L4d4820.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d4826.  v2:= (`io.reactivex.rxjava3.core.Notification`) v2 @kind object;
  #L4d482a.  call temp:= `isOnNext`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.isOnNext:()Z` @kind virtual;
  #L4d4830.  v0:= temp;
  #L4d4832.  if v0 == 0 then goto L4d484a;
  #L4d4836.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4d483a.  call temp:= `getValue`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4d4840.  v2:= temp @kind object;
  #L4d4842.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d4848.  goto L4d4874;
  #L4d484a.  call temp:= `isOnComplete`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.isOnComplete:()Z` @kind virtual;
  #L4d4850.  v0:= temp;
  #L4d4852.  if v0 == 0 then goto L4d4862;
  #L4d4856.  v2:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4d485a.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4d4860.  goto L4d4874;
  #L4d4862.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4d4866.  call temp:= `getError`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L4d486c.  v2:= temp @kind object;
  #L4d486e.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d4874.  return @kind void;
  #L4d4876.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d4878.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d487e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4d4882.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d4888.  return @kind void;
  catch `java.lang.Throwable` @[L4d4810..L4d482a] goto L4d4876;
}
