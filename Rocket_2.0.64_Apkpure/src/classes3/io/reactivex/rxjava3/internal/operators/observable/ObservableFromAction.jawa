record `io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction` v0 @kind this, `io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bf474.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4bf47a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` := v1 @kind object;
  #L4bf47e.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromAction;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf454.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4bf458.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4bf45e.  v0:= 0I;
  #L4bf460.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromAction;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4bf490.  v0:= new `io.reactivex.rxjava3.internal.fuseable.CancellableQueueFuseable`;
  #L4bf494.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.<init>:()V` @kind direct;
  #L4bf49a.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4bf4a0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L4bf4a6.  v1:= temp;
  #L4bf4a8.  if v1 != 0 then goto L4bf4ec;
  #L4bf4ac.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4bf4b0.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4bf4b6.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L4bf4bc.  v0:= temp;
  #L4bf4be.  if v0 != 0 then goto L4bf4ec;
  #L4bf4c2.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4bf4c8.  goto L4bf4ec;
  #L4bf4ca.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bf4cc.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf4d2.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L4bf4d8.  v0:= temp;
  #L4bf4da.  if v0 != 0 then goto L4bf4e6;
  #L4bf4de.  call `onError`(v3, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bf4e4.  goto L4bf4ec;
  #L4bf4e6.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf4ec.  return @kind void;
  catch `java.lang.Throwable` @[L4bf4ac..L4bf4b6] goto L4bf4ca;
}
