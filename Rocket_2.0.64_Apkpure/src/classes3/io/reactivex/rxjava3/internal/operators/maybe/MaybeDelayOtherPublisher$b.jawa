record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.b` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayOtherPublisher$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aa7e4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4aa7ea.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4aa7ee.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayOtherPublisher$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa800.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.c` @type ^`java.lang.Throwable` @kind object;
  #L4aa804.  if v0 == 0 then goto L4aa814;
  #L4aa808.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa80c.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aa812.  goto L4aa832;
  #L4aa814.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.b` @type ^`java.lang.Object` @kind object;
  #L4aa818.  if v0 == 0 then goto L4aa828;
  #L4aa81c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa820.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4aa826.  goto L4aa832;
  #L4aa828.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa82c.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4aa832.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayOtherPublisher$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4aa844.  v0:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.c` @type ^`java.lang.Throwable` @kind object;
  #L4aa848.  if v0 != 0 then goto L4aa858;
  #L4aa84c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa850.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aa856.  goto L4aa87e;
  #L4aa858.  v1:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aa85c.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4aa860.  v3:= 2I;
  #L4aa862.  v3:= new `java.lang.Throwable`[v3];
  #L4aa866.  v4:= 0I;
  #L4aa868.  v3[v4]:= v0 @kind object;
  #L4aa86c.  v0:= 1I;
  #L4aa86e.  v3[v0]:= v6 @kind object;
  #L4aa872.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4aa878.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aa87e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayOtherPublisher$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa890.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4aa896.  v2:= temp @kind object;
  #L4aa898.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L4aa89c.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4aa8a0.  if v2 == v0 then goto L4aa8b6;
  #L4aa8a4.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4aa8aa.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4aa8b0.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayOtherPublisher$b;.onComplete:()V` @kind virtual;
  #L4aa8b6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayOtherPublisher$b` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayOtherPublisher$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa8c8.  v0:= 9223372036854775807L;
  #L4aa8d2.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L4aa8d8.  return @kind void;
}
