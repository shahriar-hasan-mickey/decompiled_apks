record `io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.c` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ae74c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4ae752.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4ae756.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v2 @kind object;
  #L4ae75a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4ae76c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4ae772.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae724.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ae72a.  v0:= temp @kind object;
  #L4ae72c.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ae730.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ae736.  v0:= temp;
  #L4ae738.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae784.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ae788.  call temp:= `scheduleDirect`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4ae78e.  v0:= temp @kind object;
  #L4ae790.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ae796.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4ae7a8.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.d` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4ae7ac.  v1:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ae7b0.  call temp:= `scheduleDirect`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4ae7b6.  v1:= temp @kind object;
  #L4ae7b8.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ae7be.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4ae7d0.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ae7d6.  v1:= temp;
  #L4ae7d8.  if v1 == 0 then goto L4ae7e6;
  #L4ae7dc.  v1:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ae7e0.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ae7e6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4ae7f8.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4ae7fc.  v1:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ae800.  call temp:= `scheduleDirect`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4ae806.  v1:= temp @kind object;
  #L4ae808.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ae80e.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeObserveOn$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae820.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.d` @type ^`java.lang.Throwable` @kind object;
  #L4ae824.  v1:= 0I;
  #L4ae826.  if v0 == 0 then goto L4ae83a;
  #L4ae82a.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.d` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4ae82e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ae832.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ae838.  goto L4ae85c;
  #L4ae83a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.c` @type ^`java.lang.Object` @kind object;
  #L4ae83e.  if v0 == 0 then goto L4ae852;
  #L4ae842.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4ae846.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ae84a.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4ae850.  goto L4ae85c;
  #L4ae852.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4ae856.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4ae85c.  return @kind void;
}
