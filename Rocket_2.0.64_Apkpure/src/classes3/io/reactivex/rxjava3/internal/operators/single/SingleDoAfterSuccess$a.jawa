record `io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterSuccess$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d4a50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d4a56.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d4a5a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4d4a5e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterSuccess$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4a70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d4a74.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d4a7a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterSuccess$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4a30.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d4a34.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d4a3a.  v0:= temp;
  #L4d4a3c.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterSuccess$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4a8c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d4a90.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d4a96.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterSuccess$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4aa8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d4aac.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d4ab2.  v0:= temp;
  #L4d4ab4.  if v0 == 0 then goto L4d4ac6;
  #L4d4ab8.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4d4abc.  v2:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d4ac0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d4ac6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterSuccess$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4ad8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d4adc.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d4ae2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4d4ae6.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4d4aec.  goto L4d4afc;
  #L4d4aee.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d4af0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d4af6.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d4afc.  return @kind void;
  catch `java.lang.Throwable` @[L4d4ae2..L4d4aec] goto L4d4aee;
}
