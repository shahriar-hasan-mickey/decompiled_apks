record `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/BiFunction;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c4e9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c4ea2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4c4ea6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4c4eaa.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L4c4eae.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c4ec0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c4ec4.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c4eca.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c4e7c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c4e80.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4c4e86.  v0:= temp;
  #L4c4e88.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c4edc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4c4ee0.  if v0 == 0 then goto L4c4ef4;
  #L4c4ee4.  v1:= 0I;
  #L4c4ee6.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4c4eea.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4c4eee.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4c4ef4.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c4f08.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4c4f0c.  if v0 == 0 then goto L4c4f22;
  #L4c4f10.  v0:= 0I;
  #L4c4f12.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L4c4f16.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4c4f1a.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c4f20.  goto L4c4f28;
  #L4c4f22.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c4f28.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c4f3c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4c4f40.  if v0 == 0 then goto L4c4f78;
  #L4c4f44.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4c4f48.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c4f4e.  v3:= temp @kind object;
  #L4c4f50.  v0:= "The reducer returned a null value" @kind object;
  #L4c4f54.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c4f5a.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4c4f5e.  goto L4c4f78;
  #L4c4f60.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c4f62.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c4f68.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c4f6c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c4f72.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c4f78.  return @kind void;
  catch `java.lang.Throwable` @[L4c4f44..L4c4f5e] goto L4c4f60;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c4f98.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c4f9c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c4fa2.  v0:= temp;
  #L4c4fa4.  if v0 == 0 then goto L4c4fb6;
  #L4c4fa8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c4fac.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4c4fb0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c4fb6.  return @kind void;
}
