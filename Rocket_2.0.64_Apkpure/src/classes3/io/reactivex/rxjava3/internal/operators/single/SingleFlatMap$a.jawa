record `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d590c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d5912.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d5916.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4d591a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4d592c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d5932.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d58e4.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d58ea.  v0:= temp @kind object;
  #L4d58ec.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d58f0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d58f6.  v0:= temp;
  #L4d58f8.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d5944.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d5948.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d594e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4d5960.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d5966.  v1:= temp;
  #L4d5968.  if v1 == 0 then goto L4d5976;
  #L4d596c.  v1:= v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d5970.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d5976.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d5988.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4d598c.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4d5992.  v3:= temp @kind object;
  #L4d5994.  v0:= "The single returned by the mapper is null" @kind object;
  #L4d5998.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d599e.  v3:= (`io.reactivex.rxjava3.core.SingleSource`) v3 @kind object;
  #L4d59a2.  call temp:= `isDisposed`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.isDisposed:()Z` @kind virtual;
  #L4d59a8.  v0:= temp;
  #L4d59aa.  if v0 != 0 then goto L4d59c2;
  #L4d59ae.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a$a`;
  #L4d59b2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d59b6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a$a;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4d59bc.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d59c2.  return @kind void;
  #L4d59c4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d59c6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d59cc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d59d0.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d59d6.  return @kind void;
  catch `java.lang.Throwable` @[L4d5988..L4d59a2] goto L4d59c4;
}
