record `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$i` `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.d` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d` v0 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$i` v1 @kind object, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$d;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$i;Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c5e7c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4c5e82.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$i` := v1 @kind object;
  #L4c5e86.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.b` @type ^`io.reactivex.rxjava3.core.Observer` := v2 @kind object;
  #L4c5e8a.  return @kind void;
}
procedure `java.lang.Object` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$d;.a:()Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L4c5e64.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.c` @type ^`java.lang.Object` @kind object;
  #L4c5e68.  return v0 @kind object;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$d;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c5e9c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.d` @type ^`boolean` @kind boolean;
  #L4c5ea0.  if v0 != 0 then goto L4c5eba;
  #L4c5ea4.  v0:= 1I;
  #L4c5ea6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.d` @type ^`boolean` := v0 @kind boolean;
  #L4c5eaa.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$i` @kind object;
  #L4c5eae.  call `b`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$i;.b:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$d;)V` @kind virtual;
  #L4c5eb4.  v0:= 0I;
  #L4c5eb6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.c` @type ^`java.lang.Object` := v0 @kind object;
  #L4c5eba.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$d;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c5e4c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$d.d` @type ^`boolean` @kind boolean;
  #L4c5e50.  return v0;
}
