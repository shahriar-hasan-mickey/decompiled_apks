record `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cc3e8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4cc3ee.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4cc3f2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L4cc3f6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4cc3fa.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @type ^`boolean` := v4 @kind boolean;
  #L4cc3fe.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4cc45c.  v0:= 0I;
  #L4cc45e.  v1:= 1I;
  #L4cc460.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4cc466.  v0:= temp;
  #L4cc468.  if v0 == 0 then goto L4cc48a;
  #L4cc46c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4cc470.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @type ^`java.lang.Object` @kind object;
  #L4cc474.  call `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4cc47a.  goto L4cc48a;
  #L4cc47c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4cc47e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4cc484.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4cc48a.  return @kind void;
  catch `java.lang.Throwable` @[L4cc46c..L4cc47a] goto L4cc47c;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cc410.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @type ^`boolean` @kind boolean;
  #L4cc414.  if v0 == 0 then goto L4cc432;
  #L4cc418.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @kind virtual;
  #L4cc41e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cc422.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cc428.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4cc42c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4cc430.  goto L4cc44a;
  #L4cc432.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cc436.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cc43c.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4cc440.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4cc444.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @kind virtual;
  #L4cc44a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cc3cc.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4cc3d2.  v0:= temp;
  #L4cc3d4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4cc4a8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @type ^`boolean` @kind boolean;
  #L4cc4ac.  if v0 == 0 then goto L4cc4fa;
  #L4cc4b0.  v0:= 0I;
  #L4cc4b2.  v1:= 1I;
  #L4cc4b4.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4cc4ba.  v0:= temp;
  #L4cc4bc.  if v0 == 0 then goto L4cc4e4;
  #L4cc4c0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4cc4c4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @type ^`java.lang.Object` @kind object;
  #L4cc4c8.  call `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4cc4ce.  goto L4cc4e4;
  #L4cc4d0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4cc4d2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4cc4d8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cc4dc.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cc4e2.  return @kind void;
  #L4cc4e4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cc4e8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cc4ee.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cc4f2.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4cc4f8.  goto L4cc514;
  #L4cc4fa.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cc4fe.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4cc504.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cc508.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cc50e.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @kind virtual;
  #L4cc514.  return @kind void;
  catch `java.lang.Throwable` @[L4cc4c0..L4cc4ce] goto L4cc4d0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cc534.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @type ^`boolean` @kind boolean;
  #L4cc538.  if v0 == 0 then goto L4cc594;
  #L4cc53c.  v0:= 0I;
  #L4cc53e.  v1:= 1I;
  #L4cc540.  call temp:= `compareAndSet`(v5, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4cc546.  v2:= temp;
  #L4cc548.  if v2 == 0 then goto L4cc57e;
  #L4cc54c.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4cc550.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @type ^`java.lang.Object` @kind object;
  #L4cc554.  call `accept`(v2, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4cc55a.  goto L4cc57e;
  #L4cc55c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4cc55e.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4cc564.  v3:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4cc568.  v4:= 2I;
  #L4cc56a.  v4:= new `java.lang.Throwable`[v4];
  #L4cc56e.  v4[v0]:= v6 @kind object;
  #L4cc572.  v4[v1]:= v2 @kind object;
  #L4cc576.  call `<init>`(v3, v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4cc57c.  v6:= v3 @kind object;
  #L4cc57e.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cc582.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cc588.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cc58c.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cc592.  goto L4cc5ae;
  #L4cc594.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cc598.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cc59e.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cc5a2.  call `dispose`(v6) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4cc5a8.  call `a`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @kind virtual;
  #L4cc5ae.  return @kind void;
  catch `java.lang.Throwable` @[L4cc54c..L4cc55a] goto L4cc55c;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cc5cc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cc5d0.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4cc5d6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cc5e8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4cc5ec.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4cc5f2.  v0:= temp;
  #L4cc5f4.  if v0 == 0 then goto L4cc606;
  #L4cc5f8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4cc5fc.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cc600.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4cc606.  return @kind void;
}
