record `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.parallel.ParallelFlowable` @kind class {
  `io.reactivex.rxjava3.parallel.ParallelFlowable` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.f` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.g` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.LongConsumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.h` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.i` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` v0 @kind this, `io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object, `io.reactivex.rxjava3.functions.Action` v6 @kind object, `io.reactivex.rxjava3.functions.Consumer` v7 @kind object, `io.reactivex.rxjava3.functions.LongConsumer` v8 @kind object, `io.reactivex.rxjava3.functions.Action` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d250c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L4d2512.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` := v1 @kind object;
  #L4d2516.  v1:= "onNext is null" @kind object;
  #L4d251a.  call temp:= `requireNonNull`(v2, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d2520.  v2:= (`io.reactivex.rxjava3.functions.Consumer`) v2 @kind object;
  #L4d2524.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4d2528.  v1:= "onAfterNext is null" @kind object;
  #L4d252c.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d2532.  v3:= (`io.reactivex.rxjava3.functions.Consumer`) v3 @kind object;
  #L4d2536.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.c` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4d253a.  v1:= "onError is null" @kind object;
  #L4d253e.  call temp:= `requireNonNull`(v4, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d2544.  v4:= (`io.reactivex.rxjava3.functions.Consumer`) v4 @kind object;
  #L4d2548.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.d` @type ^`io.reactivex.rxjava3.functions.Consumer` := v4 @kind object;
  #L4d254c.  v1:= "onComplete is null" @kind object;
  #L4d2550.  call temp:= `requireNonNull`(v5, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d2556.  v5:= (`io.reactivex.rxjava3.functions.Action`) v5 @kind object;
  #L4d255a.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.e` @type ^`io.reactivex.rxjava3.functions.Action` := v5 @kind object;
  #L4d255e.  v1:= "onAfterTerminated is null" @kind object;
  #L4d2562.  call temp:= `requireNonNull`(v6, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d2568.  v6:= (`io.reactivex.rxjava3.functions.Action`) v6 @kind object;
  #L4d256c.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.f` @type ^`io.reactivex.rxjava3.functions.Action` := v6 @kind object;
  #L4d2570.  v1:= "onSubscribe is null" @kind object;
  #L4d2574.  call temp:= `requireNonNull`(v7, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d257a.  v7:= (`io.reactivex.rxjava3.functions.Consumer`) v7 @kind object;
  #L4d257e.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.g` @type ^`io.reactivex.rxjava3.functions.Consumer` := v7 @kind object;
  #L4d2582.  v1:= "onRequest is null" @kind object;
  #L4d2586.  call temp:= `requireNonNull`(v8, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d258c.  v8:= (`io.reactivex.rxjava3.functions.LongConsumer`) v8 @kind object;
  #L4d2590.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.h` @type ^`io.reactivex.rxjava3.functions.LongConsumer` := v8 @kind object;
  #L4d2594.  v1:= "onCancel is null" @kind object;
  #L4d2598.  call temp:= `requireNonNull`(v9, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d259e.  v9:= (`io.reactivex.rxjava3.functions.Action`) v9 @kind object;
  #L4d25a2.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.i` @type ^`io.reactivex.rxjava3.functions.Action` := v9 @kind object;
  #L4d25a6.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d24ec.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L4d24f0.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L4d24f6.  v0:= temp;
  #L4d24f8.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` v5 @kind this, `org.reactivestreams.Subscriber`[] v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d25b8.  call temp:= `validate`(v5, v6) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L4d25be.  v0:= temp;
  #L4d25c0.  if v0 != 0 then goto L4d25c6;
  #L4d25c4.  return @kind void;
  #L4d25c6.  v0:= length @variable v6;
  #L4d25c8.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L4d25cc.  v2:= 0I;
  #L4d25ce.  if v2 >= v0 then goto L4d25ea;
  #L4d25d2.  v3:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a`;
  #L4d25d6.  v4:= v6[v2] @kind object;
  #L4d25da.  call `<init>`(v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;)V` @kind direct;
  #L4d25e0.  v1[v2]:= v3 @kind object;
  #L4d25e4.  v2:= v2 + 1;
  #L4d25e8.  goto L4d25ce;
  #L4d25ea.  v6:= v5.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L4d25ee.  call `subscribe`(v6, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L4d25f4.  return @kind void;
}
