record `io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier` v0 @kind this, `io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bfe14.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4bfe1a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier.a` @type ^`io.reactivex.rxjava3.functions.Supplier` := v1 @kind object;
  #L4bfe1e.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplier;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bfde8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier.a` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bfdec.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4bfdf2.  v0:= temp @kind object;
  #L4bfdf4.  v1:= "The supplier returned a null value." @kind object;
  #L4bfdf8.  call temp:= `nullCheck`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bfdfe.  v0:= temp @kind object;
  #L4bfe00.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier` v3 @kind this, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplier;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4bfe30.  v0:= new `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable`;
  #L4bfe34.  call `<init>`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4bfe3a.  call `onSubscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4bfe40.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4bfe46.  v1:= temp;
  #L4bfe48.  if v1 == 0 then goto L4bfe4e;
  #L4bfe4c.  return @kind void;
  #L4bfe4e.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier.a` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bfe52.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4bfe58.  v1:= temp @kind object;
  #L4bfe5a.  v2:= "Supplier returned a null value." @kind object;
  #L4bfe5e.  call temp:= `nullCheck`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bfe64.  v4:= temp @kind object;
  #L4bfe66.  call `complete`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4bfe6c.  return @kind void;
  #L4bfe6e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bfe70.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bfe76.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4bfe7c.  v0:= temp;
  #L4bfe7e.  if v0 != 0 then goto L4bfe8a;
  #L4bfe82.  call `onError`(v4, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bfe88.  goto L4bfe90;
  #L4bfe8a.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bfe90.  return @kind void;
  catch `java.lang.Throwable` @[L4bfe4e..L4bfe66] goto L4bfe6e;
}
