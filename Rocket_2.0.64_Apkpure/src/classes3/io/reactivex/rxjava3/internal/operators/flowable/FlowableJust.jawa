record `io.reactivex.rxjava3.internal.operators.flowable.FlowableJust` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class, `io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableJust.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableJust` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableJust;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L497d00.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L497d06.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableJust.b` @type ^`java.lang.Object` := v1 @kind object;
  #L497d0a.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableJust` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableJust;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L497ce8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableJust.b` @type ^`java.lang.Object` @kind object;
  #L497cec.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableJust` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableJust;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L497d1c.  v0:= new `io.reactivex.rxjava3.internal.subscriptions.ScalarSubscription`;
  #L497d20.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableJust.b` @type ^`java.lang.Object` @kind object;
  #L497d24.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/ScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V` @kind direct;
  #L497d2a.  call `onSubscribe`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L497d30.  return @kind void;
}
