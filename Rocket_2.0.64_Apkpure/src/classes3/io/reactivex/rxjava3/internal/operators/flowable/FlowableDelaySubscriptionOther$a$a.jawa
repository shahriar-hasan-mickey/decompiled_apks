record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48eb30.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` := v1 @kind object;
  #L48eb34.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L48eb3a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48eb4c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L48eb52.  v0:= temp @kind object;
  #L48eb54.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L48eb58.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L48eb5c.  if v0 == v1 then goto L48eb6a;
  #L48eb60.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` @kind object;
  #L48eb64.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.a:()V` @kind virtual;
  #L48eb6a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48eb7c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L48eb82.  v0:= temp @kind object;
  #L48eb84.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L48eb88.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L48eb8c.  if v0 == v1 then goto L48eba0;
  #L48eb90.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` @kind object;
  #L48eb94.  v0:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48eb98.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48eb9e.  goto L48eba6;
  #L48eba0.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48eba6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48ebb8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L48ebbe.  v2:= temp @kind object;
  #L48ebc0.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L48ebc4.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L48ebc8.  if v2 == v0 then goto L48ebe2;
  #L48ebcc.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L48ebd2.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L48ebd8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a` @kind object;
  #L48ebdc.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a;.a:()V` @kind virtual;
  #L48ebe2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$a$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$a$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48ebf4.  call temp:= `setOnce`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L48ebfa.  v0:= temp;
  #L48ebfc.  if v0 == 0 then goto L48ec10;
  #L48ec00.  v0:= 9223372036854775807L;
  #L48ec0a.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48ec10.  return @kind void;
}
