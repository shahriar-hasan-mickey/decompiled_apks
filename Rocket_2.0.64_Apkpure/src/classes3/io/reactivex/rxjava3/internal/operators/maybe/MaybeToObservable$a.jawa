record `io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface {
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a.a` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b0554.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4b055a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b056c.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.dispose:()V` @kind super;
  #L4b0572.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a.a` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b0576.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b057c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L4b0590.  call `complete`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.complete:()V` @kind virtual;
  #L4b0596.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4b05a8.  call `error`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.error:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b05ae.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b05c0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a.a` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b05c4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b05ca.  v0:= temp;
  #L4b05cc.  if v0 == 0 then goto L4b05de;
  #L4b05d0.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a.a` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4b05d4.  v2:= v1.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b05d8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b05de.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4b05f0.  call `complete`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4b05f6.  return @kind void;
}
