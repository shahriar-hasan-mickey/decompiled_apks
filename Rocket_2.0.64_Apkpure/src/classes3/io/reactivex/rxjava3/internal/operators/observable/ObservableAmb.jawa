record `io.reactivex.rxjava3.internal.operators.observable.ObservableAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.ObservableSource`[] `io.reactivex.rxjava3.internal.operators.observable.ObservableAmb.a` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.observable.ObservableAmb.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAmb` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b635c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4b6362.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAmb.a` @type ^`io.reactivex.rxjava3.core.ObservableSource`[] := v1 @kind object;
  #L4b6366.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAmb.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4b636a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAmb` v6 @kind this, `io.reactivex.rxjava3.core.Observer` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAmb;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b637c.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableAmb.a` @type ^`io.reactivex.rxjava3.core.ObservableSource`[] @kind object;
  #L4b6380.  v1:= 0I;
  #L4b6382.  if v0 != 0 then goto L4b6402;
  #L4b6386.  v0:= 8I;
  #L4b638a.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4b638e.  v2:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableAmb.b` @type ^`java.lang.Iterable` @kind object;
  #L4b6392.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b6398.  v2:= temp @kind object;
  #L4b639a.  v3:= 0I;
  #L4b639c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b63a2.  v4:= temp;
  #L4b63a4.  if v4 == 0 then goto L4b6404;
  #L4b63a8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b63ae.  v4:= temp @kind object;
  #L4b63b0.  v4:= (`io.reactivex.rxjava3.core.ObservableSource`) v4 @kind object;
  #L4b63b4.  if v4 != 0 then goto L4b63ce;
  #L4b63b8.  v0:= new `java.lang.NullPointerException`;
  #L4b63bc.  v1:= "One of the sources is null" @kind object;
  #L4b63c0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b63c6.  call `error`(v0, v7) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b63cc.  return @kind void;
  #L4b63ce.  v5:= length @variable v0;
  #L4b63d0.  if v3 != v5 then goto L4b63e6;
  #L4b63d4.  v5:= v3 ^> 2;
  #L4b63d8.  v5:= v5 + v3 @kind int;
  #L4b63da.  v5:= new `io.reactivex.rxjava3.core.ObservableSource`[v5];
  #L4b63de.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4b63e4.  v0:= v5 @kind object;
  #L4b63e6.  v5:= v3 + 1;
  #L4b63ea.  v0[v3]:= v4 @kind object;
  #L4b63ee.  v3:= v5;
  #L4b63f0.  goto L4b639c;
  #L4b63f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b63f4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b63fa.  call `error`(v0, v7) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b6400.  return @kind void;
  #L4b6402.  v3:= length @variable v0;
  #L4b6404.  if v3 != 0 then goto L4b6410;
  #L4b6408.  call `complete`(v7) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b640e.  return @kind void;
  #L4b6410.  v2:= 1I;
  #L4b6412.  if v3 != v2 then goto L4b6422;
  #L4b6416.  v0:= v0[v1] @kind object;
  #L4b641a.  call `subscribe`(v0, v7) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4b6420.  return @kind void;
  #L4b6422.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAmb$a`;
  #L4b6426.  call `<init>`(v1, v7, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAmb$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;I)V` @kind direct;
  #L4b642c.  call `a`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAmb$a;.a:([Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind virtual;
  #L4b6432.  return @kind void;
  catch `java.lang.Throwable` @[L4b638e..L4b63ee] goto L4b63f2;
}
