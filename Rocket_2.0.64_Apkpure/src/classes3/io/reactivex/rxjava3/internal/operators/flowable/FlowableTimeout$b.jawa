record `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.SubscriptionArbiter` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$c` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.h` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.i` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.k` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.m` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.n` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4a4078.  v0:= 1I;
  #L4a407a.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;.<init>:(Z)V` @kind direct;
  #L4a4080.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.h` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L4a4084.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.i` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4a4088.  v2:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4a408c.  call `<init>`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4a4092.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v2 @kind object;
  #L4a4096.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4a409a.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4a40a0.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.k` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L4a40a4.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.m` @type ^`org.reactivestreams.Publisher` := v4 @kind object;
  #L4a40a8.  v2:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4a40ac.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4a40b2.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @type ^`java.util.concurrent.atomic.AtomicLong` := v2 @kind object;
  #L4a40b6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v3 @kind this, `long` v4 , `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.a:(JLjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a431c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a4320.  v1:= 9223372036854775807L;
  #L4a432a.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4a4330.  v4:= temp;
  #L4a4332.  if v4 == 0 then goto L4a434c;
  #L4a4336.  v4:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.k` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a433a.  call temp:= `cancel`(v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4a4340.  v4:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.h` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a4344.  call `onError`(v4, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a434a.  goto L4a4352;
  #L4a434c.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a4352.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v4 @kind this, `long` v5 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a42b0.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a42b4.  v1:= 9223372036854775807L;
  #L4a42be.  call temp:= `compareAndSet`(v0, v5, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4a42c4.  v5:= temp;
  #L4a42c6.  if v5 == 0 then goto L4a4308;
  #L4a42ca.  v5:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.k` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a42ce.  call temp:= `cancel`(v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4a42d4.  v5:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.m` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4a42d8.  v6:= 0I;
  #L4a42da.  v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.m` @type ^`org.reactivestreams.Publisher` := v6 @kind object;
  #L4a42de.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.n` @type ^`long` @kind wide;
  #L4a42e2.  v2:= 0L;
  #L4a42e6.  v6:= lcmp(v0, v2);
  #L4a42ea.  if v6 == 0 then goto L4a42f4;
  #L4a42ee.  call `produced`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;.produced:(J)V` @kind virtual;
  #L4a42f4.  v6:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeoutTimed$a`;
  #L4a42f8.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.h` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a42fc.  call `<init>`(v6, v0, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;)V` @kind direct;
  #L4a4302.  call `subscribe`(v5, v6) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4a4308.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a40c8.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;.cancel:()V` @kind super;
  #L4a40ce.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a40d2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4a40d8.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v3 @kind this, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.e:(Lorg/reactivestreams/Publisher;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4a4364.  if v4 == 0 then goto L4a438c;
  #L4a4368.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$a`;
  #L4a436c.  v1:= 0L;
  #L4a4370.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$a;.<init>:(JLio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$c;)V` @kind direct;
  #L4a4376.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a437a.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4a4380.  v1:= temp;
  #L4a4382.  if v1 == 0 then goto L4a438c;
  #L4a4386.  call `subscribe`(v4, v0) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4a438c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4a40ec.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a40f0.  v1:= 9223372036854775807L;
  #L4a40fa.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4a4100.  v3:= temp @kind wide;
  #L4a4102.  v0:= lcmp(v3, v1);
  #L4a4106.  if v0 == 0 then goto L4a4128;
  #L4a410a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a410e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4a4114.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.h` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a4118.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4a411e.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a4122.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4a4128.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4a413c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a4140.  v1:= 9223372036854775807L;
  #L4a414a.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4a4150.  v3:= temp @kind wide;
  #L4a4152.  v0:= lcmp(v3, v1);
  #L4a4156.  if v0 == 0 then goto L4a417a;
  #L4a415a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a415e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4a4164.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.h` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a4168.  call `onError`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a416e.  v6:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a4172.  call `dispose`(v6) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4a4178.  goto L4a4180;
  #L4a417a.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a4180.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4a4194.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a4198.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4a419e.  v0:= temp @kind wide;
  #L4a41a0.  v2:= 9223372036854775807L;
  #L4a41aa.  v4:= lcmp(v0, v2);
  #L4a41ae.  if v4 == 0 then goto L4a4268;
  #L4a41b2.  v4:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a41b6.  v5:= 1L;
  #L4a41ba.  v7:= v0 + v5 @kind long;
  #L4a41be.  call temp:= `compareAndSet`(v4, v0, v7) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4a41c4.  v0:= temp;
  #L4a41c6.  if v0 != 0 then goto L4a41cc;
  #L4a41ca.  goto L4a4268;
  #L4a41cc.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a41d0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4a41d6.  v0:= temp @kind object;
  #L4a41d8.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4a41dc.  if v0 == 0 then goto L4a41e6;
  #L4a41e0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4a41e6.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.n` @type ^`long` @kind wide;
  #L4a41ea.  v0:= v0 + v5 @kind long;
  #L4a41ec.  v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.n` @type ^`long` := v0 @kind wide;
  #L4a41f0.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.h` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a41f4.  call `onNext`(v0, v10) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4a41fa.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.i` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4a41fe.  call temp:= `apply`(v0, v10) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4a4204.  v10:= temp @kind object;
  #L4a4206.  v0:= "The itemTimeoutIndicator returned a null Publisher." @kind object;
  #L4a420a.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4210.  v10:= (`org.reactivestreams.Publisher`) v10 @kind object;
  #L4a4214.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$a`;
  #L4a4218.  call `<init>`(v0, v7, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$a;.<init>:(JLio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$c;)V` @kind direct;
  #L4a421e.  v1:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.j` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a4222.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4a4228.  v1:= temp;
  #L4a422a.  if v1 == 0 then goto L4a4234;
  #L4a422e.  call `subscribe`(v10, v0) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4a4234.  return @kind void;
  #L4a4236.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a4238.  call `throwIfFatal`(v10) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a423e.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.k` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a4242.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4a4248.  v0:= temp @kind object;
  #L4a424a.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L4a424e.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4a4254.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.l` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a4258.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4a425e.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.h` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a4262.  call `onError`(v0, v10) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a4268.  return @kind void;
  catch `java.lang.Throwable` @[L4a41fa..L4a4214] goto L4a4236;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a4288.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout$b.k` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a428c.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4a4292.  v0:= temp;
  #L4a4294.  if v0 == 0 then goto L4a429e;
  #L4a4298.  call `setSubscription`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;.setSubscription:(Lorg/reactivestreams/Subscription;)V` @kind virtual;
  #L4a429e.  return @kind void;
}
