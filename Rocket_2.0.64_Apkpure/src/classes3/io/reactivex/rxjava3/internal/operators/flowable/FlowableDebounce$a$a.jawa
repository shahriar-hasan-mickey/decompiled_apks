record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.subscribers.DisposableSubscriber` @kind class {
  `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.e` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a` v2 @kind object, `long` v3 , `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a;JLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L48e16c.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.<init>:()V` @kind direct;
  #L48e172.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L48e176.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L48e17c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L48e180.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a` := v2 @kind object;
  #L48e184.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.c` @type ^`long` := v3 @kind wide;
  #L48e188.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.d` @type ^`java.lang.Object` := v5 @kind object;
  #L48e18c.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48e1a0.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L48e1a4.  v1:= 0I;
  #L48e1a6.  v2:= 1I;
  #L48e1a8.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L48e1ae.  v0:= temp;
  #L48e1b0.  if v0 == 0 then goto L48e1c6;
  #L48e1b4.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a` @kind object;
  #L48e1b8.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.c` @type ^`long` @kind wide;
  #L48e1bc.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.d` @type ^`java.lang.Object` @kind object;
  #L48e1c0.  call `a`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a;.a:(JLjava/lang/Object;)V` @kind virtual;
  #L48e1c6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48e1d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.e` @type ^`boolean` @kind boolean;
  #L48e1dc.  if v0 == 0 then goto L48e1e2;
  #L48e1e0.  return @kind void;
  #L48e1e2.  v0:= 1I;
  #L48e1e4.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.e` @type ^`boolean` := v0 @kind boolean;
  #L48e1e8.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a$a;.a:()V` @kind virtual;
  #L48e1ee.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48e200.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.e` @type ^`boolean` @kind boolean;
  #L48e204.  if v0 == 0 then goto L48e210;
  #L48e208.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48e20e.  return @kind void;
  #L48e210.  v0:= 1I;
  #L48e212.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.e` @type ^`boolean` := v0 @kind boolean;
  #L48e216.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a` @kind object;
  #L48e21a.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48e220.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L48e234.  v1:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.e` @type ^`boolean` @kind boolean;
  #L48e238.  if v1 == 0 then goto L48e23e;
  #L48e23c.  return @kind void;
  #L48e23e.  v1:= 1I;
  #L48e240.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce$a$a.e` @type ^`boolean` := v1 @kind boolean;
  #L48e244.  call `cancel`(v0) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.cancel:()V` @kind virtual;
  #L48e24a.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce$a$a;.a:()V` @kind virtual;
  #L48e250.  return @kind void;
}
