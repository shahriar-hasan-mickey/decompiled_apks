record `io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleEmitter` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleCreate$a.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleCreate$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d3e90.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d3e96.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d3e9a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4d3eac.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d3eb2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d3dac.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d3db2.  v0:= temp @kind object;
  #L4d3db4.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d3db8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d3dbe.  v0:= temp;
  #L4d3dc0.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d3ec4.  call temp:= `tryOnError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.tryOnError:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4d3eca.  v0:= temp;
  #L4d3ecc.  if v0 != 0 then goto L4d3ed6;
  #L4d3ed0.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d3ed6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d3ee8.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d3eee.  v0:= temp @kind object;
  #L4d3ef0.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d3ef4.  if v0 == v1 then goto L4d3f48;
  #L4d3ef8.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4d3efe.  v0:= temp @kind object;
  #L4d3f00.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d3f04.  if v0 == v1 then goto L4d3f48;
  #L4d3f08.  if v3 != 0 then goto L4d3f24;
  #L4d3f0c.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d3f10.  v1:= "onSuccess called with a null value." @kind object;
  #L4d3f14.  call temp:= `createNullPointerException`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4d3f1a.  v1:= temp @kind object;
  #L4d3f1c.  call `onError`(v3, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d3f22.  goto L4d3f2e;
  #L4d3f24.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d3f28.  call `onSuccess`(v1, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d3f2e.  if v0 == 0 then goto L4d3f48;
  #L4d3f32.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d3f38.  goto L4d3f48;
  #L4d3f3a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d3f3c.  if v0 == 0 then goto L4d3f46;
  #L4d3f40.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d3f46.  throw v3;
  #L4d3f48.  return @kind void;
  catch `java.lang.Throwable` @[L4d3f0c..L4d3f2e] goto L4d3f3a;
}
procedure `void` `setCancellable`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v1 @kind this, `io.reactivex.rxjava3.functions.Cancellable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.setCancellable:(Lio/reactivex/rxjava3/functions/Cancellable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d3f68.  v0:= new `io.reactivex.rxjava3.internal.disposables.CancellableDisposable`;
  #L4d3f6c.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/CancellableDisposable;.<init>:(Lio/reactivex/rxjava3/functions/Cancellable;)V` @kind direct;
  #L4d3f72.  call `setDisposable`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.setDisposable:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4d3f78.  return @kind void;
}
procedure `void` `setDisposable`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.setDisposable:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4d3f8c.  call temp:= `set`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d3f92.  return @kind void;
}
procedure `java.lang.String` `toString`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d3e4c.  v0:= 2I;
  #L4d3e4e.  v0:= new `java.lang.Object`[v0];
  #L4d3e52.  v1:= constclass @type ^`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` @kind object;
  #L4d3e56.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4d3e5c.  v1:= temp @kind object;
  #L4d3e5e.  v2:= 0I;
  #L4d3e60.  v0[v2]:= v1 @kind object;
  #L4d3e64.  call temp:= `toString`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.toString:()Ljava/lang/String;` @kind super;
  #L4d3e6a.  v1:= temp @kind object;
  #L4d3e6c.  v2:= 1I;
  #L4d3e6e.  v0[v2]:= v1 @kind object;
  #L4d3e72.  v1:= "%s{%s}" @kind object;
  #L4d3e76.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4d3e7c.  v0:= temp @kind object;
  #L4d3e7e.  return v0 @kind object;
}
procedure `boolean` `tryOnError`(`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate$a;.tryOnError:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d3dd4.  if v3 != 0 then goto L4d3de4;
  #L4d3dd8.  v3:= "onError called with a null Throwable." @kind object;
  #L4d3ddc.  call temp:= `createNullPointerException`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4d3de2.  v3:= temp @kind object;
  #L4d3de4.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d3dea.  v0:= temp @kind object;
  #L4d3dec.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d3df0.  if v0 == v1 then goto L4d3e2a;
  #L4d3df4.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4d3dfa.  v0:= temp @kind object;
  #L4d3dfc.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d3e00.  if v0 == v1 then goto L4d3e2a;
  #L4d3e04.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleCreate$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d3e08.  call `onError`(v1, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d3e0e.  if v0 == 0 then goto L4d3e18;
  #L4d3e12.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d3e18.  v3:= 1I;
  #L4d3e1a.  return v3;
  #L4d3e1c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d3e1e.  if v0 == 0 then goto L4d3e28;
  #L4d3e22.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d3e28.  throw v3;
  #L4d3e2a.  v3:= 0I;
  #L4d3e2c.  return v3;
  catch `java.lang.Throwable` @[L4d3e04..L4d3e0e] goto L4d3e1c;
}
