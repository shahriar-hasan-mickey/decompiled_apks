record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `java.util.concurrent.Callable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4941b4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4941ba.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable.b` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L4941be.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromCallable;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49418c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L494190.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L494196.  v0:= temp @kind object;
  #L494198.  v1:= "The callable returned a null value" @kind object;
  #L49419c.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4941a2.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromCallable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4941d0.  v0:= new `io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription`;
  #L4941d4.  call `<init>`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4941da.  call `onSubscribe`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4941e0.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L4941e4.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4941ea.  v1:= temp @kind object;
  #L4941ec.  v2:= "The callable returned a null value" @kind object;
  #L4941f0.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4941f6.  call `complete`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4941fc.  return @kind void;
  #L4941fe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L494200.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L494206.  call temp:= `isCancelled`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.isCancelled:()Z` @kind virtual;
  #L49420c.  v0:= temp;
  #L49420e.  if v0 == 0 then goto L49421a;
  #L494212.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L494218.  goto L494220;
  #L49421a.  call `onError`(v4, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L494220.  return @kind void;
  catch `java.lang.Throwable` @[L4941e0..L4941f6] goto L4941fe;
}
