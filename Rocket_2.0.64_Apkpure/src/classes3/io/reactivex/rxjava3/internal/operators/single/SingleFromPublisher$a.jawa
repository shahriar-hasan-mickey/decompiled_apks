record `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.e` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d6aec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d6af2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d6af6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6b08.  v0:= 1I;
  #L4d6b0a.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4d6b0e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d6b12.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4d6b18.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6ad4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.e` @type ^`boolean` @kind boolean;
  #L4d6ad8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d6b2c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` @kind boolean;
  #L4d6b30.  if v0 == 0 then goto L4d6b36;
  #L4d6b34.  return @kind void;
  #L4d6b36.  v0:= 1I;
  #L4d6b38.  v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4d6b3c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` @kind object;
  #L4d6b40.  v1:= 0I;
  #L4d6b42.  v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4d6b46.  if v0 != 0 then goto L4d6b64;
  #L4d6b4a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d6b4e.  v1:= new `java.util.NoSuchElementException`;
  #L4d6b52.  v2:= "The source Publisher is empty" @kind object;
  #L4d6b56.  call `<init>`(v1, v2) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d6b5c.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d6b62.  goto L4d6b6e;
  #L4d6b64.  v1:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d6b68.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d6b6e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6b80.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` @kind boolean;
  #L4d6b84.  if v0 == 0 then goto L4d6b90;
  #L4d6b88.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d6b8e.  return @kind void;
  #L4d6b90.  v0:= 1I;
  #L4d6b92.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4d6b96.  v0:= 0I;
  #L4d6b98.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L4d6b9c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d6ba0.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d6ba6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d6bb8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` @kind boolean;
  #L4d6bbc.  if v0 == 0 then goto L4d6bc2;
  #L4d6bc0.  return @kind void;
  #L4d6bc2.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` @kind object;
  #L4d6bc6.  if v0 == 0 then goto L4d6bfa;
  #L4d6bca.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d6bce.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4d6bd4.  v3:= 1I;
  #L4d6bd6.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` := v3 @kind boolean;
  #L4d6bda.  v3:= 0I;
  #L4d6bdc.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4d6be0.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d6be4.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L4d6be8.  v1:= "Too many elements in the Publisher" @kind object;
  #L4d6bec.  call `<init>`(v0, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d6bf2.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d6bf8.  goto L4d6bfe;
  #L4d6bfa.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4d6bfe.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d6c10.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d6c14.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4d6c1a.  v0:= temp;
  #L4d6c1c.  if v0 == 0 then goto L4d6c3e;
  #L4d6c20.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4d6c24.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d6c28.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d6c2e.  v0:= 9223372036854775807L;
  #L4d6c38.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4d6c3e.  return @kind void;
}
