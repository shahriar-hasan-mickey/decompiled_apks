record `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a` @kind class @AccessFlag FINAL extends `java.util.ArrayDeque` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c8c08.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayDeque;.<init>:(I)V` @kind direct;
  #L4c8c0e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c8c12.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.b` @type ^`int` := v2;
  #L4c8c16.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8c28.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c8c2c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c8c32.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8be8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c8bec.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4c8bf2.  v0:= temp;
  #L4c8bf4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8c44.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8c48.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c8c4e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8c60.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8c64.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c8c6a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c8c7c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.b` @type ^`int`;
  #L4c8c80.  call temp:= `size`(v2) @signature `Ljava/util/ArrayDeque;.size:()I` @kind virtual;
  #L4c8c86.  v1:= temp;
  #L4c8c88.  if v0 != v1 then goto L4c8c9e;
  #L4c8c8c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8c90.  call temp:= `poll`(v2) @signature `Ljava/util/ArrayDeque;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4c8c96.  v1:= temp @kind object;
  #L4c8c98.  call `onNext`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c8c9e.  call temp:= `offer`(v2, v3) @signature `Ljava/util/ArrayDeque;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4c8ca4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8cb8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c8cbc.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c8cc2.  v0:= temp;
  #L4c8cc4.  if v0 == 0 then goto L4c8cd6;
  #L4c8cc8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c8ccc.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8cd0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c8cd6.  return @kind void;
}
