record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @AccessFlag ;
  `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48fbb4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;.<init>:()V` @kind direct;
  #L48fbba.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L48fbbe.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.b` @type ^`io.reactivex.rxjava3.functions.Action` := v2 @kind object;
  #L48fbc2.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fbd4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48fbd8.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L48fbde.  call `e`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @kind virtual;
  #L48fbe4.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fbf8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L48fbfc.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L48fc02.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L48fcd4.  v0:= 0I;
  #L48fcd6.  v1:= 1I;
  #L48fcd8.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L48fcde.  v0:= temp;
  #L48fce0.  if v0 == 0 then goto L48fcfe;
  #L48fce4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L48fce8.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L48fcee.  goto L48fcfe;
  #L48fcf0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48fcf2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48fcf8.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48fcfe.  return @kind void;
  catch `java.lang.Throwable` @[L48fce4..L48fcee] goto L48fcf0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fb24.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L48fb28.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.isEmpty:()Z` @kind interface;
  #L48fb2e.  v0:= temp;
  #L48fb30.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fc14.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48fc18.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L48fc1e.  call `e`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @kind virtual;
  #L48fc24.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fc38.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48fc3c.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48fc42.  call `e`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @kind virtual;
  #L48fc48.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fc5c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48fc60.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L48fc66.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fc78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48fc7c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L48fc82.  v0:= temp;
  #L48fc84.  if v0 == 0 then goto L48fca6;
  #L48fc88.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L48fc8c.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind boolean;
  #L48fc90.  if v0 == 0 then goto L48fc9c;
  #L48fc94.  v2:= (`io.reactivex.rxjava3.internal.fuseable.QueueSubscription`) v2 @kind object;
  #L48fc98.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` := v2 @kind object;
  #L48fc9c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L48fca0.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L48fca6.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48fb84.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L48fb88.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L48fb8e.  v0:= temp @kind object;
  #L48fb90.  if v0 != 0 then goto L48fba2;
  #L48fb94.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.e` @type ^`boolean` @kind boolean;
  #L48fb98.  if v1 == 0 then goto L48fba2;
  #L48fb9c.  call `e`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @kind virtual;
  #L48fba2.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fcb8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L48fcbc.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48fcc2.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48fb44.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L48fb48.  v1:= 0I;
  #L48fb4a.  if v0 == 0 then goto L48fb70;
  #L48fb4e.  v2:= v4 ^& 4;
  #L48fb52.  if v2 != 0 then goto L48fb70;
  #L48fb56.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L48fb5c.  v4:= temp;
  #L48fb5e.  if v4 == 0 then goto L48fb6e;
  #L48fb62.  v0:= 1I;
  #L48fb64.  if v4 != v0 then goto L48fb6a;
  #L48fb68.  v1:= 1I;
  #L48fb6a.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.e` @type ^`boolean` := v1 @kind boolean;
  #L48fb6e.  return v4;
  #L48fb70.  return v1;
}
