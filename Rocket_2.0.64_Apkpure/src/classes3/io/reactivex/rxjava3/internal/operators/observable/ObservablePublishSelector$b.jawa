record `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c459c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4c45a2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c45a6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c45b8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c45bc.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c45c2.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4c45c8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c457c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c4580.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4c4586.  v0:= temp;
  #L4c4588.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c45dc.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4c45e2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c45e6.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c45ec.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c4600.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4c4606.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c460a.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c4610.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c4624.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c4628.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c462e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c4640.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c4644.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c464a.  v0:= temp;
  #L4c464c.  if v0 == 0 then goto L4c465e;
  #L4c4650.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c4654.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c4658.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c465e.  return @kind void;
}
