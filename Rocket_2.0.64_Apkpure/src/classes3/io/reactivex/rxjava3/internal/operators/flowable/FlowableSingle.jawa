record `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `java.lang.Object` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a1324.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4a132a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle.b` @type ^`java.lang.Object` := v2 @kind object;
  #L4a132e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle.c` @type ^`boolean` := v3 @kind boolean;
  #L4a1332.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingle;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a1344.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a1348.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle$a`;
  #L4a134c.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle.b` @type ^`java.lang.Object` @kind object;
  #L4a1350.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle.c` @type ^`boolean` @kind boolean;
  #L4a1354.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingle$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Z)V` @kind direct;
  #L4a135a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4a1360.  return @kind void;
}
