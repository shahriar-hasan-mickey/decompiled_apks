record `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b6470.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b6476.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4b647a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4b647e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b6490.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b6494.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b649a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b6450.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b6454.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4b645a.  v0:= temp;
  #L4b645c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b64ac.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L4b64b0.  if v0 != 0 then goto L4b64d2;
  #L4b64b4.  v0:= 1I;
  #L4b64b6.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b64ba.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b64be.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4b64c2.  call `onNext`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4b64c8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b64cc.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4b64d2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b64e4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L4b64e8.  if v0 == 0 then goto L4b64f4;
  #L4b64ec.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b64f2.  return @kind void;
  #L4b64f4.  v0:= 1I;
  #L4b64f6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b64fa.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b64fe.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b6504.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b6518.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L4b651c.  if v0 == 0 then goto L4b6522;
  #L4b6520.  return @kind void;
  #L4b6522.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4b6526.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4b652c.  v2:= temp;
  #L4b652e.  if v2 == 0 then goto L4b655a;
  #L4b6532.  v2:= 1I;
  #L4b6534.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4b6538.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b653c.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b6542.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b6546.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b654a.  call `onNext`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4b6550.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b6554.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4b655a.  return @kind void;
  #L4b655c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b655e.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b6564.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b6568.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b656e.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b6574.  return @kind void;
  catch `java.lang.Throwable` @[L4b6522..L4b652e] goto L4b655c;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b6594.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b6598.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b659e.  v0:= temp;
  #L4b65a0.  if v0 == 0 then goto L4b65b2;
  #L4b65a4.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4b65a8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b65ac.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b65b2.  return @kind void;
}
