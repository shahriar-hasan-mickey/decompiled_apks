record `io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c2c34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c2c3a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c2c3e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2c50.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c2c54.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c2c5a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2c14.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c2c18.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4c2c1e.  v0:= temp;
  #L4c2c20.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c2c6c.  call temp:= `createOnComplete`() @signature `Lio/reactivex/rxjava3/core/Notification;.createOnComplete:()Lio/reactivex/rxjava3/core/Notification;` @kind static;
  #L4c2c72.  v0:= temp @kind object;
  #L4c2c74.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c2c78.  call `onNext`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c2c7e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c2c82.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c2c88.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2c9c.  call temp:= `createOnError`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.createOnError:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Notification;` @kind static;
  #L4c2ca2.  v2:= temp @kind object;
  #L4c2ca4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c2ca8.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c2cae.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c2cb2.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c2cb8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2ccc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c2cd0.  call temp:= `createOnNext`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.createOnNext:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Notification;` @kind static;
  #L4c2cd6.  v2:= temp @kind object;
  #L4c2cd8.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c2cde.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2cf0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c2cf4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c2cfa.  v0:= temp;
  #L4c2cfc.  if v0 == 0 then goto L4c2d0e;
  #L4c2d00.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c2d04.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c2d08.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c2d0e.  return @kind void;
}
