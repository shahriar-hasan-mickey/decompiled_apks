record `io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUnsubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d83ec.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4d83f2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn.a` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L4d83f6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v2 @kind object;
  #L4d83fa.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn` v3 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUnsubscribeOn;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4d840c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn.a` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L4d8410.  v1:= new `io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn$a`;
  #L4d8414.  v2:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4d8418.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUnsubscribeOn$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4d841e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d8424.  return @kind void;
}
