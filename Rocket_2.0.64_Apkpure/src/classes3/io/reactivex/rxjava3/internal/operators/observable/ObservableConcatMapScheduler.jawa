record `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.rxjava3.internal.util.ErrorMode` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ba8d8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4ba8de.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4ba8e2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v4 @kind object;
  #L4ba8e6.  v1:= 8I;
  #L4ba8ea.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4ba8f0.  v1:= temp;
  #L4ba8f2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.b` @type ^`int` := v1;
  #L4ba8f6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4ba8fa.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler` v8 @kind this, `io.reactivex.rxjava3.core.Observer` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ba90c.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ba910.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ba914.  if v0 != v1 then goto L4ba94c;
  #L4ba918.  v0:= new `io.reactivex.rxjava3.observers.SerializedObserver`;
  #L4ba91c.  call `<init>`(v0, v9) @signature `Lio/reactivex/rxjava3/observers/SerializedObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4ba922.  v9:= v8.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ba926.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$b`;
  #L4ba92a.  v2:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ba92e.  v3:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.b` @type ^`int`;
  #L4ba932.  v4:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ba936.  call temp:= `createWorker`(v4) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4ba93c.  v4:= temp @kind object;
  #L4ba93e.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L4ba944.  call `subscribe`(v9, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ba94a.  goto L4ba98e;
  #L4ba94c.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ba950.  v7:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$a`;
  #L4ba954.  v3:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ba958.  v4:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.b` @type ^`int`;
  #L4ba95c.  v1:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ba960.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ba964.  if v1 != v2 then goto L4ba96e;
  #L4ba968.  v1:= 1I;
  #L4ba96a.  v5:= 1I;
  #L4ba96c.  goto L4ba972;
  #L4ba96e.  v1:= 0I;
  #L4ba970.  v5:= 0I;
  #L4ba972.  v1:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ba976.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4ba97c.  v6:= temp @kind object;
  #L4ba97e.  v1:= v7 @kind object;
  #L4ba980.  v2:= v9 @kind object;
  #L4ba982.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L4ba988.  call `subscribe`(v0, v7) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ba98e.  return @kind void;
}
