record `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface, `java.lang.Runnable` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler$Worker` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.d` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.e` @AccessFlag ;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.f` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.g` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.h` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler$Worker` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4a37e0.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4a37e6.  v0:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4a37ea.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4a37f0.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.f` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v0 @kind object;
  #L4a37f4.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L4a37f8.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.b` @type ^`long` := v3 @kind wide;
  #L4a37fc.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.c` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L4a3800.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` := v6 @kind object;
  #L4a3804.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a3818.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4a381c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4a3822.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4a3826.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4a382c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a3840.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.h` @type ^`boolean` @kind boolean;
  #L4a3844.  if v0 == 0 then goto L4a384a;
  #L4a3848.  return @kind void;
  #L4a384a.  v0:= 1I;
  #L4a384c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.h` @type ^`boolean` := v0 @kind boolean;
  #L4a3850.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a3854.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4a385a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4a385e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4a3864.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a3878.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.h` @type ^`boolean` @kind boolean;
  #L4a387c.  if v0 == 0 then goto L4a3888;
  #L4a3880.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a3886.  return @kind void;
  #L4a3888.  v0:= 1I;
  #L4a388a.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.h` @type ^`boolean` := v0 @kind boolean;
  #L4a388e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a3892.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a3898.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4a389c.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4a38a2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a38b4.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.h` @type ^`boolean` @kind boolean;
  #L4a38b8.  if v0 == 0 then goto L4a38be;
  #L4a38bc.  return @kind void;
  #L4a38be.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.g` @type ^`boolean` @kind boolean;
  #L4a38c2.  if v0 != 0 then goto L4a3950;
  #L4a38c6.  v0:= 1I;
  #L4a38c8.  v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4a38cc.  call temp:= `get`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4a38d2.  v1:= temp @kind wide;
  #L4a38d4.  v3:= 0L;
  #L4a38d8.  v5:= lcmp(v1, v3);
  #L4a38dc.  if v5 == 0 then goto L4a392e;
  #L4a38e0.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a38e4.  call `onNext`(v0, v7) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4a38ea.  v0:= 1L;
  #L4a38ee.  call temp:= `produced`(v6, v0) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4a38f4.  v7:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.f` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a38f8.  call temp:= `get`(v7) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4a38fe.  v7:= temp @kind object;
  #L4a3900.  v7:= (`io.reactivex.rxjava3.disposables.Disposable`) v7 @kind object;
  #L4a3904.  if v7 == 0 then goto L4a390e;
  #L4a3908.  call `dispose`(v7) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4a390e.  v7:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.f` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4a3912.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4a3916.  v1:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.b` @type ^`long` @kind wide;
  #L4a391a.  v3:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a391e.  call temp:= `schedule`(v0, v6, v1, v3) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a3924.  v0:= temp @kind object;
  #L4a3926.  call temp:= `replace`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4a392c.  goto L4a3950;
  #L4a392e.  v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.h` @type ^`boolean` := v0 @kind boolean;
  #L4a3932.  call `cancel`(v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.cancel:()V` @kind virtual;
  #L4a3938.  v7:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a393c.  v0:= new `io.reactivex.rxjava3.exceptions.MissingBackpressureException`;
  #L4a3940.  v1:= "Could not deliver value due to lack of requests" @kind object;
  #L4a3944.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a394a.  call `onError`(v7, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a3950.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a3964.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4a3968.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4a396e.  v0:= temp;
  #L4a3970.  if v0 == 0 then goto L4a3992;
  #L4a3974.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.e` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4a3978.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a397c.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4a3982.  v0:= 9223372036854775807L;
  #L4a398c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4a3992.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a39a4.  call temp:= `validate`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L4a39aa.  v0:= temp;
  #L4a39ac.  if v0 == 0 then goto L4a39b6;
  #L4a39b0.  call temp:= `add`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4a39b6.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a39c8.  v0:= 0I;
  #L4a39ca.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4a39ce.  return @kind void;
}
