record `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c7374.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4c737a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.a` @type ^`long` := v2 @kind wide;
  #L4c737e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.b` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4c7382.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4c7386.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.d` @type ^`boolean` := v6 @kind boolean;
  #L4c738a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed` v7 @kind this, `io.reactivex.rxjava3.core.Observer` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c739c.  v1:= new `io.reactivex.rxjava3.observers.SerializedObserver`;
  #L4c73a0.  call `<init>`(v1, v8) @signature `Lio/reactivex/rxjava3/observers/SerializedObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4c73a6.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.d` @type ^`boolean` @kind boolean;
  #L4c73aa.  if v8 == 0 then goto L4c73d2;
  #L4c73ae.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4c73b2.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a`;
  #L4c73b6.  v2:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.a` @type ^`long` @kind wide;
  #L4c73ba.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4c73be.  v5:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4c73c2.  v0:= v6 @kind object;
  #L4c73c4.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4c73ca.  call `subscribe`(v8, v6) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4c73d0.  goto L4c73f4;
  #L4c73d2.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4c73d6.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$b`;
  #L4c73da.  v2:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.a` @type ^`long` @kind wide;
  #L4c73de.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4c73e2.  v5:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4c73e6.  v0:= v6 @kind object;
  #L4c73e8.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4c73ee.  call `subscribe`(v8, v6) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4c73f4.  return @kind void;
}
