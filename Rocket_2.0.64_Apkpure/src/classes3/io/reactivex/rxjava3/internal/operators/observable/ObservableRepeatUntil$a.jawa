record `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BooleanSupplier` `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object, `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/BooleanSupplier;Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c5628.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4c562e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c5632.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v3 @kind object;
  #L4c5636.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.c` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v4 @kind object;
  #L4c563a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.d` @type ^`io.reactivex.rxjava3.functions.BooleanSupplier` := v2 @kind object;
  #L4c563e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4c56f8.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4c56fe.  v0:= temp;
  #L4c5700.  if v0 != 0 then goto L4c571e;
  #L4c5704.  v0:= 1I;
  #L4c5706.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.c` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4c570a.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4c5710.  v0:= -v0 @kind int;
  #L4c5712.  call temp:= `addAndGet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4c5718.  v0:= temp;
  #L4c571a.  if v0 != 0 then goto L4c5706;
  #L4c571e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c5650.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.d` @type ^`io.reactivex.rxjava3.functions.BooleanSupplier` @kind object;
  #L4c5654.  call temp:= `getAsBoolean`(v0) @signature `Lio/reactivex/rxjava3/functions/BooleanSupplier;.getAsBoolean:()Z` @kind interface;
  #L4c565a.  v0:= temp;
  #L4c565c.  if v0 == 0 then goto L4c566c;
  #L4c5660.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c5664.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c566a.  goto L4c5672;
  #L4c566c.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil$a;.a:()V` @kind virtual;
  #L4c5672.  return @kind void;
  #L4c5674.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c5676.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c567c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c5680.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c5686.  return @kind void;
  catch `java.lang.Throwable` @[L4c5650..L4c565c] goto L4c5674;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c56a4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c56a8.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c56ae.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c56c0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c56c4.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c56ca.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c56dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil$a.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4c56e0.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4c56e6.  return @kind void;
}
