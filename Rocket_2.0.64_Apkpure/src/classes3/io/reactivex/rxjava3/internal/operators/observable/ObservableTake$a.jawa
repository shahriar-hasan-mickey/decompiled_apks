record `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c9c98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c9c9e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c9ca2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @type ^`long` := v2 @kind wide;
  #L4c9ca6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9cb8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c9cbc.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c9cc2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9c78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c9c7c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4c9c82.  v0:= temp;
  #L4c9c84.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9cd4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` @kind boolean;
  #L4c9cd8.  if v0 != 0 then goto L4c9cf6;
  #L4c9cdc.  v0:= 1I;
  #L4c9cde.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` := v0 @kind boolean;
  #L4c9ce2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c9ce6.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c9cec.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c9cf0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c9cf6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9d08.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` @kind boolean;
  #L4c9d0c.  if v0 == 0 then goto L4c9d18;
  #L4c9d10.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c9d16.  return @kind void;
  #L4c9d18.  v0:= 1I;
  #L4c9d1a.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` := v0 @kind boolean;
  #L4c9d1e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c9d22.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c9d28.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c9d2c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c9d32.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c9d44.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` @kind boolean;
  #L4c9d48.  if v0 != 0 then goto L4c9d8a;
  #L4c9d4c.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @type ^`long` @kind wide;
  #L4c9d50.  v2:= 1L;
  #L4c9d54.  v2:= v0 - v2 @kind long;
  #L4c9d58.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @type ^`long` := v2 @kind wide;
  #L4c9d5c.  v4:= 0L;
  #L4c9d60.  v6:= lcmp(v0, v4);
  #L4c9d64.  if v6 <= 0 then goto L4c9d8a;
  #L4c9d68.  v0:= lcmp(v2, v4);
  #L4c9d6c.  if v0 != 0 then goto L4c9d74;
  #L4c9d70.  v0:= 1I;
  #L4c9d72.  goto L4c9d76;
  #L4c9d74.  v0:= 0I;
  #L4c9d76.  v1:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c9d7a.  call `onNext`(v1, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c9d80.  if v0 == 0 then goto L4c9d8a;
  #L4c9d84.  call `onComplete`(v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onComplete:()V` @kind virtual;
  #L4c9d8a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v5 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c9d9c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c9da0.  call temp:= `validate`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c9da6.  v0:= temp;
  #L4c9da8.  if v0 == 0 then goto L4c9de2;
  #L4c9dac.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v6 @kind object;
  #L4c9db0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @type ^`long` @kind wide;
  #L4c9db4.  v2:= 0L;
  #L4c9db8.  v4:= lcmp(v0, v2);
  #L4c9dbc.  if v4 != 0 then goto L4c9dd8;
  #L4c9dc0.  v0:= 1I;
  #L4c9dc2.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` := v0 @kind boolean;
  #L4c9dc6.  call `dispose`(v6) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c9dcc.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c9dd0.  call `complete`(v6) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4c9dd6.  goto L4c9de2;
  #L4c9dd8.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c9ddc.  call `onSubscribe`(v6, v5) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c9de2.  return @kind void;
}
