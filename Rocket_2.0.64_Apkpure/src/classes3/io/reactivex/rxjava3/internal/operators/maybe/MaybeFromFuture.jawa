record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
  `java.util.concurrent.Future` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture` v0 @kind this, `java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ad32c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4ad332.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.a` @type ^`java.util.concurrent.Future` := v1 @kind object;
  #L4ad336.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.b` @type ^`long` := v2 @kind wide;
  #L4ad33a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4ad33e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture` v6 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromFuture;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ad350.  call temp:= `b`() @signature `Ls0/d;.b:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4ad356.  v0:= temp @kind object;
  #L4ad358.  call `onSubscribe`(v7, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ad35e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ad364.  v1:= temp;
  #L4ad366.  if v1 != 0 then goto L4ad3e8;
  #L4ad36a.  v1:= v6.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.b` @type ^`long` @kind wide;
  #L4ad36e.  v3:= 0L;
  #L4ad372.  v5:= lcmp(v1, v3);
  #L4ad376.  if v5 > 0 then goto L4ad388;
  #L4ad37a.  v1:= v6.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.a` @type ^`java.util.concurrent.Future` @kind object;
  #L4ad37e.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/Future;.get:()Ljava/lang/Object;` @kind interface;
  #L4ad384.  v1:= temp @kind object;
  #L4ad386.  goto L4ad398;
  #L4ad388.  v3:= v6.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.a` @type ^`java.util.concurrent.Future` @kind object;
  #L4ad38c.  v4:= v6.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromFuture.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ad390.  call temp:= `get`(v3, v1, v4) @signature `Ljava/util/concurrent/Future;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @kind interface;
  #L4ad396.  v1:= temp @kind object;
  #L4ad398.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ad39e.  v0:= temp;
  #L4ad3a0.  if v0 != 0 then goto L4ad3e8;
  #L4ad3a4.  if v1 != 0 then goto L4ad3b0;
  #L4ad3a8.  call `onComplete`(v7) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4ad3ae.  goto L4ad3e8;
  #L4ad3b0.  call `onSuccess`(v7, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4ad3b6.  goto L4ad3e8;
  #L4ad3b8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad3ba.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad3c0.  v2:= instanceof @variable v1 @type ^`java.util.concurrent.ExecutionException` @kind boolean;
  #L4ad3c4.  if v2 == 0 then goto L4ad3d0;
  #L4ad3c8.  call temp:= `getCause`(v1) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L4ad3ce.  v1:= temp @kind object;
  #L4ad3d0.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad3d6.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ad3dc.  v0:= temp;
  #L4ad3de.  if v0 != 0 then goto L4ad3e8;
  #L4ad3e2.  call `onError`(v7, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ad3e8.  return @kind void;
  catch `java.lang.Throwable` @[L4ad36a..L4ad398] goto L4ad3b8;
}
