record `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.f` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.g` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.h` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.i` @AccessFlag VOLATILE;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.j` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c8d00.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4c8d06.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4c8d0a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.b` @type ^`long` := v2 @kind wide;
  #L4c8d0e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4c8d12.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4c8d16.  v1:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4c8d1a.  call `<init>`(v1, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4c8d20.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` := v1 @kind object;
  #L4c8d24.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.f` @type ^`boolean` := v7 @kind boolean;
  #L4c8d28.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` v17 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L4c8d7c.  v0:= v17 @kind object;
  #L4c8d80.  call temp:= `getAndIncrement`(v17) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4c8d86.  v1:= temp;
  #L4c8d88.  if v1 == 0 then goto L4c8d8e;
  #L4c8d8c.  return @kind void;
  #L4c8d8e.  v1:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8d92.  v2:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4c8d96.  v3:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.f` @type ^`boolean` @kind boolean;
  #L4c8d9a.  v4:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4c8d9e.  v5:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4c8da2.  v6:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.b` @type ^`long` @kind wide;
  #L4c8da6.  v8:= 1I;
  #L4c8da8.  v9:= 1I;
  #L4c8daa.  v10:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.h` @type ^`boolean` @kind boolean;
  #L4c8dae.  if v10 == 0 then goto L4c8dbe;
  #L4c8db2.  v1:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4c8db6.  call `clear`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4c8dbc.  return @kind void;
  #L4c8dbe.  v10:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4c8dc2.  call temp:= `peek`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @kind virtual;
  #L4c8dc8.  v11:= temp @kind object;
  #L4c8dca.  v11:= (`java.lang.Long`) v11 @kind object;
  #L4c8dce.  if v11 != 0 then goto L4c8dd6;
  #L4c8dd2.  v12:= 1I;
  #L4c8dd4.  goto L4c8dd8;
  #L4c8dd6.  v12:= 0I;
  #L4c8dd8.  call temp:= `now`(v5, v4) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4c8dde.  v13:= temp @kind wide;
  #L4c8de0.  if v12 != 0 then goto L4c8df8;
  #L4c8de4.  call temp:= `longValue`(v11) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c8dea.  v15:= temp @kind wide;
  #L4c8dec.  v13:= v13 - v6 @kind long;
  #L4c8dee.  v11:= lcmp(v15, v13);
  #L4c8df2.  if v11 <= 0 then goto L4c8df8;
  #L4c8df6.  v12:= 1I;
  #L4c8df8.  if v10 == 0 then goto L4c8e42;
  #L4c8dfc.  if v3 == 0 then goto L4c8e1c;
  #L4c8e00.  if v12 == 0 then goto L4c8e42;
  #L4c8e04.  v2:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.j` @type ^`java.lang.Throwable` @kind object;
  #L4c8e08.  if v2 == 0 then goto L4c8e14;
  #L4c8e0c.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c8e12.  goto L4c8e1a;
  #L4c8e14.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c8e1a.  return @kind void;
  #L4c8e1c.  v10:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.j` @type ^`java.lang.Throwable` @kind object;
  #L4c8e20.  if v10 == 0 then goto L4c8e36;
  #L4c8e24.  v2:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4c8e28.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4c8e2e.  call `onError`(v1, v10) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c8e34.  return @kind void;
  #L4c8e36.  if v12 == 0 then goto L4c8e42;
  #L4c8e3a.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4c8e40.  return @kind void;
  #L4c8e42.  if v12 == 0 then goto L4c8e56;
  #L4c8e46.  v9:= -v9 @kind int;
  #L4c8e48.  call temp:= `addAndGet`(v0, v9) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4c8e4e.  v9:= temp;
  #L4c8e50.  if v9 != 0 then goto L4c8daa;
  #L4c8e54.  return @kind void;
  #L4c8e56.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4c8e5c.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4c8e62.  v10:= temp @kind object;
  #L4c8e64.  call `onNext`(v1, v10) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c8e6a.  goto L4c8daa;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8d3c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.h` @type ^`boolean` @kind boolean;
  #L4c8d40.  if v0 != 0 then goto L4c8d6a;
  #L4c8d44.  v0:= 1I;
  #L4c8d46.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.h` @type ^`boolean` := v0 @kind boolean;
  #L4c8d4a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.g` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c8d4e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4c8d54.  call temp:= `getAndIncrement`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4c8d5a.  v0:= temp;
  #L4c8d5c.  if v0 != 0 then goto L4c8d6a;
  #L4c8d60.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4c8d64.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4c8d6a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8ce8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.h` @type ^`boolean` @kind boolean;
  #L4c8cec.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8e7c.  v0:= 1I;
  #L4c8e7e.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.i` @type ^`boolean` := v0 @kind boolean;
  #L4c8e82.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.a:()V` @kind virtual;
  #L4c8e88.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4c8e9c.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.j` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4c8ea0.  v1:= 1I;
  #L4c8ea2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.i` @type ^`boolean` := v1 @kind boolean;
  #L4c8ea6.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.a:()V` @kind virtual;
  #L4c8eac.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c8ec0.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4c8ec4.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4c8ec8.  v2:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4c8ecc.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4c8ed2.  v1:= temp @kind wide;
  #L4c8ed4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c8eda.  v1:= temp @kind object;
  #L4c8edc.  call temp:= `offer`(v0, v1, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4c8ee2.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.a:()V` @kind virtual;
  #L4c8ee8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8efc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.g` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4c8f00.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4c8f06.  v0:= temp;
  #L4c8f08.  if v0 == 0 then goto L4c8f1a;
  #L4c8f0c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.g` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4c8f10.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c8f14.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c8f1a.  return @kind void;
}
