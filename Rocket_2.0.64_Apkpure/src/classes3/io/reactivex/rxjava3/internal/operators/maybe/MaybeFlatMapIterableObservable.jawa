record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapIterableObservable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ac948.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4ac94e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v1 @kind object;
  #L4ac952.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4ac956.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable` v3 @kind this, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapIterableObservable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4ac968.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4ac96c.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable$a`;
  #L4ac970.  v2:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableObservable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ac974.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapIterableObservable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4ac97a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4ac980.  return @kind void;
}
