record `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback` @kind interface {
  `org.reactivestreams.Subscriber`[] `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscriber`[] `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn` `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b` v0 @kind this, `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn` v1 @kind object, `org.reactivestreams.Subscriber`[] v2 @kind object, `org.reactivestreams.Subscriber`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$b;.<init>:(Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn;[Lorg/reactivestreams/Subscriber;[Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d2e04.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.c` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn` := v1 @kind object;
  #L4d2e08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d2e0e.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.a` @type ^`org.reactivestreams.Subscriber`[] := v2 @kind object;
  #L4d2e12.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.b` @type ^`org.reactivestreams.Subscriber`[] := v3 @kind object;
  #L4d2e16.  return @kind void;
}
procedure `void` `onWorker`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b` v3 @kind this, `int` v4 , `io.reactivex.rxjava3.core.Scheduler$Worker` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$b;.onWorker:(ILio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d2e28.  v0:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.c` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn` @kind object;
  #L4d2e2c.  v1:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.a` @type ^`org.reactivestreams.Subscriber`[] @kind object;
  #L4d2e30.  v2:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$b.b` @type ^`org.reactivestreams.Subscriber`[] @kind object;
  #L4d2e34.  call `a`(v0, v4, v1, v2, v5) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn;.a:(I[Lorg/reactivestreams/Subscriber;[Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind virtual;
  #L4d2e3a.  return @kind void;
}
