record `io.reactivex.rxjava3.internal.operators.flowable.FlowableError` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableError.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableError` v0 @kind this, `io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableError;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L490c84.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L490c8a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableError.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v1 @kind object;
  #L490c8e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableError` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableError;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L490ca0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableError.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L490ca4.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L490caa.  v0:= temp @kind object;
  #L490cac.  v1:= "Callable returned a null Throwable." @kind object;
  #L490cb0.  call temp:= `nullCheck`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L490cb6.  v0:= temp @kind object;
  #L490cb8.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L490cbc.  goto L490cc6;
  #L490cbe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L490cc0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L490cc6.  call `error`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L490ccc.  return @kind void;
  catch `java.lang.Throwable` @[L490ca0..L490cbc] goto L490cbe;
}
