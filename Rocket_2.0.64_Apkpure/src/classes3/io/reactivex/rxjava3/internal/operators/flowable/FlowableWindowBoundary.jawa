record `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a6de8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4a6dee.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary.b` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L4a6df2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary.c` @type ^`int` := v3;
  #L4a6df6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4a6e08.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary$b`;
  #L4a6e0c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary.c` @type ^`int`;
  #L4a6e10.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$b;.<init>:(Lorg/reactivestreams/Subscriber;I)V` @kind direct;
  #L4a6e16.  call `onSubscribe`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4a6e1c.  call `d`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$b;.d:()V` @kind virtual;
  #L4a6e22.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4a6e26.  v1:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary$b.c` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary$a` @kind object;
  #L4a6e2a.  call `subscribe`(v3, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4a6e30.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4a6e34.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4a6e3a.  return @kind void;
}
