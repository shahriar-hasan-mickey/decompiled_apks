record `io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.maybe.a` @kind class {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTakeUntilMaybe;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af828.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/a;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4af82e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v2 @kind object;
  #L4af832.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTakeUntilMaybe;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4af844.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe$a`;
  #L4af848.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTakeUntilMaybe$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4af84e.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4af854.  v3:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4af858.  v1:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTakeUntilMaybe$a$a` @kind object;
  #L4af85c.  call `subscribe`(v3, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4af862.  v3:= v2.`io.reactivex.rxjava3.internal.operators.maybe.a.source` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4af866.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4af86c.  return @kind void;
}
