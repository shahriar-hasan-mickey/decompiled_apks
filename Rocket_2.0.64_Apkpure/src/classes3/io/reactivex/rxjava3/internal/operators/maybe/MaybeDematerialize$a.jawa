record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aadb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aadbe.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4aadc2.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4aadc6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aadd8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4aaddc.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4aade2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aad98.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4aad9c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4aada2.  v0:= temp;
  #L4aada4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aadf4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aadf8.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4aadfe.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aae10.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aae14.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aae1a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aae2c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4aae30.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aae36.  v0:= temp;
  #L4aae38.  if v0 == 0 then goto L4aae4a;
  #L4aae3c.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4aae40.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aae44.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4aae4a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aae5c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4aae60.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4aae66.  v2:= temp @kind object;
  #L4aae68.  v0:= "The selector returned a null Notification" @kind object;
  #L4aae6c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aae72.  v2:= (`io.reactivex.rxjava3.core.Notification`) v2 @kind object;
  #L4aae76.  call temp:= `isOnNext`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.isOnNext:()Z` @kind virtual;
  #L4aae7c.  v0:= temp;
  #L4aae7e.  if v0 == 0 then goto L4aae96;
  #L4aae82.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aae86.  call temp:= `getValue`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4aae8c.  v2:= temp @kind object;
  #L4aae8e.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4aae94.  goto L4aaec0;
  #L4aae96.  call temp:= `isOnComplete`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.isOnComplete:()Z` @kind virtual;
  #L4aae9c.  v0:= temp;
  #L4aae9e.  if v0 == 0 then goto L4aaeae;
  #L4aaea2.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aaea6.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4aaeac.  goto L4aaec0;
  #L4aaeae.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aaeb2.  call temp:= `getError`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L4aaeb8.  v2:= temp @kind object;
  #L4aaeba.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aaec0.  return @kind void;
  #L4aaec2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aaec4.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4aaeca.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4aaece.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4aaed4.  return @kind void;
  catch `java.lang.Throwable` @[L4aae5c..L4aae76] goto L4aaec2;
}
