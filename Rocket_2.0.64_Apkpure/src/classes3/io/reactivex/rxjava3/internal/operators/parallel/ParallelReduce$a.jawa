record `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.DeferredScalarSubscriber` @kind class {
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d2608.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/DeferredScalarSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4d260e.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L4d2612.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.a` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v3 @kind object;
  #L4d2616.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d2628.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/DeferredScalarSubscriber;.cancel:()V` @kind super;
  #L4d262e.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d2632.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4d2638.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d264c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L4d2650.  if v0 != 0 then goto L4d266a;
  #L4d2654.  v0:= 1I;
  #L4d2656.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` := v0 @kind boolean;
  #L4d265a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` @kind object;
  #L4d265e.  v1:= 0I;
  #L4d2660.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L4d2664.  call `complete`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4d266a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d267c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L4d2680.  if v0 == 0 then goto L4d268c;
  #L4d2684.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d268a.  return @kind void;
  #L4d268c.  v0:= 1I;
  #L4d268e.  v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` := v0 @kind boolean;
  #L4d2692.  v0:= 0I;
  #L4d2694.  v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v0 @kind object;
  #L4d2698.  v0:= v1.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d269c.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d26a2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d26b4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L4d26b8.  if v0 != 0 then goto L4d26f0;
  #L4d26bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.a` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4d26c0.  v1:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` @kind object;
  #L4d26c4.  call temp:= `apply`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4d26ca.  v3:= temp @kind object;
  #L4d26cc.  v0:= "The reducer returned a null value" @kind object;
  #L4d26d0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d26d6.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L4d26da.  goto L4d26f0;
  #L4d26dc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d26de.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d26e4.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.cancel:()V` @kind virtual;
  #L4d26ea.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4d26f0.  return @kind void;
  catch `java.lang.Throwable` @[L4d26bc..L4d26d6] goto L4d26dc;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d2710.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d2714.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4d271a.  v0:= temp;
  #L4d271c.  if v0 == 0 then goto L4d273e;
  #L4d2720.  v2.`io.reactivex.rxjava3.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4d2724.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d2728.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4d272e.  v0:= 9223372036854775807L;
  #L4d2738.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4d273e.  return @kind void;
}
