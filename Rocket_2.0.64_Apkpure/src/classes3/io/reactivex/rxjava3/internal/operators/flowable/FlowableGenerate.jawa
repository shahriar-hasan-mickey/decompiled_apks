record `io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate` v0 @kind this, `io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGenerate;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L494ea4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L494eaa.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v1 @kind object;
  #L494eae.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L494eb2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.d` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L494eb6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGenerate;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L494ec8.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L494ecc.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L494ed2.  v0:= temp @kind object;
  #L494ed4.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate$a`;
  #L494ed8.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L494edc.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate.d` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L494ee0.  call `<init>`(v1, v5, v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGenerate$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;Ljava/lang/Object;)V` @kind direct;
  #L494ee6.  call `onSubscribe`(v5, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L494eec.  return @kind void;
  #L494eee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L494ef0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L494ef6.  call `error`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L494efc.  return @kind void;
  catch `java.lang.Throwable` @[L494ec8..L494ed4] goto L494eee;
}
