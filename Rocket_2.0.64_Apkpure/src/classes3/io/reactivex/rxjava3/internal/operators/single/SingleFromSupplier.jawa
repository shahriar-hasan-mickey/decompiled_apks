record `io.reactivex.rxjava3.internal.operators.single.SingleFromSupplier` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.single.SingleFromSupplier.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFromSupplier` v0 @kind this, `io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d6c94.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4d6c9a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFromSupplier.a` @type ^`io.reactivex.rxjava3.functions.Supplier` := v1 @kind object;
  #L4d6c9e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleFromSupplier` v3 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromSupplier;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4d6cb0.  call temp:= `b`() @signature `Ls0/d;.b:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4d6cb6.  v0:= temp @kind object;
  #L4d6cb8.  call `onSubscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d6cbe.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d6cc4.  v1:= temp;
  #L4d6cc6.  if v1 == 0 then goto L4d6ccc;
  #L4d6cca.  return @kind void;
  #L4d6ccc.  v1:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromSupplier.a` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4d6cd0.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4d6cd6.  v1:= temp @kind object;
  #L4d6cd8.  v2:= "The supplier returned a null value" @kind object;
  #L4d6cdc.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d6ce2.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d6ce8.  v0:= temp;
  #L4d6cea.  if v0 != 0 then goto L4d6cf4;
  #L4d6cee.  call `onSuccess`(v4, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d6cf4.  return @kind void;
  #L4d6cf6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d6cf8.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d6cfe.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d6d04.  v0:= temp;
  #L4d6d06.  if v0 != 0 then goto L4d6d12;
  #L4d6d0a.  call `onError`(v4, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d6d10.  goto L4d6d18;
  #L4d6d12.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d6d18.  return @kind void;
  catch `java.lang.Throwable` @[L4d6ccc..L4d6ce2] goto L4d6cf6;
}
