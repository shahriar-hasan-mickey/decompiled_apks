record `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.f` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.g` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.i` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.j` @AccessFlag VOLATILE;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.k` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object, `int` v7 , `boolean` v8 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4a15f8.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4a15fe.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4a1602.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4a1608.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4a160c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L4a1610.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.b` @type ^`long` := v3 @kind wide;
  #L4a1614.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L4a1618.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v6 @kind object;
  #L4a161c.  v2:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4a1620.  call `<init>`(v2, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4a1626.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` := v2 @kind object;
  #L4a162a.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.f` @type ^`boolean` := v8 @kind boolean;
  #L4a162e.  return @kind void;
}
procedure `boolean` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v2 @kind this, `boolean` v3 , `boolean` v4 , `org.reactivestreams.Subscriber` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.a:(ZZLorg/reactivestreams/Subscriber;Z)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4a1584.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4a1588.  v1:= 1I;
  #L4a158a.  if v0 == 0 then goto L4a159a;
  #L4a158e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4a1592.  call `clear`(v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4a1598.  return v1;
  #L4a159a.  if v3 == 0 then goto L4a15e4;
  #L4a159e.  if v6 == 0 then goto L4a15be;
  #L4a15a2.  if v4 == 0 then goto L4a15e4;
  #L4a15a6.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.k` @type ^`java.lang.Throwable` @kind object;
  #L4a15aa.  if v3 == 0 then goto L4a15b6;
  #L4a15ae.  call `onError`(v5, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a15b4.  goto L4a15bc;
  #L4a15b6.  call `onComplete`(v5) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4a15bc.  return v1;
  #L4a15be.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.k` @type ^`java.lang.Throwable` @kind object;
  #L4a15c2.  if v3 == 0 then goto L4a15d8;
  #L4a15c6.  v4:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4a15ca.  call `clear`(v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4a15d0.  call `onError`(v5, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4a15d6.  return v1;
  #L4a15d8.  if v4 == 0 then goto L4a15e4;
  #L4a15dc.  call `onComplete`(v5) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4a15e2.  return v1;
  #L4a15e4.  v3:= 0I;
  #L4a15e6.  return v3;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v23 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L4a1680.  v0:= v23 @kind object;
  #L4a1684.  call temp:= `getAndIncrement`(v23) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4a168a.  v1:= temp;
  #L4a168c.  if v1 == 0 then goto L4a1692;
  #L4a1690.  return @kind void;
  #L4a1692.  v1:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a1696.  v2:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4a169a.  v3:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.f` @type ^`boolean` @kind boolean;
  #L4a169e.  v4:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a16a2.  v5:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4a16a6.  v6:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.b` @type ^`long` @kind wide;
  #L4a16aa.  v9:= 1I;
  #L4a16ac.  v10:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a16b0.  call temp:= `get`(v10) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4a16b6.  v10:= temp @kind wide;
  #L4a16b8.  v14:= 0L;
  #L4a16bc.  v16:= lcmp(v14, v10);
  #L4a16c0.  if v16 == 0 then goto L4a173a;
  #L4a16c4.  v8:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.j` @type ^`boolean` @kind boolean;
  #L4a16c8.  call temp:= `peek`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @kind virtual;
  #L4a16ce.  v17:= temp @kind object;
  #L4a16d0.  v17:= (`java.lang.Long`) v17 @kind object;
  #L4a16d4.  if v17 != 0 then goto L4a16de;
  #L4a16d8.  v18:= 1I;
  #L4a16dc.  goto L4a16e2;
  #L4a16de.  v18:= 0I;
  #L4a16e2.  call temp:= `now`(v5, v4) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4a16e8.  v19:= temp @kind wide;
  #L4a16ea.  if v18 != 0 then goto L4a1706;
  #L4a16ee.  call temp:= `longValue`(v17) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4a16f4.  v21:= temp @kind wide;
  #L4a16f6.  v19:= v19 - v6 @kind long;
  #L4a16fa.  v17:= lcmp(v21, v19);
  #L4a16fe.  if v17 <= 0 then goto L4a1706;
  #L4a1702.  v12:= 1I;
  #L4a1704.  goto L4a170a;
  #L4a1706.  v12:= v18;
  #L4a170a.  call temp:= `a`(v0, v8, v12, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.a:(ZZLorg/reactivestreams/Subscriber;Z)Z` @kind virtual;
  #L4a1710.  v8:= temp;
  #L4a1712.  if v8 == 0 then goto L4a1718;
  #L4a1716.  return @kind void;
  #L4a1718.  if v12 == 0 then goto L4a171e;
  #L4a171c.  goto L4a173a;
  #L4a171e.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4a1724.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4a172a.  v8:= temp @kind object;
  #L4a172c.  call `onNext`(v1, v8) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4a1732.  v12:= 1L;
  #L4a1736.  v14:= v14 + v12 @kind long;
  #L4a1738.  goto L4a16bc;
  #L4a173a.  v10:= 0L;
  #L4a173e.  v8:= lcmp(v14, v10);
  #L4a1742.  if v8 == 0 then goto L4a1750;
  #L4a1746.  v8:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a174a.  call temp:= `produced`(v8, v14) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4a1750.  v8:= -v9 @kind int;
  #L4a1752.  call temp:= `addAndGet`(v0, v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4a1758.  v9:= temp;
  #L4a175a.  if v9 != 0 then goto L4a16ac;
  #L4a175e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a1640.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4a1644.  if v0 != 0 then goto L4a166e;
  #L4a1648.  v0:= 1I;
  #L4a164a.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.i` @type ^`boolean` := v0 @kind boolean;
  #L4a164e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4a1652.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4a1658.  call temp:= `getAndIncrement`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4a165e.  v0:= temp;
  #L4a1660.  if v0 != 0 then goto L4a166e;
  #L4a1664.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4a1668.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4a166e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a1770.  v0:= 1I;
  #L4a1772.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.j` @type ^`boolean` := v0 @kind boolean;
  #L4a1776.  call `b`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @kind virtual;
  #L4a177c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4a1790.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.k` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4a1794.  v1:= 1I;
  #L4a1796.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.j` @type ^`boolean` := v1 @kind boolean;
  #L4a179a.  call `b`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @kind virtual;
  #L4a17a0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a17b4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4a17b8.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a17bc.  call temp:= `now`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4a17c2.  v0:= temp @kind wide;
  #L4a17c4.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4a17c8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4a17ce.  v0:= temp @kind object;
  #L4a17d0.  call temp:= `offer`(v2, v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4a17d6.  call `b`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @kind virtual;
  #L4a17dc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a17f0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4a17f4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4a17fa.  v0:= temp;
  #L4a17fc.  if v0 == 0 then goto L4a181e;
  #L4a1800.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.g` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4a1804.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4a1808.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4a180e.  v0:= 9223372036854775807L;
  #L4a1818.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4a181e.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a1830.  call temp:= `validate`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L4a1836.  v0:= temp;
  #L4a1838.  if v0 == 0 then goto L4a184c;
  #L4a183c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a1840.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4a1846.  call `b`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @kind virtual;
  #L4a184c.  return @kind void;
}
