record `io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `io.reactivex.rxjava3.core.Completable` `io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.CompletableSource` `io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable` v0 @kind this, `io.reactivex.rxjava3.core.Completable` v1 @kind object, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableTakeUntilCompletable;.<init>:(Lio/reactivex/rxjava3/core/Completable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L485e34.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L485e3a.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable.a` @type ^`io.reactivex.rxjava3.core.Completable` := v1 @kind object;
  #L485e3e.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable.b` @type ^`io.reactivex.rxjava3.core.CompletableSource` := v2 @kind object;
  #L485e42.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableTakeUntilCompletable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L485e54.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable$a`;
  #L485e58.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableTakeUntilCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind direct;
  #L485e5e.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L485e64.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable.b` @type ^`io.reactivex.rxjava3.core.CompletableSource` @kind object;
  #L485e68.  v1:= v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable$a$a` @kind object;
  #L485e6c.  call `subscribe`(v3, v1) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L485e72.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable.a` @type ^`io.reactivex.rxjava3.core.Completable` @kind object;
  #L485e76.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L485e7c.  return @kind void;
}
