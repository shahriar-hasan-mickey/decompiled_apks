record `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.observers.DisposableObserver` @kind class {
  `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.d` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.e` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.f` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.g` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.h` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v2 @kind object, `long` v3 , `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;JLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4bb68c.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/observers/DisposableObserver;.<init>:()V` @kind direct;
  #L4bb692.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4bb696.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4bb69c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.h` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L4bb6a0.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.d` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` := v2 @kind object;
  #L4bb6a4.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.e` @type ^`long` := v3 @kind wide;
  #L4bb6a8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.f` @type ^`java.lang.Object` := v5 @kind object;
  #L4bb6ac.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4bb6c0.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.h` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4bb6c4.  v1:= 0I;
  #L4bb6c6.  v2:= 1I;
  #L4bb6c8.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4bb6ce.  v0:= temp;
  #L4bb6d0.  if v0 == 0 then goto L4bb6e6;
  #L4bb6d4.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.d` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` @kind object;
  #L4bb6d8.  v1:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.e` @type ^`long` @kind wide;
  #L4bb6dc.  v3:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.f` @type ^`java.lang.Object` @kind object;
  #L4bb6e0.  call `a`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.a:(JLjava/lang/Object;)V` @kind virtual;
  #L4bb6e6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bb6f8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.g` @type ^`boolean` @kind boolean;
  #L4bb6fc.  if v0 == 0 then goto L4bb702;
  #L4bb700.  return @kind void;
  #L4bb702.  v0:= 1I;
  #L4bb704.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4bb708.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.a:()V` @kind virtual;
  #L4bb70e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bb720.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.g` @type ^`boolean` @kind boolean;
  #L4bb724.  if v0 == 0 then goto L4bb730;
  #L4bb728.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bb72e.  return @kind void;
  #L4bb730.  v0:= 1I;
  #L4bb732.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4bb736.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.d` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` @kind object;
  #L4bb73a.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bb740.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4bb754.  v1:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.g` @type ^`boolean` @kind boolean;
  #L4bb758.  if v1 == 0 then goto L4bb75e;
  #L4bb75c.  return @kind void;
  #L4bb75e.  v1:= 1I;
  #L4bb760.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a.g` @type ^`boolean` := v1 @kind boolean;
  #L4bb764.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/observers/DisposableObserver;.dispose:()V` @kind virtual;
  #L4bb76a.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.a:()V` @kind virtual;
  #L4bb770.  return @kind void;
}
