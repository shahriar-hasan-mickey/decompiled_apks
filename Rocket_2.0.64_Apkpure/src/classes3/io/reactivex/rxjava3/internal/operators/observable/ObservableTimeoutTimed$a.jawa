record `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/concurrent/atomic/AtomicReference;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cb6d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4cb6da.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4cb6de.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L4cb6e2.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb6f4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb6f8.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4cb6fe.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb710.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb714.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4cb71a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb72c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4cb730.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4cb736.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb748.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4cb74c.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4cb752.  return @kind void;
}
