record `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Emitter` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bff00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bff06.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4bff0a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L4bff0e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4bff12.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v4 @kind object;
  #L4bff16.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4bff40.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4bff44.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4bff4a.  goto L4bff5a;
  #L4bff4c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bff4e.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bff54.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bff5a.  return @kind void;
  catch `java.lang.Throwable` @[L4bff40..L4bff4a] goto L4bff4c;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c0048.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` @kind object;
  #L4c004c.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` @kind boolean;
  #L4c0050.  v2:= 0I;
  #L4c0052.  if v1 == 0 then goto L4c0062;
  #L4c0056.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4c005a.  call `a`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L4c0060.  return @kind void;
  #L4c0062.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4c0066.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` @kind boolean;
  #L4c006a.  if v3 == 0 then goto L4c007a;
  #L4c006e.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4c0072.  call `a`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L4c0078.  return @kind void;
  #L4c007a.  v3:= 0I;
  #L4c007c.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.g` @type ^`boolean` := v3 @kind boolean;
  #L4c0080.  v3:= 1I;
  #L4c0082.  call temp:= `apply`(v1, v0, v5) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0088.  v0:= temp @kind object;
  #L4c008a.  v4:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` @kind boolean;
  #L4c008e.  if v4 == 0 then goto L4c0066;
  #L4c0092.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` := v3 @kind boolean;
  #L4c0096.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4c009a.  call `a`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L4c00a0.  return @kind void;
  #L4c00a2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c00a4.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c00aa.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4c00ae.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` := v3 @kind boolean;
  #L4c00b2.  call `onError`(v5, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c00b8.  call `a`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L4c00be.  return @kind void;
  catch `java.lang.Throwable` @[L4c0082..L4c008a] goto L4c00a2;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bff28.  v0:= 1I;
  #L4bff2a.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4bff2e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bfee8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` @kind boolean;
  #L4bfeec.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bff78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` @kind boolean;
  #L4bff7c.  if v0 != 0 then goto L4bff90;
  #L4bff80.  v0:= 1I;
  #L4bff82.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4bff86.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bff8a.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4bff90.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bffa4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` @kind boolean;
  #L4bffa8.  if v0 == 0 then goto L4bffb4;
  #L4bffac.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4bffb2.  goto L4bffd4;
  #L4bffb4.  if v2 != 0 then goto L4bffc4;
  #L4bffb8.  v2:= "onError called with a null Throwable." @kind object;
  #L4bffbc.  call temp:= `createNullPointerException`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4bffc2.  v2:= temp @kind object;
  #L4bffc4.  v0:= 1I;
  #L4bffc6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4bffca.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4bffce.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bffd4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bffe8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` @kind boolean;
  #L4bffec.  if v0 != 0 then goto L4c0036;
  #L4bfff0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.g` @type ^`boolean` @kind boolean;
  #L4bfff4.  if v0 == 0 then goto L4c000e;
  #L4bfff8.  v2:= new `java.lang.IllegalStateException`;
  #L4bfffc.  v0:= "onNext already called in this generate turn" @kind object;
  #L4c0000.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c0006.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c000c.  goto L4c0036;
  #L4c000e.  if v2 != 0 then goto L4c0026;
  #L4c0012.  v2:= "onNext called with a null value." @kind object;
  #L4c0016.  call temp:= `createNullPointerException`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4c001c.  v2:= temp @kind object;
  #L4c001e.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c0024.  goto L4c0036;
  #L4c0026.  v0:= 1I;
  #L4c0028.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4c002c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4c0030.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c0036.  return @kind void;
}
