record `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4b0084.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4b008a.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v2 @kind object;
  #L4b008e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c`;
  #L4b0092.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$c;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;)V` @kind direct;
  #L4b0098.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` := v0 @kind object;
  #L4b009c.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.c` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v3 @kind object;
  #L4b00a0.  if v3 == 0 then goto L4b00b0;
  #L4b00a4.  v3:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a`;
  #L4b00a8.  call `<init>`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4b00ae.  goto L4b00b2;
  #L4b00b0.  v3:= 0I;
  #L4b00b2.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a` := v3 @kind object;
  #L4b00b6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b01c0.  call temp:= `dispose`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b01c6.  v0:= temp;
  #L4b01c8.  if v0 == 0 then goto L4b01f4;
  #L4b01cc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.c` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4b01d0.  if v0 != 0 then goto L4b01ea;
  #L4b01d4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b01d8.  v1:= new `java.util.concurrent.TimeoutException`;
  #L4b01dc.  call `<init>`(v1) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L4b01e2.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b01e8.  goto L4b01f4;
  #L4b01ea.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a` @kind object;
  #L4b01ee.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4b01f4.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.b:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0208.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b020e.  v0:= temp;
  #L4b0210.  if v0 == 0 then goto L4b0220;
  #L4b0214.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b0218.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b021e.  goto L4b0226;
  #L4b0220.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0226.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b00c8.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b00ce.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind object;
  #L4b00d2.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b00d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a` @kind object;
  #L4b00dc.  if v0 == 0 then goto L4b00e6;
  #L4b00e0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b00e6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b005c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b0062.  v0:= temp @kind object;
  #L4b0064.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4b0068.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b006e.  v0:= temp;
  #L4b0070.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b00f8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind object;
  #L4b00fc.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b0102.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4b0106.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b010c.  v1:= temp @kind object;
  #L4b010e.  if v1 == v0 then goto L4b011c;
  #L4b0112.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b0116.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4b011c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b0130.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind object;
  #L4b0134.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b013a.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4b013e.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b0144.  v1:= temp @kind object;
  #L4b0146.  if v1 == v0 then goto L4b0156;
  #L4b014a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b014e.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b0154.  goto L4b015c;
  #L4b0156.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b015c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4b0170.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b0176.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b0188.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind object;
  #L4b018c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b0192.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4b0196.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b019c.  v1:= temp @kind object;
  #L4b019e.  if v1 == v0 then goto L4b01ac;
  #L4b01a2.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b01a6.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b01ac.  return @kind void;
}
