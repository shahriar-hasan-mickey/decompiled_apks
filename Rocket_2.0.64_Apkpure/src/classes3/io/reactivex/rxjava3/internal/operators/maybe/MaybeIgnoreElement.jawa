record `io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElement` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.maybe.a` @kind class {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElement` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElement;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ada3c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/a;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4ada42.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElement` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElement;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4ada54.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.a.source` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4ada58.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElement$a`;
  #L4ada5c.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElement$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4ada62.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4ada68.  return @kind void;
}
