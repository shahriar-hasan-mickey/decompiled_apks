record `io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `java.util.concurrent.Future` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture` v0 @kind this, `java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bf8ec.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4bf8f2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.a` @type ^`java.util.concurrent.Future` := v1 @kind object;
  #L4bf8f6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.b` @type ^`long` := v2 @kind wide;
  #L4bf8fa.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4bf8fe.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture` v5 @kind this, `io.reactivex.rxjava3.core.Observer` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromFuture;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4bf910.  v0:= new `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable`;
  #L4bf914.  call `<init>`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4bf91a.  call `onSubscribe`(v6, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4bf920.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4bf926.  v1:= temp;
  #L4bf928.  if v1 != 0 then goto L4bf980;
  #L4bf92c.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4bf930.  if v1 == 0 then goto L4bf946;
  #L4bf934.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.a` @type ^`java.util.concurrent.Future` @kind object;
  #L4bf938.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.b` @type ^`long` @kind wide;
  #L4bf93c.  call temp:= `get`(v2, v3, v1) @signature `Ljava/util/concurrent/Future;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @kind interface;
  #L4bf942.  v1:= temp @kind object;
  #L4bf944.  goto L4bf952;
  #L4bf946.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture.a` @type ^`java.util.concurrent.Future` @kind object;
  #L4bf94a.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/Future;.get:()Ljava/lang/Object;` @kind interface;
  #L4bf950.  v1:= temp @kind object;
  #L4bf952.  v2:= "Future returned a null value." @kind object;
  #L4bf956.  call temp:= `nullCheck`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bf95c.  v6:= temp @kind object;
  #L4bf95e.  call `complete`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4bf964.  goto L4bf980;
  #L4bf966.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bf968.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf96e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4bf974.  v0:= temp;
  #L4bf976.  if v0 != 0 then goto L4bf980;
  #L4bf97a.  call `onError`(v6, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4bf980.  return @kind void;
  catch `java.lang.Throwable` @[L4bf92c..L4bf95e] goto L4bf966;
}
