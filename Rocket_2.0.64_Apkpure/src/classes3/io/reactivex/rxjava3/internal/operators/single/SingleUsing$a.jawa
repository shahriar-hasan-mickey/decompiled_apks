record `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `java.lang.Object` v2 @kind object, `boolean` v3 , `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/lang/Object;ZLio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d8458.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4d845e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d8462.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` := v3 @kind boolean;
  #L4d8466.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v4 @kind object;
  #L4d846a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4d84c8.  call temp:= `getAndSet`(v2, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4d84ce.  v0:= temp @kind object;
  #L4d84d0.  if v0 == v2 then goto L4d84ee;
  #L4d84d4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4d84d8.  call `accept`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4d84de.  goto L4d84ee;
  #L4d84e0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d84e2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d84e8.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4d84ee.  return @kind void;
  catch `java.lang.Throwable` @[L4d84d4..L4d84de] goto L4d84e0;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d847c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L4d8480.  if v0 == 0 then goto L4d849e;
  #L4d8484.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @kind virtual;
  #L4d848a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d848e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d8494.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d8498.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4d849c.  goto L4d84b6;
  #L4d849e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d84a2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4d84a8.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d84ac.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4d84b0.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @kind virtual;
  #L4d84b6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d8438.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d843c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4d8442.  v0:= temp;
  #L4d8444.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d850c.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d8510.  v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4d8514.  v0:= v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L4d8518.  if v0 == 0 then goto L4d855e;
  #L4d851c.  call temp:= `getAndSet`(v4, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4d8522.  v0:= temp @kind object;
  #L4d8524.  if v0 == v4 then goto L4d855c;
  #L4d8528.  v1:= v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4d852c.  call `accept`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4d8532.  goto L4d855e;
  #L4d8534.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d8536.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d853c.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4d8540.  v2:= 2I;
  #L4d8542.  v2:= new `java.lang.Throwable`[v2];
  #L4d8546.  v3:= 0I;
  #L4d8548.  v2[v3]:= v5 @kind object;
  #L4d854c.  v5:= 1I;
  #L4d854e.  v2[v5]:= v0 @kind object;
  #L4d8552.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4d8558.  v5:= v1 @kind object;
  #L4d855a.  goto L4d855e;
  #L4d855c.  return @kind void;
  #L4d855e.  v0:= v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d8562.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d8568.  v5:= v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L4d856c.  if v5 != 0 then goto L4d8576;
  #L4d8570.  call `a`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @kind virtual;
  #L4d8576.  return @kind void;
  catch `java.lang.Throwable` @[L4d8528..L4d8532] goto L4d8534;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d8594.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4d8598.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d859e.  v0:= temp;
  #L4d85a0.  if v0 == 0 then goto L4d85b2;
  #L4d85a4.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4d85a8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d85ac.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d85b2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d85c4.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4d85c8.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4d85cc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L4d85d0.  if v0 == 0 then goto L4d8600;
  #L4d85d4.  call temp:= `getAndSet`(v2, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4d85da.  v0:= temp @kind object;
  #L4d85dc.  if v0 == v2 then goto L4d85fe;
  #L4d85e0.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4d85e4.  call `accept`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4d85ea.  goto L4d8600;
  #L4d85ec.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d85ee.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d85f4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d85f8.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d85fe.  return @kind void;
  #L4d8600.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d8604.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d860a.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L4d860e.  if v3 != 0 then goto L4d8618;
  #L4d8612.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @kind virtual;
  #L4d8618.  return @kind void;
  catch `java.lang.Throwable` @[L4d85e0..L4d85ea] goto L4d85ec;
}
