record `io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `java.lang.Runnable` `io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L484438.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L48443e.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L484442.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromRunnable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L484454.  call temp:= `b`() @signature `Ls0/d;.b:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L48445a.  v0:= temp @kind object;
  #L48445c.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L484462.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L484468.  v1:= temp;
  #L48446a.  if v1 != 0 then goto L4844ae;
  #L48446e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable.a` @type ^`java.lang.Runnable` @kind object;
  #L484472.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L484478.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L48447e.  v0:= temp;
  #L484480.  if v0 != 0 then goto L4844ae;
  #L484484.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L48448a.  goto L4844ae;
  #L48448c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48448e.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L484494.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L48449a.  v0:= temp;
  #L48449c.  if v0 != 0 then goto L4844a8;
  #L4844a0.  call `onError`(v3, v1) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4844a6.  goto L4844ae;
  #L4844a8.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4844ae.  return @kind void;
  catch `java.lang.Throwable` @[L48446e..L484478] goto L48448c;
}
