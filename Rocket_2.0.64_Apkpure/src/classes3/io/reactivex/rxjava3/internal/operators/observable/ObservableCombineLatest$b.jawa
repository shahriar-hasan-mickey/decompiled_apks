record `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[] `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.c` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @AccessFlag ;
  `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.f` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @AccessFlag VOLATILE;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.j` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;IIZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4b8e54.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4b8e5a.  v0:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4b8e5e.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4b8e64.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v0 @kind object;
  #L4b8e68.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.core.Observer` := v2 @kind object;
  #L4b8e6c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.b` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4b8e70.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.f` @type ^`boolean` := v6 @kind boolean;
  #L4b8e74.  v2:= new `java.lang.Object`[v4];
  #L4b8e78.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] := v2 @kind object;
  #L4b8e7c.  v2:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[v4];
  #L4b8e80.  v3:= 0I;
  #L4b8e82.  if v3 >= v4 then goto L4b8e9a;
  #L4b8e86.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`;
  #L4b8e8a.  call `<init>`(v6, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;I)V` @kind direct;
  #L4b8e90.  v2[v3]:= v6 @kind object;
  #L4b8e94.  v3:= v3 + 1;
  #L4b8e98.  goto L4b8e82;
  #L4b8e9a.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[] := v2 @kind object;
  #L4b8e9e.  v2:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4b8ea2.  call `<init>`(v2, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4b8ea8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` := v2 @kind object;
  #L4b8eac.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b8ec0.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[] @kind object;
  #L4b8ec4.  v1:= length @variable v0;
  #L4b8ec6.  v2:= 0I;
  #L4b8ec8.  if v2 >= v1 then goto L4b8edc;
  #L4b8ecc.  v3:= v0[v2] @kind object;
  #L4b8ed0.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$a;.a:()V` @kind virtual;
  #L4b8ed6.  v2:= v2 + 1;
  #L4b8eda.  goto L4b8ec8;
  #L4b8edc.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v1 @kind this, `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @AccessFlag  {
    temp;
    v0;

  #L4b8ef0.  @monitorenter v1
  #L4b8ef2.  v0:= 0I;
  #L4b8ef4.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4b8ef8.  @monitorexit v1
  #L4b8efa.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4b8f00.  return @kind void;
  #L4b8f02.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b8f04.  @monitorexit v1
  #L4b8f06.  throw v2;
  catch `java.lang.Throwable` @[L4b8ef4..L4b8efa] goto L4b8f02;
  catch `java.lang.Throwable` @[L4b8f04..L4b8f06] goto L4b8f02;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v8 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4b8f58.  call temp:= `getAndIncrement`(v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b8f5e.  v0:= temp;
  #L4b8f60.  if v0 == 0 then goto L4b8f66;
  #L4b8f64.  return @kind void;
  #L4b8f66.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4b8f6a.  v1:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b8f6e.  v2:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.f` @type ^`boolean` @kind boolean;
  #L4b8f72.  v3:= 1I;
  #L4b8f74.  v4:= 1I;
  #L4b8f76.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` @kind boolean;
  #L4b8f7a.  if v5 == 0 then goto L4b8f90;
  #L4b8f7e.  call `b`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @kind virtual;
  #L4b8f84.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b8f88.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L4b8f8e.  return @kind void;
  #L4b8f90.  if v2 != 0 then goto L4b8fbc;
  #L4b8f94.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b8f98.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b8f9e.  v5:= temp @kind object;
  #L4b8fa0.  if v5 == 0 then goto L4b8fbc;
  #L4b8fa4.  call `a`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4b8faa.  call `b`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @kind virtual;
  #L4b8fb0.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b8fb4.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4b8fba.  return @kind void;
  #L4b8fbc.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @type ^`boolean` @kind boolean;
  #L4b8fc0.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4b8fc6.  v6:= temp @kind object;
  #L4b8fc8.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L4b8fcc.  if v6 != 0 then goto L4b8fd4;
  #L4b8fd0.  v7:= 1I;
  #L4b8fd2.  goto L4b8fd6;
  #L4b8fd4.  v7:= 0I;
  #L4b8fd6.  if v5 == 0 then goto L4b8ff0;
  #L4b8fda.  if v7 == 0 then goto L4b8ff0;
  #L4b8fde.  call `b`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @kind virtual;
  #L4b8fe4.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b8fe8.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4b8fee.  return @kind void;
  #L4b8ff0.  if v7 == 0 then goto L4b9004;
  #L4b8ff4.  v4:= -v4 @kind int;
  #L4b8ff6.  call temp:= `addAndGet`(v8, v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4b8ffc.  v4:= temp;
  #L4b8ffe.  if v4 != 0 then goto L4b8f76;
  #L4b9002.  return @kind void;
  #L4b9004.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b9008.  call temp:= `apply`(v5, v6) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4b900e.  v5:= temp @kind object;
  #L4b9010.  v6:= "The combiner returned a null value" @kind object;
  #L4b9014.  call temp:= `requireNonNull`(v5, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b901a.  call `onNext`(v1, v5) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4b9020.  goto L4b8f76;
  #L4b9022.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b9024.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b902a.  v3:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b902e.  call temp:= `tryAddThrowableOrReport`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b9034.  call `a`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4b903a.  call `b`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @kind virtual;
  #L4b9040.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b9044.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4b904a.  return @kind void;
  catch `java.lang.Throwable` @[L4b9004..L4b901a] goto L4b9022;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.d:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4b9068.  @monitorenter v3
  #L4b906a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] @kind object;
  #L4b906e.  if v0 != 0 then goto L4b9076;
  #L4b9072.  @monitorexit v3
  #L4b9074.  return @kind void;
  #L4b9076.  v4:= v0[v4] @kind object;
  #L4b907a.  v1:= 1I;
  #L4b907c.  if v4 != 0 then goto L4b9084;
  #L4b9080.  v4:= 1I;
  #L4b9082.  goto L4b9086;
  #L4b9084.  v4:= 0I;
  #L4b9086.  if v4 != 0 then goto L4b909a;
  #L4b908a.  v2:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @type ^`int`;
  #L4b908e.  v2:= v2 + v1 @kind int;
  #L4b9090.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @type ^`int` := v2;
  #L4b9094.  v0:= length @variable v0;
  #L4b9096.  if v2 != v0 then goto L4b909e;
  #L4b909a.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @type ^`boolean` := v1 @kind boolean;
  #L4b909e.  @monitorexit v3
  #L4b90a0.  if v4 == 0 then goto L4b90aa;
  #L4b90a4.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4b90aa.  call `c`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @kind virtual;
  #L4b90b0.  return @kind void;
  #L4b90b2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b90b4.  @monitorexit v3
  #L4b90b6.  throw v4;
  catch `java.lang.Throwable` @[L4b906a..L4b90a0] goto L4b90b2;
  catch `java.lang.Throwable` @[L4b90b4..L4b90b6] goto L4b90b2;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b8f2c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` @kind boolean;
  #L4b8f30.  if v0 != 0 then goto L4b8f46;
  #L4b8f34.  v0:= 1I;
  #L4b8f36.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` := v0 @kind boolean;
  #L4b8f3a.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4b8f40.  call `c`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @kind virtual;
  #L4b8f46.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v2 @kind this, `int` v3 , `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.e:(ILjava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4b90dc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b90e0.  call temp:= `tryAddThrowableOrReport`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b90e6.  v4:= temp;
  #L4b90e8.  if v4 == 0 then goto L4b9146;
  #L4b90ec.  v4:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.f` @type ^`boolean` @kind boolean;
  #L4b90f0.  v0:= 1I;
  #L4b90f2.  if v4 == 0 then goto L4b9136;
  #L4b90f6.  @monitorenter v2
  #L4b90f8.  v4:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] @kind object;
  #L4b90fc.  if v4 != 0 then goto L4b9104;
  #L4b9100.  @monitorexit v2
  #L4b9102.  return @kind void;
  #L4b9104.  v3:= v4[v3] @kind object;
  #L4b9108.  if v3 != 0 then goto L4b9110;
  #L4b910c.  v3:= 1I;
  #L4b910e.  goto L4b9112;
  #L4b9110.  v3:= 0I;
  #L4b9112.  if v3 != 0 then goto L4b9126;
  #L4b9116.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @type ^`int`;
  #L4b911a.  v1:= v1 + v0 @kind int;
  #L4b911c.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @type ^`int` := v1;
  #L4b9120.  v4:= length @variable v4;
  #L4b9122.  if v1 != v4 then goto L4b912a;
  #L4b9126.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @type ^`boolean` := v0 @kind boolean;
  #L4b912a.  @monitorexit v2
  #L4b912c.  v0:= v3;
  #L4b912e.  goto L4b9136;
  #L4b9130.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b9132.  @monitorexit v2
  #L4b9134.  throw v3;
  #L4b9136.  if v0 == 0 then goto L4b9140;
  #L4b913a.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4b9140.  call `c`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @kind virtual;
  #L4b9146.  return @kind void;
  catch `java.lang.Throwable` @[L4b90f8..L4b9134] goto L4b9130;
}
procedure `void` `f`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.f:(ILjava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4b9164.  @monitorenter v3
  #L4b9166.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] @kind object;
  #L4b916a.  if v0 != 0 then goto L4b9172;
  #L4b916e.  @monitorexit v3
  #L4b9170.  return @kind void;
  #L4b9172.  v1:= v0[v4] @kind object;
  #L4b9176.  v2:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.j` @type ^`int`;
  #L4b917a.  if v1 != 0 then goto L4b9186;
  #L4b917e.  v2:= v2 + 1;
  #L4b9182.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.j` @type ^`int` := v2;
  #L4b9186.  v0[v4]:= v5 @kind object;
  #L4b918a.  v4:= length @variable v0;
  #L4b918c.  if v2 != v4 then goto L4b91a6;
  #L4b9190.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4b9194.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4b919a.  v5:= temp @kind object;
  #L4b919c.  call temp:= `offer`(v4, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b91a2.  v4:= 1I;
  #L4b91a4.  goto L4b91a8;
  #L4b91a6.  v4:= 0I;
  #L4b91a8.  @monitorexit v3
  #L4b91aa.  if v4 == 0 then goto L4b91b4;
  #L4b91ae.  call `c`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @kind virtual;
  #L4b91b4.  return @kind void;
  #L4b91b6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b91b8.  @monitorexit v3
  #L4b91ba.  throw v4;
  catch `java.lang.Throwable` @[L4b9166..L4b91aa] goto L4b91b6;
  catch `java.lang.Throwable` @[L4b91b8..L4b91ba] goto L4b91b6;
}
procedure `void` `g`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v5 @kind this, `io.reactivex.rxjava3.core.ObservableSource`[] v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.g:([Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b91e0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[] @kind object;
  #L4b91e4.  v1:= length @variable v0;
  #L4b91e6.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4b91ea.  call `onSubscribe`(v2, v5) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b91f0.  v2:= 0I;
  #L4b91f2.  if v2 >= v1 then goto L4b921c;
  #L4b91f6.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @type ^`boolean` @kind boolean;
  #L4b91fa.  if v3 != 0 then goto L4b921c;
  #L4b91fe.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` @kind boolean;
  #L4b9202.  if v3 == 0 then goto L4b9208;
  #L4b9206.  goto L4b921c;
  #L4b9208.  v3:= v6[v2] @kind object;
  #L4b920c.  v4:= v0[v2] @kind object;
  #L4b9210.  call `subscribe`(v3, v4) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4b9216.  v2:= v2 + 1;
  #L4b921a.  goto L4b91f2;
  #L4b921c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b8e3c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` @kind boolean;
  #L4b8e40.  return v0;
}
