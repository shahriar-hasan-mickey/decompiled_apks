record `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/core/SingleSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d4610.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d4616.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d461a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.b` @type ^`io.reactivex.rxjava3.core.SingleSource` := v2 @kind object;
  #L4d461e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4d4630.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d4636.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d45e8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d45ee.  v0:= temp @kind object;
  #L4d45f0.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4d45f4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d45fa.  v0:= temp;
  #L4d45fc.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d4648.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d464c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d4652.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4d4664.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4d466a.  v1:= temp;
  #L4d466c.  if v1 == 0 then goto L4d467a;
  #L4d4670.  v1:= v0.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d4674.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d467a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithSingle$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d468c.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.b` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L4d4690.  v0:= new `io.reactivex.rxjava3.internal.observers.ResumeSingleObserver`;
  #L4d4694.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d4698.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/observers/ResumeSingleObserver;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4d469e.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4d46a4.  return @kind void;
}
