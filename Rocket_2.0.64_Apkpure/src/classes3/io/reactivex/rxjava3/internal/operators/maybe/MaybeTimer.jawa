record `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b03dc.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4b03e2.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.a` @type ^`long` := v1 @kind wide;
  #L4b03e6.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.b` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L4b03ea.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v4 @kind object;
  #L4b03ee.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer` v4 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimer;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b0400.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer$a`;
  #L4b0404.  call `<init>`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimer$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4b040a.  call `onSubscribe`(v5, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b0410.  v5:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4b0414.  v1:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.a` @type ^`long` @kind wide;
  #L4b0418.  v3:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4b041c.  call temp:= `scheduleDirect`(v5, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4b0422.  v5:= temp @kind object;
  #L4b0424.  call `a`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimer$a;.a:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4b042a.  return @kind void;
}
