record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aca54.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4aca5a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4aca5e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4aca62.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.c` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4aca66.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.d` @type ^`io.reactivex.rxjava3.functions.Supplier` := v4 @kind object;
  #L4aca6a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aca7c.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4aca82.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4aca86.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4aca8c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aca2c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4aca32.  v0:= temp @kind object;
  #L4aca34.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4aca38.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aca3e.  v0:= temp;
  #L4aca40.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4acaa0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.d` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4acaa4.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4acaaa.  v0:= temp @kind object;
  #L4acaac.  v1:= "The onCompleteSupplier returned a null MaybeSource" @kind object;
  #L4acab0.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4acab6.  v0:= (`io.reactivex.rxjava3.core.MaybeSource`) v0 @kind object;
  #L4acaba.  call temp:= `isDisposed`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.isDisposed:()Z` @kind virtual;
  #L4acac0.  v1:= temp;
  #L4acac2.  if v1 != 0 then goto L4acad6;
  #L4acac6.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a$a`;
  #L4acaca.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;)V` @kind direct;
  #L4acad0.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4acad6.  return @kind void;
  #L4acad8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4acada.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4acae0.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4acae4.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4acaea.  return @kind void;
  catch `java.lang.Throwable` @[L4acaa0..L4acaba] goto L4acad8;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4acb08.  v0:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4acb0c.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4acb12.  v0:= temp @kind object;
  #L4acb14.  v1:= "The onErrorMapper returned a null MaybeSource" @kind object;
  #L4acb18.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4acb1e.  v0:= (`io.reactivex.rxjava3.core.MaybeSource`) v0 @kind object;
  #L4acb22.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.isDisposed:()Z` @kind virtual;
  #L4acb28.  v6:= temp;
  #L4acb2a.  if v6 != 0 then goto L4acb3e;
  #L4acb2e.  v6:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a$a`;
  #L4acb32.  call `<init>`(v6, v5) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;)V` @kind direct;
  #L4acb38.  call `subscribe`(v0, v6) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4acb3e.  return @kind void;
  #L4acb40.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4acb42.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4acb48.  v1:= v5.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4acb4c.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4acb50.  v3:= 2I;
  #L4acb52.  v3:= new `java.lang.Throwable`[v3];
  #L4acb56.  v4:= 0I;
  #L4acb58.  v3[v4]:= v6 @kind object;
  #L4acb5c.  v6:= 1I;
  #L4acb5e.  v3[v6]:= v0 @kind object;
  #L4acb62.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4acb68.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4acb6e.  return @kind void;
  catch `java.lang.Throwable` @[L4acb08..L4acb22] goto L4acb40;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4acb8c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4acb90.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4acb96.  v0:= temp;
  #L4acb98.  if v0 == 0 then goto L4acbaa;
  #L4acb9c.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4acba0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4acba4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4acbaa.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4acbbc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4acbc0.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4acbc6.  v2:= temp @kind object;
  #L4acbc8.  v0:= "The onSuccessMapper returned a null MaybeSource" @kind object;
  #L4acbcc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4acbd2.  v2:= (`io.reactivex.rxjava3.core.MaybeSource`) v2 @kind object;
  #L4acbd6.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;.isDisposed:()Z` @kind virtual;
  #L4acbdc.  v0:= temp;
  #L4acbde.  if v0 != 0 then goto L4acbf2;
  #L4acbe2.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a$a`;
  #L4acbe6.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$a;)V` @kind direct;
  #L4acbec.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4acbf2.  return @kind void;
  #L4acbf4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4acbf6.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4acbfc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4acc00.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4acc06.  return @kind void;
  catch `java.lang.Throwable` @[L4acbbc..L4acbd6] goto L4acbf4;
}
