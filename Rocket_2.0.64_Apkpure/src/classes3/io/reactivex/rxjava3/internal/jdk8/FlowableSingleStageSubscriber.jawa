record `io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.jdk8.a` @kind class {
  `boolean` `io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber` v0 @kind this, `boolean` v1 , `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableSingleStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47d6e0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/a;.<init>:()V` @kind direct;
  #L47d6e6.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber.c` @type ^`boolean` := v1 @kind boolean;
  #L47d6ea.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber.d` @type ^`java.lang.Object` := v2 @kind object;
  #L47d6ee.  return @kind void;
}
procedure `void` `afterSubscribe`(`io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableSingleStageSubscriber;.afterSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L47d700.  v0:= 2L;
  #L47d704.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L47d70a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableSingleStageSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d71c.  call temp:= `isDone`(v1) @signature `Ljava/util/concurrent/CompletableFuture;.isDone:()Z` @kind virtual;
  #L47d722.  v0:= temp;
  #L47d724.  if v0 != 0 then goto L47d762;
  #L47d728.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.a.b` @type ^`java.lang.Object` @kind object;
  #L47d72c.  call `clear`(v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/a;.clear:()V` @kind virtual;
  #L47d732.  if v0 == 0 then goto L47d73e;
  #L47d736.  call temp:= `complete`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/a;.complete:(Ljava/lang/Object;)Z` @kind virtual;
  #L47d73c.  goto L47d762;
  #L47d73e.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber.c` @type ^`boolean` @kind boolean;
  #L47d742.  if v0 == 0 then goto L47d752;
  #L47d746.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber.d` @type ^`java.lang.Object` @kind object;
  #L47d74a.  call temp:= `complete`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/a;.complete:(Ljava/lang/Object;)Z` @kind virtual;
  #L47d750.  goto L47d762;
  #L47d752.  v0:= new `java.util.NoSuchElementException`;
  #L47d756.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L47d75c.  call temp:= `completeExceptionally`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/a;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L47d762.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableSingleStageSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d774.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.a.b` @type ^`java.lang.Object` @kind object;
  #L47d778.  if v0 == 0 then goto L47d798;
  #L47d77c.  v2:= 0I;
  #L47d77e.  v1.`io.reactivex.rxjava3.internal.jdk8.a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L47d782.  v2:= new `java.lang.IllegalArgumentException`;
  #L47d786.  v0:= "Sequence contains more than one element!" @kind object;
  #L47d78a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47d790.  call temp:= `completeExceptionally`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/a;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L47d796.  goto L47d79c;
  #L47d798.  v1.`io.reactivex.rxjava3.internal.jdk8.a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L47d79c.  return @kind void;
}
