record `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind interface {
  `java.util.Iterator` `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.a` @AccessFlag ;
  `java.lang.AutoCloseable` `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.b` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v0 @kind this, `java.util.Iterator` v1 @kind object, `java.lang.AutoCloseable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.<init>:(Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47cf64.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L47cf6a.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.a` @type ^`java.util.Iterator` := v1 @kind object;
  #L47cf6e.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.b` @type ^`java.lang.AutoCloseable` := v2 @kind object;
  #L47cf72.  return @kind void;
}
procedure `void` `a`(`long` v0 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.a:(J)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47cf84.  v0:= 1I;
  #L47cf86.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` := v0 @kind boolean;
  #L47cf8a.  v0:= 1L;
  #L47cf8e.  call `request`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.request:(J)V` @kind virtual;
  #L47cf94.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47cfa8.  v0:= 0I;
  #L47cfaa.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.a` @type ^`java.util.Iterator` := v0 @kind object;
  #L47cfae.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.b` @type ^`java.lang.AutoCloseable` @kind object;
  #L47cfb2.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.b` @type ^`java.lang.AutoCloseable` := v0 @kind object;
  #L47cfb6.  if v1 == 0 then goto L47cfc0;
  #L47cfba.  call `e`(v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.e:(Ljava/lang/AutoCloseable;)V` @kind static;
  #L47cfc0.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47ce64.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.a` @type ^`java.util.Iterator` @kind object;
  #L47ce68.  if v0 == 0 then goto L47ce8e;
  #L47ce6c.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.d` @type ^`boolean` @kind boolean;
  #L47ce70.  if v1 == 0 then goto L47ce8a;
  #L47ce74.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L47ce7a.  v0:= temp;
  #L47ce7c.  if v0 == 0 then goto L47ce82;
  #L47ce80.  goto L47ce8a;
  #L47ce82.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.clear:()V` @kind virtual;
  #L47ce88.  goto L47ce8e;
  #L47ce8a.  v0:= 0I;
  #L47ce8c.  return v0;
  #L47ce8e.  v0:= 1I;
  #L47ce90.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L47cea4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L47cea8.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L47ceae.  throw v1;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L47cec0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L47cec4.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L47ceca.  throw v1;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47cf0c.  v0:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.a` @type ^`java.util.Iterator` @kind object;
  #L47cf10.  v1:= 0I;
  #L47cf12.  if v0 != 0 then goto L47cf18;
  #L47cf16.  return v1 @kind object;
  #L47cf18.  v2:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.d` @type ^`boolean` @kind boolean;
  #L47cf1c.  if v2 != 0 then goto L47cf28;
  #L47cf20.  v0:= 1I;
  #L47cf22.  v3.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.d` @type ^`boolean` := v0 @kind boolean;
  #L47cf26.  goto L47cf3c;
  #L47cf28.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L47cf2e.  v0:= temp;
  #L47cf30.  if v0 != 0 then goto L47cf3c;
  #L47cf34.  call `clear`(v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.clear:()V` @kind virtual;
  #L47cf3a.  return v1 @kind object;
  #L47cf3c.  v0:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.a` @type ^`java.util.Iterator` @kind object;
  #L47cf40.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L47cf46.  v0:= temp @kind object;
  #L47cf48.  v1:= "The Stream's Iterator.next() returned a null value" @kind object;
  #L47cf4c.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cf52.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v5 @kind this, `long` v6 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47cfd4.  call temp:= `validate`(v6) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L47cfda.  v0:= temp;
  #L47cfdc.  if v0 == 0 then goto L47cffa;
  #L47cfe0.  call temp:= `add`(v5, v6) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L47cfe6.  v0:= temp @kind wide;
  #L47cfe8.  v2:= 0L;
  #L47cfec.  v4:= lcmp(v0, v2);
  #L47cff0.  if v4 != 0 then goto L47cffa;
  #L47cff4.  call `a`(v5, v6) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.a:(J)V` @kind virtual;
  #L47cffa.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47cedc.  v0:= 1I;
  #L47cede.  v4:= v4 ^& v0 @kind int;
  #L47cee0.  if v4 == 0 then goto L47cef6;
  #L47cee4.  v1:= 9223372036854775807L;
  #L47ceee.  call `lazySet`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L47cef4.  return v0;
  #L47cef6.  v4:= 0I;
  #L47cef8.  return v4;
}
