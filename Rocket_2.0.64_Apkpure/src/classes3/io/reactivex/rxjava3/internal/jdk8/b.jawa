record `io.reactivex.rxjava3.internal.jdk8.b` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.CompletableFuture` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.jdk8.b.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.jdk8.b.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L47f1d8.  call `<init>`(v1) @signature `Ljava/util/concurrent/CompletableFuture;.<init>:()V` @kind direct;
  #L47f1de.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L47f1e2.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L47f1e8.  v1.`io.reactivex.rxjava3.internal.jdk8.b.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L47f1ec.  return @kind void;
}
procedure `boolean` `cancel`(`io.reactivex.rxjava3.internal.jdk8.b` v0 @kind this, `boolean` v1 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.cancel:(Z)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L47f178.  call `disposeUpstream`(v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.disposeUpstream:()V` @kind virtual;
  #L47f17e.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/CompletableFuture;.cancel:(Z)Z` @kind super;
  #L47f184.  v1:= temp;
  #L47f186.  return v1;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.jdk8.b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.clear:()V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L47f200.  v0:= 0I;
  #L47f202.  v2.`io.reactivex.rxjava3.internal.jdk8.b.b` @type ^`java.lang.Object` := v0 @kind object;
  #L47f206.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.b.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L47f20a.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L47f20e.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L47f214.  return @kind void;
}
procedure `boolean` `complete`(`io.reactivex.rxjava3.internal.jdk8.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.complete:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L47f198.  call `disposeUpstream`(v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.disposeUpstream:()V` @kind virtual;
  #L47f19e.  call temp:= `complete`(v0, v1) @signature `Ljava/util/concurrent/CompletableFuture;.complete:(Ljava/lang/Object;)Z` @kind super;
  #L47f1a4.  v1:= temp;
  #L47f1a6.  return v1;
}
procedure `boolean` `completeExceptionally`(`io.reactivex.rxjava3.internal.jdk8.b` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.completeExceptionally:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L47f1b8.  call `disposeUpstream`(v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.disposeUpstream:()V` @kind virtual;
  #L47f1be.  call temp:= `completeExceptionally`(v0, v1) @signature `Ljava/util/concurrent/CompletableFuture;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind super;
  #L47f1c4.  v1:= temp;
  #L47f1c6.  return v1;
}
procedure `void` `disposeUpstream`(`io.reactivex.rxjava3.internal.jdk8.b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.disposeUpstream:()V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L47f228.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.b.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L47f22c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L47f232.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47f244.  call `clear`(v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.clear:()V` @kind virtual;
  #L47f24a.  call temp:= `completeExceptionally`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L47f250.  v0:= temp;
  #L47f252.  if v0 != 0 then goto L47f25c;
  #L47f256.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47f25c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47f270.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.b.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L47f274.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L47f27a.  return @kind void;
}
