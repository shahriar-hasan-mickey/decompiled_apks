record `io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.parallel.ParallelFlowable` @kind class {
  `io.reactivex.rxjava3.parallel.ParallelFlowable` `io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream` v0 @kind this, `io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelFlatMapStream;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47f72c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L47f732.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` := v1 @kind object;
  #L47f736.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L47f73a.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.c` @type ^`int` := v3;
  #L47f73e.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelFlatMapStream;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f70c.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L47f710.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L47f716.  v0:= temp;
  #L47f718.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream` v6 @kind this, `org.reactivestreams.Subscriber`[] v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelFlatMapStream;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47f750.  call temp:= `validate`(v6, v7) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L47f756.  v0:= temp;
  #L47f758.  if v0 != 0 then goto L47f75e;
  #L47f75c.  return @kind void;
  #L47f75e.  v0:= length @variable v7;
  #L47f760.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L47f764.  v2:= 0I;
  #L47f766.  if v2 >= v0 then goto L47f788;
  #L47f76a.  v3:= v7[v2] @kind object;
  #L47f76e.  v4:= v6.`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L47f772.  v5:= v6.`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.c` @type ^`int`;
  #L47f776.  call temp:= `subscribe`(v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)Lorg/reactivestreams/Subscriber;` @kind static;
  #L47f77c.  v3:= temp @kind object;
  #L47f77e.  v1[v2]:= v3 @kind object;
  #L47f782.  v2:= v2 + 1;
  #L47f786.  goto L47f766;
  #L47f788.  v7:= v6.`io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L47f78c.  call `subscribe`(v7, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L47f792.  return @kind void;
}
