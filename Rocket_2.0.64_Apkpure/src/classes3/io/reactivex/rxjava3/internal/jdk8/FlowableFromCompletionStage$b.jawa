record `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription` @kind class, `java.util.function.BiConsumer` @kind interface {
  `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$a` `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47cd68.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L47cd6e.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b.a` @type ^`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$a` := v2 @kind object;
  #L47cd72.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$b;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47cd84.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L47cd88.  call `e`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$b;.e:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L47cd8e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47cde8.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L47cdee.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b.a` @type ^`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$a` @kind object;
  #L47cdf2.  v1:= 0I;
  #L47cdf4.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L47cdfa.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$b;.e:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47cda0.  if v3 == 0 then goto L47cdb0;
  #L47cda4.  v2:= v1.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47cda8.  call `onError`(v2, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47cdae.  goto L47cdd4;
  #L47cdb0.  if v2 == 0 then goto L47cdbc;
  #L47cdb4.  call `complete`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L47cdba.  goto L47cdd4;
  #L47cdbc.  v2:= v1.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47cdc0.  v3:= new `java.lang.NullPointerException`;
  #L47cdc4.  v0:= "The CompletionStage terminated with null." @kind object;
  #L47cdc8.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47cdce.  call `onError`(v2, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47cdd4.  return @kind void;
}
