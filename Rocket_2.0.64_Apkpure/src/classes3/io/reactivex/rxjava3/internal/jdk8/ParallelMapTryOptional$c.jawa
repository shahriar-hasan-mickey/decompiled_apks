record `io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.c` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47ff4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47ff52.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L47ff56.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L47ff5a.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v3 @kind object;
  #L47ff5e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ff70.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L47ff74.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L47ff7a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ff8c.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.e` @type ^`boolean` @kind boolean;
  #L47ff90.  if v0 == 0 then goto L47ff96;
  #L47ff94.  return @kind void;
  #L47ff96.  v0:= 1I;
  #L47ff98.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.e` @type ^`boolean` := v0 @kind boolean;
  #L47ff9c.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47ffa0.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L47ffa6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ffb8.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.e` @type ^`boolean` @kind boolean;
  #L47ffbc.  if v0 == 0 then goto L47ffc8;
  #L47ffc0.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47ffc6.  return @kind void;
  #L47ffc8.  v0:= 1I;
  #L47ffca.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.e` @type ^`boolean` := v0 @kind boolean;
  #L47ffce.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47ffd2.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47ffd8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47ffec.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L47fff2.  v3:= temp;
  #L47fff4.  if v3 != 0 then goto L48000e;
  #L47fff8.  v3:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.e` @type ^`boolean` @kind boolean;
  #L47fffc.  if v3 != 0 then goto L48000e;
  #L480000.  v3:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L480004.  v0:= 1L;
  #L480008.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48000e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480020.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L480024.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L48002a.  v0:= temp;
  #L48002c.  if v0 == 0 then goto L48003e;
  #L480030.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.d` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L480034.  v2:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L480038.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L48003e.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480050.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L480054.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48005a.  return @kind void;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47fe3c.  v0:= v9.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.e` @type ^`boolean` @kind boolean;
  #L47fe40.  v1:= 0I;
  #L47fe42.  if v0 == 0 then goto L47fe48;
  #L47fe46.  return v1;
  #L47fe48.  v2:= 0L;
  #L47fe4c.  v0:= 1I;
  #L47fe4e.  v4:= v9.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L47fe52.  call temp:= `apply`(v4, v10) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47fe58.  v4:= temp @kind object;
  #L47fe5a.  v5:= "The mapper returned a null Optional" @kind object;
  #L47fe5e.  call temp:= `requireNonNull`(v4, v5) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47fe64.  v4:= (`java.util.Optional`) v4 @kind object;
  #L47fe68.  call temp:= `isPresent`(v4) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L47fe6e.  v10:= temp;
  #L47fe70.  if v10 == 0 then goto L47fe88;
  #L47fe74.  v10:= v9.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47fe78.  call temp:= `get`(v4) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L47fe7e.  v1:= temp @kind object;
  #L47fe80.  call `onNext`(v10, v1) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47fe86.  return v0;
  #L47fe88.  return v1;
  #L47fe8a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47fe8c.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47fe92.  v5:= 2I;
  #L47fe94.  v6:= v9.`io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$c.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L47fe98.  v7:= 1L;
  #L47fe9c.  v2:= v2 + v7 @kind long;
  #L47fe9e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L47fea4.  v7:= temp @kind object;
  #L47fea6.  call temp:= `apply`(v6, v7, v4) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47feac.  v6:= temp @kind object;
  #L47feae.  v7:= "The errorHandler returned a null ParallelFailureHandling" @kind object;
  #L47feb2.  call temp:= `requireNonNull`(v6, v7) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47feb8.  v6:= (`io.reactivex.rxjava3.parallel.ParallelFailureHandling`) v6 @kind object;
  #L47febc.  v7:= `@@io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional$a.a` @type ^`int`[] @kind object;
  #L47fec0.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L47fec6.  v6:= temp;
  #L47fec8.  v6:= v7[v6];
  #L47fecc.  if v6 == v0 then goto L47fe4c;
  #L47fed0.  if v6 == v5 then goto L47fef4;
  #L47fed4.  v10:= 3I;
  #L47fed6.  if v6 == v10 then goto L47fee8;
  #L47feda.  call `cancel`(v9) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.cancel:()V` @kind virtual;
  #L47fee0.  call `onError`(v9, v4) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47fee6.  return v1;
  #L47fee8.  call `cancel`(v9) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.cancel:()V` @kind virtual;
  #L47feee.  call `onComplete`(v9) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.onComplete:()V` @kind virtual;
  #L47fef4.  return v1;
  #L47fef6.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47fef8.  call `throwIfFatal`(v10) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47fefe.  call `cancel`(v9) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.cancel:()V` @kind virtual;
  #L47ff04.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L47ff08.  v3:= new `java.lang.Throwable`[v5];
  #L47ff0c.  v3[v1]:= v4 @kind object;
  #L47ff10.  v3[v0]:= v10 @kind object;
  #L47ff14.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L47ff1a.  call `onError`(v9, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$c;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47ff20.  return v1;
  catch `java.lang.Throwable` @[L47fe4e..L47fe68] goto L47fe8a;
  catch `java.lang.Throwable` @[L47fe94..L47febc] goto L47fef6;
}
