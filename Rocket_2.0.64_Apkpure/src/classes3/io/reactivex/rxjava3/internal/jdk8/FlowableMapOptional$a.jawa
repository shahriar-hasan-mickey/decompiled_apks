record `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v0 @kind this, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47d4cc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableConditionalSubscriber;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;)V` @kind direct;
  #L47d4d2.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L47d4d6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47d4e8.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L47d4ee.  v3:= temp;
  #L47d4f0.  if v3 != 0 then goto L47d502;
  #L47d4f4.  v3:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L47d4f8.  v0:= 1L;
  #L47d4fc.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L47d502.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47d45c.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L47d460.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L47d466.  v0:= temp @kind object;
  #L47d468.  if v0 != 0 then goto L47d470;
  #L47d46c.  v0:= 0I;
  #L47d46e.  return v0 @kind object;
  #L47d470.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L47d474.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47d47a.  v0:= temp @kind object;
  #L47d47c.  v1:= "The mapper returned a null Optional" @kind object;
  #L47d480.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47d486.  v0:= (`java.util.Optional`) v0 @kind object;
  #L47d48a.  call temp:= `isPresent`(v0) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L47d490.  v1:= temp;
  #L47d492.  if v1 == 0 then goto L47d4a0;
  #L47d496.  call temp:= `get`(v0) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L47d49c.  v0:= temp @kind object;
  #L47d49e.  return v0 @kind object;
  #L47d4a0.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.sourceMode` @type ^`int`;
  #L47d4a4.  v1:= 2I;
  #L47d4a6.  if v0 != v1 then goto L47d45c;
  #L47d4aa.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L47d4ae.  v1:= 1L;
  #L47d4b2.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L47d4b8.  goto L47d45c;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L47d440.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableConditionalSubscriber;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L47d446.  v1:= temp;
  #L47d448.  return v1;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47d3b8.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.done` @type ^`boolean` @kind boolean;
  #L47d3bc.  v1:= 1I;
  #L47d3be.  if v0 == 0 then goto L47d3c4;
  #L47d3c2.  return v1;
  #L47d3c4.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.sourceMode` @type ^`int`;
  #L47d3c8.  if v0 == 0 then goto L47d3da;
  #L47d3cc.  v3:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.downstream` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L47d3d0.  v0:= 0I;
  #L47d3d2.  call `onNext`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47d3d8.  return v1;
  #L47d3da.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L47d3de.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47d3e4.  v3:= temp @kind object;
  #L47d3e6.  v0:= "The mapper returned a null Optional" @kind object;
  #L47d3ea.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47d3f0.  v3:= (`java.util.Optional`) v3 @kind object;
  #L47d3f4.  call temp:= `isPresent`(v3) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L47d3fa.  v0:= temp;
  #L47d3fc.  if v0 == 0 then goto L47d416;
  #L47d400.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.downstream` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L47d404.  call temp:= `get`(v3) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L47d40a.  v3:= temp @kind object;
  #L47d40c.  call temp:= `tryOnNext`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L47d412.  v3:= temp;
  #L47d414.  return v3;
  #L47d416.  v3:= 0I;
  #L47d418.  return v3;
  #L47d41a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47d41c.  call `fail`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableConditionalSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47d422.  return v1;
  catch `java.lang.Throwable` @[L47d3da..L47d3f4] goto L47d41a;
}
