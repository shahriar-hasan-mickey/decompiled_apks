record `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.a` @AccessFlag FINAL;
  `java.util.function.BiConsumer` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.b` @AccessFlag FINAL;
  `java.util.function.BinaryOperator` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v0 @kind this, `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.function.BiConsumer` v3 @kind object, `java.util.function.BinaryOperator` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.<init>:(Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$b;Ljava/lang/Object;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47f28c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L47f292.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.a` @type ^`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` := v1 @kind object;
  #L47f296.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.b` @type ^`java.util.function.BiConsumer` := v3 @kind object;
  #L47f29a.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.c` @type ^`java.util.function.BinaryOperator` := v4 @kind object;
  #L47f29e.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L47f2a2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.a:()V` @AccessFlag  {
    temp;

  #L47f2b4.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L47f2ba.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47f2cc.  v0:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` @kind boolean;
  #L47f2d0.  if v0 != 0 then goto L47f2f2;
  #L47f2d4.  v0:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` @kind object;
  #L47f2d8.  v1:= 0I;
  #L47f2da.  v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` := v1 @kind object;
  #L47f2de.  v1:= 1I;
  #L47f2e0.  v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` := v1 @kind boolean;
  #L47f2e4.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.a` @type ^`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` @kind object;
  #L47f2e8.  v2:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.c` @type ^`java.util.function.BinaryOperator` @kind object;
  #L47f2ec.  call `f`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$b;.f:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)V` @kind virtual;
  #L47f2f2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f304.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` @kind boolean;
  #L47f308.  if v0 == 0 then goto L47f314;
  #L47f30c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47f312.  return @kind void;
  #L47f314.  v0:= 0I;
  #L47f316.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` := v0 @kind object;
  #L47f31a.  v0:= 1I;
  #L47f31c.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` := v0 @kind boolean;
  #L47f320.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.a` @type ^`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` @kind object;
  #L47f324.  call `a`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$b;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47f32a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f33c.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` @kind boolean;
  #L47f340.  if v0 != 0 then goto L47f374;
  #L47f344.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.b` @type ^`java.util.function.BiConsumer` @kind object;
  #L47f348.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` @kind object;
  #L47f34c.  call `accept`(v0, v1, v3) @signature `Ljava/util/function/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L47f352.  goto L47f374;
  #L47f354.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47f356.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47f35c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L47f362.  v0:= temp @kind object;
  #L47f364.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L47f368.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L47f36e.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47f374.  return @kind void;
  catch `java.lang.Throwable` @[L47f344..L47f352] goto L47f354;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f394.  v0:= 9223372036854775807L;
  #L47f39e.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L47f3a4.  return @kind void;
}
