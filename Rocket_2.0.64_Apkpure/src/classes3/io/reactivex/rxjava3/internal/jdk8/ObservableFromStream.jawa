record `io.reactivex.rxjava3.internal.jdk8.ObservableFromStream` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `java.util.stream.Stream` `io.reactivex.rxjava3.internal.jdk8.ObservableFromStream.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ObservableFromStream` v0 @kind this, `java.util.stream.Stream` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.<init>:(Ljava/util/stream/Stream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47ee04.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L47ee0a.  v0.`io.reactivex.rxjava3.internal.jdk8.ObservableFromStream.a` @type ^`java.util.stream.Stream` := v1 @kind object;
  #L47ee0e.  return @kind void;
}
procedure `void` `d`(`java.lang.AutoCloseable` v0 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.d:(Ljava/lang/AutoCloseable;)V` @AccessFlag STATIC {
    temp;

  #L47ee20.  call `close`(v0) @signature `Ljava/lang/AutoCloseable;.close:()V` @kind interface;
  #L47ee26.  goto L47ee36;
  #L47ee28.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47ee2a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47ee30.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47ee36.  return @kind void;
  catch `java.lang.Throwable` @[L47ee20..L47ee26] goto L47ee28;
}
procedure `void` `subscribeStream`(`io.reactivex.rxjava3.core.Observer` v2 @kind object, `java.util.stream.Stream` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.subscribeStream:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/stream/Stream;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47ee70.  call temp:= `iterator`(v3) @signature `Ljava/util/stream/Stream;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L47ee76.  v0:= temp @kind object;
  #L47ee78.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L47ee7e.  v1:= temp;
  #L47ee80.  if v1 != 0 then goto L47ee92;
  #L47ee84.  call `complete`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L47ee8a.  call `d`(v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.d:(Ljava/lang/AutoCloseable;)V` @kind static;
  #L47ee90.  return @kind void;
  #L47ee92.  v1:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFromStream$a`;
  #L47ee96.  call `<init>`(v1, v2, v0, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @kind direct;
  #L47ee9c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L47eea2.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream$a;.a:()V` @kind virtual;
  #L47eea8.  return @kind void;
  #L47eeaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47eeac.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47eeb2.  call `error`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L47eeb8.  call `d`(v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.d:(Ljava/lang/AutoCloseable;)V` @kind static;
  #L47eebe.  return @kind void;
  catch `java.lang.Throwable` @[L47ee70..L47ee90] goto L47eeaa;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.jdk8.ObservableFromStream` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L47ee54.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFromStream.a` @type ^`java.util.stream.Stream` @kind object;
  #L47ee58.  call `subscribeStream`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.subscribeStream:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/stream/Stream;)V` @kind static;
  #L47ee5e.  return @kind void;
}
