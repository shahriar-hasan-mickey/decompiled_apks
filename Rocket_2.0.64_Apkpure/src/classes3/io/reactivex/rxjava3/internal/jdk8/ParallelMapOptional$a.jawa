record `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v0 @kind this, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47f824.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47f82a.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` := v1 @kind object;
  #L47f82e.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L47f832.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f844.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L47f848.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L47f84e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f860.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` @kind boolean;
  #L47f864.  if v0 == 0 then goto L47f86a;
  #L47f868.  return @kind void;
  #L47f86a.  v0:= 1I;
  #L47f86c.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` := v0 @kind boolean;
  #L47f870.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L47f874.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L47f87a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f88c.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` @kind boolean;
  #L47f890.  if v0 == 0 then goto L47f89c;
  #L47f894.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47f89a.  return @kind void;
  #L47f89c.  v0:= 1I;
  #L47f89e.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` := v0 @kind boolean;
  #L47f8a2.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L47f8a6.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47f8ac.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f8c0.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L47f8c6.  v3:= temp;
  #L47f8c8.  if v3 != 0 then goto L47f8da;
  #L47f8cc.  v3:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L47f8d0.  v0:= 1L;
  #L47f8d4.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L47f8da.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f8ec.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L47f8f0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L47f8f6.  v0:= temp;
  #L47f8f8.  if v0 == 0 then goto L47f90a;
  #L47f8fc.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L47f900.  v2:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L47f904.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/FlowableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L47f90a.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f91c.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L47f920.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L47f926.  return @kind void;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f7a4.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` @kind boolean;
  #L47f7a8.  v1:= 0I;
  #L47f7aa.  if v0 == 0 then goto L47f7b0;
  #L47f7ae.  return v1;
  #L47f7b0.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L47f7b4.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47f7ba.  v3:= temp @kind object;
  #L47f7bc.  v0:= "The mapper returned a null value" @kind object;
  #L47f7c0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47f7c6.  v3:= (`java.util.Optional`) v3 @kind object;
  #L47f7ca.  call temp:= `isPresent`(v3) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L47f7d0.  v0:= temp;
  #L47f7d2.  if v0 == 0 then goto L47f7f0;
  #L47f7d6.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L47f7da.  call temp:= `get`(v3) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L47f7e0.  v3:= temp @kind object;
  #L47f7e2.  call temp:= `tryOnNext`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L47f7e8.  v3:= temp;
  #L47f7ea.  if v3 == 0 then goto L47f7f0;
  #L47f7ee.  v1:= 1I;
  #L47f7f0.  return v1;
  #L47f7f2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47f7f4.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47f7fa.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.cancel:()V` @kind virtual;
  #L47f800.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47f806.  return v1;
  catch `java.lang.Throwable` @[L47f7b0..L47f7ca] goto L47f7f2;
}
