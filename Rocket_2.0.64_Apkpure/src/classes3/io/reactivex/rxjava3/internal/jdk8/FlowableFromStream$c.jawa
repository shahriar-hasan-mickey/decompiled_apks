record `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` @kind class {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c.e` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.util.Iterator` v2 @kind object, `java.lang.AutoCloseable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$c;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47d110.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.<init>:(Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @kind direct;
  #L47d116.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c.e` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L47d11a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c` v9 @kind this, `long` v10 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$c;.a:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47d12c.  v0:= v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.a` @type ^`java.util.Iterator` @kind object;
  #L47d130.  v1:= v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47d134.  v2:= 0L;
  #L47d138.  v4:= v2 @kind wide;
  #L47d13a.  v6:= v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` @kind boolean;
  #L47d13e.  if v6 == 0 then goto L47d14a;
  #L47d142.  call `clear`(v9) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.clear:()V` @kind virtual;
  #L47d148.  goto L47d1b2;
  #L47d14a.  v6:= 1I;
  #L47d14c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L47d152.  v7:= temp @kind object;
  #L47d154.  v8:= "The Stream's Iterator returned a null value" @kind object;
  #L47d158.  call temp:= `requireNonNull`(v7, v8) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47d15e.  call `onNext`(v1, v7) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47d164.  v7:= v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` @kind boolean;
  #L47d168.  if v7 == 0 then goto L47d16e;
  #L47d16c.  goto L47d13a;
  #L47d16e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L47d174.  v7:= temp;
  #L47d176.  if v7 != 0 then goto L47d186;
  #L47d17a.  call `onComplete`(v1) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L47d180.  v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` := v6 @kind boolean;
  #L47d184.  goto L47d13a;
  #L47d186.  v6:= 1L;
  #L47d18a.  v4:= v4 + v6 @kind long;
  #L47d18c.  v6:= lcmp(v4, v10);
  #L47d190.  if v6 == 0 then goto L47d196;
  #L47d194.  goto L47d13a;
  #L47d196.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L47d19c.  v10:= temp @kind wide;
  #L47d19e.  v6:= lcmp(v4, v10);
  #L47d1a2.  if v6 != 0 then goto L47d13a;
  #L47d1a6.  call temp:= `compareAndSet`(v9, v10, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L47d1ac.  v10:= temp;
  #L47d1ae.  if v10 == 0 then goto L47d1b4;
  #L47d1b2.  return @kind void;
  #L47d1b4.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L47d1ba.  v10:= temp @kind wide;
  #L47d1bc.  goto L47d13a;
  #L47d1be.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47d1c0.  call `throwIfFatal`(v7) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47d1c6.  call `onError`(v1, v7) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47d1cc.  v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` := v6 @kind boolean;
  #L47d1d0.  goto L47d13a;
  #L47d1d2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47d1d4.  call `throwIfFatal`(v7) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47d1da.  call `onError`(v1, v7) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47d1e0.  v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` := v6 @kind boolean;
  #L47d1e4.  goto L47d13a;
  catch `java.lang.Throwable` @[L47d14c..L47d15e] goto L47d1d2;
  catch `java.lang.Throwable` @[L47d16e..L47d184] goto L47d1be;
}
