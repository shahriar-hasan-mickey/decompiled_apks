record `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` @kind class, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind interface {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47d628.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L47d62e.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L47d632.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47d644.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L47d64a.  v3:= temp;
  #L47d64c.  if v3 != 0 then goto L47d65e;
  #L47d650.  v3:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L47d654.  v0:= 1L;
  #L47d658.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L47d65e.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47d5b8.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L47d5bc.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L47d5c2.  v0:= temp @kind object;
  #L47d5c4.  if v0 != 0 then goto L47d5cc;
  #L47d5c8.  v0:= 0I;
  #L47d5ca.  return v0 @kind object;
  #L47d5cc.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L47d5d0.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47d5d6.  v0:= temp @kind object;
  #L47d5d8.  v1:= "The mapper returned a null Optional" @kind object;
  #L47d5dc.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47d5e2.  v0:= (`java.util.Optional`) v0 @kind object;
  #L47d5e6.  call temp:= `isPresent`(v0) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L47d5ec.  v1:= temp;
  #L47d5ee.  if v1 == 0 then goto L47d5fc;
  #L47d5f2.  call temp:= `get`(v0) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L47d5f8.  v0:= temp @kind object;
  #L47d5fa.  return v0 @kind object;
  #L47d5fc.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L47d600.  v1:= 2I;
  #L47d602.  if v0 != v1 then goto L47d5b8;
  #L47d606.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L47d60a.  v1:= 1L;
  #L47d60e.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L47d614.  goto L47d5b8;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L47d59c.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L47d5a2.  v1:= temp;
  #L47d5a4.  return v1;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47d514.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L47d518.  v1:= 1I;
  #L47d51a.  if v0 == 0 then goto L47d520;
  #L47d51e.  return v1;
  #L47d520.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L47d524.  if v0 == 0 then goto L47d536;
  #L47d528.  v3:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47d52c.  v0:= 0I;
  #L47d52e.  call `onNext`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47d534.  return v1;
  #L47d536.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L47d53a.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47d540.  v3:= temp @kind object;
  #L47d542.  v0:= "The mapper returned a null Optional" @kind object;
  #L47d546.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47d54c.  v3:= (`java.util.Optional`) v3 @kind object;
  #L47d550.  call temp:= `isPresent`(v3) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L47d556.  v0:= temp;
  #L47d558.  if v0 == 0 then goto L47d570;
  #L47d55c.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47d560.  call temp:= `get`(v3) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L47d566.  v3:= temp @kind object;
  #L47d568.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47d56e.  return v1;
  #L47d570.  v3:= 0I;
  #L47d572.  return v3;
  #L47d574.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47d576.  call `fail`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47d57c.  return v1;
  catch `java.lang.Throwable` @[L47d536..L47d550] goto L47d574;
}
