record `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `java.util.stream.Stream` `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream` v0 @kind this, `java.util.stream.Stream` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.<init>:(Ljava/util/stream/Stream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47d210.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L47d216.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream.b` @type ^`java.util.stream.Stream` := v1 @kind object;
  #L47d21a.  return @kind void;
}
procedure `void` `e`(`java.lang.AutoCloseable` v0 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.e:(Ljava/lang/AutoCloseable;)V` @AccessFlag STATIC {
    temp;

  #L47d22c.  call `close`(v0) @signature `Ljava/lang/AutoCloseable;.close:()V` @kind interface;
  #L47d232.  goto L47d242;
  #L47d234.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47d236.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47d23c.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47d242.  return @kind void;
  catch `java.lang.Throwable` @[L47d22c..L47d232] goto L47d234;
}
procedure `void` `subscribeStream`(`org.reactivestreams.Subscriber` v3 @kind object, `java.util.stream.Stream` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.subscribeStream:(Lorg/reactivestreams/Subscriber;Ljava/util/stream/Stream;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47d27c.  call temp:= `iterator`(v4) @signature `Ljava/util/stream/Stream;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L47d282.  v0:= temp @kind object;
  #L47d284.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L47d28a.  v1:= temp;
  #L47d28c.  if v1 != 0 then goto L47d29e;
  #L47d290.  call `complete`(v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L47d296.  call `e`(v4) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.e:(Ljava/lang/AutoCloseable;)V` @kind static;
  #L47d29c.  return @kind void;
  #L47d29e.  v1:= instanceof @variable v3 @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L47d2a2.  if v1 == 0 then goto L47d2be;
  #L47d2a6.  v1:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$b`;
  #L47d2aa.  v2:= v3 @kind object;
  #L47d2ac.  v2:= (`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber`) v2 @kind object;
  #L47d2b0.  call `<init>`(v1, v2, v0, v4) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$b;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @kind direct;
  #L47d2b6.  call `onSubscribe`(v3, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L47d2bc.  goto L47d2ce;
  #L47d2be.  v1:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c`;
  #L47d2c2.  call `<init>`(v1, v3, v0, v4) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$c;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @kind direct;
  #L47d2c8.  call `onSubscribe`(v3, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L47d2ce.  return @kind void;
  #L47d2d0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47d2d2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47d2d8.  call `error`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L47d2de.  call `e`(v4) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.e:(Ljava/lang/AutoCloseable;)V` @kind static;
  #L47d2e4.  return @kind void;
  catch `java.lang.Throwable` @[L47d27c..L47d29c] goto L47d2d0;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L47d260.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream.b` @type ^`java.util.stream.Stream` @kind object;
  #L47d264.  call `subscribeStream`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.subscribeStream:(Lorg/reactivestreams/Subscriber;Ljava/util/stream/Stream;)V` @kind static;
  #L47d26a.  return @kind void;
}
