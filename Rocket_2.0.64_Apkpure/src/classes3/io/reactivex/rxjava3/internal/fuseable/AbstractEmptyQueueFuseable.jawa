record `io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind interface, `io.reactivex.rxjava3.internal.fuseable.QueueDisposable` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47bf18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47bf1e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L47bf30.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L47bf44.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L47bf58.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47be84.  v0:= 0I;
  #L47be86.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47be98.  v0:= 1I;
  #L47be9a.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47beac.  v2:= new `java.lang.UnsupportedOperationException`;
  #L47beb0.  v0:= "Should not be called!" @kind object;
  #L47beb4.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47beba.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L47becc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L47bed0.  v2:= "Should not be called!" @kind object;
  #L47bed4.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47beda.  throw v1;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47bf04.  v0:= 0I;
  #L47bf06.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.request:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L47bf6c.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.fuseable.AbstractEmptyQueueFuseable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/fuseable/AbstractEmptyQueueFuseable;.requestFusion:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L47beec.  v1:= v1 ^& 2;
  #L47bef0.  return v1;
}
