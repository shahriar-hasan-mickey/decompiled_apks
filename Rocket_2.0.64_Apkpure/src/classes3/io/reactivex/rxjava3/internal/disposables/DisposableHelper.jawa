record `io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
}
global `io.reactivex.rxjava3.internal.disposables.DisposableHelper` `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.rxjava3.internal.disposables.DisposableHelper`[] `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L47a1f8.  v0:= new `io.reactivex.rxjava3.internal.disposables.DisposableHelper`;
  #L47a1fc.  v1:= "DISPOSED" @kind object;
  #L47a200.  v2:= 0I;
  #L47a202.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L47a208.  `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` := v0 @kind object;
  #L47a20c.  v1:= 1I;
  #L47a20e.  v1:= new `io.reactivex.rxjava3.internal.disposables.DisposableHelper`[v1];
  #L47a212.  v1[v2]:= v0 @kind object;
  #L47a216.  `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper`[] := v1 @kind object;
  #L47a21a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.disposables.DisposableHelper` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L47a22c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L47a232.  return @kind void;
}
procedure `boolean` `dispose`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L479fd8.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L479fde.  v0:= temp @kind object;
  #L479fe0.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L479fe4.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L479fe8.  if v0 == v1 then goto L47a00a;
  #L479fec.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L479ff2.  v2:= temp @kind object;
  #L479ff4.  v2:= (`io.reactivex.rxjava3.disposables.Disposable`) v2 @kind object;
  #L479ff8.  if v2 == v1 then goto L47a00a;
  #L479ffc.  if v2 == 0 then goto L47a006;
  #L47a000.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L47a006.  v2:= 1I;
  #L47a008.  return v2;
  #L47a00a.  v2:= 0I;
  #L47a00c.  return v2;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47a034.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L47a038.  if v1 != v0 then goto L47a040;
  #L47a03c.  v1:= 1I;
  #L47a03e.  goto L47a042;
  #L47a040.  v1:= 0I;
  #L47a042.  return v1;
}
procedure `boolean` `replace`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47a054.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L47a05a.  v0:= temp @kind object;
  #L47a05c.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L47a060.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L47a064.  if v0 != v1 then goto L47a076;
  #L47a068.  if v3 == 0 then goto L47a072;
  #L47a06c.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L47a072.  v2:= 0I;
  #L47a074.  return v2;
  #L47a076.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L47a07c.  v0:= temp;
  #L47a07e.  if v0 == 0 then goto L47a054;
  #L47a082.  v2:= 1I;
  #L47a084.  return v2;
}
procedure `void` `reportDisposableSet`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47a258.  v0:= new `io.reactivex.rxjava3.exceptions.ProtocolViolationException`;
  #L47a25c.  v1:= "Disposable already set!" @kind object;
  #L47a260.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/exceptions/ProtocolViolationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47a266.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47a26c.  return @kind void;
}
procedure `boolean` `set`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47a098.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L47a09e.  v0:= temp @kind object;
  #L47a0a0.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L47a0a4.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L47a0a8.  if v0 != v1 then goto L47a0ba;
  #L47a0ac.  if v3 == 0 then goto L47a0b6;
  #L47a0b0.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L47a0b6.  v2:= 0I;
  #L47a0b8.  return v2;
  #L47a0ba.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L47a0c0.  v1:= temp;
  #L47a0c2.  if v1 == 0 then goto L47a098;
  #L47a0c6.  if v0 == 0 then goto L47a0d0;
  #L47a0ca.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L47a0d0.  v2:= 1I;
  #L47a0d2.  return v2;
}
procedure `boolean` `setOnce`(`java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47a0e4.  v0:= "d is null" @kind object;
  #L47a0e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47a0ee.  v0:= 0I;
  #L47a0f0.  call temp:= `compareAndSet`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L47a0f6.  v0:= temp;
  #L47a0f8.  if v0 != 0 then goto L47a11c;
  #L47a0fc.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L47a102.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L47a108.  v1:= temp @kind object;
  #L47a10a.  v2:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L47a10e.  if v1 == v2 then goto L47a118;
  #L47a112.  call `reportDisposableSet`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @kind static;
  #L47a118.  v1:= 0I;
  #L47a11a.  return v1;
  #L47a11c.  v1:= 1I;
  #L47a11e.  return v1;
}
procedure `boolean` `trySet`(`java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.trySet:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47a130.  v0:= 0I;
  #L47a132.  call temp:= `compareAndSet`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L47a138.  v0:= temp;
  #L47a13a.  if v0 != 0 then goto L47a158;
  #L47a13e.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L47a144.  v1:= temp @kind object;
  #L47a146.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L47a14a.  if v1 != v0 then goto L47a154;
  #L47a14e.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L47a154.  v1:= 0I;
  #L47a156.  return v1;
  #L47a158.  v1:= 1I;
  #L47a15a.  return v1;
}
procedure `boolean` `validate`(`io.reactivex.rxjava3.disposables.Disposable` v1 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47a16c.  v0:= 0I;
  #L47a16e.  if v2 != 0 then goto L47a188;
  #L47a172.  v1:= new `java.lang.NullPointerException`;
  #L47a176.  v2:= "next is null" @kind object;
  #L47a17a.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47a180.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47a186.  return v0;
  #L47a188.  if v1 == 0 then goto L47a19a;
  #L47a18c.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L47a192.  call `reportDisposableSet`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @kind static;
  #L47a198.  return v0;
  #L47a19a.  v1:= 1I;
  #L47a19c.  return v1;
}
procedure `io.reactivex.rxjava3.internal.disposables.DisposableHelper` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.valueOf:(Ljava/lang/String;)Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47a1b0.  v0:= constclass @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L47a1b4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L47a1ba.  v1:= temp @kind object;
  #L47a1bc.  v1:= (`io.reactivex.rxjava3.internal.disposables.DisposableHelper`) v1 @kind object;
  #L47a1c0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.internal.disposables.DisposableHelper`[] `values`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.values:()[Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47a1d4.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper`[] @kind object;
  #L47a1d8.  call temp:= `clone`(v0) @signature `[Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.clone:()Ljava/lang/Object;` @kind virtual;
  #L47a1de.  v0:= temp @kind object;
  #L47a1e0.  v0:= (`io.reactivex.rxjava3.internal.disposables.DisposableHelper`[]) v0 @kind object;
  #L47a1e4.  return v0 @kind object;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.disposables.DisposableHelper` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L47a244.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.disposables.DisposableHelper` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a020.  v0:= 1I;
  #L47a022.  return v0;
}
