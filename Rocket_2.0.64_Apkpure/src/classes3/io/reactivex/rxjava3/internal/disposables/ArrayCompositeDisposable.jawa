record `io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L479ecc.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L479ed2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L479ee4.  v0:= 0I;
  #L479ee6.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L479eec.  v1:= temp @kind object;
  #L479eee.  v2:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L479ef2.  if v1 == v2 then goto L479f36;
  #L479ef6.  call temp:= `length`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L479efc.  v1:= temp;
  #L479efe.  if v0 >= v1 then goto L479f36;
  #L479f02.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L479f08.  v2:= temp @kind object;
  #L479f0a.  v2:= (`io.reactivex.rxjava3.disposables.Disposable`) v2 @kind object;
  #L479f0e.  v3:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L479f12.  if v2 == v3 then goto L479f30;
  #L479f16.  call temp:= `getAndSet`(v4, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L479f1c.  v2:= temp @kind object;
  #L479f1e.  v2:= (`io.reactivex.rxjava3.disposables.Disposable`) v2 @kind object;
  #L479f22.  if v2 == v3 then goto L479f30;
  #L479f26.  if v2 == 0 then goto L479f30;
  #L479f2a.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L479f30.  v0:= v0 + 1;
  #L479f34.  goto L479efe;
  #L479f36.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L479e20.  v0:= 0I;
  #L479e22.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L479e28.  v1:= temp @kind object;
  #L479e2a.  v2:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L479e2e.  if v1 != v2 then goto L479e34;
  #L479e32.  v0:= 1I;
  #L479e34.  return v0;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `replaceResource`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.rxjava3.disposables.Disposable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.replaceResource:(ILio/reactivex/rxjava3/disposables/Disposable;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L479e90.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L479e96.  v0:= temp @kind object;
  #L479e98.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L479e9c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L479ea0.  if v0 != v1 then goto L479eae;
  #L479ea4.  call `dispose`(v4) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L479eaa.  v3:= 0I;
  #L479eac.  return v3 @kind object;
  #L479eae.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L479eb4.  v1:= temp;
  #L479eb6.  if v1 == 0 then goto L479e90;
  #L479eba.  return v0 @kind object;
}
procedure `boolean` `setResource`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.rxjava3.disposables.Disposable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.setResource:(ILio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L479e48.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L479e4e.  v0:= temp @kind object;
  #L479e50.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L479e54.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L479e58.  if v0 != v1 then goto L479e66;
  #L479e5c.  call `dispose`(v4) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L479e62.  v3:= 0I;
  #L479e64.  return v3;
  #L479e66.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L479e6c.  v1:= temp;
  #L479e6e.  if v1 == 0 then goto L479e48;
  #L479e72.  if v0 == 0 then goto L479e7c;
  #L479e76.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L479e7c.  v3:= 1I;
  #L479e7e.  return v3;
}
