record `io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4de254.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4de25a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4de25e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4de264.  v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4de268.  v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L4de26c.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L4de280.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.dispose:()V` @kind virtual;
  #L4de286.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de298.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4de29c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4de2a2.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4de2a8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4de228.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4de22c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4de232.  v0:= temp @kind object;
  #L4de234.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4de238.  if v0 != v1 then goto L4de240;
  #L4de23c.  v0:= 1I;
  #L4de23e.  goto L4de242;
  #L4de240.  v0:= 0I;
  #L4de242.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de2bc.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4de2c2.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4de2c6.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4de2cc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de2e0.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4de2e6.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4de2ea.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4de2f0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de304.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4de308.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4de30e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de320.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4de324.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4de32a.  v2:= temp;
  #L4de32c.  if v2 == 0 then goto L4de33a;
  #L4de330.  v2:= v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4de334.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4de33a.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de34c.  call temp:= `validate`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L4de352.  v0:= temp;
  #L4de354.  if v0 == 0 then goto L4de36e;
  #L4de358.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4de35c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4de362.  v0:= temp @kind object;
  #L4de364.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L4de368.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4de36e.  return @kind void;
}
procedure `void` `setResource`(`io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;.setResource:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4de380.  call temp:= `set`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4de386.  return @kind void;
}
