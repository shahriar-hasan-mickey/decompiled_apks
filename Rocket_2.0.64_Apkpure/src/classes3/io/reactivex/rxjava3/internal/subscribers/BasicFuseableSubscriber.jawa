record `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind interface {
  `boolean` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @AccessFlag PROTECTED_FINAL;
  `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @AccessFlag PROTECTED;
  `int` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4dcb00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dcb06.  v0.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4dcb0a.  return @kind void;
}
procedure `void` `afterDownstream`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.afterDownstream:()V` @AccessFlag PROTECTED {
    temp;

  #L4dcb1c.  return @kind void;
}
procedure `boolean` `beforeDownstream`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.beforeDownstream:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4dca54.  v0:= 1I;
  #L4dca56.  return v0;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dcb30.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4dcb34.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4dcb3a.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dcb4c.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4dcb50.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4dcb56.  return @kind void;
}
procedure `void` `fail`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4dcb68.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcb6e.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4dcb72.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4dcb78.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4dcb7e.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dca68.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4dca6c.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.isEmpty:()Z` @kind interface;
  #L4dca72.  v0:= temp;
  #L4dca74.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4dca88.  v2:= new `java.lang.UnsupportedOperationException`;
  #L4dca8c.  v0:= "Should not be called!" @kind object;
  #L4dca90.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4dca96.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4dcaa8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L4dcaac.  v2:= "Should not be called!" @kind object;
  #L4dcab0.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4dcab6.  throw v1;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dcb90.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4dcb94.  if v0 == 0 then goto L4dcb9a;
  #L4dcb98.  return @kind void;
  #L4dcb9a.  v0:= 1I;
  #L4dcb9c.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4dcba0.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4dcba4.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4dcbaa.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dcbbc.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4dcbc0.  if v0 == 0 then goto L4dcbcc;
  #L4dcbc4.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcbca.  return @kind void;
  #L4dcbcc.  v0:= 1I;
  #L4dcbce.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4dcbd2.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4dcbd6.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dcbdc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4dcbf0.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4dcbf4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4dcbfa.  v0:= temp;
  #L4dcbfc.  if v0 == 0 then goto L4dcc30;
  #L4dcc00.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4dcc04.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind boolean;
  #L4dcc08.  if v0 == 0 then goto L4dcc14;
  #L4dcc0c.  v2:= (`io.reactivex.rxjava3.internal.fuseable.QueueSubscription`) v2 @kind object;
  #L4dcc10.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` := v2 @kind object;
  #L4dcc14.  call temp:= `beforeDownstream`(v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.beforeDownstream:()Z` @kind virtual;
  #L4dcc1a.  v2:= temp;
  #L4dcc1c.  if v2 == 0 then goto L4dcc30;
  #L4dcc20.  v2:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4dcc24.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4dcc2a.  call `afterDownstream`(v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.afterDownstream:()V` @kind virtual;
  #L4dcc30.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dcc44.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4dcc48.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4dcc4e.  return @kind void;
}
procedure `int` `transitiveBoundaryFusion`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L4dcac8.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4dcacc.  if v0 == 0 then goto L4dcaea;
  #L4dcad0.  v1:= v3 ^& 4;
  #L4dcad4.  if v1 != 0 then goto L4dcaea;
  #L4dcad8.  call temp:= `requestFusion`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L4dcade.  v3:= temp;
  #L4dcae0.  if v3 == 0 then goto L4dcae8;
  #L4dcae4.  v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int` := v3;
  #L4dcae8.  return v3;
  #L4dcaea.  v3:= 0I;
  #L4dcaec.  return v3;
}
