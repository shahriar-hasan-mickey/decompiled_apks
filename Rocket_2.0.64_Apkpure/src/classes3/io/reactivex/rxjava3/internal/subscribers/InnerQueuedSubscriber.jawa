record `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriberSupport` `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.fuseable.SimpleQueue` `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.d` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.e` @AccessFlag VOLATILE;
  `long` `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.f` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.g` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v0 @kind this, `io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriberSupport` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.<init>:(Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriberSupport;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4dd798.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4dd79e.  v0.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriberSupport` := v1 @kind object;
  #L4dd7a2.  v0.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int` := v2;
  #L4dd7a6.  v1:= v2 ^> 2;
  #L4dd7aa.  v2:= v2 - v1 @kind int;
  #L4dd7ac.  v0.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.c` @type ^`int` := v2;
  #L4dd7b0.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L4dd7c4.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4dd7ca.  return @kind void;
}
procedure `boolean` `isDone`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd768.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` @kind boolean;
  #L4dd76c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd7dc.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4dd7e0.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriberSupport;.innerComplete:(Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;)V` @kind interface;
  #L4dd7e6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd7f8.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4dd7fc.  call `innerError`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriberSupport;.innerError:(Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;Ljava/lang/Throwable;)V` @kind interface;
  #L4dd802.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd814.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int`;
  #L4dd818.  if v0 != 0 then goto L4dd828;
  #L4dd81c.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4dd820.  call `innerNext`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriberSupport;.innerNext:(Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;Ljava/lang/Object;)V` @kind interface;
  #L4dd826.  goto L4dd832;
  #L4dd828.  v2:= v1.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4dd82c.  call `drain`(v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriberSupport;.drain:()V` @kind interface;
  #L4dd832.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v3 @kind this, `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4dd844.  call temp:= `setOnce`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4dd84a.  v0:= temp;
  #L4dd84c.  if v0 == 0 then goto L4dd8ba;
  #L4dd850.  v0:= instanceof @variable v4 @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind boolean;
  #L4dd854.  if v0 == 0 then goto L4dd8a0;
  #L4dd858.  v0:= v4 @kind object;
  #L4dd85a.  v0:= (`io.reactivex.rxjava3.internal.fuseable.QueueSubscription`) v0 @kind object;
  #L4dd85e.  v1:= 3I;
  #L4dd860.  call temp:= `requestFusion`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L4dd866.  v1:= temp;
  #L4dd868.  v2:= 1I;
  #L4dd86a.  if v1 != v2 then goto L4dd886;
  #L4dd86e.  v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int` := v1;
  #L4dd872.  v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4dd876.  v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` := v2 @kind boolean;
  #L4dd87a.  v4:= v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4dd87e.  call `innerComplete`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriberSupport;.innerComplete:(Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;)V` @kind interface;
  #L4dd884.  return @kind void;
  #L4dd886.  v2:= 2I;
  #L4dd888.  if v1 != v2 then goto L4dd8a0;
  #L4dd88c.  v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int` := v1;
  #L4dd890.  v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4dd894.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L4dd898.  call `request`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @kind static;
  #L4dd89e.  return @kind void;
  #L4dd8a0.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L4dd8a4.  call temp:= `createQueue`(v0) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.createQueue:(I)Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;` @kind static;
  #L4dd8aa.  v0:= temp @kind object;
  #L4dd8ac.  v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4dd8b0.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L4dd8b4.  call `request`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @kind static;
  #L4dd8ba.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.fuseable.SimpleQueue` `queue`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.queue:()Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd780.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4dd784.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4dd8cc.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int`;
  #L4dd8d0.  v1:= 1I;
  #L4dd8d2.  if v0 == v1 then goto L4dd90a;
  #L4dd8d6.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` @kind wide;
  #L4dd8da.  v0:= v0 + v4 @kind long;
  #L4dd8dc.  v4:= v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.c` @type ^`int`;
  #L4dd8e0.  v4:= (`long`) v4 @kind i2l;
  #L4dd8e2.  v2:= lcmp(v0, v4);
  #L4dd8e6.  if v2 < 0 then goto L4dd906;
  #L4dd8ea.  v4:= 0L;
  #L4dd8ee.  v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v4 @kind wide;
  #L4dd8f2.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4dd8f8.  v4:= temp @kind object;
  #L4dd8fa.  v4:= (`org.reactivestreams.Subscription`) v4 @kind object;
  #L4dd8fe.  call `request`(v4, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4dd904.  goto L4dd90a;
  #L4dd906.  v3.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v0 @kind wide;
  #L4dd90a.  return @kind void;
}
procedure `void` `setDone`(`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/InnerQueuedSubscriber;.setDone:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd91c.  v0:= 1I;
  #L4dd91e.  v1.`io.reactivex.rxjava3.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` := v0 @kind boolean;
  #L4dd922.  return @kind void;
}
