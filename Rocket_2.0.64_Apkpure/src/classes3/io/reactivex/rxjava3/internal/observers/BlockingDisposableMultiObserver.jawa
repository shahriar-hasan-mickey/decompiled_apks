record `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CountDownLatch` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.a` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @AccessFlag ;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L48095c.  v0:= 1I;
  #L48095e.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L480964.  v0:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L480968.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L48096e.  v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v0 @kind object;
  #L480972.  return @kind void;
}
procedure `void` `blockingConsume`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v5 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L480984.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L48098a.  v0:= temp @kind wide;
  #L48098c.  v2:= 0L;
  #L480990.  v4:= lcmp(v0, v2);
  #L480994.  if v4 == 0 then goto L4809b6;
  #L480998.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L48099e.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L4809a4.  goto L4809b6;
  #L4809a6.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4809a8.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.dispose:()V` @kind virtual;
  #L4809ae.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4809b4.  return @kind void;
  #L4809b6.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.isDisposed:()Z` @kind virtual;
  #L4809bc.  v0:= temp;
  #L4809be.  if v0 == 0 then goto L4809c4;
  #L4809c2.  return @kind void;
  #L4809c4.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L4809c8.  if v0 == 0 then goto L4809d4;
  #L4809cc.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4809d2.  goto L4809da;
  #L4809d4.  call `onComplete`(v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4809da.  return @kind void;
  catch `java.lang.InterruptedException` @[L480998..L4809a4] goto L4809a6;
}
procedure `void` `blockingConsume`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v5 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4809fc.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L480a02.  v0:= temp @kind wide;
  #L480a04.  v2:= 0L;
  #L480a08.  v4:= lcmp(v0, v2);
  #L480a0c.  if v4 == 0 then goto L480a2e;
  #L480a10.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L480a16.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L480a1c.  goto L480a2e;
  #L480a1e.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L480a20.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.dispose:()V` @kind virtual;
  #L480a26.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L480a2c.  return @kind void;
  #L480a2e.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.isDisposed:()Z` @kind virtual;
  #L480a34.  v0:= temp;
  #L480a36.  if v0 == 0 then goto L480a3c;
  #L480a3a.  return @kind void;
  #L480a3c.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L480a40.  if v0 == 0 then goto L480a4c;
  #L480a44.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L480a4a.  goto L480a62;
  #L480a4c.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.a` @type ^`java.lang.Object` @kind object;
  #L480a50.  if v0 != 0 then goto L480a5c;
  #L480a54.  call `onComplete`(v6) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L480a5a.  goto L480a62;
  #L480a5c.  call `onSuccess`(v6, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L480a62.  return @kind void;
  catch `java.lang.InterruptedException` @[L480a10..L480a1c] goto L480a1e;
}
procedure `void` `blockingConsume`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v5 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L480a84.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L480a8a.  v0:= temp @kind wide;
  #L480a8c.  v2:= 0L;
  #L480a90.  v4:= lcmp(v0, v2);
  #L480a94.  if v4 == 0 then goto L480ab6;
  #L480a98.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L480a9e.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L480aa4.  goto L480ab6;
  #L480aa6.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L480aa8.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.dispose:()V` @kind virtual;
  #L480aae.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L480ab4.  return @kind void;
  #L480ab6.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.isDisposed:()Z` @kind virtual;
  #L480abc.  v0:= temp;
  #L480abe.  if v0 == 0 then goto L480ac4;
  #L480ac2.  return @kind void;
  #L480ac4.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L480ac8.  if v0 == 0 then goto L480ad4;
  #L480acc.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L480ad2.  goto L480ade;
  #L480ad4.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.a` @type ^`java.lang.Object` @kind object;
  #L480ad8.  call `onSuccess`(v6, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L480ade.  return @kind void;
  catch `java.lang.InterruptedException` @[L480a98..L480aa4] goto L480aa6;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480b00.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L480b04.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L480b0a.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L480b10.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48093c.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L480940.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L480946.  v0:= temp;
  #L480948.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L480b24.  v0:= v2.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L480b28.  call temp:= `a`() @signature `Ls0/d;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L480b2e.  v1:= temp @kind object;
  #L480b30.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L480b36.  call `countDown`(v2) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L480b3c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480b50.  v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @type ^`java.lang.Throwable` := v2 @kind object;
  #L480b54.  v2:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L480b58.  call temp:= `a`() @signature `Ls0/d;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L480b5e.  v0:= temp @kind object;
  #L480b60.  call `lazySet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L480b66.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L480b6c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480b80.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L480b84.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L480b8a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480b9c.  v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.a` @type ^`java.lang.Object` := v2 @kind object;
  #L480ba0.  v2:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L480ba4.  call temp:= `a`() @signature `Ls0/d;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L480baa.  v0:= temp @kind object;
  #L480bac.  call `lazySet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L480bb2.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L480bb8.  return @kind void;
}
