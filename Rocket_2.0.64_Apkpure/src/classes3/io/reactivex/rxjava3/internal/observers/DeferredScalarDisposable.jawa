record `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` @kind class @AccessFlag PUBLIC extends `io.reactivex.rxjava3.internal.observers.BasicIntQueueDisposable` @kind class {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.downstream` @AccessFlag PROTECTED_FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.value` @AccessFlag PROTECTED;
}
global `long` `@@io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4813e4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L4813ea.  v0.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.downstream` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4813ee.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L481400.  v0:= 32I;
  #L481404.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48140a.  v0:= 0I;
  #L48140c.  v1.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` := v0 @kind object;
  #L481410.  return @kind void;
}
procedure `void` `complete`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.complete:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L481424.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L48142a.  v0:= temp;
  #L48142c.  v0:= v0 ^& 54;
  #L481430.  if v0 == 0 then goto L481436;
  #L481434.  return @kind void;
  #L481436.  v0:= 2I;
  #L481438.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48143e.  v0:= v1.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L481442.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L481448.  return @kind void;
}
procedure `void` `complete`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.complete:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L48145c.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L481462.  v0:= temp;
  #L481464.  v1:= v0 ^& 54;
  #L481468.  if v1 == 0 then goto L48146e;
  #L48146c.  return @kind void;
  #L48146e.  v1:= v3.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L481472.  v2:= 8I;
  #L481476.  if v0 != v2 then goto L481492;
  #L48147a.  v3.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` := v4 @kind object;
  #L48147e.  v4:= 16I;
  #L481482.  call `lazySet`(v3, v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L481488.  v4:= 0I;
  #L48148a.  call `onNext`(v1, v4) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L481490.  goto L4814a0;
  #L481492.  v0:= 2I;
  #L481494.  call `lazySet`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48149a.  call `onNext`(v1, v4) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4814a0.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L4814a6.  v4:= temp;
  #L4814a8.  v0:= 4I;
  #L4814aa.  if v4 == v0 then goto L4814b4;
  #L4814ae.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4814b4.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4814c8.  v0:= 4I;
  #L4814ca.  call `set`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.set:(I)V` @kind virtual;
  #L4814d0.  v0:= 0I;
  #L4814d2.  v1.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` := v0 @kind object;
  #L4814d6.  return @kind void;
}
procedure `void` `error`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.error:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4814e8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L4814ee.  v0:= temp;
  #L4814f0.  v0:= v0 ^& 54;
  #L4814f4.  if v0 == 0 then goto L481500;
  #L4814f8.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4814fe.  return @kind void;
  #L481500.  v0:= 2I;
  #L481502.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L481508.  v0:= v1.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L48150c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L481512.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L48130c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L481312.  v0:= temp;
  #L481314.  v1:= 4I;
  #L481316.  if v0 != v1 then goto L48131e;
  #L48131a.  v0:= 1I;
  #L48131c.  goto L481320;
  #L48131e.  v0:= 0I;
  #L481320.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L481334.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L48133a.  v0:= temp;
  #L48133c.  v1:= 16I;
  #L481340.  if v0 == v1 then goto L481348;
  #L481344.  v0:= 1I;
  #L481346.  goto L48134a;
  #L481348.  v0:= 0I;
  #L48134a.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4813ac.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L4813b2.  v0:= temp;
  #L4813b4.  v1:= 0I;
  #L4813b6.  v2:= 16I;
  #L4813ba.  if v0 != v2 then goto L4813d2;
  #L4813be.  v0:= v3.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` @kind object;
  #L4813c2.  v3.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` := v1 @kind object;
  #L4813c6.  v1:= 32I;
  #L4813ca.  call `lazySet`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L4813d0.  return v0 @kind object;
  #L4813d2.  return v1 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.requestFusion:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L481384.  v0:= 2I;
  #L481386.  v2:= v2 ^& v0 @kind int;
  #L481388.  if v2 == 0 then goto L481398;
  #L48138c.  v2:= 8I;
  #L481390.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L481396.  return v0;
  #L481398.  v2:= 0I;
  #L48139a.  return v2;
}
procedure `boolean` `tryDispose`(`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.tryDispose:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L48135c.  v0:= 4I;
  #L48135e.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L481364.  v1:= temp;
  #L481366.  if v1 == v0 then goto L48136e;
  #L48136a.  v0:= 1I;
  #L48136c.  goto L481370;
  #L48136e.  v0:= 0I;
  #L481370.  return v0;
}
