record `io.reactivex.rxjava3.internal.observers.SafeSingleObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.observers.SafeSingleObserver.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.SafeSingleObserver` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4827d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4827d6.  v0.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4827da.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.SafeSingleObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4827ec.  v0:= v4.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.b` @type ^`boolean` @kind boolean;
  #L4827f0.  if v0 == 0 then goto L4827fc;
  #L4827f4.  call `onError`(v5) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4827fa.  goto L482832;
  #L4827fc.  v0:= v4.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L482800.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L482806.  goto L482832;
  #L482808.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48280a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L482810.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L482814.  v2:= 2I;
  #L482816.  v2:= new `java.lang.Throwable`[v2];
  #L48281a.  v3:= 0I;
  #L48281c.  v2[v3]:= v5 @kind object;
  #L482820.  v5:= 1I;
  #L482822.  v2[v5]:= v0 @kind object;
  #L482826.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48282c.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L482832.  return @kind void;
  catch `java.lang.Throwable` @[L4827fc..L482806] goto L482808;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.SafeSingleObserver` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482850.  v0:= v2.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L482854.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L48285a.  goto L482876;
  #L48285c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48285e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L482864.  v1:= 1I;
  #L482866.  v2.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.b` @type ^`boolean` := v1 @kind boolean;
  #L48286a.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L482870.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L482876.  return @kind void;
  catch `java.lang.Throwable` @[L482850..L48285a] goto L48285c;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.observers.SafeSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482894.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.b` @type ^`boolean` @kind boolean;
  #L482898.  if v0 != 0 then goto L4828b6;
  #L48289c.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4828a0.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4828a6.  goto L4828b6;
  #L4828a8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4828aa.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4828b0.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4828b6.  return @kind void;
  catch `java.lang.Throwable` @[L48289c..L4828a6] goto L4828a8;
}
