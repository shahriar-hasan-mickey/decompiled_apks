record `io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48268c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L482692.  v0.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L482696.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4826a8.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @type ^`boolean` @kind boolean;
  #L4826ac.  if v0 != 0 then goto L4826ca;
  #L4826b0.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4826b4.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4826ba.  goto L4826ca;
  #L4826bc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4826be.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4826c4.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4826ca.  return @kind void;
  catch `java.lang.Throwable` @[L4826b0..L4826ba] goto L4826bc;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4826e8.  v0:= v4.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @type ^`boolean` @kind boolean;
  #L4826ec.  if v0 == 0 then goto L4826f8;
  #L4826f0.  call `onError`(v5) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4826f6.  goto L48272e;
  #L4826f8.  v0:= v4.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4826fc.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L482702.  goto L48272e;
  #L482704.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L482706.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48270c.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L482710.  v2:= 2I;
  #L482712.  v2:= new `java.lang.Throwable`[v2];
  #L482716.  v3:= 0I;
  #L482718.  v2[v3]:= v5 @kind object;
  #L48271c.  v5:= 1I;
  #L48271e.  v2[v5]:= v0 @kind object;
  #L482722.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L482728.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48272e.  return @kind void;
  catch `java.lang.Throwable` @[L4826f8..L482702] goto L482704;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48274c.  v0:= v2.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L482750.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L482756.  goto L482772;
  #L482758.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48275a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L482760.  v1:= 1I;
  #L482762.  v2.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @type ^`boolean` := v1 @kind boolean;
  #L482766.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L48276c.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L482772.  return @kind void;
  catch `java.lang.Throwable` @[L48274c..L482756] goto L482758;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482790.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @type ^`boolean` @kind boolean;
  #L482794.  if v0 != 0 then goto L4827b2;
  #L482798.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L48279c.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4827a2.  goto L4827b2;
  #L4827a4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4827a6.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4827ac.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4827b2.  return @kind void;
  catch `java.lang.Throwable` @[L482798..L4827a2] goto L4827a4;
}
