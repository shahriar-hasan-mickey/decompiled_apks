record `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v0 @kind this, `io.reactivex.rxjava3.functions.Predicate` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.<init>:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48184c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L481852.  v0.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.a` @type ^`io.reactivex.rxjava3.functions.Predicate` := v1 @kind object;
  #L481856.  v0.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L48185a.  v0.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` := v3 @kind object;
  #L48185e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L481870.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L481876.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481824.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L48182a.  v0:= temp @kind object;
  #L48182c.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L481830.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L481836.  v0:= temp;
  #L481838.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481888.  v0:= v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` @kind boolean;
  #L48188c.  if v0 == 0 then goto L481892;
  #L481890.  return @kind void;
  #L481892.  v0:= 1I;
  #L481894.  v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L481898.  v0:= v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L48189c.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4818a2.  goto L4818b2;
  #L4818a4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4818a6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4818ac.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4818b2.  return @kind void;
  catch `java.lang.Throwable` @[L481898..L4818a2] goto L4818a4;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4818d0.  v0:= v5.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` @kind boolean;
  #L4818d4.  if v0 == 0 then goto L4818e0;
  #L4818d8.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4818de.  return @kind void;
  #L4818e0.  v0:= 1I;
  #L4818e2.  v5.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L4818e6.  v1:= v5.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4818ea.  call `accept`(v1, v6) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4818f0.  goto L48191a;
  #L4818f2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4818f4.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4818fa.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4818fe.  v3:= 2I;
  #L481900.  v3:= new `java.lang.Throwable`[v3];
  #L481904.  v4:= 0I;
  #L481906.  v3[v4]:= v6 @kind object;
  #L48190a.  v3[v0]:= v1 @kind object;
  #L48190e.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L481914.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48191a.  return @kind void;
  catch `java.lang.Throwable` @[L4818e6..L4818f0] goto L4818f2;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481938.  v0:= v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` @kind boolean;
  #L48193c.  if v0 == 0 then goto L481942;
  #L481940.  return @kind void;
  #L481942.  v0:= v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.a` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L481946.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L48194c.  v2:= temp;
  #L48194e.  if v2 != 0 then goto L48195e;
  #L481952.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.dispose:()V` @kind virtual;
  #L481958.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onComplete:()V` @kind virtual;
  #L48195e.  return @kind void;
  #L481960.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L481962.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L481968.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.dispose:()V` @kind virtual;
  #L48196e.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L481974.  return @kind void;
  catch `java.lang.Throwable` @[L481942..L48194e] goto L481960;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L481994.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L48199a.  return @kind void;
}
