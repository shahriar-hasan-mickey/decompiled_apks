record `io.reactivex.rxjava3.internal.observers.LambdaObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.observers.LambdaConsumerIntrospection` @kind interface {
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.observers.LambdaObserver.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.observers.LambdaObserver.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.observers.LambdaObserver.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.observers.LambdaObserver.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.observers.LambdaObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48215c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L482162.  v0.`io.reactivex.rxjava3.internal.observers.LambdaObserver.a` @type ^`io.reactivex.rxjava3.functions.Consumer` := v1 @kind object;
  #L482166.  v0.`io.reactivex.rxjava3.internal.observers.LambdaObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L48216a.  v0.`io.reactivex.rxjava3.internal.observers.LambdaObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` := v3 @kind object;
  #L48216e.  v0.`io.reactivex.rxjava3.internal.observers.LambdaObserver.d` @type ^`io.reactivex.rxjava3.functions.Consumer` := v4 @kind object;
  #L482172.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L482184.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L48218a.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482110.  v0:= v2.`io.reactivex.rxjava3.internal.observers.LambdaObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L482114.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L482118.  if v0 == v1 then goto L482120;
  #L48211c.  v0:= 1I;
  #L48211e.  goto L482122;
  #L482120.  v0:= 0I;
  #L482122.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482134.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L48213a.  v0:= temp @kind object;
  #L48213c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L482140.  if v0 != v1 then goto L482148;
  #L482144.  v0:= 1I;
  #L482146.  goto L48214a;
  #L482148.  v0:= 0I;
  #L48214a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48219c.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L4821a2.  v0:= temp;
  #L4821a4.  if v0 != 0 then goto L4821cc;
  #L4821a8.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4821ac.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4821b2.  v0:= v1.`io.reactivex.rxjava3.internal.observers.LambdaObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4821b6.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4821bc.  goto L4821cc;
  #L4821be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4821c0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4821c6.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4821cc.  return @kind void;
  catch `java.lang.Throwable` @[L4821b2..L4821bc] goto L4821be;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4821ec.  call temp:= `isDisposed`(v4) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L4821f2.  v0:= temp;
  #L4821f4.  if v0 != 0 then goto L48223a;
  #L4821f8.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4821fc.  call `lazySet`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L482202.  v0:= v4.`io.reactivex.rxjava3.internal.observers.LambdaObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L482206.  call `accept`(v0, v5) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L48220c.  goto L482240;
  #L48220e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L482210.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L482216.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L48221a.  v2:= 2I;
  #L48221c.  v2:= new `java.lang.Throwable`[v2];
  #L482220.  v3:= 0I;
  #L482222.  v2[v3]:= v5 @kind object;
  #L482226.  v5:= 1I;
  #L482228.  v2[v5]:= v0 @kind object;
  #L48222c.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L482232.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L482238.  goto L482240;
  #L48223a.  call `onError`(v5) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L482240.  return @kind void;
  catch `java.lang.Throwable` @[L482202..L48220c] goto L48220e;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482260.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L482266.  v0:= temp;
  #L482268.  if v0 != 0 then goto L482298;
  #L48226c.  v0:= v1.`io.reactivex.rxjava3.internal.observers.LambdaObserver.a` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L482270.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L482276.  goto L482298;
  #L482278.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48227a.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L482280.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L482286.  v0:= temp @kind object;
  #L482288.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L48228c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L482292.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L482298.  return @kind void;
  catch `java.lang.Throwable` @[L48226c..L482276] goto L482278;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4822b8.  call temp:= `setOnce`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4822be.  v0:= temp;
  #L4822c0.  if v0 == 0 then goto L4822e4;
  #L4822c4.  v0:= v1.`io.reactivex.rxjava3.internal.observers.LambdaObserver.d` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4822c8.  call `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4822ce.  goto L4822e4;
  #L4822d0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4822d2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4822d8.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4822de.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4822e4.  return @kind void;
  catch `java.lang.Throwable` @[L4822c4..L4822ce] goto L4822d0;
}
