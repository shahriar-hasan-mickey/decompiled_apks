record `io.reactivex.rxjava3.internal.observers.BlockingBaseObserver` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.concurrent.CountDownLatch` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.a` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.b` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.d` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4808bc.  v0:= 1I;
  #L4808be.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L4808c4.  return @kind void;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L480850.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L480856.  v0:= temp @kind wide;
  #L480858.  v2:= 0L;
  #L48085c.  v4:= lcmp(v0, v2);
  #L480860.  if v4 == 0 then goto L480884;
  #L480864.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L48086a.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L480870.  goto L480884;
  #L480872.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L480874.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.dispose:()V` @kind virtual;
  #L48087a.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L480880.  v0:= temp @kind object;
  #L480882.  throw v0;
  #L480884.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L480888.  if v0 != 0 then goto L480892;
  #L48088c.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.a` @type ^`java.lang.Object` @kind object;
  #L480890.  return v0 @kind object;
  #L480892.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L480898.  v0:= temp @kind object;
  #L48089a.  throw v0;
  catch `java.lang.InterruptedException` @[L480864..L480870] goto L480872;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4808d8.  v0:= 1I;
  #L4808da.  v1.`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L4808de.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4808e2.  if v0 == 0 then goto L4808ec;
  #L4808e6.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4808ec.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L480838.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.d` @type ^`boolean` @kind boolean;
  #L48083c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.onComplete:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L480900.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L480906.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L480918.  v1.`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L48091c.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingBaseObserver.d` @type ^`boolean` @kind boolean;
  #L480920.  if v0 == 0 then goto L48092a;
  #L480924.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L48092a.  return @kind void;
}
