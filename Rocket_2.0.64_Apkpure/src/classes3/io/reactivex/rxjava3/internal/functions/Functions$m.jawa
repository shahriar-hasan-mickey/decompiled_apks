record `io.reactivex.rxjava3.internal.functions.Functions$m` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.functions.Predicate` @kind interface {
  `java.lang.Class` `io.reactivex.rxjava3.internal.functions.Functions$m.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.functions.Functions$m` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/functions/Functions$m;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47b0b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47b0b6.  v0.`io.reactivex.rxjava3.internal.functions.Functions$m.a` @type ^`java.lang.Class` := v1 @kind object;
  #L47b0ba.  return @kind void;
}
procedure `boolean` `test`(`io.reactivex.rxjava3.internal.functions.Functions$m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/functions/Functions$m;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47b090.  v0:= v1.`io.reactivex.rxjava3.internal.functions.Functions$m.a` @type ^`java.lang.Class` @kind object;
  #L47b094.  call temp:= `isInstance`(v0, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L47b09a.  v2:= temp;
  #L47b09c.  return v2;
}
