record `io.reactivex.rxjava3.internal.functions.ObjectHelper` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.rxjava3.functions.BiPredicate` `@@io.reactivex.rxjava3.internal.functions.ObjectHelper.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L47be3c.  v0:= new `io.reactivex.rxjava3.internal.functions.ObjectHelper$a`;
  #L47be40.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper$a;.<init>:()V` @kind direct;
  #L47be46.  `@@io.reactivex.rxjava3.internal.functions.ObjectHelper.a` @type ^`io.reactivex.rxjava3.functions.BiPredicate` := v0 @kind object;
  #L47be4a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.functions.ObjectHelper` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L47be5c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47be62.  v0:= new `java.lang.IllegalStateException`;
  #L47be66.  v1:= "No instances!" @kind object;
  #L47be6a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47be70.  throw v0;
}
procedure `io.reactivex.rxjava3.functions.BiPredicate` `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47bdd0.  v0:= `@@io.reactivex.rxjava3.internal.functions.ObjectHelper.a` @type ^`io.reactivex.rxjava3.functions.BiPredicate` @kind object;
  #L47bdd4.  return v0 @kind object;
}
procedure `int` `verifyPositive`(`int` v2 , `java.lang.String` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47bd84.  if v2 <= 0 then goto L47bd8a;
  #L47bd88.  return v2;
  #L47bd8a.  v0:= new `java.lang.IllegalArgumentException`;
  #L47bd8e.  v1:= new `java.lang.StringBuilder`;
  #L47bd92.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47bd98.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47bd9e.  v3:= " > 0 required but it was " @kind object;
  #L47bda2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47bda8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47bdae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47bdb4.  v2:= temp @kind object;
  #L47bdb6.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47bdbc.  throw v0;
}
procedure `long` `verifyPositive`(`long` v3 , `java.lang.String` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47bde8.  v0:= 0L;
  #L47bdec.  v2:= lcmp(v3, v0);
  #L47bdf0.  if v2 <= 0 then goto L47bdf6;
  #L47bdf4.  return v3 @kind wide;
  #L47bdf6.  v0:= new `java.lang.IllegalArgumentException`;
  #L47bdfa.  v1:= new `java.lang.StringBuilder`;
  #L47bdfe.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47be04.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47be0a.  v5:= " > 0 required but it was " @kind object;
  #L47be0e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47be14.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47be1a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47be20.  v3:= temp @kind object;
  #L47be22.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47be28.  throw v0;
}
