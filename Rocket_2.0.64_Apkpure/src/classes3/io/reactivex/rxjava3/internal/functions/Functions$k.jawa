record `io.reactivex.rxjava3.internal.functions.Functions$k` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.functions.Predicate` @kind interface {
  `io.reactivex.rxjava3.functions.BooleanSupplier` `io.reactivex.rxjava3.internal.functions.Functions$k.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.functions.Functions$k` v0 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/functions/Functions$k;.<init>:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47afe0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47afe6.  v0.`io.reactivex.rxjava3.internal.functions.Functions$k.a` @type ^`io.reactivex.rxjava3.functions.BooleanSupplier` := v1 @kind object;
  #L47afea.  return @kind void;
}
procedure `boolean` `test`(`io.reactivex.rxjava3.internal.functions.Functions$k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/functions/Functions$k;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L47afbc.  v1:= v0.`io.reactivex.rxjava3.internal.functions.Functions$k.a` @type ^`io.reactivex.rxjava3.functions.BooleanSupplier` @kind object;
  #L47afc0.  call temp:= `getAsBoolean`(v1) @signature `Lio/reactivex/rxjava3/functions/BooleanSupplier;.getAsBoolean:()Z` @kind interface;
  #L47afc6.  v1:= temp;
  #L47afc8.  v1:= v1 ^~ 1;
  #L47afcc.  return v1;
}
