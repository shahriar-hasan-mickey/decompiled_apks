record `io.reactivex.rxjava3.internal.subscriptions.BooleanSubscription` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `org.reactivestreams.Subscription` @kind interface {
}
global `long` `@@io.reactivex.rxjava3.internal.subscriptions.BooleanSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.subscriptions.BooleanSubscription` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BooleanSubscription;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4de718.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4de71e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.subscriptions.BooleanSubscription` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BooleanSubscription;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de730.  v0:= 1I;
  #L4de732.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.lazySet:(Z)V` @kind virtual;
  #L4de738.  return @kind void;
}
procedure `boolean` `isCancelled`(`io.reactivex.rxjava3.internal.subscriptions.BooleanSubscription` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BooleanSubscription;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de6b4.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4de6ba.  v0:= temp;
  #L4de6bc.  return v0;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.subscriptions.BooleanSubscription` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BooleanSubscription;.request:(J)V` @AccessFlag PUBLIC {
    temp;

  #L4de74c.  call temp:= `validate`(v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L4de752.  return @kind void;
}
procedure `java.lang.String` `toString`(`io.reactivex.rxjava3.internal.subscriptions.BooleanSubscription` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BooleanSubscription;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4de6d0.  v0:= new `java.lang.StringBuilder`;
  #L4de6d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4de6da.  v1:= "BooleanSubscription(cancelled=" @kind object;
  #L4de6de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4de6e4.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4de6ea.  v1:= temp;
  #L4de6ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4de6f2.  v1:= ")" @kind object;
  #L4de6f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4de6fc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4de702.  v0:= temp @kind object;
  #L4de704.  return v0 @kind object;
}
