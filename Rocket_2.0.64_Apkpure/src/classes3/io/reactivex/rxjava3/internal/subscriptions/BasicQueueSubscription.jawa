record `io.reactivex.rxjava3.internal.subscriptions.BasicQueueSubscription` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind interface {
}
global `long` `@@io.reactivex.rxjava3.internal.subscriptions.BasicQueueSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.subscriptions.BasicQueueSubscription` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BasicQueueSubscription;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4de69c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4de6a2.  return @kind void;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.subscriptions.BasicQueueSubscription` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BasicQueueSubscription;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4de65c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L4de660.  v0:= "Should not be called!" @kind object;
  #L4de664.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4de66a.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.subscriptions.BasicQueueSubscription` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BasicQueueSubscription;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4de67c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L4de680.  v2:= "Should not be called!" @kind object;
  #L4de684.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4de68a.  throw v1;
}
