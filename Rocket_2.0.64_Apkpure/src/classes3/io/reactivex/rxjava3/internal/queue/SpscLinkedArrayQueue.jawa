record `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind interface {
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.b` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.f` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @AccessFlag FINAL;
}
global `int` `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.i` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4d9598.  v0:= "jctools.spsc.max.lookahead.step" @kind object;
  #L4d959c.  v1:= 4096I;
  #L4d95a0.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L4d95a6.  v0:= temp @kind object;
  #L4d95a8.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4d95ae.  v0:= temp;
  #L4d95b0.  `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.i` @type ^`int` := v0;
  #L4d95b4.  v0:= new `java.lang.Object`;
  #L4d95b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d95be.  `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` := v0 @kind object;
  #L4d95c2.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4d95d4.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d95da.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4d95de.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4d95e4.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4d95e8.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4d95ec.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4d95f2.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4d95f6.  v0:= 8I;
  #L4d95fa.  call temp:= `max`(v0, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4d9600.  v4:= temp;
  #L4d9602.  call temp:= `roundToPowerOfTwo`(v4) @signature `Lio/reactivex/rxjava3/internal/util/Pow2;.roundToPowerOfTwo:(I)I` @kind static;
  #L4d9608.  v4:= temp;
  #L4d960a.  v0:= v4 + -1;
  #L4d960e.  v1:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L4d9612.  v2:= v4 + 1;
  #L4d9616.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L4d961c.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L4d9620.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.d` @type ^`int` := v0;
  #L4d9624.  call `a`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.a:(I)V` @kind direct;
  #L4d962a.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L4d962e.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.f` @type ^`int` := v0;
  #L4d9632.  v0:= v0 + -1;
  #L4d9636.  v0:= (`long`) v0 @kind i2l;
  #L4d9638.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v0 @kind wide;
  #L4d963c.  v0:= 0L;
  #L4d9640.  call `s`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L4d9646.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4d9658.  v2:= v2 / 4;
  #L4d965c.  v0:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.i` @type ^`int`;
  #L4d9660.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4d9666.  v2:= temp;
  #L4d9668.  v1.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.b` @type ^`int` := v2;
  #L4d966c.  return @kind void;
}
procedure `int` `e`(`int` v0 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4d932c.  return v0;
}
procedure `int` `f`(`long` v0 , `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4d9340.  v1:= (`int`) v0 @kind l2i;
  #L4d9342.  v0:= v1 ^& v2 @kind int;
  #L4d9346.  call temp:= `e`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L4d934c.  v0:= temp;
  #L4d934e.  return v0;
}
procedure `long` `g`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.g:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4d9518.  v0:= v2.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d951c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d9522.  v0:= temp @kind wide;
  #L4d9524.  return v0 @kind wide;
}
procedure `long` `h`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.h:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4d9538.  v0:= v2.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d953c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d9542.  v0:= temp @kind wide;
  #L4d9544.  return v0 @kind wide;
}
procedure `long` `i`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.i:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4d9558.  v0:= v2.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d955c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d9562.  v0:= temp @kind wide;
  #L4d9564.  return v0 @kind wide;
}
procedure `java.lang.Object` `j`(`java.util.concurrent.atomic.AtomicReferenceArray` v0 @kind object, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4d939c.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4d93a2.  v0:= temp @kind object;
  #L4d93a4.  return v0 @kind object;
}
procedure `java.util.concurrent.atomic.AtomicReferenceArray` `k`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4d94e8.  call temp:= `e`(v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L4d94ee.  v4:= temp;
  #L4d94f0.  call temp:= `j`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4d94f6.  v0:= temp @kind object;
  #L4d94f8.  v0:= (`java.util.concurrent.atomic.AtomicReferenceArray`) v0 @kind object;
  #L4d94fc.  v1:= 0I;
  #L4d94fe.  call `q`(v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d9504.  return v0 @kind object;
}
procedure `long` `l`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.l:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4d9578.  v0:= v2.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d957c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d9582.  v0:= temp @kind wide;
  #L4d9584.  return v0 @kind wide;
}
procedure `java.lang.Object` `m`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v0 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v1 @kind object, `long` v2 , `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.m:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;

  #L4d93b8.  v0.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L4d93bc.  call temp:= `f`(v2, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d93c2.  v2:= temp;
  #L4d93c4.  call temp:= `j`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4d93ca.  v1:= temp @kind object;
  #L4d93cc.  return v1 @kind object;
}
procedure `java.lang.Object` `n`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v3 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v4 @kind object, `long` v5 , `int` v7 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.n:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4d93e0.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v4 @kind object;
  #L4d93e4.  call temp:= `f`(v5, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d93ea.  v7:= temp;
  #L4d93ec.  call temp:= `j`(v4, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4d93f2.  v0:= temp @kind object;
  #L4d93f4.  if v0 == 0 then goto L4d940c;
  #L4d93f8.  v1:= 0I;
  #L4d93fa.  call `q`(v4, v7, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d9400.  v1:= 1L;
  #L4d9404.  v5:= v5 + v1 @kind long;
  #L4d9406.  call `p`(v3, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @kind direct;
  #L4d940c.  return v0 @kind object;
}
procedure `void` `o`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v4 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v5 @kind object, `long` v6 , `int` v8 , `java.lang.Object` v9 @kind object, `long` v10 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.o:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JILjava/lang/Object;J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d96ac.  call temp:= `length`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L4d96b2.  v0:= temp;
  #L4d96b4.  v1:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L4d96b8.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L4d96be.  v4.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L4d96c2.  v10:= v10 + v6 @kind long;
  #L4d96c4.  v2:= 1L;
  #L4d96c8.  v10:= v10 - v2 @kind long;
  #L4d96ca.  v4.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v10 @kind wide;
  #L4d96ce.  call `q`(v1, v8, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d96d4.  call `r`(v4, v5, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @kind direct;
  #L4d96da.  v9:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L4d96de.  call `q`(v5, v8, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d96e4.  v6:= v6 + v2 @kind long;
  #L4d96e6.  call `s`(v4, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L4d96ec.  return @kind void;
}
procedure `void` `p`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4d9700.  v0:= v1.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d9704.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L4d970a.  return @kind void;
}
procedure `void` `q`(`java.util.concurrent.atomic.AtomicReferenceArray` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4d971c.  call `lazySet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L4d9722.  return @kind void;
}
procedure `void` `r`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v2 @kind object, `java.util.concurrent.atomic.AtomicReferenceArray` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4d9734.  call temp:= `length`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L4d973a.  v0:= temp;
  #L4d973c.  v0:= v0 + -1;
  #L4d9740.  call temp:= `e`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L4d9746.  v0:= temp;
  #L4d9748.  call `q`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d974e.  return @kind void;
}
procedure `void` `s`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4d9760.  v0:= v1.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d9764.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L4d976a.  return @kind void;
}
procedure `boolean` `t`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v0 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v1 @kind object, `java.lang.Object` v2 @kind object, `long` v3 , `int` v5 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @AccessFlag PRIVATE {
    temp;

  #L4d9304.  call `q`(v1, v5, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d930a.  v1:= 1L;
  #L4d930e.  v3:= v3 + v1 @kind long;
  #L4d9310.  call `s`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L4d9316.  v1:= 1I;
  #L4d9318.  return v1;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d9680.  call temp:= `poll`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4d9686.  v0:= temp @kind object;
  #L4d9688.  if v0 != 0 then goto L4d9680;
  #L4d968c.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L4d9692.  v0:= temp;
  #L4d9694.  if v0 != 0 then goto L4d969a;
  #L4d9698.  goto L4d9680;
  #L4d969a.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d9178.  call temp:= `l`(v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L4d917e.  v0:= temp @kind wide;
  #L4d9180.  call temp:= `i`(v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L4d9186.  v2:= temp @kind wide;
  #L4d9188.  v4:= lcmp(v0, v2);
  #L4d918c.  if v4 != 0 then goto L4d9194;
  #L4d9190.  v0:= 1I;
  #L4d9192.  goto L4d9196;
  #L4d9194.  v0:= 0I;
  #L4d9196.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v11 @kind this, `java.lang.Object` v12 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4d91a8.  v0:= "Null is not a valid element" @kind object;
  #L4d91ac.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d91b2.  v2:= v11.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L4d91b6.  call temp:= `h`(v11) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.h:()J` @kind direct;
  #L4d91bc.  v4:= temp @kind wide;
  #L4d91be.  v0:= v11.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.d` @type ^`int`;
  #L4d91c2.  call temp:= `f`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d91c8.  v6:= temp;
  #L4d91ca.  v7:= v11.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` @kind wide;
  #L4d91ce.  v1:= lcmp(v4, v7);
  #L4d91d2.  if v1 >= 0 then goto L4d91e4;
  #L4d91d6.  v1:= v11 @kind object;
  #L4d91d8.  v3:= v12 @kind object;
  #L4d91da.  call temp:= `t`(v1, v2, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L4d91e0.  v12:= temp;
  #L4d91e2.  return v12;
  #L4d91e4.  v1:= v11.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.b` @type ^`int`;
  #L4d91e8.  v7:= (`long`) v1 @kind i2l;
  #L4d91ea.  v7:= v7 + v4 @kind long;
  #L4d91ec.  call temp:= `f`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d91f2.  v1:= temp;
  #L4d91f4.  call temp:= `j`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4d91fa.  v1:= temp @kind object;
  #L4d91fc.  v9:= 1L;
  #L4d9200.  if v1 != 0 then goto L4d9218;
  #L4d9204.  v7:= v7 - v9 @kind long;
  #L4d9206.  v11.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v7 @kind wide;
  #L4d920a.  v1:= v11 @kind object;
  #L4d920c.  v3:= v12 @kind object;
  #L4d920e.  call temp:= `t`(v1, v2, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L4d9214.  v12:= temp;
  #L4d9216.  return v12;
  #L4d9218.  v9:= v9 + v4 @kind long;
  #L4d921a.  call temp:= `f`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d9220.  v1:= temp;
  #L4d9222.  call temp:= `j`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4d9228.  v1:= temp @kind object;
  #L4d922a.  if v1 != 0 then goto L4d923c;
  #L4d922e.  v1:= v11 @kind object;
  #L4d9230.  v3:= v12 @kind object;
  #L4d9232.  call temp:= `t`(v1, v2, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L4d9238.  v12:= temp;
  #L4d923a.  return v12;
  #L4d923c.  v7:= (`long`) v0 @kind i2l;
  #L4d923e.  v1:= v11 @kind object;
  #L4d9240.  v3:= v4 @kind wide;
  #L4d9242.  v5:= v6;
  #L4d9244.  v6:= v12 @kind object;
  #L4d9246.  call `o`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.o:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JILjava/lang/Object;J)V` @kind direct;
  #L4d924c.  v12:= 1I;
  #L4d924e.  return v12;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v8 @kind this, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4d9260.  v0:= v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L4d9264.  call temp:= `l`(v8) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L4d926a.  v1:= temp @kind wide;
  #L4d926c.  v3:= v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.d` @type ^`int`;
  #L4d9270.  v4:= 2L;
  #L4d9274.  v4:= v4 + v1 @kind long;
  #L4d9276.  call temp:= `f`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d927c.  v6:= temp;
  #L4d927e.  call temp:= `j`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4d9284.  v6:= temp @kind object;
  #L4d9286.  if v6 != 0 then goto L4d92aa;
  #L4d928a.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d9290.  v1:= temp;
  #L4d9292.  v2:= v1 + 1;
  #L4d9296.  call `q`(v0, v2, v10) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d929c.  call `q`(v0, v1, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d92a2.  call `s`(v8, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L4d92a8.  goto L4d92ee;
  #L4d92aa.  call temp:= `length`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L4d92b0.  v6:= temp;
  #L4d92b2.  v7:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L4d92b6.  call `<init>`(v7, v6) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L4d92bc.  v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v7 @kind object;
  #L4d92c0.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d92c6.  v1:= temp;
  #L4d92c8.  v2:= v1 + 1;
  #L4d92cc.  call `q`(v7, v2, v10) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d92d2.  call `q`(v7, v1, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d92d8.  call `r`(v8, v0, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @kind direct;
  #L4d92de.  v9:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L4d92e2.  call `q`(v0, v1, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d92e8.  call `s`(v8, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L4d92ee.  v9:= 1I;
  #L4d92f0.  return v9;
}
procedure `java.lang.Object` `peek`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v6 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4d9420.  v0:= v6.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L4d9424.  call temp:= `g`(v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.g:()J` @kind direct;
  #L4d942a.  v1:= temp @kind wide;
  #L4d942c.  v3:= v6.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.f` @type ^`int`;
  #L4d9430.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d9436.  v4:= temp;
  #L4d9438.  call temp:= `j`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4d943e.  v4:= temp @kind object;
  #L4d9440.  v5:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L4d9444.  if v4 != v5 then goto L4d945e;
  #L4d9448.  v4:= v3 + 1;
  #L4d944c.  call temp:= `k`(v6, v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @kind direct;
  #L4d9452.  v0:= temp @kind object;
  #L4d9454.  call temp:= `m`(v6, v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.m:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @kind direct;
  #L4d945a.  v0:= temp @kind object;
  #L4d945c.  return v0 @kind object;
  #L4d945e.  return v4 @kind object;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v8 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4d9470.  v0:= v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L4d9474.  call temp:= `g`(v8) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.g:()J` @kind direct;
  #L4d947a.  v1:= temp @kind wide;
  #L4d947c.  v3:= v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.f` @type ^`int`;
  #L4d9480.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L4d9486.  v4:= temp;
  #L4d9488.  call temp:= `j`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L4d948e.  v5:= temp @kind object;
  #L4d9490.  v6:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L4d9494.  if v5 != v6 then goto L4d949c;
  #L4d9498.  v6:= 1I;
  #L4d949a.  goto L4d949e;
  #L4d949c.  v6:= 0I;
  #L4d949e.  v7:= 0I;
  #L4d94a0.  if v5 == 0 then goto L4d94bc;
  #L4d94a4.  if v6 != 0 then goto L4d94bc;
  #L4d94a8.  call `q`(v0, v4, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L4d94ae.  v3:= 1L;
  #L4d94b2.  v1:= v1 + v3 @kind long;
  #L4d94b4.  call `p`(v8, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @kind direct;
  #L4d94ba.  return v5 @kind object;
  #L4d94bc.  if v6 == 0 then goto L4d94d6;
  #L4d94c0.  v4:= v3 + 1;
  #L4d94c4.  call temp:= `k`(v8, v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @kind direct;
  #L4d94ca.  v0:= temp @kind object;
  #L4d94cc.  call temp:= `n`(v8, v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.n:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @kind direct;
  #L4d94d2.  v0:= temp @kind object;
  #L4d94d4.  return v0 @kind object;
  #L4d94d6.  return v7 @kind object;
}
procedure `int` `size`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v7 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4d9360.  call temp:= `i`(v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L4d9366.  v0:= temp @kind wide;
  #L4d9368.  call temp:= `l`(v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L4d936e.  v2:= temp @kind wide;
  #L4d9370.  call temp:= `i`(v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L4d9376.  v4:= temp @kind wide;
  #L4d9378.  v6:= lcmp(v0, v4);
  #L4d937c.  if v6 != 0 then goto L4d9386;
  #L4d9380.  v2:= v2 - v4 @kind long;
  #L4d9382.  v0:= (`int`) v2 @kind l2i;
  #L4d9384.  return v0;
  #L4d9386.  v0:= v4 @kind wide;
  #L4d9388.  goto L4d9368;
}
