record `io.reactivex.rxjava3.internal.queue.SpscArrayQueue` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind interface {
  `int` `io.reactivex.rxjava3.internal.queue.SpscArrayQueue.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.queue.SpscArrayQueue.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.queue.SpscArrayQueue.c` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.queue.SpscArrayQueue.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.queue.SpscArrayQueue.e` @AccessFlag FINAL;
}
global `java.lang.Integer` `@@io.reactivex.rxjava3.internal.queue.SpscArrayQueue.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@io.reactivex.rxjava3.internal.queue.SpscArrayQueue.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4d906c.  v0:= "jctools.spsc.max.lookahead.step" @kind object;
  #L4d9070.  v1:= 4096I;
  #L4d9074.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L4d907a.  v0:= temp @kind object;
  #L4d907c.  `@@io.reactivex.rxjava3.internal.queue.SpscArrayQueue.f` @type ^`java.lang.Integer` := v0 @kind object;
  #L4d9080.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4d9094.  call temp:= `roundToPowerOfTwo`(v2) @signature `Lio/reactivex/rxjava3/internal/util/Pow2;.roundToPowerOfTwo:(I)I` @kind static;
  #L4d909a.  v0:= temp;
  #L4d909c.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L4d90a2.  call temp:= `length`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L4d90a8.  v0:= temp;
  #L4d90aa.  v0:= v0 + -1;
  #L4d90ae.  v1.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.a` @type ^`int` := v0;
  #L4d90b2.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4d90b6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4d90bc.  v1.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.b` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4d90c0.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4d90c4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4d90ca.  v1.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4d90ce.  v2:= v2 / 4;
  #L4d90d2.  v0:= `@@io.reactivex.rxjava3.internal.queue.SpscArrayQueue.f` @type ^`java.lang.Integer` @kind object;
  #L4d90d6.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4d90dc.  v0:= temp;
  #L4d90de.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4d90e4.  v2:= temp;
  #L4d90e6.  v1.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.e` @type ^`int` := v2;
  #L4d90ea.  return @kind void;
}
procedure `int` `a`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.a:(J)I` @AccessFlag  {
    temp;

  #L4d8fd4.  v2:= (`int`) v1 @kind l2i;
  #L4d8fd6.  v1:= v0.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.a` @type ^`int`;
  #L4d8fda.  v1:= v1 ^& v2 @kind int;
  #L4d8fdc.  return v1;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d90fc.  call temp:= `poll`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4d9102.  v0:= temp @kind object;
  #L4d9104.  if v0 != 0 then goto L4d90fc;
  #L4d9108.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.isEmpty:()Z` @kind virtual;
  #L4d910e.  v0:= temp;
  #L4d9110.  if v0 != 0 then goto L4d9116;
  #L4d9114.  goto L4d90fc;
  #L4d9116.  return @kind void;
}
procedure `int` `e`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v0 @kind this, `long` v1 , `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.e:(JI)I` @AccessFlag  {
    temp;

  #L4d8ff0.  v2:= (`int`) v1 @kind l2i;
  #L4d8ff2.  v1:= v2 ^& v3 @kind int;
  #L4d8ff6.  return v1;
}
procedure `java.lang.Object` `f`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.f:(I)Ljava/lang/Object;` @AccessFlag  {
    temp;

  #L4d9008.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4d900e.  v1:= temp @kind object;
  #L4d9010.  return v1 @kind object;
}
procedure `void` `g`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.g:(J)V` @AccessFlag  {
    temp;
    v0;

  #L4d9128.  v0:= v1.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d912c.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L4d9132.  return @kind void;
}
procedure `void` `h`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.h:(ILjava/lang/Object;)V` @AccessFlag  {
    temp;

  #L4d9144.  call `lazySet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L4d914a.  return @kind void;
}
procedure `void` `i`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.i:(J)V` @AccessFlag  {
    temp;
    v0;

  #L4d915c.  v0:= v1.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.b` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d9160.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L4d9166.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d8ee4.  v0:= v5.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.b` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d8ee8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d8eee.  v0:= temp @kind wide;
  #L4d8ef0.  v2:= v5.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d8ef4.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d8efa.  v2:= temp @kind wide;
  #L4d8efc.  v4:= lcmp(v0, v2);
  #L4d8f00.  if v4 != 0 then goto L4d8f08;
  #L4d8f04.  v0:= 1I;
  #L4d8f06.  goto L4d8f0a;
  #L4d8f08.  v0:= 0I;
  #L4d8f0a.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4d8f1c.  v0:= "Null is not a valid element" @kind object;
  #L4d8f20.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d8f26.  v0:= v7.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.a` @type ^`int`;
  #L4d8f2a.  v1:= v7.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.b` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d8f2e.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d8f34.  v1:= temp @kind wide;
  #L4d8f36.  call temp:= `e`(v7, v1, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.e:(JI)I` @kind virtual;
  #L4d8f3c.  v3:= temp;
  #L4d8f3e.  v4:= v7.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.c` @type ^`long` @kind wide;
  #L4d8f42.  v6:= lcmp(v1, v4);
  #L4d8f46.  if v6 < 0 then goto L4d8f7c;
  #L4d8f4a.  v4:= v7.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.e` @type ^`int`;
  #L4d8f4e.  v4:= (`long`) v4 @kind i2l;
  #L4d8f50.  v4:= v4 + v1 @kind long;
  #L4d8f52.  call temp:= `e`(v7, v4, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.e:(JI)I` @kind virtual;
  #L4d8f58.  v0:= temp;
  #L4d8f5a.  call temp:= `f`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.f:(I)Ljava/lang/Object;` @kind virtual;
  #L4d8f60.  v0:= temp @kind object;
  #L4d8f62.  if v0 != 0 then goto L4d8f6c;
  #L4d8f66.  v7.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.c` @type ^`long` := v4 @kind wide;
  #L4d8f6a.  goto L4d8f7c;
  #L4d8f6c.  call temp:= `f`(v7, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.f:(I)Ljava/lang/Object;` @kind virtual;
  #L4d8f72.  v0:= temp @kind object;
  #L4d8f74.  if v0 == 0 then goto L4d8f7c;
  #L4d8f78.  v8:= 0I;
  #L4d8f7a.  return v8;
  #L4d8f7c.  call `h`(v7, v3, v8) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.h:(ILjava/lang/Object;)V` @kind virtual;
  #L4d8f82.  v3:= 1L;
  #L4d8f86.  v1:= v1 + v3 @kind long;
  #L4d8f88.  call `i`(v7, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.i:(J)V` @kind virtual;
  #L4d8f8e.  v8:= 1I;
  #L4d8f90.  return v8;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L4d8fa4.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8faa.  v1:= temp;
  #L4d8fac.  if v1 == 0 then goto L4d8fc0;
  #L4d8fb0.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8fb6.  v1:= temp;
  #L4d8fb8.  if v1 == 0 then goto L4d8fc0;
  #L4d8fbc.  v1:= 1I;
  #L4d8fbe.  goto L4d8fc2;
  #L4d8fc0.  v1:= 0I;
  #L4d8fc2.  return v1;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v7 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4d9024.  v0:= v7.`io.reactivex.rxjava3.internal.queue.SpscArrayQueue.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d9028.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d902e.  v0:= temp @kind wide;
  #L4d9030.  call temp:= `a`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.a:(J)I` @kind virtual;
  #L4d9036.  v2:= temp;
  #L4d9038.  call temp:= `f`(v7, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.f:(I)Ljava/lang/Object;` @kind virtual;
  #L4d903e.  v3:= temp @kind object;
  #L4d9040.  v4:= 0I;
  #L4d9042.  if v3 != 0 then goto L4d9048;
  #L4d9046.  return v4 @kind object;
  #L4d9048.  v5:= 1L;
  #L4d904c.  v0:= v0 + v5 @kind long;
  #L4d904e.  call `g`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.g:(J)V` @kind virtual;
  #L4d9054.  call `h`(v7, v2, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.h:(ILjava/lang/Object;)V` @kind virtual;
  #L4d905a.  return v3 @kind object;
}
