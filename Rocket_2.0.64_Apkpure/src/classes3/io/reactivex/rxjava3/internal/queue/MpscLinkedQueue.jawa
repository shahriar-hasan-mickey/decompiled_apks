record `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4d8e50.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d8e56.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4d8e5a.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d8e60.  v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4d8e64.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4d8e68.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d8e6e.  v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4d8e72.  v0:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`;
  #L4d8e76.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.<init>:()V` @kind direct;
  #L4d8e7c.  call `g`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L4d8e82.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L4d8e88.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` `a`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L4d8d5c.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d8d60.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d8d66.  v0:= temp @kind object;
  #L4d8d68.  v0:= (`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L4d8d6c.  return v0 @kind object;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d8e9c.  call temp:= `poll`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4d8ea2.  v0:= temp @kind object;
  #L4d8ea4.  if v0 == 0 then goto L4d8eb6;
  #L4d8ea8.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L4d8eae.  v0:= temp;
  #L4d8eb0.  if v0 != 0 then goto L4d8eb6;
  #L4d8eb4.  goto L4d8e9c;
  #L4d8eb6.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` `e`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.e:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L4d8d80.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d8d84.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d8d8a.  v0:= temp @kind object;
  #L4d8d8c.  v0:= (`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L4d8d90.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` `f`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L4d8da4.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d8da8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d8dae.  v0:= temp @kind object;
  #L4d8db0.  v0:= (`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L4d8db4.  return v0 @kind object;
}
procedure `void` `g`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @AccessFlag  {
    temp;
    v0;

  #L4d8ec8.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d8ecc.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4d8ed2.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` `h`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L4d8dc8.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d8dcc.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4d8dd2.  v2:= temp @kind object;
  #L4d8dd4.  v2:= (`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`) v2 @kind object;
  #L4d8dd8.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d8cd8.  call temp:= `e`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.e:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L4d8cde.  v0:= temp @kind object;
  #L4d8ce0.  call temp:= `f`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L4d8ce6.  v1:= temp @kind object;
  #L4d8ce8.  if v0 != v1 then goto L4d8cf0;
  #L4d8cec.  v0:= 1I;
  #L4d8cee.  goto L4d8cf2;
  #L4d8cf0.  v0:= 0I;
  #L4d8cf2.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d8d04.  v0:= "Null is not a valid element" @kind object;
  #L4d8d08.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d8d0e.  v0:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`;
  #L4d8d12.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4d8d18.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L4d8d1e.  v2:= temp @kind object;
  #L4d8d20.  call `d`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.d:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L4d8d26.  v2:= 1I;
  #L4d8d28.  return v2;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L4d8d3c.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8d42.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8d48.  v1:= 1I;
  #L4d8d4a.  return v1;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d8dec.  call temp:= `a`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L4d8df2.  v0:= temp @kind object;
  #L4d8df4.  call temp:= `c`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.c:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L4d8dfa.  v1:= temp @kind object;
  #L4d8dfc.  if v1 == 0 then goto L4d8e10;
  #L4d8e00.  call temp:= `a`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L4d8e06.  v0:= temp @kind object;
  #L4d8e08.  call `g`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L4d8e0e.  return v0 @kind object;
  #L4d8e10.  call temp:= `f`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L4d8e16.  v1:= temp @kind object;
  #L4d8e18.  if v0 == v1 then goto L4d8e3a;
  #L4d8e1c.  call temp:= `c`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.c:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L4d8e22.  v1:= temp @kind object;
  #L4d8e24.  if v1 != 0 then goto L4d8e2a;
  #L4d8e28.  goto L4d8e1c;
  #L4d8e2a.  call temp:= `a`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L4d8e30.  v0:= temp @kind object;
  #L4d8e32.  call `g`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L4d8e38.  return v0 @kind object;
  #L4d8e3a.  v0:= 0I;
  #L4d8e3c.  return v0 @kind object;
}
