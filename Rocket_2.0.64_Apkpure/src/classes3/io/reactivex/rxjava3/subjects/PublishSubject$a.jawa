record `io.reactivex.rxjava3.subjects.PublishSubject$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.subjects.PublishSubject$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.subjects.PublishSubject` `io.reactivex.rxjava3.subjects.PublishSubject$a.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.subjects.PublishSubject$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.subjects.PublishSubject` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/subjects/PublishSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f1f74.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4f1f7a.  v0.`io.reactivex.rxjava3.subjects.PublishSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f1f7e.  v0.`io.reactivex.rxjava3.subjects.PublishSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.PublishSubject` := v2 @kind object;
  #L4f1f82.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f1fc0.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4f1fc6.  v0:= temp;
  #L4f1fc8.  if v0 != 0 then goto L4f1fd6;
  #L4f1fcc.  v0:= v1.`io.reactivex.rxjava3.subjects.PublishSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f1fd0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f1fd6.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.b:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f1fe8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4f1fee.  v0:= temp;
  #L4f1ff0.  if v0 == 0 then goto L4f1ffc;
  #L4f1ff4.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f1ffa.  goto L4f2006;
  #L4f1ffc.  v0:= v1.`io.reactivex.rxjava3.subjects.PublishSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f2000.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f2006.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.c:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f2018.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4f201e.  v0:= temp;
  #L4f2020.  if v0 != 0 then goto L4f202e;
  #L4f2024.  v0:= v1.`io.reactivex.rxjava3.subjects.PublishSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f2028.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f202e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f1f94.  v0:= 0I;
  #L4f1f96.  v1:= 1I;
  #L4f1f98.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4f1f9e.  v0:= temp;
  #L4f1fa0.  if v0 == 0 then goto L4f1fae;
  #L4f1fa4.  v0:= v2.`io.reactivex.rxjava3.subjects.PublishSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.PublishSubject` @kind object;
  #L4f1fa8.  call `e`(v0, v2) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject;.e:(Lio/reactivex/rxjava3/subjects/PublishSubject$a;)V` @kind virtual;
  #L4f1fae.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f1f58.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4f1f5e.  v0:= temp;
  #L4f1f60.  return v0;
}
