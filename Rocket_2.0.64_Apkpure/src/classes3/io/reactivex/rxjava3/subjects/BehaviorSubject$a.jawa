record `io.reactivex.rxjava3.subjects.BehaviorSubject$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.subjects.BehaviorSubject` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.d` @AccessFlag ;
  `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @AccessFlag VOLATILE;
  `long` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.subjects.BehaviorSubject` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/subjects/BehaviorSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f0fdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f0fe2.  v0.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f0fe6.  v0.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.BehaviorSubject` := v2 @kind object;
  #L4f0fea.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f1028.  v0:= v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L4f102c.  if v0 == 0 then goto L4f1032;
  #L4f1030.  return @kind void;
  #L4f1032.  @monitorenter v4
  #L4f1034.  v0:= v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L4f1038.  if v0 == 0 then goto L4f1040;
  #L4f103c.  @monitorexit v4
  #L4f103e.  return @kind void;
  #L4f1040.  v0:= v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.c` @type ^`boolean` @kind boolean;
  #L4f1044.  if v0 == 0 then goto L4f104c;
  #L4f1048.  @monitorexit v4
  #L4f104a.  return @kind void;
  #L4f104c.  v0:= v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.BehaviorSubject` @kind object;
  #L4f1050.  v1:= v0.`io.reactivex.rxjava3.subjects.BehaviorSubject.d` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L4f1054.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L4f105a.  v2:= v0.`io.reactivex.rxjava3.subjects.BehaviorSubject.g` @type ^`long` @kind wide;
  #L4f105e.  v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.h` @type ^`long` := v2 @kind wide;
  #L4f1062.  v0:= v0.`io.reactivex.rxjava3.subjects.BehaviorSubject.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f1066.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4f106c.  v0:= temp @kind object;
  #L4f106e.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L4f1074.  v1:= 1I;
  #L4f1076.  if v0 == 0 then goto L4f107e;
  #L4f107a.  v2:= 1I;
  #L4f107c.  goto L4f1080;
  #L4f107e.  v2:= 0I;
  #L4f1080.  v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4f1084.  v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.c` @type ^`boolean` := v1 @kind boolean;
  #L4f1088.  @monitorexit v4
  #L4f108a.  if v0 == 0 then goto L4f10a2;
  #L4f108e.  call temp:= `test`(v4, v0) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f1094.  v0:= temp;
  #L4f1096.  if v0 == 0 then goto L4f109c;
  #L4f109a.  return @kind void;
  #L4f109c.  call `b`(v4) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.b:()V` @kind virtual;
  #L4f10a2.  return @kind void;
  #L4f10a4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f10a6.  @monitorexit v4
  #L4f10a8.  throw v0;
  catch `java.lang.Throwable` @[L4f1034..L4f108a] goto L4f10a4;
  catch `java.lang.Throwable` @[L4f10a6..L4f10a8] goto L4f10a4;
}
procedure `void` `b`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4f10d0.  v0:= v2.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L4f10d4.  if v0 == 0 then goto L4f10da;
  #L4f10d8.  return @kind void;
  #L4f10da.  @monitorenter v2
  #L4f10dc.  v0:= v2.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f10e0.  if v0 != 0 then goto L4f10ee;
  #L4f10e4.  v0:= 0I;
  #L4f10e6.  v2.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4f10ea.  @monitorexit v2
  #L4f10ec.  return @kind void;
  #L4f10ee.  v1:= 0I;
  #L4f10f0.  v2.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L4f10f4.  @monitorexit v2
  #L4f10f6.  call `forEachWhile`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.forEachWhile:(Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V` @kind virtual;
  #L4f10fc.  goto L4f10d0;
  #L4f10fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f1100.  @monitorexit v2
  #L4f1102.  throw v0;
  catch `java.lang.Throwable` @[L4f10dc..L4f10f6] goto L4f10fe;
  catch `java.lang.Throwable` @[L4f1100..L4f1102] goto L4f10fe;
}
procedure `void` `c`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v3 @kind this, `java.lang.Object` v4 @kind object, `long` v5 ) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.c:(Ljava/lang/Object;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4f1128.  v0:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L4f112c.  if v0 == 0 then goto L4f1132;
  #L4f1130.  return @kind void;
  #L4f1132.  v0:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.f` @type ^`boolean` @kind boolean;
  #L4f1136.  if v0 != 0 then goto L4f1196;
  #L4f113a.  @monitorenter v3
  #L4f113c.  v0:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L4f1140.  if v0 == 0 then goto L4f1148;
  #L4f1144.  @monitorexit v3
  #L4f1146.  return @kind void;
  #L4f1148.  v0:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.h` @type ^`long` @kind wide;
  #L4f114c.  v2:= lcmp(v0, v5);
  #L4f1150.  if v2 != 0 then goto L4f1158;
  #L4f1154.  @monitorexit v3
  #L4f1156.  return @kind void;
  #L4f1158.  v5:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.d` @type ^`boolean` @kind boolean;
  #L4f115c.  if v5 == 0 then goto L4f1182;
  #L4f1160.  v5:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f1164.  if v5 != 0 then goto L4f1178;
  #L4f1168.  v5:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L4f116c.  v6:= 4I;
  #L4f116e.  call `<init>`(v5, v6) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L4f1174.  v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v5 @kind object;
  #L4f1178.  call `add`(v5, v4) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L4f117e.  @monitorexit v3
  #L4f1180.  return @kind void;
  #L4f1182.  v5:= 1I;
  #L4f1184.  v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.c` @type ^`boolean` := v5 @kind boolean;
  #L4f1188.  @monitorexit v3
  #L4f118a.  v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.f` @type ^`boolean` := v5 @kind boolean;
  #L4f118e.  goto L4f1196;
  #L4f1190.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f1192.  @monitorexit v3
  #L4f1194.  throw v4;
  #L4f1196.  call temp:= `test`(v3, v4) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f119c.  return @kind void;
  catch `java.lang.Throwable` @[L4f113c..L4f118a] goto L4f1190;
  catch `java.lang.Throwable` @[L4f1192..L4f1194] goto L4f1190;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0ffc.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L4f1000.  if v0 != 0 then goto L4f1014;
  #L4f1004.  v0:= 1I;
  #L4f1006.  v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4f100a.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.BehaviorSubject` @kind object;
  #L4f100e.  call `e`(v0, v1) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject;.e:(Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;)V` @kind virtual;
  #L4f1014.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0f90.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L4f0f94.  return v0;
}
procedure `boolean` `test`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0fa8.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L4f0fac.  if v0 != 0 then goto L4f0fc6;
  #L4f0fb0.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f0fb4.  call temp:= `accept`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.accept:(Ljava/lang/Object;Lio/reactivex/rxjava3/core/Observer;)Z` @kind static;
  #L4f0fba.  v2:= temp;
  #L4f0fbc.  if v2 == 0 then goto L4f0fc2;
  #L4f0fc0.  goto L4f0fc6;
  #L4f0fc2.  v2:= 0I;
  #L4f0fc4.  goto L4f0fc8;
  #L4f0fc6.  v2:= 1I;
  #L4f0fc8.  return v2;
}
