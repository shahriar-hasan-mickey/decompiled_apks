record `io.reactivex.rxjava3.subjects.UnicastSubject$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.BasicIntQueueDisposable` @kind class {
  `io.reactivex.rxjava3.subjects.UnicastSubject` `io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@io.reactivex.rxjava3.subjects.UnicastSubject$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v0 @kind this, `io.reactivex.rxjava3.subjects.UnicastSubject` v1 @kind object) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.<init>:(Lio/reactivex/rxjava3/subjects/UnicastSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f3d4c.  v0.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` := v1 @kind object;
  #L4f3d50.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L4f3d56.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3d68.  v0:= v1.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3d6c.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.a` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4f3d70.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4f3d76.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f3d88.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3d8c.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.e` @type ^`boolean` @kind boolean;
  #L4f3d90.  if v0 != 0 then goto L4f3df0;
  #L4f3d94.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3d98.  v1:= 1I;
  #L4f3d9a.  v0.`io.reactivex.rxjava3.subjects.UnicastSubject.e` @type ^`boolean` := v1 @kind boolean;
  #L4f3d9e.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3da2.  call `d`(v0) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject;.d:()V` @kind virtual;
  #L4f3da8.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3dac.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f3db0.  v1:= 0I;
  #L4f3db2.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4f3db8.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3dbc.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.i` @type ^`io.reactivex.rxjava3.internal.observers.BasicIntQueueDisposable` @kind object;
  #L4f3dc0.  call temp:= `getAndIncrement`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4f3dc6.  v0:= temp;
  #L4f3dc8.  if v0 != 0 then goto L4f3df0;
  #L4f3dcc.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3dd0.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f3dd4.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4f3dda.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3dde.  v1:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.j` @type ^`boolean` @kind boolean;
  #L4f3de2.  if v1 != 0 then goto L4f3df0;
  #L4f3de6.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.a` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4f3dea.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4f3df0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3cc0.  v0:= v1.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3cc4.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.e` @type ^`boolean` @kind boolean;
  #L4f3cc8.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3cdc.  v0:= v1.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3ce0.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.a` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4f3ce4.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L4f3cea.  v0:= temp;
  #L4f3cec.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3d28.  v0:= v1.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3d2c.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.a` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4f3d30.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4f3d36.  v0:= temp @kind object;
  #L4f3d38.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f3d00.  v0:= 2I;
  #L4f3d02.  v3:= v3 ^& v0 @kind int;
  #L4f3d04.  if v3 == 0 then goto L4f3d14;
  #L4f3d08.  v3:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L4f3d0c.  v1:= 1I;
  #L4f3d0e.  v3.`io.reactivex.rxjava3.subjects.UnicastSubject.j` @type ^`boolean` := v1 @kind boolean;
  #L4f3d12.  return v0;
  #L4f3d14.  v3:= 0I;
  #L4f3d16.  return v3;
}
