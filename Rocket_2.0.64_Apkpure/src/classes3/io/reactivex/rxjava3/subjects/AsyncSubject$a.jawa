record `io.reactivex.rxjava3.subjects.AsyncSubject$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable` @kind class {
  `io.reactivex.rxjava3.subjects.AsyncSubject` `io.reactivex.rxjava3.subjects.AsyncSubject$a.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.subjects.AsyncSubject$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.AsyncSubject$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.subjects.AsyncSubject` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/AsyncSubject$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/subjects/AsyncSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f0ad8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4f0ade.  v0.`io.reactivex.rxjava3.subjects.AsyncSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.AsyncSubject` := v2 @kind object;
  #L4f0ae2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subjects.AsyncSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/AsyncSubject$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0af4.  call temp:= `tryDispose`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.tryDispose:()Z` @kind super;
  #L4f0afa.  v0:= temp;
  #L4f0afc.  if v0 == 0 then goto L4f0b0a;
  #L4f0b00.  v0:= v1.`io.reactivex.rxjava3.subjects.AsyncSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.AsyncSubject` @kind object;
  #L4f0b04.  call `e`(v0, v1) @signature `Lio/reactivex/rxjava3/subjects/AsyncSubject;.e:(Lio/reactivex/rxjava3/subjects/AsyncSubject$a;)V` @kind virtual;
  #L4f0b0a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.subjects.AsyncSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/AsyncSubject$a;.onComplete:()V` @AccessFlag  {
    temp;
    v0;

  #L4f0b1c.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4f0b22.  v0:= temp;
  #L4f0b24.  if v0 != 0 then goto L4f0b32;
  #L4f0b28.  v0:= v1.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f0b2c.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f0b32.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.subjects.AsyncSubject$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/AsyncSubject$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L4f0b44.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4f0b4a.  v0:= temp;
  #L4f0b4c.  if v0 == 0 then goto L4f0b58;
  #L4f0b50.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f0b56.  goto L4f0b62;
  #L4f0b58.  v0:= v1.`io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f0b5c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f0b62.  return @kind void;
}
