record `io.reactivex.rxjava3.subjects.ReplaySubject$g` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.subjects.ReplaySubject$b` @kind interface {
  `java.util.List` `io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.subjects.ReplaySubject$g.b` @AccessFlag VOLATILE;
  `int` `io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.subjects.ReplaySubject$g.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4f2dd8.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4f2dde.  v0:= new `java.util.ArrayList`;
  #L4f2de2.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4f2de8.  v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` := v0 @kind object;
  #L4f2dec.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v9 @kind this, `io.reactivex.rxjava3.subjects.ReplaySubject$c` v10 @kind object) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.a:(Lio/reactivex/rxjava3/subjects/ReplaySubject$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4f2e5c.  call temp:= `getAndIncrement`(v10) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4f2e62.  v0:= temp;
  #L4f2e64.  if v0 == 0 then goto L4f2e6a;
  #L4f2e68.  return @kind void;
  #L4f2e6a.  v0:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L4f2e6e.  v1:= v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f2e72.  v2:= v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` @kind object;
  #L4f2e76.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L4f2e7a.  v3:= 0I;
  #L4f2e7c.  v4:= 1I;
  #L4f2e7e.  if v2 == 0 then goto L4f2e8c;
  #L4f2e82.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4f2e88.  v3:= temp;
  #L4f2e8a.  goto L4f2e98;
  #L4f2e8c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4f2e92.  v2:= temp @kind object;
  #L4f2e94.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v2 @kind object;
  #L4f2e98.  v2:= 1I;
  #L4f2e9a.  v5:= v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.d` @type ^`boolean` @kind boolean;
  #L4f2e9e.  v6:= 0I;
  #L4f2ea0.  if v5 == 0 then goto L4f2eaa;
  #L4f2ea4.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v6 @kind object;
  #L4f2ea8.  return @kind void;
  #L4f2eaa.  v5:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L4f2eae.  if v5 == v3 then goto L4f2f18;
  #L4f2eb2.  v7:= v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.d` @type ^`boolean` @kind boolean;
  #L4f2eb6.  if v7 == 0 then goto L4f2ec0;
  #L4f2eba.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v6 @kind object;
  #L4f2ebe.  return @kind void;
  #L4f2ec0.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f2ec6.  v7:= temp @kind object;
  #L4f2ec8.  v8:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.b` @type ^`boolean` @kind boolean;
  #L4f2ecc.  if v8 == 0 then goto L4f2f0c;
  #L4f2ed0.  v8:= v3 + 1;
  #L4f2ed4.  if v8 != v5 then goto L4f2f0c;
  #L4f2ed8.  v5:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L4f2edc.  if v8 != v5 then goto L4f2f0c;
  #L4f2ee0.  call temp:= `isComplete`(v7) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4f2ee6.  v0:= temp;
  #L4f2ee8.  if v0 == 0 then goto L4f2ef4;
  #L4f2eec.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f2ef2.  goto L4f2f02;
  #L4f2ef4.  call temp:= `getError`(v7) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L4f2efa.  v0:= temp @kind object;
  #L4f2efc.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f2f02.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v6 @kind object;
  #L4f2f06.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.d` @type ^`boolean` := v4 @kind boolean;
  #L4f2f0a.  return @kind void;
  #L4f2f0c.  call `onNext`(v1, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f2f12.  v3:= v3 + 1;
  #L4f2f16.  goto L4f2eae;
  #L4f2f18.  v5:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L4f2f1c.  if v3 == v5 then goto L4f2f22;
  #L4f2f20.  goto L4f2e9a;
  #L4f2f22.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4f2f28.  v5:= temp @kind object;
  #L4f2f2a.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v5 @kind object;
  #L4f2f2e.  v2:= -v2 @kind int;
  #L4f2f30.  call temp:= `addAndGet`(v10, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4f2f36.  v2:= temp;
  #L4f2f38.  if v2 != 0 then goto L4f2e9a;
  #L4f2f3c.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f2e00.  v0:= v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L4f2e04.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4f2e0a.  v2:= v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L4f2e0e.  v2:= v2 + 1;
  #L4f2e12.  v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int` := v2;
  #L4f2e16.  return @kind void;
}
procedure `java.lang.Object`[] `c`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v6 @kind this, `java.lang.Object`[] v7 @kind object) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.c:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4f2d30.  v0:= v6.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L4f2d34.  v1:= 0I;
  #L4f2d36.  v2:= 0I;
  #L4f2d38.  if v0 != 0 then goto L4f2d48;
  #L4f2d3c.  v0:= length @variable v7;
  #L4f2d3e.  if v0 == 0 then goto L4f2d46;
  #L4f2d42.  v7[v2]:= v1 @kind object;
  #L4f2d46.  return v7 @kind object;
  #L4f2d48.  v3:= v6.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L4f2d4c.  v4:= v0 + -1;
  #L4f2d50.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f2d56.  v4:= temp @kind object;
  #L4f2d58.  call temp:= `isComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4f2d5e.  v5:= temp;
  #L4f2d60.  if v5 != 0 then goto L4f2d70;
  #L4f2d64.  call temp:= `isError`(v4) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4f2d6a.  v4:= temp;
  #L4f2d6c.  if v4 == 0 then goto L4f2d84;
  #L4f2d70.  v0:= v0 + -1;
  #L4f2d74.  if v0 != 0 then goto L4f2d84;
  #L4f2d78.  v0:= length @variable v7;
  #L4f2d7a.  if v0 == 0 then goto L4f2d82;
  #L4f2d7e.  v7[v2]:= v1 @kind object;
  #L4f2d82.  return v7 @kind object;
  #L4f2d84.  v4:= length @variable v7;
  #L4f2d86.  if v4 >= v0 then goto L4f2da6;
  #L4f2d8a.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f2d90.  v7:= temp @kind object;
  #L4f2d92.  call temp:= `getComponentType`(v7) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4f2d98.  v7:= temp @kind object;
  #L4f2d9a.  call temp:= `newInstance`(v7, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L4f2da0.  v7:= temp @kind object;
  #L4f2da2.  v7:= (`java.lang.Object`[]) v7 @kind object;
  #L4f2da6.  if v2 >= v0 then goto L4f2dbc;
  #L4f2daa.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f2db0.  v4:= temp @kind object;
  #L4f2db2.  v7[v2]:= v4 @kind object;
  #L4f2db6.  v2:= v2 + 1;
  #L4f2dba.  goto L4f2da6;
  #L4f2dbc.  v2:= length @variable v7;
  #L4f2dbe.  if v2 <= v0 then goto L4f2dc6;
  #L4f2dc2.  v7[v0]:= v1 @kind object;
  #L4f2dc6.  return v7 @kind object;
}
procedure `void` `d`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.d:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f2e28.  v0:= v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L4f2e2c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4f2e32.  call `e`(v1) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.e:()V` @kind virtual;
  #L4f2e38.  v2:= v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L4f2e3c.  v0:= 1I;
  #L4f2e3e.  v2:= v2 + v0 @kind int;
  #L4f2e40.  v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int` := v2;
  #L4f2e44.  v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.b` @type ^`boolean` := v0 @kind boolean;
  #L4f2e48.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v0 @kind this) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L4f2f50.  return @kind void;
}
procedure `java.lang.Object` `getValue`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v5 @kind this) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f2cd0.  v0:= v5.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L4f2cd4.  v1:= 0I;
  #L4f2cd6.  if v0 == 0 then goto L4f2d1c;
  #L4f2cda.  v2:= v5.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L4f2cde.  v3:= v0 + -1;
  #L4f2ce2.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f2ce8.  v3:= temp @kind object;
  #L4f2cea.  call temp:= `isComplete`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4f2cf0.  v4:= temp;
  #L4f2cf2.  if v4 != 0 then goto L4f2d06;
  #L4f2cf6.  call temp:= `isError`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4f2cfc.  v4:= temp;
  #L4f2cfe.  if v4 == 0 then goto L4f2d04;
  #L4f2d02.  goto L4f2d06;
  #L4f2d04.  return v3 @kind object;
  #L4f2d06.  v3:= 1I;
  #L4f2d08.  if v0 != v3 then goto L4f2d0e;
  #L4f2d0c.  return v1 @kind object;
  #L4f2d0e.  v0:= v0 + -2;
  #L4f2d12.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f2d18.  v0:= temp @kind object;
  #L4f2d1a.  return v0 @kind object;
  #L4f2d1c.  return v1 @kind object;
}
procedure `int` `size`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v4 @kind this) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f2c84.  v0:= v4.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L4f2c88.  if v0 == 0 then goto L4f2cba;
  #L4f2c8c.  v1:= v4.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L4f2c90.  v2:= v0 + -1;
  #L4f2c94.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f2c9a.  v1:= temp @kind object;
  #L4f2c9c.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4f2ca2.  v3:= temp;
  #L4f2ca4.  if v3 != 0 then goto L4f2cb8;
  #L4f2ca8.  call temp:= `isError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4f2cae.  v1:= temp;
  #L4f2cb0.  if v1 == 0 then goto L4f2cb6;
  #L4f2cb4.  goto L4f2cb8;
  #L4f2cb6.  return v0;
  #L4f2cb8.  return v2;
  #L4f2cba.  v0:= 0I;
  #L4f2cbc.  return v0;
}
