record `io.reactivex.rxjava3.subjects.a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.subjects.Subject` @kind class, `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate` @kind interface {
  `io.reactivex.rxjava3.subjects.Subject` `io.reactivex.rxjava3.subjects.a.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.subjects.a.b` @AccessFlag ;
  `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` `io.reactivex.rxjava3.subjects.a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subjects.a.d` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.a` v0 @kind this, `io.reactivex.rxjava3.subjects.Subject` v1 @kind object) @signature `Lio/reactivex/rxjava3/subjects/a;.<init>:(Lio/reactivex/rxjava3/subjects/Subject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f3594.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/subjects/Subject;.<init>:()V` @kind direct;
  #L4f359a.  v0.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` := v1 @kind object;
  #L4f359e.  return @kind void;
}
procedure `void` `d`(`io.reactivex.rxjava3.subjects.a` v2 @kind this) @signature `Lio/reactivex/rxjava3/subjects/a;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4f35b0.  @monitorenter v2
  #L4f35b2.  v0:= v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f35b6.  if v0 != 0 then goto L4f35c4;
  #L4f35ba.  v0:= 0I;
  #L4f35bc.  v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` := v0 @kind boolean;
  #L4f35c0.  @monitorexit v2
  #L4f35c2.  return @kind void;
  #L4f35c4.  v1:= 0I;
  #L4f35c6.  v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L4f35ca.  @monitorexit v2
  #L4f35cc.  call `forEachWhile`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.forEachWhile:(Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V` @kind virtual;
  #L4f35d2.  goto L4f35b0;
  #L4f35d4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f35d6.  @monitorexit v2
  #L4f35d8.  throw v0;
  catch `java.lang.Throwable` @[L4f35b2..L4f35cc] goto L4f35d4;
  catch `java.lang.Throwable` @[L4f35d6..L4f35d8] goto L4f35d4;
}
procedure `java.lang.Throwable` `getThrowable`(`io.reactivex.rxjava3.subjects.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/a;.getThrowable:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3574.  v0:= v1.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f3578.  call temp:= `getThrowable`(v0) @signature `Lio/reactivex/rxjava3/subjects/Subject;.getThrowable:()Ljava/lang/Throwable;` @kind virtual;
  #L4f357e.  v0:= temp @kind object;
  #L4f3580.  return v0 @kind object;
}
procedure `boolean` `hasComplete`(`io.reactivex.rxjava3.subjects.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/a;.hasComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f34f4.  v0:= v1.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f34f8.  call temp:= `hasComplete`(v0) @signature `Lio/reactivex/rxjava3/subjects/Subject;.hasComplete:()Z` @kind virtual;
  #L4f34fe.  v0:= temp;
  #L4f3500.  return v0;
}
procedure `boolean` `hasObservers`(`io.reactivex.rxjava3.subjects.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/a;.hasObservers:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3514.  v0:= v1.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f3518.  call temp:= `hasObservers`(v0) @signature `Lio/reactivex/rxjava3/subjects/Subject;.hasObservers:()Z` @kind virtual;
  #L4f351e.  v0:= temp;
  #L4f3520.  return v0;
}
procedure `boolean` `hasThrowable`(`io.reactivex.rxjava3.subjects.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/a;.hasThrowable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3534.  v0:= v1.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f3538.  call temp:= `hasThrowable`(v0) @signature `Lio/reactivex/rxjava3/subjects/Subject;.hasThrowable:()Z` @kind virtual;
  #L4f353e.  v0:= temp;
  #L4f3540.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.subjects.a` v2 @kind this) @signature `Lio/reactivex/rxjava3/subjects/a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f3600.  v0:= v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` @kind boolean;
  #L4f3604.  if v0 == 0 then goto L4f360a;
  #L4f3608.  return @kind void;
  #L4f360a.  @monitorenter v2
  #L4f360c.  v0:= v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` @kind boolean;
  #L4f3610.  if v0 == 0 then goto L4f3618;
  #L4f3614.  @monitorexit v2
  #L4f3616.  return @kind void;
  #L4f3618.  v0:= 1I;
  #L4f361a.  v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` := v0 @kind boolean;
  #L4f361e.  v1:= v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` @kind boolean;
  #L4f3622.  if v1 == 0 then goto L4f3650;
  #L4f3626.  v0:= v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f362a.  if v0 != 0 then goto L4f363e;
  #L4f362e.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L4f3632.  v1:= 4I;
  #L4f3634.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L4f363a.  v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L4f363e.  call temp:= `complete`() @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L4f3644.  v1:= temp @kind object;
  #L4f3646.  call `add`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L4f364c.  @monitorexit v2
  #L4f364e.  return @kind void;
  #L4f3650.  v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` := v0 @kind boolean;
  #L4f3654.  @monitorexit v2
  #L4f3656.  v0:= v2.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f365a.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f3660.  return @kind void;
  #L4f3662.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f3664.  @monitorexit v2
  #L4f3666.  throw v0;
  catch `java.lang.Throwable` @[L4f360c..L4f3656] goto L4f3662;
  catch `java.lang.Throwable` @[L4f3664..L4f3666] goto L4f3662;
}
procedure `void` `onError`(`io.reactivex.rxjava3.subjects.a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/subjects/a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f368c.  v0:= v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` @kind boolean;
  #L4f3690.  if v0 == 0 then goto L4f369c;
  #L4f3694.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f369a.  return @kind void;
  #L4f369c.  @monitorenter v2
  #L4f369e.  v0:= v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` @kind boolean;
  #L4f36a2.  v1:= 1I;
  #L4f36a4.  if v0 == 0 then goto L4f36aa;
  #L4f36a8.  goto L4f36e8;
  #L4f36aa.  v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` := v1 @kind boolean;
  #L4f36ae.  v0:= v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` @kind boolean;
  #L4f36b2.  if v0 == 0 then goto L4f36e0;
  #L4f36b6.  v0:= v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f36ba.  if v0 != 0 then goto L4f36ce;
  #L4f36be.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L4f36c2.  v1:= 4I;
  #L4f36c4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L4f36ca.  v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L4f36ce.  call temp:= `error`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L4f36d4.  v3:= temp @kind object;
  #L4f36d6.  call `setFirst`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.setFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L4f36dc.  @monitorexit v2
  #L4f36de.  return @kind void;
  #L4f36e0.  v0:= 0I;
  #L4f36e2.  v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` := v1 @kind boolean;
  #L4f36e6.  v1:= 0I;
  #L4f36e8.  @monitorexit v2
  #L4f36ea.  if v1 == 0 then goto L4f36f6;
  #L4f36ee.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f36f4.  return @kind void;
  #L4f36f6.  v0:= v2.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f36fa.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f3700.  return @kind void;
  #L4f3702.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f3704.  @monitorexit v2
  #L4f3706.  throw v3;
  catch `java.lang.Throwable` @[L4f369e..L4f36ea] goto L4f3702;
  catch `java.lang.Throwable` @[L4f3704..L4f3706] goto L4f3702;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.subjects.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/subjects/a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f372c.  v0:= v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` @kind boolean;
  #L4f3730.  if v0 == 0 then goto L4f3736;
  #L4f3734.  return @kind void;
  #L4f3736.  @monitorenter v2
  #L4f3738.  v0:= v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` @kind boolean;
  #L4f373c.  if v0 == 0 then goto L4f3744;
  #L4f3740.  @monitorexit v2
  #L4f3742.  return @kind void;
  #L4f3744.  v0:= v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` @kind boolean;
  #L4f3748.  if v0 == 0 then goto L4f3776;
  #L4f374c.  v0:= v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f3750.  if v0 != 0 then goto L4f3764;
  #L4f3754.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L4f3758.  v1:= 4I;
  #L4f375a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L4f3760.  v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L4f3764.  call temp:= `next`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4f376a.  v3:= temp @kind object;
  #L4f376c.  call `add`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L4f3772.  @monitorexit v2
  #L4f3774.  return @kind void;
  #L4f3776.  v0:= 1I;
  #L4f3778.  v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` := v0 @kind boolean;
  #L4f377c.  @monitorexit v2
  #L4f377e.  v0:= v2.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f3782.  call `onNext`(v0, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f3788.  call `d`(v2) @signature `Lio/reactivex/rxjava3/subjects/a;.d:()V` @kind virtual;
  #L4f378e.  return @kind void;
  #L4f3790.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f3792.  @monitorexit v2
  #L4f3794.  throw v3;
  catch `java.lang.Throwable` @[L4f3738..L4f377e] goto L4f3790;
  catch `java.lang.Throwable` @[L4f3792..L4f3794] goto L4f3790;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.subjects.a` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/subjects/a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f37bc.  v0:= v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` @kind boolean;
  #L4f37c0.  v1:= 1I;
  #L4f37c2.  if v0 != 0 then goto L4f3816;
  #L4f37c6.  @monitorenter v2
  #L4f37c8.  v0:= v2.`io.reactivex.rxjava3.subjects.a.d` @type ^`boolean` @kind boolean;
  #L4f37cc.  if v0 == 0 then goto L4f37d2;
  #L4f37d0.  goto L4f380c;
  #L4f37d2.  v0:= v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` @kind boolean;
  #L4f37d6.  if v0 == 0 then goto L4f3804;
  #L4f37da.  v0:= v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L4f37de.  if v0 != 0 then goto L4f37f2;
  #L4f37e2.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L4f37e6.  v1:= 4I;
  #L4f37e8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L4f37ee.  v2.`io.reactivex.rxjava3.subjects.a.c` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L4f37f2.  call temp:= `disposable`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.disposable:(Lio/reactivex/rxjava3/disposables/Disposable;)Ljava/lang/Object;` @kind static;
  #L4f37f8.  v3:= temp @kind object;
  #L4f37fa.  call `add`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L4f3800.  @monitorexit v2
  #L4f3802.  return @kind void;
  #L4f3804.  v2.`io.reactivex.rxjava3.subjects.a.b` @type ^`boolean` := v1 @kind boolean;
  #L4f3808.  v0:= 0I;
  #L4f380a.  v1:= 0I;
  #L4f380c.  @monitorexit v2
  #L4f380e.  goto L4f3816;
  #L4f3810.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f3812.  @monitorexit v2
  #L4f3814.  throw v3;
  #L4f3816.  if v1 == 0 then goto L4f3822;
  #L4f381a.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f3820.  goto L4f3832;
  #L4f3822.  v0:= v2.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f3826.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f382c.  call `d`(v2) @signature `Lio/reactivex/rxjava3/subjects/a;.d:()V` @kind virtual;
  #L4f3832.  return @kind void;
  catch `java.lang.Throwable` @[L4f37c8..L4f3814] goto L4f3810;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.subjects.a` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/a;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4f3850.  v0:= v1.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f3854.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4f385a.  return @kind void;
}
procedure `boolean` `test`(`io.reactivex.rxjava3.subjects.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/a;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3554.  v0:= v1.`io.reactivex.rxjava3.subjects.a.a` @type ^`io.reactivex.rxjava3.subjects.Subject` @kind object;
  #L4f3558.  call temp:= `acceptFull`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lio/reactivex/rxjava3/core/Observer;)Z` @kind static;
  #L4f355e.  v2:= temp;
  #L4f3560.  return v2;
}
