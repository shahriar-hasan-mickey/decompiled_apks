record `io.reactivex.rxjava3.processors.UnicastProcessor$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind class {
  `io.reactivex.rxjava3.processors.UnicastProcessor` `io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@io.reactivex.rxjava3.processors.UnicastProcessor$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.UnicastProcessor$a` v0 @kind this, `io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor$a;.<init>:(Lio/reactivex/rxjava3/processors/UnicastProcessor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4efa24.  v0.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` := v1 @kind object;
  #L4efa28.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;.<init>:()V` @kind direct;
  #L4efa2e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.processors.UnicastProcessor$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4efa40.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efa44.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` @kind boolean;
  #L4efa48.  if v0 == 0 then goto L4efa4e;
  #L4efa4c.  return @kind void;
  #L4efa4e.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efa52.  v1:= 1I;
  #L4efa54.  v0.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` := v1 @kind boolean;
  #L4efa58.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efa5c.  call `f`(v0) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.f:()V` @kind virtual;
  #L4efa62.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efa66.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4efa6a.  v1:= 0I;
  #L4efa6c.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4efa72.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efa76.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.j` @type ^`io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind object;
  #L4efa7a.  call temp:= `getAndIncrement`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4efa80.  v0:= temp;
  #L4efa82.  if v0 != 0 then goto L4efaaa;
  #L4efa86.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efa8a.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4efa8e.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4efa94.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efa98.  v1:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.l` @type ^`boolean` @kind boolean;
  #L4efa9c.  if v1 != 0 then goto L4efaaa;
  #L4efaa0.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4efaa4.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4efaaa.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.processors.UnicastProcessor$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4efabc.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efac0.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4efac4.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4efaca.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.processors.UnicastProcessor$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef9b4.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4ef9b8.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4ef9bc.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L4ef9c2.  v0:= temp;
  #L4ef9c4.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.processors.UnicastProcessor$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4efa00.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efa04.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4efa08.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4efa0e.  v0:= temp @kind object;
  #L4efa10.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.rxjava3.processors.UnicastProcessor$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4efadc.  call temp:= `validate`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L4efae2.  v0:= temp;
  #L4efae4.  if v0 == 0 then goto L4efb00;
  #L4efae8.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efaec.  v0:= v0.`io.reactivex.rxjava3.processors.UnicastProcessor.k` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4efaf0.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4efaf6.  v2:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4efafa.  call `g`(v2) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.g:()V` @kind virtual;
  #L4efb00.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.processors.UnicastProcessor$a` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ef9d8.  v0:= 2I;
  #L4ef9da.  v3:= v3 ^& v0 @kind int;
  #L4ef9dc.  if v3 == 0 then goto L4ef9ec;
  #L4ef9e0.  v3:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.UnicastProcessor` @kind object;
  #L4ef9e4.  v1:= 1I;
  #L4ef9e6.  v3.`io.reactivex.rxjava3.processors.UnicastProcessor.l` @type ^`boolean` := v1 @kind boolean;
  #L4ef9ea.  return v0;
  #L4ef9ec.  v3:= 0I;
  #L4ef9ee.  return v3;
}
