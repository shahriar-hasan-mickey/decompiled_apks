record `io.reactivex.rxjava3.processors.ReplayProcessor$b` @kind interface @AccessFlag ABSTRACT_INTERFACE {
}
procedure `void` `a`(`java.lang.Throwable` v0 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`java.lang.Object` v0 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object`[] `c`(`java.lang.Object`[] v0 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.c:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `complete`() @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.complete:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `e`() @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.e:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `f`(`io.reactivex.rxjava3.processors.ReplayProcessor$c` v0 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.f:(Lio/reactivex/rxjava3/processors/ReplayProcessor$c;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Throwable` `getError`() @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.getError:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isDone`() @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.isDone:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`() @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
