record `io.reactivex.rxjava3.processors.ReplayProcessor$d` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.processors.ReplayProcessor$b` @kind interface {
  `int` `io.reactivex.rxjava3.processors.ReplayProcessor$d.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @AccessFlag ;
  `io.reactivex.rxjava3.processors.ReplayProcessor$f` `io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @AccessFlag VOLATILE;
  `io.reactivex.rxjava3.processors.ReplayProcessor$f` `io.reactivex.rxjava3.processors.ReplayProcessor$d.g` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v0 @kind this, `int` v1 , `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.<init>:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ee750.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ee756.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.a` @type ^`int` := v1;
  #L4ee75a.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` := v2 @kind wide;
  #L4ee75e.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4ee762.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4ee766.  v1:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L4ee76a.  v2:= 0I;
  #L4ee76c.  v3:= 0L;
  #L4ee770.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L4ee776.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.g` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v1 @kind object;
  #L4ee77a.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v1 @kind object;
  #L4ee77e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4ee7b0.  call `i`(v0) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.i:()V` @kind virtual;
  #L4ee7b6.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4ee7ba.  v1:= 1I;
  #L4ee7bc.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` := v1 @kind boolean;
  #L4ee7c0.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ee7d4.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L4ee7d8.  v1:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ee7dc.  v2:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ee7e0.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4ee7e6.  v1:= temp @kind wide;
  #L4ee7e8.  call `<init>`(v0, v4, v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L4ee7ee.  v4:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.g` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L4ee7f2.  v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.g` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L4ee7f6.  v1:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int`;
  #L4ee7fa.  v1:= v1 + 1;
  #L4ee7fe.  v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int` := v1;
  #L4ee802.  call `set`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L4ee808.  call `h`(v3) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.h:()V` @kind virtual;
  #L4ee80e.  return @kind void;
}
procedure `java.lang.Object`[] `c`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.c:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ee6b8.  call temp:= `d`(v5) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.d:()Lio/reactivex/rxjava3/processors/ReplayProcessor$f;` @kind virtual;
  #L4ee6be.  v0:= temp @kind object;
  #L4ee6c0.  call temp:= `g`(v5, v0) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.g:(Lio/reactivex/rxjava3/processors/ReplayProcessor$f;)I` @kind virtual;
  #L4ee6c6.  v1:= temp;
  #L4ee6c8.  v2:= 0I;
  #L4ee6ca.  v3:= 0I;
  #L4ee6cc.  if v1 != 0 then goto L4ee6dc;
  #L4ee6d0.  v0:= length @variable v6;
  #L4ee6d2.  if v0 == 0 then goto L4ee726;
  #L4ee6d6.  v6[v3]:= v2 @kind object;
  #L4ee6da.  goto L4ee726;
  #L4ee6dc.  v4:= length @variable v6;
  #L4ee6de.  if v4 >= v1 then goto L4ee6fe;
  #L4ee6e2.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4ee6e8.  v6:= temp @kind object;
  #L4ee6ea.  call temp:= `getComponentType`(v6) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4ee6f0.  v6:= temp @kind object;
  #L4ee6f2.  call temp:= `newInstance`(v6, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L4ee6f8.  v6:= temp @kind object;
  #L4ee6fa.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L4ee6fe.  if v3 == v1 then goto L4ee71c;
  #L4ee702.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee708.  v0:= temp @kind object;
  #L4ee70a.  v0:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v0 @kind object;
  #L4ee70e.  v4:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L4ee712.  v6[v3]:= v4 @kind object;
  #L4ee716.  v3:= v3 + 1;
  #L4ee71a.  goto L4ee6fe;
  #L4ee71c.  v0:= length @variable v6;
  #L4ee71e.  if v0 <= v1 then goto L4ee726;
  #L4ee722.  v6[v1]:= v2 @kind object;
  #L4ee726.  return v6 @kind object;
}
procedure `void` `complete`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.complete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee790.  call `i`(v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.i:()V` @kind virtual;
  #L4ee796.  v0:= 1I;
  #L4ee798.  v1.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` := v0 @kind boolean;
  #L4ee79c.  return @kind void;
}
procedure `io.reactivex.rxjava3.processors.ReplayProcessor$f` `d`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v8 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.d:()Lio/reactivex/rxjava3/processors/ReplayProcessor$f;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ee604.  v0:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L4ee608.  v1:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ee60c.  v2:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ee610.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4ee616.  v1:= temp @kind wide;
  #L4ee618.  v3:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` @kind wide;
  #L4ee61c.  v1:= v1 - v3 @kind long;
  #L4ee61e.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee624.  v3:= temp @kind object;
  #L4ee626.  v3:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v3 @kind object;
  #L4ee62a.  v7:= v3 @kind object;
  #L4ee62c.  v3:= v0 @kind object;
  #L4ee62e.  v0:= v7 @kind object;
  #L4ee630.  if v0 == 0 then goto L4ee650;
  #L4ee634.  v4:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.b` @type ^`long` @kind wide;
  #L4ee638.  v6:= lcmp(v4, v1);
  #L4ee63c.  if v6 <= 0 then goto L4ee642;
  #L4ee640.  goto L4ee650;
  #L4ee642.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee648.  v3:= temp @kind object;
  #L4ee64a.  v3:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v3 @kind object;
  #L4ee64e.  goto L4ee62a;
  #L4ee650.  return v3 @kind object;
}
procedure `void` `e`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v4 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4eea64.  v0:= v4.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L4eea68.  v0:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L4eea6c.  if v0 == 0 then goto L4eea96;
  #L4eea70.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L4eea74.  v1:= 0I;
  #L4eea76.  v2:= 0L;
  #L4eea7a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L4eea80.  v1:= v4.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L4eea84.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eea8a.  v1:= temp @kind object;
  #L4eea8c.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4eea92.  v4.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L4eea96.  return @kind void;
}
procedure `void` `f`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v13 @kind this, `io.reactivex.rxjava3.processors.ReplayProcessor$c` v14 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.f:(Lio/reactivex/rxjava3/processors/ReplayProcessor$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4ee820.  call temp:= `getAndIncrement`(v14) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4ee826.  v0:= temp;
  #L4ee828.  if v0 == 0 then goto L4ee82e;
  #L4ee82c.  return @kind void;
  #L4ee82e.  v0:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ee832.  v1:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` @kind object;
  #L4ee836.  v1:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v1 @kind object;
  #L4ee83a.  if v1 != 0 then goto L4ee846;
  #L4ee83e.  call temp:= `d`(v13) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.d:()Lio/reactivex/rxjava3/processors/ReplayProcessor$f;` @kind virtual;
  #L4ee844.  v1:= temp @kind object;
  #L4ee846.  v2:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.f` @type ^`long` @kind wide;
  #L4ee84a.  v4:= 1I;
  #L4ee84c.  v5:= 1I;
  #L4ee84e.  v6:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4ee852.  call temp:= `get`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4ee858.  v6:= temp @kind wide;
  #L4ee85a.  v8:= 0I;
  #L4ee85c.  v9:= lcmp(v2, v6);
  #L4ee860.  if v9 == 0 then goto L4ee8ce;
  #L4ee864.  v10:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` @kind boolean;
  #L4ee868.  if v10 == 0 then goto L4ee872;
  #L4ee86c.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L4ee870.  return @kind void;
  #L4ee872.  v10:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` @kind boolean;
  #L4ee876.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee87c.  v11:= temp @kind object;
  #L4ee87e.  v11:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v11 @kind object;
  #L4ee882.  if v11 != 0 then goto L4ee88a;
  #L4ee886.  v12:= 1I;
  #L4ee888.  goto L4ee88c;
  #L4ee88a.  v12:= 0I;
  #L4ee88c.  if v10 == 0 then goto L4ee8b4;
  #L4ee890.  if v12 == 0 then goto L4ee8b4;
  #L4ee894.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L4ee898.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` := v4 @kind boolean;
  #L4ee89c.  v14:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @type ^`java.lang.Throwable` @kind object;
  #L4ee8a0.  if v14 != 0 then goto L4ee8ac;
  #L4ee8a4.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4ee8aa.  goto L4ee8b2;
  #L4ee8ac.  call `onError`(v0, v14) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ee8b2.  return @kind void;
  #L4ee8b4.  if v12 == 0 then goto L4ee8ba;
  #L4ee8b8.  goto L4ee8ce;
  #L4ee8ba.  v1:= v11.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L4ee8be.  call `onNext`(v0, v1) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ee8c4.  v8:= 1L;
  #L4ee8c8.  v2:= v2 + v8 @kind long;
  #L4ee8ca.  v1:= v11 @kind object;
  #L4ee8cc.  goto L4ee85a;
  #L4ee8ce.  if v9 != 0 then goto L4ee914;
  #L4ee8d2.  v6:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` @kind boolean;
  #L4ee8d6.  if v6 == 0 then goto L4ee8e0;
  #L4ee8da.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L4ee8de.  return @kind void;
  #L4ee8e0.  v6:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` @kind boolean;
  #L4ee8e4.  if v6 == 0 then goto L4ee914;
  #L4ee8e8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee8ee.  v6:= temp @kind object;
  #L4ee8f0.  if v6 != 0 then goto L4ee914;
  #L4ee8f4.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L4ee8f8.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` := v4 @kind boolean;
  #L4ee8fc.  v14:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @type ^`java.lang.Throwable` @kind object;
  #L4ee900.  if v14 != 0 then goto L4ee90c;
  #L4ee904.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4ee90a.  goto L4ee912;
  #L4ee90c.  call `onError`(v0, v14) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ee912.  return @kind void;
  #L4ee914.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4ee918.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.f` @type ^`long` := v2 @kind wide;
  #L4ee91c.  v5:= -v5 @kind int;
  #L4ee91e.  call temp:= `addAndGet`(v14, v5) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4ee924.  v5:= temp;
  #L4ee926.  if v5 != 0 then goto L4ee84e;
  #L4ee92a.  return @kind void;
}
procedure `int` `g`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v2 @kind this, `io.reactivex.rxjava3.processors.ReplayProcessor$f` v3 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.g:(Lio/reactivex/rxjava3/processors/ReplayProcessor$f;)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4ee5cc.  v0:= 0I;
  #L4ee5ce.  v1:= 2147483647I;
  #L4ee5d4.  if v0 == v1 then goto L4ee5f0;
  #L4ee5d8.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee5de.  v3:= temp @kind object;
  #L4ee5e0.  v3:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v3 @kind object;
  #L4ee5e4.  if v3 != 0 then goto L4ee5ea;
  #L4ee5e8.  goto L4ee5f0;
  #L4ee5ea.  v0:= v0 + 1;
  #L4ee5ee.  goto L4ee5ce;
  #L4ee5f0.  return v0;
}
procedure `java.lang.Throwable` `getError`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.getError:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee738.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @type ^`java.lang.Throwable` @kind object;
  #L4ee73c.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v6 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ee664.  v0:= v6.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L4ee668.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee66e.  v1:= temp @kind object;
  #L4ee670.  v1:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v1 @kind object;
  #L4ee674.  if v1 != 0 then goto L4ee6a4;
  #L4ee678.  v1:= v6.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ee67c.  v2:= v6.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ee680.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4ee686.  v1:= temp @kind wide;
  #L4ee688.  v3:= v6.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` @kind wide;
  #L4ee68c.  v1:= v1 - v3 @kind long;
  #L4ee68e.  v3:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.b` @type ^`long` @kind wide;
  #L4ee692.  v5:= lcmp(v3, v1);
  #L4ee696.  if v5 >= 0 then goto L4ee69e;
  #L4ee69a.  v0:= 0I;
  #L4ee69c.  return v0 @kind object;
  #L4ee69e.  v0:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L4ee6a2.  return v0 @kind object;
  #L4ee6a4.  v0:= v1 @kind object;
  #L4ee6a6.  goto L4ee668;
}
procedure `void` `h`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v8 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.h:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ee93c.  v0:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int`;
  #L4ee940.  v1:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.a` @type ^`int`;
  #L4ee944.  v2:= 1I;
  #L4ee946.  if v0 <= v1 then goto L4ee964;
  #L4ee94a.  v0:= v0 - v2 @kind int;
  #L4ee94c.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int` := v0;
  #L4ee950.  v0:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L4ee954.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee95a.  v0:= temp @kind object;
  #L4ee95c.  v0:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v0 @kind object;
  #L4ee960.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L4ee964.  v0:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ee968.  v1:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ee96c.  call temp:= `now`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4ee972.  v0:= temp @kind wide;
  #L4ee974.  v3:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` @kind wide;
  #L4ee978.  v0:= v0 - v3 @kind long;
  #L4ee97a.  v3:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L4ee97e.  v4:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int`;
  #L4ee982.  if v4 > v2 then goto L4ee98c;
  #L4ee986.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v3 @kind object;
  #L4ee98a.  goto L4ee9a8;
  #L4ee98c.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee992.  v4:= temp @kind object;
  #L4ee994.  v4:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v4 @kind object;
  #L4ee998.  v5:= v4.`io.reactivex.rxjava3.processors.ReplayProcessor$f.b` @type ^`long` @kind wide;
  #L4ee99c.  v7:= lcmp(v5, v0);
  #L4ee9a0.  if v7 <= 0 then goto L4ee9aa;
  #L4ee9a4.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v3 @kind object;
  #L4ee9a8.  return @kind void;
  #L4ee9aa.  v3:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int`;
  #L4ee9ae.  v3:= v3 - v2 @kind int;
  #L4ee9b0.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int` := v3;
  #L4ee9b4.  v3:= v4 @kind object;
  #L4ee9b6.  goto L4ee97e;
}
procedure `void` `i`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v10 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.i:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4ee9c8.  v0:= v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ee9cc.  v1:= v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ee9d0.  call temp:= `now`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4ee9d6.  v0:= temp @kind wide;
  #L4ee9d8.  v2:= v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` @kind wide;
  #L4ee9dc.  v0:= v0 - v2 @kind long;
  #L4ee9de.  v2:= v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L4ee9e2.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ee9e8.  v3:= temp @kind object;
  #L4ee9ea.  v3:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v3 @kind object;
  #L4ee9ee.  v4:= 0L;
  #L4ee9f2.  v6:= 0I;
  #L4ee9f4.  if v3 != 0 then goto L4eea16;
  #L4ee9f8.  v0:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L4ee9fc.  if v0 == 0 then goto L4eea10;
  #L4eea00.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L4eea04.  call `<init>`(v0, v6, v4) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L4eea0a.  v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L4eea0e.  goto L4eea4c;
  #L4eea10.  v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v2 @kind object;
  #L4eea14.  goto L4eea4c;
  #L4eea16.  v7:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$f.b` @type ^`long` @kind wide;
  #L4eea1a.  v9:= lcmp(v7, v0);
  #L4eea1e.  if v9 <= 0 then goto L4eea4e;
  #L4eea22.  v0:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L4eea26.  if v0 == 0 then goto L4eea48;
  #L4eea2a.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L4eea2e.  call `<init>`(v0, v6, v4) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L4eea34.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eea3a.  v1:= temp @kind object;
  #L4eea3c.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4eea42.  v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L4eea46.  goto L4eea4c;
  #L4eea48.  v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v2 @kind object;
  #L4eea4c.  return @kind void;
  #L4eea4e.  v2:= v3 @kind object;
  #L4eea50.  goto L4ee9e2;
}
procedure `boolean` `isDone`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee590.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` @kind boolean;
  #L4ee594.  return v0;
}
procedure `int` `size`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee5a8.  call temp:= `d`(v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.d:()Lio/reactivex/rxjava3/processors/ReplayProcessor$f;` @kind virtual;
  #L4ee5ae.  v0:= temp @kind object;
  #L4ee5b0.  call temp:= `g`(v1, v0) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.g:(Lio/reactivex/rxjava3/processors/ReplayProcessor$f;)I` @kind virtual;
  #L4ee5b6.  v0:= temp;
  #L4ee5b8.  return v0;
}
