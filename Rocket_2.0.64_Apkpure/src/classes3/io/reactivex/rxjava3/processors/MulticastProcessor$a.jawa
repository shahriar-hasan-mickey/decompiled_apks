record `io.reactivex.rxjava3.processors.MulticastProcessor$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.processors.MulticastProcessor$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.processors.MulticastProcessor` `io.reactivex.rxjava3.processors.MulticastProcessor$a.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.processors.MulticastProcessor$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.processors.MulticastProcessor$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.MulticastProcessor$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.processors.MulticastProcessor` v2 @kind object) @signature `Lio/reactivex/rxjava3/processors/MulticastProcessor$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/processors/MulticastProcessor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ed624.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4ed62a.  v0.`io.reactivex.rxjava3.processors.MulticastProcessor$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4ed62e.  v0.`io.reactivex.rxjava3.processors.MulticastProcessor$a.b` @type ^`io.reactivex.rxjava3.processors.MulticastProcessor` := v2 @kind object;
  #L4ed632.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.processors.MulticastProcessor$a` v5 @kind this) @signature `Lio/reactivex/rxjava3/processors/MulticastProcessor$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ed674.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4ed67a.  v0:= temp @kind wide;
  #L4ed67c.  v2:= -9223372036854775808L;
  #L4ed680.  v4:= lcmp(v0, v2);
  #L4ed684.  if v4 == 0 then goto L4ed692;
  #L4ed688.  v0:= v5.`io.reactivex.rxjava3.processors.MulticastProcessor$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ed68c.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4ed692.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.processors.MulticastProcessor$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/processors/MulticastProcessor$a;.b:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ed6a4.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4ed6aa.  v0:= temp @kind wide;
  #L4ed6ac.  v2:= -9223372036854775808L;
  #L4ed6b0.  v4:= lcmp(v0, v2);
  #L4ed6b4.  if v4 == 0 then goto L4ed6c2;
  #L4ed6b8.  v0:= v5.`io.reactivex.rxjava3.processors.MulticastProcessor$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ed6bc.  call `onError`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ed6c2.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.processors.MulticastProcessor$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/processors/MulticastProcessor$a;.c:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ed6d4.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4ed6da.  v0:= temp @kind wide;
  #L4ed6dc.  v2:= -9223372036854775808L;
  #L4ed6e0.  v4:= lcmp(v0, v2);
  #L4ed6e4.  if v4 == 0 then goto L4ed700;
  #L4ed6e8.  v0:= v5.`io.reactivex.rxjava3.processors.MulticastProcessor$a.c` @type ^`long` @kind wide;
  #L4ed6ec.  v2:= 1L;
  #L4ed6f0.  v0:= v0 + v2 @kind long;
  #L4ed6f2.  v5.`io.reactivex.rxjava3.processors.MulticastProcessor$a.c` @type ^`long` := v0 @kind wide;
  #L4ed6f6.  v0:= v5.`io.reactivex.rxjava3.processors.MulticastProcessor$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ed6fa.  call `onNext`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ed700.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.processors.MulticastProcessor$a` v5 @kind this) @signature `Lio/reactivex/rxjava3/processors/MulticastProcessor$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ed644.  v0:= -9223372036854775808L;
  #L4ed648.  call temp:= `getAndSet`(v5, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4ed64e.  v2:= temp @kind wide;
  #L4ed650.  v4:= lcmp(v2, v0);
  #L4ed654.  if v4 == 0 then goto L4ed662;
  #L4ed658.  v0:= v5.`io.reactivex.rxjava3.processors.MulticastProcessor$a.b` @type ^`io.reactivex.rxjava3.processors.MulticastProcessor` @kind object;
  #L4ed65c.  call `g`(v0, v5) @signature `Lio/reactivex/rxjava3/processors/MulticastProcessor;.g:(Lio/reactivex/rxjava3/processors/MulticastProcessor$a;)V` @kind virtual;
  #L4ed662.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.processors.MulticastProcessor$a` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/processors/MulticastProcessor$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ed714.  call temp:= `validate`(v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L4ed71a.  v0:= temp;
  #L4ed71c.  if v0 == 0 then goto L4ed750;
  #L4ed720.  call temp:= `addCancel`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.addCancel:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4ed726.  v4:= temp @kind wide;
  #L4ed728.  v0:= -9223372036854775808L;
  #L4ed72c.  v2:= lcmp(v4, v0);
  #L4ed730.  if v2 == 0 then goto L4ed750;
  #L4ed734.  v0:= 9223372036854775807L;
  #L4ed73e.  v2:= lcmp(v4, v0);
  #L4ed742.  if v2 == 0 then goto L4ed750;
  #L4ed746.  v4:= v3.`io.reactivex.rxjava3.processors.MulticastProcessor$a.b` @type ^`io.reactivex.rxjava3.processors.MulticastProcessor` @kind object;
  #L4ed74a.  call `f`(v4) @signature `Lio/reactivex/rxjava3/processors/MulticastProcessor;.f:()V` @kind virtual;
  #L4ed750.  return @kind void;
}
