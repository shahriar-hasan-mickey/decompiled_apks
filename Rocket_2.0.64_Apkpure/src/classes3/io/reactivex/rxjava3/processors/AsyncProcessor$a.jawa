record `io.reactivex.rxjava3.processors.AsyncProcessor$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription` @kind class {
  `io.reactivex.rxjava3.processors.AsyncProcessor` `io.reactivex.rxjava3.processors.AsyncProcessor$a.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.processors.AsyncProcessor$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.AsyncProcessor$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.processors.AsyncProcessor` v2 @kind object) @signature `Lio/reactivex/rxjava3/processors/AsyncProcessor$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/processors/AsyncProcessor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ec864.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4ec86a.  v0.`io.reactivex.rxjava3.processors.AsyncProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.AsyncProcessor` := v2 @kind object;
  #L4ec86e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.processors.AsyncProcessor$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/AsyncProcessor$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ec880.  call temp:= `tryCancel`(v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.tryCancel:()Z` @kind super;
  #L4ec886.  v0:= temp;
  #L4ec888.  if v0 == 0 then goto L4ec896;
  #L4ec88c.  v0:= v1.`io.reactivex.rxjava3.processors.AsyncProcessor$a.a` @type ^`io.reactivex.rxjava3.processors.AsyncProcessor` @kind object;
  #L4ec890.  call `f`(v0, v1) @signature `Lio/reactivex/rxjava3/processors/AsyncProcessor;.f:(Lio/reactivex/rxjava3/processors/AsyncProcessor$a;)V` @kind virtual;
  #L4ec896.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.processors.AsyncProcessor$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/AsyncProcessor$a;.onComplete:()V` @AccessFlag  {
    temp;
    v0;

  #L4ec8a8.  call temp:= `isCancelled`(v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.isCancelled:()Z` @kind virtual;
  #L4ec8ae.  v0:= temp;
  #L4ec8b0.  if v0 != 0 then goto L4ec8be;
  #L4ec8b4.  v0:= v1.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ec8b8.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4ec8be.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.processors.AsyncProcessor$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/processors/AsyncProcessor$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L4ec8d0.  call temp:= `isCancelled`(v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.isCancelled:()Z` @kind virtual;
  #L4ec8d6.  v0:= temp;
  #L4ec8d8.  if v0 == 0 then goto L4ec8e4;
  #L4ec8dc.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ec8e2.  goto L4ec8ee;
  #L4ec8e4.  v0:= v1.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ec8e8.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ec8ee.  return @kind void;
}
