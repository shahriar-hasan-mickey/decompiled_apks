record `io.reactivex.rxjava3.processors.ReplayProcessor$e` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.processors.ReplayProcessor$b` @kind interface {
  `int` `io.reactivex.rxjava3.processors.ReplayProcessor$e.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.processors.ReplayProcessor$e.b` @AccessFlag ;
  `io.reactivex.rxjava3.processors.ReplayProcessor$a` `io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @AccessFlag VOLATILE;
  `io.reactivex.rxjava3.processors.ReplayProcessor$a` `io.reactivex.rxjava3.processors.ReplayProcessor$e.d` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.processors.ReplayProcessor$e.e` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.processors.ReplayProcessor$e.f` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4eebc4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4eebca.  v1.`io.reactivex.rxjava3.processors.ReplayProcessor$e.a` @type ^`int` := v2;
  #L4eebce.  v2:= new `io.reactivex.rxjava3.processors.ReplayProcessor$a`;
  #L4eebd2.  v0:= 0I;
  #L4eebd4.  call `<init>`(v2, v0) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4eebda.  v1.`io.reactivex.rxjava3.processors.ReplayProcessor$e.d` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` := v2 @kind object;
  #L4eebde.  v1.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` := v2 @kind object;
  #L4eebe2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4eec14.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$e.e` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4eec18.  call `e`(v0) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.e:()V` @kind virtual;
  #L4eec1e.  v1:= 1I;
  #L4eec20.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$e.f` @type ^`boolean` := v1 @kind boolean;
  #L4eec24.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eec38.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$a`;
  #L4eec3c.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4eec42.  v3:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.d` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` @kind object;
  #L4eec46.  v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.d` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` := v0 @kind object;
  #L4eec4a.  v1:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.b` @type ^`int`;
  #L4eec4e.  v1:= v1 + 1;
  #L4eec52.  v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.b` @type ^`int` := v1;
  #L4eec56.  call `set`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L4eec5c.  call `d`(v2) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.d:()V` @kind virtual;
  #L4eec62.  return @kind void;
}
procedure `java.lang.Object`[] `c`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.c:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4eeb2c.  v0:= v4.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` @kind object;
  #L4eeb30.  v1:= 0I;
  #L4eeb32.  v2:= v0 @kind object;
  #L4eeb34.  v3:= 0I;
  #L4eeb36.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eeb3c.  v2:= temp @kind object;
  #L4eeb3e.  v2:= (`io.reactivex.rxjava3.processors.ReplayProcessor$a`) v2 @kind object;
  #L4eeb42.  if v2 != 0 then goto L4eeb94;
  #L4eeb46.  v2:= length @variable v5;
  #L4eeb48.  if v2 >= v3 then goto L4eeb68;
  #L4eeb4c.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4eeb52.  v5:= temp @kind object;
  #L4eeb54.  call temp:= `getComponentType`(v5) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4eeb5a.  v5:= temp @kind object;
  #L4eeb5c.  call temp:= `newInstance`(v5, v3) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L4eeb62.  v5:= temp @kind object;
  #L4eeb64.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L4eeb68.  if v1 >= v3 then goto L4eeb86;
  #L4eeb6c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eeb72.  v0:= temp @kind object;
  #L4eeb74.  v0:= (`io.reactivex.rxjava3.processors.ReplayProcessor$a`) v0 @kind object;
  #L4eeb78.  v2:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$a.a` @type ^`java.lang.Object` @kind object;
  #L4eeb7c.  v5[v1]:= v2 @kind object;
  #L4eeb80.  v1:= v1 + 1;
  #L4eeb84.  goto L4eeb68;
  #L4eeb86.  v0:= length @variable v5;
  #L4eeb88.  if v0 <= v3 then goto L4eeb92;
  #L4eeb8c.  v0:= 0I;
  #L4eeb8e.  v5[v3]:= v0 @kind object;
  #L4eeb92.  return v5 @kind object;
  #L4eeb94.  v3:= v3 + 1;
  #L4eeb98.  goto L4eeb36;
}
procedure `void` `complete`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.complete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eebf4.  call `e`(v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.e:()V` @kind virtual;
  #L4eebfa.  v0:= 1I;
  #L4eebfc.  v1.`io.reactivex.rxjava3.processors.ReplayProcessor$e.f` @type ^`boolean` := v0 @kind boolean;
  #L4eec00.  return @kind void;
}
procedure `void` `d`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v2 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4eed8c.  v0:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.b` @type ^`int`;
  #L4eed90.  v1:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.a` @type ^`int`;
  #L4eed94.  if v0 <= v1 then goto L4eedb4;
  #L4eed98.  v0:= v0 + -1;
  #L4eed9c.  v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.b` @type ^`int` := v0;
  #L4eeda0.  v0:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` @kind object;
  #L4eeda4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eedaa.  v0:= temp @kind object;
  #L4eedac.  v0:= (`io.reactivex.rxjava3.processors.ReplayProcessor$a`) v0 @kind object;
  #L4eedb0.  v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` := v0 @kind object;
  #L4eedb4.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v2 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eedc8.  v0:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` @kind object;
  #L4eedcc.  v0:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$a.a` @type ^`java.lang.Object` @kind object;
  #L4eedd0.  if v0 == 0 then goto L4eedf6;
  #L4eedd4.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$a`;
  #L4eedd8.  v1:= 0I;
  #L4eedda.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4eede0.  v1:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` @kind object;
  #L4eede4.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eedea.  v1:= temp @kind object;
  #L4eedec.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4eedf2.  v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` := v0 @kind object;
  #L4eedf6.  return @kind void;
}
procedure `void` `f`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v13 @kind this, `io.reactivex.rxjava3.processors.ReplayProcessor$c` v14 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.f:(Lio/reactivex/rxjava3/processors/ReplayProcessor$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4eec74.  call temp:= `getAndIncrement`(v14) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4eec7a.  v0:= temp;
  #L4eec7c.  if v0 == 0 then goto L4eec82;
  #L4eec80.  return @kind void;
  #L4eec82.  v0:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4eec86.  v1:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` @kind object;
  #L4eec8a.  v1:= (`io.reactivex.rxjava3.processors.ReplayProcessor$a`) v1 @kind object;
  #L4eec8e.  if v1 != 0 then goto L4eec96;
  #L4eec92.  v1:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` @kind object;
  #L4eec96.  v2:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.f` @type ^`long` @kind wide;
  #L4eec9a.  v4:= 1I;
  #L4eec9c.  v5:= 1I;
  #L4eec9e.  v6:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4eeca2.  call temp:= `get`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4eeca8.  v6:= temp @kind wide;
  #L4eecaa.  v8:= 0I;
  #L4eecac.  v9:= lcmp(v2, v6);
  #L4eecb0.  if v9 == 0 then goto L4eed1e;
  #L4eecb4.  v10:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` @kind boolean;
  #L4eecb8.  if v10 == 0 then goto L4eecc2;
  #L4eecbc.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L4eecc0.  return @kind void;
  #L4eecc2.  v10:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$e.f` @type ^`boolean` @kind boolean;
  #L4eecc6.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eeccc.  v11:= temp @kind object;
  #L4eecce.  v11:= (`io.reactivex.rxjava3.processors.ReplayProcessor$a`) v11 @kind object;
  #L4eecd2.  if v11 != 0 then goto L4eecda;
  #L4eecd6.  v12:= 1I;
  #L4eecd8.  goto L4eecdc;
  #L4eecda.  v12:= 0I;
  #L4eecdc.  if v10 == 0 then goto L4eed04;
  #L4eece0.  if v12 == 0 then goto L4eed04;
  #L4eece4.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L4eece8.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` := v4 @kind boolean;
  #L4eecec.  v14:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$e.e` @type ^`java.lang.Throwable` @kind object;
  #L4eecf0.  if v14 != 0 then goto L4eecfc;
  #L4eecf4.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4eecfa.  goto L4eed02;
  #L4eecfc.  call `onError`(v0, v14) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4eed02.  return @kind void;
  #L4eed04.  if v12 == 0 then goto L4eed0a;
  #L4eed08.  goto L4eed1e;
  #L4eed0a.  v1:= v11.`io.reactivex.rxjava3.processors.ReplayProcessor$a.a` @type ^`java.lang.Object` @kind object;
  #L4eed0e.  call `onNext`(v0, v1) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4eed14.  v8:= 1L;
  #L4eed18.  v2:= v2 + v8 @kind long;
  #L4eed1a.  v1:= v11 @kind object;
  #L4eed1c.  goto L4eecaa;
  #L4eed1e.  if v9 != 0 then goto L4eed64;
  #L4eed22.  v6:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` @kind boolean;
  #L4eed26.  if v6 == 0 then goto L4eed30;
  #L4eed2a.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L4eed2e.  return @kind void;
  #L4eed30.  v6:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$e.f` @type ^`boolean` @kind boolean;
  #L4eed34.  if v6 == 0 then goto L4eed64;
  #L4eed38.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eed3e.  v6:= temp @kind object;
  #L4eed40.  if v6 != 0 then goto L4eed64;
  #L4eed44.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L4eed48.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` := v4 @kind boolean;
  #L4eed4c.  v14:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$e.e` @type ^`java.lang.Throwable` @kind object;
  #L4eed50.  if v14 != 0 then goto L4eed5c;
  #L4eed54.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4eed5a.  goto L4eed62;
  #L4eed5c.  call `onError`(v0, v14) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4eed62.  return @kind void;
  #L4eed64.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4eed68.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.f` @type ^`long` := v2 @kind wide;
  #L4eed6c.  v5:= -v5 @kind int;
  #L4eed6e.  call temp:= `addAndGet`(v14, v5) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4eed74.  v5:= temp;
  #L4eed76.  if v5 != 0 then goto L4eec9e;
  #L4eed7a.  return @kind void;
}
procedure `java.lang.Throwable` `getError`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.getError:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eebac.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$e.e` @type ^`java.lang.Throwable` @kind object;
  #L4eebb0.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v2 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eeafc.  v0:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` @kind object;
  #L4eeb00.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eeb06.  v1:= temp @kind object;
  #L4eeb08.  v1:= (`io.reactivex.rxjava3.processors.ReplayProcessor$a`) v1 @kind object;
  #L4eeb0c.  if v1 != 0 then goto L4eeb16;
  #L4eeb10.  v0:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$a.a` @type ^`java.lang.Object` @kind object;
  #L4eeb14.  return v0 @kind object;
  #L4eeb16.  v0:= v1 @kind object;
  #L4eeb18.  goto L4eeb00;
}
procedure `boolean` `isDone`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eeaa8.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$e.f` @type ^`boolean` @kind boolean;
  #L4eeaac.  return v0;
}
procedure `int` `size`(`io.reactivex.rxjava3.processors.ReplayProcessor$e` v3 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$e;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4eeac0.  v0:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$e.c` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$a` @kind object;
  #L4eeac4.  v1:= 0I;
  #L4eeac6.  v2:= 2147483647I;
  #L4eeacc.  if v1 == v2 then goto L4eeae8;
  #L4eead0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4eead6.  v0:= temp @kind object;
  #L4eead8.  v0:= (`io.reactivex.rxjava3.processors.ReplayProcessor$a`) v0 @kind object;
  #L4eeadc.  if v0 != 0 then goto L4eeae2;
  #L4eeae0.  goto L4eeae8;
  #L4eeae2.  v1:= v1 + 1;
  #L4eeae6.  goto L4eeac6;
  #L4eeae8.  return v1;
}
