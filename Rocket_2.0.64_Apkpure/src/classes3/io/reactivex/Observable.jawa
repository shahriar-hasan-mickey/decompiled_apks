record `io.reactivex.Observable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.ObservableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Observable` v0 @kind this) @signature `Lio/reactivex/Observable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fe6dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fe6e2.  return @kind void;
}
procedure `io.reactivex.Observable` `a`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object, `io.reactivex.functions.Consumer` v9 @kind object, `io.reactivex.functions.Action` v10 @kind object, `io.reactivex.functions.Action` v11 @kind object) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f9df4.  v0:= "onNext is null" @kind object;
  #L3f9df8.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9dfe.  v0:= "onError is null" @kind object;
  #L3f9e02.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9e08.  v0:= "onComplete is null" @kind object;
  #L3f9e0c.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9e12.  v0:= "onAfterTerminate is null" @kind object;
  #L3f9e16.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9e1c.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoOnEach`;
  #L3f9e20.  v1:= v0 @kind object;
  #L3f9e22.  v2:= v7 @kind object;
  #L3f9e24.  v3:= v8 @kind object;
  #L3f9e26.  v4:= v9 @kind object;
  #L3f9e28.  v5:= v10 @kind object;
  #L3f9e2a.  v6:= v11 @kind object;
  #L3f9e2c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3f9e32.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9e38.  v8:= temp @kind object;
  #L3f9e3a.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f8624.  v0:= "sources is null" @kind object;
  #L3f8628.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f862e.  v0:= new `io.reactivex.internal.operators.observable.ObservableAmb`;
  #L3f8632.  v1:= 0I;
  #L3f8634.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3f863a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f8640.  v2:= temp @kind object;
  #L3f8642.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ambArray`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.ambArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f8654.  v0:= "sources is null" @kind object;
  #L3f8658.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f865e.  v0:= length @variable v2;
  #L3f8660.  if v0 != 0 then goto L3f866e;
  #L3f8664.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3f866a.  v2:= temp @kind object;
  #L3f866c.  return v2 @kind object;
  #L3f866e.  v1:= 1I;
  #L3f8670.  if v0 != v1 then goto L3f8684;
  #L3f8674.  v0:= 0I;
  #L3f8676.  v2:= v2[v0] @kind object;
  #L3f867a.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8680.  v2:= temp @kind object;
  #L3f8682.  return v2 @kind object;
  #L3f8684.  v0:= new `io.reactivex.internal.operators.observable.ObservableAmb`;
  #L3f8688.  v1:= 0I;
  #L3f868a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3f8690.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f8696.  v2:= temp @kind object;
  #L3f8698.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `b`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.ObservableSource` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fcb40.  v0:= "timeUnit is null" @kind object;
  #L3fcb44.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcb4a.  v0:= "scheduler is null" @kind object;
  #L3fcb4e.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcb54.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed`;
  #L3fcb58.  v1:= v0 @kind object;
  #L3fcb5a.  v2:= v8 @kind object;
  #L3fcb5c.  v3:= v9 @kind wide;
  #L3fcb5e.  v5:= v11 @kind object;
  #L3fcb60.  v6:= v13 @kind object;
  #L3fcb62.  v7:= v12 @kind object;
  #L3fcb64.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fcb6a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fcb70.  v9:= temp @kind object;
  #L3fcb72.  return v9 @kind object;
}
procedure `int` `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f8428.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L3f842e.  v0:= temp;
  #L3f8430.  return v0;
}
procedure `io.reactivex.Observable` `c`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fcb10.  v0:= "itemTimeoutIndicator is null" @kind object;
  #L3fcb14.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcb1a.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeout`;
  #L3fcb1e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fcb24.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fcb2a.  v2:= temp @kind object;
  #L3fcb2c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object, `io.reactivex.functions.Function9` v12 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8b1c.  v0:= "source1 is null" @kind object;
  #L3f8b20.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b26.  v0:= "source2 is null" @kind object;
  #L3f8b2a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b30.  v0:= "source3 is null" @kind object;
  #L3f8b34.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b3a.  v0:= "source4 is null" @kind object;
  #L3f8b3e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b44.  v0:= "source5 is null" @kind object;
  #L3f8b48.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b4e.  v0:= "source6 is null" @kind object;
  #L3f8b52.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b58.  v0:= "source7 is null" @kind object;
  #L3f8b5c.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b62.  v0:= "source8 is null" @kind object;
  #L3f8b66.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b6c.  v0:= "source9 is null" @kind object;
  #L3f8b70.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8b76.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8b7c.  v12:= temp @kind object;
  #L3f8b7e.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8b84.  v0:= temp;
  #L3f8b86.  v1:= 9I;
  #L3f8b8a.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3f8b8e.  v2:= 0I;
  #L3f8b90.  v1[v2]:= v3 @kind object;
  #L3f8b94.  v3:= 1I;
  #L3f8b96.  v1[v3]:= v4 @kind object;
  #L3f8b9a.  v3:= 2I;
  #L3f8b9c.  v1[v3]:= v5 @kind object;
  #L3f8ba0.  v3:= 3I;
  #L3f8ba2.  v1[v3]:= v6 @kind object;
  #L3f8ba6.  v3:= 4I;
  #L3f8ba8.  v1[v3]:= v7 @kind object;
  #L3f8bac.  v3:= 5I;
  #L3f8bae.  v1[v3]:= v8 @kind object;
  #L3f8bb2.  v3:= 6I;
  #L3f8bb4.  v1[v3]:= v9 @kind object;
  #L3f8bb8.  v3:= 7I;
  #L3f8bba.  v1[v3]:= v10 @kind object;
  #L3f8bbe.  v3:= 8I;
  #L3f8bc2.  v1[v3]:= v11 @kind object;
  #L3f8bc6.  call temp:= `combineLatest`(v12, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8bcc.  v3:= temp @kind object;
  #L3f8bce.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.functions.Function8` v11 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8be0.  v0:= "source1 is null" @kind object;
  #L3f8be4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8bea.  v0:= "source2 is null" @kind object;
  #L3f8bee.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8bf4.  v0:= "source3 is null" @kind object;
  #L3f8bf8.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8bfe.  v0:= "source4 is null" @kind object;
  #L3f8c02.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8c08.  v0:= "source5 is null" @kind object;
  #L3f8c0c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8c12.  v0:= "source6 is null" @kind object;
  #L3f8c16.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8c1c.  v0:= "source7 is null" @kind object;
  #L3f8c20.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8c26.  v0:= "source8 is null" @kind object;
  #L3f8c2a.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8c30.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8c36.  v11:= temp @kind object;
  #L3f8c38.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8c3e.  v0:= temp;
  #L3f8c40.  v1:= 8I;
  #L3f8c44.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3f8c48.  v2:= 0I;
  #L3f8c4a.  v1[v2]:= v3 @kind object;
  #L3f8c4e.  v3:= 1I;
  #L3f8c50.  v1[v3]:= v4 @kind object;
  #L3f8c54.  v3:= 2I;
  #L3f8c56.  v1[v3]:= v5 @kind object;
  #L3f8c5a.  v3:= 3I;
  #L3f8c5c.  v1[v3]:= v6 @kind object;
  #L3f8c60.  v3:= 4I;
  #L3f8c62.  v1[v3]:= v7 @kind object;
  #L3f8c66.  v3:= 5I;
  #L3f8c68.  v1[v3]:= v8 @kind object;
  #L3f8c6c.  v3:= 6I;
  #L3f8c6e.  v1[v3]:= v9 @kind object;
  #L3f8c72.  v3:= 7I;
  #L3f8c74.  v1[v3]:= v10 @kind object;
  #L3f8c78.  call temp:= `combineLatest`(v11, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8c7e.  v3:= temp @kind object;
  #L3f8c80.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.functions.Function7` v10 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8c94.  v0:= "source1 is null" @kind object;
  #L3f8c98.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8c9e.  v0:= "source2 is null" @kind object;
  #L3f8ca2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8ca8.  v0:= "source3 is null" @kind object;
  #L3f8cac.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8cb2.  v0:= "source4 is null" @kind object;
  #L3f8cb6.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8cbc.  v0:= "source5 is null" @kind object;
  #L3f8cc0.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8cc6.  v0:= "source6 is null" @kind object;
  #L3f8cca.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8cd0.  v0:= "source7 is null" @kind object;
  #L3f8cd4.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8cda.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8ce0.  v10:= temp @kind object;
  #L3f8ce2.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8ce8.  v0:= temp;
  #L3f8cea.  v1:= 7I;
  #L3f8cec.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3f8cf0.  v2:= 0I;
  #L3f8cf2.  v1[v2]:= v3 @kind object;
  #L3f8cf6.  v3:= 1I;
  #L3f8cf8.  v1[v3]:= v4 @kind object;
  #L3f8cfc.  v3:= 2I;
  #L3f8cfe.  v1[v3]:= v5 @kind object;
  #L3f8d02.  v3:= 3I;
  #L3f8d04.  v1[v3]:= v6 @kind object;
  #L3f8d08.  v3:= 4I;
  #L3f8d0a.  v1[v3]:= v7 @kind object;
  #L3f8d0e.  v3:= 5I;
  #L3f8d10.  v1[v3]:= v8 @kind object;
  #L3f8d14.  v3:= 6I;
  #L3f8d16.  v1[v3]:= v9 @kind object;
  #L3f8d1a.  call temp:= `combineLatest`(v10, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8d20.  v3:= temp @kind object;
  #L3f8d22.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function6` v9 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8d34.  v0:= "source1 is null" @kind object;
  #L3f8d38.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8d3e.  v0:= "source2 is null" @kind object;
  #L3f8d42.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8d48.  v0:= "source3 is null" @kind object;
  #L3f8d4c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8d52.  v0:= "source4 is null" @kind object;
  #L3f8d56.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8d5c.  v0:= "source5 is null" @kind object;
  #L3f8d60.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8d66.  v0:= "source6 is null" @kind object;
  #L3f8d6a.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8d70.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8d76.  v9:= temp @kind object;
  #L3f8d78.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8d7e.  v0:= temp;
  #L3f8d80.  v1:= 6I;
  #L3f8d82.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3f8d86.  v2:= 0I;
  #L3f8d88.  v1[v2]:= v3 @kind object;
  #L3f8d8c.  v3:= 1I;
  #L3f8d8e.  v1[v3]:= v4 @kind object;
  #L3f8d92.  v3:= 2I;
  #L3f8d94.  v1[v3]:= v5 @kind object;
  #L3f8d98.  v3:= 3I;
  #L3f8d9a.  v1[v3]:= v6 @kind object;
  #L3f8d9e.  v3:= 4I;
  #L3f8da0.  v1[v3]:= v7 @kind object;
  #L3f8da4.  v3:= 5I;
  #L3f8da6.  v1[v3]:= v8 @kind object;
  #L3f8daa.  call temp:= `combineLatest`(v9, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8db0.  v3:= temp @kind object;
  #L3f8db2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.functions.Function5` v8 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8dc4.  v0:= "source1 is null" @kind object;
  #L3f8dc8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8dce.  v0:= "source2 is null" @kind object;
  #L3f8dd2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8dd8.  v0:= "source3 is null" @kind object;
  #L3f8ddc.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8de2.  v0:= "source4 is null" @kind object;
  #L3f8de6.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8dec.  v0:= "source5 is null" @kind object;
  #L3f8df0.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8df6.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8dfc.  v8:= temp @kind object;
  #L3f8dfe.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8e04.  v0:= temp;
  #L3f8e06.  v1:= 5I;
  #L3f8e08.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3f8e0c.  v2:= 0I;
  #L3f8e0e.  v1[v2]:= v3 @kind object;
  #L3f8e12.  v3:= 1I;
  #L3f8e14.  v1[v3]:= v4 @kind object;
  #L3f8e18.  v3:= 2I;
  #L3f8e1a.  v1[v3]:= v5 @kind object;
  #L3f8e1e.  v3:= 3I;
  #L3f8e20.  v1[v3]:= v6 @kind object;
  #L3f8e24.  v3:= 4I;
  #L3f8e26.  v1[v3]:= v7 @kind object;
  #L3f8e2a.  call temp:= `combineLatest`(v8, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8e30.  v3:= temp @kind object;
  #L3f8e32.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function4` v7 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8e44.  v0:= "source1 is null" @kind object;
  #L3f8e48.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8e4e.  v0:= "source2 is null" @kind object;
  #L3f8e52.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8e58.  v0:= "source3 is null" @kind object;
  #L3f8e5c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8e62.  v0:= "source4 is null" @kind object;
  #L3f8e66.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8e6c.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8e72.  v7:= temp @kind object;
  #L3f8e74.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8e7a.  v0:= temp;
  #L3f8e7c.  v1:= 4I;
  #L3f8e7e.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3f8e82.  v2:= 0I;
  #L3f8e84.  v1[v2]:= v3 @kind object;
  #L3f8e88.  v3:= 1I;
  #L3f8e8a.  v1[v3]:= v4 @kind object;
  #L3f8e8e.  v3:= 2I;
  #L3f8e90.  v1[v3]:= v5 @kind object;
  #L3f8e94.  v3:= 3I;
  #L3f8e96.  v1[v3]:= v6 @kind object;
  #L3f8e9a.  call temp:= `combineLatest`(v7, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8ea0.  v3:= temp @kind object;
  #L3f8ea2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function3` v6 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8eb4.  v0:= "source1 is null" @kind object;
  #L3f8eb8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8ebe.  v0:= "source2 is null" @kind object;
  #L3f8ec2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8ec8.  v0:= "source3 is null" @kind object;
  #L3f8ecc.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8ed2.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8ed8.  v6:= temp @kind object;
  #L3f8eda.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8ee0.  v0:= temp;
  #L3f8ee2.  v1:= 3I;
  #L3f8ee4.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3f8ee8.  v2:= 0I;
  #L3f8eea.  v1[v2]:= v3 @kind object;
  #L3f8eee.  v3:= 1I;
  #L3f8ef0.  v1[v3]:= v4 @kind object;
  #L3f8ef4.  v3:= 2I;
  #L3f8ef6.  v1[v3]:= v5 @kind object;
  #L3f8efa.  call temp:= `combineLatest`(v6, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8f00.  v3:= temp @kind object;
  #L3f8f02.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8f14.  v0:= "source1 is null" @kind object;
  #L3f8f18.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8f1e.  v0:= "source2 is null" @kind object;
  #L3f8f22.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8f28.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8f2e.  v5:= temp @kind object;
  #L3f8f30.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8f36.  v0:= temp;
  #L3f8f38.  v1:= 2I;
  #L3f8f3a.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3f8f3e.  v2:= 0I;
  #L3f8f40.  v1[v2]:= v3 @kind object;
  #L3f8f44.  v3:= 1I;
  #L3f8f46.  v1[v3]:= v4 @kind object;
  #L3f8f4a.  call temp:= `combineLatest`(v5, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f8f50.  v3:= temp @kind object;
  #L3f8f52.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.functions.Function` v0 @kind object, `int` v1 , `io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f8fe8.  call temp:= `combineLatest`(v2, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3f8fee.  v0:= temp @kind object;
  #L3f8ff0.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f9004.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f900a.  v0:= temp;
  #L3f900c.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3f9012.  v1:= temp @kind object;
  #L3f9014.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f9028.  v0:= "sources is null" @kind object;
  #L3f902c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9032.  v0:= "combiner is null" @kind object;
  #L3f9036.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f903c.  v0:= "bufferSize" @kind object;
  #L3f9040.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f9046.  v5:= v9 ^< 1;
  #L3f904a.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L3f904e.  v2:= 0I;
  #L3f9050.  v6:= 0I;
  #L3f9052.  v1:= v9 @kind object;
  #L3f9054.  v3:= v7 @kind object;
  #L3f9056.  v4:= v8 @kind object;
  #L3f9058.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3f905e.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9064.  v7:= temp @kind object;
  #L3f9066.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f8f64.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f8f6a.  v0:= temp;
  #L3f8f6c.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3f8f72.  v1:= temp @kind object;
  #L3f8f74.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource`[] v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f8f88.  v0:= "sources is null" @kind object;
  #L3f8f8c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8f92.  v0:= length @variable v7;
  #L3f8f94.  if v0 != 0 then goto L3f8fa2;
  #L3f8f98.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3f8f9e.  v7:= temp @kind object;
  #L3f8fa0.  return v7 @kind object;
  #L3f8fa2.  v0:= "combiner is null" @kind object;
  #L3f8fa6.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8fac.  v0:= "bufferSize" @kind object;
  #L3f8fb0.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f8fb6.  v5:= v9 ^< 1;
  #L3f8fba.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L3f8fbe.  v3:= 0I;
  #L3f8fc0.  v6:= 0I;
  #L3f8fc2.  v1:= v9 @kind object;
  #L3f8fc4.  v2:= v7 @kind object;
  #L3f8fc6.  v4:= v8 @kind object;
  #L3f8fc8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3f8fce.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f8fd4.  v7:= temp @kind object;
  #L3f8fd6.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.functions.Function` v0 @kind object, `int` v1 , `io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f90f4.  call temp:= `combineLatestDelayError`(v2, v0, v1) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3f90fa.  v0:= temp @kind object;
  #L3f90fc.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f9110.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9116.  v0:= temp;
  #L3f9118.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3f911e.  v1:= temp @kind object;
  #L3f9120.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f9134.  v0:= "sources is null" @kind object;
  #L3f9138.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f913e.  v0:= "combiner is null" @kind object;
  #L3f9142.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9148.  v0:= "bufferSize" @kind object;
  #L3f914c.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f9152.  v5:= v9 ^< 1;
  #L3f9156.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L3f915a.  v2:= 0I;
  #L3f915c.  v6:= 1I;
  #L3f915e.  v1:= v9 @kind object;
  #L3f9160.  v3:= v7 @kind object;
  #L3f9162.  v4:= v8 @kind object;
  #L3f9164.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3f916a.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9170.  v7:= temp @kind object;
  #L3f9172.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.ObservableSource`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f9078.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f907e.  v0:= temp;
  #L3f9080.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3f9086.  v1:= temp @kind object;
  #L3f9088.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.ObservableSource`[] v6 @kind object, `io.reactivex.functions.Function` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f909c.  v0:= "bufferSize" @kind object;
  #L3f90a0.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f90a6.  v0:= "combiner is null" @kind object;
  #L3f90aa.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f90b0.  v0:= length @variable v6;
  #L3f90b2.  if v0 != 0 then goto L3f90c0;
  #L3f90b6.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3f90bc.  v6:= temp @kind object;
  #L3f90be.  return v6 @kind object;
  #L3f90c0.  v4:= v8 ^< 1;
  #L3f90c4.  v8:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L3f90c8.  v2:= 0I;
  #L3f90ca.  v5:= 1I;
  #L3f90cc.  v0:= v8 @kind object;
  #L3f90ce.  v1:= v6 @kind object;
  #L3f90d0.  v3:= v7 @kind object;
  #L3f90d2.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3f90d8.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f90de.  v6:= temp @kind object;
  #L3f90e0.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f91b8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f91be.  v0:= temp;
  #L3f91c0.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L3f91c6.  v1:= temp @kind object;
  #L3f91c8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f91dc.  v0:= "sources is null" @kind object;
  #L3f91e0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f91e6.  v0:= "prefetch" @kind object;
  #L3f91ea.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f91f0.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3f91f4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f91fa.  v1:= temp @kind object;
  #L3f91fc.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f9200.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3f9206.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f920c.  v3:= temp @kind object;
  #L3f920e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f9220.  v0:= "source1 is null" @kind object;
  #L3f9224.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f922a.  v0:= "source2 is null" @kind object;
  #L3f922e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9234.  v0:= 2I;
  #L3f9236.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3f923a.  v1:= 0I;
  #L3f923c.  v0[v1]:= v2 @kind object;
  #L3f9240.  v2:= 1I;
  #L3f9242.  v0[v2]:= v3 @kind object;
  #L3f9246.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f924c.  v2:= temp @kind object;
  #L3f924e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f9260.  v0:= "source1 is null" @kind object;
  #L3f9264.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f926a.  v0:= "source2 is null" @kind object;
  #L3f926e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9274.  v0:= "source3 is null" @kind object;
  #L3f9278.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f927e.  v0:= 3I;
  #L3f9280.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3f9284.  v1:= 0I;
  #L3f9286.  v0[v1]:= v2 @kind object;
  #L3f928a.  v2:= 1I;
  #L3f928c.  v0[v2]:= v3 @kind object;
  #L3f9290.  v2:= 2I;
  #L3f9292.  v0[v2]:= v4 @kind object;
  #L3f9296.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f929c.  v2:= temp @kind object;
  #L3f929e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f92b0.  v0:= "source1 is null" @kind object;
  #L3f92b4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f92ba.  v0:= "source2 is null" @kind object;
  #L3f92be.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f92c4.  v0:= "source3 is null" @kind object;
  #L3f92c8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f92ce.  v0:= "source4 is null" @kind object;
  #L3f92d2.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f92d8.  v0:= 4I;
  #L3f92da.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3f92de.  v1:= 0I;
  #L3f92e0.  v0[v1]:= v2 @kind object;
  #L3f92e4.  v2:= 1I;
  #L3f92e6.  v0[v2]:= v3 @kind object;
  #L3f92ea.  v2:= 2I;
  #L3f92ec.  v0[v2]:= v4 @kind object;
  #L3f92f0.  v2:= 3I;
  #L3f92f2.  v0[v2]:= v5 @kind object;
  #L3f92f6.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f92fc.  v2:= temp @kind object;
  #L3f92fe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/Observable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f9310.  v0:= "sources is null" @kind object;
  #L3f9314.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f931a.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3f9320.  v3:= temp @kind object;
  #L3f9322.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f9328.  v0:= temp @kind object;
  #L3f932a.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9330.  v1:= temp;
  #L3f9332.  v2:= 0I;
  #L3f9334.  call temp:= `concatMapDelayError`(v3, v0, v1, v2) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @kind virtual;
  #L3f933a.  v3:= temp @kind object;
  #L3f933c.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatArray`(`io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f9350.  v0:= length @variable v4;
  #L3f9352.  if v0 != 0 then goto L3f9360;
  #L3f9356.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3f935c.  v4:= temp @kind object;
  #L3f935e.  return v4 @kind object;
  #L3f9360.  v0:= length @variable v4;
  #L3f9362.  v1:= 1I;
  #L3f9364.  if v0 != v1 then goto L3f9378;
  #L3f9368.  v0:= 0I;
  #L3f936a.  v4:= v4[v0] @kind object;
  #L3f936e.  call temp:= `wrap`(v4) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f9374.  v4:= temp @kind object;
  #L3f9376.  return v4 @kind object;
  #L3f9378.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3f937c.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3f9382.  v4:= temp @kind object;
  #L3f9384.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f938a.  v1:= temp @kind object;
  #L3f938c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9392.  v2:= temp;
  #L3f9394.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f9398.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3f939e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f93a4.  v4:= temp @kind object;
  #L3f93a6.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayDelayError`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.concatArrayDelayError:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f93b8.  v0:= length @variable v2;
  #L3f93ba.  if v0 != 0 then goto L3f93c8;
  #L3f93be.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3f93c4.  v2:= temp @kind object;
  #L3f93c6.  return v2 @kind object;
  #L3f93c8.  v0:= length @variable v2;
  #L3f93ca.  v1:= 1I;
  #L3f93cc.  if v0 != v1 then goto L3f93e0;
  #L3f93d0.  v0:= 0I;
  #L3f93d2.  v2:= v2[v0] @kind object;
  #L3f93d6.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f93dc.  v2:= temp @kind object;
  #L3f93de.  return v2 @kind object;
  #L3f93e0.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3f93e6.  v2:= temp @kind object;
  #L3f93e8.  call temp:= `concatDelayError`(v2) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f93ee.  v2:= temp @kind object;
  #L3f93f0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEager`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEager:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f9404.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3f940a.  v4:= temp @kind object;
  #L3f940c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f9412.  v0:= temp @kind object;
  #L3f9414.  v1:= 0I;
  #L3f9416.  call temp:= `concatMapEagerDelayError`(v4, v0, v2, v3, v1) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L3f941c.  v2:= temp @kind object;
  #L3f941e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEager`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEager:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f9430.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9436.  v0:= temp;
  #L3f9438.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f943e.  v1:= temp;
  #L3f9440.  call temp:= `concatArrayEager`(v0, v1, v2) @signature `Lio/reactivex/Observable;.concatArrayEager:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f9446.  v2:= temp @kind object;
  #L3f9448.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f945c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9462.  v0:= temp;
  #L3f9464.  v1:= 1I;
  #L3f9466.  call temp:= `concatDelayError`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;IZ)Lio/reactivex/Observable;` @kind static;
  #L3f946c.  v2:= temp @kind object;
  #L3f946e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`io.reactivex.ObservableSource` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;IZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f9480.  v0:= "sources is null" @kind object;
  #L3f9484.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f948a.  v0:= "prefetch is null" @kind object;
  #L3f948e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f9494.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3f9498.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f949e.  v1:= temp @kind object;
  #L3f94a0.  if v4 == 0 then goto L3f94aa;
  #L3f94a4.  v4:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f94a8.  goto L3f94ae;
  #L3f94aa.  v4:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f94ae.  call `<init>`(v0, v2, v1, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3f94b4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f94ba.  v2:= temp @kind object;
  #L3f94bc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f94d0.  v0:= "sources is null" @kind object;
  #L3f94d4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f94da.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3f94e0.  v1:= temp @kind object;
  #L3f94e2.  call temp:= `concatDelayError`(v1) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f94e8.  v1:= temp @kind object;
  #L3f94ea.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f94fc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9502.  v0:= temp;
  #L3f9504.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f950a.  v1:= temp;
  #L3f950c.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;II)Lio/reactivex/Observable;` @kind static;
  #L3f9512.  v2:= temp @kind object;
  #L3f9514.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`io.reactivex.ObservableSource` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f9528.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f952e.  v0:= temp @kind object;
  #L3f9530.  v1:= "maxConcurrency is null" @kind object;
  #L3f9534.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f953a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f9540.  v0:= temp @kind object;
  #L3f9542.  v1:= "prefetch is null" @kind object;
  #L3f9546.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f954c.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f9552.  v2:= temp @kind object;
  #L3f9554.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f955a.  v0:= temp @kind object;
  #L3f955c.  call temp:= `concatMapEager`(v2, v0, v3, v4) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @kind virtual;
  #L3f9562.  v2:= temp @kind object;
  #L3f9564.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f9578.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f957e.  v0:= temp;
  #L3f9580.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9586.  v1:= temp;
  #L3f9588.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @kind static;
  #L3f958e.  v2:= temp @kind object;
  #L3f9590.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f95a4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f95aa.  v0:= temp @kind object;
  #L3f95ac.  v1:= "maxConcurrency is null" @kind object;
  #L3f95b0.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f95b6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f95bc.  v0:= temp @kind object;
  #L3f95be.  v1:= "prefetch is null" @kind object;
  #L3f95c2.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f95c8.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3f95ce.  v2:= temp @kind object;
  #L3f95d0.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f95d6.  v0:= temp @kind object;
  #L3f95d8.  v1:= 0I;
  #L3f95da.  call temp:= `concatMapEagerDelayError`(v2, v0, v3, v4, v1) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L3f95e0.  v2:= temp @kind object;
  #L3f95e2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `create`(`io.reactivex.ObservableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Observable;.create:(Lio/reactivex/ObservableOnSubscribe;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f989c.  v0:= "source is null" @kind object;
  #L3f98a0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f98a6.  v0:= new `io.reactivex.internal.operators.observable.ObservableCreate`;
  #L3f98aa.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCreate;.<init>:(Lio/reactivex/ObservableOnSubscribe;)V` @kind direct;
  #L3f98b0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f98b6.  v1:= temp @kind object;
  #L3f98b8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f9990.  v0:= "supplier is null" @kind object;
  #L3f9994.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f999a.  v0:= new `io.reactivex.internal.operators.observable.ObservableDefer`;
  #L3f999e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3f99a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f99aa.  v1:= temp @kind object;
  #L3f99ac.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f9f2c.  v0:= `@@io.reactivex.internal.operators.observable.ObservableEmpty.INSTANCE` @type ^`io.reactivex.Observable` @kind object;
  #L3f9f30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9f36.  v0:= temp @kind object;
  #L3f9f38.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Observable;.error:(Ljava/lang/Throwable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f9f4c.  v0:= "e is null" @kind object;
  #L3f9f50.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9f56.  call temp:= `justCallable`(v1) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L3f9f5c.  v1:= temp @kind object;
  #L3f9f5e.  call temp:= `error`(v1) @signature `Lio/reactivex/Observable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind static;
  #L3f9f64.  v1:= temp @kind object;
  #L3f9f66.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f9f78.  v0:= "errorSupplier is null" @kind object;
  #L3f9f7c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9f82.  v0:= new `io.reactivex.internal.operators.observable.ObservableError`;
  #L3f9f86.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableError;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3f9f8c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9f92.  v1:= temp @kind object;
  #L3f9f94.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromArray`(`java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fa36c.  v0:= "items is null" @kind object;
  #L3fa370.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa376.  v0:= length @variable v2;
  #L3fa378.  if v0 != 0 then goto L3fa386;
  #L3fa37c.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fa382.  v2:= temp @kind object;
  #L3fa384.  return v2 @kind object;
  #L3fa386.  v0:= length @variable v2;
  #L3fa388.  v1:= 1I;
  #L3fa38a.  if v0 != v1 then goto L3fa39e;
  #L3fa38e.  v0:= 0I;
  #L3fa390.  v2:= v2[v0] @kind object;
  #L3fa394.  call temp:= `just`(v2) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fa39a.  v2:= temp @kind object;
  #L3fa39c.  return v2 @kind object;
  #L3fa39e.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromArray`;
  #L3fa3a2.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L3fa3a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa3ae.  v2:= temp @kind object;
  #L3fa3b0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa3c4.  v0:= "supplier is null" @kind object;
  #L3fa3c8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa3ce.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromCallable`;
  #L3fa3d2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3fa3d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa3de.  v1:= temp @kind object;
  #L3fa3e0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fa3f4.  v0:= "future is null" @kind object;
  #L3fa3f8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa3fe.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromFuture`;
  #L3fa402.  v1:= 0L;
  #L3fa406.  v3:= 0I;
  #L3fa408.  call `<init>`(v0, v4, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L3fa40e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa414.  v4:= temp @kind object;
  #L3fa416.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa454.  v0:= "future is null" @kind object;
  #L3fa458.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa45e.  v0:= "unit is null" @kind object;
  #L3fa462.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa468.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromFuture`;
  #L3fa46c.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L3fa472.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa478.  v1:= temp @kind object;
  #L3fa47a.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa48c.  v0:= "scheduler is null" @kind object;
  #L3fa490.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa496.  call temp:= `fromFuture`(v1, v2, v4) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L3fa49c.  v1:= temp @kind object;
  #L3fa49e.  call temp:= `subscribeOn`(v1, v5) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fa4a4.  v1:= temp @kind object;
  #L3fa4a6.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa428.  v0:= "scheduler is null" @kind object;
  #L3fa42c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa432.  call temp:= `fromFuture`(v1) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Observable;` @kind static;
  #L3fa438.  v1:= temp @kind object;
  #L3fa43a.  call temp:= `subscribeOn`(v1, v2) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fa440.  v1:= temp @kind object;
  #L3fa442.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromIterable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa4b8.  v0:= "source is null" @kind object;
  #L3fa4bc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa4c2.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromIterable`;
  #L3fa4c6.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L3fa4cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa4d2.  v1:= temp @kind object;
  #L3fa4d4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Observable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa4e8.  v0:= "publisher is null" @kind object;
  #L3fa4ec.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa4f2.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromPublisher`;
  #L3fa4f6.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3fa4fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa502.  v1:= temp @kind object;
  #L3fa504.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fa518.  v0:= "generator  is null" @kind object;
  #L3fa51c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa522.  call temp:= `nullSupplier`() @signature `Lio/reactivex/internal/functions/Functions;.nullSupplier:()Ljava/util/concurrent/Callable;` @kind static;
  #L3fa528.  v0:= temp @kind object;
  #L3fa52a.  call temp:= `simpleGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleGenerator:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L3fa530.  v2:= temp @kind object;
  #L3fa532.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3fa538.  v1:= temp @kind object;
  #L3fa53a.  call temp:= `generate`(v0, v2, v1) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L3fa540.  v2:= temp @kind object;
  #L3fa542.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa554.  v0:= "generator  is null" @kind object;
  #L3fa558.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa55e.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L3fa564.  v2:= temp @kind object;
  #L3fa566.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3fa56c.  v0:= temp @kind object;
  #L3fa56e.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L3fa574.  v1:= temp @kind object;
  #L3fa576.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa588.  v0:= "generator  is null" @kind object;
  #L3fa58c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa592.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L3fa598.  v2:= temp @kind object;
  #L3fa59a.  call temp:= `generate`(v1, v2, v3) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L3fa5a0.  v1:= temp @kind object;
  #L3fa5a2.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa5b4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3fa5ba.  v0:= temp @kind object;
  #L3fa5bc.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L3fa5c2.  v1:= temp @kind object;
  #L3fa5c4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa5d8.  v0:= "initialState is null" @kind object;
  #L3fa5dc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa5e2.  v0:= "generator  is null" @kind object;
  #L3fa5e6.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa5ec.  v0:= "disposeState is null" @kind object;
  #L3fa5f0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa5f6.  v0:= new `io.reactivex.internal.operators.observable.ObservableGenerate`;
  #L3fa5fa.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableGenerate;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3fa600.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa606.  v1:= temp @kind object;
  #L3fa608.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fa7d4.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fa7da.  v5:= temp @kind object;
  #L3fa7dc.  v0:= v6 @kind wide;
  #L3fa7de.  v2:= v8 @kind wide;
  #L3fa7e0.  v4:= v10 @kind object;
  #L3fa7e2.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3fa7e8.  v6:= temp @kind object;
  #L3fa7ea.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v8 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fa7fc.  v0:= "unit is null" @kind object;
  #L3fa800.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa806.  v0:= "scheduler is null" @kind object;
  #L3fa80a.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa810.  v0:= new `io.reactivex.internal.operators.observable.ObservableInterval`;
  #L3fa814.  v1:= 0L;
  #L3fa818.  call temp:= `max`(v1, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3fa81e.  v8:= temp @kind wide;
  #L3fa820.  call temp:= `max`(v1, v10) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3fa826.  v4:= temp @kind wide;
  #L3fa828.  v1:= v0 @kind object;
  #L3fa82a.  v2:= v8 @kind wide;
  #L3fa82c.  v6:= v12 @kind object;
  #L3fa82e.  v7:= v13 @kind object;
  #L3fa830.  call `<init>`(v1, v2, v4, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fa836.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa83c.  v8:= temp @kind object;
  #L3fa83e.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/Observable;.interval:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fa788.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fa78e.  v5:= temp @kind object;
  #L3fa790.  v0:= v6 @kind wide;
  #L3fa792.  v2:= v6 @kind wide;
  #L3fa794.  v4:= v8 @kind object;
  #L3fa796.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3fa79c.  v6:= temp @kind object;
  #L3fa79e.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object, `io.reactivex.Scheduler` v9 @kind object) @signature `Lio/reactivex/Observable;.interval:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fa7b0.  v0:= v6 @kind wide;
  #L3fa7b2.  v2:= v6 @kind wide;
  #L3fa7b4.  v4:= v8 @kind object;
  #L3fa7b6.  v5:= v9 @kind object;
  #L3fa7b8.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3fa7be.  v6:= temp @kind object;
  #L3fa7c0.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `intervalRange`(`long` v10 , `long` v12 , `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3fa850.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fa856.  v9:= temp @kind object;
  #L3fa858.  v0:= v10 @kind wide;
  #L3fa85a.  v2:= v12 @kind wide;
  #L3fa85c.  v4:= v14 @kind wide;
  #L3fa85e.  v6:= v16 @kind wide;
  #L3fa862.  v8:= v18 @kind object;
  #L3fa866.  call temp:= `intervalRange`(v0, v2, v4, v6, v8, v9) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3fa86c.  v0:= temp @kind object;
  #L3fa86e.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `intervalRange`(`long` v16 , `long` v18 , `long` v20 , `long` v22 , `java.util.concurrent.TimeUnit` v24 @kind object, `io.reactivex.Scheduler` v25 @kind object) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3fa880.  v0:= v18 @kind wide;
  #L3fa884.  v2:= v20 @kind wide;
  #L3fa888.  v9:= v24 @kind object;
  #L3fa88c.  v10:= v25 @kind object;
  #L3fa890.  v4:= 0L;
  #L3fa894.  v6:= lcmp(v0, v4);
  #L3fa898.  if v6 < 0 then goto L3fa92e;
  #L3fa89c.  if v6 != 0 then goto L3fa8b2;
  #L3fa8a0.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fa8a6.  v0:= temp @kind object;
  #L3fa8a8.  call temp:= `delay`(v0, v2, v9, v10) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fa8ae.  v0:= temp @kind object;
  #L3fa8b0.  return v0 @kind object;
  #L3fa8b2.  v6:= 1L;
  #L3fa8b6.  v0:= v0 - v6 @kind long;
  #L3fa8b8.  v6:= v16 + v0 @kind long;
  #L3fa8bc.  v0:= lcmp(v16, v4);
  #L3fa8c0.  if v0 <= 0 then goto L3fa8de;
  #L3fa8c4.  v0:= lcmp(v6, v4);
  #L3fa8c8.  if v0 < 0 then goto L3fa8ce;
  #L3fa8cc.  goto L3fa8de;
  #L3fa8ce.  v0:= new `java.lang.IllegalArgumentException`;
  #L3fa8d2.  v1:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L3fa8d6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fa8dc.  throw v0;
  #L3fa8de.  v0:= "unit is null" @kind object;
  #L3fa8e2.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa8e8.  v0:= "scheduler is null" @kind object;
  #L3fa8ec.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa8f2.  v11:= new `io.reactivex.internal.operators.observable.ObservableIntervalRange`;
  #L3fa8f6.  call temp:= `max`(v4, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3fa8fc.  v12:= temp @kind wide;
  #L3fa8fe.  v0:= v22 @kind wide;
  #L3fa902.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3fa908.  v14:= temp @kind wide;
  #L3fa90a.  v0:= v11 @kind object;
  #L3fa90c.  v1:= v16 @kind wide;
  #L3fa910.  v3:= v6 @kind wide;
  #L3fa912.  v5:= v12 @kind wide;
  #L3fa914.  v7:= v14 @kind wide;
  #L3fa916.  v9:= v24 @kind object;
  #L3fa91a.  v10:= v25 @kind object;
  #L3fa91e.  call `<init>`(v0, v1, v3, v5, v7, v9, v10) @signature `Lio/reactivex/internal/operators/observable/ObservableIntervalRange;.<init>:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fa924.  call temp:= `onAssembly`(v11) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa92a.  v0:= temp @kind object;
  #L3fa92c.  return v0 @kind object;
  #L3fa92e.  v2:= new `java.lang.IllegalArgumentException`;
  #L3fa932.  v3:= new `java.lang.StringBuilder`;
  #L3fa936.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa93c.  v4:= "count >= 0 required but it was " @kind object;
  #L3fa940.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa946.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa94c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa952.  v0:= temp @kind object;
  #L3fa954.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fa95a.  throw v2;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fa9c4.  v0:= "The item is null" @kind object;
  #L3fa9c8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa9ce.  v0:= new `io.reactivex.internal.operators.observable.ObservableJust`;
  #L3fa9d2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3fa9d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa9de.  v1:= temp @kind object;
  #L3fa9e0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fa9f4.  v0:= "The first item is null" @kind object;
  #L3fa9f8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa9fe.  v0:= "The second item is null" @kind object;
  #L3faa02.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faa08.  v0:= 2I;
  #L3faa0a.  v0:= new `java.lang.Object`[v0];
  #L3faa0e.  v1:= 0I;
  #L3faa10.  v0[v1]:= v2 @kind object;
  #L3faa14.  v2:= 1I;
  #L3faa16.  v0[v2]:= v3 @kind object;
  #L3faa1a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3faa20.  v2:= temp @kind object;
  #L3faa22.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3faa34.  v0:= "The first item is null" @kind object;
  #L3faa38.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faa3e.  v0:= "The second item is null" @kind object;
  #L3faa42.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faa48.  v0:= "The third item is null" @kind object;
  #L3faa4c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faa52.  v0:= 3I;
  #L3faa54.  v0:= new `java.lang.Object`[v0];
  #L3faa58.  v1:= 0I;
  #L3faa5a.  v0[v1]:= v2 @kind object;
  #L3faa5e.  v2:= 1I;
  #L3faa60.  v0[v2]:= v3 @kind object;
  #L3faa64.  v2:= 2I;
  #L3faa66.  v0[v2]:= v4 @kind object;
  #L3faa6a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3faa70.  v2:= temp @kind object;
  #L3faa72.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3faa84.  v0:= "The first item is null" @kind object;
  #L3faa88.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faa8e.  v0:= "The second item is null" @kind object;
  #L3faa92.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faa98.  v0:= "The third item is null" @kind object;
  #L3faa9c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faaa2.  v0:= "The fourth item is null" @kind object;
  #L3faaa6.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faaac.  v0:= 4I;
  #L3faaae.  v0:= new `java.lang.Object`[v0];
  #L3faab2.  v1:= 0I;
  #L3faab4.  v0[v1]:= v2 @kind object;
  #L3faab8.  v2:= 1I;
  #L3faaba.  v0[v2]:= v3 @kind object;
  #L3faabe.  v2:= 2I;
  #L3faac0.  v0[v2]:= v4 @kind object;
  #L3faac4.  v2:= 3I;
  #L3faac6.  v0[v2]:= v5 @kind object;
  #L3faaca.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3faad0.  v2:= temp @kind object;
  #L3faad2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3faae4.  v0:= "The first item is null" @kind object;
  #L3faae8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faaee.  v0:= "The second item is null" @kind object;
  #L3faaf2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faaf8.  v0:= "The third item is null" @kind object;
  #L3faafc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab02.  v0:= "The fourth item is null" @kind object;
  #L3fab06.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab0c.  v0:= "The fifth item is null" @kind object;
  #L3fab10.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab16.  v0:= 5I;
  #L3fab18.  v0:= new `java.lang.Object`[v0];
  #L3fab1c.  v1:= 0I;
  #L3fab1e.  v0[v1]:= v2 @kind object;
  #L3fab22.  v2:= 1I;
  #L3fab24.  v0[v2]:= v3 @kind object;
  #L3fab28.  v2:= 2I;
  #L3fab2a.  v0[v2]:= v4 @kind object;
  #L3fab2e.  v2:= 3I;
  #L3fab30.  v0[v2]:= v5 @kind object;
  #L3fab34.  v2:= 4I;
  #L3fab36.  v0[v2]:= v6 @kind object;
  #L3fab3a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fab40.  v2:= temp @kind object;
  #L3fab42.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fab54.  v0:= "The first item is null" @kind object;
  #L3fab58.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab5e.  v0:= "The second item is null" @kind object;
  #L3fab62.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab68.  v0:= "The third item is null" @kind object;
  #L3fab6c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab72.  v0:= "The fourth item is null" @kind object;
  #L3fab76.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab7c.  v0:= "The fifth item is null" @kind object;
  #L3fab80.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab86.  v0:= "The sixth item is null" @kind object;
  #L3fab8a.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fab90.  v0:= 6I;
  #L3fab92.  v0:= new `java.lang.Object`[v0];
  #L3fab96.  v1:= 0I;
  #L3fab98.  v0[v1]:= v2 @kind object;
  #L3fab9c.  v2:= 1I;
  #L3fab9e.  v0[v2]:= v3 @kind object;
  #L3faba2.  v2:= 2I;
  #L3faba4.  v0[v2]:= v4 @kind object;
  #L3faba8.  v2:= 3I;
  #L3fabaa.  v0[v2]:= v5 @kind object;
  #L3fabae.  v2:= 4I;
  #L3fabb0.  v0[v2]:= v6 @kind object;
  #L3fabb4.  v2:= 5I;
  #L3fabb6.  v0[v2]:= v7 @kind object;
  #L3fabba.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fabc0.  v2:= temp @kind object;
  #L3fabc2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fabd4.  v0:= "The first item is null" @kind object;
  #L3fabd8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fabde.  v0:= "The second item is null" @kind object;
  #L3fabe2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fabe8.  v0:= "The third item is null" @kind object;
  #L3fabec.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fabf2.  v0:= "The fourth item is null" @kind object;
  #L3fabf6.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fabfc.  v0:= "The fifth item is null" @kind object;
  #L3fac00.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fac06.  v0:= "The sixth item is null" @kind object;
  #L3fac0a.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fac10.  v0:= "The seventh item is null" @kind object;
  #L3fac14.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fac1a.  v0:= 7I;
  #L3fac1c.  v0:= new `java.lang.Object`[v0];
  #L3fac20.  v1:= 0I;
  #L3fac22.  v0[v1]:= v2 @kind object;
  #L3fac26.  v2:= 1I;
  #L3fac28.  v0[v2]:= v3 @kind object;
  #L3fac2c.  v2:= 2I;
  #L3fac2e.  v0[v2]:= v4 @kind object;
  #L3fac32.  v2:= 3I;
  #L3fac34.  v0[v2]:= v5 @kind object;
  #L3fac38.  v2:= 4I;
  #L3fac3a.  v0[v2]:= v6 @kind object;
  #L3fac3e.  v2:= 5I;
  #L3fac40.  v0[v2]:= v7 @kind object;
  #L3fac44.  v2:= 6I;
  #L3fac46.  v0[v2]:= v8 @kind object;
  #L3fac4a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fac50.  v2:= temp @kind object;
  #L3fac52.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fac64.  v0:= "The first item is null" @kind object;
  #L3fac68.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fac6e.  v0:= "The second item is null" @kind object;
  #L3fac72.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fac78.  v0:= "The third item is null" @kind object;
  #L3fac7c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fac82.  v0:= "The fourth item is null" @kind object;
  #L3fac86.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fac8c.  v0:= "The fifth item is null" @kind object;
  #L3fac90.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fac96.  v0:= "The sixth item is null" @kind object;
  #L3fac9a.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faca0.  v0:= "The seventh item is null" @kind object;
  #L3faca4.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3facaa.  v0:= "The eighth item is null" @kind object;
  #L3facae.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3facb4.  v0:= 8I;
  #L3facb8.  v0:= new `java.lang.Object`[v0];
  #L3facbc.  v1:= 0I;
  #L3facbe.  v0[v1]:= v2 @kind object;
  #L3facc2.  v2:= 1I;
  #L3facc4.  v0[v2]:= v3 @kind object;
  #L3facc8.  v2:= 2I;
  #L3facca.  v0[v2]:= v4 @kind object;
  #L3facce.  v2:= 3I;
  #L3facd0.  v0[v2]:= v5 @kind object;
  #L3facd4.  v2:= 4I;
  #L3facd6.  v0[v2]:= v6 @kind object;
  #L3facda.  v2:= 5I;
  #L3facdc.  v0[v2]:= v7 @kind object;
  #L3face0.  v2:= 6I;
  #L3face2.  v0[v2]:= v8 @kind object;
  #L3face6.  v2:= 7I;
  #L3face8.  v0[v2]:= v9 @kind object;
  #L3facec.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3facf2.  v2:= temp @kind object;
  #L3facf4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fad08.  v0:= "The first item is null" @kind object;
  #L3fad0c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad12.  v0:= "The second item is null" @kind object;
  #L3fad16.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad1c.  v0:= "The third item is null" @kind object;
  #L3fad20.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad26.  v0:= "The fourth item is null" @kind object;
  #L3fad2a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad30.  v0:= "The fifth item is null" @kind object;
  #L3fad34.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad3a.  v0:= "The sixth item is null" @kind object;
  #L3fad3e.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad44.  v0:= "The seventh item is null" @kind object;
  #L3fad48.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad4e.  v0:= "The eighth item is null" @kind object;
  #L3fad52.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad58.  v0:= "The ninth item is null" @kind object;
  #L3fad5c.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fad62.  v0:= 9I;
  #L3fad66.  v0:= new `java.lang.Object`[v0];
  #L3fad6a.  v1:= 0I;
  #L3fad6c.  v0[v1]:= v2 @kind object;
  #L3fad70.  v2:= 1I;
  #L3fad72.  v0[v2]:= v3 @kind object;
  #L3fad76.  v2:= 2I;
  #L3fad78.  v0[v2]:= v4 @kind object;
  #L3fad7c.  v2:= 3I;
  #L3fad7e.  v0[v2]:= v5 @kind object;
  #L3fad82.  v2:= 4I;
  #L3fad84.  v0[v2]:= v6 @kind object;
  #L3fad88.  v2:= 5I;
  #L3fad8a.  v0[v2]:= v7 @kind object;
  #L3fad8e.  v2:= 6I;
  #L3fad90.  v0[v2]:= v8 @kind object;
  #L3fad94.  v2:= 7I;
  #L3fad96.  v0[v2]:= v9 @kind object;
  #L3fad9a.  v2:= 8I;
  #L3fad9e.  v0[v2]:= v10 @kind object;
  #L3fada2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fada8.  v2:= temp @kind object;
  #L3fadaa.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fadbc.  v0:= "The first item is null" @kind object;
  #L3fadc0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fadc6.  v0:= "The second item is null" @kind object;
  #L3fadca.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fadd0.  v0:= "The third item is null" @kind object;
  #L3fadd4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fadda.  v0:= "The fourth item is null" @kind object;
  #L3fadde.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fade4.  v0:= "The fifth item is null" @kind object;
  #L3fade8.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fadee.  v0:= "The sixth item is null" @kind object;
  #L3fadf2.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fadf8.  v0:= "The seventh item is null" @kind object;
  #L3fadfc.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fae02.  v0:= "The eighth item is null" @kind object;
  #L3fae06.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fae0c.  v0:= "The ninth item is null" @kind object;
  #L3fae10.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fae16.  v0:= "The tenth item is null" @kind object;
  #L3fae1a.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fae20.  v0:= 10I;
  #L3fae24.  v0:= new `java.lang.Object`[v0];
  #L3fae28.  v1:= 0I;
  #L3fae2a.  v0[v1]:= v2 @kind object;
  #L3fae2e.  v2:= 1I;
  #L3fae30.  v0[v2]:= v3 @kind object;
  #L3fae34.  v2:= 2I;
  #L3fae36.  v0[v2]:= v4 @kind object;
  #L3fae3a.  v2:= 3I;
  #L3fae3c.  v0[v2]:= v5 @kind object;
  #L3fae40.  v2:= 4I;
  #L3fae42.  v0[v2]:= v6 @kind object;
  #L3fae46.  v2:= 5I;
  #L3fae48.  v0[v2]:= v7 @kind object;
  #L3fae4c.  v2:= 6I;
  #L3fae4e.  v0[v2]:= v8 @kind object;
  #L3fae52.  v2:= 7I;
  #L3fae54.  v0[v2]:= v9 @kind object;
  #L3fae58.  v2:= 8I;
  #L3fae5c.  v0[v2]:= v10 @kind object;
  #L3fae60.  v2:= 9I;
  #L3fae64.  v0[v2]:= v11 @kind object;
  #L3fae68.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fae6e.  v2:= temp @kind object;
  #L3fae70.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v7 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3faf08.  v0:= "sources is null" @kind object;
  #L3faf0c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faf12.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3faf16.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3faf1c.  v3:= temp @kind object;
  #L3faf1e.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3faf24.  v6:= temp;
  #L3faf26.  v4:= 0I;
  #L3faf28.  v5:= 2147483647I;
  #L3faf2e.  v1:= v0 @kind object;
  #L3faf30.  v2:= v7 @kind object;
  #L3faf32.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3faf38.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3faf3e.  v7:= temp @kind object;
  #L3faf40.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3faf54.  v0:= "sources is null" @kind object;
  #L3faf58.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faf5e.  v0:= "maxConcurrency" @kind object;
  #L3faf62.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3faf68.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3faf6c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3faf72.  v3:= temp @kind object;
  #L3faf74.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3faf7a.  v6:= temp;
  #L3faf7c.  v4:= 0I;
  #L3faf7e.  v1:= v0 @kind object;
  #L3faf80.  v2:= v7 @kind object;
  #L3faf82.  v5:= v8;
  #L3faf84.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3faf8a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3faf90.  v7:= temp @kind object;
  #L3faf92.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fafa4.  v0:= "source1 is null" @kind object;
  #L3fafa8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fafae.  v0:= "source2 is null" @kind object;
  #L3fafb2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fafb8.  v0:= 2I;
  #L3fafba.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3fafbe.  v2:= 0I;
  #L3fafc0.  v1[v2]:= v3 @kind object;
  #L3fafc4.  v3:= 1I;
  #L3fafc6.  v1[v3]:= v4 @kind object;
  #L3fafca.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fafd0.  v3:= temp @kind object;
  #L3fafd2.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fafd8.  v4:= temp @kind object;
  #L3fafda.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fafe0.  v3:= temp @kind object;
  #L3fafe2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3faff4.  v0:= "source1 is null" @kind object;
  #L3faff8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faffe.  v0:= "source2 is null" @kind object;
  #L3fb002.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb008.  v0:= "source3 is null" @kind object;
  #L3fb00c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb012.  v0:= 3I;
  #L3fb014.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3fb018.  v2:= 0I;
  #L3fb01a.  v1[v2]:= v3 @kind object;
  #L3fb01e.  v3:= 1I;
  #L3fb020.  v1[v3]:= v4 @kind object;
  #L3fb024.  v3:= 2I;
  #L3fb026.  v1[v3]:= v5 @kind object;
  #L3fb02a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb030.  v3:= temp @kind object;
  #L3fb032.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb038.  v4:= temp @kind object;
  #L3fb03a.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb040.  v3:= temp @kind object;
  #L3fb042.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fb054.  v0:= "source1 is null" @kind object;
  #L3fb058.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb05e.  v0:= "source2 is null" @kind object;
  #L3fb062.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb068.  v0:= "source3 is null" @kind object;
  #L3fb06c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb072.  v0:= "source4 is null" @kind object;
  #L3fb076.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb07c.  v0:= 4I;
  #L3fb07e.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3fb082.  v2:= 0I;
  #L3fb084.  v1[v2]:= v3 @kind object;
  #L3fb088.  v3:= 1I;
  #L3fb08a.  v1[v3]:= v4 @kind object;
  #L3fb08e.  v3:= 2I;
  #L3fb090.  v1[v3]:= v5 @kind object;
  #L3fb094.  v3:= 3I;
  #L3fb096.  v1[v3]:= v6 @kind object;
  #L3fb09a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb0a0.  v3:= temp @kind object;
  #L3fb0a2.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb0a8.  v4:= temp @kind object;
  #L3fb0aa.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb0b0.  v3:= temp @kind object;
  #L3fb0b2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fb0c4.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3fb0ca.  v1:= temp @kind object;
  #L3fb0cc.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb0d2.  v0:= temp @kind object;
  #L3fb0d4.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fb0da.  v1:= temp @kind object;
  #L3fb0dc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fb0f0.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3fb0f6.  v1:= temp @kind object;
  #L3fb0f8.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb0fe.  v0:= temp @kind object;
  #L3fb100.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fb106.  v1:= temp @kind object;
  #L3fb108.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fb11c.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3fb122.  v2:= temp @kind object;
  #L3fb124.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb12a.  v0:= temp @kind object;
  #L3fb12c.  v1:= 0I;
  #L3fb12e.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fb134.  v2:= temp @kind object;
  #L3fb136.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArray`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.mergeArray:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fb148.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb14e.  v4:= temp @kind object;
  #L3fb150.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb156.  v0:= temp @kind object;
  #L3fb158.  v1:= 0I;
  #L3fb15a.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fb160.  v2:= temp @kind object;
  #L3fb162.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArray`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.mergeArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fb174.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb17a.  v0:= temp @kind object;
  #L3fb17c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb182.  v1:= temp @kind object;
  #L3fb184.  v2:= length @variable v2;
  #L3fb186.  call temp:= `flatMap`(v0, v1, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fb18c.  v2:= temp @kind object;
  #L3fb18e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArrayDelayError`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.mergeArrayDelayError:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fb1a0.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb1a6.  v4:= temp @kind object;
  #L3fb1a8.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb1ae.  v0:= temp @kind object;
  #L3fb1b0.  v1:= 1I;
  #L3fb1b2.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fb1b8.  v2:= temp @kind object;
  #L3fb1ba.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArrayDelayError`(`io.reactivex.ObservableSource`[] v3 @kind object) @signature `Lio/reactivex/Observable;.mergeArrayDelayError:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fb1cc.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb1d2.  v0:= temp @kind object;
  #L3fb1d4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb1da.  v1:= temp @kind object;
  #L3fb1dc.  v3:= length @variable v3;
  #L3fb1de.  v2:= 1I;
  #L3fb1e0.  call temp:= `flatMap`(v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb1e6.  v3:= temp @kind object;
  #L3fb1e8.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v7 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fb1fc.  v0:= "sources is null" @kind object;
  #L3fb200.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb206.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3fb20a.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb210.  v3:= temp @kind object;
  #L3fb212.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fb218.  v6:= temp;
  #L3fb21a.  v4:= 1I;
  #L3fb21c.  v5:= 2147483647I;
  #L3fb222.  v1:= v0 @kind object;
  #L3fb224.  v2:= v7 @kind object;
  #L3fb226.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3fb22c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb232.  v7:= temp @kind object;
  #L3fb234.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fb248.  v0:= "sources is null" @kind object;
  #L3fb24c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb252.  v0:= "maxConcurrency" @kind object;
  #L3fb256.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fb25c.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3fb260.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb266.  v3:= temp @kind object;
  #L3fb268.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fb26e.  v6:= temp;
  #L3fb270.  v4:= 1I;
  #L3fb272.  v1:= v0 @kind object;
  #L3fb274.  v2:= v7 @kind object;
  #L3fb276.  v5:= v8;
  #L3fb278.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3fb27e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb284.  v7:= temp @kind object;
  #L3fb286.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fb298.  v0:= "source1 is null" @kind object;
  #L3fb29c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb2a2.  v0:= "source2 is null" @kind object;
  #L3fb2a6.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb2ac.  v0:= 2I;
  #L3fb2ae.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3fb2b2.  v2:= 0I;
  #L3fb2b4.  v1[v2]:= v3 @kind object;
  #L3fb2b8.  v3:= 1I;
  #L3fb2ba.  v1[v3]:= v4 @kind object;
  #L3fb2be.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb2c4.  v4:= temp @kind object;
  #L3fb2c6.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb2cc.  v1:= temp @kind object;
  #L3fb2ce.  call temp:= `flatMap`(v4, v1, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb2d4.  v3:= temp @kind object;
  #L3fb2d6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fb2e8.  v0:= "source1 is null" @kind object;
  #L3fb2ec.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb2f2.  v0:= "source2 is null" @kind object;
  #L3fb2f6.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb2fc.  v0:= "source3 is null" @kind object;
  #L3fb300.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb306.  v0:= 3I;
  #L3fb308.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3fb30c.  v2:= 0I;
  #L3fb30e.  v1[v2]:= v3 @kind object;
  #L3fb312.  v3:= 1I;
  #L3fb314.  v1[v3]:= v4 @kind object;
  #L3fb318.  v4:= 2I;
  #L3fb31a.  v1[v4]:= v5 @kind object;
  #L3fb31e.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb324.  v4:= temp @kind object;
  #L3fb326.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb32c.  v5:= temp @kind object;
  #L3fb32e.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb334.  v3:= temp @kind object;
  #L3fb336.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fb348.  v0:= "source1 is null" @kind object;
  #L3fb34c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb352.  v0:= "source2 is null" @kind object;
  #L3fb356.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb35c.  v0:= "source3 is null" @kind object;
  #L3fb360.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb366.  v0:= "source4 is null" @kind object;
  #L3fb36a.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb370.  v0:= 4I;
  #L3fb372.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3fb376.  v2:= 0I;
  #L3fb378.  v1[v2]:= v3 @kind object;
  #L3fb37c.  v3:= 1I;
  #L3fb37e.  v1[v3]:= v4 @kind object;
  #L3fb382.  v4:= 2I;
  #L3fb384.  v1[v4]:= v5 @kind object;
  #L3fb388.  v4:= 3I;
  #L3fb38a.  v1[v4]:= v6 @kind object;
  #L3fb38e.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb394.  v4:= temp @kind object;
  #L3fb396.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb39c.  v5:= temp @kind object;
  #L3fb39e.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb3a4.  v3:= temp @kind object;
  #L3fb3a6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fb3b8.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3fb3be.  v2:= temp @kind object;
  #L3fb3c0.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb3c6.  v0:= temp @kind object;
  #L3fb3c8.  v1:= 1I;
  #L3fb3ca.  call temp:= `flatMap`(v2, v0, v1) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3fb3d0.  v2:= temp @kind object;
  #L3fb3d2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fb3e4.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3fb3ea.  v2:= temp @kind object;
  #L3fb3ec.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb3f2.  v0:= temp @kind object;
  #L3fb3f4.  v1:= 1I;
  #L3fb3f6.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb3fc.  v2:= temp @kind object;
  #L3fb3fe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fb410.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3fb416.  v2:= temp @kind object;
  #L3fb418.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fb41e.  v0:= temp @kind object;
  #L3fb420.  v1:= 1I;
  #L3fb422.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fb428.  v2:= temp @kind object;
  #L3fb42a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `never`() @signature `Lio/reactivex/Observable;.never:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fb460.  v0:= `@@io.reactivex.internal.operators.observable.ObservableNever.INSTANCE` @type ^`io.reactivex.Observable` @kind object;
  #L3fb464.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb46a.  v0:= temp @kind object;
  #L3fb46c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `range`(`int` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.range:(II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fb678.  if v6 < 0 then goto L3fb6de;
  #L3fb67c.  if v6 != 0 then goto L3fb68a;
  #L3fb680.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fb686.  v5:= temp @kind object;
  #L3fb688.  return v5 @kind object;
  #L3fb68a.  v0:= 1I;
  #L3fb68c.  if v6 != v0 then goto L3fb6a2;
  #L3fb690.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3fb696.  v5:= temp @kind object;
  #L3fb698.  call temp:= `just`(v5) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb69e.  v5:= temp @kind object;
  #L3fb6a0.  return v5 @kind object;
  #L3fb6a2.  v0:= (`long`) v5 @kind i2l;
  #L3fb6a4.  v2:= v6 + -1;
  #L3fb6a8.  v2:= (`long`) v2 @kind i2l;
  #L3fb6aa.  v0:= v0 + v2 @kind long;
  #L3fb6ac.  v2:= 2147483647L;
  #L3fb6b2.  v4:= lcmp(v0, v2);
  #L3fb6b6.  if v4 > 0 then goto L3fb6ce;
  #L3fb6ba.  v0:= new `io.reactivex.internal.operators.observable.ObservableRange`;
  #L3fb6be.  call `<init>`(v0, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRange;.<init>:(II)V` @kind direct;
  #L3fb6c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb6ca.  v5:= temp @kind object;
  #L3fb6cc.  return v5 @kind object;
  #L3fb6ce.  v5:= new `java.lang.IllegalArgumentException`;
  #L3fb6d2.  v6:= "Integer overflow" @kind object;
  #L3fb6d6.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fb6dc.  throw v5;
  #L3fb6de.  v5:= new `java.lang.IllegalArgumentException`;
  #L3fb6e2.  v0:= new `java.lang.StringBuilder`;
  #L3fb6e6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fb6ec.  v1:= "count >= 0 required but it was " @kind object;
  #L3fb6f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb6f6.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb6fc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fb702.  v6:= temp @kind object;
  #L3fb704.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fb70a.  throw v5;
}
procedure `io.reactivex.Observable` `rangeLong`(`long` v5 , `long` v7 ) @signature `Lio/reactivex/Observable;.rangeLong:(JJ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fb71c.  v0:= 0L;
  #L3fb720.  v2:= lcmp(v7, v0);
  #L3fb724.  if v2 < 0 then goto L3fb790;
  #L3fb728.  if v2 != 0 then goto L3fb736;
  #L3fb72c.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fb732.  v5:= temp @kind object;
  #L3fb734.  return v5 @kind object;
  #L3fb736.  v2:= 1L;
  #L3fb73a.  v4:= lcmp(v7, v2);
  #L3fb73e.  if v4 != 0 then goto L3fb754;
  #L3fb742.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3fb748.  v5:= temp @kind object;
  #L3fb74a.  call temp:= `just`(v5) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fb750.  v5:= temp @kind object;
  #L3fb752.  return v5 @kind object;
  #L3fb754.  v2:= v7 - v2 @kind long;
  #L3fb758.  v2:= v2 + v5 @kind long;
  #L3fb75a.  v4:= lcmp(v5, v0);
  #L3fb75e.  if v4 <= 0 then goto L3fb77c;
  #L3fb762.  v4:= lcmp(v2, v0);
  #L3fb766.  if v4 < 0 then goto L3fb76c;
  #L3fb76a.  goto L3fb77c;
  #L3fb76c.  v5:= new `java.lang.IllegalArgumentException`;
  #L3fb770.  v6:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L3fb774.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fb77a.  throw v5;
  #L3fb77c.  v0:= new `io.reactivex.internal.operators.observable.ObservableRangeLong`;
  #L3fb780.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableRangeLong;.<init>:(JJ)V` @kind direct;
  #L3fb786.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb78c.  v5:= temp @kind object;
  #L3fb78e.  return v5 @kind object;
  #L3fb790.  v5:= new `java.lang.IllegalArgumentException`;
  #L3fb794.  v6:= new `java.lang.StringBuilder`;
  #L3fb798.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fb79e.  v0:= "count >= 0 required but it was " @kind object;
  #L3fb7a2.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb7a8.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb7ae.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fb7b4.  v6:= temp @kind object;
  #L3fb7b6.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fb7bc.  throw v5;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fdd68.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L3fdd6e.  v0:= temp @kind object;
  #L3fdd70.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fdd76.  v1:= temp;
  #L3fdd78.  call temp:= `sequenceEqual`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L3fdd7e.  v2:= temp @kind object;
  #L3fdd80.  return v2 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fdd94.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L3fdd9a.  v0:= temp @kind object;
  #L3fdd9c.  call temp:= `sequenceEqual`(v1, v2, v0, v3) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L3fdda2.  v1:= temp @kind object;
  #L3fdda4.  return v1 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fddb8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fddbe.  v0:= temp;
  #L3fddc0.  call temp:= `sequenceEqual`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L3fddc6.  v1:= temp @kind object;
  #L3fddc8.  return v1 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fdddc.  v0:= "source1 is null" @kind object;
  #L3fdde0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdde6.  v0:= "source2 is null" @kind object;
  #L3fddea.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fddf0.  v0:= "isEqual is null" @kind object;
  #L3fddf4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fddfa.  v0:= "bufferSize" @kind object;
  #L3fddfe.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fde04.  v0:= new `io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle`;
  #L3fde08.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSequenceEqualSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)V` @kind direct;
  #L3fde0e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fde14.  v1:= temp @kind object;
  #L3fde16.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNext`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fc3bc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc3c2.  v0:= temp;
  #L3fc3c4.  call temp:= `switchOnNext`(v1, v0) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L3fc3ca.  v1:= temp @kind object;
  #L3fc3cc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNext`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fc3e0.  v0:= "sources is null" @kind object;
  #L3fc3e4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc3ea.  v0:= "bufferSize" @kind object;
  #L3fc3ee.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fc3f4.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L3fc3f8.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fc3fe.  v1:= temp @kind object;
  #L3fc400.  v2:= 0I;
  #L3fc402.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3fc408.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc40e.  v3:= temp @kind object;
  #L3fc410.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNextDelayError`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fc424.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc42a.  v0:= temp;
  #L3fc42c.  call temp:= `switchOnNextDelayError`(v1, v0) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L3fc432.  v1:= temp @kind object;
  #L3fc434.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNextDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fc448.  v0:= "sources is null" @kind object;
  #L3fc44c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc452.  v0:= "prefetch" @kind object;
  #L3fc456.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fc45c.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L3fc460.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fc466.  v1:= temp @kind object;
  #L3fc468.  v2:= 1I;
  #L3fc46a.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3fc470.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc476.  v3:= temp @kind object;
  #L3fc478.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fcb84.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fcb8a.  v0:= temp @kind object;
  #L3fcb8c.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3fcb92.  v1:= temp @kind object;
  #L3fcb94.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `timer`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler` v6 @kind object) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fcba8.  v0:= "unit is null" @kind object;
  #L3fcbac.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcbb2.  v0:= "scheduler is null" @kind object;
  #L3fcbb6.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcbbc.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimer`;
  #L3fcbc0.  v1:= 0L;
  #L3fcbc4.  call temp:= `max`(v3, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3fcbca.  v3:= temp @kind wide;
  #L3fcbcc.  call `<init>`(v0, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fcbd2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fcbd8.  v3:= temp @kind object;
  #L3fcbda.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `unsafeCreate`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.unsafeCreate:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fcc90.  v0:= "source is null" @kind object;
  #L3fcc94.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcc9a.  v0:= "onSubscribe is null" @kind object;
  #L3fcc9e.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcca4.  v0:= instanceof @variable v1 @type ^`io.reactivex.Observable` @kind boolean;
  #L3fcca8.  if v0 != 0 then goto L3fccc0;
  #L3fccac.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromUnsafeSource`;
  #L3fccb0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fccb6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fccbc.  v1:= temp @kind object;
  #L3fccbe.  return v1 @kind object;
  #L3fccc0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fccc4.  v0:= "unsafeCreate(Observable) should be upgraded" @kind object;
  #L3fccc8.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fccce.  throw v1;
}
procedure `io.reactivex.Observable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fcd10.  v0:= 1I;
  #L3fcd12.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Observable;` @kind static;
  #L3fcd18.  v1:= temp @kind object;
  #L3fcd1a.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fcd2c.  v0:= "resourceSupplier is null" @kind object;
  #L3fcd30.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcd36.  v0:= "sourceSupplier is null" @kind object;
  #L3fcd3a.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcd40.  v0:= "disposer is null" @kind object;
  #L3fcd44.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcd4a.  v0:= new `io.reactivex.internal.operators.observable.ObservableUsing`;
  #L3fcd4e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L3fcd54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fcd5a.  v1:= temp @kind object;
  #L3fcd5c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `wrap`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fd354.  v0:= "source is null" @kind object;
  #L3fd358.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd35e.  v0:= instanceof @variable v1 @type ^`io.reactivex.Observable` @kind boolean;
  #L3fd362.  if v0 == 0 then goto L3fd374;
  #L3fd366.  v1:= (`io.reactivex.Observable`) v1 @kind object;
  #L3fd36a.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd370.  v1:= temp @kind object;
  #L3fd372.  return v1 @kind object;
  #L3fd374.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromUnsafeSource`;
  #L3fd378.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fd37e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd384.  v1:= temp @kind object;
  #L3fd386.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object, `io.reactivex.functions.Function9` v12 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd398.  v0:= "source1 is null" @kind object;
  #L3fd39c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3a2.  v0:= "source2 is null" @kind object;
  #L3fd3a6.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3ac.  v0:= "source3 is null" @kind object;
  #L3fd3b0.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3b6.  v0:= "source4 is null" @kind object;
  #L3fd3ba.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3c0.  v0:= "source5 is null" @kind object;
  #L3fd3c4.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3ca.  v0:= "source6 is null" @kind object;
  #L3fd3ce.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3d4.  v0:= "source7 is null" @kind object;
  #L3fd3d8.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3de.  v0:= "source8 is null" @kind object;
  #L3fd3e2.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3e8.  v0:= "source9 is null" @kind object;
  #L3fd3ec.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd3f2.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd3f8.  v12:= temp @kind object;
  #L3fd3fa.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd400.  v0:= temp;
  #L3fd402.  v1:= 9I;
  #L3fd406.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd40a.  v2:= 0I;
  #L3fd40c.  v1[v2]:= v3 @kind object;
  #L3fd410.  v3:= 1I;
  #L3fd412.  v1[v3]:= v4 @kind object;
  #L3fd416.  v3:= 2I;
  #L3fd418.  v1[v3]:= v5 @kind object;
  #L3fd41c.  v3:= 3I;
  #L3fd41e.  v1[v3]:= v6 @kind object;
  #L3fd422.  v3:= 4I;
  #L3fd424.  v1[v3]:= v7 @kind object;
  #L3fd428.  v3:= 5I;
  #L3fd42a.  v1[v3]:= v8 @kind object;
  #L3fd42e.  v3:= 6I;
  #L3fd430.  v1[v3]:= v9 @kind object;
  #L3fd434.  v3:= 7I;
  #L3fd436.  v1[v3]:= v10 @kind object;
  #L3fd43a.  v3:= 8I;
  #L3fd43e.  v1[v3]:= v11 @kind object;
  #L3fd442.  call temp:= `zipArray`(v12, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd448.  v3:= temp @kind object;
  #L3fd44a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.functions.Function8` v11 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd45c.  v0:= "source1 is null" @kind object;
  #L3fd460.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd466.  v0:= "source2 is null" @kind object;
  #L3fd46a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd470.  v0:= "source3 is null" @kind object;
  #L3fd474.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd47a.  v0:= "source4 is null" @kind object;
  #L3fd47e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd484.  v0:= "source5 is null" @kind object;
  #L3fd488.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd48e.  v0:= "source6 is null" @kind object;
  #L3fd492.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd498.  v0:= "source7 is null" @kind object;
  #L3fd49c.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd4a2.  v0:= "source8 is null" @kind object;
  #L3fd4a6.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd4ac.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd4b2.  v11:= temp @kind object;
  #L3fd4b4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd4ba.  v0:= temp;
  #L3fd4bc.  v1:= 8I;
  #L3fd4c0.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd4c4.  v2:= 0I;
  #L3fd4c6.  v1[v2]:= v3 @kind object;
  #L3fd4ca.  v3:= 1I;
  #L3fd4cc.  v1[v3]:= v4 @kind object;
  #L3fd4d0.  v3:= 2I;
  #L3fd4d2.  v1[v3]:= v5 @kind object;
  #L3fd4d6.  v3:= 3I;
  #L3fd4d8.  v1[v3]:= v6 @kind object;
  #L3fd4dc.  v3:= 4I;
  #L3fd4de.  v1[v3]:= v7 @kind object;
  #L3fd4e2.  v3:= 5I;
  #L3fd4e4.  v1[v3]:= v8 @kind object;
  #L3fd4e8.  v3:= 6I;
  #L3fd4ea.  v1[v3]:= v9 @kind object;
  #L3fd4ee.  v3:= 7I;
  #L3fd4f0.  v1[v3]:= v10 @kind object;
  #L3fd4f4.  call temp:= `zipArray`(v11, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd4fa.  v3:= temp @kind object;
  #L3fd4fc.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.functions.Function7` v10 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd510.  v0:= "source1 is null" @kind object;
  #L3fd514.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd51a.  v0:= "source2 is null" @kind object;
  #L3fd51e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd524.  v0:= "source3 is null" @kind object;
  #L3fd528.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd52e.  v0:= "source4 is null" @kind object;
  #L3fd532.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd538.  v0:= "source5 is null" @kind object;
  #L3fd53c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd542.  v0:= "source6 is null" @kind object;
  #L3fd546.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd54c.  v0:= "source7 is null" @kind object;
  #L3fd550.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd556.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd55c.  v10:= temp @kind object;
  #L3fd55e.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd564.  v0:= temp;
  #L3fd566.  v1:= 7I;
  #L3fd568.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd56c.  v2:= 0I;
  #L3fd56e.  v1[v2]:= v3 @kind object;
  #L3fd572.  v3:= 1I;
  #L3fd574.  v1[v3]:= v4 @kind object;
  #L3fd578.  v3:= 2I;
  #L3fd57a.  v1[v3]:= v5 @kind object;
  #L3fd57e.  v3:= 3I;
  #L3fd580.  v1[v3]:= v6 @kind object;
  #L3fd584.  v3:= 4I;
  #L3fd586.  v1[v3]:= v7 @kind object;
  #L3fd58a.  v3:= 5I;
  #L3fd58c.  v1[v3]:= v8 @kind object;
  #L3fd590.  v3:= 6I;
  #L3fd592.  v1[v3]:= v9 @kind object;
  #L3fd596.  call temp:= `zipArray`(v10, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd59c.  v3:= temp @kind object;
  #L3fd59e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function6` v9 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd5b0.  v0:= "source1 is null" @kind object;
  #L3fd5b4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd5ba.  v0:= "source2 is null" @kind object;
  #L3fd5be.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd5c4.  v0:= "source3 is null" @kind object;
  #L3fd5c8.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd5ce.  v0:= "source4 is null" @kind object;
  #L3fd5d2.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd5d8.  v0:= "source5 is null" @kind object;
  #L3fd5dc.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd5e2.  v0:= "source6 is null" @kind object;
  #L3fd5e6.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd5ec.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd5f2.  v9:= temp @kind object;
  #L3fd5f4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd5fa.  v0:= temp;
  #L3fd5fc.  v1:= 6I;
  #L3fd5fe.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd602.  v2:= 0I;
  #L3fd604.  v1[v2]:= v3 @kind object;
  #L3fd608.  v3:= 1I;
  #L3fd60a.  v1[v3]:= v4 @kind object;
  #L3fd60e.  v3:= 2I;
  #L3fd610.  v1[v3]:= v5 @kind object;
  #L3fd614.  v3:= 3I;
  #L3fd616.  v1[v3]:= v6 @kind object;
  #L3fd61a.  v3:= 4I;
  #L3fd61c.  v1[v3]:= v7 @kind object;
  #L3fd620.  v3:= 5I;
  #L3fd622.  v1[v3]:= v8 @kind object;
  #L3fd626.  call temp:= `zipArray`(v9, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd62c.  v3:= temp @kind object;
  #L3fd62e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.functions.Function5` v8 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd640.  v0:= "source1 is null" @kind object;
  #L3fd644.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd64a.  v0:= "source2 is null" @kind object;
  #L3fd64e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd654.  v0:= "source3 is null" @kind object;
  #L3fd658.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd65e.  v0:= "source4 is null" @kind object;
  #L3fd662.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd668.  v0:= "source5 is null" @kind object;
  #L3fd66c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd672.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd678.  v8:= temp @kind object;
  #L3fd67a.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd680.  v0:= temp;
  #L3fd682.  v1:= 5I;
  #L3fd684.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd688.  v2:= 0I;
  #L3fd68a.  v1[v2]:= v3 @kind object;
  #L3fd68e.  v3:= 1I;
  #L3fd690.  v1[v3]:= v4 @kind object;
  #L3fd694.  v3:= 2I;
  #L3fd696.  v1[v3]:= v5 @kind object;
  #L3fd69a.  v3:= 3I;
  #L3fd69c.  v1[v3]:= v6 @kind object;
  #L3fd6a0.  v3:= 4I;
  #L3fd6a2.  v1[v3]:= v7 @kind object;
  #L3fd6a6.  call temp:= `zipArray`(v8, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd6ac.  v3:= temp @kind object;
  #L3fd6ae.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function4` v7 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd6c0.  v0:= "source1 is null" @kind object;
  #L3fd6c4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd6ca.  v0:= "source2 is null" @kind object;
  #L3fd6ce.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd6d4.  v0:= "source3 is null" @kind object;
  #L3fd6d8.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd6de.  v0:= "source4 is null" @kind object;
  #L3fd6e2.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd6e8.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd6ee.  v7:= temp @kind object;
  #L3fd6f0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd6f6.  v0:= temp;
  #L3fd6f8.  v1:= 4I;
  #L3fd6fa.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd6fe.  v2:= 0I;
  #L3fd700.  v1[v2]:= v3 @kind object;
  #L3fd704.  v3:= 1I;
  #L3fd706.  v1[v3]:= v4 @kind object;
  #L3fd70a.  v3:= 2I;
  #L3fd70c.  v1[v3]:= v5 @kind object;
  #L3fd710.  v3:= 3I;
  #L3fd712.  v1[v3]:= v6 @kind object;
  #L3fd716.  call temp:= `zipArray`(v7, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd71c.  v3:= temp @kind object;
  #L3fd71e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function3` v6 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd730.  v0:= "source1 is null" @kind object;
  #L3fd734.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd73a.  v0:= "source2 is null" @kind object;
  #L3fd73e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd744.  v0:= "source3 is null" @kind object;
  #L3fd748.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd74e.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd754.  v6:= temp @kind object;
  #L3fd756.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd75c.  v0:= temp;
  #L3fd75e.  v1:= 3I;
  #L3fd760.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd764.  v2:= 0I;
  #L3fd766.  v1[v2]:= v3 @kind object;
  #L3fd76a.  v3:= 1I;
  #L3fd76c.  v1[v3]:= v4 @kind object;
  #L3fd770.  v3:= 2I;
  #L3fd772.  v1[v3]:= v5 @kind object;
  #L3fd776.  call temp:= `zipArray`(v6, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd77c.  v3:= temp @kind object;
  #L3fd77e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd790.  v0:= "source1 is null" @kind object;
  #L3fd794.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd79a.  v0:= "source2 is null" @kind object;
  #L3fd79e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd7a4.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd7aa.  v5:= temp @kind object;
  #L3fd7ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd7b2.  v0:= temp;
  #L3fd7b4.  v1:= 2I;
  #L3fd7b6.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd7ba.  v2:= 0I;
  #L3fd7bc.  v1[v2]:= v3 @kind object;
  #L3fd7c0.  v3:= 1I;
  #L3fd7c2.  v1[v3]:= v4 @kind object;
  #L3fd7c6.  call temp:= `zipArray`(v5, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd7cc.  v3:= temp @kind object;
  #L3fd7ce.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd7e0.  v0:= "source1 is null" @kind object;
  #L3fd7e4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd7ea.  v0:= "source2 is null" @kind object;
  #L3fd7ee.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd7f4.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd7fa.  v5:= temp @kind object;
  #L3fd7fc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd802.  v0:= temp;
  #L3fd804.  v1:= 2I;
  #L3fd806.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3fd80a.  v2:= 0I;
  #L3fd80c.  v1[v2]:= v3 @kind object;
  #L3fd810.  v3:= 1I;
  #L3fd812.  v1[v3]:= v4 @kind object;
  #L3fd816.  call temp:= `zipArray`(v5, v6, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd81c.  v3:= temp @kind object;
  #L3fd81e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.functions.BiFunction` v4 @kind object, `boolean` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fd830.  v0:= "source1 is null" @kind object;
  #L3fd834.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd83a.  v0:= "source2 is null" @kind object;
  #L3fd83e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd844.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd84a.  v4:= temp @kind object;
  #L3fd84c.  v0:= 2I;
  #L3fd84e.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3fd852.  v1:= 0I;
  #L3fd854.  v0[v1]:= v2 @kind object;
  #L3fd858.  v2:= 1I;
  #L3fd85a.  v0[v2]:= v3 @kind object;
  #L3fd85e.  call temp:= `zipArray`(v4, v5, v6, v0) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fd864.  v2:= temp @kind object;
  #L3fd866.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fd878.  v0:= "zipper is null" @kind object;
  #L3fd87c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd882.  v0:= "sources is null" @kind object;
  #L3fd886.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd88c.  v0:= new `io.reactivex.internal.operators.observable.ObservableToList`;
  #L3fd890.  v1:= 16I;
  #L3fd894.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3fd89a.  call temp:= `zipIterable`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.zipIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd8a0.  v2:= temp @kind object;
  #L3fd8a2.  call temp:= `flatMap`(v0, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fd8a8.  v2:= temp @kind object;
  #L3fd8aa.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd8b0.  v2:= temp @kind object;
  #L3fd8b2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object) @signature `Lio/reactivex/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fd8c4.  v0:= "zipper is null" @kind object;
  #L3fd8c8.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd8ce.  v0:= "sources is null" @kind object;
  #L3fd8d2.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd8d8.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L3fd8dc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd8e2.  v5:= temp;
  #L3fd8e4.  v2:= 0I;
  #L3fd8e6.  v6:= 0I;
  #L3fd8e8.  v1:= v0 @kind object;
  #L3fd8ea.  v3:= v7 @kind object;
  #L3fd8ec.  v4:= v8 @kind object;
  #L3fd8ee.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3fd8f4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd8fa.  v7:= temp @kind object;
  #L3fd8fc.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `zipArray`(`io.reactivex.functions.Function` v7 @kind object, `boolean` v8 , `int` v9 , `io.reactivex.ObservableSource`[] v10 @kind object) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fd910.  v0:= length @variable v10;
  #L3fd912.  if v0 != 0 then goto L3fd920;
  #L3fd916.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fd91c.  v7:= temp @kind object;
  #L3fd91e.  return v7 @kind object;
  #L3fd920.  v0:= "zipper is null" @kind object;
  #L3fd924.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd92a.  v0:= "bufferSize" @kind object;
  #L3fd92e.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fd934.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L3fd938.  v3:= 0I;
  #L3fd93a.  v1:= v0 @kind object;
  #L3fd93c.  v2:= v10 @kind object;
  #L3fd93e.  v4:= v7 @kind object;
  #L3fd940.  v5:= v9;
  #L3fd942.  v6:= v8;
  #L3fd944.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3fd94a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd950.  v7:= temp @kind object;
  #L3fd952.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `zipIterable`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.zipIterable:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fd964.  v0:= "zipper is null" @kind object;
  #L3fd968.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd96e.  v0:= "sources is null" @kind object;
  #L3fd972.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd978.  v0:= "bufferSize" @kind object;
  #L3fd97c.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fd982.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L3fd986.  v2:= 0I;
  #L3fd988.  v1:= v0 @kind object;
  #L3fd98a.  v3:= v7 @kind object;
  #L3fd98c.  v4:= v8 @kind object;
  #L3fd98e.  v5:= v10;
  #L3fd990.  v6:= v9;
  #L3fd992.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3fd998.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd99e.  v7:= temp @kind object;
  #L3fd9a0.  return v7 @kind object;
}
procedure `io.reactivex.Single` `all`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.all:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fda60.  v0:= "predicate is null" @kind object;
  #L3fda64.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fda6a.  v0:= new `io.reactivex.internal.operators.observable.ObservableAllSingle`;
  #L3fda6e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3fda74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fda7a.  v2:= temp @kind object;
  #L3fda7c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ambWith`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.ambWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f86ac.  v0:= "other is null" @kind object;
  #L3f86b0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f86b6.  v0:= 2I;
  #L3f86b8.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3f86bc.  v1:= 0I;
  #L3f86be.  v0[v1]:= v2 @kind object;
  #L3f86c2.  v1:= 1I;
  #L3f86c4.  v0[v1]:= v3 @kind object;
  #L3f86c8.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Observable;.ambArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f86ce.  v3:= temp @kind object;
  #L3f86d0.  return v3 @kind object;
}
procedure `io.reactivex.Single` `any`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.any:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fda90.  v0:= "predicate is null" @kind object;
  #L3fda94.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fda9a.  v0:= new `io.reactivex.internal.operators.observable.ObservableAnySingle`;
  #L3fda9e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3fdaa4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdaaa.  v2:= temp @kind object;
  #L3fdaac.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingFirst:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe53c.  v0:= new `io.reactivex.internal.observers.BlockingFirstObserver`;
  #L3fe540.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L3fe546.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe54c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3fe552.  v0:= temp @kind object;
  #L3fe554.  if v0 == 0 then goto L3fe55a;
  #L3fe558.  return v0 @kind object;
  #L3fe55a.  v0:= new `java.util.NoSuchElementException`;
  #L3fe55e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3fe564.  throw v0;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingFirst:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe578.  v0:= new `io.reactivex.internal.observers.BlockingFirstObserver`;
  #L3fe57c.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L3fe582.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe588.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3fe58e.  v0:= temp @kind object;
  #L3fe590.  if v0 == 0 then goto L3fe596;
  #L3fe594.  v2:= v0 @kind object;
  #L3fe596.  return v2 @kind object;
}
procedure `void` `blockingForEach`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingForEach:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fe6f4.  call temp:= `blockingIterable`(v2) @signature `Lio/reactivex/Observable;.blockingIterable:()Ljava/lang/Iterable;` @kind virtual;
  #L3fe6fa.  v0:= temp @kind object;
  #L3fe6fc.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fe702.  v0:= temp @kind object;
  #L3fe704.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fe70a.  v1:= temp;
  #L3fe70c.  if v1 == 0 then goto L3fe73c;
  #L3fe710.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fe716.  v1:= temp @kind object;
  #L3fe718.  call `accept`(v3, v1) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3fe71e.  goto L3fe704;
  #L3fe720.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe722.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3fe728.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3fe72c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3fe732.  call temp:= `wrapOrThrow`(v3) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3fe738.  v3:= temp @kind object;
  #L3fe73a.  throw v3;
  #L3fe73c.  return @kind void;
  catch `java.lang.Throwable` @[L3fe710..L3fe71e] goto L3fe720;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingIterable:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe49c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fe4a2.  v0:= temp;
  #L3fe4a4.  call temp:= `blockingIterable`(v1, v0) @signature `Lio/reactivex/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L3fe4aa.  v0:= temp @kind object;
  #L3fe4ac.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe4c0.  v0:= "bufferSize" @kind object;
  #L3fe4c4.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fe4ca.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableIterable`;
  #L3fe4ce.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableIterable;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3fe4d4.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingLast:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe5a8.  v0:= new `io.reactivex.internal.observers.BlockingLastObserver`;
  #L3fe5ac.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L3fe5b2.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe5b8.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3fe5be.  v0:= temp @kind object;
  #L3fe5c0.  if v0 == 0 then goto L3fe5c6;
  #L3fe5c4.  return v0 @kind object;
  #L3fe5c6.  v0:= new `java.util.NoSuchElementException`;
  #L3fe5ca.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3fe5d0.  throw v0;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingLast:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe5e4.  v0:= new `io.reactivex.internal.observers.BlockingLastObserver`;
  #L3fe5e8.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L3fe5ee.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe5f4.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3fe5fa.  v0:= temp @kind object;
  #L3fe5fc.  if v0 == 0 then goto L3fe602;
  #L3fe600.  v2:= v0 @kind object;
  #L3fe602.  return v2 @kind object;
}
procedure `java.lang.Iterable` `blockingLatest`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingLatest:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe4e8.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableLatest`;
  #L3fe4ec.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableLatest;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fe4f2.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingMostRecent`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingMostRecent:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe504.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableMostRecent`;
  #L3fe508.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3fe50e.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingNext`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingNext:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe520.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableNext`;
  #L3fe524.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableNext;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fe52a.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingSingle:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe614.  call temp:= `singleElement`(v1) @signature `Lio/reactivex/Observable;.singleElement:()Lio/reactivex/Maybe;` @kind virtual;
  #L3fe61a.  v0:= temp @kind object;
  #L3fe61c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/Maybe;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3fe622.  v0:= temp @kind object;
  #L3fe624.  if v0 == 0 then goto L3fe62a;
  #L3fe628.  return v0 @kind object;
  #L3fe62a.  v0:= new `java.util.NoSuchElementException`;
  #L3fe62e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3fe634.  throw v0;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.Observable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Observable;.blockingSingle:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fe648.  call temp:= `single`(v0, v1) @signature `Lio/reactivex/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/Single;` @kind virtual;
  #L3fe64e.  v1:= temp @kind object;
  #L3fe650.  call temp:= `blockingGet`(v1) @signature `Lio/reactivex/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3fe656.  v1:= temp @kind object;
  #L3fe658.  return v1 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this) @signature `Lio/reactivex/Observable;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fe75c.  call `subscribe`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;)V` @kind static;
  #L3fe762.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fe774.  call `subscribe`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/Observer;)V` @kind static;
  #L3fe77a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fe78c.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3fe790.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3fe794.  call `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L3fe79a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe7ac.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3fe7b0.  call `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L3fe7b6.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fe7c8.  call `subscribe`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L3fe7ce.  return @kind void;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/Observable;.buffer:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3f86e4.  call temp:= `buffer`(v0, v1, v1) @signature `Lio/reactivex/Observable;.buffer:(II)Lio/reactivex/Observable;` @kind virtual;
  #L3f86ea.  v1:= temp @kind object;
  #L3f86ec.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/Observable;.buffer:(II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8700.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f8706.  v0:= temp @kind object;
  #L3f8708.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f870e.  v2:= temp @kind object;
  #L3f8710.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `int` v3 , `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8724.  v0:= "count" @kind object;
  #L3f8728.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f872e.  v0:= "skip" @kind object;
  #L3f8732.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f8738.  v0:= "bufferSupplier is null" @kind object;
  #L3f873c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8742.  v0:= new `io.reactivex.internal.operators.observable.ObservableBuffer`;
  #L3f8746.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableBuffer;.<init>:(Lio/reactivex/ObservableSource;IILjava/util/concurrent/Callable;)V` @kind direct;
  #L3f874c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f8752.  v2:= temp @kind object;
  #L3f8754.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v0 @kind this, `int` v1 , `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(ILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3f8768.  call temp:= `buffer`(v0, v1, v1, v2) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f876e.  v1:= temp @kind object;
  #L3f8770.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f89f8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3f89fe.  v6:= temp @kind object;
  #L3f8a00.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f8a06.  v7:= temp @kind object;
  #L3f8a08.  v0:= v8 @kind object;
  #L3f8a0a.  v1:= v9 @kind wide;
  #L3f8a0c.  v3:= v11 @kind wide;
  #L3f8a0e.  v5:= v13 @kind object;
  #L3f8a10.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f8a16.  v9:= temp @kind object;
  #L3f8a18.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.Scheduler` v14 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f8a2c.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f8a32.  v7:= temp @kind object;
  #L3f8a34.  v0:= v8 @kind object;
  #L3f8a36.  v1:= v9 @kind wide;
  #L3f8a38.  v3:= v11 @kind wide;
  #L3f8a3a.  v5:= v13 @kind object;
  #L3f8a3c.  v6:= v14 @kind object;
  #L3f8a3e.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f8a44.  v9:= temp @kind object;
  #L3f8a46.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v12 @kind this, `long` v13 , `long` v15 , `java.util.concurrent.TimeUnit` v17 @kind object, `io.reactivex.Scheduler` v18 @kind object, `java.util.concurrent.Callable` v19 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3f8a58.  v0:= "unit is null" @kind object;
  #L3f8a5c.  v7:= v17 @kind object;
  #L3f8a60.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8a66.  v0:= "scheduler is null" @kind object;
  #L3f8a6a.  v8:= v18 @kind object;
  #L3f8a6e.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8a74.  v0:= "bufferSupplier is null" @kind object;
  #L3f8a78.  v9:= v19 @kind object;
  #L3f8a7c.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8a82.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed`;
  #L3f8a86.  v10:= 2147483647I;
  #L3f8a8c.  v11:= 0I;
  #L3f8a8e.  v1:= v0 @kind object;
  #L3f8a90.  v2:= v12 @kind object;
  #L3f8a92.  v3:= v13 @kind wide;
  #L3f8a94.  v5:= v15 @kind wide;
  #L3f8a96.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;IZ)V` @kind direct;
  #L3f8a9c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f8aa2.  v0:= temp @kind object;
  #L3f8aa4.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f88d0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3f88d6.  v4:= temp @kind object;
  #L3f88d8.  v5:= 2147483647I;
  #L3f88de.  v0:= v6 @kind object;
  #L3f88e0.  v1:= v7 @kind wide;
  #L3f88e2.  v3:= v9 @kind object;
  #L3f88e4.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L3f88ea.  v7:= temp @kind object;
  #L3f88ec.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f8900.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3f8906.  v4:= temp @kind object;
  #L3f8908.  v0:= v6 @kind object;
  #L3f890a.  v1:= v7 @kind wide;
  #L3f890c.  v3:= v9 @kind object;
  #L3f890e.  v5:= v10;
  #L3f8910.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L3f8916.  v7:= temp @kind object;
  #L3f8918.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f892c.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f8932.  v6:= temp @kind object;
  #L3f8934.  v5:= 2147483647I;
  #L3f893a.  v7:= 0I;
  #L3f893c.  v0:= v8 @kind object;
  #L3f893e.  v1:= v9 @kind wide;
  #L3f8940.  v3:= v11 @kind object;
  #L3f8942.  v4:= v12 @kind object;
  #L3f8944.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3f894a.  v9:= temp @kind object;
  #L3f894c.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `int` v13 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f8960.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f8966.  v6:= temp @kind object;
  #L3f8968.  v7:= 0I;
  #L3f896a.  v0:= v8 @kind object;
  #L3f896c.  v1:= v9 @kind wide;
  #L3f896e.  v3:= v11 @kind object;
  #L3f8970.  v4:= v12 @kind object;
  #L3f8972.  v5:= v13;
  #L3f8974.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3f897a.  v9:= temp @kind object;
  #L3f897c.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v12 @kind this, `long` v13 , `java.util.concurrent.TimeUnit` v15 @kind object, `io.reactivex.Scheduler` v16 @kind object, `int` v17 , `java.util.concurrent.Callable` v18 @kind object, `boolean` v19 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3f8990.  v0:= "unit is null" @kind object;
  #L3f8994.  v7:= v15 @kind object;
  #L3f8996.  call temp:= `requireNonNull`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f899c.  v0:= "scheduler is null" @kind object;
  #L3f89a0.  v8:= v16 @kind object;
  #L3f89a4.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f89aa.  v0:= "bufferSupplier is null" @kind object;
  #L3f89ae.  v9:= v18 @kind object;
  #L3f89b2.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f89b8.  v0:= "count" @kind object;
  #L3f89bc.  v10:= v17;
  #L3f89c0.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f89c6.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed`;
  #L3f89ca.  v1:= v0 @kind object;
  #L3f89cc.  v2:= v12 @kind object;
  #L3f89ce.  v3:= v13 @kind wide;
  #L3f89d0.  v5:= v13 @kind wide;
  #L3f89d2.  v11:= v19;
  #L3f89d6.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;IZ)V` @kind direct;
  #L3f89dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f89e2.  v0:= temp @kind object;
  #L3f89e4.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8784.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f878a.  v0:= temp @kind object;
  #L3f878c.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f8792.  v2:= temp @kind object;
  #L3f8794.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f87a8.  v0:= "initialCapacity" @kind object;
  #L3f87ac.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f87b2.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/internal/functions/Functions;.createArrayList:(I)Ljava/util/concurrent/Callable;` @kind static;
  #L3f87b8.  v3:= temp @kind object;
  #L3f87ba.  call temp:= `buffer`(v1, v2, v3) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f87c0.  v2:= temp @kind object;
  #L3f87c2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f87d4.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f87da.  v0:= temp @kind object;
  #L3f87dc.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f87e2.  v2:= temp @kind object;
  #L3f87e4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f87f8.  v0:= "openingIndicator is null" @kind object;
  #L3f87fc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8802.  v0:= "closingIndicator is null" @kind object;
  #L3f8806.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f880c.  v0:= "bufferSupplier is null" @kind object;
  #L3f8810.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8816.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferBoundary`;
  #L3f881a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3f8820.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f8826.  v2:= temp @kind object;
  #L3f8828.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f883c.  v0:= "boundary is null" @kind object;
  #L3f8840.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8846.  v0:= "bufferSupplier is null" @kind object;
  #L3f884a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8850.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferExactBoundary`;
  #L3f8854.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3f885a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f8860.  v2:= temp @kind object;
  #L3f8862.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8874.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f887a.  v0:= temp @kind object;
  #L3f887c.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f8882.  v2:= temp @kind object;
  #L3f8884.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8898.  v0:= "boundarySupplier is null" @kind object;
  #L3f889c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f88a2.  v0:= "bufferSupplier is null" @kind object;
  #L3f88a6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f88ac.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier`;
  #L3f88b0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundarySupplier;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3f88b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f88bc.  v2:= temp @kind object;
  #L3f88be.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `cache`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.cache:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8ab8.  call temp:= `from`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCache;.from:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f8abe.  v0:= temp @kind object;
  #L3f8ac0.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `cacheWithInitialCapacity`(`io.reactivex.Observable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/Observable;.cacheWithInitialCapacity:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3f8ad4.  call temp:= `from`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCache;.from:(Lio/reactivex/Observable;I)Lio/reactivex/Observable;` @kind static;
  #L3f8ada.  v1:= temp @kind object;
  #L3f8adc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `cast`(`io.reactivex.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8af0.  v0:= "clazz is null" @kind object;
  #L3f8af4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f8afa.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/functions/Function;` @kind static;
  #L3f8b00.  v2:= temp @kind object;
  #L3f8b02.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3f8b08.  v2:= temp @kind object;
  #L3f8b0a.  return v2 @kind object;
}
procedure `io.reactivex.Single` `collect`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdac0.  v0:= "initialValueSupplier is null" @kind object;
  #L3fdac4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdaca.  v0:= "collector is null" @kind object;
  #L3fdace.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdad4.  v0:= new `io.reactivex.internal.operators.observable.ObservableCollectSingle`;
  #L3fdad8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCollectSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L3fdade.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdae4.  v2:= temp @kind object;
  #L3fdae6.  return v2 @kind object;
}
procedure `io.reactivex.Single` `collectInto`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/Observable;.collectInto:(Ljava/lang/Object;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdaf8.  v0:= "initialValue is null" @kind object;
  #L3fdafc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdb02.  call temp:= `justCallable`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L3fdb08.  v2:= temp @kind object;
  #L3fdb0a.  call temp:= `collect`(v1, v2, v3) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3fdb10.  v2:= temp @kind object;
  #L3fdb12.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `compose`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableTransformer` v2 @kind object) @signature `Lio/reactivex/Observable;.compose:(Lio/reactivex/ObservableTransformer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9184.  v0:= "composer is null" @kind object;
  #L3f9188.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f918e.  v2:= temp @kind object;
  #L3f9190.  v2:= (`io.reactivex.ObservableTransformer`) v2 @kind object;
  #L3f9194.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/ObservableTransformer;.apply:(Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;` @kind interface;
  #L3f919a.  v2:= temp @kind object;
  #L3f919c.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f91a2.  v2:= temp @kind object;
  #L3f91a4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f95f4.  v0:= 2I;
  #L3f95f6.  call temp:= `concatMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3f95fc.  v2:= temp @kind object;
  #L3f95fe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f9610.  v0:= "mapper is null" @kind object;
  #L3f9614.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f961a.  v0:= "prefetch" @kind object;
  #L3f961e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f9624.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3f9628.  if v0 == 0 then goto L3f9652;
  #L3f962c.  v4:= v2 @kind object;
  #L3f962e.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L3f9632.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3f9638.  v4:= temp @kind object;
  #L3f963a.  if v4 != 0 then goto L3f9648;
  #L3f963e.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3f9644.  v3:= temp @kind object;
  #L3f9646.  return v3 @kind object;
  #L3f9648.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3f964e.  v3:= temp @kind object;
  #L3f9650.  return v3 @kind object;
  #L3f9652.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3f9656.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f965a.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3f9660.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9666.  v3:= temp @kind object;
  #L3f9668.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f967c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9682.  v0:= temp;
  #L3f9684.  v1:= 1I;
  #L3f9686.  call temp:= `concatMapDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @kind virtual;
  #L3f968c.  v3:= temp @kind object;
  #L3f968e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f96a0.  v0:= "mapper is null" @kind object;
  #L3f96a4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f96aa.  v0:= "prefetch" @kind object;
  #L3f96ae.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f96b4.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3f96b8.  if v0 == 0 then goto L3f96e2;
  #L3f96bc.  v3:= v1 @kind object;
  #L3f96be.  v3:= (`io.reactivex.internal.fuseable.ScalarCallable`) v3 @kind object;
  #L3f96c2.  call temp:= `call`(v3) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3f96c8.  v3:= temp @kind object;
  #L3f96ca.  if v3 != 0 then goto L3f96d8;
  #L3f96ce.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3f96d4.  v2:= temp @kind object;
  #L3f96d6.  return v2 @kind object;
  #L3f96d8.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3f96de.  v2:= temp @kind object;
  #L3f96e0.  return v2 @kind object;
  #L3f96e2.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3f96e6.  if v4 == 0 then goto L3f96f0;
  #L3f96ea.  v4:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f96ee.  goto L3f96f4;
  #L3f96f0.  v4:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f96f4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3f96fa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9700.  v2:= temp @kind object;
  #L3f9702.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEager`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f9714.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f971a.  v0:= temp;
  #L3f971c.  v1:= 2147483647I;
  #L3f9722.  call temp:= `concatMapEager`(v2, v3, v1, v0) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @kind virtual;
  #L3f9728.  v3:= temp @kind object;
  #L3f972a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEager`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f973c.  v0:= "mapper is null" @kind object;
  #L3f9740.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9746.  v0:= "maxConcurrency" @kind object;
  #L3f974a.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f9750.  v0:= "prefetch" @kind object;
  #L3f9754.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f975a.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMapEager`;
  #L3f975e.  v4:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f9762.  v1:= v0 @kind object;
  #L3f9764.  v2:= v7 @kind object;
  #L3f9766.  v3:= v8 @kind object;
  #L3f9768.  v5:= v9;
  #L3f976a.  v6:= v10;
  #L3f976c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;II)V` @kind direct;
  #L3f9772.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9778.  v8:= temp @kind object;
  #L3f977a.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEagerDelayError`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 ) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f97b4.  v0:= "mapper is null" @kind object;
  #L3f97b8.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f97be.  v0:= "maxConcurrency" @kind object;
  #L3f97c2.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f97c8.  v0:= "prefetch" @kind object;
  #L3f97cc.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f97d2.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMapEager`;
  #L3f97d6.  if v11 == 0 then goto L3f97e0;
  #L3f97da.  v11:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f97de.  goto L3f97e4;
  #L3f97e0.  v11:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3f97e4.  v4:= v11 @kind object;
  #L3f97e6.  v1:= v0 @kind object;
  #L3f97e8.  v2:= v7 @kind object;
  #L3f97ea.  v3:= v8 @kind object;
  #L3f97ec.  v5:= v9;
  #L3f97ee.  v6:= v10;
  #L3f97f0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;II)V` @kind direct;
  #L3f97f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f97fc.  v8:= temp @kind object;
  #L3f97fe.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEagerDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f978c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3f9792.  v0:= temp;
  #L3f9794.  v1:= 2147483647I;
  #L3f979a.  call temp:= `concatMapEagerDelayError`(v2, v3, v1, v0, v4) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L3f97a0.  v3:= temp @kind object;
  #L3f97a2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9810.  v0:= "mapper is null" @kind object;
  #L3f9814.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f981a.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlattenIterable`;
  #L3f981e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3f9824.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f982a.  v2:= temp @kind object;
  #L3f982c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.concatMapIterable:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9840.  v0:= "mapper is null" @kind object;
  #L3f9844.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f984a.  v0:= "prefetch" @kind object;
  #L3f984e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3f9854.  call temp:= `flatMapIntoIterable`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L3f985a.  v2:= temp @kind object;
  #L3f985c.  call temp:= `concatMap`(v1, v2, v3) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3f9862.  v2:= temp @kind object;
  #L3f9864.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9878.  v0:= "other is null" @kind object;
  #L3f987c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9882.  call temp:= `concat`(v1, v2) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3f9888.  v2:= temp @kind object;
  #L3f988a.  return v2 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.contains:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdb24.  v0:= "element is null" @kind object;
  #L3fdb28.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdb2e.  call temp:= `equalsWith`(v2) @signature `Lio/reactivex/internal/functions/Functions;.equalsWith:(Ljava/lang/Object;)Lio/reactivex/functions/Predicate;` @kind static;
  #L3fdb34.  v2:= temp @kind object;
  #L3fdb36.  call temp:= `any`(v1, v2) @signature `Lio/reactivex/Observable;.any:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @kind virtual;
  #L3fdb3c.  v2:= temp @kind object;
  #L3fdb3e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `count`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.count:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdb50.  v0:= new `io.reactivex.internal.operators.observable.ObservableCountSingle`;
  #L3fdb54.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCountSingle;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fdb5a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdb60.  v0:= temp @kind object;
  #L3fdb62.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f98fc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3f9902.  v0:= temp @kind object;
  #L3f9904.  call temp:= `debounce`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3f990a.  v2:= temp @kind object;
  #L3f990c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f9920.  v0:= "unit is null" @kind object;
  #L3f9924.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f992a.  v0:= "scheduler is null" @kind object;
  #L3f992e.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9934.  v0:= new `io.reactivex.internal.operators.observable.ObservableDebounceTimed`;
  #L3f9938.  v1:= v0 @kind object;
  #L3f993a.  v2:= v7 @kind object;
  #L3f993c.  v3:= v8 @kind wide;
  #L3f993e.  v5:= v10 @kind object;
  #L3f9940.  v6:= v11 @kind object;
  #L3f9942.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3f9948.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f994e.  v8:= temp @kind object;
  #L3f9950.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.debounce:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f98cc.  v0:= "debounceSelector is null" @kind object;
  #L3f98d0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f98d6.  v0:= new `io.reactivex.internal.operators.observable.ObservableDebounce`;
  #L3f98da.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3f98e0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f98e6.  v2:= temp @kind object;
  #L3f98e8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `defaultIfEmpty`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9964.  v0:= "defaultItem is null" @kind object;
  #L3f9968.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f996e.  call temp:= `just`(v2) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3f9974.  v2:= temp @kind object;
  #L3f9976.  call temp:= `switchIfEmpty`(v1, v2) @signature `Lio/reactivex/Observable;.switchIfEmpty:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3f997c.  v2:= temp @kind object;
  #L3f997e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f9a10.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3f9a16.  v4:= temp @kind object;
  #L3f9a18.  v5:= 0I;
  #L3f9a1a.  v0:= v6 @kind object;
  #L3f9a1c.  v1:= v7 @kind wide;
  #L3f9a1e.  v3:= v9 @kind object;
  #L3f9a20.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3f9a26.  v7:= temp @kind object;
  #L3f9a28.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f9a68.  v5:= 0I;
  #L3f9a6a.  v0:= v6 @kind object;
  #L3f9a6c.  v1:= v7 @kind wide;
  #L3f9a6e.  v3:= v9 @kind object;
  #L3f9a70.  v4:= v10 @kind object;
  #L3f9a72.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3f9a78.  v7:= temp @kind object;
  #L3f9a7a.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f9a8c.  v0:= "unit is null" @kind object;
  #L3f9a90.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9a96.  v0:= "scheduler is null" @kind object;
  #L3f9a9a.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9aa0.  v0:= new `io.reactivex.internal.operators.observable.ObservableDelay`;
  #L3f9aa4.  v1:= v0 @kind object;
  #L3f9aa6.  v2:= v8 @kind object;
  #L3f9aa8.  v3:= v9 @kind wide;
  #L3f9aaa.  v5:= v11 @kind object;
  #L3f9aac.  v6:= v12 @kind object;
  #L3f9aae.  v7:= v13;
  #L3f9ab0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3f9ab6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9abc.  v9:= temp @kind object;
  #L3f9abe.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f9a3c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3f9a42.  v4:= temp @kind object;
  #L3f9a44.  v0:= v6 @kind object;
  #L3f9a46.  v1:= v7 @kind wide;
  #L3f9a48.  v3:= v9 @kind object;
  #L3f9a4a.  v5:= v10;
  #L3f9a4c.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3f9a52.  v7:= temp @kind object;
  #L3f9a54.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3f99c0.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3f99c6.  v1:= temp @kind object;
  #L3f99c8.  call temp:= `delay`(v1, v2) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3f99ce.  v1:= temp @kind object;
  #L3f99d0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f99e4.  v0:= "itemDelay is null" @kind object;
  #L3f99e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f99ee.  call temp:= `itemDelay`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.itemDelay:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L3f99f4.  v2:= temp @kind object;
  #L3f99f6.  call temp:= `flatMap`(v1, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3f99fc.  v2:= temp @kind object;
  #L3f99fe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9b00.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3f9b06.  v0:= temp @kind object;
  #L3f9b08.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3f9b0e.  v2:= temp @kind object;
  #L3f9b10.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3f9b24.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3f9b2a.  v1:= temp @kind object;
  #L3f9b2c.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3f9b32.  v1:= temp @kind object;
  #L3f9b34.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9ad0.  v0:= "other is null" @kind object;
  #L3f9ad4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9ada.  v0:= new `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther`;
  #L3f9ade.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3f9ae4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9aea.  v2:= temp @kind object;
  #L3f9aec.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `dematerialize`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.dematerialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9b48.  v0:= new `io.reactivex.internal.operators.observable.ObservableDematerialize`;
  #L3f9b4c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3f9b52.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9b58.  v0:= temp @kind object;
  #L3f9b5a.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.distinct:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f9b6c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f9b72.  v0:= temp @kind object;
  #L3f9b74.  call temp:= `createHashSet`() @signature `Lio/reactivex/internal/functions/Functions;.createHashSet:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f9b7a.  v1:= temp @kind object;
  #L3f9b7c.  call temp:= `distinct`(v2, v0, v1) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f9b82.  v0:= temp @kind object;
  #L3f9b84.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9b98.  call temp:= `createHashSet`() @signature `Lio/reactivex/internal/functions/Functions;.createHashSet:()Ljava/util/concurrent/Callable;` @kind static;
  #L3f9b9e.  v0:= temp @kind object;
  #L3f9ba0.  call temp:= `distinct`(v1, v2, v0) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3f9ba6.  v2:= temp @kind object;
  #L3f9ba8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9bbc.  v0:= "keySelector is null" @kind object;
  #L3f9bc0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9bc6.  v0:= "collectionSupplier is null" @kind object;
  #L3f9bca.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9bd0.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinct`;
  #L3f9bd4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinct;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3f9bda.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9be0.  v2:= temp @kind object;
  #L3f9be2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.distinctUntilChanged:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9bf4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f9bfa.  v0:= temp @kind object;
  #L3f9bfc.  call temp:= `distinctUntilChanged`(v1, v0) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3f9c02.  v0:= temp @kind object;
  #L3f9c04.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f9c18.  v0:= "comparer is null" @kind object;
  #L3f9c1c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9c22.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L3f9c26.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3f9c2c.  v1:= temp @kind object;
  #L3f9c2e.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L3f9c34.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9c3a.  v3:= temp @kind object;
  #L3f9c3c.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f9c50.  v0:= "keySelector is null" @kind object;
  #L3f9c54.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9c5a.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L3f9c5e.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L3f9c64.  v1:= temp @kind object;
  #L3f9c66.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L3f9c6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9c72.  v3:= temp @kind object;
  #L3f9c74.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `doAfterNext`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.doAfterNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9c88.  v0:= "onAfterNext is null" @kind object;
  #L3f9c8c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9c92.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoAfterNext`;
  #L3f9c96.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3f9c9c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9ca2.  v2:= temp @kind object;
  #L3f9ca4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doAfterTerminate`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3f9cb8.  v0:= "onFinally is null" @kind object;
  #L3f9cbc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9cc2.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9cc8.  v0:= temp @kind object;
  #L3f9cca.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9cd0.  v1:= temp @kind object;
  #L3f9cd2.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3f9cd6.  call temp:= `a`(v3, v0, v1, v2, v4) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3f9cdc.  v4:= temp @kind object;
  #L3f9cde.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doFinally`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Observable;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9cf0.  v0:= "onFinally is null" @kind object;
  #L3f9cf4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9cfa.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoFinally`;
  #L3f9cfe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3f9d04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9d0a.  v2:= temp @kind object;
  #L3f9d0c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnComplete`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnComplete:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3f9d20.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9d26.  v0:= temp @kind object;
  #L3f9d28.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9d2e.  v1:= temp @kind object;
  #L3f9d30.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3f9d34.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3f9d3a.  v4:= temp @kind object;
  #L3f9d3c.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnDispose`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Observable;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9d50.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9d56.  v0:= temp @kind object;
  #L3f9d58.  call temp:= `doOnLifecycle`(v1, v0, v2) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind virtual;
  #L3f9d5e.  v2:= temp @kind object;
  #L3f9d60.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnEach`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/Observer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3f9d74.  v0:= "observer is null" @kind object;
  #L3f9d78.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9d7e.  call temp:= `observerOnNext`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnNext:(Lio/reactivex/Observer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9d84.  v0:= temp @kind object;
  #L3f9d86.  call temp:= `observerOnError`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnError:(Lio/reactivex/Observer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9d8c.  v1:= temp @kind object;
  #L3f9d8e.  call temp:= `observerOnComplete`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnComplete:(Lio/reactivex/Observer;)Lio/reactivex/functions/Action;` @kind static;
  #L3f9d94.  v4:= temp @kind object;
  #L3f9d96.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3f9d9a.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3f9da0.  v4:= temp @kind object;
  #L3f9da2.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnEach`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3f9db4.  v0:= "consumer is null" @kind object;
  #L3f9db8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9dbe.  call temp:= `notificationOnNext`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9dc4.  v0:= temp @kind object;
  #L3f9dc6.  call temp:= `notificationOnError`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9dcc.  v1:= temp @kind object;
  #L3f9dce.  call temp:= `notificationOnComplete`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnComplete:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Action;` @kind static;
  #L3f9dd4.  v4:= temp @kind object;
  #L3f9dd6.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3f9dda.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3f9de0.  v4:= temp @kind object;
  #L3f9de2.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f9e4c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9e52.  v0:= temp @kind object;
  #L3f9e54.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3f9e58.  call temp:= `a`(v2, v0, v3, v1, v1) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3f9e5e.  v3:= temp @kind object;
  #L3f9e60.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `doOnLifecycle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9e74.  v0:= "onSubscribe is null" @kind object;
  #L3f9e78.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9e7e.  v0:= "onDispose is null" @kind object;
  #L3f9e82.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9e88.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoOnLifecycle`;
  #L3f9e8c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnLifecycle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3f9e92.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9e98.  v2:= temp @kind object;
  #L3f9e9a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnNext`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.doOnNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f9eac.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9eb2.  v0:= temp @kind object;
  #L3f9eb4.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3f9eb8.  call temp:= `a`(v2, v3, v0, v1, v1) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3f9ebe.  v3:= temp @kind object;
  #L3f9ec0.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `doOnSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9ed4.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3f9ed8.  call temp:= `doOnLifecycle`(v1, v2, v0) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind virtual;
  #L3f9ede.  v2:= temp @kind object;
  #L3f9ee0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnTerminate`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3f9ef4.  v0:= "onTerminate is null" @kind object;
  #L3f9ef8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9efe.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9f04.  v0:= temp @kind object;
  #L3f9f06.  call temp:= `actionConsumer`(v4) @signature `Lio/reactivex/internal/functions/Functions;.actionConsumer:(Lio/reactivex/functions/Action;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3f9f0c.  v1:= temp @kind object;
  #L3f9f0e.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3f9f12.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3f9f18.  v4:= temp @kind object;
  #L3f9f1a.  return v4 @kind object;
}
procedure `io.reactivex.Maybe` `elementAt`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.elementAt:(J)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3f852c.  v0:= 0L;
  #L3f8530.  v2:= lcmp(v4, v0);
  #L3f8534.  if v2 < 0 then goto L3f854c;
  #L3f8538.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtMaybe`;
  #L3f853c.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtMaybe;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L3f8542.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3f8548.  v4:= temp @kind object;
  #L3f854a.  return v4 @kind object;
  #L3f854c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3f8550.  v1:= new `java.lang.StringBuilder`;
  #L3f8554.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f855a.  v2:= "index >= 0 required but it was " @kind object;
  #L3f855e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f8564.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f856a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f8570.  v4:= temp @kind object;
  #L3f8572.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f8578.  throw v0;
}
procedure `io.reactivex.Single` `elementAt`(`io.reactivex.Observable` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fdb74.  v0:= 0L;
  #L3fdb78.  v2:= lcmp(v4, v0);
  #L3fdb7c.  if v2 < 0 then goto L3fdb9e;
  #L3fdb80.  v0:= "defaultItem is null" @kind object;
  #L3fdb84.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdb8a.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtSingle`;
  #L3fdb8e.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L3fdb94.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdb9a.  v4:= temp @kind object;
  #L3fdb9c.  return v4 @kind object;
  #L3fdb9e.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L3fdba2.  v0:= new `java.lang.StringBuilder`;
  #L3fdba6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fdbac.  v1:= "index >= 0 required but it was " @kind object;
  #L3fdbb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdbb6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdbbc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fdbc2.  v4:= temp @kind object;
  #L3fdbc4.  call `<init>`(v6, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdbca.  throw v6;
}
procedure `io.reactivex.Single` `elementAtOrError`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.elementAtOrError:(J)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fdbdc.  v0:= 0L;
  #L3fdbe0.  v2:= lcmp(v4, v0);
  #L3fdbe4.  if v2 < 0 then goto L3fdbfe;
  #L3fdbe8.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtSingle`;
  #L3fdbec.  v1:= 0I;
  #L3fdbee.  call `<init>`(v0, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L3fdbf4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdbfa.  v4:= temp @kind object;
  #L3fdbfc.  return v4 @kind object;
  #L3fdbfe.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3fdc02.  v1:= new `java.lang.StringBuilder`;
  #L3fdc06.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fdc0c.  v2:= "index >= 0 required but it was " @kind object;
  #L3fdc10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdc16.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdc1c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fdc22.  v4:= temp @kind object;
  #L3fdc24.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdc2a.  throw v0;
}
procedure `io.reactivex.Observable` `filter`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9fa8.  v0:= "predicate is null" @kind object;
  #L3f9fac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f9fb2.  v0:= new `io.reactivex.internal.operators.observable.ObservableFilter`;
  #L3f9fb6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFilter;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3f9fbc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3f9fc2.  v2:= temp @kind object;
  #L3f9fc4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `first`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.first:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fdc3c.  v0:= 0L;
  #L3fdc40.  call temp:= `elementAt`(v2, v0, v3) @signature `Lio/reactivex/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/Single;` @kind virtual;
  #L3fdc46.  v3:= temp @kind object;
  #L3fdc48.  return v3 @kind object;
}
procedure `io.reactivex.Maybe` `firstElement`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.firstElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f858c.  v0:= 0L;
  #L3f8590.  call temp:= `elementAt`(v2, v0) @signature `Lio/reactivex/Observable;.elementAt:(J)Lio/reactivex/Maybe;` @kind virtual;
  #L3f8596.  v0:= temp @kind object;
  #L3f8598.  return v0 @kind object;
}
procedure `io.reactivex.Single` `firstOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.firstOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fdc5c.  v0:= 0L;
  #L3fdc60.  call temp:= `elementAtOrError`(v2, v0) @signature `Lio/reactivex/Observable;.elementAtOrError:(J)Lio/reactivex/Single;` @kind virtual;
  #L3fdc66.  v0:= temp @kind object;
  #L3fdc68.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9fd8.  v0:= 0I;
  #L3f9fda.  call temp:= `flatMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3f9fe0.  v2:= temp @kind object;
  #L3f9fe2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fa0b4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa0ba.  v0:= temp;
  #L3fa0bc.  v1:= 0I;
  #L3fa0be.  call temp:= `flatMap`(v2, v3, v1, v4, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fa0c4.  v3:= temp @kind object;
  #L3fa0c6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fa0d8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa0de.  v4:= temp;
  #L3fa0e0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa0e6.  v5:= temp;
  #L3fa0e8.  v3:= 0I;
  #L3fa0ea.  v0:= v6 @kind object;
  #L3fa0ec.  v1:= v7 @kind object;
  #L3fa0ee.  v2:= v8 @kind object;
  #L3fa0f0.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fa0f6.  v7:= temp @kind object;
  #L3fa0f8.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fa1a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa1aa.  v5:= temp;
  #L3fa1ac.  v3:= 0I;
  #L3fa1ae.  v0:= v6 @kind object;
  #L3fa1b0.  v1:= v7 @kind object;
  #L3fa1b2.  v2:= v8 @kind object;
  #L3fa1b4.  v4:= v9;
  #L3fa1b6.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fa1bc.  v7:= temp @kind object;
  #L3fa1be.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `boolean` v9 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fa10c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa112.  v4:= temp;
  #L3fa114.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa11a.  v5:= temp;
  #L3fa11c.  v0:= v6 @kind object;
  #L3fa11e.  v1:= v7 @kind object;
  #L3fa120.  v2:= v8 @kind object;
  #L3fa122.  v3:= v9;
  #L3fa124.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fa12a.  v7:= temp @kind object;
  #L3fa12c.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fa140.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa146.  v5:= temp;
  #L3fa148.  v0:= v6 @kind object;
  #L3fa14a.  v1:= v7 @kind object;
  #L3fa14c.  v2:= v8 @kind object;
  #L3fa14e.  v3:= v9;
  #L3fa150.  v4:= v10;
  #L3fa152.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fa158.  v7:= temp @kind object;
  #L3fa15a.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa16c.  v0:= "mapper is null" @kind object;
  #L3fa170.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa176.  v0:= "combiner is null" @kind object;
  #L3fa17a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa180.  call temp:= `flatMapWithCombiner`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapWithCombiner:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3fa186.  v2:= temp @kind object;
  #L3fa188.  call temp:= `flatMap`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fa18e.  v2:= temp @kind object;
  #L3fa190.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa1d0.  v0:= "onNextMapper is null" @kind object;
  #L3fa1d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa1da.  v0:= "onErrorMapper is null" @kind object;
  #L3fa1de.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa1e4.  v0:= "onCompleteSupplier is null" @kind object;
  #L3fa1e8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa1ee.  v0:= new `io.reactivex.internal.operators.observable.ObservableMapNotification`;
  #L3fa1f2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3fa1f8.  call temp:= `merge`(v0) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fa1fe.  v2:= temp @kind object;
  #L3fa200.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object, `int` v5 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa214.  v0:= "onNextMapper is null" @kind object;
  #L3fa218.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa21e.  v0:= "onErrorMapper is null" @kind object;
  #L3fa222.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa228.  v0:= "onCompleteSupplier is null" @kind object;
  #L3fa22c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa232.  v0:= new `io.reactivex.internal.operators.observable.ObservableMapNotification`;
  #L3fa236.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3fa23c.  call temp:= `merge`(v0, v5) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L3fa242.  v2:= temp @kind object;
  #L3fa244.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f9ff4.  v0:= 2147483647I;
  #L3f9ffa.  call temp:= `flatMap`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fa000.  v2:= temp @kind object;
  #L3fa002.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa014.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa01a.  v0:= temp;
  #L3fa01c.  call temp:= `flatMap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fa022.  v2:= temp @kind object;
  #L3fa024.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fa038.  v0:= "mapper is null" @kind object;
  #L3fa03c.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa042.  v0:= "maxConcurrency" @kind object;
  #L3fa046.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fa04c.  v0:= "bufferSize" @kind object;
  #L3fa050.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fa056.  v0:= instanceof @variable v7 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3fa05a.  if v0 == 0 then goto L3fa084;
  #L3fa05e.  v9:= v7 @kind object;
  #L3fa060.  v9:= (`io.reactivex.internal.fuseable.ScalarCallable`) v9 @kind object;
  #L3fa064.  call temp:= `call`(v9) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3fa06a.  v9:= temp @kind object;
  #L3fa06c.  if v9 != 0 then goto L3fa07a;
  #L3fa070.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fa076.  v8:= temp @kind object;
  #L3fa078.  return v8 @kind object;
  #L3fa07a.  call temp:= `scalarXMap`(v9, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fa080.  v8:= temp @kind object;
  #L3fa082.  return v8 @kind object;
  #L3fa084.  v6:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3fa088.  v0:= v6 @kind object;
  #L3fa08a.  v1:= v7 @kind object;
  #L3fa08c.  v2:= v8 @kind object;
  #L3fa08e.  v3:= v9;
  #L3fa090.  v4:= v10;
  #L3fa092.  v5:= v11;
  #L3fa094.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3fa09a.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa0a0.  v8:= temp @kind object;
  #L3fa0a2.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8444.  v0:= 0I;
  #L3f8446.  call temp:= `flatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Completable;` @kind virtual;
  #L3f844c.  v2:= temp @kind object;
  #L3f844e.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8460.  v0:= "mapper is null" @kind object;
  #L3f8464.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f846a.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable`;
  #L3f846e.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3f8474.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3f847a.  v2:= temp @kind object;
  #L3f847c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa258.  v0:= "mapper is null" @kind object;
  #L3fa25c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa262.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlattenIterable`;
  #L3fa266.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fa26c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa272.  v2:= temp @kind object;
  #L3fa274.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapIterable`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `io.reactivex.functions.BiFunction` v9 @kind object) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fa288.  v0:= "mapper is null" @kind object;
  #L3fa28c.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa292.  v0:= "resultSelector is null" @kind object;
  #L3fa296.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa29c.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L3fa2a2.  v2:= temp @kind object;
  #L3fa2a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa2aa.  v5:= temp;
  #L3fa2ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa2b2.  v6:= temp;
  #L3fa2b4.  v4:= 0I;
  #L3fa2b6.  v1:= v7 @kind object;
  #L3fa2b8.  v3:= v9 @kind object;
  #L3fa2ba.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3fa2c0.  v8:= temp @kind object;
  #L3fa2c2.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `flatMapMaybe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa2d4.  v0:= 0I;
  #L3fa2d6.  call temp:= `flatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3fa2dc.  v2:= temp @kind object;
  #L3fa2de.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapMaybe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa2f0.  v0:= "mapper is null" @kind object;
  #L3fa2f4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa2fa.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapMaybe`;
  #L3fa2fe.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapMaybe;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3fa304.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa30a.  v2:= temp @kind object;
  #L3fa30c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapSingle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa320.  v0:= 0I;
  #L3fa322.  call temp:= `flatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3fa328.  v2:= temp @kind object;
  #L3fa32a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapSingle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa33c.  v0:= "mapper is null" @kind object;
  #L3fa340.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa346.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapSingle`;
  #L3fa34a.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3fa350.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa356.  v2:= temp @kind object;
  #L3fa358.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEach`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/Observable;.forEach:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fe13c.  call temp:= `subscribe`(v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3fe142.  v1:= temp @kind object;
  #L3fe144.  return v1 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fe158.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3fe15c.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3fe160.  call temp:= `forEachWhile`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3fe166.  v3:= temp @kind object;
  #L3fe168.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe17c.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3fe180.  call temp:= `forEachWhile`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3fe186.  v2:= temp @kind object;
  #L3fe188.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe19c.  v0:= "onNext is null" @kind object;
  #L3fe1a0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe1a6.  v0:= "onError is null" @kind object;
  #L3fe1aa.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe1b0.  v0:= "onComplete is null" @kind object;
  #L3fe1b4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe1ba.  v0:= new `io.reactivex.internal.observers.ForEachWhileObserver`;
  #L3fe1be.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.<init>:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3fe1c4.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe1ca.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fa61c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fa622.  v0:= temp @kind object;
  #L3fa624.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa62a.  v1:= temp;
  #L3fa62c.  v2:= 0I;
  #L3fa62e.  call temp:= `groupBy`(v3, v4, v0, v2, v1) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fa634.  v4:= temp @kind object;
  #L3fa636.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fa674.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa67a.  v0:= temp;
  #L3fa67c.  v1:= 0I;
  #L3fa67e.  call temp:= `groupBy`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fa684.  v3:= temp @kind object;
  #L3fa686.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa698.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa69e.  v0:= temp;
  #L3fa6a0.  call temp:= `groupBy`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fa6a6.  v2:= temp @kind object;
  #L3fa6a8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `boolean` v10 , `int` v11 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fa6bc.  v0:= "keySelector is null" @kind object;
  #L3fa6c0.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa6c6.  v0:= "valueSelector is null" @kind object;
  #L3fa6ca.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa6d0.  v0:= "bufferSize" @kind object;
  #L3fa6d4.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fa6da.  v0:= new `io.reactivex.internal.operators.observable.ObservableGroupBy`;
  #L3fa6de.  v1:= v0 @kind object;
  #L3fa6e0.  v2:= v7 @kind object;
  #L3fa6e2.  v3:= v8 @kind object;
  #L3fa6e4.  v4:= v9 @kind object;
  #L3fa6e6.  v5:= v11;
  #L3fa6e8.  v6:= v10;
  #L3fa6ea.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3fa6f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa6f6.  v8:= temp @kind object;
  #L3fa6f8.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fa648.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fa64e.  v0:= temp @kind object;
  #L3fa650.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fa656.  v1:= temp;
  #L3fa658.  call temp:= `groupBy`(v2, v3, v0, v4, v1) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fa65e.  v3:= temp @kind object;
  #L3fa660.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `groupJoin`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `io.reactivex.functions.Function` v10 @kind object, `io.reactivex.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/Observable;.groupJoin:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fa70c.  v0:= "other is null" @kind object;
  #L3fa710.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa716.  v0:= "leftEnd is null" @kind object;
  #L3fa71a.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa720.  v0:= "rightEnd is null" @kind object;
  #L3fa724.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa72a.  v0:= "resultSelector is null" @kind object;
  #L3fa72e.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa734.  v0:= new `io.reactivex.internal.operators.observable.ObservableGroupJoin`;
  #L3fa738.  v1:= v0 @kind object;
  #L3fa73a.  v2:= v7 @kind object;
  #L3fa73c.  v3:= v8 @kind object;
  #L3fa73e.  v4:= v9 @kind object;
  #L3fa740.  v5:= v10 @kind object;
  #L3fa742.  v6:= v11 @kind object;
  #L3fa744.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupJoin;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3fa74a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa750.  v8:= temp @kind object;
  #L3fa752.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `hide`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.hide:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fa764.  v0:= new `io.reactivex.internal.operators.observable.ObservableHide`;
  #L3fa768.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableHide;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fa76e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa774.  v0:= temp @kind object;
  #L3fa776.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `ignoreElements`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.ignoreElements:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8490.  v0:= new `io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable`;
  #L3f8494.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3f849a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3f84a0.  v0:= temp @kind object;
  #L3f84a2.  return v0 @kind object;
}
procedure `io.reactivex.Single` `isEmpty`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.isEmpty:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdc7c.  call temp:= `alwaysFalse`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysFalse:()Lio/reactivex/functions/Predicate;` @kind static;
  #L3fdc82.  v0:= temp @kind object;
  #L3fdc84.  call temp:= `all`(v1, v0) @signature `Lio/reactivex/Observable;.all:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @kind virtual;
  #L3fdc8a.  v0:= temp @kind object;
  #L3fdc8c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `join`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `io.reactivex.functions.Function` v10 @kind object, `io.reactivex.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/Observable;.join:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fa96c.  v0:= "other is null" @kind object;
  #L3fa970.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa976.  v0:= "leftEnd is null" @kind object;
  #L3fa97a.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa980.  v0:= "rightEnd is null" @kind object;
  #L3fa984.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa98a.  v0:= "resultSelector is null" @kind object;
  #L3fa98e.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fa994.  v0:= new `io.reactivex.internal.operators.observable.ObservableJoin`;
  #L3fa998.  v1:= v0 @kind object;
  #L3fa99a.  v2:= v7 @kind object;
  #L3fa99c.  v3:= v8 @kind object;
  #L3fa99e.  v4:= v9 @kind object;
  #L3fa9a0.  v5:= v10 @kind object;
  #L3fa9a2.  v6:= v11 @kind object;
  #L3fa9a4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableJoin;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3fa9aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fa9b0.  v8:= temp @kind object;
  #L3fa9b2.  return v8 @kind object;
}
procedure `io.reactivex.Single` `last`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.last:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdca0.  v0:= "defaultItem is null" @kind object;
  #L3fdca4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdcaa.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastSingle`;
  #L3fdcae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3fdcb4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdcba.  v2:= temp @kind object;
  #L3fdcbc.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `lastElement`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.lastElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f85ac.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastMaybe`;
  #L3f85b0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3f85b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3f85bc.  v0:= temp @kind object;
  #L3f85be.  return v0 @kind object;
}
procedure `io.reactivex.Single` `lastOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.lastOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fdcd0.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastSingle`;
  #L3fdcd4.  v1:= 0I;
  #L3fdcd6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3fdcdc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdce2.  v0:= temp @kind object;
  #L3fdce4.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `lift`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableOperator` v2 @kind object) @signature `Lio/reactivex/Observable;.lift:(Lio/reactivex/ObservableOperator;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fae84.  v0:= "onLift is null" @kind object;
  #L3fae88.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fae8e.  v0:= new `io.reactivex.internal.operators.observable.ObservableLift`;
  #L3fae92.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableOperator;)V` @kind direct;
  #L3fae98.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fae9e.  v2:= temp @kind object;
  #L3faea0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `map`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3faeb4.  v0:= "mapper is null" @kind object;
  #L3faeb8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3faebe.  v0:= new `io.reactivex.internal.operators.observable.ObservableMap`;
  #L3faec2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3faec8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3faece.  v2:= temp @kind object;
  #L3faed0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `materialize`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.materialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3faee4.  v0:= new `io.reactivex.internal.operators.observable.ObservableMaterialize`;
  #L3faee8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableMaterialize;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3faeee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3faef4.  v0:= temp @kind object;
  #L3faef6.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb43c.  v0:= "other is null" @kind object;
  #L3fb440.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb446.  call temp:= `merge`(v1, v2) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fb44c.  v2:= temp @kind object;
  #L3fb44e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fb480.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fb486.  v0:= temp;
  #L3fb488.  v1:= 0I;
  #L3fb48a.  call temp:= `observeOn`(v2, v3, v1, v0) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb490.  v3:= temp @kind object;
  #L3fb492.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb4a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fb4aa.  v0:= temp;
  #L3fb4ac.  call temp:= `observeOn`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fb4b2.  v2:= temp @kind object;
  #L3fb4b4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb4c8.  v0:= "scheduler is null" @kind object;
  #L3fb4cc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb4d2.  v0:= "bufferSize" @kind object;
  #L3fb4d6.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fb4dc.  v0:= new `io.reactivex.internal.operators.observable.ObservableObserveOn`;
  #L3fb4e0.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableObserveOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;ZI)V` @kind direct;
  #L3fb4e6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb4ec.  v2:= temp @kind object;
  #L3fb4ee.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ofType`(`io.reactivex.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Observable;.ofType:(Ljava/lang/Class;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb500.  v0:= "clazz is null" @kind object;
  #L3fb504.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb50a.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/functions/Predicate;` @kind static;
  #L3fb510.  v0:= temp @kind object;
  #L3fb512.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/Observable;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3fb518.  v0:= temp @kind object;
  #L3fb51a.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/Observable;` @kind virtual;
  #L3fb520.  v2:= temp @kind object;
  #L3fb522.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorResumeNext`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb534.  v0:= "next is null" @kind object;
  #L3fb538.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb53e.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L3fb544.  v2:= temp @kind object;
  #L3fb546.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fb54c.  v2:= temp @kind object;
  #L3fb54e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorResumeNext`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fb560.  v0:= "resumeFunction is null" @kind object;
  #L3fb564.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb56a.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorNext`;
  #L3fb56e.  v1:= 0I;
  #L3fb570.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3fb576.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb57c.  v3:= temp @kind object;
  #L3fb57e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `onErrorReturn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb590.  v0:= "valueSupplier is null" @kind object;
  #L3fb594.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb59a.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorReturn`;
  #L3fb59e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fb5a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb5aa.  v2:= temp @kind object;
  #L3fb5ac.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorReturnItem`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb5c0.  v0:= "item is null" @kind object;
  #L3fb5c4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb5ca.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L3fb5d0.  v2:= temp @kind object;
  #L3fb5d2.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/Observable;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fb5d8.  v2:= temp @kind object;
  #L3fb5da.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onExceptionResumeNext`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.onExceptionResumeNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fb5ec.  v0:= "next is null" @kind object;
  #L3fb5f0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb5f6.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorNext`;
  #L3fb5fa.  call temp:= `justFunction`(v3) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L3fb600.  v3:= temp @kind object;
  #L3fb602.  v1:= 1I;
  #L3fb604.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3fb60a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb610.  v3:= temp @kind object;
  #L3fb612.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `onTerminateDetach`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.onTerminateDetach:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb624.  v0:= new `io.reactivex.internal.operators.observable.ObservableDetach`;
  #L3fb628.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDetach;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fb62e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb634.  v0:= temp @kind object;
  #L3fb636.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `publish`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.publish:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb648.  v0:= "selector is null" @kind object;
  #L3fb64c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb652.  v0:= new `io.reactivex.internal.operators.observable.ObservablePublishSelector`;
  #L3fb656.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fb65c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb662.  v2:= temp @kind object;
  #L3fb664.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `publish`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.publish:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe2d4.  call temp:= `create`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservablePublish;.create:(Lio/reactivex/ObservableSource;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3fe2da.  v0:= temp @kind object;
  #L3fe2dc.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `reduce`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.reduce:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f85d0.  v0:= "reducer is null" @kind object;
  #L3f85d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f85da.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceMaybe`;
  #L3f85de.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceMaybe;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3f85e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3f85ea.  v2:= temp @kind object;
  #L3f85ec.  return v2 @kind object;
}
procedure `io.reactivex.Single` `reduce`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.reduce:(Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdcf8.  v0:= "seed is null" @kind object;
  #L3fdcfc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdd02.  v0:= "reducer is null" @kind object;
  #L3fdd06.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdd0c.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle`;
  #L3fdd10.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3fdd16.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdd1c.  v2:= temp @kind object;
  #L3fdd1e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `reduceWith`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.reduceWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdd30.  v0:= "seedSupplier is null" @kind object;
  #L3fdd34.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdd3a.  v0:= "reducer is null" @kind object;
  #L3fdd3e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdd44.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceWithSingle`;
  #L3fdd48.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceWithSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3fdd4e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdd54.  v2:= temp @kind object;
  #L3fdd56.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `repeat`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.repeat:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fb7d0.  v0:= 9223372036854775807L;
  #L3fb7da.  call temp:= `repeat`(v2, v0) @signature `Lio/reactivex/Observable;.repeat:(J)Lio/reactivex/Observable;` @kind virtual;
  #L3fb7e0.  v0:= temp @kind object;
  #L3fb7e2.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `repeat`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.repeat:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fb7f4.  v0:= 0L;
  #L3fb7f8.  v2:= lcmp(v4, v0);
  #L3fb7fc.  if v2 < 0 then goto L3fb822;
  #L3fb800.  if v2 != 0 then goto L3fb80e;
  #L3fb804.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fb80a.  v4:= temp @kind object;
  #L3fb80c.  return v4 @kind object;
  #L3fb80e.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeat`;
  #L3fb812.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat;.<init>:(Lio/reactivex/Observable;J)V` @kind direct;
  #L3fb818.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb81e.  v4:= temp @kind object;
  #L3fb820.  return v4 @kind object;
  #L3fb822.  v0:= new `java.lang.IllegalArgumentException`;
  #L3fb826.  v1:= new `java.lang.StringBuilder`;
  #L3fb82a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fb830.  v2:= "times >= 0 required but it was " @kind object;
  #L3fb834.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb83a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb840.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fb846.  v4:= temp @kind object;
  #L3fb848.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fb84e.  throw v0;
}
procedure `io.reactivex.Observable` `repeatUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Observable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb860.  v0:= "stop is null" @kind object;
  #L3fb864.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb86a.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeatUntil`;
  #L3fb86e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/BooleanSupplier;)V` @kind direct;
  #L3fb874.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb87a.  v2:= temp @kind object;
  #L3fb87c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `repeatWhen`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb890.  v0:= "handler is null" @kind object;
  #L3fb894.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb89a.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeatWhen`;
  #L3fb89e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatWhen;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fb8a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fb8aa.  v2:= temp @kind object;
  #L3fb8ac.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb8c0.  v0:= "selector is null" @kind object;
  #L3fb8c4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb8ca.  call temp:= `replayCallable`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;)Ljava/util/concurrent/Callable;` @kind static;
  #L3fb8d0.  v0:= temp @kind object;
  #L3fb8d2.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fb8d8.  v2:= temp @kind object;
  #L3fb8da.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb8ec.  v0:= "selector is null" @kind object;
  #L3fb8f0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb8f6.  v0:= "bufferSize" @kind object;
  #L3fb8fa.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fb900.  call temp:= `replayCallable`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;I)Ljava/util/concurrent/Callable;` @kind static;
  #L3fb906.  v3:= temp @kind object;
  #L3fb908.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fb90e.  v2:= temp @kind object;
  #L3fb910.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fb96c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fb972.  v6:= temp @kind object;
  #L3fb974.  v0:= v7 @kind object;
  #L3fb976.  v1:= v8 @kind object;
  #L3fb978.  v2:= v9;
  #L3fb97a.  v3:= v10 @kind wide;
  #L3fb97c.  v5:= v12 @kind object;
  #L3fb97e.  call temp:= `replay`(v0, v1, v2, v3, v5, v6) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fb984.  v8:= temp @kind object;
  #L3fb986.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fb998.  v0:= "selector is null" @kind object;
  #L3fb99c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb9a2.  v0:= "bufferSize" @kind object;
  #L3fb9a6.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fb9ac.  v0:= "unit is null" @kind object;
  #L3fb9b0.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb9b6.  v0:= "scheduler is null" @kind object;
  #L3fb9ba.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb9c0.  v0:= v6 @kind object;
  #L3fb9c2.  v1:= v8;
  #L3fb9c4.  v2:= v9 @kind wide;
  #L3fb9c6.  v4:= v11 @kind object;
  #L3fb9c8.  v5:= v12 @kind object;
  #L3fb9ca.  call temp:= `replayCallable`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable;` @kind static;
  #L3fb9d0.  v8:= temp @kind object;
  #L3fb9d2.  call temp:= `multicastSelector`(v8, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fb9d8.  v7:= temp @kind object;
  #L3fb9da.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;ILio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb924.  v0:= "selector is null" @kind object;
  #L3fb928.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb92e.  v0:= "scheduler is null" @kind object;
  #L3fb932.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb938.  v0:= "bufferSize" @kind object;
  #L3fb93c.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fb942.  call temp:= `replayCallable`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;I)Ljava/util/concurrent/Callable;` @kind static;
  #L3fb948.  v3:= temp @kind object;
  #L3fb94a.  call temp:= `replayFunction`(v2, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayFunction:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L3fb950.  v2:= temp @kind object;
  #L3fb952.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fb958.  v2:= temp @kind object;
  #L3fb95a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fba2c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fba32.  v5:= temp @kind object;
  #L3fba34.  v0:= v6 @kind object;
  #L3fba36.  v1:= v7 @kind object;
  #L3fba38.  v2:= v8 @kind wide;
  #L3fba3a.  v4:= v10 @kind object;
  #L3fba3c.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fba42.  v7:= temp @kind object;
  #L3fba44.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler` v6 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fba58.  v0:= "selector is null" @kind object;
  #L3fba5c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fba62.  v0:= "unit is null" @kind object;
  #L3fba66.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fba6c.  v0:= "scheduler is null" @kind object;
  #L3fba70.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fba76.  call temp:= `replayCallable`(v1, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable;` @kind static;
  #L3fba7c.  v3:= temp @kind object;
  #L3fba7e.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fba84.  v2:= temp @kind object;
  #L3fba86.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb9ec.  v0:= "selector is null" @kind object;
  #L3fb9f0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fb9f6.  v0:= "scheduler is null" @kind object;
  #L3fb9fa.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fba00.  call temp:= `replayCallable`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;)Ljava/util/concurrent/Callable;` @kind static;
  #L3fba06.  v0:= temp @kind object;
  #L3fba08.  call temp:= `replayFunction`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayFunction:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L3fba0e.  v2:= temp @kind object;
  #L3fba10.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fba16.  v2:= temp @kind object;
  #L3fba18.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.replay:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe2f0.  call temp:= `createFrom`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.createFrom:(Lio/reactivex/ObservableSource;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3fe2f6.  v0:= temp @kind object;
  #L3fe2f8.  return v0 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.replay:(I)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe30c.  v0:= "bufferSize" @kind object;
  #L3fe310.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fe316.  call temp:= `create`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;I)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3fe31c.  v2:= temp @kind object;
  #L3fe31e.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fe35c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fe362.  v5:= temp @kind object;
  #L3fe364.  v0:= v6 @kind object;
  #L3fe366.  v1:= v7;
  #L3fe368.  v2:= v8 @kind wide;
  #L3fe36a.  v4:= v10 @kind object;
  #L3fe36c.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3fe372.  v7:= temp @kind object;
  #L3fe374.  return v7 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fe388.  v0:= "bufferSize" @kind object;
  #L3fe38c.  call temp:= `verifyPositive`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fe392.  v0:= "unit is null" @kind object;
  #L3fe396.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe39c.  v0:= "scheduler is null" @kind object;
  #L3fe3a0.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe3a6.  v0:= v6 @kind object;
  #L3fe3a8.  v1:= v8 @kind wide;
  #L3fe3aa.  v3:= v10 @kind object;
  #L3fe3ac.  v4:= v11 @kind object;
  #L3fe3ae.  v5:= v7;
  #L3fe3b0.  call temp:= `create`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3fe3b6.  v7:= temp @kind object;
  #L3fe3b8.  return v7 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.replay:(ILio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe330.  v0:= "bufferSize" @kind object;
  #L3fe334.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fe33a.  call temp:= `replay`(v1, v2) @signature `Lio/reactivex/Observable;.replay:(I)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3fe340.  v2:= temp @kind object;
  #L3fe342.  call temp:= `observeOn`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.observeOn:(Lio/reactivex/observables/ConnectableObservable;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3fe348.  v2:= temp @kind object;
  #L3fe34a.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe3f8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fe3fe.  v0:= temp @kind object;
  #L3fe400.  call temp:= `replay`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3fe406.  v2:= temp @kind object;
  #L3fe408.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe41c.  v0:= "unit is null" @kind object;
  #L3fe420.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe426.  v0:= "scheduler is null" @kind object;
  #L3fe42a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe430.  call temp:= `create`(v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3fe436.  v2:= temp @kind object;
  #L3fe438.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe3cc.  v0:= "scheduler is null" @kind object;
  #L3fe3d0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe3d6.  call temp:= `replay`(v1) @signature `Lio/reactivex/Observable;.replay:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3fe3dc.  v0:= temp @kind object;
  #L3fe3de.  call temp:= `observeOn`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.observeOn:(Lio/reactivex/observables/ConnectableObservable;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3fe3e4.  v2:= temp @kind object;
  #L3fe3e6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v3 @kind this) @signature `Lio/reactivex/Observable;.retry:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fba98.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L3fba9e.  v0:= temp @kind object;
  #L3fbaa0.  v1:= 9223372036854775807L;
  #L3fbaaa.  call temp:= `retry`(v3, v1, v0) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3fbab0.  v0:= temp @kind object;
  #L3fbab2.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Observable;.retry:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbb18.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L3fbb1e.  v0:= temp @kind object;
  #L3fbb20.  call temp:= `retry`(v1, v2, v0) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3fbb26.  v2:= temp @kind object;
  #L3fbb28.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v3 @kind this, `long` v4 , `io.reactivex.functions.Predicate` v6 @kind object) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fbb3c.  v0:= 0L;
  #L3fbb40.  v2:= lcmp(v4, v0);
  #L3fbb44.  if v2 < 0 then goto L3fbb66;
  #L3fbb48.  v0:= "predicate is null" @kind object;
  #L3fbb4c.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbb52.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryPredicate`;
  #L3fbb56.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryPredicate;.<init>:(Lio/reactivex/Observable;JLio/reactivex/functions/Predicate;)V` @kind direct;
  #L3fbb5c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbb62.  v4:= temp @kind object;
  #L3fbb64.  return v4 @kind object;
  #L3fbb66.  v6:= new `java.lang.IllegalArgumentException`;
  #L3fbb6a.  v0:= new `java.lang.StringBuilder`;
  #L3fbb6e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fbb74.  v1:= "times >= 0 required but it was " @kind object;
  #L3fbb78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fbb7e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fbb84.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fbb8a.  v4:= temp @kind object;
  #L3fbb8c.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fbb92.  throw v6;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Observable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbac4.  v0:= "predicate is null" @kind object;
  #L3fbac8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbace.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryBiPredicate`;
  #L3fbad2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryBiPredicate;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L3fbad8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbade.  v2:= temp @kind object;
  #L3fbae0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/Observable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fbaf4.  v0:= 9223372036854775807L;
  #L3fbafe.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3fbb04.  v3:= temp @kind object;
  #L3fbb06.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `retryUntil`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/Observable;.retryUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fbba4.  v0:= "stop is null" @kind object;
  #L3fbba8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbbae.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/functions/Predicate;` @kind static;
  #L3fbbb4.  v3:= temp @kind object;
  #L3fbbb6.  v0:= 9223372036854775807L;
  #L3fbbc0.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3fbbc6.  v3:= temp @kind object;
  #L3fbbc8.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `retryWhen`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbbdc.  v0:= "handler is null" @kind object;
  #L3fbbe0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbbe6.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryWhen`;
  #L3fbbea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryWhen;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fbbf0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbbf6.  v2:= temp @kind object;
  #L3fbbf8.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/Observable;.safeSubscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe7e0.  v0:= "s is null" @kind object;
  #L3fe7e4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe7ea.  v0:= instanceof @variable v2 @type ^`io.reactivex.observers.SafeObserver` @kind boolean;
  #L3fe7ee.  if v0 == 0 then goto L3fe7fa;
  #L3fe7f2.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe7f8.  goto L3fe80a;
  #L3fe7fa.  v0:= new `io.reactivex.observers.SafeObserver`;
  #L3fe7fe.  call `<init>`(v0, v2) @signature `Lio/reactivex/observers/SafeObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L3fe804.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe80a.  return @kind void;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbc6c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fbc72.  v0:= temp @kind object;
  #L3fbc74.  call temp:= `sample`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fbc7a.  v2:= temp @kind object;
  #L3fbc7c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fbcbc.  v0:= "unit is null" @kind object;
  #L3fbcc0.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbcc6.  v0:= "scheduler is null" @kind object;
  #L3fbcca.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbcd0.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleTimed`;
  #L3fbcd4.  v7:= 0I;
  #L3fbcd6.  v1:= v0 @kind object;
  #L3fbcd8.  v2:= v8 @kind object;
  #L3fbcda.  v3:= v9 @kind wide;
  #L3fbcdc.  v5:= v11 @kind object;
  #L3fbcde.  v6:= v12 @kind object;
  #L3fbce0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3fbce6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbcec.  v9:= temp @kind object;
  #L3fbcee.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fbd00.  v0:= "unit is null" @kind object;
  #L3fbd04.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbd0a.  v0:= "scheduler is null" @kind object;
  #L3fbd0e.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbd14.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleTimed`;
  #L3fbd18.  v1:= v0 @kind object;
  #L3fbd1a.  v2:= v8 @kind object;
  #L3fbd1c.  v3:= v9 @kind wide;
  #L3fbd1e.  v5:= v11 @kind object;
  #L3fbd20.  v6:= v12 @kind object;
  #L3fbd22.  v7:= v13;
  #L3fbd24.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3fbd2a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbd30.  v9:= temp @kind object;
  #L3fbd32.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fbc90.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fbc96.  v4:= temp @kind object;
  #L3fbc98.  v0:= v6 @kind object;
  #L3fbc9a.  v1:= v7 @kind wide;
  #L3fbc9c.  v3:= v9 @kind object;
  #L3fbc9e.  v5:= v10;
  #L3fbca0.  call temp:= `sample`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3fbca6.  v7:= temp @kind object;
  #L3fbca8.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.sample:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fbc0c.  v0:= "sampler is null" @kind object;
  #L3fbc10.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbc16.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleWithObservable`;
  #L3fbc1a.  v1:= 0I;
  #L3fbc1c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Z)V` @kind direct;
  #L3fbc22.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbc28.  v3:= temp @kind object;
  #L3fbc2a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.sample:(Lio/reactivex/ObservableSource;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbc3c.  v0:= "sampler is null" @kind object;
  #L3fbc40.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbc46.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleWithObservable`;
  #L3fbc4a.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Z)V` @kind direct;
  #L3fbc50.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbc56.  v2:= temp @kind object;
  #L3fbc58.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scan`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.scan:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbd44.  v0:= "accumulator is null" @kind object;
  #L3fbd48.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbd4e.  v0:= new `io.reactivex.internal.operators.observable.ObservableScan`;
  #L3fbd52.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableScan;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3fbd58.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbd5e.  v2:= temp @kind object;
  #L3fbd60.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scan`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.scan:(Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbd74.  v0:= "seed is null" @kind object;
  #L3fbd78.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbd7e.  call temp:= `justCallable`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L3fbd84.  v2:= temp @kind object;
  #L3fbd86.  call temp:= `scanWith`(v1, v2, v3) @signature `Lio/reactivex/Observable;.scanWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @kind virtual;
  #L3fbd8c.  v2:= temp @kind object;
  #L3fbd8e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scanWith`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.scanWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbda0.  v0:= "seedSupplier is null" @kind object;
  #L3fbda4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbdaa.  v0:= "accumulator is null" @kind object;
  #L3fbdae.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbdb4.  v0:= new `io.reactivex.internal.operators.observable.ObservableScanSeed`;
  #L3fbdb8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScanSeed;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3fbdbe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbdc4.  v2:= temp @kind object;
  #L3fbdc6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `serialize`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.serialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbdd8.  v0:= new `io.reactivex.internal.operators.observable.ObservableSerialized`;
  #L3fbddc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSerialized;.<init>:(Lio/reactivex/Observable;)V` @kind direct;
  #L3fbde2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbde8.  v0:= temp @kind object;
  #L3fbdea.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `share`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.share:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fbdfc.  call temp:= `publish`(v1) @signature `Lio/reactivex/Observable;.publish:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3fbe02.  v0:= temp @kind object;
  #L3fbe04.  call temp:= `refCount`(v0) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:()Lio/reactivex/Observable;` @kind virtual;
  #L3fbe0a.  v0:= temp @kind object;
  #L3fbe0c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `single`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fde28.  v0:= "defaultItem is null" @kind object;
  #L3fde2c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fde32.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L3fde36.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3fde3c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fde42.  v2:= temp @kind object;
  #L3fde44.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `singleElement`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.singleElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8600.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleMaybe`;
  #L3f8604.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleMaybe;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3f860a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3f8610.  v0:= temp @kind object;
  #L3f8612.  return v0 @kind object;
}
procedure `io.reactivex.Single` `singleOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.singleOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fde58.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L3fde5c.  v1:= 0I;
  #L3fde5e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3fde64.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fde6a.  v0:= temp @kind object;
  #L3fde6c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.skip:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fbe20.  v0:= 0L;
  #L3fbe24.  v2:= lcmp(v4, v0);
  #L3fbe28.  if v2 > 0 then goto L3fbe36;
  #L3fbe2c.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbe32.  v4:= temp @kind object;
  #L3fbe34.  return v4 @kind object;
  #L3fbe36.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkip`;
  #L3fbe3a.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSkip;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L3fbe40.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbe46.  v4:= temp @kind object;
  #L3fbe48.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.skip:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fbe5c.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L3fbe62.  v1:= temp @kind object;
  #L3fbe64.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3fbe6a.  v1:= temp @kind object;
  #L3fbe6c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.skip:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fbe80.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3fbe86.  v1:= temp @kind object;
  #L3fbe88.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3fbe8e.  v1:= temp @kind object;
  #L3fbe90.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/Observable;.skipLast:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fbea4.  if v4 < 0 then goto L3fbeca;
  #L3fbea8.  if v4 != 0 then goto L3fbeb6;
  #L3fbeac.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbeb2.  v4:= temp @kind object;
  #L3fbeb4.  return v4 @kind object;
  #L3fbeb6.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipLast`;
  #L3fbeba.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLast;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3fbec0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fbec6.  v4:= temp @kind object;
  #L3fbec8.  return v4 @kind object;
  #L3fbeca.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3fbece.  v1:= new `java.lang.StringBuilder`;
  #L3fbed2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fbed8.  v2:= "count >= 0 required but it was " @kind object;
  #L3fbedc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fbee2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fbee8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fbeee.  v4:= temp @kind object;
  #L3fbef0.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fbef6.  throw v0;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fbf08.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3fbf0e.  v4:= temp @kind object;
  #L3fbf10.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fbf16.  v6:= temp;
  #L3fbf18.  v5:= 0I;
  #L3fbf1a.  v0:= v7 @kind object;
  #L3fbf1c.  v1:= v8 @kind wide;
  #L3fbf1e.  v3:= v10 @kind object;
  #L3fbf20.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fbf26.  v8:= temp @kind object;
  #L3fbf28.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fbf70.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fbf76.  v6:= temp;
  #L3fbf78.  v5:= 0I;
  #L3fbf7a.  v0:= v7 @kind object;
  #L3fbf7c.  v1:= v8 @kind wide;
  #L3fbf7e.  v3:= v10 @kind object;
  #L3fbf80.  v4:= v11 @kind object;
  #L3fbf82.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fbf88.  v8:= temp @kind object;
  #L3fbf8a.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fbf9c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fbfa2.  v6:= temp;
  #L3fbfa4.  v0:= v7 @kind object;
  #L3fbfa6.  v1:= v8 @kind wide;
  #L3fbfa8.  v3:= v10 @kind object;
  #L3fbfaa.  v4:= v11 @kind object;
  #L3fbfac.  v5:= v12;
  #L3fbfae.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fbfb4.  v8:= temp @kind object;
  #L3fbfb6.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fbfc8.  v0:= "unit is null" @kind object;
  #L3fbfcc.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbfd2.  v0:= "scheduler is null" @kind object;
  #L3fbfd6.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fbfdc.  v0:= "bufferSize" @kind object;
  #L3fbfe0.  call temp:= `verifyPositive`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fbfe6.  v7:= v15 ^< 1;
  #L3fbfea.  v15:= new `io.reactivex.internal.operators.observable.ObservableSkipLastTimed`;
  #L3fbfee.  v1:= v15 @kind object;
  #L3fbff0.  v2:= v9 @kind object;
  #L3fbff2.  v3:= v10 @kind wide;
  #L3fbff4.  v5:= v12 @kind object;
  #L3fbff6.  v6:= v13 @kind object;
  #L3fbff8.  v8:= v14;
  #L3fbffa.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L3fc000.  call temp:= `onAssembly`(v15) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc006.  v10:= temp @kind object;
  #L3fc008.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fbf3c.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3fbf42.  v4:= temp @kind object;
  #L3fbf44.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fbf4a.  v6:= temp;
  #L3fbf4c.  v0:= v7 @kind object;
  #L3fbf4e.  v1:= v8 @kind wide;
  #L3fbf50.  v3:= v10 @kind object;
  #L3fbf52.  v5:= v11;
  #L3fbf54.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fbf5a.  v8:= temp @kind object;
  #L3fbf5c.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc01c.  v0:= "other is null" @kind object;
  #L3fc020.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc026.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipUntil`;
  #L3fc02a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fc030.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc036.  v2:= temp @kind object;
  #L3fc038.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `skipWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.skipWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc04c.  v0:= "predicate is null" @kind object;
  #L3fc050.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc056.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipWhile`;
  #L3fc05a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3fc060.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc066.  v2:= temp @kind object;
  #L3fc068.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `sorted`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.sorted:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc07c.  call temp:= `toList`(v2) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L3fc082.  v0:= temp @kind object;
  #L3fc084.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L3fc08a.  v0:= temp @kind object;
  #L3fc08c.  call temp:= `naturalComparator`() @signature `Lio/reactivex/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L3fc092.  v1:= temp @kind object;
  #L3fc094.  call temp:= `listSorter`(v1) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L3fc09a.  v1:= temp @kind object;
  #L3fc09c.  call temp:= `map`(v0, v1) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc0a2.  v0:= temp @kind object;
  #L3fc0a4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fc0aa.  v1:= temp @kind object;
  #L3fc0ac.  call temp:= `flatMapIterable`(v0, v1) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc0b2.  v0:= temp @kind object;
  #L3fc0b4.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `sorted`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/Observable;.sorted:(Ljava/util/Comparator;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc0c8.  v0:= "sortFunction is null" @kind object;
  #L3fc0cc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc0d2.  call temp:= `toList`(v1) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L3fc0d8.  v0:= temp @kind object;
  #L3fc0da.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L3fc0e0.  v0:= temp @kind object;
  #L3fc0e2.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L3fc0e8.  v2:= temp @kind object;
  #L3fc0ea.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc0f0.  v2:= temp @kind object;
  #L3fc0f2.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fc0f8.  v0:= temp @kind object;
  #L3fc0fa.  call temp:= `flatMapIterable`(v2, v0) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc100.  v2:= temp @kind object;
  #L3fc102.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc114.  v0:= "other is null" @kind object;
  #L3fc118.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc11e.  v0:= 2I;
  #L3fc120.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3fc124.  v1:= 0I;
  #L3fc126.  v0[v1]:= v3 @kind object;
  #L3fc12a.  v3:= 1I;
  #L3fc12c.  v0[v3]:= v2 @kind object;
  #L3fc130.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fc136.  v3:= temp @kind object;
  #L3fc138.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc14c.  v0:= 2I;
  #L3fc14e.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3fc152.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3fc158.  v3:= temp @kind object;
  #L3fc15a.  v1:= 0I;
  #L3fc15c.  v0[v1]:= v3 @kind object;
  #L3fc160.  v3:= 1I;
  #L3fc162.  v0[v3]:= v2 @kind object;
  #L3fc166.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fc16c.  v3:= temp @kind object;
  #L3fc16e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc180.  v0:= "item is null" @kind object;
  #L3fc184.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc18a.  v0:= 2I;
  #L3fc18c.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3fc190.  call temp:= `just`(v3) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fc196.  v3:= temp @kind object;
  #L3fc198.  v1:= 0I;
  #L3fc19a.  v0[v1]:= v3 @kind object;
  #L3fc19e.  v3:= 1I;
  #L3fc1a0.  v0[v3]:= v2 @kind object;
  #L3fc1a4.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fc1aa.  v3:= temp @kind object;
  #L3fc1ac.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWithArray`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/reactivex/Observable;.startWithArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc1c0.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3fc1c6.  v3:= temp @kind object;
  #L3fc1c8.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fc1ce.  v0:= temp @kind object;
  #L3fc1d0.  if v3 != v0 then goto L3fc1de;
  #L3fc1d4.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc1da.  v3:= temp @kind object;
  #L3fc1dc.  return v3 @kind object;
  #L3fc1de.  v0:= 2I;
  #L3fc1e0.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3fc1e4.  v1:= 0I;
  #L3fc1e6.  v0[v1]:= v3 @kind object;
  #L3fc1ea.  v3:= 1I;
  #L3fc1ec.  v0[v3]:= v2 @kind object;
  #L3fc1f0.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3fc1f6.  v3:= temp @kind object;
  #L3fc1f8.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v4 @kind this) @signature `Lio/reactivex/Observable;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe1dc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3fe1e2.  v0:= temp @kind object;
  #L3fe1e4.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3fe1e8.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3fe1ec.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3fe1f2.  v3:= temp @kind object;
  #L3fe1f4.  call temp:= `subscribe`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3fe1fa.  v0:= temp @kind object;
  #L3fe1fc.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fe210.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3fe214.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3fe218.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3fe21e.  v2:= temp @kind object;
  #L3fe220.  call temp:= `subscribe`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3fe226.  v4:= temp @kind object;
  #L3fe228.  return v4 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fe23c.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3fe240.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3fe246.  v1:= temp @kind object;
  #L3fe248.  call temp:= `subscribe`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3fe24e.  v3:= temp @kind object;
  #L3fe250.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe264.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3fe26a.  v0:= temp @kind object;
  #L3fe26c.  call temp:= `subscribe`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3fe272.  v2:= temp @kind object;
  #L3fe274.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object, `io.reactivex.functions.Consumer` v5 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe288.  v0:= "onNext is null" @kind object;
  #L3fe28c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe292.  v0:= "onError is null" @kind object;
  #L3fe296.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe29c.  v0:= "onComplete is null" @kind object;
  #L3fe2a0.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe2a6.  v0:= "onSubscribe is null" @kind object;
  #L3fe2aa.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe2b0.  v0:= new `io.reactivex.internal.observers.LambdaObserver`;
  #L3fe2b4.  call `<init>`(v0, v2, v3, v4, v5) @signature `Lio/reactivex/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3fe2ba.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe2c0.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fe81c.  v0:= "observer is null" @kind object;
  #L3fe820.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe826.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Observable;Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind static;
  #L3fe82c.  v3:= temp @kind object;
  #L3fe82e.  v0:= "Plugin returned null Observer" @kind object;
  #L3fe832.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe838.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/Observable;.subscribeActual:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe83e.  return @kind void;
  #L3fe840.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe842.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3fe848.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3fe84e.  v0:= new `java.lang.NullPointerException`;
  #L3fe852.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L3fe856.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe85c.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3fe862.  throw v0;
  #L3fe864.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L3fe866.  throw v3;
  catch `java.lang.NullPointerException` @[L3fe826..L3fe83e] goto L3fe864;
  catch `java.lang.Throwable` @[L3fe826..L3fe83e] goto L3fe840;
}
procedure `void` `subscribeActual`(`io.reactivex.Observer` v0 @kind object) @signature `Lio/reactivex/Observable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Observable` `subscribeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc20c.  v0:= "scheduler is null" @kind object;
  #L3fc210.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc216.  v0:= new `io.reactivex.internal.operators.observable.ObservableSubscribeOn`;
  #L3fc21a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fc220.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc226.  v2:= temp @kind object;
  #L3fc228.  return v2 @kind object;
}
procedure `io.reactivex.Observer` `subscribeWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/Observable;.subscribeWith:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fda48.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fda4e.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchIfEmpty`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.switchIfEmpty:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc23c.  v0:= "other is null" @kind object;
  #L3fc240.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc246.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty`;
  #L3fc24a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchIfEmpty;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fc250.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc256.  v2:= temp @kind object;
  #L3fc258.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc26c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc272.  v0:= temp;
  #L3fc274.  call temp:= `switchMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fc27a.  v2:= temp @kind object;
  #L3fc27c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc290.  v0:= "mapper is null" @kind object;
  #L3fc294.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc29a.  v0:= "bufferSize" @kind object;
  #L3fc29e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fc2a4.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3fc2a8.  if v0 == 0 then goto L3fc2d2;
  #L3fc2ac.  v4:= v2 @kind object;
  #L3fc2ae.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L3fc2b2.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3fc2b8.  v4:= temp @kind object;
  #L3fc2ba.  if v4 != 0 then goto L3fc2c8;
  #L3fc2be.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fc2c4.  v3:= temp @kind object;
  #L3fc2c6.  return v3 @kind object;
  #L3fc2c8.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fc2ce.  v3:= temp @kind object;
  #L3fc2d0.  return v3 @kind object;
  #L3fc2d2.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L3fc2d6.  v1:= 0I;
  #L3fc2d8.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3fc2de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc2e4.  v3:= temp @kind object;
  #L3fc2e6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc2f8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc2fe.  v0:= temp;
  #L3fc300.  call temp:= `switchMapDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fc306.  v2:= temp @kind object;
  #L3fc308.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMapDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc31c.  v0:= "mapper is null" @kind object;
  #L3fc320.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc326.  v0:= "bufferSize" @kind object;
  #L3fc32a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fc330.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3fc334.  if v0 == 0 then goto L3fc35e;
  #L3fc338.  v4:= v2 @kind object;
  #L3fc33a.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L3fc33e.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3fc344.  v4:= temp @kind object;
  #L3fc346.  if v4 != 0 then goto L3fc354;
  #L3fc34a.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3fc350.  v3:= temp @kind object;
  #L3fc352.  return v3 @kind object;
  #L3fc354.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fc35a.  v3:= temp @kind object;
  #L3fc35c.  return v3 @kind object;
  #L3fc35e.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L3fc362.  v1:= 1I;
  #L3fc364.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3fc36a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc370.  v3:= temp @kind object;
  #L3fc372.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapSingle`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/Observable;.switchMapSingle:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc384.  call temp:= `switchMapSingle`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.switchMapSingle:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fc38a.  v1:= temp @kind object;
  #L3fc38c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchMapSingleDelayError`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/Observable;.switchMapSingleDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc3a0.  call temp:= `switchMapSingleDelayError`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.switchMapSingleDelayError:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3fc3a6.  v1:= temp @kind object;
  #L3fc3a8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.take:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fc48c.  v0:= 0L;
  #L3fc490.  v2:= lcmp(v4, v0);
  #L3fc494.  if v2 < 0 then goto L3fc4ac;
  #L3fc498.  v0:= new `io.reactivex.internal.operators.observable.ObservableTake`;
  #L3fc49c.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTake;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L3fc4a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc4a8.  v4:= temp @kind object;
  #L3fc4aa.  return v4 @kind object;
  #L3fc4ac.  v0:= new `java.lang.IllegalArgumentException`;
  #L3fc4b0.  v1:= new `java.lang.StringBuilder`;
  #L3fc4b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fc4ba.  v2:= "count >= 0 required but it was " @kind object;
  #L3fc4be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc4c4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc4ca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fc4d0.  v4:= temp @kind object;
  #L3fc4d2.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fc4d8.  throw v0;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.take:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc4ec.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L3fc4f2.  v1:= temp @kind object;
  #L3fc4f4.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc4fa.  v1:= temp @kind object;
  #L3fc4fc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.take:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc510.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3fc516.  v1:= temp @kind object;
  #L3fc518.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc51e.  v1:= temp @kind object;
  #L3fc520.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/Observable;.takeLast:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fc534.  if v4 < 0 then goto L3fc57e;
  #L3fc538.  if v4 != 0 then goto L3fc550;
  #L3fc53c.  v4:= new `io.reactivex.internal.operators.observable.ObservableIgnoreElements`;
  #L3fc540.  call `<init>`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fc546.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc54c.  v4:= temp @kind object;
  #L3fc54e.  return v4 @kind object;
  #L3fc550.  v0:= 1I;
  #L3fc552.  if v4 != v0 then goto L3fc56a;
  #L3fc556.  v4:= new `io.reactivex.internal.operators.observable.ObservableTakeLastOne`;
  #L3fc55a.  call `<init>`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fc560.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc566.  v4:= temp @kind object;
  #L3fc568.  return v4 @kind object;
  #L3fc56a.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeLast`;
  #L3fc56e.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLast;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3fc574.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc57a.  v4:= temp @kind object;
  #L3fc57c.  return v4 @kind object;
  #L3fc57e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3fc582.  v1:= new `java.lang.StringBuilder`;
  #L3fc586.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fc58c.  v2:= "count >= 0 required but it was " @kind object;
  #L3fc590.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc596.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc59c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fc5a2.  v4:= temp @kind object;
  #L3fc5a4.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fc5aa.  throw v0;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fc6ac.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3fc6b2.  v6:= temp @kind object;
  #L3fc6b4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc6ba.  v8:= temp;
  #L3fc6bc.  v7:= 0I;
  #L3fc6be.  v0:= v9 @kind object;
  #L3fc6c0.  v1:= v10 @kind wide;
  #L3fc6c2.  v3:= v12 @kind wide;
  #L3fc6c4.  v5:= v14 @kind object;
  #L3fc6c6.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fc6cc.  v10:= temp @kind object;
  #L3fc6ce.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object, `io.reactivex.Scheduler` v15 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fc6e0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc6e6.  v8:= temp;
  #L3fc6e8.  v7:= 0I;
  #L3fc6ea.  v0:= v9 @kind object;
  #L3fc6ec.  v1:= v10 @kind wide;
  #L3fc6ee.  v3:= v12 @kind wide;
  #L3fc6f0.  v5:= v14 @kind object;
  #L3fc6f2.  v6:= v15 @kind object;
  #L3fc6f4.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fc6fa.  v10:= temp @kind object;
  #L3fc6fc.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v11 @kind this, `long` v12 , `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.Scheduler` v17 @kind object, `boolean` v18 , `int` v19 ) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3fc710.  v2:= v12 @kind wide;
  #L3fc712.  v0:= "unit is null" @kind object;
  #L3fc716.  v6:= v16 @kind object;
  #L3fc71a.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc720.  v0:= "scheduler is null" @kind object;
  #L3fc724.  v7:= v17 @kind object;
  #L3fc728.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc72e.  v0:= "bufferSize" @kind object;
  #L3fc732.  v8:= v19;
  #L3fc736.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fc73c.  v0:= 0L;
  #L3fc740.  v4:= lcmp(v2, v0);
  #L3fc744.  if v4 < 0 then goto L3fc774;
  #L3fc748.  v10:= new `io.reactivex.internal.operators.observable.ObservableTakeLastTimed`;
  #L3fc74c.  v0:= v10 @kind object;
  #L3fc74e.  v1:= v11 @kind object;
  #L3fc750.  v2:= v12 @kind wide;
  #L3fc752.  v4:= v14 @kind wide;
  #L3fc754.  v6:= v16 @kind object;
  #L3fc758.  v7:= v17 @kind object;
  #L3fc75c.  v8:= v19;
  #L3fc760.  v9:= v18;
  #L3fc764.  call `<init>`(v0, v1, v2, v4, v6, v7, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L3fc76a.  call temp:= `onAssembly`(v10) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc770.  v0:= temp @kind object;
  #L3fc772.  return v0 @kind object;
  #L3fc774.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3fc778.  v1:= new `java.lang.StringBuilder`;
  #L3fc77c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fc782.  v4:= "count >= 0 required but it was " @kind object;
  #L3fc786.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc78c.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc792.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fc798.  v1:= temp @kind object;
  #L3fc79a.  call `<init>`(v0, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fc7a0.  throw v0;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fc5bc.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3fc5c2.  v4:= temp @kind object;
  #L3fc5c4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc5ca.  v6:= temp;
  #L3fc5cc.  v5:= 0I;
  #L3fc5ce.  v0:= v7 @kind object;
  #L3fc5d0.  v1:= v8 @kind wide;
  #L3fc5d2.  v3:= v10 @kind object;
  #L3fc5d4.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fc5da.  v8:= temp @kind object;
  #L3fc5dc.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fc624.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc62a.  v6:= temp;
  #L3fc62c.  v5:= 0I;
  #L3fc62e.  v0:= v7 @kind object;
  #L3fc630.  v1:= v8 @kind wide;
  #L3fc632.  v3:= v10 @kind object;
  #L3fc634.  v4:= v11 @kind object;
  #L3fc636.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fc63c.  v8:= temp @kind object;
  #L3fc63e.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fc650.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc656.  v6:= temp;
  #L3fc658.  v0:= v7 @kind object;
  #L3fc65a.  v1:= v8 @kind wide;
  #L3fc65c.  v3:= v10 @kind object;
  #L3fc65e.  v4:= v11 @kind object;
  #L3fc660.  v5:= v12;
  #L3fc662.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fc668.  v8:= temp @kind object;
  #L3fc66a.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fc67c.  v1:= 9223372036854775807L;
  #L3fc686.  v0:= v9 @kind object;
  #L3fc688.  v3:= v10 @kind wide;
  #L3fc68a.  v5:= v12 @kind object;
  #L3fc68c.  v6:= v13 @kind object;
  #L3fc68e.  v7:= v14;
  #L3fc690.  v8:= v15;
  #L3fc692.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fc698.  v10:= temp @kind object;
  #L3fc69a.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fc5f0.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3fc5f6.  v4:= temp @kind object;
  #L3fc5f8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fc5fe.  v6:= temp;
  #L3fc600.  v0:= v7 @kind object;
  #L3fc602.  v1:= v8 @kind wide;
  #L3fc604.  v3:= v10 @kind object;
  #L3fc606.  v5:= v11;
  #L3fc608.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fc60e.  v8:= temp @kind object;
  #L3fc610.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc7b4.  v0:= "other is null" @kind object;
  #L3fc7b8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc7be.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeUntil`;
  #L3fc7c2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntil;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fc7c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc7ce.  v2:= temp @kind object;
  #L3fc7d0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `takeUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc7e4.  v0:= "predicate is null" @kind object;
  #L3fc7e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc7ee.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate`;
  #L3fc7f2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntilPredicate;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3fc7f8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc7fe.  v2:= temp @kind object;
  #L3fc800.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `takeWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.takeWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc814.  v0:= "predicate is null" @kind object;
  #L3fc818.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc81e.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeWhile`;
  #L3fc822.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeWhile;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3fc828.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc82e.  v2:= temp @kind object;
  #L3fc830.  return v2 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe44c.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3fe450.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3fe456.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe45c.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Observable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Observable;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe470.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3fe474.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3fe47a.  if v2 == 0 then goto L3fe484;
  #L3fe47e.  call `dispose`(v0) @signature `Lio/reactivex/observers/TestObserver;.dispose:()V` @kind virtual;
  #L3fe484.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3fe48a.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `throttleFirst`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc844.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fc84a.  v0:= temp @kind object;
  #L3fc84c.  call temp:= `throttleFirst`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc852.  v2:= temp @kind object;
  #L3fc854.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `throttleFirst`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fc868.  v0:= "unit is null" @kind object;
  #L3fc86c.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc872.  v0:= "scheduler is null" @kind object;
  #L3fc876.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc87c.  v0:= new `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed`;
  #L3fc880.  v1:= v0 @kind object;
  #L3fc882.  v2:= v7 @kind object;
  #L3fc884.  v3:= v8 @kind wide;
  #L3fc886.  v5:= v10 @kind object;
  #L3fc888.  v6:= v11 @kind object;
  #L3fc88a.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fc890.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc896.  v8:= temp @kind object;
  #L3fc898.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `throttleLast`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc8ac.  call temp:= `sample`(v0, v1, v3) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc8b2.  v1:= temp @kind object;
  #L3fc8b4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleLast`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc8c8.  call temp:= `sample`(v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc8ce.  v1:= temp @kind object;
  #L3fc8d0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleWithTimeout`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc8e4.  call temp:= `debounce`(v0, v1, v3) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc8ea.  v1:= temp @kind object;
  #L3fc8ec.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleWithTimeout`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc900.  call temp:= `debounce`(v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc906.  v1:= temp @kind object;
  #L3fc908.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.timeInterval:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc91c.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3fc920.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fc926.  v1:= temp @kind object;
  #L3fc928.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc92e.  v0:= temp @kind object;
  #L3fc930.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc944.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3fc948.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc94e.  v2:= temp @kind object;
  #L3fc950.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc964.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fc96a.  v0:= temp @kind object;
  #L3fc96c.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fc972.  v2:= temp @kind object;
  #L3fc974.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc988.  v0:= "unit is null" @kind object;
  #L3fc98c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc992.  v0:= "scheduler is null" @kind object;
  #L3fc996.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc99c.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeInterval`;
  #L3fc9a0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeInterval;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fc9a6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fc9ac.  v2:= temp @kind object;
  #L3fc9ae.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fca5c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fca62.  v5:= temp @kind object;
  #L3fca64.  v4:= 0I;
  #L3fca66.  v0:= v6 @kind object;
  #L3fca68.  v1:= v7 @kind wide;
  #L3fca6a.  v3:= v9 @kind object;
  #L3fca6c.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L3fca72.  v7:= temp @kind object;
  #L3fca74.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fca88.  v0:= "other is null" @kind object;
  #L3fca8c.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fca92.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fca98.  v6:= temp @kind object;
  #L3fca9a.  v1:= v7 @kind object;
  #L3fca9c.  v2:= v8 @kind wide;
  #L3fca9e.  v4:= v10 @kind object;
  #L3fcaa0.  v5:= v11 @kind object;
  #L3fcaa2.  call temp:= `b`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L3fcaa8.  v8:= temp @kind object;
  #L3fcaaa.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fcabc.  v4:= 0I;
  #L3fcabe.  v0:= v6 @kind object;
  #L3fcac0.  v1:= v7 @kind wide;
  #L3fcac2.  v3:= v9 @kind object;
  #L3fcac4.  v5:= v10 @kind object;
  #L3fcac6.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L3fcacc.  v7:= temp @kind object;
  #L3fcace.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fcae0.  v0:= "other is null" @kind object;
  #L3fcae4.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcaea.  v0:= v6 @kind object;
  #L3fcaec.  v1:= v7 @kind wide;
  #L3fcaee.  v3:= v9 @kind object;
  #L3fcaf0.  v4:= v11 @kind object;
  #L3fcaf2.  v5:= v10 @kind object;
  #L3fcaf4.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L3fcafa.  v7:= temp @kind object;
  #L3fcafc.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc9c0.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L3fc9c4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc9ca.  v0:= 0I;
  #L3fc9cc.  call temp:= `c`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L3fc9d2.  v2:= temp @kind object;
  #L3fc9d4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc9e8.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L3fc9ec.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc9f2.  v0:= "other is null" @kind object;
  #L3fc9f6.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fc9fc.  call temp:= `c`(v1, v2, v3, v4) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L3fca02.  v2:= temp @kind object;
  #L3fca04.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fca18.  v0:= 0I;
  #L3fca1a.  call temp:= `c`(v1, v0, v2, v0) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L3fca20.  v2:= temp @kind object;
  #L3fca22.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fca34.  v0:= "other is null" @kind object;
  #L3fca38.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fca3e.  v0:= 0I;
  #L3fca40.  call temp:= `c`(v1, v0, v2, v3) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L3fca46.  v2:= temp @kind object;
  #L3fca48.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.timestamp:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fcbec.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3fcbf0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fcbf6.  v1:= temp @kind object;
  #L3fcbf8.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fcbfe.  v0:= temp @kind object;
  #L3fcc00.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcc14.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3fcc18.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fcc1e.  v2:= temp @kind object;
  #L3fcc20.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcc34.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fcc3a.  v0:= temp @kind object;
  #L3fcc3c.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3fcc42.  v2:= temp @kind object;
  #L3fcc44.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcc58.  v0:= "unit is null" @kind object;
  #L3fcc5c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcc62.  v0:= "scheduler is null" @kind object;
  #L3fcc66.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcc6c.  call temp:= `timestampWith`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.timestampWith:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L3fcc72.  v2:= temp @kind object;
  #L3fcc74.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fcc7a.  v2:= temp @kind object;
  #L3fcc7c.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe66c.  v0:= "converter is null" @kind object;
  #L3fe670.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe676.  v2:= temp @kind object;
  #L3fe678.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L3fe67c.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3fe682.  v2:= temp @kind object;
  #L3fe684.  return v2 @kind object;
  #L3fe686.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe688.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3fe68e.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3fe694.  v2:= temp @kind object;
  #L3fe696.  throw v2;
  catch `java.lang.Throwable` @[L3fe66c..L3fe684] goto L3fe686;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.BackpressureStrategy` v3 @kind object) @signature `Lio/reactivex/Observable;.toFlowable:(Lio/reactivex/BackpressureStrategy;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f84b4.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFromObservable`;
  #L3f84b8.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromObservable;.<init>:(Lio/reactivex/Observable;)V` @kind direct;
  #L3f84be.  v1:= `@@io.reactivex.Observable$a.a` @type ^`int`[] @kind object;
  #L3f84c2.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3f84c8.  v3:= temp;
  #L3f84ca.  v3:= v1[v3];
  #L3f84ce.  v1:= 1I;
  #L3f84d0.  if v3 == v1 then goto L3f8510;
  #L3f84d4.  v1:= 2I;
  #L3f84d6.  if v3 == v1 then goto L3f8506;
  #L3f84da.  v1:= 3I;
  #L3f84dc.  if v3 == v1 then goto L3f8504;
  #L3f84e0.  v1:= 4I;
  #L3f84e2.  if v3 == v1 then goto L3f84f0;
  #L3f84e6.  call temp:= `onBackpressureBuffer`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureBuffer:()Lio/reactivex/Flowable;` @kind virtual;
  #L3f84ec.  v3:= temp @kind object;
  #L3f84ee.  return v3 @kind object;
  #L3f84f0.  v3:= new `io.reactivex.internal.operators.flowable.FlowableOnBackpressureError`;
  #L3f84f4.  call `<init>`(v3, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnBackpressureError;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L3f84fa.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3f8500.  v3:= temp @kind object;
  #L3f8502.  return v3 @kind object;
  #L3f8504.  return v0 @kind object;
  #L3f8506.  call temp:= `onBackpressureLatest`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureLatest:()Lio/reactivex/Flowable;` @kind virtual;
  #L3f850c.  v3:= temp @kind object;
  #L3f850e.  return v3 @kind object;
  #L3f8510.  call temp:= `onBackpressureDrop`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureDrop:()Lio/reactivex/Flowable;` @kind virtual;
  #L3f8516.  v3:= temp @kind object;
  #L3f8518.  return v3 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe6b4.  v0:= new `io.reactivex.internal.observers.FutureObserver`;
  #L3fe6b8.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/FutureObserver;.<init>:()V` @kind direct;
  #L3fe6be.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/Observable;.subscribeWith:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind virtual;
  #L3fe6c4.  v0:= temp @kind object;
  #L3fe6c6.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L3fe6ca.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fde80.  v0:= 16I;
  #L3fde84.  call temp:= `toList`(v1, v0) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @kind virtual;
  #L3fde8a.  v0:= temp @kind object;
  #L3fde8c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdea0.  v0:= "capacityHint" @kind object;
  #L3fdea4.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fdeaa.  v0:= new `io.reactivex.internal.operators.observable.ObservableToListSingle`;
  #L3fdeae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3fdeb4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdeba.  v2:= temp @kind object;
  #L3fdebc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.toList:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fded0.  v0:= "collectionSupplier is null" @kind object;
  #L3fded4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdeda.  v0:= new `io.reactivex.internal.operators.observable.ObservableToListSingle`;
  #L3fdede.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3fdee4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3fdeea.  v2:= temp @kind object;
  #L3fdeec.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdf00.  v0:= "keySelector is null" @kind object;
  #L3fdf04.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdf0a.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3fdf10.  v0:= temp @kind object;
  #L3fdf12.  call temp:= `toMapKeySelector`(v2) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeySelector:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L3fdf18.  v2:= temp @kind object;
  #L3fdf1a.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3fdf20.  v2:= temp @kind object;
  #L3fdf22.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdf34.  v0:= "keySelector is null" @kind object;
  #L3fdf38.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdf3e.  v0:= "valueSelector is null" @kind object;
  #L3fdf42.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdf48.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3fdf4e.  v0:= temp @kind object;
  #L3fdf50.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L3fdf56.  v2:= temp @kind object;
  #L3fdf58.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3fdf5e.  v2:= temp @kind object;
  #L3fdf60.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fdf74.  v0:= "keySelector is null" @kind object;
  #L3fdf78.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdf7e.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdf84.  v0:= "valueSelector is null" @kind object;
  #L3fdf88.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdf8e.  v0:= "mapSupplier is null" @kind object;
  #L3fdf92.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fdf98.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L3fdf9e.  v2:= temp @kind object;
  #L3fdfa0.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3fdfa6.  v2:= temp @kind object;
  #L3fdfa8.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fdfbc.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3fdfc2.  v0:= temp @kind object;
  #L3fdfc4.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3fdfca.  v1:= temp @kind object;
  #L3fdfcc.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L3fdfd2.  v2:= temp @kind object;
  #L3fdfd4.  call temp:= `toMultimap`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3fdfda.  v4:= temp @kind object;
  #L3fdfdc.  return v4 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fdff0.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3fdff6.  v0:= temp @kind object;
  #L3fdff8.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L3fdffe.  v1:= temp @kind object;
  #L3fe000.  call temp:= `toMultimap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3fe006.  v3:= temp @kind object;
  #L3fe008.  return v3 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe01c.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L3fe022.  v0:= temp @kind object;
  #L3fe024.  call temp:= `toMultimap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3fe02a.  v2:= temp @kind object;
  #L3fe02c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object, `io.reactivex.functions.Function` v5 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe040.  v0:= "keySelector is null" @kind object;
  #L3fe044.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe04a.  v0:= "valueSelector is null" @kind object;
  #L3fe04e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe054.  v0:= "mapSupplier is null" @kind object;
  #L3fe058.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe05e.  v0:= "collectionFactory is null" @kind object;
  #L3fe062.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe068.  call temp:= `toMultimapKeyValueSelector`(v2, v3, v5) @signature `Lio/reactivex/internal/functions/Functions;.toMultimapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L3fe06e.  v2:= temp @kind object;
  #L3fe070.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3fe076.  v2:= temp @kind object;
  #L3fe078.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toSortedList:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe08c.  call temp:= `naturalOrder`() @signature `Lio/reactivex/internal/functions/Functions;.naturalOrder:()Ljava/util/Comparator;` @kind static;
  #L3fe092.  v0:= temp @kind object;
  #L3fe094.  call temp:= `toSortedList`(v1, v0) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/Single;` @kind virtual;
  #L3fe09a.  v0:= temp @kind object;
  #L3fe09c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.toSortedList:(I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe0b0.  call temp:= `naturalOrder`() @signature `Lio/reactivex/internal/functions/Functions;.naturalOrder:()Ljava/util/Comparator;` @kind static;
  #L3fe0b6.  v0:= temp @kind object;
  #L3fe0b8.  call temp:= `toSortedList`(v1, v0, v2) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/Single;` @kind virtual;
  #L3fe0be.  v2:= temp @kind object;
  #L3fe0c0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe0d4.  v0:= "comparator is null" @kind object;
  #L3fe0d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe0de.  call temp:= `toList`(v1) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L3fe0e4.  v0:= temp @kind object;
  #L3fe0e6.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L3fe0ec.  v2:= temp @kind object;
  #L3fe0ee.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3fe0f4.  v2:= temp @kind object;
  #L3fe0f6.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe108.  v0:= "comparator is null" @kind object;
  #L3fe10c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe112.  call temp:= `toList`(v1, v3) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @kind virtual;
  #L3fe118.  v3:= temp @kind object;
  #L3fe11a.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L3fe120.  v2:= temp @kind object;
  #L3fe122.  call temp:= `map`(v3, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3fe128.  v2:= temp @kind object;
  #L3fe12a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `unsubscribeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcce0.  v0:= "scheduler is null" @kind object;
  #L3fcce4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fccea.  v0:= new `io.reactivex.internal.operators.observable.ObservableUnsubscribeOn`;
  #L3fccee.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableUnsubscribeOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3fccf4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fccfa.  v2:= temp @kind object;
  #L3fccfc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v6 @kind this, `long` v7 ) @signature `Lio/reactivex/Observable;.window:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fce90.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fce96.  v5:= temp;
  #L3fce98.  v0:= v6 @kind object;
  #L3fce9a.  v1:= v7 @kind wide;
  #L3fce9c.  v3:= v7 @kind wide;
  #L3fce9e.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @kind virtual;
  #L3fcea4.  v7:= temp @kind object;
  #L3fcea6.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lio/reactivex/Observable;.window:(JJ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fd034.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd03a.  v5:= temp;
  #L3fd03c.  v0:= v6 @kind object;
  #L3fd03e.  v1:= v7 @kind wide;
  #L3fd040.  v3:= v9 @kind wide;
  #L3fd042.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @kind virtual;
  #L3fd048.  v7:= temp @kind object;
  #L3fd04a.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `int` v13 ) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fd05c.  v0:= "count" @kind object;
  #L3fd060.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3fd066.  v0:= "skip" @kind object;
  #L3fd06a.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3fd070.  v0:= "bufferSize" @kind object;
  #L3fd074.  call temp:= `verifyPositive`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fd07a.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindow`;
  #L3fd07e.  v1:= v0 @kind object;
  #L3fd080.  v2:= v8 @kind object;
  #L3fd082.  v3:= v9 @kind wide;
  #L3fd084.  v5:= v11 @kind wide;
  #L3fd086.  v7:= v13;
  #L3fd088.  call `<init>`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableWindow;.<init>:(Lio/reactivex/ObservableSource;JJI)V` @kind direct;
  #L3fd08e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd094.  v9:= temp @kind object;
  #L3fd096.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fd0a8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fd0ae.  v6:= temp @kind object;
  #L3fd0b0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd0b6.  v7:= temp;
  #L3fd0b8.  v0:= v8 @kind object;
  #L3fd0ba.  v1:= v9 @kind wide;
  #L3fd0bc.  v3:= v11 @kind wide;
  #L3fd0be.  v5:= v13 @kind object;
  #L3fd0c0.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fd0c6.  v9:= temp @kind object;
  #L3fd0c8.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.Scheduler` v14 @kind object) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fd0dc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fd0e2.  v7:= temp;
  #L3fd0e4.  v0:= v8 @kind object;
  #L3fd0e6.  v1:= v9 @kind wide;
  #L3fd0e8.  v3:= v11 @kind wide;
  #L3fd0ea.  v5:= v13 @kind object;
  #L3fd0ec.  v6:= v14 @kind object;
  #L3fd0ee.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fd0f4.  v9:= temp @kind object;
  #L3fd0f6.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v13 @kind this, `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object, `io.reactivex.Scheduler` v19 @kind object, `int` v20 ) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3fd108.  v0:= "timespan" @kind object;
  #L3fd10c.  v3:= v14 @kind wide;
  #L3fd10e.  call temp:= `verifyPositive`(v14, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3fd114.  v0:= "timeskip" @kind object;
  #L3fd118.  v5:= v16 @kind wide;
  #L3fd11c.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3fd122.  v0:= "bufferSize" @kind object;
  #L3fd126.  v11:= v20;
  #L3fd12a.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fd130.  v0:= "scheduler is null" @kind object;
  #L3fd134.  v8:= v19 @kind object;
  #L3fd138.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd13e.  v0:= "unit is null" @kind object;
  #L3fd142.  v7:= v18 @kind object;
  #L3fd146.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd14c.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed`;
  #L3fd150.  v9:= 9223372036854775807L;
  #L3fd15a.  v12:= 0I;
  #L3fd15c.  v1:= v0 @kind object;
  #L3fd15e.  v2:= v13 @kind object;
  #L3fd160.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JIZ)V` @kind direct;
  #L3fd166.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd16c.  v0:= temp @kind object;
  #L3fd16e.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fceb8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fcebe.  v4:= temp @kind object;
  #L3fcec0.  v5:= 9223372036854775807L;
  #L3fceca.  v7:= 0I;
  #L3fcecc.  v0:= v8 @kind object;
  #L3fcece.  v1:= v9 @kind wide;
  #L3fced0.  v3:= v11 @kind object;
  #L3fced2.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3fced8.  v9:= temp @kind object;
  #L3fceda.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fcfdc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fcfe2.  v4:= temp @kind object;
  #L3fcfe4.  v7:= 0I;
  #L3fcfe6.  v0:= v8 @kind object;
  #L3fcfe8.  v1:= v9 @kind wide;
  #L3fcfea.  v3:= v11 @kind object;
  #L3fcfec.  v5:= v12 @kind wide;
  #L3fcfee.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3fcff4.  v9:= temp @kind object;
  #L3fcff6.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;JZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fd008.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3fd00e.  v4:= temp @kind object;
  #L3fd010.  v0:= v8 @kind object;
  #L3fd012.  v1:= v9 @kind wide;
  #L3fd014.  v3:= v11 @kind object;
  #L3fd016.  v5:= v12 @kind wide;
  #L3fd018.  v7:= v14;
  #L3fd01a.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3fd020.  v9:= temp @kind object;
  #L3fd022.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fceec.  v5:= 9223372036854775807L;
  #L3fcef6.  v7:= 0I;
  #L3fcef8.  v0:= v8 @kind object;
  #L3fcefa.  v1:= v9 @kind wide;
  #L3fcefc.  v3:= v11 @kind object;
  #L3fcefe.  v4:= v12 @kind object;
  #L3fcf00.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3fcf06.  v9:= temp @kind object;
  #L3fcf08.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `long` v13 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fcf1c.  v7:= 0I;
  #L3fcf1e.  v0:= v8 @kind object;
  #L3fcf20.  v1:= v9 @kind wide;
  #L3fcf22.  v3:= v11 @kind object;
  #L3fcf24.  v4:= v12 @kind object;
  #L3fcf26.  v5:= v13 @kind wide;
  #L3fcf28.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3fcf2e.  v9:= temp @kind object;
  #L3fcf30.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `long` v14 , `boolean` v16 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fcf44.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fcf4a.  v8:= temp;
  #L3fcf4c.  v0:= v9 @kind object;
  #L3fcf4e.  v1:= v10 @kind wide;
  #L3fcf50.  v3:= v12 @kind object;
  #L3fcf52.  v4:= v13 @kind object;
  #L3fcf54.  v5:= v14 @kind wide;
  #L3fcf56.  v7:= v16;
  #L3fcf5a.  call temp:= `window`(v0, v1, v3, v4, v5, v7, v8) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZI)Lio/reactivex/Observable;` @kind virtual;
  #L3fcf60.  v0:= temp @kind object;
  #L3fcf62.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v13 @kind this, `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.Scheduler` v17 @kind object, `long` v18 , `boolean` v20 , `int` v21 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3fcf74.  v0:= "bufferSize" @kind object;
  #L3fcf78.  v11:= v21;
  #L3fcf7c.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fcf82.  v0:= "scheduler is null" @kind object;
  #L3fcf86.  v8:= v17 @kind object;
  #L3fcf8a.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcf90.  v0:= "unit is null" @kind object;
  #L3fcf94.  v7:= v16 @kind object;
  #L3fcf98.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcf9e.  v0:= "count" @kind object;
  #L3fcfa2.  v9:= v18 @kind wide;
  #L3fcfa6.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3fcfac.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed`;
  #L3fcfb0.  v1:= v0 @kind object;
  #L3fcfb2.  v2:= v13 @kind object;
  #L3fcfb4.  v3:= v14 @kind wide;
  #L3fcfb6.  v5:= v14 @kind wide;
  #L3fcfb8.  v12:= v20;
  #L3fcfbc.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JIZ)V` @kind direct;
  #L3fcfc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fcfc8.  v0:= temp @kind object;
  #L3fcfca.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcd70.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fcd76.  v0:= temp;
  #L3fcd78.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fcd7e.  v2:= temp @kind object;
  #L3fcd80.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcd94.  v0:= "boundary is null" @kind object;
  #L3fcd98.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcd9e.  v0:= "bufferSize" @kind object;
  #L3fcda2.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fcda8.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundary`;
  #L3fcdac.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3fcdb2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fcdb8.  v2:= temp @kind object;
  #L3fcdba.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcdcc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fcdd2.  v0:= temp;
  #L3fcdd4.  call temp:= `window`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fcdda.  v2:= temp @kind object;
  #L3fcddc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcdf0.  v0:= "openingIndicator is null" @kind object;
  #L3fcdf4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fcdfa.  v0:= "closingIndicator is null" @kind object;
  #L3fcdfe.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fce04.  v0:= "bufferSize" @kind object;
  #L3fce08.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fce0e.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector`;
  #L3fce12.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)V` @kind direct;
  #L3fce18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fce1e.  v2:= temp @kind object;
  #L3fce20.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fce34.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3fce3a.  v0:= temp;
  #L3fce3c.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @kind virtual;
  #L3fce42.  v2:= temp @kind object;
  #L3fce44.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fce58.  v0:= "boundary is null" @kind object;
  #L3fce5c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fce62.  v0:= "bufferSize" @kind object;
  #L3fce66.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3fce6c.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier`;
  #L3fce70.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySupplier;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;I)V` @kind direct;
  #L3fce76.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fce7c.  v2:= temp @kind object;
  #L3fce7e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function5` v7 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fd180.  v0:= "o1 is null" @kind object;
  #L3fd184.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd18a.  v0:= "o2 is null" @kind object;
  #L3fd18e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd194.  v0:= "o3 is null" @kind object;
  #L3fd198.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd19e.  v0:= "o4 is null" @kind object;
  #L3fd1a2.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd1a8.  v0:= "combiner is null" @kind object;
  #L3fd1ac.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd1b2.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd1b8.  v7:= temp @kind object;
  #L3fd1ba.  v0:= 4I;
  #L3fd1bc.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3fd1c0.  v1:= 0I;
  #L3fd1c2.  v0[v1]:= v3 @kind object;
  #L3fd1c6.  v3:= 1I;
  #L3fd1c8.  v0[v3]:= v4 @kind object;
  #L3fd1cc.  v3:= 2I;
  #L3fd1ce.  v0[v3]:= v5 @kind object;
  #L3fd1d2.  v3:= 3I;
  #L3fd1d4.  v0[v3]:= v6 @kind object;
  #L3fd1d8.  call temp:= `withLatestFrom`(v2, v0, v7) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fd1de.  v3:= temp @kind object;
  #L3fd1e0.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function4` v6 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fd1f4.  v0:= "o1 is null" @kind object;
  #L3fd1f8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd1fe.  v0:= "o2 is null" @kind object;
  #L3fd202.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd208.  v0:= "o3 is null" @kind object;
  #L3fd20c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd212.  v0:= "combiner is null" @kind object;
  #L3fd216.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd21c.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd222.  v6:= temp @kind object;
  #L3fd224.  v0:= 3I;
  #L3fd226.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3fd22a.  v1:= 0I;
  #L3fd22c.  v0[v1]:= v3 @kind object;
  #L3fd230.  v3:= 1I;
  #L3fd232.  v0[v3]:= v4 @kind object;
  #L3fd236.  v3:= 2I;
  #L3fd238.  v0[v3]:= v5 @kind object;
  #L3fd23c.  call temp:= `withLatestFrom`(v2, v0, v6) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fd242.  v3:= temp @kind object;
  #L3fd244.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.Function3` v5 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fd258.  v0:= "o1 is null" @kind object;
  #L3fd25c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd262.  v0:= "o2 is null" @kind object;
  #L3fd266.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd26c.  v0:= "combiner is null" @kind object;
  #L3fd270.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd276.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L3fd27c.  v5:= temp @kind object;
  #L3fd27e.  v0:= 2I;
  #L3fd280.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3fd284.  v1:= 0I;
  #L3fd286.  v0[v1]:= v3 @kind object;
  #L3fd28a.  v3:= 1I;
  #L3fd28c.  v0[v3]:= v4 @kind object;
  #L3fd290.  call temp:= `withLatestFrom`(v2, v0, v5) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3fd296.  v3:= temp @kind object;
  #L3fd298.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fd2ac.  v0:= "other is null" @kind object;
  #L3fd2b0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd2b6.  v0:= "combiner is null" @kind object;
  #L3fd2ba.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd2c0.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFrom`;
  #L3fd2c4.  call `<init>`(v0, v1, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3fd2ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd2d0.  v2:= temp @kind object;
  #L3fd2d2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fd31c.  v0:= "others is null" @kind object;
  #L3fd320.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd326.  v0:= "combiner is null" @kind object;
  #L3fd32a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd330.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany`;
  #L3fd334.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fd33a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd340.  v2:= temp @kind object;
  #L3fd342.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource`[] v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fd2e4.  v0:= "others is null" @kind object;
  #L3fd2e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd2ee.  v0:= "combiner is null" @kind object;
  #L3fd2f2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd2f8.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany`;
  #L3fd2fc.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;[Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fd302.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fd308.  v2:= temp @kind object;
  #L3fd30a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fd9b4.  v0:= "other is null" @kind object;
  #L3fd9b8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fd9be.  call temp:= `zip`(v1, v2, v3) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @kind static;
  #L3fd9c4.  v2:= temp @kind object;
  #L3fd9c6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fd9d8.  call temp:= `zip`(v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @kind static;
  #L3fd9de.  v1:= temp @kind object;
  #L3fd9e0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fd9f4.  call temp:= `zip`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @kind static;
  #L3fd9fa.  v1:= temp @kind object;
  #L3fd9fc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.zipWith:(Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fda10.  v0:= "other is null" @kind object;
  #L3fda14.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fda1a.  v0:= "zipper is null" @kind object;
  #L3fda1e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fda24.  v0:= new `io.reactivex.internal.operators.observable.ObservableZipIterable`;
  #L3fda28.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable;.<init>:(Lio/reactivex/Observable;Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3fda2e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3fda34.  v2:= temp @kind object;
  #L3fda36.  return v2 @kind object;
}
