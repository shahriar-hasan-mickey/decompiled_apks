record `io.reactivex.Scheduler$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `java.lang.Runnable` `io.reactivex.Scheduler$b.a` @AccessFlag FINAL;
  `io.reactivex.Scheduler$Worker` `io.reactivex.Scheduler$b.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.Scheduler$b.c` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.Scheduler$b` v0 @kind this, `java.lang.Runnable` v1 @kind object, `io.reactivex.Scheduler$Worker` v2 @kind object) @signature `Lio/reactivex/Scheduler$b;.<init>:(Ljava/lang/Runnable;Lio/reactivex/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fe974.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fe97a.  v0.`io.reactivex.Scheduler$b.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L3fe97e.  v0.`io.reactivex.Scheduler$b.b` @type ^`io.reactivex.Scheduler$Worker` := v2 @kind object;
  #L3fe982.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.Scheduler$b` v1 @kind this) @signature `Lio/reactivex/Scheduler$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe994.  v0:= 1I;
  #L3fe996.  v1.`io.reactivex.Scheduler$b.c` @type ^`boolean` := v0 @kind boolean;
  #L3fe99a.  v0:= v1.`io.reactivex.Scheduler$b.b` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L3fe99e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3fe9a4.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.Scheduler$b` v1 @kind this) @signature `Lio/reactivex/Scheduler$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe95c.  v0:= v1.`io.reactivex.Scheduler$b.c` @type ^`boolean` @kind boolean;
  #L3fe960.  return v0;
}
procedure `void` `run`(`io.reactivex.Scheduler$b` v2 @kind this) @signature `Lio/reactivex/Scheduler$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe9b8.  v0:= v2.`io.reactivex.Scheduler$b.c` @type ^`boolean` @kind boolean;
  #L3fe9bc.  if v0 != 0 then goto L3fe9e8;
  #L3fe9c0.  v0:= v2.`io.reactivex.Scheduler$b.a` @type ^`java.lang.Runnable` @kind object;
  #L3fe9c4.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3fe9ca.  goto L3fe9e8;
  #L3fe9cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe9ce.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3fe9d4.  v1:= v2.`io.reactivex.Scheduler$b.b` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L3fe9d8.  call `dispose`(v1) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3fe9de.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3fe9e4.  v0:= temp @kind object;
  #L3fe9e6.  throw v0;
  #L3fe9e8.  return @kind void;
  catch `java.lang.Throwable` @[L3fe9c0..L3fe9ca] goto L3fe9cc;
}
