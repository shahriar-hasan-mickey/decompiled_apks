record `io.objectbox.b` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `io.objectbox.BoxStore` `io.objectbox.b.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.util.concurrent.Callable` `io.objectbox.b.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `io.objectbox.TxCallback` `io.objectbox.b.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.objectbox.b` v0 @kind this, `io.objectbox.BoxStore` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `io.objectbox.TxCallback` v3 @kind object) @signature `Lio/objectbox/b;.<init>:(Lio/objectbox/BoxStore;Ljava/util/concurrent/Callable;Lio/objectbox/TxCallback;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3dd284.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dd28a.  v0.`io.objectbox.b.a` @type ^`io.objectbox.BoxStore` := v1 @kind object;
  #L3dd28e.  v0.`io.objectbox.b.b` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L3dd292.  v0.`io.objectbox.b.c` @type ^`io.objectbox.TxCallback` := v3 @kind object;
  #L3dd296.  return @kind void;
}
procedure `void` `run`(`io.objectbox.b` v3 @kind this) @signature `Lio/objectbox/b;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dd2a8.  v0:= v3.`io.objectbox.b.a` @type ^`io.objectbox.BoxStore` @kind object;
  #L3dd2ac.  v1:= v3.`io.objectbox.b.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L3dd2b0.  v2:= v3.`io.objectbox.b.c` @type ^`io.objectbox.TxCallback` @kind object;
  #L3dd2b4.  call `c`(v0, v1, v2) @signature `Lio/objectbox/BoxStore;.c:(Lio/objectbox/BoxStore;Ljava/util/concurrent/Callable;Lio/objectbox/TxCallback;)V` @kind static;
  #L3dd2ba.  return @kind void;
}
