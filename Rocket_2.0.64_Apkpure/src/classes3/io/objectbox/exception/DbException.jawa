record `io.objectbox.exception.DbException` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
  `int` `io.objectbox.exception.DbException.errorCode` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.objectbox.exception.DbException` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e2e74.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e2e7a.  v1:= 0I;
  #L3e2e7c.  v0.`io.objectbox.exception.DbException.errorCode` @type ^`int` := v1;
  #L3e2e80.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.exception.DbException` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e2e94.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e2e9a.  v0.`io.objectbox.exception.DbException.errorCode` @type ^`int` := v2;
  #L3e2e9e.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.exception.DbException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e2eb0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3e2eb6.  v1:= 0I;
  #L3e2eb8.  v0.`io.objectbox.exception.DbException.errorCode` @type ^`int` := v1;
  #L3e2ebc.  return @kind void;
}
procedure `int` `getErrorCode`(`io.objectbox.exception.DbException` v1 @kind this) @signature `Lio/objectbox/exception/DbException;.getErrorCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2df8.  v0:= v1.`io.objectbox.exception.DbException.errorCode` @type ^`int`;
  #L3e2dfc.  return v0;
}
procedure `java.lang.String` `toString`(`io.objectbox.exception.DbException` v2 @kind this) @signature `Lio/objectbox/exception/DbException;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2e10.  v0:= v2.`io.objectbox.exception.DbException.errorCode` @type ^`int`;
  #L3e2e14.  if v0 != 0 then goto L3e2e22;
  #L3e2e18.  call temp:= `toString`(v2) @signature `Ljava/lang/RuntimeException;.toString:()Ljava/lang/String;` @kind super;
  #L3e2e1e.  v0:= temp @kind object;
  #L3e2e20.  goto L3e2e60;
  #L3e2e22.  v0:= new `java.lang.StringBuilder`;
  #L3e2e26.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2e2c.  call temp:= `toString`(v2) @signature `Ljava/lang/RuntimeException;.toString:()Ljava/lang/String;` @kind super;
  #L3e2e32.  v1:= temp @kind object;
  #L3e2e34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2e3a.  v1:= " (error code " @kind object;
  #L3e2e3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2e44.  v1:= v2.`io.objectbox.exception.DbException.errorCode` @type ^`int`;
  #L3e2e48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2e4e.  v1:= ")" @kind object;
  #L3e2e52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2e58.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2e5e.  v0:= temp @kind object;
  #L3e2e60.  return v0 @kind object;
}
