record `io.objectbox.exception.DbDetachedException` @kind class @AccessFlag PUBLIC extends `io.objectbox.exception.DbException` @kind class {
}
procedure `void` `<init>`(`io.objectbox.exception.DbDetachedException` v1 @kind this) @signature `Lio/objectbox/exception/DbDetachedException;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e2dac.  v0:= "Cannot perform this action on a detached entity. Ensure it was loaded by ObjectBox, or attach it manually." @kind object;
  #L3e2db0.  call `<init>`(v1, v0) @signature `Lio/objectbox/exception/DbDetachedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e2db6.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.exception.DbDetachedException` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/objectbox/exception/DbDetachedException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e2dc8.  call `<init>`(v0, v1) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e2dce.  return @kind void;
}
