record `io.objectbox.query.LazyList` @kind class @AccessFlag PUBLIC extends `java.util.List` @kind interface {
  `io.objectbox.Box` `io.objectbox.query.LazyList.a` @AccessFlag PRIVATE_FINAL;
  `long`[] `io.objectbox.query.LazyList.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `io.objectbox.query.LazyList.c` @AccessFlag PRIVATE_FINAL;
  `int` `io.objectbox.query.LazyList.d` @AccessFlag FINAL;
  `int` `io.objectbox.query.LazyList.e` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`io.objectbox.query.LazyList` v0 @kind this, `io.objectbox.Box` v1 @kind object, `long`[] v2 @kind object, `boolean` v3 ) @signature `Lio/objectbox/query/LazyList;.<init>:(Lio/objectbox/Box;[JZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e6668.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e666e.  if v1 == 0 then goto L3e66b8;
  #L3e6672.  if v2 == 0 then goto L3e66b8;
  #L3e6676.  v0.`io.objectbox.query.LazyList.a` @type ^`io.objectbox.Box` := v1 @kind object;
  #L3e667a.  v0.`io.objectbox.query.LazyList.b` @type ^`long`[] := v2 @kind object;
  #L3e667e.  v1:= length @variable v2;
  #L3e6680.  v0.`io.objectbox.query.LazyList.d` @type ^`int` := v1;
  #L3e6684.  v2:= 0I;
  #L3e6686.  if v3 == 0 then goto L3e66b2;
  #L3e668a.  v3:= new `java.util.ArrayList`;
  #L3e668e.  call `<init>`(v3, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3e6694.  v0.`io.objectbox.query.LazyList.c` @type ^`java.util.List` := v3 @kind object;
  #L3e6698.  v1:= 0I;
  #L3e669a.  v3:= v0.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e669e.  if v1 >= v3 then goto L3e66b6;
  #L3e66a2.  v3:= v0.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e66a6.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e66ac.  v1:= v1 + 1;
  #L3e66b0.  goto L3e669a;
  #L3e66b2.  v0.`io.objectbox.query.LazyList.c` @type ^`java.util.List` := v2 @kind object;
  #L3e66b6.  return @kind void;
  #L3e66b8.  v1:= new `java.lang.NullPointerException`;
  #L3e66bc.  v2:= "Illegal null parameters passed" @kind object;
  #L3e66c0.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e66c6.  throw v1;
}
procedure `void` `a`(`io.objectbox.query.LazyList` v0 @kind object) @signature `Lio/objectbox/query/LazyList;.a:(Lio/objectbox/query/LazyList;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e6650.  call `b`(v0) @signature `Lio/objectbox/query/LazyList;.b:()V` @kind direct;
  #L3e6656.  return @kind void;
}
procedure `void` `b`(`io.objectbox.query.LazyList` v2 @kind this) @signature `Lio/objectbox/query/LazyList;.b:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3e673c.  v0:= 0I;
  #L3e673e.  v1:= v2.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e6742.  if v0 >= v1 then goto L3e6752;
  #L3e6746.  call temp:= `get`(v2, v0) @signature `Lio/objectbox/query/LazyList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3e674c.  v0:= v0 + 1;
  #L3e6750.  goto L3e673e;
  #L3e6752.  return @kind void;
}
procedure `void` `add`(`io.objectbox.query.LazyList` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/query/LazyList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3e66d8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e66dc.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e66e2.  throw v1;
}
procedure `boolean` `add`(`io.objectbox.query.LazyList` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/objectbox/query/LazyList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e6284.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e6288.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e628e.  throw v1;
}
procedure `boolean` `addAll`(`io.objectbox.query.LazyList` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lio/objectbox/query/LazyList;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e62a0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e62a4.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e62aa.  throw v1;
}
procedure `boolean` `addAll`(`io.objectbox.query.LazyList` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lio/objectbox/query/LazyList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e62bc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e62c0.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e62c6.  throw v1;
}
procedure `void` `checkCached`(`io.objectbox.query.LazyList` v2 @kind this) @signature `Lio/objectbox/query/LazyList;.checkCached:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3e66f4.  v0:= v2.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e66f8.  if v0 == 0 then goto L3e66fe;
  #L3e66fc.  return @kind void;
  #L3e66fe.  v0:= new `io.objectbox.exception.DbException`;
  #L3e6702.  v1:= "This operation only works with cached lazy lists" @kind object;
  #L3e6706.  call `<init>`(v0, v1) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e670c.  throw v0;
}
procedure `void` `clear`(`io.objectbox.query.LazyList` v1 @kind this) @signature `Lio/objectbox/query/LazyList;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6720.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3e6724.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e672a.  throw v0;
}
procedure `boolean` `contains`(`io.objectbox.query.LazyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/query/LazyList;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e62d8.  call `loadRemaining`(v1) @signature `Lio/objectbox/query/LazyList;.loadRemaining:()V` @kind virtual;
  #L3e62de.  v0:= v1.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e62e2.  call temp:= `contains`(v0, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e62e8.  v2:= temp;
  #L3e62ea.  return v2;
}
procedure `boolean` `containsAll`(`io.objectbox.query.LazyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/objectbox/query/LazyList;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e62fc.  call `loadRemaining`(v1) @signature `Lio/objectbox/query/LazyList;.loadRemaining:()V` @kind virtual;
  #L3e6302.  v0:= v1.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e6306.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/List;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3e630c.  v2:= temp;
  #L3e630e.  return v2;
}
procedure `java.lang.Object` `get`(`io.objectbox.query.LazyList` v4 @kind this, `int` v5 ) @signature `Lio/objectbox/query/LazyList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6430.  if v5 < 0 then goto L3e64bc;
  #L3e6434.  v0:= v4.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e6438.  if v5 > v0 then goto L3e64bc;
  #L3e643c.  v0:= v4.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e6440.  if v0 == 0 then goto L3e649c;
  #L3e6444.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e644a.  v0:= temp @kind object;
  #L3e644c.  if v0 != 0 then goto L3e649a;
  #L3e6450.  v0:= v4.`io.objectbox.query.LazyList.a` @type ^`io.objectbox.Box` @kind object;
  #L3e6454.  v1:= v4.`io.objectbox.query.LazyList.b` @type ^`long`[] @kind object;
  #L3e6458.  v2:= v1[v5] @kind wide;
  #L3e645c.  call temp:= `get`(v0, v2) @signature `Lio/objectbox/Box;.get:(J)Ljava/lang/Object;` @kind virtual;
  #L3e6462.  v0:= temp @kind object;
  #L3e6464.  @monitorenter v4
  #L3e6466.  v1:= v4.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e646a.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e6470.  v1:= temp @kind object;
  #L3e6472.  if v1 != 0 then goto L3e648e;
  #L3e6476.  v1:= v4.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e647a.  call temp:= `set`(v1, v5, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e6480.  v5:= v4.`io.objectbox.query.LazyList.e` @type ^`int`;
  #L3e6484.  v5:= v5 + 1;
  #L3e6488.  v4.`io.objectbox.query.LazyList.e` @type ^`int` := v5;
  #L3e648c.  goto L3e6490;
  #L3e648e.  v0:= v1 @kind object;
  #L3e6490.  @monitorexit v4
  #L3e6492.  goto L3e649a;
  #L3e6494.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e6496.  @monitorexit v4
  #L3e6498.  throw v5;
  #L3e649a.  return v0 @kind object;
  #L3e649c.  @monitorenter v4
  #L3e649e.  v0:= v4.`io.objectbox.query.LazyList.a` @type ^`io.objectbox.Box` @kind object;
  #L3e64a2.  v1:= v4.`io.objectbox.query.LazyList.b` @type ^`long`[] @kind object;
  #L3e64a6.  v2:= v1[v5] @kind wide;
  #L3e64aa.  call temp:= `get`(v0, v2) @signature `Lio/objectbox/Box;.get:(J)Ljava/lang/Object;` @kind virtual;
  #L3e64b0.  v5:= temp @kind object;
  #L3e64b2.  @monitorexit v4
  #L3e64b4.  return v5 @kind object;
  #L3e64b6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e64b8.  @monitorexit v4
  #L3e64ba.  throw v5;
  #L3e64bc.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3e64c0.  v1:= new `java.lang.StringBuilder`;
  #L3e64c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e64ca.  v2:= "Illegal cursor location " @kind object;
  #L3e64ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e64d4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e64da.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e64e0.  v5:= temp @kind object;
  #L3e64e2.  call `<init>`(v0, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e64e8.  throw v0;
  catch `java.lang.Throwable` @[L3e6466..L3e6498] goto L3e6494;
  catch `java.lang.Throwable` @[L3e649e..L3e64ba] goto L3e64b6;
}
procedure `int` `getLoadedCount`(`io.objectbox.query.LazyList` v1 @kind this) @signature `Lio/objectbox/query/LazyList;.getLoadedCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e63b8.  v0:= v1.`io.objectbox.query.LazyList.e` @type ^`int`;
  #L3e63bc.  return v0;
}
procedure `int` `indexOf`(`io.objectbox.query.LazyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/query/LazyList;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e63d0.  call `loadRemaining`(v1) @signature `Lio/objectbox/query/LazyList;.loadRemaining:()V` @kind virtual;
  #L3e63d6.  v0:= v1.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e63da.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L3e63e0.  v2:= temp;
  #L3e63e2.  return v2;
}
procedure `boolean` `isEmpty`(`io.objectbox.query.LazyList` v1 @kind this) @signature `Lio/objectbox/query/LazyList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6320.  v0:= v1.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e6324.  if v0 != 0 then goto L3e632c;
  #L3e6328.  v0:= 1I;
  #L3e632a.  goto L3e632e;
  #L3e632c.  v0:= 0I;
  #L3e632e.  return v0;
}
procedure `boolean` `isLoadedCompletely`(`io.objectbox.query.LazyList` v2 @kind this) @signature `Lio/objectbox/query/LazyList;.isLoadedCompletely:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6340.  v0:= v2.`io.objectbox.query.LazyList.e` @type ^`int`;
  #L3e6344.  v1:= v2.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e6348.  if v0 != v1 then goto L3e6350;
  #L3e634c.  v0:= 1I;
  #L3e634e.  goto L3e6352;
  #L3e6350.  v0:= 0I;
  #L3e6352.  return v0;
}
procedure `java.util.Iterator` `iterator`(`io.objectbox.query.LazyList` v2 @kind this) @signature `Lio/objectbox/query/LazyList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e65bc.  v0:= new `io.objectbox.query.LazyList$LazyIterator`;
  #L3e65c0.  v1:= 0I;
  #L3e65c2.  call `<init>`(v0, v2, v1) @signature `Lio/objectbox/query/LazyList$LazyIterator;.<init>:(Lio/objectbox/query/LazyList;I)V` @kind direct;
  #L3e65c8.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`io.objectbox.query.LazyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/query/LazyList;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e63f4.  call `loadRemaining`(v1) @signature `Lio/objectbox/query/LazyList;.loadRemaining:()V` @kind virtual;
  #L3e63fa.  v0:= v1.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e63fe.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/List;.lastIndexOf:(Ljava/lang/Object;)I` @kind interface;
  #L3e6404.  v2:= temp;
  #L3e6406.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`io.objectbox.query.LazyList` v2 @kind this) @signature `Lio/objectbox/query/LazyList;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6614.  v0:= new `io.objectbox.query.LazyList$LazyIterator`;
  #L3e6618.  v1:= 0I;
  #L3e661a.  call `<init>`(v0, v2, v1) @signature `Lio/objectbox/query/LazyList$LazyIterator;.<init>:(Lio/objectbox/query/LazyList;I)V` @kind direct;
  #L3e6620.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`io.objectbox.query.LazyList` v1 @kind this, `int` v2 ) @signature `Lio/objectbox/query/LazyList;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6634.  v0:= new `io.objectbox.query.LazyList$LazyIterator`;
  #L3e6638.  call `<init>`(v0, v1, v2) @signature `Lio/objectbox/query/LazyList$LazyIterator;.<init>:(Lio/objectbox/query/LazyList;I)V` @kind direct;
  #L3e663e.  return v0 @kind object;
}
procedure `void` `loadRemaining`(`io.objectbox.query.LazyList` v2 @kind this) @signature `Lio/objectbox/query/LazyList;.loadRemaining:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6764.  v0:= v2.`io.objectbox.query.LazyList.e` @type ^`int`;
  #L3e6768.  v1:= v2.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e676c.  if v0 == v1 then goto L3e6792;
  #L3e6770.  call `checkCached`(v2) @signature `Lio/objectbox/query/LazyList;.checkCached:()V` @kind virtual;
  #L3e6776.  v0:= v2.`io.objectbox.query.LazyList.a` @type ^`io.objectbox.Box` @kind object;
  #L3e677a.  call temp:= `getStore`(v0) @signature `Lio/objectbox/Box;.getStore:()Lio/objectbox/BoxStore;` @kind virtual;
  #L3e6780.  v0:= temp @kind object;
  #L3e6782.  v1:= new `io.objectbox.query.b`;
  #L3e6786.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/b;.<init>:(Lio/objectbox/query/LazyList;)V` @kind direct;
  #L3e678c.  call `runInReadTx`(v0, v1) @signature `Lio/objectbox/BoxStore;.runInReadTx:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3e6792.  return @kind void;
}
procedure `java.lang.Object` `peek`(`io.objectbox.query.LazyList` v1 @kind this, `int` v2 ) @signature `Lio/objectbox/query/LazyList;.peek:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6514.  v0:= v1.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e6518.  if v0 == 0 then goto L3e6526;
  #L3e651c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e6522.  v2:= temp @kind object;
  #L3e6524.  return v2 @kind object;
  #L3e6526.  v2:= 0I;
  #L3e6528.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`io.objectbox.query.LazyList` v0 @kind this, `int` v1 ) @signature `Lio/objectbox/query/LazyList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3e653c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e6540.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e6546.  throw v1;
}
procedure `boolean` `remove`(`io.objectbox.query.LazyList` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/objectbox/query/LazyList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e6364.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e6368.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e636e.  throw v1;
}
procedure `boolean` `removeAll`(`io.objectbox.query.LazyList` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lio/objectbox/query/LazyList;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e6380.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e6384.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e638a.  throw v1;
}
procedure `boolean` `retainAll`(`io.objectbox.query.LazyList` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lio/objectbox/query/LazyList;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e639c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e63a0.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e63a6.  throw v1;
}
procedure `java.lang.Object` `set`(`io.objectbox.query.LazyList` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/query/LazyList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3e6558.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e655c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e6562.  throw v1;
}
procedure `int` `size`(`io.objectbox.query.LazyList` v1 @kind this) @signature `Lio/objectbox/query/LazyList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6418.  v0:= v1.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e641c.  return v0;
}
procedure `java.util.List` `subList`(`io.objectbox.query.LazyList` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/objectbox/query/LazyList;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e65dc.  call `checkCached`(v1) @signature `Lio/objectbox/query/LazyList;.checkCached:()V` @kind virtual;
  #L3e65e2.  v0:= v2;
  #L3e65e4.  if v0 >= v3 then goto L3e65f4;
  #L3e65e8.  call temp:= `get`(v1, v0) @signature `Lio/objectbox/query/LazyList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3e65ee.  v0:= v0 + 1;
  #L3e65f2.  goto L3e65e4;
  #L3e65f4.  v0:= v1.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e65f8.  call temp:= `subList`(v0, v2, v3) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L3e65fe.  v2:= temp @kind object;
  #L3e6600.  return v2 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.objectbox.query.LazyList` v1 @kind this) @signature `Lio/objectbox/query/LazyList;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6574.  call `loadRemaining`(v1) @signature `Lio/objectbox/query/LazyList;.loadRemaining:()V` @kind virtual;
  #L3e657a.  v0:= v1.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e657e.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3e6584.  v0:= temp @kind object;
  #L3e6586.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.objectbox.query.LazyList` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lio/objectbox/query/LazyList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6598.  call `loadRemaining`(v1) @signature `Lio/objectbox/query/LazyList;.loadRemaining:()V` @kind virtual;
  #L3e659e.  v0:= v1.`io.objectbox.query.LazyList.c` @type ^`java.util.List` @kind object;
  #L3e65a2.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3e65a8.  v2:= temp @kind object;
  #L3e65aa.  return v2 @kind object;
}
