record `io.objectbox.query.LazyList$LazyIterator` @kind class @AccessFlag PUBLIC extends `java.util.ListIterator` @kind interface {
  `int` `io.objectbox.query.LazyList$LazyIterator.a` @AccessFlag PRIVATE;
  `io.objectbox.query.LazyList` `io.objectbox.query.LazyList$LazyIterator.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.objectbox.query.LazyList$LazyIterator` v0 @kind this, `io.objectbox.query.LazyList` v1 @kind object, `int` v2 ) @signature `Lio/objectbox/query/LazyList$LazyIterator;.<init>:(Lio/objectbox/query/LazyList;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e6210.  v0.`io.objectbox.query.LazyList$LazyIterator.b` @type ^`io.objectbox.query.LazyList` := v1 @kind object;
  #L3e6214.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e621a.  v0.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int` := v2;
  #L3e621e.  return @kind void;
}
procedure `void` `add`(`io.objectbox.query.LazyList$LazyIterator` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/objectbox/query/LazyList$LazyIterator;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3e6230.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e6234.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e623a.  throw v1;
}
procedure `boolean` `hasNext`(`io.objectbox.query.LazyList$LazyIterator` v2 @kind this) @signature `Lio/objectbox/query/LazyList$LazyIterator;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6114.  v0:= v2.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int`;
  #L3e6118.  v1:= v2.`io.objectbox.query.LazyList$LazyIterator.b` @type ^`io.objectbox.query.LazyList` @kind object;
  #L3e611c.  v1:= v1.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e6120.  if v0 >= v1 then goto L3e6128;
  #L3e6124.  v0:= 1I;
  #L3e6126.  goto L3e612a;
  #L3e6128.  v0:= 0I;
  #L3e612a.  return v0;
}
procedure `boolean` `hasPrevious`(`io.objectbox.query.LazyList$LazyIterator` v1 @kind this) @signature `Lio/objectbox/query/LazyList$LazyIterator;.hasPrevious:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e613c.  v0:= v1.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int`;
  #L3e6140.  if v0 <= 0 then goto L3e6148;
  #L3e6144.  v0:= 1I;
  #L3e6146.  goto L3e614a;
  #L3e6148.  v0:= 0I;
  #L3e614a.  return v0;
}
procedure `java.lang.Object` `next`(`io.objectbox.query.LazyList$LazyIterator` v3 @kind this) @signature `Lio/objectbox/query/LazyList$LazyIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e6190.  v0:= v3.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int`;
  #L3e6194.  v1:= v3.`io.objectbox.query.LazyList$LazyIterator.b` @type ^`io.objectbox.query.LazyList` @kind object;
  #L3e6198.  v2:= v1.`io.objectbox.query.LazyList.d` @type ^`int`;
  #L3e619c.  if v0 >= v2 then goto L3e61b6;
  #L3e61a0.  call temp:= `get`(v1, v0) @signature `Lio/objectbox/query/LazyList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3e61a6.  v0:= temp @kind object;
  #L3e61a8.  v1:= v3.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int`;
  #L3e61ac.  v1:= v1 + 1;
  #L3e61b0.  v3.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int` := v1;
  #L3e61b4.  return v0 @kind object;
  #L3e61b6.  v0:= new `java.util.NoSuchElementException`;
  #L3e61ba.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3e61c0.  throw v0;
}
procedure `int` `nextIndex`(`io.objectbox.query.LazyList$LazyIterator` v1 @kind this) @signature `Lio/objectbox/query/LazyList$LazyIterator;.nextIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e615c.  v0:= v1.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int`;
  #L3e6160.  return v0;
}
procedure `java.lang.Object` `previous`(`io.objectbox.query.LazyList$LazyIterator` v2 @kind this) @signature `Lio/objectbox/query/LazyList$LazyIterator;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e61d4.  v0:= v2.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int`;
  #L3e61d8.  if v0 <= 0 then goto L3e61f2;
  #L3e61dc.  v0:= v0 + -1;
  #L3e61e0.  v2.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int` := v0;
  #L3e61e4.  v1:= v2.`io.objectbox.query.LazyList$LazyIterator.b` @type ^`io.objectbox.query.LazyList` @kind object;
  #L3e61e8.  call temp:= `get`(v1, v0) @signature `Lio/objectbox/query/LazyList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3e61ee.  v0:= temp @kind object;
  #L3e61f0.  return v0 @kind object;
  #L3e61f2.  v0:= new `java.util.NoSuchElementException`;
  #L3e61f6.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3e61fc.  throw v0;
}
procedure `int` `previousIndex`(`io.objectbox.query.LazyList$LazyIterator` v1 @kind this) @signature `Lio/objectbox/query/LazyList$LazyIterator;.previousIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6174.  v0:= v1.`io.objectbox.query.LazyList$LazyIterator.a` @type ^`int`;
  #L3e6178.  v0:= v0 + -1;
  #L3e617c.  return v0;
}
procedure `void` `remove`(`io.objectbox.query.LazyList$LazyIterator` v1 @kind this) @signature `Lio/objectbox/query/LazyList$LazyIterator;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e624c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3e6250.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e6256.  throw v0;
}
procedure `void` `set`(`io.objectbox.query.LazyList$LazyIterator` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/objectbox/query/LazyList$LazyIterator;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3e6268.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e626c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3e6272.  throw v1;
}
