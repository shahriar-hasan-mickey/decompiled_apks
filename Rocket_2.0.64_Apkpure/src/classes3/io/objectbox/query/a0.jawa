record `io.objectbox.query.a0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `io.objectbox.query.Query` `io.objectbox.query.a0.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.objectbox.query.a0` v0 @kind this, `io.objectbox.query.Query` v1 @kind object) @signature `Lio/objectbox/query/a0;.<init>:(Lio/objectbox/query/Query;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3e7b58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e7b5e.  v0.`io.objectbox.query.a0.a` @type ^`io.objectbox.query.Query` := v1 @kind object;
  #L3e7b62.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.objectbox.query.a0` v1 @kind this) @signature `Lio/objectbox/query/a0;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e7b38.  v0:= v1.`io.objectbox.query.a0.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7b3c.  call temp:= `d`(v0) @signature `Lio/objectbox/query/Query;.d:(Lio/objectbox/query/Query;)Ljava/lang/Object;` @kind static;
  #L3e7b42.  v0:= temp @kind object;
  #L3e7b44.  return v0 @kind object;
}
