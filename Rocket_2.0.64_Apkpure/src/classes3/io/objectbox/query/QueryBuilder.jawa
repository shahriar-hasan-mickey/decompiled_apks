record `io.objectbox.query.QueryBuilder` @kind class @AccessFlag PUBLIC extends `java.io.Closeable` @kind interface {
  `io.objectbox.Box` `io.objectbox.query.QueryBuilder.a` @AccessFlag PRIVATE_FINAL;
  `long` `io.objectbox.query.QueryBuilder.b` @AccessFlag PRIVATE_FINAL;
  `long` `io.objectbox.query.QueryBuilder.c` @AccessFlag PRIVATE;
  `long` `io.objectbox.query.QueryBuilder.d` @AccessFlag PRIVATE;
  `long` `io.objectbox.query.QueryBuilder.e` @AccessFlag PRIVATE;
  `io.objectbox.query.QueryBuilder$a` `io.objectbox.query.QueryBuilder.f` @AccessFlag PRIVATE;
  `java.util.List` `io.objectbox.query.QueryBuilder.g` @AccessFlag PRIVATE;
  `io.objectbox.query.QueryFilter` `io.objectbox.query.QueryBuilder.h` @AccessFlag PRIVATE;
  `java.util.Comparator` `io.objectbox.query.QueryBuilder.i` @AccessFlag PRIVATE;
  `boolean` `io.objectbox.query.QueryBuilder.j` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@io.objectbox.query.QueryBuilder.CASE_SENSITIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@io.objectbox.query.QueryBuilder.DESCENDING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@io.objectbox.query.QueryBuilder.NULLS_LAST` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@io.objectbox.query.QueryBuilder.NULLS_ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@io.objectbox.query.QueryBuilder.UNSIGNED` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`io.objectbox.query.QueryBuilder` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.<init>:(JJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3e8cb4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8cba.  v0:= `@@io.objectbox.query.QueryBuilder$a.a` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8cbe.  v1.`io.objectbox.query.QueryBuilder.f` @type ^`io.objectbox.query.QueryBuilder$a` := v0 @kind object;
  #L3e8cc2.  v0:= 0I;
  #L3e8cc4.  v1.`io.objectbox.query.QueryBuilder.a` @type ^`io.objectbox.Box` := v0 @kind object;
  #L3e8cc8.  v1.`io.objectbox.query.QueryBuilder.b` @type ^`long` := v2 @kind wide;
  #L3e8ccc.  v1.`io.objectbox.query.QueryBuilder.c` @type ^`long` := v4 @kind wide;
  #L3e8cd0.  v2:= 1I;
  #L3e8cd2.  v1.`io.objectbox.query.QueryBuilder.j` @type ^`boolean` := v2 @kind boolean;
  #L3e8cd6.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.query.QueryBuilder` v1 @kind this, `io.objectbox.Box` v2 @kind object, `long` v3 , `java.lang.String` v5 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.<init>:(Lio/objectbox/Box;JLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e8c5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8c62.  v0:= `@@io.objectbox.query.QueryBuilder$a.a` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8c66.  v1.`io.objectbox.query.QueryBuilder.f` @type ^`io.objectbox.query.QueryBuilder$a` := v0 @kind object;
  #L3e8c6a.  v1.`io.objectbox.query.QueryBuilder.a` @type ^`io.objectbox.Box` := v2 @kind object;
  #L3e8c6e.  v1.`io.objectbox.query.QueryBuilder.b` @type ^`long` := v3 @kind wide;
  #L3e8c72.  call temp:= `nativeCreate`(v1, v3, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeCreate:(JLjava/lang/String;)J` @kind direct;
  #L3e8c78.  v2:= temp @kind wide;
  #L3e8c7a.  v1.`io.objectbox.query.QueryBuilder.c` @type ^`long` := v2 @kind wide;
  #L3e8c7e.  v4:= 0L;
  #L3e8c82.  v0:= lcmp(v2, v4);
  #L3e8c86.  if v0 == 0 then goto L3e8c92;
  #L3e8c8a.  v2:= 0I;
  #L3e8c8c.  v1.`io.objectbox.query.QueryBuilder.j` @type ^`boolean` := v2 @kind boolean;
  #L3e8c90.  return @kind void;
  #L3e8c92.  v2:= new `io.objectbox.exception.DbException`;
  #L3e8c96.  v3:= "Could not create native query builder" @kind object;
  #L3e8c9a.  call `<init>`(v2, v3) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8ca0.  throw v2;
}
procedure `void` `a`(`io.objectbox.query.QueryBuilder` v10 @kind this, `long` v11 ) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e8ce8.  v0:= v10.`io.objectbox.query.QueryBuilder.f` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8cec.  v1:= `@@io.objectbox.query.QueryBuilder$a.a` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8cf0.  if v0 == v1 then goto L3e8d24;
  #L3e8cf4.  v2:= `@@io.objectbox.query.QueryBuilder$a.c` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8cf8.  if v0 != v2 then goto L3e8d02;
  #L3e8cfc.  v0:= 1I;
  #L3e8cfe.  v9:= 1I;
  #L3e8d00.  goto L3e8d06;
  #L3e8d02.  v0:= 0I;
  #L3e8d04.  v9:= 0I;
  #L3e8d06.  v3:= v10.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8d0a.  v5:= v10.`io.objectbox.query.QueryBuilder.d` @type ^`long` @kind wide;
  #L3e8d0e.  v2:= v10 @kind object;
  #L3e8d10.  v7:= v11 @kind wide;
  #L3e8d12.  call temp:= `nativeCombine`(v2, v3, v5, v7, v9) @signature `Lio/objectbox/query/QueryBuilder;.nativeCombine:(JJJZ)J` @kind direct;
  #L3e8d18.  v2:= temp @kind wide;
  #L3e8d1a.  v10.`io.objectbox.query.QueryBuilder.d` @type ^`long` := v2 @kind wide;
  #L3e8d1e.  v10.`io.objectbox.query.QueryBuilder.f` @type ^`io.objectbox.query.QueryBuilder$a` := v1 @kind object;
  #L3e8d22.  goto L3e8d28;
  #L3e8d24.  v10.`io.objectbox.query.QueryBuilder.d` @type ^`long` := v11 @kind wide;
  #L3e8d28.  v10.`io.objectbox.query.QueryBuilder.e` @type ^`long` := v11 @kind wide;
  #L3e8d2c.  return @kind void;
}
procedure `void` `b`(`io.objectbox.query.QueryBuilder` v5 @kind this, `io.objectbox.query.QueryBuilder$a` v6 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.b:(Lio/objectbox/query/QueryBuilder$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e8d8c.  v0:= v5.`io.objectbox.query.QueryBuilder.d` @type ^`long` @kind wide;
  #L3e8d90.  v2:= 0L;
  #L3e8d94.  v4:= lcmp(v0, v2);
  #L3e8d98.  if v4 == 0 then goto L3e8dbe;
  #L3e8d9c.  v0:= v5.`io.objectbox.query.QueryBuilder.f` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8da0.  v1:= `@@io.objectbox.query.QueryBuilder$a.a` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8da4.  if v0 != v1 then goto L3e8dae;
  #L3e8da8.  v5.`io.objectbox.query.QueryBuilder.f` @type ^`io.objectbox.query.QueryBuilder$a` := v6 @kind object;
  #L3e8dac.  return @kind void;
  #L3e8dae.  v6:= new `java.lang.IllegalStateException`;
  #L3e8db2.  v0:= "Another operator is pending. Use operators like and() and or() only between two conditions." @kind object;
  #L3e8db6.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8dbc.  throw v6;
  #L3e8dbe.  v6:= new `java.lang.IllegalStateException`;
  #L3e8dc2.  v0:= "No previous condition. Use operators like and() and or() only between two conditions." @kind object;
  #L3e8dc6.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8dcc.  throw v6;
}
procedure `io.objectbox.query.QueryBuilder` `c`(`io.objectbox.query.QueryBuilder` v11 @kind this, `io.objectbox.relation.RelationInfo` v12 @kind object, `io.objectbox.EntityInfo` v13 @kind object, `io.objectbox.EntityInfo` v14 @kind object, `boolean` v15 ) @signature `Lio/objectbox/query/QueryBuilder;.c:(Lio/objectbox/relation/RelationInfo;Lio/objectbox/EntityInfo;Lio/objectbox/EntityInfo;Z)Lio/objectbox/query/QueryBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3e889c.  v0:= v12.`io.objectbox.relation.RelationInfo.targetIdProperty` @type ^`io.objectbox.Property` @kind object;
  #L3e88a0.  if v0 == 0 then goto L3e88ac;
  #L3e88a4.  v0:= v0.`io.objectbox.Property.id` @type ^`int`;
  #L3e88a8.  v8:= v0;
  #L3e88aa.  goto L3e88b0;
  #L3e88ac.  v0:= 0I;
  #L3e88ae.  v8:= 0I;
  #L3e88b0.  v0:= v12.`io.objectbox.relation.RelationInfo.targetRelationId` @type ^`int`;
  #L3e88b4.  if v0 == 0 then goto L3e88bc;
  #L3e88b8.  v9:= v0;
  #L3e88ba.  goto L3e88c2;
  #L3e88bc.  v12:= v12.`io.objectbox.relation.RelationInfo.relationId` @type ^`int`;
  #L3e88c0.  v9:= v12;
  #L3e88c2.  v2:= v11.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e88c6.  v4:= v11.`io.objectbox.query.QueryBuilder.b` @type ^`long` @kind wide;
  #L3e88ca.  call temp:= `getEntityId`(v13) @signature `Lio/objectbox/EntityInfo;.getEntityId:()I` @kind interface;
  #L3e88d0.  v6:= temp;
  #L3e88d2.  call temp:= `getEntityId`(v14) @signature `Lio/objectbox/EntityInfo;.getEntityId:()I` @kind interface;
  #L3e88d8.  v7:= temp;
  #L3e88da.  v1:= v11 @kind object;
  #L3e88dc.  v10:= v15;
  #L3e88de.  call temp:= `nativeLink`(v1, v2, v4, v6, v7, v8, v9, v10) @signature `Lio/objectbox/query/QueryBuilder;.nativeLink:(JJIIIIZ)J` @kind direct;
  #L3e88e4.  v12:= temp @kind wide;
  #L3e88e6.  v14:= new `io.objectbox.query.QueryBuilder`;
  #L3e88ea.  v0:= v11.`io.objectbox.query.QueryBuilder.b` @type ^`long` @kind wide;
  #L3e88ee.  call `<init>`(v14, v0, v12) @signature `Lio/objectbox/query/QueryBuilder;.<init>:(JJ)V` @kind direct;
  #L3e88f4.  return v14 @kind object;
}
procedure `void` `d`(`io.objectbox.query.QueryBuilder` v5 @kind this) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e8e00.  v0:= v5.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8e04.  v2:= 0L;
  #L3e8e08.  v4:= lcmp(v0, v2);
  #L3e8e0c.  if v4 == 0 then goto L3e8e12;
  #L3e8e10.  return @kind void;
  #L3e8e12.  v0:= new `java.lang.IllegalStateException`;
  #L3e8e16.  v1:= "This QueryBuilder has already been closed. Please use a new instance." @kind object;
  #L3e8e1a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8e20.  throw v0;
}
procedure `void` `e`(`io.objectbox.query.QueryBuilder` v2 @kind this) @signature `Lio/objectbox/query/QueryBuilder;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e8e34.  v0:= v2.`io.objectbox.query.QueryBuilder.j` @type ^`boolean` @kind boolean;
  #L3e8e38.  if v0 != 0 then goto L3e8e3e;
  #L3e8e3c.  return @kind void;
  #L3e8e3e.  v0:= new `java.lang.IllegalStateException`;
  #L3e8e42.  v1:= "This call is not supported on sub query builders (links)" @kind object;
  #L3e8e46.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8e4c.  throw v0;
}
procedure `long` `nativeBetween`(`long` v0 , `int` v2 , `double` v3 , `double` v5 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeBetween:(JIDD)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeBetween`(`long` v0 , `int` v2 , `long` v3 , `long` v5 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeBetween:(JIJJ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeBuild`(`long` v0 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeBuild:(J)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeCombine`(`long` v0 , `long` v2 , `long` v4 , `boolean` v6 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeCombine:(JJJZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeContains`(`long` v0 , `int` v2 , `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeContains:(JILjava/lang/String;Z)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeCreate`(`long` v0 , `java.lang.String` v2 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.nativeCreate:(JLjava/lang/String;)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeDestroy`(`long` v0 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeDestroy:(J)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeEndsWith`(`long` v0 , `int` v2 , `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeEndsWith:(JILjava/lang/String;Z)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeEqual`(`long` v0 , `int` v2 , `long` v3 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JIJ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeEqual`(`long` v0 , `int` v2 , `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JILjava/lang/String;Z)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeEqual`(`long` v0 , `int` v2 , `byte`[] v3 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JI[B)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeGreater`(`long` v0 , `int` v2 , `double` v3 , `boolean` v5 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JIDZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeGreater`(`long` v0 , `int` v2 , `long` v3 , `boolean` v5 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JIJZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeGreater`(`long` v0 , `int` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JILjava/lang/String;ZZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeGreater`(`long` v0 , `int` v2 , `byte`[] v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JI[BZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeIn`(`long` v0 , `int` v2 , `int`[] v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeIn:(JI[IZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeIn`(`long` v0 , `int` v2 , `long`[] v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeIn:(JI[JZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeIn`(`long` v0 , `int` v2 , `java.lang.String`[] v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeIn:(JI[Ljava/lang/String;Z)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeLess`(`long` v0 , `int` v2 , `double` v3 , `boolean` v5 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JIDZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeLess`(`long` v0 , `int` v2 , `long` v3 , `boolean` v5 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JIJZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeLess`(`long` v0 , `int` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JILjava/lang/String;ZZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeLess`(`long` v0 , `int` v2 , `byte`[] v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JI[BZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeLink`(`long` v0 , `long` v2 , `int` v4 , `int` v5 , `int` v6 , `int` v7 , `boolean` v8 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeLink:(JJIIIIZ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeNotEqual`(`long` v0 , `int` v2 , `long` v3 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotEqual:(JIJ)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeNotEqual`(`long` v0 , `int` v2 , `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotEqual:(JILjava/lang/String;Z)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeNotNull`(`long` v0 , `int` v2 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotNull:(JI)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeNull`(`long` v0 , `int` v2 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeNull:(JI)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeOrder`(`long` v0 , `int` v2 , `int` v3 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeOrder:(JII)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeSetParameterAlias`(`long` v0 , `java.lang.String` v2 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.nativeSetParameterAlias:(JLjava/lang/String;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativeStartsWith`(`long` v0 , `int` v2 , `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.nativeStartsWith:(JILjava/lang/String;Z)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `io.objectbox.query.QueryBuilder` `and`(`io.objectbox.query.QueryBuilder` v1 @kind this) @signature `Lio/objectbox/query/QueryBuilder;.and:()Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7df0.  v0:= `@@io.objectbox.query.QueryBuilder$a.b` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e7df4.  call `b`(v1, v0) @signature `Lio/objectbox/query/QueryBuilder;.b:(Lio/objectbox/query/QueryBuilder$a;)V` @kind direct;
  #L3e7dfa.  return v1 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `backlink`(`io.objectbox.query.QueryBuilder` v2 @kind this, `io.objectbox.relation.RelationInfo` v3 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.backlink:(Lio/objectbox/relation/RelationInfo;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7e0c.  call temp:= `isBacklink`(v3) @signature `Lio/objectbox/relation/RelationInfo;.isBacklink:()Z` @kind virtual;
  #L3e7e12.  v0:= temp;
  #L3e7e14.  if v0 != 0 then goto L3e7e28;
  #L3e7e18.  v0:= v3.`io.objectbox.relation.RelationInfo.sourceInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3e7e1c.  v1:= 1I;
  #L3e7e1e.  call temp:= `c`(v2, v3, v0, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.c:(Lio/objectbox/relation/RelationInfo;Lio/objectbox/EntityInfo;Lio/objectbox/EntityInfo;Z)Lio/objectbox/query/QueryBuilder;` @kind direct;
  #L3e7e24.  v3:= temp @kind object;
  #L3e7e26.  return v3 @kind object;
  #L3e7e28.  v3:= new `java.lang.IllegalArgumentException`;
  #L3e7e2c.  v0:= "Double backlink: The relation is already a backlink, please use a regular link on the original relation instead." @kind object;
  #L3e7e30.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7e36.  throw v3;
}
procedure `io.objectbox.query.QueryBuilder` `between`(`io.objectbox.query.QueryBuilder` v8 @kind this, `io.objectbox.Property` v9 @kind object, `double` v10 , `double` v12 ) @signature `Lio/objectbox/query/QueryBuilder;.between:(Lio/objectbox/Property;DD)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e7e48.  call `d`(v8) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e7e4e.  v1:= v8.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e7e52.  call temp:= `getId`(v9) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e7e58.  v3:= temp;
  #L3e7e5a.  v0:= v8 @kind object;
  #L3e7e5c.  v4:= v10 @kind wide;
  #L3e7e5e.  v6:= v12 @kind wide;
  #L3e7e60.  call temp:= `nativeBetween`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeBetween:(JIDD)J` @kind direct;
  #L3e7e66.  v9:= temp @kind wide;
  #L3e7e68.  call `a`(v8, v9) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e7e6e.  return v8 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `between`(`io.objectbox.query.QueryBuilder` v8 @kind this, `io.objectbox.Property` v9 @kind object, `long` v10 , `long` v12 ) @signature `Lio/objectbox/query/QueryBuilder;.between:(Lio/objectbox/Property;JJ)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e7ec4.  call `d`(v8) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e7eca.  v1:= v8.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e7ece.  call temp:= `getId`(v9) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e7ed4.  v3:= temp;
  #L3e7ed6.  v0:= v8 @kind object;
  #L3e7ed8.  v4:= v10 @kind wide;
  #L3e7eda.  v6:= v12 @kind wide;
  #L3e7edc.  call temp:= `nativeBetween`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeBetween:(JIJJ)J` @kind direct;
  #L3e7ee2.  v9:= temp @kind wide;
  #L3e7ee4.  call `a`(v8, v9) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e7eea.  return v8 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `between`(`io.objectbox.query.QueryBuilder` v8 @kind this, `io.objectbox.Property` v9 @kind object, `java.util.Date` v10 @kind object, `java.util.Date` v11 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.between:(Lio/objectbox/Property;Ljava/util/Date;Ljava/util/Date;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e7e80.  call `d`(v8) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e7e86.  v1:= v8.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e7e8a.  call temp:= `getId`(v9) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e7e90.  v3:= temp;
  #L3e7e92.  call temp:= `getTime`(v10) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e7e98.  v4:= temp @kind wide;
  #L3e7e9a.  call temp:= `getTime`(v11) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e7ea0.  v6:= temp @kind wide;
  #L3e7ea2.  v0:= v8 @kind object;
  #L3e7ea4.  call temp:= `nativeBetween`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeBetween:(JIJJ)J` @kind direct;
  #L3e7eaa.  v9:= temp @kind wide;
  #L3e7eac.  call `a`(v8, v9) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e7eb2.  return v8 @kind object;
}
procedure `io.objectbox.query.Query` `build`(`io.objectbox.query.QueryBuilder` v9 @kind this) @signature `Lio/objectbox/query/QueryBuilder;.build:()Lio/objectbox/query/Query;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e7d6c.  call `e`(v9) @signature `Lio/objectbox/query/QueryBuilder;.e:()V` @kind direct;
  #L3e7d72.  call `d`(v9) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e7d78.  v0:= v9.`io.objectbox.query.QueryBuilder.f` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e7d7c.  v1:= `@@io.objectbox.query.QueryBuilder$a.a` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e7d80.  if v0 != v1 then goto L3e7dd0;
  #L3e7d84.  v0:= v9.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e7d88.  call temp:= `nativeBuild`(v9, v0) @signature `Lio/objectbox/query/QueryBuilder;.nativeBuild:(J)J` @kind direct;
  #L3e7d8e.  v4:= temp @kind wide;
  #L3e7d90.  v0:= 0L;
  #L3e7d94.  v2:= lcmp(v4, v0);
  #L3e7d98.  if v2 == 0 then goto L3e7dc0;
  #L3e7d9c.  v0:= new `io.objectbox.query.Query`;
  #L3e7da0.  v3:= v9.`io.objectbox.query.QueryBuilder.a` @type ^`io.objectbox.Box` @kind object;
  #L3e7da4.  v6:= v9.`io.objectbox.query.QueryBuilder.g` @type ^`java.util.List` @kind object;
  #L3e7da8.  v7:= v9.`io.objectbox.query.QueryBuilder.h` @type ^`io.objectbox.query.QueryFilter` @kind object;
  #L3e7dac.  v8:= v9.`io.objectbox.query.QueryBuilder.i` @type ^`java.util.Comparator` @kind object;
  #L3e7db0.  v2:= v0 @kind object;
  #L3e7db2.  call `<init>`(v2, v3, v4, v6, v7, v8) @signature `Lio/objectbox/query/Query;.<init>:(Lio/objectbox/Box;JLjava/util/List;Lio/objectbox/query/QueryFilter;Ljava/util/Comparator;)V` @kind direct;
  #L3e7db8.  call `close`(v9) @signature `Lio/objectbox/query/QueryBuilder;.close:()V` @kind virtual;
  #L3e7dbe.  return v0 @kind object;
  #L3e7dc0.  v0:= new `io.objectbox.exception.DbException`;
  #L3e7dc4.  v1:= "Could not create native query" @kind object;
  #L3e7dc8.  call `<init>`(v0, v1) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7dce.  throw v0;
  #L3e7dd0.  v0:= new `java.lang.IllegalStateException`;
  #L3e7dd4.  v1:= "Incomplete logic condition. Use or()/and() between two conditions only." @kind object;
  #L3e7dd8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7dde.  throw v0;
}
procedure `void` `close`(`io.objectbox.query.QueryBuilder` v5 @kind this) @signature `Lio/objectbox/query/QueryBuilder;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e8d40.  @monitorenter v5
  #L3e8d42.  v0:= v5.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8d46.  v2:= 0L;
  #L3e8d4a.  v4:= lcmp(v0, v2);
  #L3e8d4e.  if v4 == 0 then goto L3e8d64;
  #L3e8d52.  v5.`io.objectbox.query.QueryBuilder.c` @type ^`long` := v2 @kind wide;
  #L3e8d56.  v2:= v5.`io.objectbox.query.QueryBuilder.j` @type ^`boolean` @kind boolean;
  #L3e8d5a.  if v2 != 0 then goto L3e8d64;
  #L3e8d5e.  call `nativeDestroy`(v5, v0) @signature `Lio/objectbox/query/QueryBuilder;.nativeDestroy:(J)V` @kind direct;
  #L3e8d64.  @monitorexit v5
  #L3e8d66.  return @kind void;
  #L3e8d68.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8d6a.  @monitorexit v5
  #L3e8d6c.  throw v0;
  catch `java.lang.Throwable` @[L3e8d42..L3e8d64] goto L3e8d68;
}
procedure `io.objectbox.query.QueryBuilder` `contains`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.contains:(Lio/objectbox/Property;Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7efc.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e7f02.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e7f06.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e7f0c.  v3:= temp;
  #L3e7f0e.  v5:= 0I;
  #L3e7f10.  v0:= v6 @kind object;
  #L3e7f12.  v4:= v8 @kind object;
  #L3e7f14.  call temp:= `nativeContains`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeContains:(JILjava/lang/String;Z)J` @kind direct;
  #L3e7f1a.  v7:= temp @kind wide;
  #L3e7f1c.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e7f22.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `contains`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.contains:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7f34.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e7f3a.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e7f3e.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e7f44.  v3:= temp;
  #L3e7f46.  v7:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e7f4a.  if v9 != v7 then goto L3e7f54;
  #L3e7f4e.  v7:= 1I;
  #L3e7f50.  v5:= 1I;
  #L3e7f52.  goto L3e7f58;
  #L3e7f54.  v7:= 0I;
  #L3e7f56.  v5:= 0I;
  #L3e7f58.  v0:= v6 @kind object;
  #L3e7f5a.  v4:= v8 @kind object;
  #L3e7f5c.  call temp:= `nativeContains`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeContains:(JILjava/lang/String;Z)J` @kind direct;
  #L3e7f62.  v7:= temp @kind wide;
  #L3e7f64.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e7f6a.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `eager`(`io.objectbox.query.QueryBuilder` v4 @kind this, `int` v5 , `io.objectbox.relation.RelationInfo` v6 @kind object, `io.objectbox.relation.RelationInfo`[] v7 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.eager:(ILio/objectbox/relation/RelationInfo;[Lio/objectbox/relation/RelationInfo;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e7f7c.  call `e`(v4) @signature `Lio/objectbox/query/QueryBuilder;.e:()V` @kind direct;
  #L3e7f82.  v0:= v4.`io.objectbox.query.QueryBuilder.g` @type ^`java.util.List` @kind object;
  #L3e7f86.  if v0 != 0 then goto L3e7f98;
  #L3e7f8a.  v0:= new `java.util.ArrayList`;
  #L3e7f8e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e7f94.  v4.`io.objectbox.query.QueryBuilder.g` @type ^`java.util.List` := v0 @kind object;
  #L3e7f98.  v0:= v4.`io.objectbox.query.QueryBuilder.g` @type ^`java.util.List` @kind object;
  #L3e7f9c.  v1:= new `io.objectbox.query.a`;
  #L3e7fa0.  call `<init>`(v1, v5, v6) @signature `Lio/objectbox/query/a;.<init>:(ILio/objectbox/relation/RelationInfo;)V` @kind direct;
  #L3e7fa6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7fac.  if v7 == 0 then goto L3e7fd6;
  #L3e7fb0.  v6:= length @variable v7;
  #L3e7fb2.  v0:= 0I;
  #L3e7fb4.  if v0 >= v6 then goto L3e7fd6;
  #L3e7fb8.  v1:= v7[v0] @kind object;
  #L3e7fbc.  v2:= v4.`io.objectbox.query.QueryBuilder.g` @type ^`java.util.List` @kind object;
  #L3e7fc0.  v3:= new `io.objectbox.query.a`;
  #L3e7fc4.  call `<init>`(v3, v5, v1) @signature `Lio/objectbox/query/a;.<init>:(ILio/objectbox/relation/RelationInfo;)V` @kind direct;
  #L3e7fca.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7fd0.  v0:= v0 + 1;
  #L3e7fd4.  goto L3e7fb4;
  #L3e7fd6.  return v4 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `eager`(`io.objectbox.query.QueryBuilder` v1 @kind this, `io.objectbox.relation.RelationInfo` v2 @kind object, `io.objectbox.relation.RelationInfo`[] v3 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.eager:(Lio/objectbox/relation/RelationInfo;[Lio/objectbox/relation/RelationInfo;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7fe8.  v0:= 0I;
  #L3e7fea.  call temp:= `eager`(v1, v0, v2, v3) @signature `Lio/objectbox/query/QueryBuilder;.eager:(ILio/objectbox/relation/RelationInfo;[Lio/objectbox/relation/RelationInfo;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e7ff0.  v2:= temp @kind object;
  #L3e7ff2.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `endsWith`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.endsWith:(Lio/objectbox/Property;Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8004.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e800a.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e800e.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8014.  v3:= temp;
  #L3e8016.  v5:= 0I;
  #L3e8018.  v0:= v6 @kind object;
  #L3e801a.  v4:= v8 @kind object;
  #L3e801c.  call temp:= `nativeEndsWith`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeEndsWith:(JILjava/lang/String;Z)J` @kind direct;
  #L3e8022.  v7:= temp @kind wide;
  #L3e8024.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e802a.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `endsWith`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.endsWith:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e803c.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8042.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8046.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e804c.  v3:= temp;
  #L3e804e.  v7:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e8052.  if v9 != v7 then goto L3e805c;
  #L3e8056.  v7:= 1I;
  #L3e8058.  v5:= 1I;
  #L3e805a.  goto L3e8060;
  #L3e805c.  v7:= 0I;
  #L3e805e.  v5:= 0I;
  #L3e8060.  v0:= v6 @kind object;
  #L3e8062.  v4:= v8 @kind object;
  #L3e8064.  call temp:= `nativeEndsWith`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeEndsWith:(JILjava/lang/String;Z)J` @kind direct;
  #L3e806a.  v7:= temp @kind wide;
  #L3e806c.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8072.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `equal`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `double` v8 , `double` v10 ) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;DD)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e80fc.  v2:= v8 - v10 @kind double;
  #L3e8100.  v4:= v8 + v10 @kind double;
  #L3e8104.  v0:= v6 @kind object;
  #L3e8106.  v1:= v7 @kind object;
  #L3e8108.  call temp:= `between`(v0, v1, v2, v4) @signature `Lio/objectbox/query/QueryBuilder;.between:(Lio/objectbox/Property;DD)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e810e.  v7:= temp @kind object;
  #L3e8110.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `equal`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `long` v8 ) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e81e0.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e81e6.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e81ea.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e81f0.  v3:= temp;
  #L3e81f2.  v0:= v6 @kind object;
  #L3e81f4.  v4:= v8 @kind wide;
  #L3e81f6.  call temp:= `nativeEqual`(v0, v1, v3, v4) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JIJ)J` @kind direct;
  #L3e81fc.  v7:= temp @kind wide;
  #L3e81fe.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8204.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `equal`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8124.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e812a.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e812e.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8134.  v3:= temp;
  #L3e8136.  v5:= 0I;
  #L3e8138.  v0:= v6 @kind object;
  #L3e813a.  v4:= v8 @kind object;
  #L3e813c.  call temp:= `nativeEqual`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JILjava/lang/String;Z)J` @kind direct;
  #L3e8142.  v7:= temp @kind wide;
  #L3e8144.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e814a.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `equal`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e815c.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8162.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8166.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e816c.  v3:= temp;
  #L3e816e.  v7:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e8172.  if v9 != v7 then goto L3e817c;
  #L3e8176.  v7:= 1I;
  #L3e8178.  v5:= 1I;
  #L3e817a.  goto L3e8180;
  #L3e817c.  v7:= 0I;
  #L3e817e.  v5:= 0I;
  #L3e8180.  v0:= v6 @kind object;
  #L3e8182.  v4:= v8 @kind object;
  #L3e8184.  call temp:= `nativeEqual`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JILjava/lang/String;Z)J` @kind direct;
  #L3e818a.  v7:= temp @kind wide;
  #L3e818c.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8192.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `equal`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.util.Date` v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;Ljava/util/Date;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e81a4.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e81aa.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e81ae.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e81b4.  v3:= temp;
  #L3e81b6.  call temp:= `getTime`(v8) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e81bc.  v4:= temp @kind wide;
  #L3e81be.  v0:= v6 @kind object;
  #L3e81c0.  call temp:= `nativeEqual`(v0, v1, v3, v4) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JIJ)J` @kind direct;
  #L3e81c6.  v7:= temp @kind wide;
  #L3e81c8.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e81ce.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `equal`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `boolean` v8 ) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;Z)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8084.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e808a.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e808e.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8094.  v3:= temp;
  #L3e8096.  if v8 == 0 then goto L3e80a0;
  #L3e809a.  v7:= 1L;
  #L3e809e.  goto L3e80a4;
  #L3e80a0.  v7:= 0L;
  #L3e80a4.  v4:= v7 @kind wide;
  #L3e80a6.  v0:= v6 @kind object;
  #L3e80a8.  call temp:= `nativeEqual`(v0, v1, v3, v4) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JIJ)J` @kind direct;
  #L3e80ae.  v7:= temp @kind wide;
  #L3e80b0.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e80b6.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `equal`(`io.objectbox.query.QueryBuilder` v2 @kind this, `io.objectbox.Property` v3 @kind object, `byte`[] v4 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;[B)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e80c8.  call `d`(v2) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e80ce.  v0:= v2.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e80d2.  call temp:= `getId`(v3) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e80d8.  v3:= temp;
  #L3e80da.  call temp:= `nativeEqual`(v2, v0, v3, v4) @signature `Lio/objectbox/query/QueryBuilder;.nativeEqual:(JI[B)J` @kind direct;
  #L3e80e0.  v3:= temp @kind wide;
  #L3e80e2.  call `a`(v2, v3) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e80e8.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `filter`(`io.objectbox.query.QueryBuilder` v1 @kind this, `io.objectbox.query.QueryFilter` v2 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.filter:(Lio/objectbox/query/QueryFilter;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8218.  call `e`(v1) @signature `Lio/objectbox/query/QueryBuilder;.e:()V` @kind direct;
  #L3e821e.  v0:= v1.`io.objectbox.query.QueryBuilder.h` @type ^`io.objectbox.query.QueryFilter` @kind object;
  #L3e8222.  if v0 != 0 then goto L3e822c;
  #L3e8226.  v1.`io.objectbox.query.QueryBuilder.h` @type ^`io.objectbox.query.QueryFilter` := v2 @kind object;
  #L3e822a.  return v1 @kind object;
  #L3e822c.  v2:= new `java.lang.IllegalStateException`;
  #L3e8230.  v0:= "A filter was already defined, you can only assign one filter" @kind object;
  #L3e8234.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e823a.  throw v2;
}
procedure `void` `finalize`(`io.objectbox.query.QueryBuilder` v0 @kind this) @signature `Lio/objectbox/query/QueryBuilder;.finalize:()V` @AccessFlag PROTECTED {
    temp;

  #L3e8de0.  call `close`(v0) @signature `Lio/objectbox/query/QueryBuilder;.close:()V` @kind virtual;
  #L3e8de6.  call `finalize`(v0) @signature `Ljava/lang/Object;.finalize:()V` @kind super;
  #L3e8dec.  return @kind void;
}
procedure `io.objectbox.query.QueryBuilder` `greater`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `double` v9 ) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;D)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8284.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e828a.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e828e.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8294.  v3:= temp;
  #L3e8296.  v6:= 0I;
  #L3e8298.  v0:= v7 @kind object;
  #L3e829a.  v4:= v9 @kind wide;
  #L3e829c.  call temp:= `nativeGreater`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JIDZ)J` @kind direct;
  #L3e82a2.  v8:= temp @kind wide;
  #L3e82a4.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e82aa.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greater`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `long` v9 ) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8368.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e836e.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8372.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8378.  v3:= temp;
  #L3e837a.  v6:= 0I;
  #L3e837c.  v0:= v7 @kind object;
  #L3e837e.  v4:= v9 @kind wide;
  #L3e8380.  call temp:= `nativeGreater`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JIJZ)J` @kind direct;
  #L3e8386.  v8:= temp @kind wide;
  #L3e8388.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e838e.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greater`(`io.objectbox.query.QueryBuilder` v1 @kind this, `io.objectbox.Property` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e82bc.  v0:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_INSENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e82c0.  call temp:= `greater`(v1, v2, v3, v0) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e82c6.  v2:= temp @kind object;
  #L3e82c8.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greater`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `java.lang.String` v9 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v10 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e82dc.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e82e2.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e82e6.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e82ec.  v3:= temp;
  #L3e82ee.  v8:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e82f2.  if v10 != v8 then goto L3e82fc;
  #L3e82f6.  v8:= 1I;
  #L3e82f8.  v5:= 1I;
  #L3e82fa.  goto L3e8300;
  #L3e82fc.  v8:= 0I;
  #L3e82fe.  v5:= 0I;
  #L3e8300.  v6:= 0I;
  #L3e8302.  v0:= v7 @kind object;
  #L3e8304.  v4:= v9 @kind object;
  #L3e8306.  call temp:= `nativeGreater`(v0, v1, v3, v4, v5, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JILjava/lang/String;ZZ)J` @kind direct;
  #L3e830c.  v8:= temp @kind wide;
  #L3e830e.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8314.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greater`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `java.util.Date` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;Ljava/util/Date;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8328.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e832e.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8332.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8338.  v3:= temp;
  #L3e833a.  call temp:= `getTime`(v9) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e8340.  v4:= temp @kind wide;
  #L3e8342.  v6:= 0I;
  #L3e8344.  v0:= v7 @kind object;
  #L3e8346.  call temp:= `nativeGreater`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JIJZ)J` @kind direct;
  #L3e834c.  v8:= temp @kind wide;
  #L3e834e.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8354.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greater`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `byte`[] v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;[B)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e824c.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8252.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8256.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e825c.  v3:= temp;
  #L3e825e.  v5:= 0I;
  #L3e8260.  v0:= v6 @kind object;
  #L3e8262.  v4:= v8 @kind object;
  #L3e8264.  call temp:= `nativeGreater`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JI[BZ)J` @kind direct;
  #L3e826a.  v7:= temp @kind wide;
  #L3e826c.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8272.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greaterOrEqual`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `double` v9 ) @signature `Lio/objectbox/query/QueryBuilder;.greaterOrEqual:(Lio/objectbox/Property;D)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e83d8.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e83de.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e83e2.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e83e8.  v3:= temp;
  #L3e83ea.  v6:= 1I;
  #L3e83ec.  v0:= v7 @kind object;
  #L3e83ee.  v4:= v9 @kind wide;
  #L3e83f0.  call temp:= `nativeGreater`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JIDZ)J` @kind direct;
  #L3e83f6.  v8:= temp @kind wide;
  #L3e83f8.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e83fe.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greaterOrEqual`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `long` v9 ) @signature `Lio/objectbox/query/QueryBuilder;.greaterOrEqual:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e849c.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e84a2.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e84a6.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e84ac.  v3:= temp;
  #L3e84ae.  v6:= 1I;
  #L3e84b0.  v0:= v7 @kind object;
  #L3e84b2.  v4:= v9 @kind wide;
  #L3e84b4.  call temp:= `nativeGreater`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JIJZ)J` @kind direct;
  #L3e84ba.  v8:= temp @kind wide;
  #L3e84bc.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e84c2.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greaterOrEqual`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `java.lang.String` v9 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v10 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.greaterOrEqual:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8410.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8416.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e841a.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8420.  v3:= temp;
  #L3e8422.  v8:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e8426.  if v10 != v8 then goto L3e8430;
  #L3e842a.  v8:= 1I;
  #L3e842c.  v5:= 1I;
  #L3e842e.  goto L3e8434;
  #L3e8430.  v8:= 0I;
  #L3e8432.  v5:= 0I;
  #L3e8434.  v6:= 1I;
  #L3e8436.  v0:= v7 @kind object;
  #L3e8438.  v4:= v9 @kind object;
  #L3e843a.  call temp:= `nativeGreater`(v0, v1, v3, v4, v5, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JILjava/lang/String;ZZ)J` @kind direct;
  #L3e8440.  v8:= temp @kind wide;
  #L3e8442.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8448.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greaterOrEqual`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `java.util.Date` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.greaterOrEqual:(Lio/objectbox/Property;Ljava/util/Date;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e845c.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8462.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8466.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e846c.  v3:= temp;
  #L3e846e.  call temp:= `getTime`(v9) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e8474.  v4:= temp @kind wide;
  #L3e8476.  v6:= 1I;
  #L3e8478.  v0:= v7 @kind object;
  #L3e847a.  call temp:= `nativeGreater`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JIJZ)J` @kind direct;
  #L3e8480.  v8:= temp @kind wide;
  #L3e8482.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8488.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `greaterOrEqual`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `byte`[] v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.greaterOrEqual:(Lio/objectbox/Property;[B)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e83a0.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e83a6.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e83aa.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e83b0.  v3:= temp;
  #L3e83b2.  v5:= 1I;
  #L3e83b4.  v0:= v6 @kind object;
  #L3e83b6.  v4:= v8 @kind object;
  #L3e83b8.  call temp:= `nativeGreater`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeGreater:(JI[BZ)J` @kind direct;
  #L3e83be.  v7:= temp @kind wide;
  #L3e83c0.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e83c6.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `in`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `int`[] v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.in:(Lio/objectbox/Property;[I)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e84d4.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e84da.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e84de.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e84e4.  v3:= temp;
  #L3e84e6.  v5:= 0I;
  #L3e84e8.  v0:= v6 @kind object;
  #L3e84ea.  v4:= v8 @kind object;
  #L3e84ec.  call temp:= `nativeIn`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeIn:(JI[IZ)J` @kind direct;
  #L3e84f2.  v7:= temp @kind wide;
  #L3e84f4.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e84fa.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `in`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `long`[] v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.in:(Lio/objectbox/Property;[J)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8574.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e857a.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e857e.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8584.  v3:= temp;
  #L3e8586.  v5:= 0I;
  #L3e8588.  v0:= v6 @kind object;
  #L3e858a.  v4:= v8 @kind object;
  #L3e858c.  call temp:= `nativeIn`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeIn:(JI[JZ)J` @kind direct;
  #L3e8592.  v7:= temp @kind wide;
  #L3e8594.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e859a.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `in`(`io.objectbox.query.QueryBuilder` v1 @kind this, `io.objectbox.Property` v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.in:(Lio/objectbox/Property;[Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e850c.  v0:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_INSENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e8510.  call temp:= `in`(v1, v2, v3, v0) @signature `Lio/objectbox/query/QueryBuilder;.in:(Lio/objectbox/Property;[Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e8516.  v2:= temp @kind object;
  #L3e8518.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `in`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String`[] v8 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.in:(Lio/objectbox/Property;[Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e852c.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8532.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8536.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e853c.  v3:= temp;
  #L3e853e.  v7:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e8542.  if v9 != v7 then goto L3e854c;
  #L3e8546.  v7:= 1I;
  #L3e8548.  v5:= 1I;
  #L3e854a.  goto L3e8550;
  #L3e854c.  v7:= 0I;
  #L3e854e.  v5:= 0I;
  #L3e8550.  v0:= v6 @kind object;
  #L3e8552.  v4:= v8 @kind object;
  #L3e8554.  call temp:= `nativeIn`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeIn:(JI[Ljava/lang/String;Z)J` @kind direct;
  #L3e855a.  v7:= temp @kind wide;
  #L3e855c.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8562.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `isNull`(`io.objectbox.query.QueryBuilder` v2 @kind this, `io.objectbox.Property` v3 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.isNull:(Lio/objectbox/Property;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e85ac.  call `d`(v2) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e85b2.  v0:= v2.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e85b6.  call temp:= `getId`(v3) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e85bc.  v3:= temp;
  #L3e85be.  call temp:= `nativeNull`(v2, v0, v3) @signature `Lio/objectbox/query/QueryBuilder;.nativeNull:(JI)J` @kind direct;
  #L3e85c4.  v0:= temp @kind wide;
  #L3e85c6.  call `a`(v2, v0) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e85cc.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `less`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `double` v9 ) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;D)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8618.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e861e.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8622.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8628.  v3:= temp;
  #L3e862a.  v6:= 0I;
  #L3e862c.  v0:= v7 @kind object;
  #L3e862e.  v4:= v9 @kind wide;
  #L3e8630.  call temp:= `nativeLess`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JIDZ)J` @kind direct;
  #L3e8636.  v8:= temp @kind wide;
  #L3e8638.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e863e.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `less`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `long` v9 ) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e86fc.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8702.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8706.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e870c.  v3:= temp;
  #L3e870e.  v6:= 0I;
  #L3e8710.  v0:= v7 @kind object;
  #L3e8712.  v4:= v9 @kind wide;
  #L3e8714.  call temp:= `nativeLess`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JIJZ)J` @kind direct;
  #L3e871a.  v8:= temp @kind wide;
  #L3e871c.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8722.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `less`(`io.objectbox.query.QueryBuilder` v1 @kind this, `io.objectbox.Property` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8650.  v0:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_INSENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e8654.  call temp:= `less`(v1, v2, v3, v0) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e865a.  v2:= temp @kind object;
  #L3e865c.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `less`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `java.lang.String` v9 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v10 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8670.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8676.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e867a.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8680.  v3:= temp;
  #L3e8682.  v8:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e8686.  if v10 != v8 then goto L3e8690;
  #L3e868a.  v8:= 1I;
  #L3e868c.  v5:= 1I;
  #L3e868e.  goto L3e8694;
  #L3e8690.  v8:= 0I;
  #L3e8692.  v5:= 0I;
  #L3e8694.  v6:= 0I;
  #L3e8696.  v0:= v7 @kind object;
  #L3e8698.  v4:= v9 @kind object;
  #L3e869a.  call temp:= `nativeLess`(v0, v1, v3, v4, v5, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JILjava/lang/String;ZZ)J` @kind direct;
  #L3e86a0.  v8:= temp @kind wide;
  #L3e86a2.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e86a8.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `less`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `java.util.Date` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;Ljava/util/Date;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e86bc.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e86c2.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e86c6.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e86cc.  v3:= temp;
  #L3e86ce.  call temp:= `getTime`(v9) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e86d4.  v4:= temp @kind wide;
  #L3e86d6.  v6:= 0I;
  #L3e86d8.  v0:= v7 @kind object;
  #L3e86da.  call temp:= `nativeLess`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JIJZ)J` @kind direct;
  #L3e86e0.  v8:= temp @kind wide;
  #L3e86e2.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e86e8.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `less`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `byte`[] v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;[B)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e85e0.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e85e6.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e85ea.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e85f0.  v3:= temp;
  #L3e85f2.  v5:= 0I;
  #L3e85f4.  v0:= v6 @kind object;
  #L3e85f6.  v4:= v8 @kind object;
  #L3e85f8.  call temp:= `nativeLess`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JI[BZ)J` @kind direct;
  #L3e85fe.  v7:= temp @kind wide;
  #L3e8600.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8606.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `lessOrEqual`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `double` v9 ) @signature `Lio/objectbox/query/QueryBuilder;.lessOrEqual:(Lio/objectbox/Property;D)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e876c.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8772.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8776.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e877c.  v3:= temp;
  #L3e877e.  v6:= 1I;
  #L3e8780.  v0:= v7 @kind object;
  #L3e8782.  v4:= v9 @kind wide;
  #L3e8784.  call temp:= `nativeLess`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JIDZ)J` @kind direct;
  #L3e878a.  v8:= temp @kind wide;
  #L3e878c.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8792.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `lessOrEqual`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `long` v9 ) @signature `Lio/objectbox/query/QueryBuilder;.lessOrEqual:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8830.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8836.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e883a.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8840.  v3:= temp;
  #L3e8842.  v6:= 1I;
  #L3e8844.  v0:= v7 @kind object;
  #L3e8846.  v4:= v9 @kind wide;
  #L3e8848.  call temp:= `nativeLess`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JIJZ)J` @kind direct;
  #L3e884e.  v8:= temp @kind wide;
  #L3e8850.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8856.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `lessOrEqual`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `java.lang.String` v9 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v10 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.lessOrEqual:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e87a4.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e87aa.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e87ae.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e87b4.  v3:= temp;
  #L3e87b6.  v8:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e87ba.  if v10 != v8 then goto L3e87c4;
  #L3e87be.  v8:= 1I;
  #L3e87c0.  v5:= 1I;
  #L3e87c2.  goto L3e87c8;
  #L3e87c4.  v8:= 0I;
  #L3e87c6.  v5:= 0I;
  #L3e87c8.  v6:= 1I;
  #L3e87ca.  v0:= v7 @kind object;
  #L3e87cc.  v4:= v9 @kind object;
  #L3e87ce.  call temp:= `nativeLess`(v0, v1, v3, v4, v5, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JILjava/lang/String;ZZ)J` @kind direct;
  #L3e87d4.  v8:= temp @kind wide;
  #L3e87d6.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e87dc.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `lessOrEqual`(`io.objectbox.query.QueryBuilder` v7 @kind this, `io.objectbox.Property` v8 @kind object, `java.util.Date` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.lessOrEqual:(Lio/objectbox/Property;Ljava/util/Date;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e87f0.  call `d`(v7) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e87f6.  v1:= v7.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e87fa.  call temp:= `getId`(v8) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8800.  v3:= temp;
  #L3e8802.  call temp:= `getTime`(v9) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e8808.  v4:= temp @kind wide;
  #L3e880a.  v6:= 1I;
  #L3e880c.  v0:= v7 @kind object;
  #L3e880e.  call temp:= `nativeLess`(v0, v1, v3, v4, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JIJZ)J` @kind direct;
  #L3e8814.  v8:= temp @kind wide;
  #L3e8816.  call `a`(v7, v8) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e881c.  return v7 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `lessOrEqual`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `byte`[] v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.lessOrEqual:(Lio/objectbox/Property;[B)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8734.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e873a.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e873e.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8744.  v3:= temp;
  #L3e8746.  v5:= 1I;
  #L3e8748.  v0:= v6 @kind object;
  #L3e874a.  v4:= v8 @kind object;
  #L3e874c.  call temp:= `nativeLess`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeLess:(JI[BZ)J` @kind direct;
  #L3e8752.  v7:= temp @kind wide;
  #L3e8754.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e875a.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `link`(`io.objectbox.query.QueryBuilder` v3 @kind this, `io.objectbox.relation.RelationInfo` v4 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.link:(Lio/objectbox/relation/RelationInfo;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8868.  call temp:= `isBacklink`(v4) @signature `Lio/objectbox/relation/RelationInfo;.isBacklink:()Z` @kind virtual;
  #L3e886e.  v0:= temp;
  #L3e8870.  if v0 == 0 then goto L3e887a;
  #L3e8874.  v1:= v4.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3e8878.  goto L3e887e;
  #L3e887a.  v1:= v4.`io.objectbox.relation.RelationInfo.sourceInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3e887e.  v2:= v4.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3e8882.  call temp:= `c`(v3, v4, v1, v2, v0) @signature `Lio/objectbox/query/QueryBuilder;.c:(Lio/objectbox/relation/RelationInfo;Lio/objectbox/EntityInfo;Lio/objectbox/EntityInfo;Z)Lio/objectbox/query/QueryBuilder;` @kind direct;
  #L3e8888.  v4:= temp @kind object;
  #L3e888a.  return v4 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `notEqual`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `long` v8 ) @signature `Lio/objectbox/query/QueryBuilder;.notEqual:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8a08.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8a0e.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8a12.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8a18.  v3:= temp;
  #L3e8a1a.  v0:= v6 @kind object;
  #L3e8a1c.  v4:= v8 @kind wide;
  #L3e8a1e.  call temp:= `nativeNotEqual`(v0, v1, v3, v4) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotEqual:(JIJ)J` @kind direct;
  #L3e8a24.  v7:= temp @kind wide;
  #L3e8a26.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8a2c.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `notEqual`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.notEqual:(Lio/objectbox/Property;Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e894c.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8952.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8956.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e895c.  v3:= temp;
  #L3e895e.  v5:= 0I;
  #L3e8960.  v0:= v6 @kind object;
  #L3e8962.  v4:= v8 @kind object;
  #L3e8964.  call temp:= `nativeNotEqual`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotEqual:(JILjava/lang/String;Z)J` @kind direct;
  #L3e896a.  v7:= temp @kind wide;
  #L3e896c.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8972.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `notEqual`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.notEqual:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8984.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e898a.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e898e.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8994.  v3:= temp;
  #L3e8996.  v7:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e899a.  if v9 != v7 then goto L3e89a4;
  #L3e899e.  v7:= 1I;
  #L3e89a0.  v5:= 1I;
  #L3e89a2.  goto L3e89a8;
  #L3e89a4.  v7:= 0I;
  #L3e89a6.  v5:= 0I;
  #L3e89a8.  v0:= v6 @kind object;
  #L3e89aa.  v4:= v8 @kind object;
  #L3e89ac.  call temp:= `nativeNotEqual`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotEqual:(JILjava/lang/String;Z)J` @kind direct;
  #L3e89b2.  v7:= temp @kind wide;
  #L3e89b4.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e89ba.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `notEqual`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.util.Date` v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.notEqual:(Lio/objectbox/Property;Ljava/util/Date;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e89cc.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e89d2.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e89d6.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e89dc.  v3:= temp;
  #L3e89de.  call temp:= `getTime`(v8) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e89e4.  v4:= temp @kind wide;
  #L3e89e6.  v0:= v6 @kind object;
  #L3e89e8.  call temp:= `nativeNotEqual`(v0, v1, v3, v4) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotEqual:(JIJ)J` @kind direct;
  #L3e89ee.  v7:= temp @kind wide;
  #L3e89f0.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e89f6.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `notEqual`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `boolean` v8 ) @signature `Lio/objectbox/query/QueryBuilder;.notEqual:(Lio/objectbox/Property;Z)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8908.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e890e.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8912.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8918.  v3:= temp;
  #L3e891a.  if v8 == 0 then goto L3e8924;
  #L3e891e.  v7:= 1L;
  #L3e8922.  goto L3e8928;
  #L3e8924.  v7:= 0L;
  #L3e8928.  v4:= v7 @kind wide;
  #L3e892a.  v0:= v6 @kind object;
  #L3e892c.  call temp:= `nativeNotEqual`(v0, v1, v3, v4) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotEqual:(JIJ)J` @kind direct;
  #L3e8932.  v7:= temp @kind wide;
  #L3e8934.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e893a.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `notIn`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `int`[] v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.notIn:(Lio/objectbox/Property;[I)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8a40.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8a46.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8a4a.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8a50.  v3:= temp;
  #L3e8a52.  v5:= 1I;
  #L3e8a54.  v0:= v6 @kind object;
  #L3e8a56.  v4:= v8 @kind object;
  #L3e8a58.  call temp:= `nativeIn`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeIn:(JI[IZ)J` @kind direct;
  #L3e8a5e.  v7:= temp @kind wide;
  #L3e8a60.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8a66.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `notIn`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `long`[] v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.notIn:(Lio/objectbox/Property;[J)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8a78.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8a7e.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8a82.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8a88.  v3:= temp;
  #L3e8a8a.  v5:= 1I;
  #L3e8a8c.  v0:= v6 @kind object;
  #L3e8a8e.  v4:= v8 @kind object;
  #L3e8a90.  call temp:= `nativeIn`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeIn:(JI[JZ)J` @kind direct;
  #L3e8a96.  v7:= temp @kind wide;
  #L3e8a98.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8a9e.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `notNull`(`io.objectbox.query.QueryBuilder` v2 @kind this, `io.objectbox.Property` v3 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.notNull:(Lio/objectbox/Property;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8ab0.  call `d`(v2) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8ab6.  v0:= v2.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8aba.  call temp:= `getId`(v3) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8ac0.  v3:= temp;
  #L3e8ac2.  call temp:= `nativeNotNull`(v2, v0, v3) @signature `Lio/objectbox/query/QueryBuilder;.nativeNotNull:(JI)J` @kind direct;
  #L3e8ac8.  v0:= temp @kind wide;
  #L3e8aca.  call `a`(v2, v0) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8ad0.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `or`(`io.objectbox.query.QueryBuilder` v1 @kind this) @signature `Lio/objectbox/query/QueryBuilder;.or:()Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8ae4.  v0:= `@@io.objectbox.query.QueryBuilder$a.c` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8ae8.  call `b`(v1, v0) @signature `Lio/objectbox/query/QueryBuilder;.b:(Lio/objectbox/query/QueryBuilder$a;)V` @kind direct;
  #L3e8aee.  return v1 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `order`(`io.objectbox.query.QueryBuilder` v1 @kind this, `io.objectbox.Property` v2 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.order:(Lio/objectbox/Property;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8b00.  v0:= 0I;
  #L3e8b02.  call temp:= `order`(v1, v2, v0) @signature `Lio/objectbox/query/QueryBuilder;.order:(Lio/objectbox/Property;I)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e8b08.  v2:= temp @kind object;
  #L3e8b0a.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `order`(`io.objectbox.query.QueryBuilder` v2 @kind this, `io.objectbox.Property` v3 @kind object, `int` v4 ) @signature `Lio/objectbox/query/QueryBuilder;.order:(Lio/objectbox/Property;I)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8b1c.  call `e`(v2) @signature `Lio/objectbox/query/QueryBuilder;.e:()V` @kind direct;
  #L3e8b22.  call `d`(v2) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8b28.  v0:= v2.`io.objectbox.query.QueryBuilder.f` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8b2c.  v1:= `@@io.objectbox.query.QueryBuilder$a.a` @type ^`io.objectbox.query.QueryBuilder$a` @kind object;
  #L3e8b30.  if v0 != v1 then goto L3e8b48;
  #L3e8b34.  v0:= v2.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8b38.  call temp:= `getId`(v3) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8b3e.  v3:= temp;
  #L3e8b40.  call `nativeOrder`(v2, v0, v3, v4) @signature `Lio/objectbox/query/QueryBuilder;.nativeOrder:(JII)V` @kind direct;
  #L3e8b46.  return v2 @kind object;
  #L3e8b48.  v3:= new `java.lang.IllegalStateException`;
  #L3e8b4c.  v4:= "An operator is pending. Use operators like and() and or() only between two conditions." @kind object;
  #L3e8b50.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8b56.  throw v3;
}
procedure `io.objectbox.query.QueryBuilder` `orderDesc`(`io.objectbox.query.QueryBuilder` v1 @kind this, `io.objectbox.Property` v2 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.orderDesc:(Lio/objectbox/Property;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8b68.  v0:= 1I;
  #L3e8b6a.  call temp:= `order`(v1, v2, v0) @signature `Lio/objectbox/query/QueryBuilder;.order:(Lio/objectbox/Property;I)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e8b70.  v2:= temp @kind object;
  #L3e8b72.  return v2 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `parameterAlias`(`io.objectbox.query.QueryBuilder` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.parameterAlias:(Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e8b84.  call `d`(v5) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8b8a.  v0:= v5.`io.objectbox.query.QueryBuilder.e` @type ^`long` @kind wide;
  #L3e8b8e.  v2:= 0L;
  #L3e8b92.  v4:= lcmp(v0, v2);
  #L3e8b96.  if v4 == 0 then goto L3e8ba2;
  #L3e8b9a.  call `nativeSetParameterAlias`(v5, v0, v6) @signature `Lio/objectbox/query/QueryBuilder;.nativeSetParameterAlias:(JLjava/lang/String;)V` @kind direct;
  #L3e8ba0.  return v5 @kind object;
  #L3e8ba2.  v6:= new `java.lang.IllegalStateException`;
  #L3e8ba6.  v0:= "No previous condition. Before you can assign an alias, you must first have a condition." @kind object;
  #L3e8baa.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8bb0.  throw v6;
}
procedure `io.objectbox.query.QueryBuilder` `sort`(`io.objectbox.query.QueryBuilder` v0 @kind this, `java.util.Comparator` v1 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.sort:(Ljava/util/Comparator;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3e8bc4.  v0.`io.objectbox.query.QueryBuilder.i` @type ^`java.util.Comparator` := v1 @kind object;
  #L3e8bc8.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `startsWith`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.startsWith:(Lio/objectbox/Property;Ljava/lang/String;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8bdc.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8be2.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8be6.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8bec.  v3:= temp;
  #L3e8bee.  v5:= 0I;
  #L3e8bf0.  v0:= v6 @kind object;
  #L3e8bf2.  v4:= v8 @kind object;
  #L3e8bf4.  call temp:= `nativeStartsWith`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeStartsWith:(JILjava/lang/String;Z)J` @kind direct;
  #L3e8bfa.  v7:= temp @kind wide;
  #L3e8bfc.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8c02.  return v6 @kind object;
}
procedure `io.objectbox.query.QueryBuilder` `startsWith`(`io.objectbox.query.QueryBuilder` v6 @kind this, `io.objectbox.Property` v7 @kind object, `java.lang.String` v8 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v9 @kind object) @signature `Lio/objectbox/query/QueryBuilder;.startsWith:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8c14.  call `d`(v6) @signature `Lio/objectbox/query/QueryBuilder;.d:()V` @kind direct;
  #L3e8c1a.  v1:= v6.`io.objectbox.query.QueryBuilder.c` @type ^`long` @kind wide;
  #L3e8c1e.  call temp:= `getId`(v7) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e8c24.  v3:= temp;
  #L3e8c26.  v7:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_SENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e8c2a.  if v9 != v7 then goto L3e8c34;
  #L3e8c2e.  v7:= 1I;
  #L3e8c30.  v5:= 1I;
  #L3e8c32.  goto L3e8c38;
  #L3e8c34.  v7:= 0I;
  #L3e8c36.  v5:= 0I;
  #L3e8c38.  v0:= v6 @kind object;
  #L3e8c3a.  v4:= v8 @kind object;
  #L3e8c3c.  call temp:= `nativeStartsWith`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/query/QueryBuilder;.nativeStartsWith:(JILjava/lang/String;Z)J` @kind direct;
  #L3e8c42.  v7:= temp @kind wide;
  #L3e8c44.  call `a`(v6, v7) @signature `Lio/objectbox/query/QueryBuilder;.a:(J)V` @kind direct;
  #L3e8c4a.  return v6 @kind object;
}
