record `io.objectbox.query.QueryCondition$PropertyCondition` @kind class @AccessFlag PUBLIC extends `io.objectbox.query.QueryCondition$AbstractCondition` @kind class {
  `io.objectbox.query.QueryCondition$PropertyCondition$Operation` `io.objectbox.query.QueryCondition$PropertyCondition.a` @AccessFlag PRIVATE_FINAL;
  `io.objectbox.Property` `io.objectbox.query.QueryCondition$PropertyCondition.property` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`io.objectbox.query.QueryCondition$PropertyCondition` v0 @kind this, `io.objectbox.Property` v1 @kind object, `io.objectbox.query.QueryCondition$PropertyCondition$Operation` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e9234.  call temp:= `a`(v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.a:(Lio/objectbox/Property;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e923a.  v3:= temp @kind object;
  #L3e923c.  call `<init>`(v0, v3) @signature `Lio/objectbox/query/QueryCondition$AbstractCondition;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e9242.  v0.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` := v1 @kind object;
  #L3e9246.  v0.`io.objectbox.query.QueryCondition$PropertyCondition.a` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` := v2 @kind object;
  #L3e924a.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.query.QueryCondition$PropertyCondition` v0 @kind this, `io.objectbox.Property` v1 @kind object, `io.objectbox.query.QueryCondition$PropertyCondition$Operation` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e925c.  call temp:= `b`(v1, v2, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.b:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L3e9262.  v3:= temp @kind object;
  #L3e9264.  call `<init>`(v0, v3) @signature `Lio/objectbox/query/QueryCondition$AbstractCondition;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L3e926a.  v0.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` := v1 @kind object;
  #L3e926e.  v0.`io.objectbox.query.QueryCondition$PropertyCondition.a` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` := v2 @kind object;
  #L3e9272.  return @kind void;
}
procedure `java.lang.Object` `a`(`io.objectbox.Property` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.a:(Lio/objectbox/Property;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e9048.  if v3 == 0 then goto L3e9072;
  #L3e904c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e9052.  v0:= temp @kind object;
  #L3e9054.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3e905a.  v0:= temp;
  #L3e905c.  if v0 != 0 then goto L3e9062;
  #L3e9060.  goto L3e9072;
  #L3e9062.  v2:= new `io.objectbox.exception.DbException`;
  #L3e9066.  v3:= "Illegal value: found array, but simple object required" @kind object;
  #L3e906a.  call `<init>`(v2, v3) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e9070.  throw v2;
  #L3e9072.  v2:= v2.`io.objectbox.Property.type` @type ^`java.lang.Class` @kind object;
  #L3e9076.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L3e907a.  if v2 != v0 then goto L3e90d4;
  #L3e907e.  v2:= instanceof @variable v3 @type ^`java.util.Date` @kind boolean;
  #L3e9082.  if v2 == 0 then goto L3e909c;
  #L3e9086.  v3:= (`java.util.Date`) v3 @kind object;
  #L3e908a.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e9090.  v2:= temp @kind wide;
  #L3e9092.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3e9098.  v2:= temp @kind object;
  #L3e909a.  return v2 @kind object;
  #L3e909c.  v2:= instanceof @variable v3 @type ^`java.lang.Long` @kind boolean;
  #L3e90a0.  if v2 == 0 then goto L3e90a6;
  #L3e90a4.  return v3 @kind object;
  #L3e90a6.  v2:= new `io.objectbox.exception.DbException`;
  #L3e90aa.  v0:= new `java.lang.StringBuilder`;
  #L3e90ae.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e90b4.  v1:= "Illegal date value: expected java.util.Date or Long for value " @kind object;
  #L3e90b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e90be.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e90c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e90ca.  v3:= temp @kind object;
  #L3e90cc.  call `<init>`(v2, v3) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e90d2.  throw v2;
  #L3e90d4.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3e90d8.  if v2 == v0 then goto L3e90e4;
  #L3e90dc.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L3e90e0.  if v2 != v0 then goto L3e91c4;
  #L3e90e4.  v2:= instanceof @variable v3 @type ^`java.lang.Boolean` @kind boolean;
  #L3e90e8.  if v2 == 0 then goto L3e9102;
  #L3e90ec.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L3e90f0.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3e90f6.  v2:= temp;
  #L3e90f8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e90fe.  v2:= temp @kind object;
  #L3e9100.  return v2 @kind object;
  #L3e9102.  v2:= instanceof @variable v3 @type ^`java.lang.Number` @kind boolean;
  #L3e9106.  v0:= 1I;
  #L3e9108.  if v2 == 0 then goto L3e9152;
  #L3e910c.  v2:= v3 @kind object;
  #L3e910e.  v2:= (`java.lang.Number`) v2 @kind object;
  #L3e9112.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3e9118.  v2:= temp;
  #L3e911a.  if v2 == 0 then goto L3e91c4;
  #L3e911e.  if v2 != v0 then goto L3e9124;
  #L3e9122.  goto L3e91c4;
  #L3e9124.  v2:= new `io.objectbox.exception.DbException`;
  #L3e9128.  v0:= new `java.lang.StringBuilder`;
  #L3e912c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e9132.  v1:= "Illegal boolean value: numbers must be 0 or 1, but was " @kind object;
  #L3e9136.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e913c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e9142.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e9148.  v3:= temp @kind object;
  #L3e914a.  call `<init>`(v2, v3) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e9150.  throw v2;
  #L3e9152.  v2:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L3e9156.  if v2 == 0 then goto L3e91c4;
  #L3e915a.  v2:= v3 @kind object;
  #L3e915c.  v2:= (`java.lang.String`) v2 @kind object;
  #L3e9160.  v1:= "TRUE" @kind object;
  #L3e9164.  call temp:= `equalsIgnoreCase`(v1, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e916a.  v1:= temp;
  #L3e916c.  if v1 == 0 then goto L3e917a;
  #L3e9170.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9176.  v2:= temp @kind object;
  #L3e9178.  return v2 @kind object;
  #L3e917a.  v0:= "FALSE" @kind object;
  #L3e917e.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e9184.  v2:= temp;
  #L3e9186.  if v2 == 0 then goto L3e9196;
  #L3e918a.  v2:= 0I;
  #L3e918c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9192.  v2:= temp @kind object;
  #L3e9194.  return v2 @kind object;
  #L3e9196.  v2:= new `io.objectbox.exception.DbException`;
  #L3e919a.  v0:= new `java.lang.StringBuilder`;
  #L3e919e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e91a4.  v1:= "Illegal boolean value: Strings must be \"TRUE\" or \"FALSE\" (case insensitive), but was " @kind object;
  #L3e91a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e91ae.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e91b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e91ba.  v3:= temp @kind object;
  #L3e91bc.  call `<init>`(v2, v3) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e91c2.  throw v2;
  #L3e91c4.  return v3 @kind object;
}
procedure `java.lang.Object`[] `b`(`io.objectbox.Property` v1 @kind object, `io.objectbox.query.QueryCondition$PropertyCondition$Operation` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.b:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e91d8.  if v3 != 0 then goto L3e9202;
  #L3e91dc.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IS_NULL` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e91e0.  if v2 == v1 then goto L3e91fe;
  #L3e91e4.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IS_NOT_NULL` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e91e8.  if v2 != v1 then goto L3e91ee;
  #L3e91ec.  goto L3e91fe;
  #L3e91ee.  v1:= new `java.lang.IllegalArgumentException`;
  #L3e91f2.  v2:= "This operation requires non-null values." @kind object;
  #L3e91f6.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e91fc.  throw v1;
  #L3e91fe.  v1:= 0I;
  #L3e9200.  return v1 @kind object;
  #L3e9202.  v2:= 0I;
  #L3e9204.  v0:= length @variable v3;
  #L3e9206.  if v2 >= v0 then goto L3e9220;
  #L3e920a.  v0:= v3[v2] @kind object;
  #L3e920e.  call temp:= `a`(v1, v0) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.a:(Lio/objectbox/Property;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e9214.  v0:= temp @kind object;
  #L3e9216.  v3[v2]:= v0 @kind object;
  #L3e921a.  v2:= v2 + 1;
  #L3e921e.  goto L3e9204;
  #L3e9220.  return v3 @kind object;
}
procedure `void` `applyTo`(`io.objectbox.query.QueryCondition$PropertyCondition` v9 @kind this, `io.objectbox.query.QueryBuilder` v10 @kind object, `io.objectbox.query.QueryBuilder$StringOrder` v11 @kind object) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.applyTo:(Lio/objectbox/query/QueryBuilder;Lio/objectbox/query/QueryBuilder$StringOrder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e9284.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.a` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e9288.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.EQUALS` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e928c.  if v0 != v1 then goto L3e92f4;
  #L3e9290.  v0:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.value` @type ^`java.lang.Object` @kind object;
  #L3e9294.  v1:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L3e9298.  if v1 == 0 then goto L3e92b6;
  #L3e929c.  v11:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e92a0.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e92a4.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e92aa.  v0:= temp @kind wide;
  #L3e92ac.  call temp:= `equal`(v10, v11, v0) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e92b2.  goto L3e96e0;
  #L3e92b6.  v1:= instanceof @variable v0 @type ^`java.lang.Integer` @kind boolean;
  #L3e92ba.  if v1 == 0 then goto L3e92da;
  #L3e92be.  v11:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e92c2.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3e92c6.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e92cc.  v0:= temp;
  #L3e92ce.  v0:= (`long`) v0 @kind i2l;
  #L3e92d0.  call temp:= `equal`(v10, v11, v0) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e92d6.  goto L3e96e0;
  #L3e92da.  v1:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L3e92de.  if v1 == 0 then goto L3e96e0;
  #L3e92e2.  v1:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e92e6.  v0:= (`java.lang.String`) v0 @kind object;
  #L3e92ea.  call temp:= `equal`(v10, v1, v0, v11) @signature `Lio/objectbox/query/QueryBuilder;.equal:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e92f0.  goto L3e96e0;
  #L3e92f4.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.NOT_EQUALS` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e92f8.  if v0 != v1 then goto L3e9360;
  #L3e92fc.  v0:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.value` @type ^`java.lang.Object` @kind object;
  #L3e9300.  v1:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L3e9304.  if v1 == 0 then goto L3e9322;
  #L3e9308.  v11:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e930c.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e9310.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e9316.  v0:= temp @kind wide;
  #L3e9318.  call temp:= `notEqual`(v10, v11, v0) @signature `Lio/objectbox/query/QueryBuilder;.notEqual:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e931e.  goto L3e96e0;
  #L3e9322.  v1:= instanceof @variable v0 @type ^`java.lang.Integer` @kind boolean;
  #L3e9326.  if v1 == 0 then goto L3e9346;
  #L3e932a.  v11:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e932e.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3e9332.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e9338.  v0:= temp;
  #L3e933a.  v0:= (`long`) v0 @kind i2l;
  #L3e933c.  call temp:= `notEqual`(v10, v11, v0) @signature `Lio/objectbox/query/QueryBuilder;.notEqual:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9342.  goto L3e96e0;
  #L3e9346.  v1:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L3e934a.  if v1 == 0 then goto L3e96e0;
  #L3e934e.  v1:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9352.  v0:= (`java.lang.String`) v0 @kind object;
  #L3e9356.  call temp:= `notEqual`(v10, v1, v0, v11) @signature `Lio/objectbox/query/QueryBuilder;.notEqual:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e935c.  goto L3e96e0;
  #L3e9360.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.BETWEEN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e9364.  v2:= 0I;
  #L3e9366.  if v0 != v1 then goto L3e94a8;
  #L3e936a.  v11:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3e936e.  v0:= v11[v2] @kind object;
  #L3e9372.  v0:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L3e9376.  v1:= 1I;
  #L3e9378.  if v0 == 0 then goto L3e93bc;
  #L3e937c.  v0:= v11[v1] @kind object;
  #L3e9380.  v0:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L3e9384.  if v0 == 0 then goto L3e93bc;
  #L3e9388.  v4:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e938c.  v11:= v11[v2] @kind object;
  #L3e9390.  v11:= (`java.lang.Long`) v11 @kind object;
  #L3e9394.  call temp:= `longValue`(v11) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e939a.  v5:= temp @kind wide;
  #L3e939c.  v11:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3e93a0.  v11:= v11[v1] @kind object;
  #L3e93a4.  v11:= (`java.lang.Long`) v11 @kind object;
  #L3e93a8.  call temp:= `longValue`(v11) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e93ae.  v7:= temp @kind wide;
  #L3e93b0.  v3:= v10 @kind object;
  #L3e93b2.  call temp:= `between`(v3, v4, v5, v7) @signature `Lio/objectbox/query/QueryBuilder;.between:(Lio/objectbox/Property;JJ)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e93b8.  goto L3e96e0;
  #L3e93bc.  v0:= v11[v2] @kind object;
  #L3e93c0.  v0:= instanceof @variable v0 @type ^`java.lang.Integer` @kind boolean;
  #L3e93c4.  if v0 == 0 then goto L3e940c;
  #L3e93c8.  v0:= v11[v1] @kind object;
  #L3e93cc.  v0:= instanceof @variable v0 @type ^`java.lang.Integer` @kind boolean;
  #L3e93d0.  if v0 == 0 then goto L3e940c;
  #L3e93d4.  v4:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e93d8.  v11:= v11[v2] @kind object;
  #L3e93dc.  v11:= (`java.lang.Integer`) v11 @kind object;
  #L3e93e0.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e93e6.  v11:= temp;
  #L3e93e8.  v5:= (`long`) v11 @kind i2l;
  #L3e93ea.  v11:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3e93ee.  v11:= v11[v1] @kind object;
  #L3e93f2.  v11:= (`java.lang.Integer`) v11 @kind object;
  #L3e93f6.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e93fc.  v11:= temp;
  #L3e93fe.  v7:= (`long`) v11 @kind i2l;
  #L3e9400.  v3:= v10 @kind object;
  #L3e9402.  call temp:= `between`(v3, v4, v5, v7) @signature `Lio/objectbox/query/QueryBuilder;.between:(Lio/objectbox/Property;JJ)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9408.  goto L3e96e0;
  #L3e940c.  v0:= v11[v2] @kind object;
  #L3e9410.  v0:= instanceof @variable v0 @type ^`java.lang.Double` @kind boolean;
  #L3e9414.  if v0 == 0 then goto L3e9458;
  #L3e9418.  v0:= v11[v1] @kind object;
  #L3e941c.  v0:= instanceof @variable v0 @type ^`java.lang.Double` @kind boolean;
  #L3e9420.  if v0 == 0 then goto L3e9458;
  #L3e9424.  v4:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9428.  v11:= v11[v2] @kind object;
  #L3e942c.  v11:= (`java.lang.Double`) v11 @kind object;
  #L3e9430.  call temp:= `doubleValue`(v11) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e9436.  v5:= temp @kind wide;
  #L3e9438.  v11:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3e943c.  v11:= v11[v1] @kind object;
  #L3e9440.  v11:= (`java.lang.Double`) v11 @kind object;
  #L3e9444.  call temp:= `doubleValue`(v11) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e944a.  v7:= temp @kind wide;
  #L3e944c.  v3:= v10 @kind object;
  #L3e944e.  call temp:= `between`(v3, v4, v5, v7) @signature `Lio/objectbox/query/QueryBuilder;.between:(Lio/objectbox/Property;DD)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9454.  goto L3e96e0;
  #L3e9458.  v0:= v11[v2] @kind object;
  #L3e945c.  v0:= instanceof @variable v0 @type ^`java.lang.Float` @kind boolean;
  #L3e9460.  if v0 == 0 then goto L3e96e0;
  #L3e9464.  v0:= v11[v1] @kind object;
  #L3e9468.  v0:= instanceof @variable v0 @type ^`java.lang.Float` @kind boolean;
  #L3e946c.  if v0 == 0 then goto L3e96e0;
  #L3e9470.  v4:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9474.  v11:= v11[v2] @kind object;
  #L3e9478.  v11:= (`java.lang.Float`) v11 @kind object;
  #L3e947c.  call temp:= `floatValue`(v11) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3e9482.  v11:= temp;
  #L3e9484.  v5:= (`double`) v11 @kind f2d;
  #L3e9486.  v11:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3e948a.  v11:= v11[v1] @kind object;
  #L3e948e.  v11:= (`java.lang.Float`) v11 @kind object;
  #L3e9492.  call temp:= `floatValue`(v11) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3e9498.  v11:= temp;
  #L3e949a.  v7:= (`double`) v11 @kind f2d;
  #L3e949c.  v3:= v10 @kind object;
  #L3e949e.  call temp:= `between`(v3, v4, v5, v7) @signature `Lio/objectbox/query/QueryBuilder;.between:(Lio/objectbox/Property;DD)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e94a4.  goto L3e96e0;
  #L3e94a8.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e94ac.  if v0 != v1 then goto L3e953c;
  #L3e94b0.  v11:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3e94b4.  v0:= v11[v2] @kind object;
  #L3e94b8.  v0:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L3e94bc.  if v0 == 0 then goto L3e94f8;
  #L3e94c0.  v11:= length @variable v11;
  #L3e94c2.  v11:= new `long`[v11];
  #L3e94c6.  v0:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3e94ca.  v1:= length @variable v0;
  #L3e94cc.  if v2 >= v1 then goto L3e94ea;
  #L3e94d0.  v0:= v0[v2] @kind object;
  #L3e94d4.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e94d8.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e94de.  v0:= temp @kind wide;
  #L3e94e0.  v11[v2]:= v0 @kind wide;
  #L3e94e4.  v2:= v2 + 1;
  #L3e94e8.  goto L3e94c6;
  #L3e94ea.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e94ee.  call temp:= `in`(v10, v0, v11) @signature `Lio/objectbox/query/QueryBuilder;.in:(Lio/objectbox/Property;[J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e94f4.  goto L3e96e0;
  #L3e94f8.  v0:= v11[v2] @kind object;
  #L3e94fc.  v0:= instanceof @variable v0 @type ^`java.lang.Integer` @kind boolean;
  #L3e9500.  if v0 == 0 then goto L3e96e0;
  #L3e9504.  v11:= length @variable v11;
  #L3e9506.  v11:= new `int`[v11];
  #L3e950a.  v0:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3e950e.  v1:= length @variable v0;
  #L3e9510.  if v2 >= v1 then goto L3e952e;
  #L3e9514.  v0:= v0[v2] @kind object;
  #L3e9518.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3e951c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e9522.  v0:= temp;
  #L3e9524.  v11[v2]:= v0;
  #L3e9528.  v2:= v2 + 1;
  #L3e952c.  goto L3e950a;
  #L3e952e.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9532.  call temp:= `in`(v10, v0, v11) @signature `Lio/objectbox/query/QueryBuilder;.in:(Lio/objectbox/Property;[I)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9538.  goto L3e96e0;
  #L3e953c.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.GREATER_THAN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e9540.  if v0 != v1 then goto L3e95d4;
  #L3e9544.  v11:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.value` @type ^`java.lang.Object` @kind object;
  #L3e9548.  v0:= instanceof @variable v11 @type ^`java.lang.Long` @kind boolean;
  #L3e954c.  if v0 == 0 then goto L3e956a;
  #L3e9550.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9554.  v11:= (`java.lang.Long`) v11 @kind object;
  #L3e9558.  call temp:= `longValue`(v11) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e955e.  v1:= temp @kind wide;
  #L3e9560.  call temp:= `greater`(v10, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9566.  goto L3e96e0;
  #L3e956a.  v0:= instanceof @variable v11 @type ^`java.lang.Integer` @kind boolean;
  #L3e956e.  if v0 == 0 then goto L3e958e;
  #L3e9572.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9576.  v11:= (`java.lang.Integer`) v11 @kind object;
  #L3e957a.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e9580.  v11:= temp;
  #L3e9582.  v1:= (`long`) v11 @kind i2l;
  #L3e9584.  call temp:= `greater`(v10, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e958a.  goto L3e96e0;
  #L3e958e.  v0:= instanceof @variable v11 @type ^`java.lang.Double` @kind boolean;
  #L3e9592.  if v0 == 0 then goto L3e95b0;
  #L3e9596.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e959a.  v11:= (`java.lang.Double`) v11 @kind object;
  #L3e959e.  call temp:= `doubleValue`(v11) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e95a4.  v1:= temp @kind wide;
  #L3e95a6.  call temp:= `greater`(v10, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;D)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e95ac.  goto L3e96e0;
  #L3e95b0.  v0:= instanceof @variable v11 @type ^`java.lang.Float` @kind boolean;
  #L3e95b4.  if v0 == 0 then goto L3e96e0;
  #L3e95b8.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e95bc.  v11:= (`java.lang.Float`) v11 @kind object;
  #L3e95c0.  call temp:= `floatValue`(v11) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3e95c6.  v11:= temp;
  #L3e95c8.  v1:= (`double`) v11 @kind f2d;
  #L3e95ca.  call temp:= `greater`(v10, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.greater:(Lio/objectbox/Property;D)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e95d0.  goto L3e96e0;
  #L3e95d4.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.LESS_THAN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e95d8.  if v0 != v1 then goto L3e9666;
  #L3e95dc.  v11:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.value` @type ^`java.lang.Object` @kind object;
  #L3e95e0.  v0:= instanceof @variable v11 @type ^`java.lang.Long` @kind boolean;
  #L3e95e4.  if v0 == 0 then goto L3e9602;
  #L3e95e8.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e95ec.  v11:= (`java.lang.Long`) v11 @kind object;
  #L3e95f0.  call temp:= `longValue`(v11) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e95f6.  v1:= temp @kind wide;
  #L3e95f8.  call temp:= `less`(v10, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e95fe.  goto L3e96e0;
  #L3e9602.  v0:= instanceof @variable v11 @type ^`java.lang.Integer` @kind boolean;
  #L3e9606.  if v0 == 0 then goto L3e9624;
  #L3e960a.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e960e.  v11:= (`java.lang.Integer`) v11 @kind object;
  #L3e9612.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e9618.  v11:= temp;
  #L3e961a.  v1:= (`long`) v11 @kind i2l;
  #L3e961c.  call temp:= `less`(v10, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;J)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9622.  goto L3e96e0;
  #L3e9624.  v0:= instanceof @variable v11 @type ^`java.lang.Double` @kind boolean;
  #L3e9628.  if v0 == 0 then goto L3e9644;
  #L3e962c.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9630.  v11:= (`java.lang.Double`) v11 @kind object;
  #L3e9634.  call temp:= `doubleValue`(v11) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e963a.  v1:= temp @kind wide;
  #L3e963c.  call temp:= `less`(v10, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;D)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9642.  goto L3e96e0;
  #L3e9644.  v0:= instanceof @variable v11 @type ^`java.lang.Float` @kind boolean;
  #L3e9648.  if v0 == 0 then goto L3e96e0;
  #L3e964c.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9650.  v11:= (`java.lang.Float`) v11 @kind object;
  #L3e9654.  call temp:= `floatValue`(v11) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3e965a.  v11:= temp;
  #L3e965c.  v1:= (`double`) v11 @kind f2d;
  #L3e965e.  call temp:= `less`(v10, v0, v1) @signature `Lio/objectbox/query/QueryBuilder;.less:(Lio/objectbox/Property;D)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9664.  goto L3e96e0;
  #L3e9666.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IS_NULL` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e966a.  if v0 != v1 then goto L3e967a;
  #L3e966e.  v11:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9672.  call temp:= `isNull`(v10, v11) @signature `Lio/objectbox/query/QueryBuilder;.isNull:(Lio/objectbox/Property;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e9678.  goto L3e96e0;
  #L3e967a.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IS_NOT_NULL` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e967e.  if v0 != v1 then goto L3e968e;
  #L3e9682.  v11:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9686.  call temp:= `notNull`(v10, v11) @signature `Lio/objectbox/query/QueryBuilder;.notNull:(Lio/objectbox/Property;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e968c.  goto L3e96e0;
  #L3e968e.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.CONTAINS` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e9692.  if v0 != v1 then goto L3e96aa;
  #L3e9696.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e969a.  v1:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.value` @type ^`java.lang.Object` @kind object;
  #L3e969e.  v1:= (`java.lang.String`) v1 @kind object;
  #L3e96a2.  call temp:= `contains`(v10, v0, v1, v11) @signature `Lio/objectbox/query/QueryBuilder;.contains:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e96a8.  goto L3e96e0;
  #L3e96aa.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.STARTS_WITH` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e96ae.  if v0 != v1 then goto L3e96c6;
  #L3e96b2.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e96b6.  v1:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.value` @type ^`java.lang.Object` @kind object;
  #L3e96ba.  v1:= (`java.lang.String`) v1 @kind object;
  #L3e96be.  call temp:= `startsWith`(v10, v0, v1, v11) @signature `Lio/objectbox/query/QueryBuilder;.startsWith:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e96c4.  goto L3e96e0;
  #L3e96c6.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.ENDS_WITH` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e96ca.  if v0 != v1 then goto L3e96e2;
  #L3e96ce.  v0:= v9.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e96d2.  v1:= v9.`io.objectbox.query.QueryCondition$AbstractCondition.value` @type ^`java.lang.Object` @kind object;
  #L3e96d6.  v1:= (`java.lang.String`) v1 @kind object;
  #L3e96da.  call temp:= `endsWith`(v10, v0, v1, v11) @signature `Lio/objectbox/query/QueryBuilder;.endsWith:(Lio/objectbox/Property;Ljava/lang/String;Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/QueryBuilder;` @kind virtual;
  #L3e96e0.  return @kind void;
  #L3e96e2.  v10:= new `java.lang.UnsupportedOperationException`;
  #L3e96e6.  v11:= "This operation is not known." @kind object;
  #L3e96ea.  call `<init>`(v10, v11) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e96f0.  throw v10;
}
procedure `void` `setParameterFor`(`io.objectbox.query.QueryCondition$PropertyCondition` v3 @kind this, `io.objectbox.query.Query` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.setParameterFor:(Lio/objectbox/query/Query;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9704.  if v5 == 0 then goto L3e97e8;
  #L3e9708.  v0:= v3.`io.objectbox.query.QueryCondition$PropertyCondition.a` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e970c.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.BETWEEN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e9710.  if v0 == v1 then goto L3e97d8;
  #L3e9714.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e9718.  if v0 == v1 then goto L3e97c8;
  #L3e971c.  v0:= instanceof @variable v5 @type ^`java.lang.Long` @kind boolean;
  #L3e9720.  if v0 == 0 then goto L3e973c;
  #L3e9724.  v0:= v3.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9728.  v5:= (`java.lang.Long`) v5 @kind object;
  #L3e972c.  call temp:= `longValue`(v5) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e9732.  v1:= temp @kind wide;
  #L3e9734.  call temp:= `setParameter`(v4, v0, v1) @signature `Lio/objectbox/query/Query;.setParameter:(Lio/objectbox/Property;J)Lio/objectbox/query/Query;` @kind virtual;
  #L3e973a.  goto L3e97b6;
  #L3e973c.  v0:= instanceof @variable v5 @type ^`java.lang.Integer` @kind boolean;
  #L3e9740.  if v0 == 0 then goto L3e975e;
  #L3e9744.  v0:= v3.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9748.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L3e974c.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e9752.  v5:= temp;
  #L3e9754.  v1:= (`long`) v5 @kind i2l;
  #L3e9756.  call temp:= `setParameter`(v4, v0, v1) @signature `Lio/objectbox/query/Query;.setParameter:(Lio/objectbox/Property;J)Lio/objectbox/query/Query;` @kind virtual;
  #L3e975c.  goto L3e97b6;
  #L3e975e.  v0:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L3e9762.  if v0 == 0 then goto L3e9776;
  #L3e9766.  v0:= v3.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e976a.  v5:= (`java.lang.String`) v5 @kind object;
  #L3e976e.  call temp:= `setParameter`(v4, v0, v5) @signature `Lio/objectbox/query/Query;.setParameter:(Lio/objectbox/Property;Ljava/lang/String;)Lio/objectbox/query/Query;` @kind virtual;
  #L3e9774.  goto L3e97b6;
  #L3e9776.  v0:= instanceof @variable v5 @type ^`java.lang.Double` @kind boolean;
  #L3e977a.  if v0 == 0 then goto L3e9796;
  #L3e977e.  v0:= v3.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9782.  v5:= (`java.lang.Double`) v5 @kind object;
  #L3e9786.  call temp:= `doubleValue`(v5) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e978c.  v1:= temp @kind wide;
  #L3e978e.  call temp:= `setParameter`(v4, v0, v1) @signature `Lio/objectbox/query/Query;.setParameter:(Lio/objectbox/Property;D)Lio/objectbox/query/Query;` @kind virtual;
  #L3e9794.  goto L3e97b6;
  #L3e9796.  v0:= instanceof @variable v5 @type ^`java.lang.Float` @kind boolean;
  #L3e979a.  if v0 == 0 then goto L3e97b8;
  #L3e979e.  v0:= v3.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e97a2.  v5:= (`java.lang.Float`) v5 @kind object;
  #L3e97a6.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3e97ac.  v5:= temp;
  #L3e97ae.  v1:= (`double`) v5 @kind f2d;
  #L3e97b0.  call temp:= `setParameter`(v4, v0, v1) @signature `Lio/objectbox/query/Query;.setParameter:(Lio/objectbox/Property;D)Lio/objectbox/query/Query;` @kind virtual;
  #L3e97b6.  return @kind void;
  #L3e97b8.  v4:= new `java.lang.IllegalArgumentException`;
  #L3e97bc.  v5:= "Only LONG, INTEGER, DOUBLE, FLOAT or STRING parameters are supported." @kind object;
  #L3e97c0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e97c6.  throw v4;
  #L3e97c8.  v4:= new `java.lang.UnsupportedOperationException`;
  #L3e97cc.  v5:= "The IN condition does not support changing parameters." @kind object;
  #L3e97d0.  call `<init>`(v4, v5) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e97d6.  throw v4;
  #L3e97d8.  v4:= new `java.lang.UnsupportedOperationException`;
  #L3e97dc.  v5:= "The BETWEEN condition requires two parameters." @kind object;
  #L3e97e0.  call `<init>`(v4, v5) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e97e6.  throw v4;
  #L3e97e8.  v4:= new `java.lang.IllegalArgumentException`;
  #L3e97ec.  v5:= "The new parameter can not be null." @kind object;
  #L3e97f0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e97f6.  throw v4;
}
procedure `void` `setParameterFor`(`io.objectbox.query.QueryCondition$PropertyCondition` v7 @kind this, `io.objectbox.query.Query` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.setParameterFor:(Lio/objectbox/query/Query;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e9808.  if v9 == 0 then goto L3e991c;
  #L3e980c.  if v10 == 0 then goto L3e991c;
  #L3e9810.  v0:= v7.`io.objectbox.query.QueryCondition$PropertyCondition.a` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e9814.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.BETWEEN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e9818.  if v0 != v1 then goto L3e990c;
  #L3e981c.  v0:= instanceof @variable v9 @type ^`java.lang.Long` @kind boolean;
  #L3e9820.  if v0 == 0 then goto L3e9852;
  #L3e9824.  v0:= instanceof @variable v10 @type ^`java.lang.Long` @kind boolean;
  #L3e9828.  if v0 == 0 then goto L3e9852;
  #L3e982c.  v2:= v7.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9830.  v9:= (`java.lang.Long`) v9 @kind object;
  #L3e9834.  call temp:= `longValue`(v9) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e983a.  v3:= temp @kind wide;
  #L3e983c.  v10:= (`java.lang.Long`) v10 @kind object;
  #L3e9840.  call temp:= `longValue`(v10) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e9846.  v5:= temp @kind wide;
  #L3e9848.  v1:= v8 @kind object;
  #L3e984a.  call temp:= `setParameters`(v1, v2, v3, v5) @signature `Lio/objectbox/query/Query;.setParameters:(Lio/objectbox/Property;JJ)Lio/objectbox/query/Query;` @kind virtual;
  #L3e9850.  goto L3e98fa;
  #L3e9852.  v0:= instanceof @variable v9 @type ^`java.lang.Integer` @kind boolean;
  #L3e9856.  if v0 == 0 then goto L3e988c;
  #L3e985a.  v0:= instanceof @variable v10 @type ^`java.lang.Integer` @kind boolean;
  #L3e985e.  if v0 == 0 then goto L3e988c;
  #L3e9862.  v2:= v7.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e9866.  v9:= (`java.lang.Integer`) v9 @kind object;
  #L3e986a.  call temp:= `intValue`(v9) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e9870.  v9:= temp;
  #L3e9872.  v3:= (`long`) v9 @kind i2l;
  #L3e9874.  v10:= (`java.lang.Integer`) v10 @kind object;
  #L3e9878.  call temp:= `intValue`(v10) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e987e.  v9:= temp;
  #L3e9880.  v5:= (`long`) v9 @kind i2l;
  #L3e9882.  v1:= v8 @kind object;
  #L3e9884.  call temp:= `setParameters`(v1, v2, v3, v5) @signature `Lio/objectbox/query/Query;.setParameters:(Lio/objectbox/Property;JJ)Lio/objectbox/query/Query;` @kind virtual;
  #L3e988a.  goto L3e98fa;
  #L3e988c.  v0:= instanceof @variable v9 @type ^`java.lang.Double` @kind boolean;
  #L3e9890.  if v0 == 0 then goto L3e98c2;
  #L3e9894.  v0:= instanceof @variable v10 @type ^`java.lang.Double` @kind boolean;
  #L3e9898.  if v0 == 0 then goto L3e98c2;
  #L3e989c.  v2:= v7.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e98a0.  v9:= (`java.lang.Double`) v9 @kind object;
  #L3e98a4.  call temp:= `doubleValue`(v9) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e98aa.  v3:= temp @kind wide;
  #L3e98ac.  v10:= (`java.lang.Double`) v10 @kind object;
  #L3e98b0.  call temp:= `doubleValue`(v10) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e98b6.  v5:= temp @kind wide;
  #L3e98b8.  v1:= v8 @kind object;
  #L3e98ba.  call temp:= `setParameters`(v1, v2, v3, v5) @signature `Lio/objectbox/query/Query;.setParameters:(Lio/objectbox/Property;DD)Lio/objectbox/query/Query;` @kind virtual;
  #L3e98c0.  goto L3e98fa;
  #L3e98c2.  v0:= instanceof @variable v9 @type ^`java.lang.Float` @kind boolean;
  #L3e98c6.  if v0 == 0 then goto L3e98fc;
  #L3e98ca.  v0:= instanceof @variable v10 @type ^`java.lang.Float` @kind boolean;
  #L3e98ce.  if v0 == 0 then goto L3e98fc;
  #L3e98d2.  v2:= v7.`io.objectbox.query.QueryCondition$PropertyCondition.property` @type ^`io.objectbox.Property` @kind object;
  #L3e98d6.  v9:= (`java.lang.Float`) v9 @kind object;
  #L3e98da.  call temp:= `floatValue`(v9) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3e98e0.  v9:= temp;
  #L3e98e2.  v3:= (`double`) v9 @kind f2d;
  #L3e98e4.  v10:= (`java.lang.Float`) v10 @kind object;
  #L3e98e8.  call temp:= `floatValue`(v10) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3e98ee.  v9:= temp;
  #L3e98f0.  v5:= (`double`) v9 @kind f2d;
  #L3e98f2.  v1:= v8 @kind object;
  #L3e98f4.  call temp:= `setParameters`(v1, v2, v3, v5) @signature `Lio/objectbox/query/Query;.setParameters:(Lio/objectbox/Property;DD)Lio/objectbox/query/Query;` @kind virtual;
  #L3e98fa.  return @kind void;
  #L3e98fc.  v8:= new `java.lang.IllegalArgumentException`;
  #L3e9900.  v9:= "The BETWEEN condition only supports LONG, INTEGER, DOUBLE or FLOAT parameters." @kind object;
  #L3e9904.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e990a.  throw v8;
  #L3e990c.  v8:= new `java.lang.UnsupportedOperationException`;
  #L3e9910.  v9:= "Only the BETWEEN condition supports two parameters." @kind object;
  #L3e9914.  call `<init>`(v8, v9) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e991a.  throw v8;
  #L3e991c.  v8:= new `java.lang.IllegalArgumentException`;
  #L3e9920.  v9:= "The new parameters can not be null." @kind object;
  #L3e9924.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e992a.  throw v8;
}
