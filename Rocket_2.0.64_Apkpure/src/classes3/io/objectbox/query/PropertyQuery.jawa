record `io.objectbox.query.PropertyQuery` @kind class @AccessFlag PUBLIC {
  `io.objectbox.query.Query` `io.objectbox.query.PropertyQuery.a` @AccessFlag FINAL;
  `long` `io.objectbox.query.PropertyQuery.b` @AccessFlag FINAL;
  `io.objectbox.Property` `io.objectbox.query.PropertyQuery.c` @AccessFlag FINAL;
  `int` `io.objectbox.query.PropertyQuery.d` @AccessFlag FINAL;
  `boolean` `io.objectbox.query.PropertyQuery.e` @AccessFlag ;
  `boolean` `io.objectbox.query.PropertyQuery.f` @AccessFlag ;
  `boolean` `io.objectbox.query.PropertyQuery.g` @AccessFlag ;
  `boolean` `io.objectbox.query.PropertyQuery.h` @AccessFlag ;
  `double` `io.objectbox.query.PropertyQuery.i` @AccessFlag ;
  `float` `io.objectbox.query.PropertyQuery.j` @AccessFlag ;
  `java.lang.String` `io.objectbox.query.PropertyQuery.k` @AccessFlag ;
  `long` `io.objectbox.query.PropertyQuery.l` @AccessFlag ;
}
procedure `void` `<init>`(`io.objectbox.query.PropertyQuery` v2 @kind this, `io.objectbox.query.Query` v3 @kind object, `io.objectbox.Property` v4 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.<init>:(Lio/objectbox/query/Query;Lio/objectbox/Property;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e79c0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e79c6.  v0:= 1I;
  #L3e79c8.  v2.`io.objectbox.query.PropertyQuery.f` @type ^`boolean` := v0 @kind boolean;
  #L3e79cc.  v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` := v3 @kind object;
  #L3e79d0.  v0:= v3.`io.objectbox.query.Query.h` @type ^`long` @kind wide;
  #L3e79d4.  v2.`io.objectbox.query.PropertyQuery.b` @type ^`long` := v0 @kind wide;
  #L3e79d8.  v2.`io.objectbox.query.PropertyQuery.c` @type ^`io.objectbox.Property` := v4 @kind object;
  #L3e79dc.  v3:= v4.`io.objectbox.Property.id` @type ^`int`;
  #L3e79e0.  v2.`io.objectbox.query.PropertyQuery.d` @type ^`int` := v3;
  #L3e79e4.  return @kind void;
}
procedure `float`[] `A`(`io.objectbox.query.PropertyQuery` v9 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.A:()[F` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e6f5c.  v1:= v9.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e6f60.  v0:= v9.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6f64.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e6f6a.  v3:= temp @kind wide;
  #L3e6f6c.  v5:= v9.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e6f70.  v6:= v9.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e6f74.  v7:= v9.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e6f78.  v8:= v9.`io.objectbox.query.PropertyQuery.j` @type ^`float`;
  #L3e6f7c.  v0:= v9 @kind object;
  #L3e6f7e.  call temp:= `nativeFindFloats`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindFloats:(JJIZZF)[F` @kind virtual;
  #L3e6f84.  v0:= temp @kind object;
  #L3e6f86.  return v0 @kind object;
}
procedure `int`[] `B`(`io.objectbox.query.PropertyQuery` v10 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.B:()[I` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e6fe0.  v1:= v10.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e6fe4.  v0:= v10.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6fe8.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e6fee.  v3:= temp @kind wide;
  #L3e6ff0.  v5:= v10.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e6ff4.  v6:= v10.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e6ff8.  v7:= v10.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e6ffc.  v8:= v10.`io.objectbox.query.PropertyQuery.l` @type ^`long` @kind wide;
  #L3e7000.  v8:= (`int`) v8 @kind l2i;
  #L3e7002.  v0:= v10 @kind object;
  #L3e7004.  call temp:= `nativeFindInts`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindInts:(JJIZZI)[I` @kind virtual;
  #L3e700a.  v0:= temp @kind object;
  #L3e700c.  return v0 @kind object;
}
procedure `long`[] `C`(`io.objectbox.query.PropertyQuery` v10 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.C:()[J` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e78fc.  v1:= v10.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e7900.  v0:= v10.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7904.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e790a.  v3:= temp @kind wide;
  #L3e790c.  v5:= v10.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e7910.  v6:= v10.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e7914.  v7:= v10.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e7918.  v8:= v10.`io.objectbox.query.PropertyQuery.l` @type ^`long` @kind wide;
  #L3e791c.  v0:= v10 @kind object;
  #L3e791e.  call temp:= `nativeFindLongs`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindLongs:(JJIZZJ)[J` @kind virtual;
  #L3e7924.  v0:= temp @kind object;
  #L3e7926.  return v0 @kind object;
}
procedure `java.lang.Object` `D`(`io.objectbox.query.PropertyQuery` v14 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.D:()Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3e7604.  v1:= v14.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e7608.  v0:= v14.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e760c.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e7612.  v3:= temp @kind wide;
  #L3e7614.  v5:= v14.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e7618.  v6:= v14.`io.objectbox.query.PropertyQuery.h` @type ^`boolean` @kind boolean;
  #L3e761c.  v7:= v14.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e7620.  v8:= v14.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e7624.  v9:= v14.`io.objectbox.query.PropertyQuery.l` @type ^`long` @kind wide;
  #L3e7628.  v11:= v14.`io.objectbox.query.PropertyQuery.j` @type ^`float`;
  #L3e762c.  v12:= v14.`io.objectbox.query.PropertyQuery.i` @type ^`double` @kind wide;
  #L3e7630.  v0:= v14 @kind object;
  #L3e7632.  call temp:= `nativeFindNumber`(v0, v1, v3, v5, v6, v7, v8, v9, v11, v12) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindNumber:(JJIZZZJFD)Ljava/lang/Object;` @kind virtual;
  #L3e7638.  v0:= temp @kind object;
  #L3e763a.  return v0 @kind object;
}
procedure `short`[] `E`(`io.objectbox.query.PropertyQuery` v10 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.E:()[S` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e7980.  v1:= v10.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e7984.  v0:= v10.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7988.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e798e.  v3:= temp @kind wide;
  #L3e7990.  v5:= v10.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e7994.  v6:= v10.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e7998.  v7:= v10.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e799c.  v8:= v10.`io.objectbox.query.PropertyQuery.l` @type ^`long` @kind wide;
  #L3e79a0.  v0:= (`int`) v8 @kind l2i;
  #L3e79a2.  v8:= (`short`) v0 @kind i2s;
  #L3e79a4.  v0:= v10 @kind object;
  #L3e79a6.  call temp:= `nativeFindShorts`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindShorts:(JJIZZS)[S` @kind virtual;
  #L3e79ac.  v0:= temp @kind object;
  #L3e79ae.  return v0 @kind object;
}
procedure `java.lang.String` `F`(`io.objectbox.query.PropertyQuery` v12 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.F:()Ljava/lang/String;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3e76b4.  v0:= v12.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e76b8.  if v0 == 0 then goto L3e76ca;
  #L3e76bc.  v0:= v12.`io.objectbox.query.PropertyQuery.f` @type ^`boolean` @kind boolean;
  #L3e76c0.  if v0 != 0 then goto L3e76ca;
  #L3e76c4.  v0:= 1I;
  #L3e76c6.  v9:= 1I;
  #L3e76c8.  goto L3e76ce;
  #L3e76ca.  v0:= 0I;
  #L3e76cc.  v9:= 0I;
  #L3e76ce.  v2:= v12.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e76d2.  v0:= v12.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e76d6.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e76dc.  v4:= temp @kind wide;
  #L3e76de.  v6:= v12.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e76e2.  v7:= v12.`io.objectbox.query.PropertyQuery.h` @type ^`boolean` @kind boolean;
  #L3e76e6.  v8:= v12.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e76ea.  v10:= v12.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e76ee.  v11:= v12.`io.objectbox.query.PropertyQuery.k` @type ^`java.lang.String` @kind object;
  #L3e76f2.  v1:= v12 @kind object;
  #L3e76f4.  call temp:= `nativeFindString`(v1, v2, v4, v6, v7, v8, v9, v10, v11) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindString:(JJIZZZZLjava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e76fa.  v0:= temp @kind object;
  #L3e76fc.  return v0 @kind object;
}
procedure `java.lang.String`[] `G`(`io.objectbox.query.PropertyQuery` v11 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.G:()[Ljava/lang/String;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3e7758.  v0:= v11.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e775c.  if v0 == 0 then goto L3e776e;
  #L3e7760.  v0:= v11.`io.objectbox.query.PropertyQuery.f` @type ^`boolean` @kind boolean;
  #L3e7764.  if v0 == 0 then goto L3e776e;
  #L3e7768.  v0:= 1I;
  #L3e776a.  v8:= 1I;
  #L3e776c.  goto L3e7772;
  #L3e776e.  v0:= 0I;
  #L3e7770.  v8:= 0I;
  #L3e7772.  v0:= v11.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7776.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e777c.  v4:= temp @kind wide;
  #L3e777e.  v2:= v11.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e7782.  v6:= v11.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e7786.  v7:= v11.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e778a.  v9:= v11.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e778e.  v10:= v11.`io.objectbox.query.PropertyQuery.k` @type ^`java.lang.String` @kind object;
  #L3e7792.  v1:= v11 @kind object;
  #L3e7794.  call temp:= `nativeFindStrings`(v1, v2, v4, v6, v7, v8, v9, v10) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindStrings:(JJIZZZLjava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3e779a.  v0:= temp @kind object;
  #L3e779c.  return v0 @kind object;
}
procedure `java.lang.Long` `H`(`io.objectbox.query.PropertyQuery` v6 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.H:()Ljava/lang/Long;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7518.  v1:= v6.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e751c.  v0:= v6.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7520.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e7526.  v3:= temp @kind wide;
  #L3e7528.  v5:= v6.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e752c.  v0:= v6 @kind object;
  #L3e752e.  call temp:= `nativeMax`(v0, v1, v3, v5) @signature `Lio/objectbox/query/PropertyQuery;.nativeMax:(JJI)J` @kind virtual;
  #L3e7534.  v0:= temp @kind wide;
  #L3e7536.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3e753c.  v0:= temp @kind object;
  #L3e753e.  return v0 @kind object;
}
procedure `java.lang.Double` `I`(`io.objectbox.query.PropertyQuery` v6 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.I:()Ljava/lang/Double;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7310.  v1:= v6.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e7314.  v0:= v6.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7318.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e731e.  v3:= temp @kind wide;
  #L3e7320.  v5:= v6.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e7324.  v0:= v6 @kind object;
  #L3e7326.  call temp:= `nativeMaxDouble`(v0, v1, v3, v5) @signature `Lio/objectbox/query/PropertyQuery;.nativeMaxDouble:(JJI)D` @kind virtual;
  #L3e732c.  v0:= temp @kind wide;
  #L3e732e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e7334.  v0:= temp @kind object;
  #L3e7336.  return v0 @kind object;
}
procedure `java.lang.Long` `J`(`io.objectbox.query.PropertyQuery` v6 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.J:()Ljava/lang/Long;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7550.  v1:= v6.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e7554.  v0:= v6.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7558.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e755e.  v3:= temp @kind wide;
  #L3e7560.  v5:= v6.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e7564.  v0:= v6 @kind object;
  #L3e7566.  call temp:= `nativeMin`(v0, v1, v3, v5) @signature `Lio/objectbox/query/PropertyQuery;.nativeMin:(JJI)J` @kind virtual;
  #L3e756c.  v0:= temp @kind wide;
  #L3e756e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3e7574.  v0:= temp @kind object;
  #L3e7576.  return v0 @kind object;
}
procedure `java.lang.Double` `K`(`io.objectbox.query.PropertyQuery` v6 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.K:()Ljava/lang/Double;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7348.  v1:= v6.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e734c.  v0:= v6.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7350.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e7356.  v3:= temp @kind wide;
  #L3e7358.  v5:= v6.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e735c.  v0:= v6 @kind object;
  #L3e735e.  call temp:= `nativeMinDouble`(v0, v1, v3, v5) @signature `Lio/objectbox/query/PropertyQuery;.nativeMinDouble:(JJI)D` @kind virtual;
  #L3e7364.  v0:= temp @kind wide;
  #L3e7366.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e736c.  v0:= temp @kind object;
  #L3e736e.  return v0 @kind object;
}
procedure `java.lang.Long` `L`(`io.objectbox.query.PropertyQuery` v6 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.L:()Ljava/lang/Long;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7588.  v1:= v6.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e758c.  v0:= v6.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7590.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e7596.  v3:= temp @kind wide;
  #L3e7598.  v5:= v6.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e759c.  v0:= v6 @kind object;
  #L3e759e.  call temp:= `nativeSum`(v0, v1, v3, v5) @signature `Lio/objectbox/query/PropertyQuery;.nativeSum:(JJI)J` @kind virtual;
  #L3e75a4.  v0:= temp @kind wide;
  #L3e75a6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3e75ac.  v0:= temp @kind object;
  #L3e75ae.  return v0 @kind object;
}
procedure `java.lang.Double` `M`(`io.objectbox.query.PropertyQuery` v6 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.M:()Ljava/lang/Double;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7380.  v1:= v6.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e7384.  v0:= v6.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7388.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e738e.  v3:= temp @kind wide;
  #L3e7390.  v5:= v6.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e7394.  v0:= v6 @kind object;
  #L3e7396.  call temp:= `nativeSumDouble`(v0, v1, v3, v5) @signature `Lio/objectbox/query/PropertyQuery;.nativeSumDouble:(JJI)D` @kind virtual;
  #L3e739c.  v0:= temp @kind wide;
  #L3e739e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e73a4.  v0:= temp @kind object;
  #L3e73a6.  return v0 @kind object;
}
procedure `byte`[] `a`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.a:(Lio/objectbox/query/PropertyQuery;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e6cb0.  call temp:= `x`(v0) @signature `Lio/objectbox/query/PropertyQuery;.x:()[B` @kind direct;
  #L3e6cb6.  v0:= temp @kind object;
  #L3e6cb8.  return v0 @kind object;
}
procedure `java.lang.Long` `b`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.b:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e73f8.  call temp:= `L`(v0) @signature `Lio/objectbox/query/PropertyQuery;.L:()Ljava/lang/Long;` @kind direct;
  #L3e73fe.  v0:= temp @kind object;
  #L3e7400.  return v0 @kind object;
}
procedure `short`[] `c`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.c:(Lio/objectbox/query/PropertyQuery;)[S` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e7938.  call temp:= `E`(v0) @signature `Lio/objectbox/query/PropertyQuery;.E:()[S` @kind direct;
  #L3e793e.  v0:= temp @kind object;
  #L3e7940.  return v0 @kind object;
}
procedure `java.lang.Double` `d`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.d:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e7248.  call temp:= `I`(v0) @signature `Lio/objectbox/query/PropertyQuery;.I:()Ljava/lang/Double;` @kind direct;
  #L3e724e.  v0:= temp @kind object;
  #L3e7250.  return v0 @kind object;
}
procedure `int`[] `e`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.e:(Lio/objectbox/query/PropertyQuery;)[I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e6f98.  call temp:= `B`(v0) @signature `Lio/objectbox/query/PropertyQuery;.B:()[I` @kind direct;
  #L3e6f9e.  v0:= temp @kind object;
  #L3e6fa0.  return v0 @kind object;
}
procedure `java.lang.Double` `f`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.f:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e7264.  call temp:= `M`(v0) @signature `Lio/objectbox/query/PropertyQuery;.M:()Ljava/lang/Double;` @kind direct;
  #L3e726a.  v0:= temp @kind object;
  #L3e726c.  return v0 @kind object;
}
procedure `java.lang.Long` `g`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.g:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e7414.  call temp:= `v`(v0) @signature `Lio/objectbox/query/PropertyQuery;.v:()Ljava/lang/Long;` @kind direct;
  #L3e741a.  v0:= temp @kind object;
  #L3e741c.  return v0 @kind object;
}
procedure `java.lang.Double` `h`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.h:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e7280.  call temp:= `u`(v0) @signature `Lio/objectbox/query/PropertyQuery;.u:()Ljava/lang/Double;` @kind direct;
  #L3e7286.  v0:= temp @kind object;
  #L3e7288.  return v0 @kind object;
}
procedure `java.lang.String`[] `i`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.i:(Lio/objectbox/query/PropertyQuery;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e7710.  call temp:= `G`(v0) @signature `Lio/objectbox/query/PropertyQuery;.G:()[Ljava/lang/String;` @kind direct;
  #L3e7716.  v0:= temp @kind object;
  #L3e7718.  return v0 @kind object;
}
procedure `long`[] `j`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.j:(Lio/objectbox/query/PropertyQuery;)[J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e78b4.  call temp:= `C`(v0) @signature `Lio/objectbox/query/PropertyQuery;.C:()[J` @kind direct;
  #L3e78ba.  v0:= temp @kind object;
  #L3e78bc.  return v0 @kind object;
}
procedure `char`[] `k`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.k:(Lio/objectbox/query/PropertyQuery;)[C` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e6d38.  call temp:= `y`(v0) @signature `Lio/objectbox/query/PropertyQuery;.y:()[C` @kind direct;
  #L3e6d3e.  v0:= temp @kind object;
  #L3e6d40.  return v0 @kind object;
}
procedure `java.lang.Long` `l`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.l:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e7430.  call temp:= `H`(v0) @signature `Lio/objectbox/query/PropertyQuery;.H:()Ljava/lang/Long;` @kind direct;
  #L3e7436.  v0:= temp @kind object;
  #L3e7438.  return v0 @kind object;
}
procedure `java.lang.Object` `m`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.m:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e75c0.  call temp:= `D`(v0) @signature `Lio/objectbox/query/PropertyQuery;.D:()Ljava/lang/Object;` @kind direct;
  #L3e75c6.  v0:= temp @kind object;
  #L3e75c8.  return v0 @kind object;
}
procedure `java.lang.Long` `n`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.n:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e744c.  call temp:= `w`(v0) @signature `Lio/objectbox/query/PropertyQuery;.w:()Ljava/lang/Long;` @kind direct;
  #L3e7452.  v0:= temp @kind object;
  #L3e7454.  return v0 @kind object;
}
procedure `float`[] `o`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.o:(Lio/objectbox/query/PropertyQuery;)[F` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e6f14.  call temp:= `A`(v0) @signature `Lio/objectbox/query/PropertyQuery;.A:()[F` @kind direct;
  #L3e6f1a.  v0:= temp @kind object;
  #L3e6f1c.  return v0 @kind object;
}
procedure `java.lang.String` `p`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.p:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e766c.  call temp:= `F`(v0) @signature `Lio/objectbox/query/PropertyQuery;.F:()Ljava/lang/String;` @kind direct;
  #L3e7672.  v0:= temp @kind object;
  #L3e7674.  return v0 @kind object;
}
procedure `java.lang.Double` `q`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.q:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e729c.  call temp:= `K`(v0) @signature `Lio/objectbox/query/PropertyQuery;.K:()Ljava/lang/Double;` @kind direct;
  #L3e72a2.  v0:= temp @kind object;
  #L3e72a4.  return v0 @kind object;
}
procedure `java.lang.Long` `r`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.r:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e7468.  call temp:= `J`(v0) @signature `Lio/objectbox/query/PropertyQuery;.J:()Ljava/lang/Long;` @kind direct;
  #L3e746e.  v0:= temp @kind object;
  #L3e7470.  return v0 @kind object;
}
procedure `double`[] `s`(`io.objectbox.query.PropertyQuery` v0 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.s:(Lio/objectbox/query/PropertyQuery;)[D` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e6e90.  call temp:= `z`(v0) @signature `Lio/objectbox/query/PropertyQuery;.z:()[D` @kind direct;
  #L3e6e96.  v0:= temp @kind object;
  #L3e6e98.  return v0 @kind object;
}
procedure `java.lang.Object` `t`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e75dc.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e75e0.  v1:= new `io.objectbox.query.f`;
  #L3e75e4.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/f;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e75ea.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e75f0.  v0:= temp @kind object;
  #L3e75f2.  return v0 @kind object;
}
procedure `java.lang.Double` `u`(`io.objectbox.query.PropertyQuery` v6 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.u:()Ljava/lang/Double;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e72d8.  v1:= v6.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e72dc.  v0:= v6.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e72e0.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e72e6.  v3:= temp @kind wide;
  #L3e72e8.  v5:= v6.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e72ec.  v0:= v6 @kind object;
  #L3e72ee.  call temp:= `nativeAvg`(v0, v1, v3, v5) @signature `Lio/objectbox/query/PropertyQuery;.nativeAvg:(JJI)D` @kind virtual;
  #L3e72f4.  v0:= temp @kind wide;
  #L3e72f6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e72fc.  v0:= temp @kind object;
  #L3e72fe.  return v0 @kind object;
}
procedure `java.lang.Long` `v`(`io.objectbox.query.PropertyQuery` v6 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.v:()Ljava/lang/Long;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e74a4.  v1:= v6.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e74a8.  v0:= v6.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e74ac.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e74b2.  v3:= temp @kind wide;
  #L3e74b4.  v5:= v6.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e74b8.  v0:= v6 @kind object;
  #L3e74ba.  call temp:= `nativeAvgLong`(v0, v1, v3, v5) @signature `Lio/objectbox/query/PropertyQuery;.nativeAvgLong:(JJI)J` @kind virtual;
  #L3e74c0.  v0:= temp @kind wide;
  #L3e74c2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3e74c8.  v0:= temp @kind object;
  #L3e74ca.  return v0 @kind object;
}
procedure `java.lang.Long` `w`(`io.objectbox.query.PropertyQuery` v7 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.w:()Ljava/lang/Long;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e74dc.  v1:= v7.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e74e0.  v0:= v7.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e74e4.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e74ea.  v3:= temp @kind wide;
  #L3e74ec.  v5:= v7.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e74f0.  v6:= v7.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e74f4.  v0:= v7 @kind object;
  #L3e74f6.  call temp:= `nativeCount`(v0, v1, v3, v5, v6) @signature `Lio/objectbox/query/PropertyQuery;.nativeCount:(JJIZ)J` @kind virtual;
  #L3e74fc.  v0:= temp @kind wide;
  #L3e74fe.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3e7504.  v0:= temp @kind object;
  #L3e7506.  return v0 @kind object;
}
procedure `byte`[] `x`(`io.objectbox.query.PropertyQuery` v10 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.x:()[B` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e6cf8.  v1:= v10.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e6cfc.  v0:= v10.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6d00.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e6d06.  v3:= temp @kind wide;
  #L3e6d08.  v5:= v10.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e6d0c.  v6:= v10.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e6d10.  v7:= v10.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e6d14.  v8:= v10.`io.objectbox.query.PropertyQuery.l` @type ^`long` @kind wide;
  #L3e6d18.  v0:= (`int`) v8 @kind l2i;
  #L3e6d1a.  v8:= (`byte`) v0 @kind i2b;
  #L3e6d1c.  v0:= v10 @kind object;
  #L3e6d1e.  call temp:= `nativeFindBytes`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindBytes:(JJIZZB)[B` @kind virtual;
  #L3e6d24.  v0:= temp @kind object;
  #L3e6d26.  return v0 @kind object;
}
procedure `char`[] `y`(`io.objectbox.query.PropertyQuery` v10 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.y:()[C` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e6d80.  v1:= v10.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e6d84.  v0:= v10.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6d88.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e6d8e.  v3:= temp @kind wide;
  #L3e6d90.  v5:= v10.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e6d94.  v6:= v10.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e6d98.  v7:= v10.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e6d9c.  v8:= v10.`io.objectbox.query.PropertyQuery.l` @type ^`long` @kind wide;
  #L3e6da0.  v0:= (`int`) v8 @kind l2i;
  #L3e6da2.  v8:= (`char`) v0 @kind i2c;
  #L3e6da4.  v0:= v10 @kind object;
  #L3e6da6.  call temp:= `nativeFindChars`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindChars:(JJIZZC)[C` @kind virtual;
  #L3e6dac.  v0:= temp @kind object;
  #L3e6dae.  return v0 @kind object;
}
procedure `double`[] `z`(`io.objectbox.query.PropertyQuery` v10 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.z:()[D` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e6ed8.  v1:= v10.`io.objectbox.query.PropertyQuery.b` @type ^`long` @kind wide;
  #L3e6edc.  v0:= v10.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6ee0.  call temp:= `j`(v0) @signature `Lio/objectbox/query/Query;.j:()J` @kind virtual;
  #L3e6ee6.  v3:= temp @kind wide;
  #L3e6ee8.  v5:= v10.`io.objectbox.query.PropertyQuery.d` @type ^`int`;
  #L3e6eec.  v6:= v10.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` @kind boolean;
  #L3e6ef0.  v7:= v10.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` @kind boolean;
  #L3e6ef4.  v8:= v10.`io.objectbox.query.PropertyQuery.i` @type ^`double` @kind wide;
  #L3e6ef8.  v0:= v10 @kind object;
  #L3e6efa.  call temp:= `nativeFindDoubles`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindDoubles:(JJIZZD)[D` @kind virtual;
  #L3e6f00.  v0:= temp @kind object;
  #L3e6f02.  return v0 @kind object;
}
procedure `double` `avg`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.avg:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6dc0.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6dc4.  v1:= new `io.objectbox.query.s`;
  #L3e6dc8.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/s;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6dce.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6dd4.  v0:= temp @kind object;
  #L3e6dd6.  v0:= (`java.lang.Double`) v0 @kind object;
  #L3e6dda.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e6de0.  v0:= temp @kind wide;
  #L3e6de2.  return v0 @kind wide;
}
procedure `long` `avgLong`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.avgLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e77b0.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e77b4.  v1:= new `io.objectbox.query.r`;
  #L3e77b8.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/r;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e77be.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e77c4.  v0:= temp @kind object;
  #L3e77c6.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e77ca.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e77d0.  v0:= temp @kind wide;
  #L3e77d2.  return v0 @kind wide;
}
procedure `long` `count`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.count:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e77e4.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e77e8.  v1:= new `io.objectbox.query.g`;
  #L3e77ec.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/g;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e77f2.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e77f8.  v0:= temp @kind object;
  #L3e77fa.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e77fe.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e7804.  v0:= temp @kind wide;
  #L3e7806.  return v0 @kind wide;
}
procedure `io.objectbox.query.PropertyQuery` `distinct`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.distinct:()Lio/objectbox/query/PropertyQuery;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7020.  v0:= 1I;
  #L3e7022.  v1.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` := v0 @kind boolean;
  #L3e7026.  return v1 @kind object;
}
procedure `io.objectbox.query.PropertyQuery` `distinct`(`io.objectbox.query.PropertyQuery` v2 @kind this, `io.objectbox.query.QueryBuilder$StringOrder` v3 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.distinct:(Lio/objectbox/query/QueryBuilder$StringOrder;)Lio/objectbox/query/PropertyQuery;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7038.  v0:= v2.`io.objectbox.query.PropertyQuery.c` @type ^`io.objectbox.Property` @kind object;
  #L3e703c.  v0:= v0.`io.objectbox.Property.type` @type ^`java.lang.Class` @kind object;
  #L3e7040.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L3e7044.  if v0 != v1 then goto L3e7060;
  #L3e7048.  v0:= 1I;
  #L3e704a.  v2.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` := v0 @kind boolean;
  #L3e704e.  v1:= `@@io.objectbox.query.QueryBuilder$StringOrder.CASE_INSENSITIVE` @type ^`io.objectbox.query.QueryBuilder$StringOrder` @kind object;
  #L3e7052.  if v3 != v1 then goto L3e7058;
  #L3e7056.  goto L3e705a;
  #L3e7058.  v0:= 0I;
  #L3e705a.  v2.`io.objectbox.query.PropertyQuery.f` @type ^`boolean` := v0 @kind boolean;
  #L3e705e.  return v2 @kind object;
  #L3e7060.  v3:= new `java.lang.RuntimeException`;
  #L3e7064.  v0:= new `java.lang.StringBuilder`;
  #L3e7068.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e706e.  v1:= "Reserved for string properties, but got " @kind object;
  #L3e7072.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7078.  v1:= v2.`io.objectbox.query.PropertyQuery.c` @type ^`io.objectbox.Property` @kind object;
  #L3e707c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7082.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7088.  v0:= temp @kind object;
  #L3e708a.  call `<init>`(v3, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7090.  throw v3;
}
procedure `java.lang.Boolean` `findBoolean`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findBoolean:()Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e71e8.  call temp:= `t`(v1) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @kind direct;
  #L3e71ee.  v0:= temp @kind object;
  #L3e71f0.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L3e71f4.  return v0 @kind object;
}
procedure `java.lang.Byte` `findByte`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findByte:()Ljava/lang/Byte;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7208.  call temp:= `t`(v1) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @kind direct;
  #L3e720e.  v0:= temp @kind object;
  #L3e7210.  v0:= (`java.lang.Byte`) v0 @kind object;
  #L3e7214.  return v0 @kind object;
}
procedure `byte`[] `findBytes`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findBytes:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6ccc.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6cd0.  v1:= new `io.objectbox.query.c`;
  #L3e6cd4.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/c;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6cda.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6ce0.  v0:= temp @kind object;
  #L3e6ce2.  v0:= (`byte`[]) v0 @kind object;
  #L3e6ce6.  return v0 @kind object;
}
procedure `java.lang.Character` `findChar`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findChar:()Ljava/lang/Character;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7228.  call temp:= `t`(v1) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @kind direct;
  #L3e722e.  v0:= temp @kind object;
  #L3e7230.  v0:= (`java.lang.Character`) v0 @kind object;
  #L3e7234.  return v0 @kind object;
}
procedure `char`[] `findChars`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findChars:()[C` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6d54.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6d58.  v1:= new `io.objectbox.query.d`;
  #L3e6d5c.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/d;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6d62.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6d68.  v0:= temp @kind object;
  #L3e6d6a.  v0:= (`char`[]) v0 @kind object;
  #L3e6d6e.  return v0 @kind object;
}
procedure `java.lang.Double` `findDouble`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findDouble:()Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e72b8.  call temp:= `t`(v1) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @kind direct;
  #L3e72be.  v0:= temp @kind object;
  #L3e72c0.  v0:= (`java.lang.Double`) v0 @kind object;
  #L3e72c4.  return v0 @kind object;
}
procedure `double`[] `findDoubles`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findDoubles:()[D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6eac.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6eb0.  v1:= new `io.objectbox.query.l`;
  #L3e6eb4.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/l;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6eba.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6ec0.  v0:= temp @kind object;
  #L3e6ec2.  v0:= (`double`[]) v0 @kind object;
  #L3e6ec6.  return v0 @kind object;
}
procedure `java.lang.Float` `findFloat`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findFloat:()Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e73b8.  call temp:= `t`(v1) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @kind direct;
  #L3e73be.  v0:= temp @kind object;
  #L3e73c0.  v0:= (`java.lang.Float`) v0 @kind object;
  #L3e73c4.  return v0 @kind object;
}
procedure `float`[] `findFloats`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findFloats:()[F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6f30.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6f34.  v1:= new `io.objectbox.query.h`;
  #L3e6f38.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/h;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6f3e.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6f44.  v0:= temp @kind object;
  #L3e6f46.  v0:= (`float`[]) v0 @kind object;
  #L3e6f4a.  return v0 @kind object;
}
procedure `java.lang.Integer` `findInt`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findInt:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e73d8.  call temp:= `t`(v1) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @kind direct;
  #L3e73de.  v0:= temp @kind object;
  #L3e73e0.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3e73e4.  return v0 @kind object;
}
procedure `int`[] `findInts`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findInts:()[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6fb4.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6fb8.  v1:= new `io.objectbox.query.p`;
  #L3e6fbc.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/p;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6fc2.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6fc8.  v0:= temp @kind object;
  #L3e6fca.  v0:= (`int`[]) v0 @kind object;
  #L3e6fce.  return v0 @kind object;
}
procedure `java.lang.Long` `findLong`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findLong:()Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7484.  call temp:= `t`(v1) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @kind direct;
  #L3e748a.  v0:= temp @kind object;
  #L3e748c.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e7490.  return v0 @kind object;
}
procedure `long`[] `findLongs`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findLongs:()[J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e78d0.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e78d4.  v1:= new `io.objectbox.query.u`;
  #L3e78d8.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/u;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e78de.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e78e4.  v0:= temp @kind object;
  #L3e78e6.  v0:= (`long`[]) v0 @kind object;
  #L3e78ea.  return v0 @kind object;
}
procedure `java.lang.Short` `findShort`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findShort:()Ljava/lang/Short;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e764c.  call temp:= `t`(v1) @signature `Lio/objectbox/query/PropertyQuery;.t:()Ljava/lang/Object;` @kind direct;
  #L3e7652.  v0:= temp @kind object;
  #L3e7654.  v0:= (`java.lang.Short`) v0 @kind object;
  #L3e7658.  return v0 @kind object;
}
procedure `short`[] `findShorts`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findShorts:()[S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7954.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7958.  v1:= new `io.objectbox.query.n`;
  #L3e795c.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/n;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e7962.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e7968.  v0:= temp @kind object;
  #L3e796a.  v0:= (`short`[]) v0 @kind object;
  #L3e796e.  return v0 @kind object;
}
procedure `java.lang.String` `findString`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7688.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e768c.  v1:= new `io.objectbox.query.i`;
  #L3e7690.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/i;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e7696.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e769c.  v0:= temp @kind object;
  #L3e769e.  v0:= (`java.lang.String`) v0 @kind object;
  #L3e76a2.  return v0 @kind object;
}
procedure `java.lang.String`[] `findStrings`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.findStrings:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e772c.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7730.  v1:= new `io.objectbox.query.t`;
  #L3e7734.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/t;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e773a.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e7740.  v0:= temp @kind object;
  #L3e7742.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L3e7746.  return v0 @kind object;
}
procedure `long` `max`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.max:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7818.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e781c.  v1:= new `io.objectbox.query.e`;
  #L3e7820.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/e;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e7826.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e782c.  v0:= temp @kind object;
  #L3e782e.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e7832.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e7838.  v0:= temp @kind wide;
  #L3e783a.  return v0 @kind wide;
}
procedure `double` `maxDouble`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.maxDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6df4.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6df8.  v1:= new `io.objectbox.query.o`;
  #L3e6dfc.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/o;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6e02.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6e08.  v0:= temp @kind object;
  #L3e6e0a.  v0:= (`java.lang.Double`) v0 @kind object;
  #L3e6e0e.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e6e14.  v0:= temp @kind wide;
  #L3e6e16.  return v0 @kind wide;
}
procedure `long` `min`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.min:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e784c.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7850.  v1:= new `io.objectbox.query.k`;
  #L3e7854.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/k;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e785a.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e7860.  v0:= temp @kind object;
  #L3e7862.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e7866.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e786c.  v0:= temp @kind wide;
  #L3e786e.  return v0 @kind wide;
}
procedure `double` `minDouble`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.minDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6e28.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6e2c.  v1:= new `io.objectbox.query.j`;
  #L3e6e30.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/j;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6e36.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6e3c.  v0:= temp @kind object;
  #L3e6e3e.  v0:= (`java.lang.Double`) v0 @kind object;
  #L3e6e42.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e6e48.  v0:= temp @kind wide;
  #L3e6e4a.  return v0 @kind wide;
}
procedure `double` `nativeAvg`(`long` v0 , `long` v2 , `int` v4 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeAvg:(JJI)D` @AccessFlag NATIVE {

  # return;
}
procedure `long` `nativeAvgLong`(`long` v0 , `long` v2 , `int` v4 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeAvgLong:(JJI)J` @AccessFlag NATIVE {

  # return;
}
procedure `long` `nativeCount`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeCount:(JJIZ)J` @AccessFlag NATIVE {

  # return;
}
procedure `byte`[] `nativeFindBytes`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `byte` v7 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindBytes:(JJIZZB)[B` @AccessFlag NATIVE {

  # return;
}
procedure `char`[] `nativeFindChars`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `char` v7 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindChars:(JJIZZC)[C` @AccessFlag NATIVE {

  # return;
}
procedure `double`[] `nativeFindDoubles`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `double` v7 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindDoubles:(JJIZZD)[D` @AccessFlag NATIVE {

  # return;
}
procedure `float`[] `nativeFindFloats`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `float` v7 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindFloats:(JJIZZF)[F` @AccessFlag NATIVE {

  # return;
}
procedure `int`[] `nativeFindInts`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `int` v7 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindInts:(JJIZZI)[I` @AccessFlag NATIVE {

  # return;
}
procedure `long`[] `nativeFindLongs`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `long` v7 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindLongs:(JJIZZJ)[J` @AccessFlag NATIVE {

  # return;
}
procedure `java.lang.Object` `nativeFindNumber`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `long` v8 , `float` v10 , `double` v11 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindNumber:(JJIZZZJFD)Ljava/lang/Object;` @AccessFlag NATIVE {

  # return;
}
procedure `short`[] `nativeFindShorts`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `short` v7 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindShorts:(JJIZZS)[S` @AccessFlag NATIVE {

  # return;
}
procedure `java.lang.String` `nativeFindString`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `boolean` v8 , `java.lang.String` v9 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindString:(JJIZZZZLjava/lang/String;)Ljava/lang/String;` @AccessFlag NATIVE {

  # return;
}
procedure `java.lang.String`[] `nativeFindStrings`(`long` v0 , `long` v2 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `java.lang.String` v8 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.nativeFindStrings:(JJIZZZLjava/lang/String;)[Ljava/lang/String;` @AccessFlag NATIVE {

  # return;
}
procedure `long` `nativeMax`(`long` v0 , `long` v2 , `int` v4 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeMax:(JJI)J` @AccessFlag NATIVE {

  # return;
}
procedure `double` `nativeMaxDouble`(`long` v0 , `long` v2 , `int` v4 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeMaxDouble:(JJI)D` @AccessFlag NATIVE {

  # return;
}
procedure `long` `nativeMin`(`long` v0 , `long` v2 , `int` v4 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeMin:(JJI)J` @AccessFlag NATIVE {

  # return;
}
procedure `double` `nativeMinDouble`(`long` v0 , `long` v2 , `int` v4 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeMinDouble:(JJI)D` @AccessFlag NATIVE {

  # return;
}
procedure `long` `nativeSum`(`long` v0 , `long` v2 , `int` v4 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeSum:(JJI)J` @AccessFlag NATIVE {

  # return;
}
procedure `double` `nativeSumDouble`(`long` v0 , `long` v2 , `int` v4 ) @signature `Lio/objectbox/query/PropertyQuery;.nativeSumDouble:(JJI)D` @AccessFlag NATIVE {

  # return;
}
procedure `io.objectbox.query.PropertyQuery` `nullValue`(`io.objectbox.query.PropertyQuery` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/objectbox/query/PropertyQuery;.nullValue:(Ljava/lang/Object;)Lio/objectbox/query/PropertyQuery;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e70a4.  if v6 == 0 then goto L3e716a;
  #L3e70a8.  v0:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L3e70ac.  v1:= instanceof @variable v6 @type ^`java.lang.Number` @kind boolean;
  #L3e70b0.  if v0 != 0 then goto L3e70f0;
  #L3e70b4.  if v1 == 0 then goto L3e70ba;
  #L3e70b8.  goto L3e70f0;
  #L3e70ba.  v0:= new `java.lang.IllegalArgumentException`;
  #L3e70be.  v1:= new `java.lang.StringBuilder`;
  #L3e70c2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e70c8.  v2:= "Unsupported value class: " @kind object;
  #L3e70cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e70d2.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e70d8.  v6:= temp @kind object;
  #L3e70da.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e70e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e70e6.  v6:= temp @kind object;
  #L3e70e8.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e70ee.  throw v0;
  #L3e70f0.  v2:= 1I;
  #L3e70f2.  v5.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` := v2 @kind boolean;
  #L3e70f6.  if v0 == 0 then goto L3e7102;
  #L3e70fa.  v0:= v6 @kind object;
  #L3e70fc.  v0:= (`java.lang.String`) v0 @kind object;
  #L3e7100.  goto L3e7104;
  #L3e7102.  v0:= 0I;
  #L3e7104.  v5.`io.objectbox.query.PropertyQuery.k` @type ^`java.lang.String` := v0 @kind object;
  #L3e7108.  v0:= instanceof @variable v6 @type ^`java.lang.Float` @kind boolean;
  #L3e710c.  if v0 == 0 then goto L3e7120;
  #L3e7110.  v2:= v6 @kind object;
  #L3e7112.  v2:= (`java.lang.Float`) v2 @kind object;
  #L3e7116.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3e711c.  v2:= temp;
  #L3e711e.  goto L3e7122;
  #L3e7120.  v2:= 0I;
  #L3e7122.  v5.`io.objectbox.query.PropertyQuery.j` @type ^`float` := v2;
  #L3e7126.  v2:= instanceof @variable v6 @type ^`java.lang.Double` @kind boolean;
  #L3e712a.  if v2 == 0 then goto L3e713e;
  #L3e712e.  v3:= v6 @kind object;
  #L3e7130.  v3:= (`java.lang.Double`) v3 @kind object;
  #L3e7134.  call temp:= `doubleValue`(v3) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e713a.  v3:= temp @kind wide;
  #L3e713c.  goto L3e7142;
  #L3e713e.  v3:= 0L;
  #L3e7142.  v5.`io.objectbox.query.PropertyQuery.i` @type ^`double` := v3 @kind wide;
  #L3e7146.  if v1 == 0 then goto L3e7160;
  #L3e714a.  if v0 != 0 then goto L3e7160;
  #L3e714e.  if v2 != 0 then goto L3e7160;
  #L3e7152.  v6:= (`java.lang.Number`) v6 @kind object;
  #L3e7156.  call temp:= `longValue`(v6) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L3e715c.  v0:= temp @kind wide;
  #L3e715e.  goto L3e7164;
  #L3e7160.  v0:= 0L;
  #L3e7164.  v5.`io.objectbox.query.PropertyQuery.l` @type ^`long` := v0 @kind wide;
  #L3e7168.  return v5 @kind object;
  #L3e716a.  v6:= new `java.lang.IllegalArgumentException`;
  #L3e716e.  v0:= "Null values are not allowed" @kind object;
  #L3e7172.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7178.  throw v6;
}
procedure `io.objectbox.query.PropertyQuery` `reset`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.reset:()Lio/objectbox/query/PropertyQuery;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e718c.  v0:= 0I;
  #L3e718e.  v2.`io.objectbox.query.PropertyQuery.e` @type ^`boolean` := v0 @kind boolean;
  #L3e7192.  v1:= 1I;
  #L3e7194.  v2.`io.objectbox.query.PropertyQuery.f` @type ^`boolean` := v1 @kind boolean;
  #L3e7198.  v2.`io.objectbox.query.PropertyQuery.h` @type ^`boolean` := v0 @kind boolean;
  #L3e719c.  v2.`io.objectbox.query.PropertyQuery.g` @type ^`boolean` := v0 @kind boolean;
  #L3e71a0.  v0:= 0L;
  #L3e71a4.  v2.`io.objectbox.query.PropertyQuery.i` @type ^`double` := v0 @kind wide;
  #L3e71a8.  v0:= 0I;
  #L3e71aa.  v2.`io.objectbox.query.PropertyQuery.j` @type ^`float` := v0;
  #L3e71ae.  v0:= 0I;
  #L3e71b0.  v2.`io.objectbox.query.PropertyQuery.k` @type ^`java.lang.String` := v0 @kind object;
  #L3e71b4.  v0:= 0L;
  #L3e71b8.  v2.`io.objectbox.query.PropertyQuery.l` @type ^`long` := v0 @kind wide;
  #L3e71bc.  return v2 @kind object;
}
procedure `long` `sum`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.sum:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7880.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7884.  v1:= new `io.objectbox.query.m`;
  #L3e7888.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/m;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e788e.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e7894.  v0:= temp @kind object;
  #L3e7896.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3e789a.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3e78a0.  v0:= temp @kind wide;
  #L3e78a2.  return v0 @kind wide;
}
procedure `double` `sumDouble`(`io.objectbox.query.PropertyQuery` v2 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.sumDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6e5c.  v0:= v2.`io.objectbox.query.PropertyQuery.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e6e60.  v1:= new `io.objectbox.query.q`;
  #L3e6e64.  call `<init>`(v1, v2) @signature `Lio/objectbox/query/q;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @kind direct;
  #L3e6e6a.  call temp:= `i`(v0, v1) @signature `Lio/objectbox/query/Query;.i:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind virtual;
  #L3e6e70.  v0:= temp @kind object;
  #L3e6e72.  v0:= (`java.lang.Double`) v0 @kind object;
  #L3e6e76.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3e6e7c.  v0:= temp @kind wide;
  #L3e6e7e.  return v0 @kind wide;
}
procedure `io.objectbox.query.PropertyQuery` `unique`(`io.objectbox.query.PropertyQuery` v1 @kind this) @signature `Lio/objectbox/query/PropertyQuery;.unique:()Lio/objectbox/query/PropertyQuery;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e71d0.  v0:= 1I;
  #L3e71d2.  v1.`io.objectbox.query.PropertyQuery.h` @type ^`boolean` := v0 @kind boolean;
  #L3e71d6.  return v1 @kind object;
}
