record `io.objectbox.query.i` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `io.objectbox.query.PropertyQuery` `io.objectbox.query.i.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.objectbox.query.i` v0 @kind this, `io.objectbox.query.PropertyQuery` v1 @kind object) @signature `Lio/objectbox/query/i;.<init>:(Lio/objectbox/query/PropertyQuery;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3e69c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e69ca.  v0.`io.objectbox.query.i.a` @type ^`io.objectbox.query.PropertyQuery` := v1 @kind object;
  #L3e69ce.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.objectbox.query.i` v1 @kind this) @signature `Lio/objectbox/query/i;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e69a4.  v0:= v1.`io.objectbox.query.i.a` @type ^`io.objectbox.query.PropertyQuery` @kind object;
  #L3e69a8.  call temp:= `p`(v0) @signature `Lio/objectbox/query/PropertyQuery;.p:(Lio/objectbox/query/PropertyQuery;)Ljava/lang/String;` @kind static;
  #L3e69ae.  v0:= temp @kind object;
  #L3e69b0.  return v0 @kind object;
}
