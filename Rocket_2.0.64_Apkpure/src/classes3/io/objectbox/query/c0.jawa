record `io.objectbox.query.c0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `io.objectbox.query.Query` `io.objectbox.query.c0.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `long` `io.objectbox.query.c0.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `long` `io.objectbox.query.c0.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.objectbox.query.c0` v0 @kind this, `io.objectbox.query.Query` v1 @kind object, `long` v2 , `long` v4 ) @signature `Lio/objectbox/query/c0;.<init>:(Lio/objectbox/query/Query;JJ)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3e7bd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e7bde.  v0.`io.objectbox.query.c0.a` @type ^`io.objectbox.query.Query` := v1 @kind object;
  #L3e7be2.  v0.`io.objectbox.query.c0.b` @type ^`long` := v2 @kind wide;
  #L3e7be6.  v0.`io.objectbox.query.c0.c` @type ^`long` := v4 @kind wide;
  #L3e7bea.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.objectbox.query.c0` v5 @kind this) @signature `Lio/objectbox/query/c0;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e7bb0.  v0:= v5.`io.objectbox.query.c0.a` @type ^`io.objectbox.query.Query` @kind object;
  #L3e7bb4.  v1:= v5.`io.objectbox.query.c0.b` @type ^`long` @kind wide;
  #L3e7bb8.  v3:= v5.`io.objectbox.query.c0.c` @type ^`long` @kind wide;
  #L3e7bbc.  call temp:= `b`(v0, v1, v3) @signature `Lio/objectbox/query/Query;.b:(Lio/objectbox/query/Query;JJ)Ljava/util/List;` @kind static;
  #L3e7bc2.  v0:= temp @kind object;
  #L3e7bc4.  return v0 @kind object;
}
