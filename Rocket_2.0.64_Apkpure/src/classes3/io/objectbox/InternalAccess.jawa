record `io.objectbox.InternalAccess` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`io.objectbox.InternalAccess` v0 @kind this) @signature `Lio/objectbox/InternalAccess;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e0d6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0d72.  return @kind void;
}
procedure `void` `commitWriter`(`io.objectbox.Box` v0 @kind object, `io.objectbox.Cursor` v1 @kind object) @signature `Lio/objectbox/InternalAccess;.commitWriter:(Lio/objectbox/Box;Lio/objectbox/Cursor;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e0d84.  call `a`(v0, v1) @signature `Lio/objectbox/Box;.a:(Lio/objectbox/Cursor;)V` @kind virtual;
  #L3e0d8a.  return @kind void;
}
procedure `void` `enableCreationStackTracking`() @signature `Lio/objectbox/InternalAccess;.enableCreationStackTracking:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0d9c.  v0:= 1I;
  #L3e0d9e.  `@@io.objectbox.Transaction.g` @type ^`boolean` := v0 @kind boolean;
  #L3e0da2.  `@@io.objectbox.Cursor.TRACK_CREATION_STACK` @type ^`boolean` := v0 @kind boolean;
  #L3e0da6.  return @kind void;
}
procedure `io.objectbox.Cursor` `getActiveTxCursor`(`io.objectbox.Box` v0 @kind object) @signature `Lio/objectbox/InternalAccess;.getActiveTxCursor:(Lio/objectbox/Box;)Lio/objectbox/Cursor;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e0ca0.  call temp:= `b`(v0) @signature `Lio/objectbox/Box;.b:()Lio/objectbox/Cursor;` @kind virtual;
  #L3e0ca6.  v0:= temp @kind object;
  #L3e0ca8.  return v0 @kind object;
}
procedure `long` `getActiveTxCursorHandle`(`io.objectbox.Box` v2 @kind object) @signature `Lio/objectbox/InternalAccess;.getActiveTxCursorHandle:(Lio/objectbox/Box;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e0cf4.  call temp:= `b`(v2) @signature `Lio/objectbox/Box;.b:()Lio/objectbox/Cursor;` @kind virtual;
  #L3e0cfa.  v2:= temp @kind object;
  #L3e0cfc.  call temp:= `internalHandle`(v2) @signature `Lio/objectbox/Cursor;.internalHandle:()J` @kind virtual;
  #L3e0d02.  v0:= temp @kind wide;
  #L3e0d04.  return v0 @kind wide;
}
procedure `long` `getHandle`(`io.objectbox.BoxStore` v2 @kind object) @signature `Lio/objectbox/InternalAccess;.getHandle:(Lio/objectbox/BoxStore;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e0d18.  call temp:= `l`(v2) @signature `Lio/objectbox/BoxStore;.l:()J` @kind virtual;
  #L3e0d1e.  v0:= temp @kind wide;
  #L3e0d20.  return v0 @kind wide;
}
procedure `long` `getHandle`(`io.objectbox.Cursor` v2 @kind object) @signature `Lio/objectbox/InternalAccess;.getHandle:(Lio/objectbox/Cursor;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e0d34.  call temp:= `internalHandle`(v2) @signature `Lio/objectbox/Cursor;.internalHandle:()J` @kind virtual;
  #L3e0d3a.  v0:= temp @kind wide;
  #L3e0d3c.  return v0 @kind wide;
}
procedure `long` `getHandle`(`io.objectbox.Transaction` v2 @kind object) @signature `Lio/objectbox/InternalAccess;.getHandle:(Lio/objectbox/Transaction;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e0d50.  call temp:= `b`(v2) @signature `Lio/objectbox/Transaction;.b:()J` @kind virtual;
  #L3e0d56.  v0:= temp @kind wide;
  #L3e0d58.  return v0 @kind wide;
}
procedure `io.objectbox.Cursor` `getReader`(`io.objectbox.Box` v0 @kind object) @signature `Lio/objectbox/InternalAccess;.getReader:(Lio/objectbox/Box;)Lio/objectbox/Cursor;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e0cbc.  call temp:= `c`(v0) @signature `Lio/objectbox/Box;.c:()Lio/objectbox/Cursor;` @kind virtual;
  #L3e0cc2.  v0:= temp @kind object;
  #L3e0cc4.  return v0 @kind object;
}
procedure `io.objectbox.Cursor` `getWriter`(`io.objectbox.Box` v0 @kind object) @signature `Lio/objectbox/InternalAccess;.getWriter:(Lio/objectbox/Box;)Lio/objectbox/Cursor;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e0cd8.  call temp:= `d`(v0) @signature `Lio/objectbox/Box;.d:()Lio/objectbox/Cursor;` @kind virtual;
  #L3e0cde.  v0:= temp @kind object;
  #L3e0ce0.  return v0 @kind object;
}
procedure `void` `releaseReader`(`io.objectbox.Box` v0 @kind object, `io.objectbox.Cursor` v1 @kind object) @signature `Lio/objectbox/InternalAccess;.releaseReader:(Lio/objectbox/Box;Lio/objectbox/Cursor;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e0db8.  call `f`(v0, v1) @signature `Lio/objectbox/Box;.f:(Lio/objectbox/Cursor;)V` @kind virtual;
  #L3e0dbe.  return @kind void;
}
procedure `void` `releaseWriter`(`io.objectbox.Box` v0 @kind object, `io.objectbox.Cursor` v1 @kind object) @signature `Lio/objectbox/InternalAccess;.releaseWriter:(Lio/objectbox/Box;Lio/objectbox/Cursor;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e0dd0.  call `g`(v0, v1) @signature `Lio/objectbox/Box;.g:(Lio/objectbox/Cursor;)V` @kind virtual;
  #L3e0dd6.  return @kind void;
}
procedure `void` `setSyncClient`(`io.objectbox.BoxStore` v0 @kind object, `io.objectbox.sync.SyncClient` v1 @kind object) @signature `Lio/objectbox/InternalAccess;.setSyncClient:(Lio/objectbox/BoxStore;Lio/objectbox/sync/SyncClient;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e0de8.  call `t`(v0, v1) @signature `Lio/objectbox/BoxStore;.t:(Lio/objectbox/sync/SyncClient;)V` @kind virtual;
  #L3e0dee.  return @kind void;
}
