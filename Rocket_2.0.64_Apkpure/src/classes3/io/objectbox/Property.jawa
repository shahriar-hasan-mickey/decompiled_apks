record `io.objectbox.Property` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `boolean` `io.objectbox.Property.a` @AccessFlag PRIVATE;
  `java.lang.Class` `io.objectbox.Property.converterClass` @AccessFlag PUBLIC_FINAL;
  `java.lang.Class` `io.objectbox.Property.customType` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `io.objectbox.Property.dbName` @AccessFlag PUBLIC_FINAL;
  `io.objectbox.EntityInfo` `io.objectbox.Property.entity` @AccessFlag PUBLIC_FINAL;
  `int` `io.objectbox.Property.id` @AccessFlag PUBLIC_FINAL;
  `boolean` `io.objectbox.Property.isId` @AccessFlag PUBLIC_FINAL;
  `boolean` `io.objectbox.Property.isVirtual` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `io.objectbox.Property.name` @AccessFlag PUBLIC_FINAL;
  `int` `io.objectbox.Property.ordinal` @AccessFlag PUBLIC_FINAL;
  `java.lang.Class` `io.objectbox.Property.type` @AccessFlag PUBLIC_FINAL;
}
global `long` `@@io.objectbox.Property.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.objectbox.Property` v10 @kind this, `io.objectbox.EntityInfo` v11 @kind object, `int` v12 , `int` v13 , `java.lang.Class` v14 @kind object, `java.lang.String` v15 @kind object) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e1e70.  v6:= 0I;
  #L3e1e72.  v8:= 0I;
  #L3e1e74.  v9:= 0I;
  #L3e1e76.  v0:= v10 @kind object;
  #L3e1e78.  v1:= v11 @kind object;
  #L3e1e7a.  v2:= v12;
  #L3e1e7c.  v3:= v13;
  #L3e1e7e.  v4:= v14 @kind object;
  #L3e1e80.  v5:= v15 @kind object;
  #L3e1e82.  v7:= v15 @kind object;
  #L3e1e84.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3e1e8a.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.Property` v11 @kind this, `io.objectbox.EntityInfo` v12 @kind object, `int` v13 , `int` v14 , `java.lang.Class` v15 @kind object, `java.lang.String` v16 @kind object, `boolean` v17 ) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3e1e9c.  v6:= 0I;
  #L3e1e9e.  v9:= 0I;
  #L3e1ea0.  v10:= 0I;
  #L3e1ea2.  v0:= v11 @kind object;
  #L3e1ea4.  v1:= v12 @kind object;
  #L3e1ea6.  v2:= v13;
  #L3e1ea8.  v3:= v14;
  #L3e1eaa.  v4:= v15 @kind object;
  #L3e1eac.  v5:= v16 @kind object;
  #L3e1eb0.  v7:= v17;
  #L3e1eb4.  v8:= v16 @kind object;
  #L3e1eb8.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;ZZLjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3e1ebe.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.Property` v10 @kind this, `io.objectbox.EntityInfo` v11 @kind object, `int` v12 , `int` v13 , `java.lang.Class` v14 @kind object, `java.lang.String` v15 @kind object, `boolean` v16 , `java.lang.String` v17 @kind object) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;ZLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e1f10.  v8:= 0I;
  #L3e1f12.  v9:= 0I;
  #L3e1f14.  v0:= v10 @kind object;
  #L3e1f16.  v1:= v11 @kind object;
  #L3e1f18.  v2:= v12;
  #L3e1f1a.  v3:= v13;
  #L3e1f1c.  v4:= v14 @kind object;
  #L3e1f1e.  v5:= v15 @kind object;
  #L3e1f20.  v6:= v16;
  #L3e1f24.  v7:= v17 @kind object;
  #L3e1f28.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3e1f2e.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.Property` v11 @kind this, `io.objectbox.EntityInfo` v12 @kind object, `int` v13 , `int` v14 , `java.lang.Class` v15 @kind object, `java.lang.String` v16 @kind object, `boolean` v17 , `java.lang.String` v18 @kind object, `java.lang.Class` v19 @kind object, `java.lang.Class` v20 @kind object) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3e1f40.  v7:= 0I;
  #L3e1f42.  v0:= v11 @kind object;
  #L3e1f44.  v1:= v12 @kind object;
  #L3e1f46.  v2:= v13;
  #L3e1f48.  v3:= v14;
  #L3e1f4a.  v4:= v15 @kind object;
  #L3e1f4c.  v5:= v16 @kind object;
  #L3e1f50.  v6:= v17;
  #L3e1f54.  v8:= v18 @kind object;
  #L3e1f58.  v9:= v19 @kind object;
  #L3e1f5c.  v10:= v20 @kind object;
  #L3e1f60.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;ZZLjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3e1f66.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.Property` v0 @kind this, `io.objectbox.EntityInfo` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Class` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 , `boolean` v7 , `java.lang.String` v8 @kind object, `java.lang.Class` v9 @kind object, `java.lang.Class` v10 @kind object) @signature `Lio/objectbox/Property;.<init>:(Lio/objectbox/EntityInfo;IILjava/lang/Class;Ljava/lang/String;ZZLjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e1ed0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e1ed6.  v0.`io.objectbox.Property.entity` @type ^`io.objectbox.EntityInfo` := v1 @kind object;
  #L3e1eda.  v0.`io.objectbox.Property.ordinal` @type ^`int` := v2;
  #L3e1ede.  v0.`io.objectbox.Property.id` @type ^`int` := v3;
  #L3e1ee2.  v0.`io.objectbox.Property.type` @type ^`java.lang.Class` := v4 @kind object;
  #L3e1ee6.  v0.`io.objectbox.Property.name` @type ^`java.lang.String` := v5 @kind object;
  #L3e1eea.  v0.`io.objectbox.Property.isId` @type ^`boolean` := v6 @kind boolean;
  #L3e1eee.  v0.`io.objectbox.Property.isVirtual` @type ^`boolean` := v7 @kind boolean;
  #L3e1ef2.  v0.`io.objectbox.Property.dbName` @type ^`java.lang.String` := v8 @kind object;
  #L3e1ef6.  v0.`io.objectbox.Property.converterClass` @type ^`java.lang.Class` := v9 @kind object;
  #L3e1efa.  v0.`io.objectbox.Property.customType` @type ^`java.lang.Class` := v10 @kind object;
  #L3e1efe.  return @kind void;
}
procedure `boolean` `a`(`io.objectbox.Property` v1 @kind this) @signature `Lio/objectbox/Property;.a:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e1bdc.  v0:= v1.`io.objectbox.Property.a` @type ^`boolean` @kind boolean;
  #L3e1be0.  return v0;
}
procedure `void` `b`(`io.objectbox.Property` v3 @kind this, `int` v4 ) @signature `Lio/objectbox/Property;.b:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3e1f78.  v0:= v3.`io.objectbox.Property.id` @type ^`int`;
  #L3e1f7c.  if v0 <= 0 then goto L3e1fc8;
  #L3e1f80.  if v0 != v4 then goto L3e1f8c;
  #L3e1f84.  v4:= 1I;
  #L3e1f86.  v3.`io.objectbox.Property.a` @type ^`boolean` := v4 @kind boolean;
  #L3e1f8a.  return @kind void;
  #L3e1f8c.  v0:= new `io.objectbox.exception.DbException`;
  #L3e1f90.  v1:= new `java.lang.StringBuilder`;
  #L3e1f94.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1f9a.  call temp:= `toString`(v3) @signature `Lio/objectbox/Property;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1fa0.  v2:= temp @kind object;
  #L3e1fa2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1fa8.  v2:= " does not match ID in DB: " @kind object;
  #L3e1fac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1fb2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1fb8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1fbe.  v4:= temp @kind object;
  #L3e1fc0.  call `<init>`(v0, v4) @signature `Lio/objectbox/exception/DbException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1fc6.  throw v0;
  #L3e1fc8.  v4:= new `java.lang.IllegalStateException`;
  #L3e1fcc.  v0:= new `java.lang.StringBuilder`;
  #L3e1fd0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1fd6.  v1:= "Illegal property ID " @kind object;
  #L3e1fda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1fe0.  v1:= v3.`io.objectbox.Property.id` @type ^`int`;
  #L3e1fe4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1fea.  v1:= " for " @kind object;
  #L3e1fee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1ff4.  call temp:= `toString`(v3) @signature `Lio/objectbox/Property;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1ffa.  v1:= temp @kind object;
  #L3e1ffc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2002.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2008.  v0:= temp @kind object;
  #L3e200a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e2010.  throw v4;
}
procedure `io.objectbox.query.QueryCondition` `between`(`io.objectbox.Property` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/objectbox/Property;.between:(Ljava/lang/Object;Ljava/lang/Object;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1c78.  v0:= 2I;
  #L3e1c7a.  v0:= new `java.lang.Object`[v0];
  #L3e1c7e.  v1:= 0I;
  #L3e1c80.  v0[v1]:= v3 @kind object;
  #L3e1c84.  v3:= 1I;
  #L3e1c86.  v0[v3]:= v4 @kind object;
  #L3e1c8a.  v3:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1c8e.  v4:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.BETWEEN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1c92.  call `<init>`(v3, v2, v4, v0) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;[Ljava/lang/Object;)V` @kind direct;
  #L3e1c98.  return v3 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `contains`(`io.objectbox.Property` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/objectbox/Property;.contains:(Ljava/lang/String;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1cac.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1cb0.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.CONTAINS` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1cb4.  call `<init>`(v0, v2, v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;Ljava/lang/Object;)V` @kind direct;
  #L3e1cba.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `endsWith`(`io.objectbox.Property` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/objectbox/Property;.endsWith:(Ljava/lang/String;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1ccc.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1cd0.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.ENDS_WITH` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1cd4.  call `<init>`(v0, v2, v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;Ljava/lang/Object;)V` @kind direct;
  #L3e1cda.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `eq`(`io.objectbox.Property` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/Property;.eq:(Ljava/lang/Object;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1cec.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1cf0.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.EQUALS` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1cf4.  call `<init>`(v0, v2, v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;Ljava/lang/Object;)V` @kind direct;
  #L3e1cfa.  return v0 @kind object;
}
procedure `int` `getEntityId`(`io.objectbox.Property` v1 @kind this) @signature `Lio/objectbox/Property;.getEntityId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1bf4.  v0:= v1.`io.objectbox.Property.entity` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3e1bf8.  call temp:= `getEntityId`(v0) @signature `Lio/objectbox/EntityInfo;.getEntityId:()I` @kind interface;
  #L3e1bfe.  v0:= temp;
  #L3e1c00.  return v0;
}
procedure `int` `getId`(`io.objectbox.Property` v3 @kind this) @signature `Lio/objectbox/Property;.getId:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1c14.  v0:= v3.`io.objectbox.Property.id` @type ^`int`;
  #L3e1c18.  if v0 <= 0 then goto L3e1c1e;
  #L3e1c1c.  return v0;
  #L3e1c1e.  v0:= new `java.lang.IllegalStateException`;
  #L3e1c22.  v1:= new `java.lang.StringBuilder`;
  #L3e1c26.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1c2c.  v2:= "Illegal property ID " @kind object;
  #L3e1c30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1c36.  v2:= v3.`io.objectbox.Property.id` @type ^`int`;
  #L3e1c3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1c40.  v2:= " for " @kind object;
  #L3e1c44.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1c4a.  call temp:= `toString`(v3) @signature `Lio/objectbox/Property;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1c50.  v2:= temp @kind object;
  #L3e1c52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1c58.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1c5e.  v1:= temp @kind object;
  #L3e1c60.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1c66.  throw v0;
}
procedure `io.objectbox.query.QueryCondition` `gt`(`io.objectbox.Property` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/Property;.gt:(Ljava/lang/Object;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1d0c.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1d10.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.GREATER_THAN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1d14.  call `<init>`(v0, v2, v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;Ljava/lang/Object;)V` @kind direct;
  #L3e1d1a.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `in`(`io.objectbox.Property` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lio/objectbox/Property;.in:(Ljava/util/Collection;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;

  #L3e1d4c.  call temp:= `toArray`(v1) @signature `Ljava/util/Collection;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3e1d52.  v1:= temp @kind object;
  #L3e1d54.  call temp:= `in`(v0, v1) @signature `Lio/objectbox/Property;.in:([Ljava/lang/Object;)Lio/objectbox/query/QueryCondition;` @kind virtual;
  #L3e1d5a.  v1:= temp @kind object;
  #L3e1d5c.  return v1 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `in`(`io.objectbox.Property` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/objectbox/Property;.in:([Ljava/lang/Object;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1d2c.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1d30.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1d34.  call `<init>`(v0, v2, v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;[Ljava/lang/Object;)V` @kind direct;
  #L3e1d3a.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `isNotNull`(`io.objectbox.Property` v3 @kind this) @signature `Lio/objectbox/Property;.isNotNull:()Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1d70.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1d74.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IS_NOT_NULL` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1d78.  v2:= 0I;
  #L3e1d7a.  call `<init>`(v0, v3, v1, v2) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;[Ljava/lang/Object;)V` @kind direct;
  #L3e1d80.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `isNull`(`io.objectbox.Property` v3 @kind this) @signature `Lio/objectbox/Property;.isNull:()Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1d94.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1d98.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.IS_NULL` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1d9c.  v2:= 0I;
  #L3e1d9e.  call `<init>`(v0, v3, v1, v2) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;[Ljava/lang/Object;)V` @kind direct;
  #L3e1da4.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `lt`(`io.objectbox.Property` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/Property;.lt:(Ljava/lang/Object;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1db8.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1dbc.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.LESS_THAN` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1dc0.  call `<init>`(v0, v2, v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;Ljava/lang/Object;)V` @kind direct;
  #L3e1dc6.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `notEq`(`io.objectbox.Property` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/Property;.notEq:(Ljava/lang/Object;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1dd8.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1ddc.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.NOT_EQUALS` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1de0.  call `<init>`(v0, v2, v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;Ljava/lang/Object;)V` @kind direct;
  #L3e1de6.  return v0 @kind object;
}
procedure `io.objectbox.query.QueryCondition` `startsWith`(`io.objectbox.Property` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/objectbox/Property;.startsWith:(Ljava/lang/String;)Lio/objectbox/query/QueryCondition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1df8.  v0:= new `io.objectbox.query.QueryCondition$PropertyCondition`;
  #L3e1dfc.  v1:= `@@io.objectbox.query.QueryCondition$PropertyCondition$Operation.STARTS_WITH` @type ^`io.objectbox.query.QueryCondition$PropertyCondition$Operation` @kind object;
  #L3e1e00.  call `<init>`(v0, v2, v1, v3) @signature `Lio/objectbox/query/QueryCondition$PropertyCondition;.<init>:(Lio/objectbox/Property;Lio/objectbox/query/QueryCondition$PropertyCondition$Operation;Ljava/lang/Object;)V` @kind direct;
  #L3e1e06.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`io.objectbox.Property` v2 @kind this) @signature `Lio/objectbox/Property;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1e18.  v0:= new `java.lang.StringBuilder`;
  #L3e1e1c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1e22.  v1:= "Property \"" @kind object;
  #L3e1e26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1e2c.  v1:= v2.`io.objectbox.Property.name` @type ^`java.lang.String` @kind object;
  #L3e1e30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1e36.  v1:= "\" (ID: " @kind object;
  #L3e1e3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1e40.  v1:= v2.`io.objectbox.Property.id` @type ^`int`;
  #L3e1e44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1e4a.  v1:= ")" @kind object;
  #L3e1e4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1e54.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1e5a.  v0:= temp @kind object;
  #L3e1e5c.  return v0 @kind object;
}
