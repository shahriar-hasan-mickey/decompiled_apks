record `io.objectbox.reactive.SubscriptionBuilder$a$b` @kind class @AccessFlag  extends `io.objectbox.reactive.RunWithParam` @kind interface {
  `io.objectbox.reactive.SubscriptionBuilder$a` `io.objectbox.reactive.SubscriptionBuilder$a$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.objectbox.reactive.SubscriptionBuilder$a$b` v0 @kind this, `io.objectbox.reactive.SubscriptionBuilder$a` v1 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a$b;.<init>:(Lio/objectbox/reactive/SubscriptionBuilder$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3eabf0.  v0.`io.objectbox.reactive.SubscriptionBuilder$a$b.a` @type ^`io.objectbox.reactive.SubscriptionBuilder$a` := v1 @kind object;
  #L3eabf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eabfa.  return @kind void;
}
procedure `void` `a`(`io.objectbox.reactive.SubscriptionBuilder$a$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a$b;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eac28.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder$a$b.a` @type ^`io.objectbox.reactive.SubscriptionBuilder$a` @kind object;
  #L3eac2c.  call temp:= `b`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.b:(Lio/objectbox/reactive/SubscriptionBuilder$a;)Lio/objectbox/reactive/a;` @kind static;
  #L3eac32.  v0:= temp @kind object;
  #L3eac34.  call temp:= `isCanceled`(v0) @signature `Lio/objectbox/reactive/a;.isCanceled:()Z` @kind virtual;
  #L3eac3a.  v0:= temp;
  #L3eac3c.  if v0 != 0 then goto L3eac56;
  #L3eac40.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder$a$b.a` @type ^`io.objectbox.reactive.SubscriptionBuilder$a` @kind object;
  #L3eac44.  v0:= v0.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eac48.  call temp:= `b`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.b:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/ErrorObserver;` @kind static;
  #L3eac4e.  v0:= temp @kind object;
  #L3eac50.  call `onError`(v0, v2) @signature `Lio/objectbox/reactive/ErrorObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3eac56.  return @kind void;
}
procedure `void` `run`(`io.objectbox.reactive.SubscriptionBuilder$a$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a$b;.run:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3eac0c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L3eac10.  call `a`(v0, v1) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a$b;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3eac16.  return @kind void;
}
