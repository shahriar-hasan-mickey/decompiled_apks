record `io.objectbox.reactive.WeakDataObserver` @kind class @AccessFlag PUBLIC extends `io.objectbox.reactive.DataObserver` @kind interface, `io.objectbox.reactive.DelegatingObserver` @kind interface {
  `java.lang.ref.WeakReference` `io.objectbox.reactive.WeakDataObserver.a` @AccessFlag PRIVATE_FINAL;
  `io.objectbox.reactive.DataSubscription` `io.objectbox.reactive.WeakDataObserver.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.objectbox.reactive.WeakDataObserver` v1 @kind this, `io.objectbox.reactive.DataObserver` v2 @kind object) @signature `Lio/objectbox/reactive/WeakDataObserver;.<init>:(Lio/objectbox/reactive/DataObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3eb1e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb1ee.  v0:= new `java.lang.ref.WeakReference`;
  #L3eb1f2.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3eb1f8.  v1.`io.objectbox.reactive.WeakDataObserver.a` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L3eb1fc.  return @kind void;
}
procedure `boolean` `equals`(`io.objectbox.reactive.WeakDataObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/reactive/WeakDataObserver;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eb138.  v0:= instanceof @variable v3 @type ^`io.objectbox.reactive.WeakDataObserver` @kind boolean;
  #L3eb13c.  if v0 == 0 then goto L3eb178;
  #L3eb140.  v0:= v2.`io.objectbox.reactive.WeakDataObserver.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3eb144.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3eb14a.  v0:= temp @kind object;
  #L3eb14c.  v0:= (`io.objectbox.reactive.DataObserver`) v0 @kind object;
  #L3eb150.  if v0 == 0 then goto L3eb16e;
  #L3eb154.  v1:= v3 @kind object;
  #L3eb156.  v1:= (`io.objectbox.reactive.WeakDataObserver`) v1 @kind object;
  #L3eb15a.  v1:= v1.`io.objectbox.reactive.WeakDataObserver.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3eb15e.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3eb164.  v1:= temp @kind object;
  #L3eb166.  if v0 != v1 then goto L3eb16e;
  #L3eb16a.  v3:= 1I;
  #L3eb16c.  return v3;
  #L3eb16e.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L3eb174.  v3:= temp;
  #L3eb176.  return v3;
  #L3eb178.  v3:= 0I;
  #L3eb17a.  return v3;
}
procedure `io.objectbox.reactive.DataObserver` `getObserverDelegate`(`io.objectbox.reactive.WeakDataObserver` v1 @kind this) @signature `Lio/objectbox/reactive/WeakDataObserver;.getObserverDelegate:()Lio/objectbox/reactive/DataObserver;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb1c4.  v0:= v1.`io.objectbox.reactive.WeakDataObserver.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3eb1c8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3eb1ce.  v0:= temp @kind object;
  #L3eb1d0.  v0:= (`io.objectbox.reactive.DataObserver`) v0 @kind object;
  #L3eb1d4.  return v0 @kind object;
}
procedure `int` `hashCode`(`io.objectbox.reactive.WeakDataObserver` v1 @kind this) @signature `Lio/objectbox/reactive/WeakDataObserver;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb18c.  v0:= v1.`io.objectbox.reactive.WeakDataObserver.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3eb190.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3eb196.  v0:= temp @kind object;
  #L3eb198.  v0:= (`io.objectbox.reactive.DataObserver`) v0 @kind object;
  #L3eb19c.  if v0 == 0 then goto L3eb1aa;
  #L3eb1a0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3eb1a6.  v0:= temp;
  #L3eb1a8.  return v0;
  #L3eb1aa.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L3eb1b0.  v0:= temp;
  #L3eb1b2.  return v0;
}
procedure `void` `onData`(`io.objectbox.reactive.WeakDataObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/reactive/WeakDataObserver;.onData:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb210.  v0:= v1.`io.objectbox.reactive.WeakDataObserver.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3eb214.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3eb21a.  v0:= temp @kind object;
  #L3eb21c.  v0:= (`io.objectbox.reactive.DataObserver`) v0 @kind object;
  #L3eb220.  if v0 == 0 then goto L3eb22c;
  #L3eb224.  call `onData`(v0, v2) @signature `Lio/objectbox/reactive/DataObserver;.onData:(Ljava/lang/Object;)V` @kind interface;
  #L3eb22a.  goto L3eb236;
  #L3eb22c.  v2:= v1.`io.objectbox.reactive.WeakDataObserver.b` @type ^`io.objectbox.reactive.DataSubscription` @kind object;
  #L3eb230.  call `cancel`(v2) @signature `Lio/objectbox/reactive/DataSubscription;.cancel:()V` @kind interface;
  #L3eb236.  return @kind void;
}
procedure `void` `setSubscription`(`io.objectbox.reactive.WeakDataObserver` v0 @kind this, `io.objectbox.reactive.DataSubscription` v1 @kind object) @signature `Lio/objectbox/reactive/WeakDataObserver;.setSubscription:(Lio/objectbox/reactive/DataSubscription;)V` @AccessFlag PUBLIC {
    temp;

  #L3eb248.  v0.`io.objectbox.reactive.WeakDataObserver.b` @type ^`io.objectbox.reactive.DataSubscription` := v1 @kind object;
  #L3eb24c.  return @kind void;
}
