record `io.objectbox.reactive.a` @kind class @AccessFlag  extends `io.objectbox.reactive.DataSubscription` @kind interface {
  `boolean` `io.objectbox.reactive.a.a` @AccessFlag PRIVATE_VOLATILE;
  `io.objectbox.reactive.DataPublisher` `io.objectbox.reactive.a.b` @AccessFlag PRIVATE;
  `java.lang.Object` `io.objectbox.reactive.a.c` @AccessFlag PRIVATE;
  `io.objectbox.reactive.DataObserver` `io.objectbox.reactive.a.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.objectbox.reactive.a` v0 @kind this, `io.objectbox.reactive.DataPublisher` v1 @kind object, `java.lang.Object` v2 @kind object, `io.objectbox.reactive.DataObserver` v3 @kind object) @signature `Lio/objectbox/reactive/a;.<init>:(Lio/objectbox/reactive/DataPublisher;Ljava/lang/Object;Lio/objectbox/reactive/DataObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ea990.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea996.  v0.`io.objectbox.reactive.a.b` @type ^`io.objectbox.reactive.DataPublisher` := v1 @kind object;
  #L3ea99a.  v0.`io.objectbox.reactive.a.c` @type ^`java.lang.Object` := v2 @kind object;
  #L3ea99e.  v0.`io.objectbox.reactive.a.d` @type ^`io.objectbox.reactive.DataObserver` := v3 @kind object;
  #L3ea9a2.  return @kind void;
}
procedure `void` `cancel`(`io.objectbox.reactive.a` v3 @kind this) @signature `Lio/objectbox/reactive/a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ea9b4.  @monitorenter v3
  #L3ea9b6.  v0:= 1I;
  #L3ea9b8.  v3.`io.objectbox.reactive.a.a` @type ^`boolean` := v0 @kind boolean;
  #L3ea9bc.  v0:= v3.`io.objectbox.reactive.a.b` @type ^`io.objectbox.reactive.DataPublisher` @kind object;
  #L3ea9c0.  if v0 == 0 then goto L3ea9e0;
  #L3ea9c4.  v1:= v3.`io.objectbox.reactive.a.d` @type ^`io.objectbox.reactive.DataObserver` @kind object;
  #L3ea9c8.  v2:= v3.`io.objectbox.reactive.a.c` @type ^`java.lang.Object` @kind object;
  #L3ea9cc.  call `unsubscribe`(v0, v1, v2) @signature `Lio/objectbox/reactive/DataPublisher;.unsubscribe:(Lio/objectbox/reactive/DataObserver;Ljava/lang/Object;)V` @kind interface;
  #L3ea9d2.  v0:= 0I;
  #L3ea9d4.  v3.`io.objectbox.reactive.a.b` @type ^`io.objectbox.reactive.DataPublisher` := v0 @kind object;
  #L3ea9d8.  v3.`io.objectbox.reactive.a.d` @type ^`io.objectbox.reactive.DataObserver` := v0 @kind object;
  #L3ea9dc.  v3.`io.objectbox.reactive.a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L3ea9e0.  @monitorexit v3
  #L3ea9e2.  return @kind void;
  #L3ea9e4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea9e6.  @monitorexit v3
  #L3ea9e8.  throw v0;
  catch `java.lang.Throwable` @[L3ea9b8..L3ea9e0] goto L3ea9e4;
}
procedure `boolean` `isCanceled`(`io.objectbox.reactive.a` v1 @kind this) @signature `Lio/objectbox/reactive/a;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea978.  v0:= v1.`io.objectbox.reactive.a.a` @type ^`boolean` @kind boolean;
  #L3ea97c.  return v0;
}
