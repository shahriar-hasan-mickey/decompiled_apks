record `io.objectbox.reactive.SubscriptionBuilder` @kind class @AccessFlag PUBLIC {
  `io.objectbox.reactive.DataPublisher` `io.objectbox.reactive.SubscriptionBuilder.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `io.objectbox.reactive.SubscriptionBuilder.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `io.objectbox.reactive.SubscriptionBuilder.c` @AccessFlag PRIVATE_FINAL;
  `io.objectbox.reactive.DataObserver` `io.objectbox.reactive.SubscriptionBuilder.d` @AccessFlag PRIVATE;
  `boolean` `io.objectbox.reactive.SubscriptionBuilder.e` @AccessFlag PRIVATE;
  `boolean` `io.objectbox.reactive.SubscriptionBuilder.f` @AccessFlag PRIVATE;
  `boolean` `io.objectbox.reactive.SubscriptionBuilder.g` @AccessFlag PRIVATE;
  `io.objectbox.reactive.DataTransformer` `io.objectbox.reactive.SubscriptionBuilder.h` @AccessFlag PRIVATE;
  `io.objectbox.reactive.Scheduler` `io.objectbox.reactive.SubscriptionBuilder.i` @AccessFlag PRIVATE;
  `io.objectbox.reactive.ErrorObserver` `io.objectbox.reactive.SubscriptionBuilder.j` @AccessFlag PRIVATE;
  `io.objectbox.reactive.DataSubscriptionList` `io.objectbox.reactive.SubscriptionBuilder.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.objectbox.reactive.SubscriptionBuilder` v0 @kind this, `io.objectbox.reactive.DataPublisher` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.concurrent.ExecutorService` v3 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.<init>:(Lio/objectbox/reactive/DataPublisher;Ljava/lang/Object;Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eb114.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb11a.  v0.`io.objectbox.reactive.SubscriptionBuilder.a` @type ^`io.objectbox.reactive.DataPublisher` := v1 @kind object;
  #L3eb11e.  v0.`io.objectbox.reactive.SubscriptionBuilder.b` @type ^`java.lang.Object` := v2 @kind object;
  #L3eb122.  v0.`io.objectbox.reactive.SubscriptionBuilder.c` @type ^`java.util.concurrent.ExecutorService` := v3 @kind object;
  #L3eb126.  return @kind void;
}
procedure `io.objectbox.reactive.Scheduler` `a`(`io.objectbox.reactive.SubscriptionBuilder` v0 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.a:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/Scheduler;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eaff4.  v0:= v0.`io.objectbox.reactive.SubscriptionBuilder.i` @type ^`io.objectbox.reactive.Scheduler` @kind object;
  #L3eaff8.  return v0 @kind object;
}
procedure `io.objectbox.reactive.ErrorObserver` `b`(`io.objectbox.reactive.SubscriptionBuilder` v0 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.b:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/ErrorObserver;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eafdc.  v0:= v0.`io.objectbox.reactive.SubscriptionBuilder.j` @type ^`io.objectbox.reactive.ErrorObserver` @kind object;
  #L3eafe0.  return v0 @kind object;
}
procedure `io.objectbox.reactive.DataTransformer` `c`(`io.objectbox.reactive.SubscriptionBuilder` v0 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.c:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/DataTransformer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eafc4.  v0:= v0.`io.objectbox.reactive.SubscriptionBuilder.h` @type ^`io.objectbox.reactive.DataTransformer` @kind object;
  #L3eafc8.  return v0 @kind object;
}
procedure `java.util.concurrent.ExecutorService` `d`(`io.objectbox.reactive.SubscriptionBuilder` v0 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.d:(Lio/objectbox/reactive/SubscriptionBuilder;)Ljava/util/concurrent/ExecutorService;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eb0fc.  v0:= v0.`io.objectbox.reactive.SubscriptionBuilder.c` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3eb100.  return v0 @kind object;
}
procedure `io.objectbox.reactive.DataObserver` `e`(`io.objectbox.reactive.SubscriptionBuilder` v0 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.e:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/DataObserver;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eaedc.  v0:= v0.`io.objectbox.reactive.SubscriptionBuilder.d` @type ^`io.objectbox.reactive.DataObserver` @kind object;
  #L3eaee0.  return v0 @kind object;
}
procedure `io.objectbox.reactive.SubscriptionBuilder` `dataSubscriptionList`(`io.objectbox.reactive.SubscriptionBuilder` v0 @kind this, `io.objectbox.reactive.DataSubscriptionList` v1 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.dataSubscriptionList:(Lio/objectbox/reactive/DataSubscriptionList;)Lio/objectbox/reactive/SubscriptionBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3eb00c.  v0.`io.objectbox.reactive.SubscriptionBuilder.k` @type ^`io.objectbox.reactive.DataSubscriptionList` := v1 @kind object;
  #L3eb010.  return v0 @kind object;
}
procedure `io.objectbox.reactive.DataSubscription` `observer`(`io.objectbox.reactive.SubscriptionBuilder` v4 @kind this, `io.objectbox.reactive.DataObserver` v5 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.observer:(Lio/objectbox/reactive/DataObserver;)Lio/objectbox/reactive/DataSubscription;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eaef4.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.e` @type ^`boolean` @kind boolean;
  #L3eaef8.  if v0 == 0 then goto L3eaf0a;
  #L3eaefc.  v0:= new `io.objectbox.reactive.WeakDataObserver`;
  #L3eaf00.  call `<init>`(v0, v5) @signature `Lio/objectbox/reactive/WeakDataObserver;.<init>:(Lio/objectbox/reactive/DataObserver;)V` @kind direct;
  #L3eaf06.  v5:= v0 @kind object;
  #L3eaf08.  goto L3eaf0c;
  #L3eaf0a.  v0:= 0I;
  #L3eaf0c.  v4.`io.objectbox.reactive.SubscriptionBuilder.d` @type ^`io.objectbox.reactive.DataObserver` := v5 @kind object;
  #L3eaf10.  v1:= new `io.objectbox.reactive.a`;
  #L3eaf14.  v2:= v4.`io.objectbox.reactive.SubscriptionBuilder.a` @type ^`io.objectbox.reactive.DataPublisher` @kind object;
  #L3eaf18.  v3:= v4.`io.objectbox.reactive.SubscriptionBuilder.b` @type ^`java.lang.Object` @kind object;
  #L3eaf1c.  call `<init>`(v1, v2, v3, v5) @signature `Lio/objectbox/reactive/a;.<init>:(Lio/objectbox/reactive/DataPublisher;Ljava/lang/Object;Lio/objectbox/reactive/DataObserver;)V` @kind direct;
  #L3eaf22.  if v0 == 0 then goto L3eaf2c;
  #L3eaf26.  call `setSubscription`(v0, v1) @signature `Lio/objectbox/reactive/WeakDataObserver;.setSubscription:(Lio/objectbox/reactive/DataSubscription;)V` @kind virtual;
  #L3eaf2c.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.k` @type ^`io.objectbox.reactive.DataSubscriptionList` @kind object;
  #L3eaf30.  if v0 == 0 then goto L3eaf3a;
  #L3eaf34.  call `add`(v0, v1) @signature `Lio/objectbox/reactive/DataSubscriptionList;.add:(Lio/objectbox/reactive/DataSubscription;)V` @kind virtual;
  #L3eaf3a.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.h` @type ^`io.objectbox.reactive.DataTransformer` @kind object;
  #L3eaf3e.  if v0 != 0 then goto L3eaf52;
  #L3eaf42.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.i` @type ^`io.objectbox.reactive.Scheduler` @kind object;
  #L3eaf46.  if v0 != 0 then goto L3eaf52;
  #L3eaf4a.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.j` @type ^`io.objectbox.reactive.ErrorObserver` @kind object;
  #L3eaf4e.  if v0 == 0 then goto L3eaf5c;
  #L3eaf52.  v5:= new `io.objectbox.reactive.SubscriptionBuilder$a`;
  #L3eaf56.  call `<init>`(v5, v4, v1) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.<init>:(Lio/objectbox/reactive/SubscriptionBuilder;Lio/objectbox/reactive/a;)V` @kind direct;
  #L3eaf5c.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.f` @type ^`boolean` @kind boolean;
  #L3eaf60.  if v0 == 0 then goto L3eaf8c;
  #L3eaf64.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.g` @type ^`boolean` @kind boolean;
  #L3eaf68.  if v0 != 0 then goto L3eaf7c;
  #L3eaf6c.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.a` @type ^`io.objectbox.reactive.DataPublisher` @kind object;
  #L3eaf70.  v2:= v4.`io.objectbox.reactive.SubscriptionBuilder.b` @type ^`java.lang.Object` @kind object;
  #L3eaf74.  call `publishSingle`(v0, v5, v2) @signature `Lio/objectbox/reactive/DataPublisher;.publishSingle:(Lio/objectbox/reactive/DataObserver;Ljava/lang/Object;)V` @kind interface;
  #L3eaf7a.  goto L3eafb0;
  #L3eaf7c.  v5:= new `java.lang.IllegalStateException`;
  #L3eaf80.  v0:= "Illegal combination of single() and onlyChanges()" @kind object;
  #L3eaf84.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eaf8a.  throw v5;
  #L3eaf8c.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.a` @type ^`io.objectbox.reactive.DataPublisher` @kind object;
  #L3eaf90.  v2:= v4.`io.objectbox.reactive.SubscriptionBuilder.b` @type ^`java.lang.Object` @kind object;
  #L3eaf94.  call `subscribe`(v0, v5, v2) @signature `Lio/objectbox/reactive/DataPublisher;.subscribe:(Lio/objectbox/reactive/DataObserver;Ljava/lang/Object;)V` @kind interface;
  #L3eaf9a.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.g` @type ^`boolean` @kind boolean;
  #L3eaf9e.  if v0 != 0 then goto L3eafb0;
  #L3eafa2.  v0:= v4.`io.objectbox.reactive.SubscriptionBuilder.a` @type ^`io.objectbox.reactive.DataPublisher` @kind object;
  #L3eafa6.  v2:= v4.`io.objectbox.reactive.SubscriptionBuilder.b` @type ^`java.lang.Object` @kind object;
  #L3eafaa.  call `publishSingle`(v0, v5, v2) @signature `Lio/objectbox/reactive/DataPublisher;.publishSingle:(Lio/objectbox/reactive/DataObserver;Ljava/lang/Object;)V` @kind interface;
  #L3eafb0.  return v1 @kind object;
}
procedure `io.objectbox.reactive.SubscriptionBuilder` `on`(`io.objectbox.reactive.SubscriptionBuilder` v1 @kind this, `io.objectbox.reactive.Scheduler` v2 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.on:(Lio/objectbox/reactive/Scheduler;)Lio/objectbox/reactive/SubscriptionBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb024.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder.i` @type ^`io.objectbox.reactive.Scheduler` @kind object;
  #L3eb028.  if v0 != 0 then goto L3eb032;
  #L3eb02c.  v1.`io.objectbox.reactive.SubscriptionBuilder.i` @type ^`io.objectbox.reactive.Scheduler` := v2 @kind object;
  #L3eb030.  return v1 @kind object;
  #L3eb032.  v2:= new `java.lang.IllegalStateException`;
  #L3eb036.  v0:= "Only one scheduler allowed" @kind object;
  #L3eb03a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb040.  throw v2;
}
procedure `io.objectbox.reactive.SubscriptionBuilder` `onError`(`io.objectbox.reactive.SubscriptionBuilder` v1 @kind this, `io.objectbox.reactive.ErrorObserver` v2 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.onError:(Lio/objectbox/reactive/ErrorObserver;)Lio/objectbox/reactive/SubscriptionBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb054.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder.j` @type ^`io.objectbox.reactive.ErrorObserver` @kind object;
  #L3eb058.  if v0 != 0 then goto L3eb062;
  #L3eb05c.  v1.`io.objectbox.reactive.SubscriptionBuilder.j` @type ^`io.objectbox.reactive.ErrorObserver` := v2 @kind object;
  #L3eb060.  return v1 @kind object;
  #L3eb062.  v2:= new `java.lang.IllegalStateException`;
  #L3eb066.  v0:= "Only one errorObserver allowed" @kind object;
  #L3eb06a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb070.  throw v2;
}
procedure `io.objectbox.reactive.SubscriptionBuilder` `onlyChanges`(`io.objectbox.reactive.SubscriptionBuilder` v1 @kind this) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.onlyChanges:()Lio/objectbox/reactive/SubscriptionBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb084.  v0:= 1I;
  #L3eb086.  v1.`io.objectbox.reactive.SubscriptionBuilder.g` @type ^`boolean` := v0 @kind boolean;
  #L3eb08a.  return v1 @kind object;
}
procedure `io.objectbox.reactive.SubscriptionBuilder` `single`(`io.objectbox.reactive.SubscriptionBuilder` v1 @kind this) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.single:()Lio/objectbox/reactive/SubscriptionBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb09c.  v0:= 1I;
  #L3eb09e.  v1.`io.objectbox.reactive.SubscriptionBuilder.f` @type ^`boolean` := v0 @kind boolean;
  #L3eb0a2.  return v1 @kind object;
}
procedure `io.objectbox.reactive.SubscriptionBuilder` `transform`(`io.objectbox.reactive.SubscriptionBuilder` v1 @kind this, `io.objectbox.reactive.DataTransformer` v2 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.transform:(Lio/objectbox/reactive/DataTransformer;)Lio/objectbox/reactive/SubscriptionBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb0b4.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder.h` @type ^`io.objectbox.reactive.DataTransformer` @kind object;
  #L3eb0b8.  if v0 != 0 then goto L3eb0c2;
  #L3eb0bc.  v1.`io.objectbox.reactive.SubscriptionBuilder.h` @type ^`io.objectbox.reactive.DataTransformer` := v2 @kind object;
  #L3eb0c0.  return v1 @kind object;
  #L3eb0c2.  v2:= new `java.lang.IllegalStateException`;
  #L3eb0c6.  v0:= "Only one transformer allowed" @kind object;
  #L3eb0ca.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb0d0.  throw v2;
}
procedure `io.objectbox.reactive.SubscriptionBuilder` `weak`(`io.objectbox.reactive.SubscriptionBuilder` v1 @kind this) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.weak:()Lio/objectbox/reactive/SubscriptionBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb0e4.  v0:= 1I;
  #L3eb0e6.  v1.`io.objectbox.reactive.SubscriptionBuilder.e` @type ^`boolean` := v0 @kind boolean;
  #L3eb0ea.  return v1 @kind object;
}
