record `io.objectbox.reactive.SubscriptionBuilder$a` @kind class @AccessFlag  extends `io.objectbox.reactive.DataObserver` @kind interface, `io.objectbox.reactive.DelegatingObserver` @kind interface {
  `io.objectbox.reactive.a` `io.objectbox.reactive.SubscriptionBuilder$a.a` @AccessFlag PRIVATE_FINAL;
  `io.objectbox.reactive.SubscriptionBuilder$a$b` `io.objectbox.reactive.SubscriptionBuilder$a.b` @AccessFlag PRIVATE;
  `io.objectbox.reactive.SubscriptionBuilder$a$a` `io.objectbox.reactive.SubscriptionBuilder$a.c` @AccessFlag PRIVATE;
  `io.objectbox.reactive.SubscriptionBuilder` `io.objectbox.reactive.SubscriptionBuilder$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.objectbox.reactive.SubscriptionBuilder$a` v0 @kind this, `io.objectbox.reactive.SubscriptionBuilder` v1 @kind object, `io.objectbox.reactive.a` v2 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.<init>:(Lio/objectbox/reactive/SubscriptionBuilder;Lio/objectbox/reactive/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eacb8.  v0.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` := v1 @kind object;
  #L3eacbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eacc2.  v0.`io.objectbox.reactive.SubscriptionBuilder$a.a` @type ^`io.objectbox.reactive.a` := v2 @kind object;
  #L3eacc6.  call temp:= `a`(v1) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.a:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/Scheduler;` @kind static;
  #L3eaccc.  v2:= temp @kind object;
  #L3eacce.  if v2 == 0 then goto L3eacfa;
  #L3eacd2.  v2:= new `io.objectbox.reactive.SubscriptionBuilder$a$a`;
  #L3eacd6.  call `<init>`(v2, v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a$a;.<init>:(Lio/objectbox/reactive/SubscriptionBuilder$a;)V` @kind direct;
  #L3eacdc.  v0.`io.objectbox.reactive.SubscriptionBuilder$a.c` @type ^`io.objectbox.reactive.SubscriptionBuilder$a$a` := v2 @kind object;
  #L3eace0.  call temp:= `b`(v1) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.b:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/ErrorObserver;` @kind static;
  #L3eace6.  v1:= temp @kind object;
  #L3eace8.  if v1 == 0 then goto L3eacfa;
  #L3eacec.  v1:= new `io.objectbox.reactive.SubscriptionBuilder$a$b`;
  #L3eacf0.  call `<init>`(v1, v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a$b;.<init>:(Lio/objectbox/reactive/SubscriptionBuilder$a;)V` @kind direct;
  #L3eacf6.  v0.`io.objectbox.reactive.SubscriptionBuilder$a.b` @type ^`io.objectbox.reactive.SubscriptionBuilder$a$b` := v1 @kind object;
  #L3eacfa.  return @kind void;
}
procedure `void` `a`(`io.objectbox.reactive.SubscriptionBuilder$a` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.a:(Lio/objectbox/reactive/SubscriptionBuilder$a;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3eaca0.  call `f`(v0, v1) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.f:(Ljava/lang/Object;)V` @kind direct;
  #L3eaca6.  return @kind void;
}
procedure `io.objectbox.reactive.a` `b`(`io.objectbox.reactive.SubscriptionBuilder$a` v0 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.b:(Lio/objectbox/reactive/SubscriptionBuilder$a;)Lio/objectbox/reactive/a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eac88.  v0:= v0.`io.objectbox.reactive.SubscriptionBuilder$a.a` @type ^`io.objectbox.reactive.a` @kind object;
  #L3eac8c.  return v0 @kind object;
}
procedure `void` `c`(`io.objectbox.reactive.SubscriptionBuilder$a` v0 @kind object, `java.lang.Throwable` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.c:(Lio/objectbox/reactive/SubscriptionBuilder$a;Ljava/lang/Throwable;Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ead0c.  call `e`(v0, v1, v2) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.e:(Ljava/lang/Throwable;Ljava/lang/String;)V` @kind direct;
  #L3ead12.  return @kind void;
}
procedure `void` `e`(`io.objectbox.reactive.SubscriptionBuilder$a` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.e:(Ljava/lang/Throwable;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eada4.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eada8.  call temp:= `b`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.b:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/ErrorObserver;` @kind static;
  #L3eadae.  v0:= temp @kind object;
  #L3eadb0.  if v0 == 0 then goto L3eae00;
  #L3eadb4.  v3:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.a` @type ^`io.objectbox.reactive.a` @kind object;
  #L3eadb8.  call temp:= `isCanceled`(v3) @signature `Lio/objectbox/reactive/a;.isCanceled:()Z` @kind virtual;
  #L3eadbe.  v3:= temp;
  #L3eadc0.  if v3 != 0 then goto L3eadfe;
  #L3eadc4.  v3:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eadc8.  call temp:= `a`(v3) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.a:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/Scheduler;` @kind static;
  #L3eadce.  v3:= temp @kind object;
  #L3eadd0.  if v3 == 0 then goto L3eadec;
  #L3eadd4.  v3:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eadd8.  call temp:= `a`(v3) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.a:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/Scheduler;` @kind static;
  #L3eadde.  v3:= temp @kind object;
  #L3eade0.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.b` @type ^`io.objectbox.reactive.SubscriptionBuilder$a$b` @kind object;
  #L3eade4.  call `run`(v3, v0, v2) @signature `Lio/objectbox/reactive/Scheduler;.run:(Lio/objectbox/reactive/RunWithParam;Ljava/lang/Object;)V` @kind interface;
  #L3eadea.  goto L3eadfe;
  #L3eadec.  v3:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eadf0.  call temp:= `b`(v3) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.b:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/ErrorObserver;` @kind static;
  #L3eadf6.  v3:= temp @kind object;
  #L3eadf8.  call `onError`(v3, v2) @signature `Lio/objectbox/reactive/ErrorObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3eadfe.  return @kind void;
  #L3eae00.  v0:= new `java.lang.RuntimeException`;
  #L3eae04.  call `<init>`(v0, v3, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3eae0a.  call `printStackTrace`(v0) @signature `Ljava/lang/RuntimeException;.printStackTrace:()V` @kind virtual;
  #L3eae10.  throw v0;
}
procedure `void` `f`(`io.objectbox.reactive.SubscriptionBuilder$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.f:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L3eae24.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.a` @type ^`io.objectbox.reactive.a` @kind object;
  #L3eae28.  call temp:= `isCanceled`(v0) @signature `Lio/objectbox/reactive/a;.isCanceled:()Z` @kind virtual;
  #L3eae2e.  v0:= temp;
  #L3eae30.  if v0 == 0 then goto L3eae36;
  #L3eae34.  return @kind void;
  #L3eae36.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eae3a.  call temp:= `c`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.c:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/DataTransformer;` @kind static;
  #L3eae40.  v0:= temp @kind object;
  #L3eae42.  call temp:= `transform`(v0, v2) @signature `Lio/objectbox/reactive/DataTransformer;.transform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3eae48.  v2:= temp @kind object;
  #L3eae4a.  call `d`(v1, v2) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L3eae50.  goto L3eae5e;
  #L3eae52.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eae54.  v0:= "Transformer failed without an ErrorObserver set" @kind object;
  #L3eae58.  call `e`(v1, v2, v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.e:(Ljava/lang/Throwable;Ljava/lang/String;)V` @kind direct;
  #L3eae5e.  return @kind void;
  catch `java.lang.Throwable` @[L3eae36..L3eae50] goto L3eae52;
}
procedure `void` `g`(`io.objectbox.reactive.SubscriptionBuilder$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.g:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eaeac.  v0:= v2.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eaeb0.  call temp:= `d`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.d:(Lio/objectbox/reactive/SubscriptionBuilder;)Ljava/util/concurrent/ExecutorService;` @kind static;
  #L3eaeb6.  v0:= temp @kind object;
  #L3eaeb8.  v1:= new `io.objectbox.reactive.b`;
  #L3eaebc.  call `<init>`(v1, v2, v3) @signature `Lio/objectbox/reactive/b;.<init>:(Lio/objectbox/reactive/SubscriptionBuilder$a;Ljava/lang/Object;)V` @kind direct;
  #L3eaec2.  call temp:= `submit`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;` @kind interface;
  #L3eaec8.  return @kind void;
}
procedure `void` `d`(`io.objectbox.reactive.SubscriptionBuilder$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.d:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3ead24.  v0:= v2.`io.objectbox.reactive.SubscriptionBuilder$a.a` @type ^`io.objectbox.reactive.a` @kind object;
  #L3ead28.  call temp:= `isCanceled`(v0) @signature `Lio/objectbox/reactive/a;.isCanceled:()Z` @kind virtual;
  #L3ead2e.  v0:= temp;
  #L3ead30.  if v0 != 0 then goto L3ead80;
  #L3ead34.  v0:= v2.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3ead38.  call temp:= `a`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.a:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/Scheduler;` @kind static;
  #L3ead3e.  v0:= temp @kind object;
  #L3ead40.  if v0 == 0 then goto L3ead5c;
  #L3ead44.  v0:= v2.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3ead48.  call temp:= `a`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.a:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/Scheduler;` @kind static;
  #L3ead4e.  v0:= temp @kind object;
  #L3ead50.  v1:= v2.`io.objectbox.reactive.SubscriptionBuilder$a.c` @type ^`io.objectbox.reactive.SubscriptionBuilder$a$a` @kind object;
  #L3ead54.  call `run`(v0, v1, v3) @signature `Lio/objectbox/reactive/Scheduler;.run:(Lio/objectbox/reactive/RunWithParam;Ljava/lang/Object;)V` @kind interface;
  #L3ead5a.  goto L3ead80;
  #L3ead5c.  v0:= v2.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3ead60.  call temp:= `e`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.e:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/DataObserver;` @kind static;
  #L3ead66.  v0:= temp @kind object;
  #L3ead68.  call `onData`(v0, v3) @signature `Lio/objectbox/reactive/DataObserver;.onData:(Ljava/lang/Object;)V` @kind interface;
  #L3ead6e.  goto L3ead80;
  #L3ead70.  v3:= Exception @type ^`java.lang.Error` @kind object;
  #L3ead72.  goto L3ead76;
  #L3ead74.  v3:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3ead76.  v0:= "Observer failed without an ErrorObserver set" @kind object;
  #L3ead7a.  call `e`(v2, v3, v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.e:(Ljava/lang/Throwable;Ljava/lang/String;)V` @kind direct;
  #L3ead80.  return @kind void;
  catch `java.lang.RuntimeException` @[L3ead5c..L3ead6e] goto L3ead74;
  catch `java.lang.Error` @[L3ead5c..L3ead6e] goto L3ead70;
}
procedure `io.objectbox.reactive.DataObserver` `getObserverDelegate`(`io.objectbox.reactive.SubscriptionBuilder$a` v1 @kind this) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.getObserverDelegate:()Lio/objectbox/reactive/DataObserver;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eac68.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eac6c.  call temp:= `e`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.e:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/DataObserver;` @kind static;
  #L3eac72.  v0:= temp @kind object;
  #L3eac74.  return v0 @kind object;
}
procedure `void` `onData`(`io.objectbox.reactive.SubscriptionBuilder$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.onData:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eae7c.  v0:= v1.`io.objectbox.reactive.SubscriptionBuilder$a.d` @type ^`io.objectbox.reactive.SubscriptionBuilder` @kind object;
  #L3eae80.  call temp:= `c`(v0) @signature `Lio/objectbox/reactive/SubscriptionBuilder;.c:(Lio/objectbox/reactive/SubscriptionBuilder;)Lio/objectbox/reactive/DataTransformer;` @kind static;
  #L3eae86.  v0:= temp @kind object;
  #L3eae88.  if v0 == 0 then goto L3eae94;
  #L3eae8c.  call `g`(v1, v2) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.g:(Ljava/lang/Object;)V` @kind direct;
  #L3eae92.  goto L3eae9a;
  #L3eae94.  call `d`(v1, v2) @signature `Lio/objectbox/reactive/SubscriptionBuilder$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L3eae9a.  return @kind void;
}
