record `io.objectbox.reactive.DataSubscriptionList` @kind class @AccessFlag PUBLIC extends `io.objectbox.reactive.DataSubscription` @kind interface {
  `java.util.List` `io.objectbox.reactive.DataSubscriptionList.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.objectbox.reactive.DataSubscriptionList.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.objectbox.reactive.DataSubscriptionList` v1 @kind this) @signature `Lio/objectbox/reactive/DataSubscriptionList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3eaa68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eaa6e.  v0:= new `java.util.ArrayList`;
  #L3eaa72.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3eaa78.  v1.`io.objectbox.reactive.DataSubscriptionList.a` @type ^`java.util.List` := v0 @kind object;
  #L3eaa7c.  return @kind void;
}
procedure `void` `add`(`io.objectbox.reactive.DataSubscriptionList` v1 @kind this, `io.objectbox.reactive.DataSubscription` v2 @kind object) @signature `Lio/objectbox/reactive/DataSubscriptionList;.add:(Lio/objectbox/reactive/DataSubscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaa90.  @monitorenter v1
  #L3eaa92.  v0:= v1.`io.objectbox.reactive.DataSubscriptionList.a` @type ^`java.util.List` @kind object;
  #L3eaa96.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eaa9c.  v2:= 0I;
  #L3eaa9e.  v1.`io.objectbox.reactive.DataSubscriptionList.b` @type ^`boolean` := v2 @kind boolean;
  #L3eaaa2.  @monitorexit v1
  #L3eaaa4.  return @kind void;
  #L3eaaa6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaaa8.  @monitorexit v1
  #L3eaaaa.  throw v2;
  catch `java.lang.Throwable` @[L3eaa92..L3eaaa2] goto L3eaaa6;
}
procedure `void` `cancel`(`io.objectbox.reactive.DataSubscriptionList` v2 @kind this) @signature `Lio/objectbox/reactive/DataSubscriptionList;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eaac8.  @monitorenter v2
  #L3eaaca.  v0:= 1I;
  #L3eaacc.  v2.`io.objectbox.reactive.DataSubscriptionList.b` @type ^`boolean` := v0 @kind boolean;
  #L3eaad0.  v0:= v2.`io.objectbox.reactive.DataSubscriptionList.a` @type ^`java.util.List` @kind object;
  #L3eaad4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3eaada.  v0:= temp @kind object;
  #L3eaadc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3eaae2.  v1:= temp;
  #L3eaae4.  if v1 == 0 then goto L3eaafc;
  #L3eaae8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3eaaee.  v1:= temp @kind object;
  #L3eaaf0.  v1:= (`io.objectbox.reactive.DataSubscription`) v1 @kind object;
  #L3eaaf4.  call `cancel`(v1) @signature `Lio/objectbox/reactive/DataSubscription;.cancel:()V` @kind interface;
  #L3eaafa.  goto L3eaadc;
  #L3eaafc.  v0:= v2.`io.objectbox.reactive.DataSubscriptionList.a` @type ^`java.util.List` @kind object;
  #L3eab00.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3eab06.  @monitorexit v2
  #L3eab08.  return @kind void;
  #L3eab0a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eab0c.  @monitorexit v2
  #L3eab0e.  throw v0;
  catch `java.lang.Throwable` @[L3eaacc..L3eab06] goto L3eab0a;
}
procedure `int` `getActiveSubscriptionCount`(`io.objectbox.reactive.DataSubscriptionList` v1 @kind this) @signature `Lio/objectbox/reactive/DataSubscriptionList;.getActiveSubscriptionCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaa34.  @monitorenter v1
  #L3eaa36.  v0:= v1.`io.objectbox.reactive.DataSubscriptionList.a` @type ^`java.util.List` @kind object;
  #L3eaa3a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3eaa40.  v0:= temp;
  #L3eaa42.  @monitorexit v1
  #L3eaa44.  return v0;
  #L3eaa46.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaa48.  @monitorexit v1
  #L3eaa4a.  throw v0;
  catch `java.lang.Throwable` @[L3eaa36..L3eaa42] goto L3eaa46;
}
procedure `boolean` `isCanceled`(`io.objectbox.reactive.DataSubscriptionList` v1 @kind this) @signature `Lio/objectbox/reactive/DataSubscriptionList;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaa08.  @monitorenter v1
  #L3eaa0a.  v0:= v1.`io.objectbox.reactive.DataSubscriptionList.b` @type ^`boolean` @kind boolean;
  #L3eaa0e.  @monitorexit v1
  #L3eaa10.  return v0;
  #L3eaa12.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaa14.  @monitorexit v1
  #L3eaa16.  throw v0;
  catch `java.lang.Throwable` @[L3eaa0a..L3eaa0e] goto L3eaa12;
}
