record `io.objectbox.internal.ReflectionCache` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `io.objectbox.internal.ReflectionCache.a` @AccessFlag PRIVATE_FINAL;
}
global `io.objectbox.internal.ReflectionCache` `@@io.objectbox.internal.ReflectionCache.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/objectbox/internal/ReflectionCache;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e3c7c.  v0:= new `io.objectbox.internal.ReflectionCache`;
  #L3e3c80.  call `<init>`(v0) @signature `Lio/objectbox/internal/ReflectionCache;.<init>:()V` @kind direct;
  #L3e3c86.  `@@io.objectbox.internal.ReflectionCache.b` @type ^`io.objectbox.internal.ReflectionCache` := v0 @kind object;
  #L3e3c8a.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.internal.ReflectionCache` v1 @kind this) @signature `Lio/objectbox/internal/ReflectionCache;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e3c9c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e3ca2.  v0:= new `java.util.HashMap`;
  #L3e3ca6.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e3cac.  v1.`io.objectbox.internal.ReflectionCache.a` @type ^`java.util.Map` := v0 @kind object;
  #L3e3cb0.  return @kind void;
}
procedure `io.objectbox.internal.ReflectionCache` `getInstance`() @signature `Lio/objectbox/internal/ReflectionCache;.getInstance:()Lio/objectbox/internal/ReflectionCache;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3bc8.  v0:= `@@io.objectbox.internal.ReflectionCache.b` @type ^`io.objectbox.internal.ReflectionCache` @kind object;
  #L3e3bcc.  return v0 @kind object;
}
procedure `java.lang.reflect.Field` `getField`(`io.objectbox.internal.ReflectionCache` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lio/objectbox/internal/ReflectionCache;.getField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3be0.  @monitorenter v2
  #L3e3be2.  v0:= v2.`io.objectbox.internal.ReflectionCache.a` @type ^`java.util.Map` @kind object;
  #L3e3be6.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e3bec.  v0:= temp @kind object;
  #L3e3bee.  v0:= (`java.util.Map`) v0 @kind object;
  #L3e3bf2.  if v0 != 0 then goto L3e3c0a;
  #L3e3bf6.  v0:= new `java.util.HashMap`;
  #L3e3bfa.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e3c00.  v1:= v2.`io.objectbox.internal.ReflectionCache.a` @type ^`java.util.Map` @kind object;
  #L3e3c04.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e3c0a.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e3c10.  v1:= temp @kind object;
  #L3e3c12.  v1:= (`java.lang.reflect.Field`) v1 @kind object;
  #L3e3c16.  if v1 != 0 then goto L3e3c40;
  #L3e3c1a.  call temp:= `getDeclaredField`(v3, v4) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L3e3c20.  v1:= temp @kind object;
  #L3e3c22.  v3:= 1I;
  #L3e3c24.  call `setAccessible`(v1, v3) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L3e3c2a.  call temp:= `put`(v0, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e3c30.  goto L3e3c40;
  #L3e3c32.  v3:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L3e3c34.  v4:= new `java.lang.IllegalStateException`;
  #L3e3c38.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3e3c3e.  throw v4;
  #L3e3c40.  @monitorexit v2
  #L3e3c42.  return v1 @kind object;
  #L3e3c44.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3c46.  @monitorexit v2
  #L3e3c48.  throw v3;
  catch `java.lang.Throwable` @[L3e3be2..L3e3c16] goto L3e3c44;
  catch `java.lang.NoSuchFieldException` @[L3e3c1a..L3e3c2a] goto L3e3c32;
  catch `java.lang.Throwable` @[L3e3c1a..L3e3c2a] goto L3e3c44;
  catch `java.lang.Throwable` @[L3e3c2a..L3e3c40] goto L3e3c44;
}
