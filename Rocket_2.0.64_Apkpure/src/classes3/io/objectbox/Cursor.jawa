record `io.objectbox.Cursor` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `io.objectbox.BoxStore` `io.objectbox.Cursor.boxStoreForEntities` @AccessFlag PROTECTED_FINAL;
  `boolean` `io.objectbox.Cursor.closed` @AccessFlag PROTECTED;
  `java.lang.Throwable` `io.objectbox.Cursor.creationThrowable` @AccessFlag PRIVATE_FINAL;
  `long` `io.objectbox.Cursor.cursor` @AccessFlag PROTECTED_FINAL;
  `io.objectbox.EntityInfo` `io.objectbox.Cursor.entityInfo` @AccessFlag PROTECTED_FINAL;
  `boolean` `io.objectbox.Cursor.readOnly` @AccessFlag PROTECTED_FINAL;
  `io.objectbox.Transaction` `io.objectbox.Cursor.tx` @AccessFlag PROTECTED_FINAL;
}
global `boolean` `@@io.objectbox.Cursor.LOG_READ_NOT_CLOSED` @AccessFlag STATIC;
global `int` `@@io.objectbox.Cursor.PUT_FLAG_COMPLETE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@io.objectbox.Cursor.PUT_FLAG_FIRST` @AccessFlag PROTECTED_STATIC_FINAL;
global `boolean` `@@io.objectbox.Cursor.TRACK_CREATION_STACK` @AccessFlag STATIC;
procedure `void` `<init>`(`io.objectbox.Cursor` v3 @kind this, `io.objectbox.Transaction` v4 @kind object, `long` v5 , `io.objectbox.EntityInfo` v7 @kind object, `io.objectbox.BoxStore` v8 @kind object) @signature `Lio/objectbox/Cursor;.<init>:(Lio/objectbox/Transaction;JLio/objectbox/EntityInfo;Lio/objectbox/BoxStore;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3e0a14.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0a1a.  if v4 == 0 then goto L3e0a94;
  #L3e0a1e.  v3.`io.objectbox.Cursor.tx` @type ^`io.objectbox.Transaction` := v4 @kind object;
  #L3e0a22.  call temp:= `isReadOnly`(v4) @signature `Lio/objectbox/Transaction;.isReadOnly:()Z` @kind virtual;
  #L3e0a28.  v4:= temp;
  #L3e0a2a.  v3.`io.objectbox.Cursor.readOnly` @type ^`boolean` := v4 @kind boolean;
  #L3e0a2e.  v3.`io.objectbox.Cursor.cursor` @type ^`long` := v5 @kind wide;
  #L3e0a32.  v3.`io.objectbox.Cursor.entityInfo` @type ^`io.objectbox.EntityInfo` := v7 @kind object;
  #L3e0a36.  v3.`io.objectbox.Cursor.boxStoreForEntities` @type ^`io.objectbox.BoxStore` := v8 @kind object;
  #L3e0a3a.  call temp:= `getAllProperties`(v7) @signature `Lio/objectbox/EntityInfo;.getAllProperties:()[Lio/objectbox/Property;` @kind interface;
  #L3e0a40.  v4:= temp @kind object;
  #L3e0a42.  v7:= length @variable v4;
  #L3e0a44.  v0:= 0I;
  #L3e0a46.  if v0 >= v7 then goto L3e0a72;
  #L3e0a4a.  v1:= v4[v0] @kind object;
  #L3e0a4e.  call temp:= `a`(v1) @signature `Lio/objectbox/Property;.a:()Z` @kind virtual;
  #L3e0a54.  v2:= temp;
  #L3e0a56.  if v2 != 0 then goto L3e0a6c;
  #L3e0a5a.  v2:= v1.`io.objectbox.Property.dbName` @type ^`java.lang.String` @kind object;
  #L3e0a5e.  call temp:= `getPropertyId`(v3, v2) @signature `Lio/objectbox/Cursor;.getPropertyId:(Ljava/lang/String;)I` @kind virtual;
  #L3e0a64.  v2:= temp;
  #L3e0a66.  call `b`(v1, v2) @signature `Lio/objectbox/Property;.b:(I)V` @kind virtual;
  #L3e0a6c.  v0:= v0 + 1;
  #L3e0a70.  goto L3e0a46;
  #L3e0a72.  v4:= `@@io.objectbox.Cursor.TRACK_CREATION_STACK` @type ^`boolean` @kind boolean;
  #L3e0a76.  if v4 == 0 then goto L3e0a86;
  #L3e0a7a.  v4:= new `java.lang.Throwable`;
  #L3e0a7e.  call `<init>`(v4) @signature `Ljava/lang/Throwable;.<init>:()V` @kind direct;
  #L3e0a84.  goto L3e0a88;
  #L3e0a86.  v4:= 0I;
  #L3e0a88.  v3.`io.objectbox.Cursor.creationThrowable` @type ^`java.lang.Throwable` := v4 @kind object;
  #L3e0a8c.  call `nativeSetBoxStoreForEntities`(v3, v5, v8) @signature `Lio/objectbox/Cursor;.nativeSetBoxStoreForEntities:(JLjava/lang/Object;)V` @kind virtual;
  #L3e0a92.  return @kind void;
  #L3e0a94.  v4:= new `java.lang.IllegalArgumentException`;
  #L3e0a98.  v5:= "Transaction is null" @kind object;
  #L3e0a9c.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0aa2.  throw v4;
}
procedure `long` `collect002033`(`long` v0 , `long` v2 , `int` v4 , `int` v5 , `long` v6 , `int` v8 , `long` v9 , `int` v11 , `float` v12 , `int` v13 , `float` v14 , `int` v15 , `float` v16 , `int` v17 , `double` v18 , `int` v20 , `double` v21 , `int` v23 , `double` v24 ) @signature `Lio/objectbox/Cursor;.collect002033:(JJIIJIJIFIFIFIDIDID)J` @AccessFlag PROTECTED_STATIC_NATIVE {

  # return;
}
procedure `long` `collect004000`(`long` v0 , `long` v2 , `int` v4 , `int` v5 , `long` v6 , `int` v8 , `long` v9 , `int` v11 , `long` v12 , `int` v14 , `long` v15 ) @signature `Lio/objectbox/Cursor;.collect004000:(JJIIJIJIJIJ)J` @AccessFlag PROTECTED_STATIC_NATIVE {

  # return;
}
procedure `long` `collect313311`(`long` v0 , `long` v2 , `int` v4 , `int` v5 , `java.lang.String` v6 @kind object, `int` v7 , `java.lang.String` v8 @kind object, `int` v9 , `java.lang.String` v10 @kind object, `int` v11 , `byte`[] v12 @kind object, `int` v13 , `long` v14 , `int` v16 , `long` v17 , `int` v19 , `long` v20 , `int` v22 , `int` v23 , `int` v24 , `int` v25 , `int` v26 , `int` v27 , `int` v28 , `float` v29 , `int` v30 , `double` v31 ) @signature `Lio/objectbox/Cursor;.collect313311:(JJIILjava/lang/String;ILjava/lang/String;ILjava/lang/String;I[BIJIJIJIIIIIIIFID)J` @AccessFlag PROTECTED_STATIC_NATIVE {

  # return;
}
procedure `long` `collect400000`(`long` v0 , `long` v2 , `int` v4 , `int` v5 , `java.lang.String` v6 @kind object, `int` v7 , `java.lang.String` v8 @kind object, `int` v9 , `java.lang.String` v10 @kind object, `int` v11 , `java.lang.String` v12 @kind object) @signature `Lio/objectbox/Cursor;.collect400000:(JJIILjava/lang/String;ILjava/lang/String;ILjava/lang/String;ILjava/lang/String;)J` @AccessFlag PROTECTED_STATIC_NATIVE {

  # return;
}
procedure `long` `collect430000`(`long` v0 , `long` v2 , `int` v4 , `int` v5 , `java.lang.String` v6 @kind object, `int` v7 , `java.lang.String` v8 @kind object, `int` v9 , `java.lang.String` v10 @kind object, `int` v11 , `java.lang.String` v12 @kind object, `int` v13 , `byte`[] v14 @kind object, `int` v15 , `byte`[] v16 @kind object, `int` v17 , `byte`[] v18 @kind object) @signature `Lio/objectbox/Cursor;.collect430000:(JJIILjava/lang/String;ILjava/lang/String;ILjava/lang/String;ILjava/lang/String;I[BI[BI[B)J` @AccessFlag PROTECTED_STATIC_NATIVE {

  # return;
}
procedure `boolean` `nativeDeleteEntity`(`long` v0 , `long` v2 ) @signature `Lio/objectbox/Cursor;.nativeDeleteEntity:(JJ)Z` @AccessFlag STATIC_NATIVE {

  # return;
}
procedure `java.lang.Object` `nativeFirstEntity`(`long` v0 ) @signature `Lio/objectbox/Cursor;.nativeFirstEntity:(J)Ljava/lang/Object;` @AccessFlag STATIC_NATIVE {

  # return;
}
procedure `java.lang.Object` `nativeGetEntity`(`long` v0 , `long` v2 ) @signature `Lio/objectbox/Cursor;.nativeGetEntity:(JJ)Ljava/lang/Object;` @AccessFlag STATIC_NATIVE {

  # return;
}
procedure `long` `nativeLookupKeyUsingIndex`(`long` v0 , `int` v2 , `java.lang.String` v3 @kind object) @signature `Lio/objectbox/Cursor;.nativeLookupKeyUsingIndex:(JILjava/lang/String;)J` @AccessFlag STATIC_NATIVE {

  # return;
}
procedure `java.lang.Object` `nativeNextEntity`(`long` v0 ) @signature `Lio/objectbox/Cursor;.nativeNextEntity:(J)Ljava/lang/Object;` @AccessFlag STATIC_NATIVE {

  # return;
}
procedure `boolean` `nativeSeek`(`long` v0 , `long` v2 ) @signature `Lio/objectbox/Cursor;.nativeSeek:(JJ)Z` @AccessFlag STATIC_NATIVE {

  # return;
}
procedure `void` `checkApplyToManyToDb`(`io.objectbox.Cursor` v1 @kind this, `java.util.List` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lio/objectbox/Cursor;.checkApplyToManyToDb:(Ljava/util/List;Ljava/lang/Class;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3e0ab4.  v0:= instanceof @variable v2 @type ^`io.objectbox.relation.ToMany` @kind boolean;
  #L3e0ab8.  if v0 == 0 then goto L3e0b02;
  #L3e0abc.  v2:= (`io.objectbox.relation.ToMany`) v2 @kind object;
  #L3e0ac0.  call temp:= `internalCheckApplyToDbRequired`(v2) @signature `Lio/objectbox/relation/ToMany;.internalCheckApplyToDbRequired:()Z` @kind virtual;
  #L3e0ac6.  v0:= temp;
  #L3e0ac8.  if v0 == 0 then goto L3e0b02;
  #L3e0acc.  call temp:= `getRelationTargetCursor`(v1, v3) @signature `Lio/objectbox/Cursor;.getRelationTargetCursor:(Ljava/lang/Class;)Lio/objectbox/Cursor;` @kind virtual;
  #L3e0ad2.  v3:= temp @kind object;
  #L3e0ad4.  call `internalApplyToDb`(v2, v1, v3) @signature `Lio/objectbox/relation/ToMany;.internalApplyToDb:(Lio/objectbox/Cursor;Lio/objectbox/Cursor;)V` @kind virtual;
  #L3e0ada.  if v3 == 0 then goto L3e0b02;
  #L3e0ade.  call `close`(v3) @signature `Lio/objectbox/Cursor;.close:()V` @kind virtual;
  #L3e0ae4.  goto L3e0b02;
  #L3e0ae6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e0ae8.  throw v2;
  #L3e0aea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e0aec.  if v3 == 0 then goto L3e0b00;
  #L3e0af0.  call `close`(v3) @signature `Lio/objectbox/Cursor;.close:()V` @kind virtual;
  #L3e0af6.  goto L3e0b00;
  #L3e0af8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e0afa.  call `addSuppressed`(v2, v3) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3e0b00.  throw v0;
  #L3e0b02.  return @kind void;
  catch `java.lang.Throwable` @[L3e0ad4..L3e0ada] goto L3e0ae6;
  catch `java.lang.Throwable` @[L3e0ae8..L3e0aea] goto L3e0aea;
  catch `java.lang.Throwable` @[L3e0af0..L3e0af6] goto L3e0af8;
}
procedure `void` `close`(`io.objectbox.Cursor` v2 @kind this) @signature `Lio/objectbox/Cursor;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0b34.  @monitorenter v2
  #L3e0b36.  v0:= v2.`io.objectbox.Cursor.closed` @type ^`boolean` @kind boolean;
  #L3e0b3a.  if v0 != 0 then goto L3e0b6a;
  #L3e0b3e.  v0:= 1I;
  #L3e0b40.  v2.`io.objectbox.Cursor.closed` @type ^`boolean` := v0 @kind boolean;
  #L3e0b44.  v0:= v2.`io.objectbox.Cursor.tx` @type ^`io.objectbox.Transaction` @kind object;
  #L3e0b48.  if v0 == 0 then goto L3e0b6a;
  #L3e0b4c.  call temp:= `getStore`(v0) @signature `Lio/objectbox/Transaction;.getStore:()Lio/objectbox/BoxStore;` @kind virtual;
  #L3e0b52.  v0:= temp @kind object;
  #L3e0b54.  call temp:= `isClosed`(v0) @signature `Lio/objectbox/BoxStore;.isClosed:()Z` @kind virtual;
  #L3e0b5a.  v0:= temp;
  #L3e0b5c.  if v0 != 0 then goto L3e0b6a;
  #L3e0b60.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0b64.  call `nativeDestroy`(v2, v0) @signature `Lio/objectbox/Cursor;.nativeDestroy:(J)V` @kind virtual;
  #L3e0b6a.  @monitorexit v2
  #L3e0b6c.  return @kind void;
  #L3e0b6e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e0b70.  @monitorexit v2
  #L3e0b72.  throw v0;
  catch `java.lang.Throwable` @[L3e0b36..L3e0b6a] goto L3e0b6e;
}
procedure `long` `count`(`io.objectbox.Cursor` v2 @kind this, `long` v3 ) @signature `Lio/objectbox/Cursor;.count:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0928.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e092c.  call temp:= `nativeCount`(v2, v0, v3) @signature `Lio/objectbox/Cursor;.nativeCount:(JJ)J` @kind virtual;
  #L3e0932.  v3:= temp @kind wide;
  #L3e0934.  return v3 @kind wide;
}
procedure `void` `deleteAll`(`io.objectbox.Cursor` v2 @kind this) @signature `Lio/objectbox/Cursor;.deleteAll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0b90.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0b94.  call `nativeDeleteAll`(v2, v0) @signature `Lio/objectbox/Cursor;.nativeDeleteAll:(J)V` @kind virtual;
  #L3e0b9a.  return @kind void;
}
procedure `boolean` `deleteEntity`(`io.objectbox.Cursor` v2 @kind this, `long` v3 ) @signature `Lio/objectbox/Cursor;.deleteEntity:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e06a0.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e06a4.  call temp:= `nativeDeleteEntity`(v0, v3) @signature `Lio/objectbox/Cursor;.nativeDeleteEntity:(JJ)Z` @kind static;
  #L3e06aa.  v3:= temp;
  #L3e06ac.  return v3;
}
procedure `void` `finalize`(`io.objectbox.Cursor` v2 @kind this) @signature `Lio/objectbox/Cursor;.finalize:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3e0bac.  v0:= v2.`io.objectbox.Cursor.closed` @type ^`boolean` @kind boolean;
  #L3e0bb0.  if v0 != 0 then goto L3e0c08;
  #L3e0bb4.  v0:= v2.`io.objectbox.Cursor.readOnly` @type ^`boolean` @kind boolean;
  #L3e0bb8.  if v0 == 0 then goto L3e0bc4;
  #L3e0bbc.  v0:= `@@io.objectbox.Cursor.LOG_READ_NOT_CLOSED` @type ^`boolean` @kind boolean;
  #L3e0bc0.  if v0 == 0 then goto L3e0bfc;
  #L3e0bc4.  v0:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L3e0bc8.  v1:= "Cursor was not closed." @kind object;
  #L3e0bcc.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3e0bd2.  v0:= v2.`io.objectbox.Cursor.creationThrowable` @type ^`java.lang.Throwable` @kind object;
  #L3e0bd6.  if v0 == 0 then goto L3e0bf2;
  #L3e0bda.  v0:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L3e0bde.  v1:= "Cursor was initially created here:" @kind object;
  #L3e0be2.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3e0be8.  v0:= v2.`io.objectbox.Cursor.creationThrowable` @type ^`java.lang.Throwable` @kind object;
  #L3e0bec.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L3e0bf2.  v0:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L3e0bf6.  call `flush`(v0) @signature `Ljava/io/PrintStream;.flush:()V` @kind virtual;
  #L3e0bfc.  call `close`(v2) @signature `Lio/objectbox/Cursor;.close:()V` @kind virtual;
  #L3e0c02.  call `finalize`(v2) @signature `Ljava/lang/Object;.finalize:()V` @kind super;
  #L3e0c08.  return @kind void;
}
procedure `java.lang.Object` `first`(`io.objectbox.Cursor` v2 @kind this) @signature `Lio/objectbox/Cursor;.first:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e07b4.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e07b8.  call temp:= `nativeFirstEntity`(v0) @signature `Lio/objectbox/Cursor;.nativeFirstEntity:(J)Ljava/lang/Object;` @kind static;
  #L3e07be.  v0:= temp @kind object;
  #L3e07c0.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`io.objectbox.Cursor` v2 @kind this, `long` v3 ) @signature `Lio/objectbox/Cursor;.get:(J)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e07d4.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e07d8.  call temp:= `nativeGetEntity`(v0, v3) @signature `Lio/objectbox/Cursor;.nativeGetEntity:(JJ)Ljava/lang/Object;` @kind static;
  #L3e07de.  v3:= temp @kind object;
  #L3e07e0.  return v3 @kind object;
}
procedure `java.util.List` `getAll`(`io.objectbox.Cursor` v2 @kind this) @signature `Lio/objectbox/Cursor;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0874.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0878.  call temp:= `nativeGetAllEntities`(v2, v0) @signature `Lio/objectbox/Cursor;.nativeGetAllEntities:(J)Ljava/util/List;` @kind virtual;
  #L3e087e.  v0:= temp @kind object;
  #L3e0880.  return v0 @kind object;
}
procedure `java.util.List` `getBacklinkEntities`(`io.objectbox.Cursor` v7 @kind this, `int` v8 , `io.objectbox.Property` v9 @kind object, `long` v10 ) @signature `Lio/objectbox/Cursor;.getBacklinkEntities:(ILio/objectbox/Property;J)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e0894.  v1:= v7.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0898.  call temp:= `getId`(v9) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e089e.  v4:= temp;
  #L3e08a0.  v0:= v7 @kind object;
  #L3e08a2.  v3:= v8;
  #L3e08a4.  v5:= v10 @kind wide;
  #L3e08a6.  call temp:= `nativeGetBacklinkEntities`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/Cursor;.nativeGetBacklinkEntities:(JIIJ)Ljava/util/List;` @kind virtual;
  #L3e08ac.  v8:= temp @kind object;
  #L3e08ae.  return v8 @kind object;
  #L3e08b0.  v8:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L3e08b2.  v10:= new `java.lang.IllegalArgumentException`;
  #L3e08b6.  v11:= new `java.lang.StringBuilder`;
  #L3e08ba.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e08c0.  v0:= "Please check if the given property belongs to a valid @Relation: " @kind object;
  #L3e08c4.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e08ca.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e08d0.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e08d6.  v9:= temp @kind object;
  #L3e08d8.  call `<init>`(v10, v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3e08de.  throw v10;
  catch `java.lang.IllegalArgumentException` @[L3e0894..L3e08ae] goto L3e08b0;
}
procedure `long`[] `getBacklinkIds`(`io.objectbox.Cursor` v7 @kind this, `int` v8 , `io.objectbox.Property` v9 @kind object, `long` v10 ) @signature `Lio/objectbox/Cursor;.getBacklinkIds:(ILio/objectbox/Property;J)[J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e0980.  v1:= v7.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0984.  call temp:= `getId`(v9) @signature `Lio/objectbox/Property;.getId:()I` @kind virtual;
  #L3e098a.  v4:= temp;
  #L3e098c.  v0:= v7 @kind object;
  #L3e098e.  v3:= v8;
  #L3e0990.  v5:= v10 @kind wide;
  #L3e0992.  call temp:= `nativeGetBacklinkIds`(v0, v1, v3, v4, v5) @signature `Lio/objectbox/Cursor;.nativeGetBacklinkIds:(JIIJ)[J` @kind virtual;
  #L3e0998.  v8:= temp @kind object;
  #L3e099a.  return v8 @kind object;
  #L3e099c.  v8:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L3e099e.  v10:= new `java.lang.IllegalArgumentException`;
  #L3e09a2.  v11:= new `java.lang.StringBuilder`;
  #L3e09a6.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e09ac.  v0:= "Please check if the given property belongs to a valid @Relation: " @kind object;
  #L3e09b0.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e09b6.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e09bc.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e09c2.  v9:= temp @kind object;
  #L3e09c4.  call `<init>`(v10, v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3e09ca.  throw v10;
  catch `java.lang.IllegalArgumentException` @[L3e0980..L3e099a] goto L3e099c;
}
procedure `io.objectbox.EntityInfo` `getEntityInfo`(`io.objectbox.Cursor` v1 @kind this) @signature `Lio/objectbox/Cursor;.getEntityInfo:()Lio/objectbox/EntityInfo;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0784.  v0:= v1.`io.objectbox.Cursor.entityInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3e0788.  return v0 @kind object;
}
procedure `long` `getId`(`java.lang.Object` v0 @kind object) @signature `Lio/objectbox/Cursor;.getId:(Ljava/lang/Object;)J` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `getPropertyId`(`io.objectbox.Cursor` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/objectbox/Cursor;.getPropertyId:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0718.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e071c.  call temp:= `nativePropertyId`(v2, v0, v3) @signature `Lio/objectbox/Cursor;.nativePropertyId:(JLjava/lang/String;)I` @kind virtual;
  #L3e0722.  v3:= temp;
  #L3e0724.  return v3;
}
procedure `java.util.List` `getRelationEntities`(`io.objectbox.Cursor` v8 @kind this, `int` v9 , `int` v10 , `long` v11 , `boolean` v13 ) @signature `Lio/objectbox/Cursor;.getRelationEntities:(IIJZ)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e0900.  v1:= v8.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0904.  v0:= v8 @kind object;
  #L3e0906.  v3:= v9;
  #L3e0908.  v4:= v10;
  #L3e090a.  v5:= v11 @kind wide;
  #L3e090c.  v7:= v13;
  #L3e090e.  call temp:= `nativeGetRelationEntities`(v0, v1, v3, v4, v5, v7) @signature `Lio/objectbox/Cursor;.nativeGetRelationEntities:(JIIJZ)Ljava/util/List;` @kind virtual;
  #L3e0914.  v9:= temp @kind object;
  #L3e0916.  return v9 @kind object;
}
procedure `long`[] `getRelationIds`(`io.objectbox.Cursor` v8 @kind this, `int` v9 , `int` v10 , `long` v11 , `boolean` v13 ) @signature `Lio/objectbox/Cursor;.getRelationIds:(IIJZ)[J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e09ec.  v1:= v8.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e09f0.  v0:= v8 @kind object;
  #L3e09f2.  v3:= v9;
  #L3e09f4.  v4:= v10;
  #L3e09f6.  v5:= v11 @kind wide;
  #L3e09f8.  v7:= v13;
  #L3e09fa.  call temp:= `nativeGetRelationIds`(v0, v1, v3, v4, v5, v7) @signature `Lio/objectbox/Cursor;.nativeGetRelationIds:(JIIJZ)[J` @kind virtual;
  #L3e0a00.  v9:= temp @kind object;
  #L3e0a02.  return v9 @kind object;
}
procedure `io.objectbox.Cursor` `getRelationTargetCursor`(`io.objectbox.Cursor` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lio/objectbox/Cursor;.getRelationTargetCursor:(Ljava/lang/Class;)Lio/objectbox/Cursor;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e0738.  v0:= v4.`io.objectbox.Cursor.boxStoreForEntities` @type ^`io.objectbox.BoxStore` @kind object;
  #L3e073c.  call temp:= `j`(v0, v5) @signature `Lio/objectbox/BoxStore;.j:(Ljava/lang/Class;)Lio/objectbox/EntityInfo;` @kind virtual;
  #L3e0742.  v5:= temp @kind object;
  #L3e0744.  v0:= v4.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0748.  call temp:= `getEntityId`(v5) @signature `Lio/objectbox/EntityInfo;.getEntityId:()I` @kind interface;
  #L3e074e.  v2:= temp;
  #L3e0750.  call temp:= `nativeGetCursorFor`(v4, v0, v2) @signature `Lio/objectbox/Cursor;.nativeGetCursorFor:(JI)J` @kind virtual;
  #L3e0756.  v0:= temp @kind wide;
  #L3e0758.  call temp:= `getCursorFactory`(v5) @signature `Lio/objectbox/EntityInfo;.getCursorFactory:()Lio/objectbox/internal/CursorFactory;` @kind interface;
  #L3e075e.  v5:= temp @kind object;
  #L3e0760.  v2:= v4.`io.objectbox.Cursor.tx` @type ^`io.objectbox.Transaction` @kind object;
  #L3e0764.  v3:= v4.`io.objectbox.Cursor.boxStoreForEntities` @type ^`io.objectbox.BoxStore` @kind object;
  #L3e0768.  call temp:= `createCursor`(v5, v2, v0, v3) @signature `Lio/objectbox/internal/CursorFactory;.createCursor:(Lio/objectbox/Transaction;JLio/objectbox/BoxStore;)Lio/objectbox/Cursor;` @kind interface;
  #L3e076e.  v5:= temp @kind object;
  #L3e0770.  return v5 @kind object;
}
procedure `io.objectbox.Transaction` `getTx`(`io.objectbox.Cursor` v1 @kind this) @signature `Lio/objectbox/Cursor;.getTx:()Lio/objectbox/Transaction;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e079c.  v0:= v1.`io.objectbox.Cursor.tx` @type ^`io.objectbox.Transaction` @kind object;
  #L3e07a0.  return v0 @kind object;
}
procedure `long` `internalHandle`(`io.objectbox.Cursor` v2 @kind this) @signature `Lio/objectbox/Cursor;.internalHandle:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e0948.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e094c.  return v0 @kind wide;
}
procedure `boolean` `isClosed`(`io.objectbox.Cursor` v1 @kind this) @signature `Lio/objectbox/Cursor;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e06c0.  v0:= v1.`io.objectbox.Cursor.closed` @type ^`boolean` @kind boolean;
  #L3e06c4.  return v0;
}
procedure `boolean` `isObsolete`(`io.objectbox.Cursor` v1 @kind this) @signature `Lio/objectbox/Cursor;.isObsolete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e06d8.  v0:= v1.`io.objectbox.Cursor.tx` @type ^`io.objectbox.Transaction` @kind object;
  #L3e06dc.  call temp:= `isObsolete`(v0) @signature `Lio/objectbox/Transaction;.isObsolete:()Z` @kind virtual;
  #L3e06e2.  v0:= temp;
  #L3e06e4.  return v0;
}
procedure `long` `lookupKeyUsingIndex`(`io.objectbox.Cursor` v2 @kind this, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lio/objectbox/Cursor;.lookupKeyUsingIndex:(ILjava/lang/String;)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e0960.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0964.  call temp:= `nativeLookupKeyUsingIndex`(v0, v3, v4) @signature `Lio/objectbox/Cursor;.nativeLookupKeyUsingIndex:(JILjava/lang/String;)J` @kind static;
  #L3e096a.  v3:= temp @kind wide;
  #L3e096c.  return v3 @kind wide;
}
procedure `void` `modifyRelations`(`io.objectbox.Cursor` v8 @kind this, `int` v9 , `long` v10 , `long`[] v12 @kind object, `boolean` v13 ) @signature `Lio/objectbox/Cursor;.modifyRelations:(IJ[JZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e0c1c.  v1:= v8.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0c20.  v0:= v8 @kind object;
  #L3e0c22.  v3:= v9;
  #L3e0c24.  v4:= v10 @kind wide;
  #L3e0c26.  v6:= v12 @kind object;
  #L3e0c28.  v7:= v13;
  #L3e0c2a.  call `nativeModifyRelations`(v0, v1, v3, v4, v6, v7) @signature `Lio/objectbox/Cursor;.nativeModifyRelations:(JIJ[JZ)V` @kind virtual;
  #L3e0c30.  return @kind void;
}
procedure `void` `modifyRelationsSingle`(`io.objectbox.Cursor` v9 @kind this, `int` v10 , `long` v11 , `long` v13 , `boolean` v15 ) @signature `Lio/objectbox/Cursor;.modifyRelationsSingle:(IJJZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e0c44.  v1:= v9.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0c48.  v0:= v9 @kind object;
  #L3e0c4a.  v3:= v10;
  #L3e0c4c.  v4:= v11 @kind wide;
  #L3e0c4e.  v6:= v13 @kind wide;
  #L3e0c50.  v8:= v15;
  #L3e0c52.  call `nativeModifyRelationsSingle`(v0, v1, v3, v4, v6, v8) @signature `Lio/objectbox/Cursor;.nativeModifyRelationsSingle:(JIJJZ)V` @kind virtual;
  #L3e0c58.  return @kind void;
}
procedure `long` `nativeCount`(`long` v0 , `long` v2 ) @signature `Lio/objectbox/Cursor;.nativeCount:(JJ)J` @AccessFlag NATIVE {

  # return;
}
procedure `void` `nativeDeleteAll`(`long` v0 ) @signature `Lio/objectbox/Cursor;.nativeDeleteAll:(J)V` @AccessFlag NATIVE {

  # return;
}
procedure `void` `nativeDestroy`(`long` v0 ) @signature `Lio/objectbox/Cursor;.nativeDestroy:(J)V` @AccessFlag NATIVE {

  # return;
}
procedure `java.util.List` `nativeGetAllEntities`(`long` v0 ) @signature `Lio/objectbox/Cursor;.nativeGetAllEntities:(J)Ljava/util/List;` @AccessFlag NATIVE {

  # return;
}
procedure `java.util.List` `nativeGetBacklinkEntities`(`long` v0 , `int` v2 , `int` v3 , `long` v4 ) @signature `Lio/objectbox/Cursor;.nativeGetBacklinkEntities:(JIIJ)Ljava/util/List;` @AccessFlag NATIVE {

  # return;
}
procedure `long`[] `nativeGetBacklinkIds`(`long` v0 , `int` v2 , `int` v3 , `long` v4 ) @signature `Lio/objectbox/Cursor;.nativeGetBacklinkIds:(JIIJ)[J` @AccessFlag NATIVE {

  # return;
}
procedure `long` `nativeGetCursorFor`(`long` v0 , `int` v2 ) @signature `Lio/objectbox/Cursor;.nativeGetCursorFor:(JI)J` @AccessFlag NATIVE {

  # return;
}
procedure `java.util.List` `nativeGetRelationEntities`(`long` v0 , `int` v2 , `int` v3 , `long` v4 , `boolean` v6 ) @signature `Lio/objectbox/Cursor;.nativeGetRelationEntities:(JIIJZ)Ljava/util/List;` @AccessFlag NATIVE {

  # return;
}
procedure `long`[] `nativeGetRelationIds`(`long` v0 , `int` v2 , `int` v3 , `long` v4 , `boolean` v6 ) @signature `Lio/objectbox/Cursor;.nativeGetRelationIds:(JIIJZ)[J` @AccessFlag NATIVE {

  # return;
}
procedure `void` `nativeModifyRelations`(`long` v0 , `int` v2 , `long` v3 , `long`[] v5 @kind object, `boolean` v6 ) @signature `Lio/objectbox/Cursor;.nativeModifyRelations:(JIJ[JZ)V` @AccessFlag NATIVE {

  # return;
}
procedure `void` `nativeModifyRelationsSingle`(`long` v0 , `int` v2 , `long` v3 , `long` v5 , `boolean` v7 ) @signature `Lio/objectbox/Cursor;.nativeModifyRelationsSingle:(JIJJZ)V` @AccessFlag NATIVE {

  # return;
}
procedure `int` `nativePropertyId`(`long` v0 , `java.lang.String` v2 @kind object) @signature `Lio/objectbox/Cursor;.nativePropertyId:(JLjava/lang/String;)I` @AccessFlag NATIVE {

  # return;
}
procedure `long` `nativeRenew`(`long` v0 ) @signature `Lio/objectbox/Cursor;.nativeRenew:(J)J` @AccessFlag NATIVE {

  # return;
}
procedure `void` `nativeSetBoxStoreForEntities`(`long` v0 , `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/Cursor;.nativeSetBoxStoreForEntities:(JLjava/lang/Object;)V` @AccessFlag NATIVE {

  # return;
}
procedure `java.lang.Object` `next`(`io.objectbox.Cursor` v2 @kind this) @signature `Lio/objectbox/Cursor;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e07f4.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e07f8.  call temp:= `nativeNextEntity`(v0) @signature `Lio/objectbox/Cursor;.nativeNextEntity:(J)Ljava/lang/Object;` @kind static;
  #L3e07fe.  v0:= temp @kind object;
  #L3e0800.  return v0 @kind object;
}
procedure `long` `put`(`java.lang.Object` v0 @kind object) @signature `Lio/objectbox/Cursor;.put:(Ljava/lang/Object;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `renew`(`io.objectbox.Cursor` v2 @kind this) @signature `Lio/objectbox/Cursor;.renew:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0c6c.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e0c70.  call temp:= `nativeRenew`(v2, v0) @signature `Lio/objectbox/Cursor;.nativeRenew:(J)J` @kind virtual;
  #L3e0c76.  return @kind void;
}
procedure `boolean` `seek`(`io.objectbox.Cursor` v2 @kind this, `long` v3 ) @signature `Lio/objectbox/Cursor;.seek:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e06f8.  v0:= v2.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e06fc.  call temp:= `nativeSeek`(v0, v3) @signature `Lio/objectbox/Cursor;.nativeSeek:(JJ)Z` @kind static;
  #L3e0702.  v3:= temp;
  #L3e0704.  return v3;
}
procedure `java.lang.String` `toString`(`io.objectbox.Cursor` v4 @kind this) @signature `Lio/objectbox/Cursor;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e0814.  v0:= new `java.lang.StringBuilder`;
  #L3e0818.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e081e.  v1:= "Cursor " @kind object;
  #L3e0822.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0828.  v1:= v4.`io.objectbox.Cursor.cursor` @type ^`long` @kind wide;
  #L3e082c.  v3:= 16I;
  #L3e0830.  call temp:= `toString`(v1, v3) @signature `Ljava/lang/Long;.toString:(JI)Ljava/lang/String;` @kind static;
  #L3e0836.  v1:= temp @kind object;
  #L3e0838.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e083e.  call temp:= `isClosed`(v4) @signature `Lio/objectbox/Cursor;.isClosed:()Z` @kind virtual;
  #L3e0844.  v1:= temp;
  #L3e0846.  if v1 == 0 then goto L3e0850;
  #L3e084a.  v1:= "(closed)" @kind object;
  #L3e084e.  goto L3e0854;
  #L3e0850.  v1:= "" @kind object;
  #L3e0854.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e085a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0860.  v0:= temp @kind object;
  #L3e0862.  return v0 @kind object;
}
