record `io.objectbox.relation.ToMany$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
  `io.objectbox.internal.IdGetter` `io.objectbox.relation.ToMany$a.a` @AccessFlag ;
  `io.objectbox.relation.ToMany` `io.objectbox.relation.ToMany$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.objectbox.relation.ToMany$a` v0 @kind this, `io.objectbox.relation.ToMany` v1 @kind object) @signature `Lio/objectbox/relation/ToMany$a;.<init>:(Lio/objectbox/relation/ToMany;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3eb4b4.  v0.`io.objectbox.relation.ToMany$a.b` @type ^`io.objectbox.relation.ToMany` := v1 @kind object;
  #L3eb4b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb4be.  call temp:= `b`(v1) @signature `Lio/objectbox/relation/ToMany;.b:(Lio/objectbox/relation/ToMany;)Lio/objectbox/relation/RelationInfo;` @kind static;
  #L3eb4c4.  v1:= temp @kind object;
  #L3eb4c6.  v1:= v1.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3eb4ca.  call temp:= `getIdGetter`(v1) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3eb4d0.  v1:= temp @kind object;
  #L3eb4d2.  v0.`io.objectbox.relation.ToMany$a.a` @type ^`io.objectbox.internal.IdGetter` := v1 @kind object;
  #L3eb4d6.  return @kind void;
}
procedure `int` `compare`(`io.objectbox.relation.ToMany$a` v7 @kind this, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lio/objectbox/relation/ToMany$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eb450.  v0:= v7.`io.objectbox.relation.ToMany$a.a` @type ^`io.objectbox.internal.IdGetter` @kind object;
  #L3eb454.  call temp:= `getId`(v0, v8) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3eb45a.  v0:= temp @kind wide;
  #L3eb45c.  v8:= v7.`io.objectbox.relation.ToMany$a.a` @type ^`io.objectbox.internal.IdGetter` @kind object;
  #L3eb460.  call temp:= `getId`(v8, v9) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3eb466.  v8:= temp @kind wide;
  #L3eb468.  v2:= 9223372036854775807L;
  #L3eb472.  v4:= 0L;
  #L3eb476.  v6:= lcmp(v0, v4);
  #L3eb47a.  if v6 != 0 then goto L3eb480;
  #L3eb47e.  v0:= v2 @kind wide;
  #L3eb480.  v6:= lcmp(v8, v4);
  #L3eb484.  if v6 != 0 then goto L3eb48a;
  #L3eb488.  v8:= v2 @kind wide;
  #L3eb48a.  v0:= v0 - v8 @kind long;
  #L3eb48c.  v8:= lcmp(v0, v4);
  #L3eb490.  if v8 >= 0 then goto L3eb498;
  #L3eb494.  v8:= -1I;
  #L3eb496.  return v8;
  #L3eb498.  if v8 <= 0 then goto L3eb4a0;
  #L3eb49c.  v8:= 1I;
  #L3eb49e.  return v8;
  #L3eb4a0.  v8:= 0I;
  #L3eb4a2.  return v8;
}
