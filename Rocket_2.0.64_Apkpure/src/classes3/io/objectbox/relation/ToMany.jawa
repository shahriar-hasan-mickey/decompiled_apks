record `io.objectbox.relation.ToMany` @kind class @AccessFlag PUBLIC extends `java.util.List` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.Object` `io.objectbox.relation.ToMany.a` @AccessFlag PRIVATE_FINAL;
  `io.objectbox.relation.RelationInfo` `io.objectbox.relation.ToMany.b` @AccessFlag PRIVATE_FINAL;
  `io.objectbox.relation.ListFactory` `io.objectbox.relation.ToMany.c` @AccessFlag PRIVATE_VOLATILE;
  `java.util.List` `io.objectbox.relation.ToMany.d` @AccessFlag PRIVATE;
  `java.util.Map` `io.objectbox.relation.ToMany.e` @AccessFlag PRIVATE;
  `java.util.Map` `io.objectbox.relation.ToMany.f` @AccessFlag PRIVATE_VOLATILE;
  `java.util.Map` `io.objectbox.relation.ToMany.g` @AccessFlag PRIVATE;
  `java.util.List` `io.objectbox.relation.ToMany.h` @AccessFlag ;
  `java.util.List` `io.objectbox.relation.ToMany.i` @AccessFlag ;
  `io.objectbox.BoxStore` `io.objectbox.relation.ToMany.j` @AccessFlag PRIVATE_TRANSIENT;
  `io.objectbox.Box` `io.objectbox.relation.ToMany.k` @AccessFlag PRIVATE_TRANSIENT;
  `io.objectbox.Box` `io.objectbox.relation.ToMany.l` @AccessFlag PRIVATE_TRANSIENT_VOLATILE;
  `boolean` `io.objectbox.relation.ToMany.m` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Comparator` `io.objectbox.relation.ToMany.n` @AccessFlag PRIVATE_TRANSIENT;
}
global `java.lang.Integer` `@@io.objectbox.relation.ToMany.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@io.objectbox.relation.ToMany.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/objectbox/relation/ToMany;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ec0a8.  v0:= 1I;
  #L3ec0aa.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ec0b0.  v0:= temp @kind object;
  #L3ec0b2.  `@@io.objectbox.relation.ToMany.o` @type ^`java.lang.Integer` := v0 @kind object;
  #L3ec0b6.  return @kind void;
}
procedure `void` `<init>`(`io.objectbox.relation.ToMany` v0 @kind this, `java.lang.Object` v1 @kind object, `io.objectbox.relation.RelationInfo` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.<init>:(Ljava/lang/Object;Lio/objectbox/relation/RelationInfo;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ec0c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ec0ce.  if v1 == 0 then goto L3ec0f0;
  #L3ec0d2.  if v2 == 0 then goto L3ec0e0;
  #L3ec0d6.  v0.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` := v1 @kind object;
  #L3ec0da.  v0.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` := v2 @kind object;
  #L3ec0de.  return @kind void;
  #L3ec0e0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ec0e4.  v2:= "No relation info given (null)" @kind object;
  #L3ec0e8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec0ee.  throw v1;
  #L3ec0f0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ec0f4.  v2:= "No source entity given (null)" @kind object;
  #L3ec0f8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec0fe.  throw v1;
}
procedure `void` `a`(`io.objectbox.relation.ToMany` v0 @kind object) @signature `Lio/objectbox/relation/ToMany;.a:(Lio/objectbox/relation/ToMany;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3ec090.  call `g`(v0) @signature `Lio/objectbox/relation/ToMany;.g:()V` @kind direct;
  #L3ec096.  return @kind void;
}
procedure `io.objectbox.relation.RelationInfo` `b`(`io.objectbox.relation.ToMany` v0 @kind object) @signature `Lio/objectbox/relation/ToMany;.b:(Lio/objectbox/relation/ToMany;)Lio/objectbox/relation/RelationInfo;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ebdcc.  v0:= v0.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ebdd0.  return v0 @kind object;
}
procedure `void` `c`(`io.objectbox.relation.ToMany` v8 @kind this, `io.objectbox.Cursor` v9 @kind object, `long` v10 , `java.lang.Object`[] v12 @kind object, `io.objectbox.internal.IdGetter` v13 @kind object) @signature `Lio/objectbox/relation/ToMany;.c:(Lio/objectbox/Cursor;J[Ljava/lang/Object;Lio/objectbox/internal/IdGetter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ec148.  v0:= length @variable v12;
  #L3ec14a.  v5:= new `long`[v0];
  #L3ec14e.  v1:= 0I;
  #L3ec150.  if v1 >= v0 then goto L3ec186;
  #L3ec154.  v2:= v12[v1] @kind object;
  #L3ec158.  call temp:= `getId`(v13, v2) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ec15e.  v2:= temp @kind wide;
  #L3ec160.  v6:= 0L;
  #L3ec164.  v4:= lcmp(v2, v6);
  #L3ec168.  if v4 == 0 then goto L3ec176;
  #L3ec16c.  v5[v1]:= v2 @kind wide;
  #L3ec170.  v1:= v1 + 1;
  #L3ec174.  goto L3ec150;
  #L3ec176.  v9:= new `java.lang.IllegalStateException`;
  #L3ec17a.  v10:= "Target entity has no ID (should have been put before)" @kind object;
  #L3ec17e.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec184.  throw v9;
  #L3ec186.  v12:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec18a.  v2:= v12.`io.objectbox.relation.RelationInfo.relationId` @type ^`int`;
  #L3ec18e.  v6:= 0I;
  #L3ec190.  v1:= v9 @kind object;
  #L3ec192.  v3:= v10 @kind wide;
  #L3ec194.  call `modifyRelations`(v1, v2, v3, v5, v6) @signature `Lio/objectbox/Cursor;.modifyRelations:(IJ[JZ)V` @kind virtual;
  #L3ec19a.  return @kind void;
}
procedure `void` `d`(`io.objectbox.relation.ToMany` v3 @kind this) @signature `Lio/objectbox/relation/ToMany;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ec2c0.  v0:= v3.`io.objectbox.relation.ToMany.l` @type ^`io.objectbox.Box` @kind object;
  #L3ec2c4.  if v0 != 0 then goto L3ec35c;
  #L3ec2c8.  call temp:= `getInstance`() @signature `Lio/objectbox/internal/ReflectionCache;.getInstance:()Lio/objectbox/internal/ReflectionCache;` @kind static;
  #L3ec2ce.  v0:= temp @kind object;
  #L3ec2d0.  v1:= v3.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` @kind object;
  #L3ec2d4.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ec2da.  v1:= temp @kind object;
  #L3ec2dc.  v2:= "__boxStore" @kind object;
  #L3ec2e0.  call temp:= `getField`(v0, v1, v2) @signature `Lio/objectbox/internal/ReflectionCache;.getField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L3ec2e6.  v0:= temp @kind object;
  #L3ec2e8.  v1:= v3.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` @kind object;
  #L3ec2ec.  call temp:= `get`(v0, v1) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ec2f2.  v0:= temp @kind object;
  #L3ec2f4.  v0:= (`io.objectbox.BoxStore`) v0 @kind object;
  #L3ec2f8.  v3.`io.objectbox.relation.ToMany.j` @type ^`io.objectbox.BoxStore` := v0 @kind object;
  #L3ec2fc.  if v0 == 0 then goto L3ec33e;
  #L3ec300.  v1:= v3.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec304.  v1:= v1.`io.objectbox.relation.RelationInfo.sourceInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec308.  call temp:= `getEntityClass`(v1) @signature `Lio/objectbox/EntityInfo;.getEntityClass:()Ljava/lang/Class;` @kind interface;
  #L3ec30e.  v1:= temp @kind object;
  #L3ec310.  call temp:= `boxFor`(v0, v1) @signature `Lio/objectbox/BoxStore;.boxFor:(Ljava/lang/Class;)Lio/objectbox/Box;` @kind virtual;
  #L3ec316.  v0:= temp @kind object;
  #L3ec318.  v3.`io.objectbox.relation.ToMany.k` @type ^`io.objectbox.Box` := v0 @kind object;
  #L3ec31c.  v0:= v3.`io.objectbox.relation.ToMany.j` @type ^`io.objectbox.BoxStore` @kind object;
  #L3ec320.  v1:= v3.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec324.  v1:= v1.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec328.  call temp:= `getEntityClass`(v1) @signature `Lio/objectbox/EntityInfo;.getEntityClass:()Ljava/lang/Class;` @kind interface;
  #L3ec32e.  v1:= temp @kind object;
  #L3ec330.  call temp:= `boxFor`(v0, v1) @signature `Lio/objectbox/BoxStore;.boxFor:(Ljava/lang/Class;)Lio/objectbox/Box;` @kind virtual;
  #L3ec336.  v0:= temp @kind object;
  #L3ec338.  v3.`io.objectbox.relation.ToMany.l` @type ^`io.objectbox.Box` := v0 @kind object;
  #L3ec33c.  goto L3ec35c;
  #L3ec33e.  v0:= new `io.objectbox.exception.DbDetachedException`;
  #L3ec342.  v1:= "Cannot resolve relation for detached entities, call box.attach(entity) beforehand." @kind object;
  #L3ec346.  call `<init>`(v0, v1) @signature `Lio/objectbox/exception/DbDetachedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec34c.  throw v0;
  #L3ec34e.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3ec350.  v1:= new `java.lang.RuntimeException`;
  #L3ec354.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3ec35a.  throw v1;
  #L3ec35c.  return @kind void;
  catch `java.lang.IllegalAccessException` @[L3ec2e8..L3ec2fc] goto L3ec34e;
  catch `java.lang.IllegalAccessException` @[L3ec33e..L3ec34e] goto L3ec34e;
}
procedure `void` `e`(`io.objectbox.relation.ToMany` v8 @kind this) @signature `Lio/objectbox/relation/ToMany;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ec388.  v0:= v8.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec38c.  if v0 != 0 then goto L3ec488;
  #L3ec390.  v0:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec394.  v0:= v0.`io.objectbox.relation.RelationInfo.sourceInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec398.  call temp:= `getIdGetter`(v0) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3ec39e.  v0:= temp @kind object;
  #L3ec3a0.  v1:= v8.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` @kind object;
  #L3ec3a4.  call temp:= `getId`(v0, v1) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ec3aa.  v5:= temp @kind wide;
  #L3ec3ac.  v0:= 0L;
  #L3ec3b0.  v2:= lcmp(v5, v0);
  #L3ec3b4.  if v2 != 0 then goto L3ec3e0;
  #L3ec3b8.  @monitorenter v8
  #L3ec3ba.  v0:= v8.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec3be.  if v0 != 0 then goto L3ec3d6;
  #L3ec3c2.  call temp:= `getListFactory`(v8) @signature `Lio/objectbox/relation/ToMany;.getListFactory:()Lio/objectbox/relation/ListFactory;` @kind virtual;
  #L3ec3c8.  v0:= temp @kind object;
  #L3ec3ca.  call temp:= `createList`(v0) @signature `Lio/objectbox/relation/ListFactory;.createList:()Ljava/util/List;` @kind interface;
  #L3ec3d0.  v0:= temp @kind object;
  #L3ec3d2.  v8.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` := v0 @kind object;
  #L3ec3d6.  @monitorexit v8
  #L3ec3d8.  goto L3ec488;
  #L3ec3da.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec3dc.  @monitorexit v8
  #L3ec3de.  throw v0;
  #L3ec3e0.  call `d`(v8) @signature `Lio/objectbox/relation/ToMany;.d:()V` @kind direct;
  #L3ec3e6.  v0:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec3ea.  v4:= v0.`io.objectbox.relation.RelationInfo.relationId` @type ^`int`;
  #L3ec3ee.  if v4 == 0 then goto L3ec40e;
  #L3ec3f2.  v0:= v0.`io.objectbox.relation.RelationInfo.sourceInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec3f6.  call temp:= `getEntityId`(v0) @signature `Lio/objectbox/EntityInfo;.getEntityId:()I` @kind interface;
  #L3ec3fc.  v3:= temp;
  #L3ec3fe.  v2:= v8.`io.objectbox.relation.ToMany.l` @type ^`io.objectbox.Box` @kind object;
  #L3ec402.  v7:= 0I;
  #L3ec404.  call temp:= `internalGetRelationEntities`(v2, v3, v4, v5, v7) @signature `Lio/objectbox/Box;.internalGetRelationEntities:(IIJZ)Ljava/util/List;` @kind virtual;
  #L3ec40a.  v0:= temp @kind object;
  #L3ec40c.  goto L3ec462;
  #L3ec40e.  v0:= v0.`io.objectbox.relation.RelationInfo.targetIdProperty` @type ^`io.objectbox.Property` @kind object;
  #L3ec412.  if v0 == 0 then goto L3ec43c;
  #L3ec416.  v0:= v8.`io.objectbox.relation.ToMany.l` @type ^`io.objectbox.Box` @kind object;
  #L3ec41a.  v1:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec41e.  v1:= v1.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec422.  call temp:= `getEntityId`(v1) @signature `Lio/objectbox/EntityInfo;.getEntityId:()I` @kind interface;
  #L3ec428.  v1:= temp;
  #L3ec42a.  v2:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec42e.  v2:= v2.`io.objectbox.relation.RelationInfo.targetIdProperty` @type ^`io.objectbox.Property` @kind object;
  #L3ec432.  call temp:= `internalGetBacklinkEntities`(v0, v1, v2, v5) @signature `Lio/objectbox/Box;.internalGetBacklinkEntities:(ILio/objectbox/Property;J)Ljava/util/List;` @kind virtual;
  #L3ec438.  v0:= temp @kind object;
  #L3ec43a.  goto L3ec462;
  #L3ec43c.  v2:= v8.`io.objectbox.relation.ToMany.l` @type ^`io.objectbox.Box` @kind object;
  #L3ec440.  v0:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec444.  v0:= v0.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec448.  call temp:= `getEntityId`(v0) @signature `Lio/objectbox/EntityInfo;.getEntityId:()I` @kind interface;
  #L3ec44e.  v3:= temp;
  #L3ec450.  v0:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec454.  v4:= v0.`io.objectbox.relation.RelationInfo.targetRelationId` @type ^`int`;
  #L3ec458.  v7:= 1I;
  #L3ec45a.  call temp:= `internalGetRelationEntities`(v2, v3, v4, v5, v7) @signature `Lio/objectbox/Box;.internalGetRelationEntities:(IIJZ)Ljava/util/List;` @kind virtual;
  #L3ec460.  v0:= temp @kind object;
  #L3ec462.  v1:= v8.`io.objectbox.relation.ToMany.n` @type ^`java.util.Comparator` @kind object;
  #L3ec466.  if v1 == 0 then goto L3ec470;
  #L3ec46a.  call `sort`(v0, v1) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L3ec470.  @monitorenter v8
  #L3ec472.  v1:= v8.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec476.  if v1 != 0 then goto L3ec47e;
  #L3ec47a.  v8.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` := v0 @kind object;
  #L3ec47e.  @monitorexit v8
  #L3ec480.  goto L3ec488;
  #L3ec482.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec484.  @monitorexit v8
  #L3ec486.  throw v0;
  #L3ec488.  return @kind void;
  catch `java.lang.Throwable` @[L3ec3ba..L3ec3de] goto L3ec3da;
  catch `java.lang.Throwable` @[L3ec472..L3ec486] goto L3ec482;
}
procedure `void` `f`(`io.objectbox.relation.ToMany` v4 @kind this) @signature `Lio/objectbox/relation/ToMany;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ec4b4.  call `e`(v4) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ec4ba.  v0:= v4.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ec4be.  if v0 != 0 then goto L3ec558;
  #L3ec4c2.  @monitorenter v4
  #L3ec4c4.  v0:= v4.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ec4c8.  if v0 != 0 then goto L3ec54e;
  #L3ec4cc.  v0:= new `java.util.LinkedHashMap`;
  #L3ec4d0.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3ec4d6.  v4.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` := v0 @kind object;
  #L3ec4da.  v0:= new `java.util.LinkedHashMap`;
  #L3ec4de.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3ec4e4.  v4.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` := v0 @kind object;
  #L3ec4e8.  v0:= new `java.util.HashMap`;
  #L3ec4ec.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3ec4f2.  v4.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` := v0 @kind object;
  #L3ec4f6.  v0:= v4.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec4fa.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ec500.  v0:= temp @kind object;
  #L3ec502.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ec508.  v1:= temp;
  #L3ec50a.  if v1 == 0 then goto L3ec54e;
  #L3ec50e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ec514.  v1:= temp @kind object;
  #L3ec516.  v2:= v4.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` @kind object;
  #L3ec51a.  v3:= `@@io.objectbox.relation.ToMany.o` @type ^`java.lang.Integer` @kind object;
  #L3ec51e.  call temp:= `put`(v2, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ec524.  v2:= temp @kind object;
  #L3ec526.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L3ec52a.  if v2 == 0 then goto L3ec502;
  #L3ec52e.  v3:= v4.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` @kind object;
  #L3ec532.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ec538.  v2:= temp;
  #L3ec53a.  v2:= v2 + 1;
  #L3ec53e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ec544.  v2:= temp @kind object;
  #L3ec546.  call temp:= `put`(v3, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ec54c.  goto L3ec502;
  #L3ec54e.  @monitorexit v4
  #L3ec550.  goto L3ec558;
  #L3ec552.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec554.  @monitorexit v4
  #L3ec556.  throw v0;
  #L3ec558.  return @kind void;
  catch `java.lang.Throwable` @[L3ec4c4..L3ec556] goto L3ec552;
}
procedure `void` `g`(`io.objectbox.relation.ToMany` v2 @kind this) @signature `Lio/objectbox/relation/ToMany;.g:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3ec7ac.  v0:= v2.`io.objectbox.relation.ToMany.k` @type ^`io.objectbox.Box` @kind object;
  #L3ec7b0.  call temp:= `getActiveTxCursor`(v0) @signature `Lio/objectbox/InternalAccess;.getActiveTxCursor:(Lio/objectbox/Box;)Lio/objectbox/Cursor;` @kind static;
  #L3ec7b6.  v0:= temp @kind object;
  #L3ec7b8.  v1:= v2.`io.objectbox.relation.ToMany.l` @type ^`io.objectbox.Box` @kind object;
  #L3ec7bc.  call temp:= `getActiveTxCursor`(v1) @signature `Lio/objectbox/InternalAccess;.getActiveTxCursor:(Lio/objectbox/Box;)Lio/objectbox/Cursor;` @kind static;
  #L3ec7c2.  v1:= temp @kind object;
  #L3ec7c4.  call `internalApplyToDb`(v2, v0, v1) @signature `Lio/objectbox/relation/ToMany;.internalApplyToDb:(Lio/objectbox/Cursor;Lio/objectbox/Cursor;)V` @kind virtual;
  #L3ec7ca.  return @kind void;
}
procedure `boolean` `h`(`io.objectbox.relation.ToMany` v8 @kind this, `long` v9 , `io.objectbox.internal.IdGetter` v11 @kind object, `java.util.Map` v12 @kind object, `java.util.Map` v13 @kind object) @signature `Lio/objectbox/relation/ToMany;.h:(JLio/objectbox/internal/IdGetter;Ljava/util/Map;Ljava/util/Map;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3eb7d8.  v0:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3eb7dc.  v0:= v0.`io.objectbox.relation.RelationInfo.backlinkToManyGetter` @type ^`io.objectbox.internal.ToManyGetter` @kind object;
  #L3eb7e0.  @monitorenter v8
  #L3eb7e2.  v1:= 0L;
  #L3eb7e6.  if v12 == 0 then goto L3eb8bc;
  #L3eb7ea.  call temp:= `isEmpty`(v12) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3eb7f0.  v3:= temp;
  #L3eb7f2.  if v3 != 0 then goto L3eb8bc;
  #L3eb7f6.  call temp:= `keySet`(v12) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3eb7fc.  v3:= temp @kind object;
  #L3eb7fe.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3eb804.  v3:= temp @kind object;
  #L3eb806.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3eb80c.  v4:= temp;
  #L3eb80e.  if v4 == 0 then goto L3eb8b0;
  #L3eb812.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3eb818.  v4:= temp @kind object;
  #L3eb81a.  call temp:= `getToMany`(v0, v4) @signature `Lio/objectbox/internal/ToManyGetter;.getToMany:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #L3eb820.  v5:= temp @kind object;
  #L3eb822.  v5:= (`io.objectbox.relation.ToMany`) v5 @kind object;
  #L3eb826.  if v5 == 0 then goto L3eb868;
  #L3eb82a.  call temp:= `getById`(v5, v9) @signature `Lio/objectbox/relation/ToMany;.getById:(J)Ljava/lang/Object;` @kind virtual;
  #L3eb830.  v6:= temp @kind object;
  #L3eb832.  if v6 != 0 then goto L3eb84c;
  #L3eb836.  v6:= v8.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` @kind object;
  #L3eb83a.  call temp:= `add`(v5, v6) @signature `Lio/objectbox/relation/ToMany;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3eb840.  v5:= v8.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3eb844.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb84a.  goto L3eb806;
  #L3eb84c.  call temp:= `getId`(v11, v4) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3eb852.  v5:= temp @kind wide;
  #L3eb854.  v7:= lcmp(v5, v1);
  #L3eb858.  if v7 != 0 then goto L3eb806;
  #L3eb85c.  v5:= v8.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3eb860.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb866.  goto L3eb806;
  #L3eb868.  v9:= new `java.lang.IllegalStateException`;
  #L3eb86c.  v10:= new `java.lang.StringBuilder`;
  #L3eb870.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eb876.  v11:= "The ToMany property for " @kind object;
  #L3eb87a.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb880.  v11:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3eb884.  v11:= v11.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3eb888.  call temp:= `getEntityName`(v11) @signature `Lio/objectbox/EntityInfo;.getEntityName:()Ljava/lang/String;` @kind interface;
  #L3eb88e.  v11:= temp @kind object;
  #L3eb890.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb896.  v11:= " is null" @kind object;
  #L3eb89a.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb8a0.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eb8a6.  v10:= temp @kind object;
  #L3eb8a8.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb8ae.  throw v9;
  #L3eb8b0.  call `clear`(v12) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3eb8b6.  goto L3eb8bc;
  #L3eb8b8.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb8ba.  goto L3eb964;
  #L3eb8bc.  if v13 == 0 then goto L3eb938;
  #L3eb8c0.  call temp:= `keySet`(v13) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3eb8c6.  v12:= temp @kind object;
  #L3eb8c8.  call temp:= `iterator`(v12) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3eb8ce.  v12:= temp @kind object;
  #L3eb8d0.  call temp:= `hasNext`(v12) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3eb8d6.  v3:= temp;
  #L3eb8d8.  if v3 == 0 then goto L3eb932;
  #L3eb8dc.  call temp:= `next`(v12) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3eb8e2.  v3:= temp @kind object;
  #L3eb8e4.  call temp:= `getToMany`(v0, v3) @signature `Lio/objectbox/internal/ToManyGetter;.getToMany:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #L3eb8ea.  v4:= temp @kind object;
  #L3eb8ec.  v4:= (`io.objectbox.relation.ToMany`) v4 @kind object;
  #L3eb8f0.  call temp:= `getById`(v4, v9) @signature `Lio/objectbox/relation/ToMany;.getById:(J)Ljava/lang/Object;` @kind virtual;
  #L3eb8f6.  v5:= temp @kind object;
  #L3eb8f8.  if v5 == 0 then goto L3eb8d0;
  #L3eb8fc.  call temp:= `removeById`(v4, v9) @signature `Lio/objectbox/relation/ToMany;.removeById:(J)Ljava/lang/Object;` @kind virtual;
  #L3eb902.  call temp:= `getId`(v11, v3) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3eb908.  v4:= temp @kind wide;
  #L3eb90a.  v6:= lcmp(v4, v1);
  #L3eb90e.  if v6 == 0 then goto L3eb8d0;
  #L3eb912.  v4:= v8.`io.objectbox.relation.ToMany.m` @type ^`boolean` @kind boolean;
  #L3eb916.  if v4 == 0 then goto L3eb926;
  #L3eb91a.  v4:= v8.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` @kind object;
  #L3eb91e.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb924.  goto L3eb8d0;
  #L3eb926.  v4:= v8.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3eb92a.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb930.  goto L3eb8d0;
  #L3eb932.  call `clear`(v13) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3eb938.  v9:= v8.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3eb93c.  call temp:= `isEmpty`(v9) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3eb942.  v9:= temp;
  #L3eb944.  if v9 == 0 then goto L3eb95e;
  #L3eb948.  v9:= v8.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` @kind object;
  #L3eb94c.  call temp:= `isEmpty`(v9) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3eb952.  v9:= temp;
  #L3eb954.  if v9 != 0 then goto L3eb95a;
  #L3eb958.  goto L3eb95e;
  #L3eb95a.  v9:= 0I;
  #L3eb95c.  goto L3eb960;
  #L3eb95e.  v9:= 1I;
  #L3eb960.  @monitorexit v8
  #L3eb962.  return v9;
  #L3eb964.  @monitorexit v8
  #L3eb966.  throw v9;
  catch `java.lang.Throwable` @[L3eb7ea..L3eb966] goto L3eb8b8;
}
procedure `boolean` `i`(`io.objectbox.relation.ToMany` v9 @kind this, `long` v10 , `io.objectbox.internal.IdGetter` v12 @kind object, `java.util.Map` v13 @kind object, `java.util.Map` v14 @kind object) @signature `Lio/objectbox/relation/ToMany;.i:(JLio/objectbox/internal/IdGetter;Ljava/util/Map;Ljava/util/Map;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3eb984.  v0:= v9.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3eb988.  v0:= v0.`io.objectbox.relation.RelationInfo.backlinkToOneGetter` @type ^`io.objectbox.internal.ToOneGetter` @kind object;
  #L3eb98c.  @monitorenter v9
  #L3eb98e.  v1:= 0L;
  #L3eb992.  if v13 == 0 then goto L3eba84;
  #L3eb996.  call temp:= `isEmpty`(v13) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3eb99c.  v3:= temp;
  #L3eb99e.  if v3 != 0 then goto L3eba84;
  #L3eb9a2.  call temp:= `keySet`(v13) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3eb9a8.  v3:= temp @kind object;
  #L3eb9aa.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3eb9b0.  v3:= temp @kind object;
  #L3eb9b2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3eb9b8.  v4:= temp;
  #L3eb9ba.  if v4 == 0 then goto L3eba78;
  #L3eb9be.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3eb9c4.  v4:= temp @kind object;
  #L3eb9c6.  call temp:= `getToOne`(v0, v4) @signature `Lio/objectbox/internal/ToOneGetter;.getToOne:(Ljava/lang/Object;)Lio/objectbox/relation/ToOne;` @kind interface;
  #L3eb9cc.  v5:= temp @kind object;
  #L3eb9ce.  if v5 == 0 then goto L3eba14;
  #L3eb9d2.  call temp:= `getTargetId`(v5) @signature `Lio/objectbox/relation/ToOne;.getTargetId:()J` @kind virtual;
  #L3eb9d8.  v6:= temp @kind wide;
  #L3eb9da.  v8:= lcmp(v6, v10);
  #L3eb9de.  if v8 == 0 then goto L3eb9f8;
  #L3eb9e2.  v6:= v9.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` @kind object;
  #L3eb9e6.  call `setTarget`(v5, v6) @signature `Lio/objectbox/relation/ToOne;.setTarget:(Ljava/lang/Object;)V` @kind virtual;
  #L3eb9ec.  v5:= v9.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3eb9f0.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb9f6.  goto L3eb9b2;
  #L3eb9f8.  call temp:= `getId`(v12, v4) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3eb9fe.  v5:= temp @kind wide;
  #L3eba00.  v7:= lcmp(v5, v1);
  #L3eba04.  if v7 != 0 then goto L3eb9b2;
  #L3eba08.  v5:= v9.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3eba0c.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eba12.  goto L3eb9b2;
  #L3eba14.  v10:= new `java.lang.IllegalStateException`;
  #L3eba18.  v11:= new `java.lang.StringBuilder`;
  #L3eba1c.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eba22.  v12:= "The ToOne property for " @kind object;
  #L3eba26.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba2c.  v12:= v9.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3eba30.  v12:= v12.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3eba34.  call temp:= `getEntityName`(v12) @signature `Lio/objectbox/EntityInfo;.getEntityName:()Ljava/lang/String;` @kind interface;
  #L3eba3a.  v12:= temp @kind object;
  #L3eba3c.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba42.  v12:= "." @kind object;
  #L3eba46.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba4c.  v12:= v9.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3eba50.  v12:= v12.`io.objectbox.relation.RelationInfo.targetIdProperty` @type ^`io.objectbox.Property` @kind object;
  #L3eba54.  v12:= v12.`io.objectbox.Property.name` @type ^`java.lang.String` @kind object;
  #L3eba58.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba5e.  v12:= " is null" @kind object;
  #L3eba62.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba68.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eba6e.  v11:= temp @kind object;
  #L3eba70.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eba76.  throw v10;
  #L3eba78.  call `clear`(v13) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3eba7e.  goto L3eba84;
  #L3eba80.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eba82.  goto L3ebb2e;
  #L3eba84.  if v14 == 0 then goto L3ebb02;
  #L3eba88.  call temp:= `keySet`(v14) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3eba8e.  v13:= temp @kind object;
  #L3eba90.  call temp:= `iterator`(v13) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3eba96.  v13:= temp @kind object;
  #L3eba98.  call temp:= `hasNext`(v13) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3eba9e.  v3:= temp;
  #L3ebaa0.  if v3 == 0 then goto L3ebafc;
  #L3ebaa4.  call temp:= `next`(v13) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ebaaa.  v3:= temp @kind object;
  #L3ebaac.  call temp:= `getToOne`(v0, v3) @signature `Lio/objectbox/internal/ToOneGetter;.getToOne:(Ljava/lang/Object;)Lio/objectbox/relation/ToOne;` @kind interface;
  #L3ebab2.  v4:= temp @kind object;
  #L3ebab4.  call temp:= `getTargetId`(v4) @signature `Lio/objectbox/relation/ToOne;.getTargetId:()J` @kind virtual;
  #L3ebaba.  v5:= temp @kind wide;
  #L3ebabc.  v7:= lcmp(v5, v10);
  #L3ebac0.  if v7 != 0 then goto L3eba98;
  #L3ebac4.  v5:= 0I;
  #L3ebac6.  call `setTarget`(v4, v5) @signature `Lio/objectbox/relation/ToOne;.setTarget:(Ljava/lang/Object;)V` @kind virtual;
  #L3ebacc.  call temp:= `getId`(v12, v3) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ebad2.  v4:= temp @kind wide;
  #L3ebad4.  v6:= lcmp(v4, v1);
  #L3ebad8.  if v6 == 0 then goto L3eba98;
  #L3ebadc.  v4:= v9.`io.objectbox.relation.ToMany.m` @type ^`boolean` @kind boolean;
  #L3ebae0.  if v4 == 0 then goto L3ebaf0;
  #L3ebae4.  v4:= v9.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` @kind object;
  #L3ebae8.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ebaee.  goto L3eba98;
  #L3ebaf0.  v4:= v9.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3ebaf4.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ebafa.  goto L3eba98;
  #L3ebafc.  call `clear`(v14) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3ebb02.  v10:= v9.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3ebb06.  call temp:= `isEmpty`(v10) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3ebb0c.  v10:= temp;
  #L3ebb0e.  if v10 == 0 then goto L3ebb28;
  #L3ebb12.  v10:= v9.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` @kind object;
  #L3ebb16.  call temp:= `isEmpty`(v10) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3ebb1c.  v10:= temp;
  #L3ebb1e.  if v10 != 0 then goto L3ebb24;
  #L3ebb22.  goto L3ebb28;
  #L3ebb24.  v10:= 0I;
  #L3ebb26.  goto L3ebb2a;
  #L3ebb28.  v10:= 1I;
  #L3ebb2a.  @monitorexit v9
  #L3ebb2c.  return v10;
  #L3ebb2e.  @monitorexit v9
  #L3ebb30.  throw v10;
  catch `java.lang.Throwable` @[L3eb996..L3ebb30] goto L3eba80;
}
procedure `void` `j`(`io.objectbox.relation.ToMany` v7 @kind this, `io.objectbox.Cursor` v8 @kind object, `long` v9 , `java.util.List` v11 @kind object, `io.objectbox.internal.IdGetter` v12 @kind object) @signature `Lio/objectbox/relation/ToMany;.j:(Lio/objectbox/Cursor;JLjava/util/List;Lio/objectbox/internal/IdGetter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ec7dc.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ec7e2.  v0:= temp @kind object;
  #L3ec7e4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ec7ea.  v1:= temp;
  #L3ec7ec.  if v1 == 0 then goto L3ec814;
  #L3ec7f0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ec7f6.  v1:= temp @kind object;
  #L3ec7f8.  call temp:= `getId`(v12, v1) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ec7fe.  v1:= temp @kind wide;
  #L3ec800.  v3:= 0L;
  #L3ec804.  v5:= lcmp(v1, v3);
  #L3ec808.  if v5 != 0 then goto L3ec7e4;
  #L3ec80c.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3ec812.  goto L3ec7e4;
  #L3ec814.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ec81a.  v0:= temp;
  #L3ec81c.  if v0 <= 0 then goto L3ec858;
  #L3ec820.  v5:= new `long`[v0];
  #L3ec824.  v1:= 0I;
  #L3ec826.  if v1 >= v0 then goto L3ec844;
  #L3ec82a.  call temp:= `get`(v11, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ec830.  v2:= temp @kind object;
  #L3ec832.  call temp:= `getId`(v12, v2) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ec838.  v2:= temp @kind wide;
  #L3ec83a.  v5[v1]:= v2 @kind wide;
  #L3ec83e.  v1:= v1 + 1;
  #L3ec842.  goto L3ec826;
  #L3ec844.  v11:= v7.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec848.  v2:= v11.`io.objectbox.relation.RelationInfo.relationId` @type ^`int`;
  #L3ec84c.  v6:= 1I;
  #L3ec84e.  v1:= v8 @kind object;
  #L3ec850.  v3:= v9 @kind wide;
  #L3ec852.  call `modifyRelations`(v1, v2, v3, v5, v6) @signature `Lio/objectbox/Cursor;.modifyRelations:(IJ[JZ)V` @kind virtual;
  #L3ec858.  return @kind void;
}
procedure `void` `k`(`io.objectbox.relation.ToMany` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/relation/ToMany;.k:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ec94c.  call `f`(v2) @signature `Lio/objectbox/relation/ToMany;.f:()V` @kind direct;
  #L3ec952.  v0:= v2.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` @kind object;
  #L3ec956.  v1:= `@@io.objectbox.relation.ToMany.o` @type ^`java.lang.Integer` @kind object;
  #L3ec95a.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ec960.  v0:= temp @kind object;
  #L3ec962.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3ec966.  if v0 == 0 then goto L3ec988;
  #L3ec96a.  v1:= v2.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` @kind object;
  #L3ec96e.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ec974.  v0:= temp;
  #L3ec976.  v0:= v0 + 1;
  #L3ec97a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ec980.  v0:= temp @kind object;
  #L3ec982.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ec988.  v0:= v2.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ec98c.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3ec990.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ec996.  v0:= v2.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3ec99a.  call temp:= `remove`(v0, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ec9a0.  return @kind void;
}
procedure `void` `l`(`io.objectbox.relation.ToMany` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.l:(Ljava/util/Collection;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec9b4.  call `f`(v1) @signature `Lio/objectbox/relation/ToMany;.f:()V` @kind direct;
  #L3ec9ba.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ec9c0.  v2:= temp @kind object;
  #L3ec9c2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ec9c8.  v0:= temp;
  #L3ec9ca.  if v0 == 0 then goto L3ec9de;
  #L3ec9ce.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ec9d4.  v0:= temp @kind object;
  #L3ec9d6.  call `k`(v1, v0) @signature `Lio/objectbox/relation/ToMany;.k:(Ljava/lang/Object;)V` @kind direct;
  #L3ec9dc.  goto L3ec9c2;
  #L3ec9de.  return @kind void;
}
procedure `void` `m`(`io.objectbox.relation.ToMany` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/objectbox/relation/ToMany;.m:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ec9f0.  call `f`(v3) @signature `Lio/objectbox/relation/ToMany;.f:()V` @kind direct;
  #L3ec9f6.  v0:= v3.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` @kind object;
  #L3ec9fa.  call temp:= `remove`(v0, v4) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3eca00.  v0:= temp @kind object;
  #L3eca02.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3eca06.  if v0 == 0 then goto L3eca94;
  #L3eca0a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3eca10.  v1:= temp;
  #L3eca12.  v2:= 1I;
  #L3eca14.  if v1 != v2 then goto L3eca3c;
  #L3eca18.  v0:= v3.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` @kind object;
  #L3eca1c.  call temp:= `remove`(v0, v4) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3eca22.  v0:= v3.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3eca26.  call temp:= `remove`(v0, v4) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3eca2c.  v0:= v3.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3eca30.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3eca34.  call temp:= `put`(v0, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3eca3a.  goto L3eca94;
  #L3eca3c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3eca42.  v1:= temp;
  #L3eca44.  if v1 <= v2 then goto L3eca66;
  #L3eca48.  v1:= v3.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` @kind object;
  #L3eca4c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3eca52.  v0:= temp;
  #L3eca54.  v0:= v0 - v2 @kind int;
  #L3eca56.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eca5c.  v0:= temp @kind object;
  #L3eca5e.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3eca64.  goto L3eca94;
  #L3eca66.  v4:= new `java.lang.IllegalStateException`;
  #L3eca6a.  v1:= new `java.lang.StringBuilder`;
  #L3eca6e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eca74.  v2:= "Illegal count: " @kind object;
  #L3eca78.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eca7e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eca84.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eca8a.  v0:= temp @kind object;
  #L3eca8c.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eca92.  throw v4;
  #L3eca94.  return @kind void;
}
procedure `void` `add`(`io.objectbox.relation.ToMany` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/relation/ToMany;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec110.  @monitorenter v1
  #L3ec112.  call `k`(v1, v3) @signature `Lio/objectbox/relation/ToMany;.k:(Ljava/lang/Object;)V` @kind direct;
  #L3ec118.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec11c.  call `add`(v0, v2, v3) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3ec122.  @monitorexit v1
  #L3ec124.  return @kind void;
  #L3ec126.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec128.  @monitorexit v1
  #L3ec12a.  throw v2;
  catch `java.lang.Throwable` @[L3ec112..L3ec122] goto L3ec126;
}
procedure `boolean` `add`(`io.objectbox.relation.ToMany` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb4e8.  @monitorenter v1
  #L3eb4ea.  call `k`(v1, v2) @signature `Lio/objectbox/relation/ToMany;.k:(Ljava/lang/Object;)V` @kind direct;
  #L3eb4f0.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3eb4f4.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb4fa.  v2:= temp;
  #L3eb4fc.  @monitorexit v1
  #L3eb4fe.  return v2;
  #L3eb500.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb502.  @monitorexit v1
  #L3eb504.  throw v2;
  catch `java.lang.Throwable` @[L3eb4ea..L3eb4fc] goto L3eb500;
}
procedure `boolean` `addAll`(`io.objectbox.relation.ToMany` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Lio/objectbox/relation/ToMany;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb524.  @monitorenter v1
  #L3eb526.  call `l`(v1, v3) @signature `Lio/objectbox/relation/ToMany;.l:(Ljava/util/Collection;)V` @kind direct;
  #L3eb52c.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3eb530.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/List;.addAll:(ILjava/util/Collection;)Z` @kind interface;
  #L3eb536.  v2:= temp;
  #L3eb538.  @monitorexit v1
  #L3eb53a.  return v2;
  #L3eb53c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb53e.  @monitorexit v1
  #L3eb540.  throw v2;
  catch `java.lang.Throwable` @[L3eb526..L3eb538] goto L3eb53c;
}
procedure `boolean` `addAll`(`io.objectbox.relation.ToMany` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb560.  @monitorenter v1
  #L3eb562.  call `l`(v1, v2) @signature `Lio/objectbox/relation/ToMany;.l:(Ljava/util/Collection;)V` @kind direct;
  #L3eb568.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3eb56c.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3eb572.  v2:= temp;
  #L3eb574.  @monitorexit v1
  #L3eb576.  return v2;
  #L3eb578.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb57a.  @monitorexit v1
  #L3eb57c.  throw v2;
  catch `java.lang.Throwable` @[L3eb562..L3eb574] goto L3eb578;
}
procedure `void` `applyChangesToDb`(`io.objectbox.relation.ToMany` v5 @kind this) @signature `Lio/objectbox/relation/ToMany;.applyChangesToDb:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ec1ac.  v0:= v5.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec1b0.  v0:= v0.`io.objectbox.relation.RelationInfo.sourceInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec1b4.  call temp:= `getIdGetter`(v0) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3ec1ba.  v0:= temp @kind object;
  #L3ec1bc.  v1:= v5.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` @kind object;
  #L3ec1c0.  call temp:= `getId`(v0, v1) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ec1c6.  v0:= temp @kind wide;
  #L3ec1c8.  v2:= 0L;
  #L3ec1cc.  v4:= lcmp(v0, v2);
  #L3ec1d0.  if v4 == 0 then goto L3ec20c;
  #L3ec1d4.  call `d`(v5) @signature `Lio/objectbox/relation/ToMany;.d:()V` @kind direct;
  #L3ec1da.  call temp:= `internalCheckApplyToDbRequired`(v5) @signature `Lio/objectbox/relation/ToMany;.internalCheckApplyToDbRequired:()Z` @kind virtual;
  #L3ec1e0.  v0:= temp;
  #L3ec1e2.  if v0 == 0 then goto L3ec1fa;
  #L3ec1e6.  v0:= v5.`io.objectbox.relation.ToMany.j` @type ^`io.objectbox.BoxStore` @kind object;
  #L3ec1ea.  v1:= new `q0.a`;
  #L3ec1ee.  call `<init>`(v1, v5) @signature `Lq0/a;.<init>:(Lio/objectbox/relation/ToMany;)V` @kind direct;
  #L3ec1f4.  call `runInTx`(v0, v1) @signature `Lio/objectbox/BoxStore;.runInTx:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3ec1fa.  return @kind void;
  #L3ec1fc.  v0:= new `java.lang.IllegalStateException`;
  #L3ec200.  v1:= "The source entity was not yet persisted, use box.put() on it instead" @kind object;
  #L3ec204.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec20a.  throw v0;
  #L3ec20c.  v0:= new `java.lang.IllegalStateException`;
  #L3ec210.  v1:= "The source entity was not yet persisted (no ID), use box.put() on it instead" @kind object;
  #L3ec214.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec21a.  throw v0;
  catch `io.objectbox.exception.DbDetachedException` @[L3ec1d4..L3ec1da] goto L3ec1fc;
}
procedure `void` `clear`(`io.objectbox.relation.ToMany` v5 @kind this) @signature `Lio/objectbox/relation/ToMany;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ec23c.  @monitorenter v5
  #L3ec23e.  call `f`(v5) @signature `Lio/objectbox/relation/ToMany;.f:()V` @kind direct;
  #L3ec244.  v0:= v5.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec248.  if v0 == 0 then goto L3ec27e;
  #L3ec24c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ec252.  v1:= temp @kind object;
  #L3ec254.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ec25a.  v2:= temp;
  #L3ec25c.  if v2 == 0 then goto L3ec278;
  #L3ec260.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ec266.  v2:= temp @kind object;
  #L3ec268.  v3:= v5.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3ec26c.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3ec270.  call temp:= `put`(v3, v2, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ec276.  goto L3ec254;
  #L3ec278.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3ec27e.  v0:= v5.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ec282.  if v0 == 0 then goto L3ec28c;
  #L3ec286.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3ec28c.  v0:= v5.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` @kind object;
  #L3ec290.  if v0 == 0 then goto L3ec29a;
  #L3ec294.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3ec29a.  @monitorexit v5
  #L3ec29c.  return @kind void;
  #L3ec29e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec2a0.  @monitorexit v5
  #L3ec2a2.  throw v0;
  catch `java.lang.Throwable` @[L3ec23e..L3ec29a] goto L3ec29e;
}
procedure `boolean` `contains`(`io.objectbox.relation.ToMany` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb59c.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3eb5a2.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3eb5a6.  call temp:= `contains`(v0, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb5ac.  v2:= temp;
  #L3eb5ae.  return v2;
}
procedure `boolean` `containsAll`(`io.objectbox.relation.ToMany` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb5c0.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3eb5c6.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3eb5ca.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/List;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3eb5d0.  v2:= temp;
  #L3eb5d2.  return v2;
}
procedure `java.lang.Object` `get`(`io.objectbox.relation.ToMany` v1 @kind this, `int` v2 ) @signature `Lio/objectbox/relation/ToMany;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebde4.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebdea.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebdee.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ebdf4.  v2:= temp @kind object;
  #L3ebdf6.  return v2 @kind object;
}
procedure `int` `getAddCount`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.getAddCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebc68.  v0:= v1.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ebc6c.  if v0 == 0 then goto L3ebc7a;
  #L3ebc70.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3ebc76.  v0:= temp;
  #L3ebc78.  goto L3ebc7c;
  #L3ebc7a.  v0:= 0I;
  #L3ebc7c.  return v0;
}
procedure `java.lang.Object` `getById`(`io.objectbox.relation.ToMany` v8 @kind this, `long` v9 ) @signature `Lio/objectbox/relation/ToMany;.getById:(J)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ebe08.  call `e`(v8) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebe0e.  v0:= v8.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebe12.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3ebe18.  v0:= temp @kind object;
  #L3ebe1a.  v1:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ebe1e.  v1:= v1.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ebe22.  call temp:= `getIdGetter`(v1) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3ebe28.  v1:= temp @kind object;
  #L3ebe2a.  v2:= length @variable v0;
  #L3ebe2c.  v3:= 0I;
  #L3ebe2e.  if v3 >= v2 then goto L3ebe4e;
  #L3ebe32.  v4:= v0[v3] @kind object;
  #L3ebe36.  call temp:= `getId`(v1, v4) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ebe3c.  v5:= temp @kind wide;
  #L3ebe3e.  v7:= lcmp(v5, v9);
  #L3ebe42.  if v7 != 0 then goto L3ebe48;
  #L3ebe46.  return v4 @kind object;
  #L3ebe48.  v3:= v3 + 1;
  #L3ebe4c.  goto L3ebe2e;
  #L3ebe4e.  v9:= 0I;
  #L3ebe50.  return v9 @kind object;
}
procedure `io.objectbox.relation.ListFactory` `getListFactory`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.getListFactory:()Lio/objectbox/relation/ListFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebd84.  v0:= v1.`io.objectbox.relation.ToMany.c` @type ^`io.objectbox.relation.ListFactory` @kind object;
  #L3ebd88.  if v0 != 0 then goto L3ebdae;
  #L3ebd8c.  @monitorenter v1
  #L3ebd8e.  v0:= v1.`io.objectbox.relation.ToMany.c` @type ^`io.objectbox.relation.ListFactory` @kind object;
  #L3ebd92.  if v0 != 0 then goto L3ebda4;
  #L3ebd96.  v0:= new `io.objectbox.relation.ListFactory$CopyOnWriteArrayListFactory`;
  #L3ebd9a.  call `<init>`(v0) @signature `Lio/objectbox/relation/ListFactory$CopyOnWriteArrayListFactory;.<init>:()V` @kind direct;
  #L3ebda0.  v1.`io.objectbox.relation.ToMany.c` @type ^`io.objectbox.relation.ListFactory` := v0 @kind object;
  #L3ebda4.  @monitorexit v1
  #L3ebda6.  goto L3ebdae;
  #L3ebda8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebdaa.  @monitorexit v1
  #L3ebdac.  throw v0;
  #L3ebdae.  return v0 @kind object;
  catch `java.lang.Throwable` @[L3ebd8e..L3ebdac] goto L3ebda8;
}
procedure `int` `getRemoveCount`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.getRemoveCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebc90.  v0:= v1.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3ebc94.  if v0 == 0 then goto L3ebca2;
  #L3ebc98.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3ebc9e.  v0:= temp;
  #L3ebca0.  goto L3ebca4;
  #L3ebca2.  v0:= 0I;
  #L3ebca4.  return v0;
}
procedure `boolean` `hasA`(`io.objectbox.relation.ToMany` v5 @kind this, `io.objectbox.query.QueryFilter` v6 @kind object) @signature `Lio/objectbox/relation/ToMany;.hasA:(Lio/objectbox/query/QueryFilter;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eb5e4.  call temp:= `toArray`(v5) @signature `Lio/objectbox/relation/ToMany;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L3eb5ea.  v0:= temp @kind object;
  #L3eb5ec.  v1:= length @variable v0;
  #L3eb5ee.  v2:= 0I;
  #L3eb5f0.  v3:= 0I;
  #L3eb5f2.  if v3 >= v1 then goto L3eb610;
  #L3eb5f6.  v4:= v0[v3] @kind object;
  #L3eb5fa.  call temp:= `keep`(v6, v4) @signature `Lio/objectbox/query/QueryFilter;.keep:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb600.  v4:= temp;
  #L3eb602.  if v4 == 0 then goto L3eb60a;
  #L3eb606.  v6:= 1I;
  #L3eb608.  return v6;
  #L3eb60a.  v3:= v3 + 1;
  #L3eb60e.  goto L3eb5f2;
  #L3eb610.  return v2;
}
procedure `boolean` `hasAll`(`io.objectbox.relation.ToMany` v5 @kind this, `io.objectbox.query.QueryFilter` v6 @kind object) @signature `Lio/objectbox/relation/ToMany;.hasAll:(Lio/objectbox/query/QueryFilter;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eb624.  call temp:= `toArray`(v5) @signature `Lio/objectbox/relation/ToMany;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L3eb62a.  v0:= temp @kind object;
  #L3eb62c.  v1:= length @variable v0;
  #L3eb62e.  v2:= 0I;
  #L3eb630.  if v1 != 0 then goto L3eb636;
  #L3eb634.  return v2;
  #L3eb636.  v1:= length @variable v0;
  #L3eb638.  v3:= 0I;
  #L3eb63a.  if v3 >= v1 then goto L3eb656;
  #L3eb63e.  v4:= v0[v3] @kind object;
  #L3eb642.  call temp:= `keep`(v6, v4) @signature `Lio/objectbox/query/QueryFilter;.keep:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb648.  v4:= temp;
  #L3eb64a.  if v4 != 0 then goto L3eb650;
  #L3eb64e.  return v2;
  #L3eb650.  v3:= v3 + 1;
  #L3eb654.  goto L3eb63a;
  #L3eb656.  v6:= 1I;
  #L3eb658.  return v6;
}
procedure `boolean` `hasPendingDbChanges`(`io.objectbox.relation.ToMany` v2 @kind this) @signature `Lio/objectbox/relation/ToMany;.hasPendingDbChanges:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eb66c.  v0:= v2.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3eb670.  v1:= 1I;
  #L3eb672.  if v0 == 0 then goto L3eb684;
  #L3eb676.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3eb67c.  v0:= temp;
  #L3eb67e.  if v0 != 0 then goto L3eb684;
  #L3eb682.  return v1;
  #L3eb684.  v0:= v2.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3eb688.  if v0 == 0 then goto L3eb69a;
  #L3eb68c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3eb692.  v0:= temp;
  #L3eb694.  if v0 != 0 then goto L3eb69a;
  #L3eb698.  goto L3eb69c;
  #L3eb69a.  v1:= 0I;
  #L3eb69c.  return v1;
}
procedure `int` `indexOf`(`io.objectbox.relation.ToMany` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebcb8.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebcbe.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebcc2.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L3ebcc8.  v2:= temp;
  #L3ebcca.  return v2;
}
procedure `int` `indexOfId`(`io.objectbox.relation.ToMany` v8 @kind this, `long` v9 ) @signature `Lio/objectbox/relation/ToMany;.indexOfId:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ebcdc.  call `e`(v8) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebce2.  v0:= v8.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebce6.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3ebcec.  v0:= temp @kind object;
  #L3ebcee.  v1:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ebcf2.  v1:= v1.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ebcf6.  call temp:= `getIdGetter`(v1) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3ebcfc.  v1:= temp @kind object;
  #L3ebcfe.  v2:= length @variable v0;
  #L3ebd00.  v3:= 0I;
  #L3ebd02.  v4:= 0I;
  #L3ebd04.  if v3 >= v2 then goto L3ebd28;
  #L3ebd08.  v5:= v0[v3] @kind object;
  #L3ebd0c.  call temp:= `getId`(v1, v5) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ebd12.  v5:= temp @kind wide;
  #L3ebd14.  v7:= lcmp(v5, v9);
  #L3ebd18.  if v7 != 0 then goto L3ebd1e;
  #L3ebd1c.  return v4;
  #L3ebd1e.  v4:= v4 + 1;
  #L3ebd22.  v3:= v3 + 1;
  #L3ebd26.  goto L3ebd04;
  #L3ebd28.  v9:= -1I;
  #L3ebd2a.  return v9;
}
procedure `void` `internalApplyToDb`(`io.objectbox.relation.ToMany` v16 @kind this, `io.objectbox.Cursor` v17 @kind object, `io.objectbox.Cursor` v18 @kind object) @signature `Lio/objectbox/relation/ToMany;.internalApplyToDb:(Lio/objectbox/Cursor;Lio/objectbox/Cursor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3ec578.  v7:= v16 @kind object;
  #L3ec57c.  v0:= v18 @kind object;
  #L3ec580.  v1:= v7.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec584.  v2:= v1.`io.objectbox.relation.RelationInfo.relationId` @type ^`int`;
  #L3ec588.  v3:= 0I;
  #L3ec58a.  if v2 == 0 then goto L3ec592;
  #L3ec58e.  v2:= 1I;
  #L3ec590.  goto L3ec594;
  #L3ec592.  v2:= 0I;
  #L3ec594.  v1:= v1.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec598.  call temp:= `getIdGetter`(v1) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3ec59e.  v8:= temp @kind object;
  #L3ec5a0.  @monitorenter v16
  #L3ec5a2.  v4:= 0L;
  #L3ec5a6.  v1:= 0I;
  #L3ec5a8.  if v2 == 0 then goto L3ec678;
  #L3ec5ac.  v6:= v7.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ec5b0.  call temp:= `keySet`(v6) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3ec5b6.  v6:= temp @kind object;
  #L3ec5b8.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ec5be.  v6:= temp @kind object;
  #L3ec5c0.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ec5c6.  v9:= temp;
  #L3ec5c8.  if v9 == 0 then goto L3ec5f0;
  #L3ec5cc.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ec5d2.  v9:= temp @kind object;
  #L3ec5d4.  call temp:= `getId`(v8, v9) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ec5da.  v10:= temp @kind wide;
  #L3ec5dc.  v12:= lcmp(v10, v4);
  #L3ec5e0.  if v12 != 0 then goto L3ec5c0;
  #L3ec5e4.  v10:= v7.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3ec5e8.  call temp:= `add`(v10, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ec5ee.  goto L3ec5c0;
  #L3ec5f0.  v6:= v7.`io.objectbox.relation.ToMany.m` @type ^`boolean` @kind boolean;
  #L3ec5f4.  if v6 == 0 then goto L3ec60e;
  #L3ec5f8.  v6:= v7.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` @kind object;
  #L3ec5fc.  v9:= v7.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3ec600.  call temp:= `keySet`(v9) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3ec606.  v9:= temp @kind object;
  #L3ec608.  call temp:= `addAll`(v6, v9) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3ec60e.  v6:= v7.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ec612.  call temp:= `isEmpty`(v6) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3ec618.  v6:= temp;
  #L3ec61a.  if v6 != 0 then goto L3ec63e;
  #L3ec61e.  v6:= v7.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ec622.  call temp:= `keySet`(v6) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3ec628.  v6:= temp @kind object;
  #L3ec62a.  call temp:= `toArray`(v6) @signature `Ljava/util/Set;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3ec630.  v6:= temp @kind object;
  #L3ec632.  v9:= v7.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3ec636.  call `clear`(v9) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3ec63c.  goto L3ec640;
  #L3ec63e.  v6:= v1 @kind object;
  #L3ec640.  v9:= v7.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3ec644.  call temp:= `isEmpty`(v9) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3ec64a.  v9:= temp;
  #L3ec64c.  if v9 != 0 then goto L3ec672;
  #L3ec650.  v9:= new `java.util.ArrayList`;
  #L3ec654.  v10:= v7.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3ec658.  call temp:= `keySet`(v10) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3ec65e.  v10:= temp @kind object;
  #L3ec660.  call `<init>`(v9, v10) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3ec666.  v10:= v7.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3ec66a.  call `clear`(v10) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3ec670.  goto L3ec674;
  #L3ec672.  v9:= v1 @kind object;
  #L3ec674.  v10:= v6 @kind object;
  #L3ec676.  goto L3ec67c;
  #L3ec678.  v9:= v1 @kind object;
  #L3ec67a.  v10:= v9 @kind object;
  #L3ec67c.  v6:= v7.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` @kind object;
  #L3ec680.  call temp:= `isEmpty`(v6) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3ec686.  v6:= temp;
  #L3ec688.  if v6 == 0 then goto L3ec690;
  #L3ec68c.  v6:= v1 @kind object;
  #L3ec68e.  goto L3ec69c;
  #L3ec690.  v6:= v7.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` @kind object;
  #L3ec694.  call temp:= `toArray`(v6) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3ec69a.  v6:= temp @kind object;
  #L3ec69c.  v11:= v7.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` @kind object;
  #L3ec6a0.  call `clear`(v11) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3ec6a6.  v11:= v7.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3ec6aa.  call temp:= `isEmpty`(v11) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3ec6b0.  v11:= temp;
  #L3ec6b2.  if v11 == 0 then goto L3ec6b8;
  #L3ec6b6.  goto L3ec6c4;
  #L3ec6b8.  v1:= v7.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3ec6bc.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3ec6c2.  v1:= temp @kind object;
  #L3ec6c4.  v11:= v7.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3ec6c8.  call `clear`(v11) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3ec6ce.  @monitorexit v16
  #L3ec6d0.  if v6 == 0 then goto L3ec6fc;
  #L3ec6d4.  v11:= length @variable v6;
  #L3ec6d6.  v12:= 0I;
  #L3ec6d8.  if v12 >= v11 then goto L3ec6fc;
  #L3ec6dc.  v13:= v6[v12] @kind object;
  #L3ec6e0.  call temp:= `getId`(v8, v13) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ec6e6.  v13:= temp @kind wide;
  #L3ec6e8.  v15:= lcmp(v13, v4);
  #L3ec6ec.  if v15 == 0 then goto L3ec6f6;
  #L3ec6f0.  call temp:= `deleteEntity`(v0, v13) @signature `Lio/objectbox/Cursor;.deleteEntity:(J)Z` @kind virtual;
  #L3ec6f6.  v12:= v12 + 1;
  #L3ec6fa.  goto L3ec6d8;
  #L3ec6fc.  if v1 == 0 then goto L3ec716;
  #L3ec700.  v6:= length @variable v1;
  #L3ec702.  if v3 >= v6 then goto L3ec716;
  #L3ec706.  v11:= v1[v3] @kind object;
  #L3ec70a.  call temp:= `put`(v0, v11) @signature `Lio/objectbox/Cursor;.put:(Ljava/lang/Object;)J` @kind virtual;
  #L3ec710.  v3:= v3 + 1;
  #L3ec714.  goto L3ec702;
  #L3ec716.  if v2 == 0 then goto L3ec780;
  #L3ec71a.  v0:= v7.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ec71e.  v0:= v0.`io.objectbox.relation.RelationInfo.sourceInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ec722.  call temp:= `getIdGetter`(v0) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3ec728.  v0:= temp @kind object;
  #L3ec72a.  v1:= v7.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` @kind object;
  #L3ec72e.  call temp:= `getId`(v0, v1) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ec734.  v11:= temp @kind wide;
  #L3ec736.  v0:= lcmp(v11, v4);
  #L3ec73a.  if v0 == 0 then goto L3ec770;
  #L3ec73e.  if v9 == 0 then goto L3ec756;
  #L3ec742.  v1:= v16 @kind object;
  #L3ec746.  v2:= v17 @kind object;
  #L3ec74a.  v3:= v11 @kind wide;
  #L3ec74c.  v5:= v9 @kind object;
  #L3ec74e.  v6:= v8 @kind object;
  #L3ec750.  call `j`(v1, v2, v3, v5, v6) @signature `Lio/objectbox/relation/ToMany;.j:(Lio/objectbox/Cursor;JLjava/util/List;Lio/objectbox/internal/IdGetter;)V` @kind direct;
  #L3ec756.  if v10 == 0 then goto L3ec780;
  #L3ec75a.  v1:= v16 @kind object;
  #L3ec75e.  v2:= v17 @kind object;
  #L3ec762.  v3:= v11 @kind wide;
  #L3ec764.  v5:= v10 @kind object;
  #L3ec766.  v6:= v8 @kind object;
  #L3ec768.  call `c`(v1, v2, v3, v5, v6) @signature `Lio/objectbox/relation/ToMany;.c:(Lio/objectbox/Cursor;J[Ljava/lang/Object;Lio/objectbox/internal/IdGetter;)V` @kind direct;
  #L3ec76e.  goto L3ec780;
  #L3ec770.  v0:= new `java.lang.IllegalStateException`;
  #L3ec774.  v1:= "Source entity has no ID (should have been put before)" @kind object;
  #L3ec778.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec77e.  throw v0;
  #L3ec780.  return @kind void;
  #L3ec782.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec784.  @monitorexit v16
  #L3ec786.  throw v0;
  catch `java.lang.Throwable` @[L3ec5ac..L3ec6d0] goto L3ec782;
  catch `java.lang.Throwable` @[L3ec784..L3ec786] goto L3ec782;
}
procedure `boolean` `internalCheckApplyToDbRequired`(`io.objectbox.relation.ToMany` v8 @kind this) @signature `Lio/objectbox/relation/ToMany;.internalCheckApplyToDbRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3eb6b0.  call temp:= `hasPendingDbChanges`(v8) @signature `Lio/objectbox/relation/ToMany;.hasPendingDbChanges:()Z` @kind virtual;
  #L3eb6b6.  v0:= temp;
  #L3eb6b8.  if v0 != 0 then goto L3eb6c0;
  #L3eb6bc.  v0:= 0I;
  #L3eb6be.  return v0;
  #L3eb6c0.  @monitorenter v8
  #L3eb6c2.  v0:= v8.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` @kind object;
  #L3eb6c6.  if v0 != 0 then goto L3eb6e6;
  #L3eb6ca.  v0:= new `java.util.ArrayList`;
  #L3eb6ce.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3eb6d4.  v8.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` := v0 @kind object;
  #L3eb6d8.  v0:= new `java.util.ArrayList`;
  #L3eb6dc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3eb6e2.  v8.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` := v0 @kind object;
  #L3eb6e6.  @monitorexit v8
  #L3eb6e8.  v0:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3eb6ec.  v1:= v0.`io.objectbox.relation.RelationInfo.relationId` @type ^`int`;
  #L3eb6f0.  if v1 == 0 then goto L3eb6f8;
  #L3eb6f4.  v0:= 1I;
  #L3eb6f6.  return v0;
  #L3eb6f8.  v0:= v0.`io.objectbox.relation.RelationInfo.sourceInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3eb6fc.  call temp:= `getIdGetter`(v0) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3eb702.  v0:= temp @kind object;
  #L3eb704.  v1:= v8.`io.objectbox.relation.ToMany.a` @type ^`java.lang.Object` @kind object;
  #L3eb708.  call temp:= `getId`(v0, v1) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3eb70e.  v3:= temp @kind wide;
  #L3eb710.  v0:= 0L;
  #L3eb714.  v2:= lcmp(v3, v0);
  #L3eb718.  if v2 == 0 then goto L3eb758;
  #L3eb71c.  v0:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3eb720.  v0:= v0.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3eb724.  call temp:= `getIdGetter`(v0) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3eb72a.  v5:= temp @kind object;
  #L3eb72c.  v6:= v8.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` @kind object;
  #L3eb730.  v7:= v8.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` @kind object;
  #L3eb734.  v0:= v8.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3eb738.  v0:= v0.`io.objectbox.relation.RelationInfo.targetRelationId` @type ^`int`;
  #L3eb73c.  if v0 == 0 then goto L3eb74c;
  #L3eb740.  v2:= v8 @kind object;
  #L3eb742.  call temp:= `h`(v2, v3, v5, v6, v7) @signature `Lio/objectbox/relation/ToMany;.h:(JLio/objectbox/internal/IdGetter;Ljava/util/Map;Ljava/util/Map;)Z` @kind direct;
  #L3eb748.  v0:= temp;
  #L3eb74a.  return v0;
  #L3eb74c.  v2:= v8 @kind object;
  #L3eb74e.  call temp:= `i`(v2, v3, v5, v6, v7) @signature `Lio/objectbox/relation/ToMany;.i:(JLio/objectbox/internal/IdGetter;Ljava/util/Map;Ljava/util/Map;)Z` @kind direct;
  #L3eb754.  v0:= temp;
  #L3eb756.  return v0;
  #L3eb758.  v0:= new `java.lang.IllegalStateException`;
  #L3eb75c.  v1:= "Source entity has no ID (should have been put before)" @kind object;
  #L3eb760.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb766.  throw v0;
  #L3eb768.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb76a.  @monitorexit v8
  #L3eb76c.  throw v0;
  catch `java.lang.Throwable` @[L3eb6c2..L3eb6e8] goto L3eb768;
  catch `java.lang.Throwable` @[L3eb76a..L3eb76c] goto L3eb768;
}
procedure `boolean` `isEmpty`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb794.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3eb79a.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3eb79e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3eb7a4.  v0:= temp;
  #L3eb7a6.  return v0;
}
procedure `boolean` `isResolved`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.isResolved:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb7b8.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3eb7bc.  if v0 == 0 then goto L3eb7c4;
  #L3eb7c0.  v0:= 1I;
  #L3eb7c2.  goto L3eb7c6;
  #L3eb7c4.  v0:= 0I;
  #L3eb7c6.  return v0;
}
procedure `java.util.Iterator` `iterator`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec000.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ec006.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec00a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ec010.  v0:= temp @kind object;
  #L3ec012.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`io.objectbox.relation.ToMany` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebd3c.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebd42.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebd46.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/List;.lastIndexOf:(Ljava/lang/Object;)I` @kind interface;
  #L3ebd4c.  v2:= temp;
  #L3ebd4e.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec048.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ec04e.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec052.  call temp:= `listIterator`(v0) @signature `Ljava/util/List;.listIterator:()Ljava/util/ListIterator;` @kind interface;
  #L3ec058.  v0:= temp @kind object;
  #L3ec05a.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`io.objectbox.relation.ToMany` v1 @kind this, `int` v2 ) @signature `Lio/objectbox/relation/ToMany;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec06c.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ec072.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec076.  call temp:= `listIterator`(v0, v2) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L3ec07c.  v2:= temp @kind object;
  #L3ec07e.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`io.objectbox.relation.ToMany` v1 @kind this, `int` v2 ) @signature `Lio/objectbox/relation/ToMany;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebe64.  @monitorenter v1
  #L3ebe66.  call `f`(v1) @signature `Lio/objectbox/relation/ToMany;.f:()V` @kind direct;
  #L3ebe6c.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebe70.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3ebe76.  v2:= temp @kind object;
  #L3ebe78.  call `m`(v1, v2) @signature `Lio/objectbox/relation/ToMany;.m:(Ljava/lang/Object;)V` @kind direct;
  #L3ebe7e.  @monitorexit v1
  #L3ebe80.  return v2 @kind object;
  #L3ebe82.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebe84.  @monitorexit v1
  #L3ebe86.  throw v2;
  catch `java.lang.Throwable` @[L3ebe66..L3ebe7e] goto L3ebe82;
}
procedure `boolean` `remove`(`io.objectbox.relation.ToMany` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebb50.  @monitorenter v1
  #L3ebb52.  call `f`(v1) @signature `Lio/objectbox/relation/ToMany;.f:()V` @kind direct;
  #L3ebb58.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebb5c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3ebb62.  v0:= temp;
  #L3ebb64.  if v0 == 0 then goto L3ebb6e;
  #L3ebb68.  call `m`(v1, v2) @signature `Lio/objectbox/relation/ToMany;.m:(Ljava/lang/Object;)V` @kind direct;
  #L3ebb6e.  @monitorexit v1
  #L3ebb70.  return v0;
  #L3ebb72.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebb74.  @monitorexit v1
  #L3ebb76.  throw v2;
  catch `java.lang.Throwable` @[L3ebb52..L3ebb6e] goto L3ebb72;
}
procedure `boolean` `removeAll`(`io.objectbox.relation.ToMany` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lio/objectbox/relation/ToMany;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ebb94.  @monitorenter v2
  #L3ebb96.  v0:= 0I;
  #L3ebb98.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ebb9e.  v3:= temp @kind object;
  #L3ebba0.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ebba6.  v1:= temp;
  #L3ebba8.  if v1 == 0 then goto L3ebbc0;
  #L3ebbac.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ebbb2.  v1:= temp @kind object;
  #L3ebbb4.  call temp:= `remove`(v2, v1) @signature `Lio/objectbox/relation/ToMany;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ebbba.  v1:= temp;
  #L3ebbbc.  v0:= v0 ^| v1 @kind int;
  #L3ebbbe.  goto L3ebba0;
  #L3ebbc0.  @monitorexit v2
  #L3ebbc2.  return v0;
  #L3ebbc4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebbc6.  @monitorexit v2
  #L3ebbc8.  throw v3;
  catch `java.lang.Throwable` @[L3ebb98..L3ebbbc] goto L3ebbc4;
}
procedure `java.lang.Object` `removeById`(`io.objectbox.relation.ToMany` v7 @kind this, `long` v8 ) @signature `Lio/objectbox/relation/ToMany;.removeById:(J)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ebea4.  @monitorenter v7
  #L3ebea6.  call `e`(v7) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebeac.  v0:= v7.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebeb0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ebeb6.  v0:= temp;
  #L3ebeb8.  v1:= v7.`io.objectbox.relation.ToMany.b` @type ^`io.objectbox.relation.RelationInfo` @kind object;
  #L3ebebc.  v1:= v1.`io.objectbox.relation.RelationInfo.targetInfo` @type ^`io.objectbox.EntityInfo` @kind object;
  #L3ebec0.  call temp:= `getIdGetter`(v1) @signature `Lio/objectbox/EntityInfo;.getIdGetter:()Lio/objectbox/internal/IdGetter;` @kind interface;
  #L3ebec6.  v1:= temp @kind object;
  #L3ebec8.  v2:= 0I;
  #L3ebeca.  if v2 >= v0 then goto L3ebf3e;
  #L3ebece.  v3:= v7.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebed2.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ebed8.  v3:= temp @kind object;
  #L3ebeda.  call temp:= `getId`(v1, v3) @signature `Lio/objectbox/internal/IdGetter;.getId:(Ljava/lang/Object;)J` @kind interface;
  #L3ebee0.  v4:= temp @kind wide;
  #L3ebee2.  v6:= lcmp(v4, v8);
  #L3ebee6.  if v6 != 0 then goto L3ebf38;
  #L3ebeea.  call temp:= `remove`(v7, v2) @signature `Lio/objectbox/relation/ToMany;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L3ebef0.  v8:= temp @kind object;
  #L3ebef2.  if v8 != v3 then goto L3ebefa;
  #L3ebef6.  @monitorexit v7
  #L3ebef8.  return v3 @kind object;
  #L3ebefa.  v9:= new `java.lang.IllegalStateException`;
  #L3ebefe.  v0:= new `java.lang.StringBuilder`;
  #L3ebf02.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ebf08.  v1:= "Mismatch: " @kind object;
  #L3ebf0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebf12.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebf18.  v8:= " vs. " @kind object;
  #L3ebf1c.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebf22.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebf28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ebf2e.  v8:= temp @kind object;
  #L3ebf30.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ebf36.  throw v9;
  #L3ebf38.  v2:= v2 + 1;
  #L3ebf3c.  goto L3ebeca;
  #L3ebf3e.  v8:= 0I;
  #L3ebf40.  @monitorexit v7
  #L3ebf42.  return v8 @kind object;
  #L3ebf44.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebf46.  @monitorexit v7
  #L3ebf48.  throw v8;
  catch `java.lang.Throwable` @[L3ebea6..L3ebef2] goto L3ebf44;
  catch `java.lang.Throwable` @[L3ebefa..L3ebf38] goto L3ebf44;
}
procedure `void` `reset`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec86c.  @monitorenter v1
  #L3ec86e.  v0:= 0I;
  #L3ec870.  v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` := v0 @kind object;
  #L3ec874.  v1.`io.objectbox.relation.ToMany.f` @type ^`java.util.Map` := v0 @kind object;
  #L3ec878.  v1.`io.objectbox.relation.ToMany.g` @type ^`java.util.Map` := v0 @kind object;
  #L3ec87c.  v1.`io.objectbox.relation.ToMany.i` @type ^`java.util.List` := v0 @kind object;
  #L3ec880.  v1.`io.objectbox.relation.ToMany.h` @type ^`java.util.List` := v0 @kind object;
  #L3ec884.  v1.`io.objectbox.relation.ToMany.e` @type ^`java.util.Map` := v0 @kind object;
  #L3ec888.  @monitorexit v1
  #L3ec88a.  return @kind void;
  #L3ec88c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec88e.  @monitorexit v1
  #L3ec890.  throw v0;
  catch `java.lang.Throwable` @[L3ec870..L3ec888] goto L3ec88c;
}
procedure `boolean` `retainAll`(`io.objectbox.relation.ToMany` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lio/objectbox/relation/ToMany;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ebbe8.  @monitorenter v5
  #L3ebbea.  call `f`(v5) @signature `Lio/objectbox/relation/ToMany;.f:()V` @kind direct;
  #L3ebbf0.  v0:= 0I;
  #L3ebbf2.  v1:= 0I;
  #L3ebbf4.  v2:= v5.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebbf8.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ebbfe.  v2:= temp @kind object;
  #L3ebc00.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ebc06.  v3:= temp;
  #L3ebc08.  if v3 == 0 then goto L3ebc38;
  #L3ebc0c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ebc12.  v3:= temp @kind object;
  #L3ebc14.  call temp:= `contains`(v6, v3) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ebc1a.  v4:= temp;
  #L3ebc1c.  if v4 != 0 then goto L3ebc00;
  #L3ebc20.  if v1 != 0 then goto L3ebc2e;
  #L3ebc24.  v1:= new `java.util.ArrayList`;
  #L3ebc28.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ebc2e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ebc34.  v0:= 1I;
  #L3ebc36.  goto L3ebc00;
  #L3ebc38.  if v1 == 0 then goto L3ebc42;
  #L3ebc3c.  call temp:= `removeAll`(v5, v1) @signature `Lio/objectbox/relation/ToMany;.removeAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3ebc42.  @monitorexit v5
  #L3ebc44.  return v0;
  #L3ebc46.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebc48.  @monitorexit v5
  #L3ebc4a.  throw v6;
  catch `java.lang.Throwable` @[L3ebbea..L3ebc42] goto L3ebc46;
}
procedure `java.lang.Object` `set`(`io.objectbox.relation.ToMany` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/objectbox/relation/ToMany;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebf70.  @monitorenter v1
  #L3ebf72.  call `f`(v1) @signature `Lio/objectbox/relation/ToMany;.f:()V` @kind direct;
  #L3ebf78.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebf7c.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ebf82.  v2:= temp @kind object;
  #L3ebf84.  call `m`(v1, v2) @signature `Lio/objectbox/relation/ToMany;.m:(Ljava/lang/Object;)V` @kind direct;
  #L3ebf8a.  call `k`(v1, v3) @signature `Lio/objectbox/relation/ToMany;.k:(Ljava/lang/Object;)V` @kind direct;
  #L3ebf90.  @monitorexit v1
  #L3ebf92.  return v2 @kind object;
  #L3ebf94.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebf96.  @monitorexit v1
  #L3ebf98.  throw v2;
  catch `java.lang.Throwable` @[L3ebf72..L3ebf90] goto L3ebf94;
}
procedure `void` `setComparator`(`io.objectbox.relation.ToMany` v0 @kind this, `java.util.Comparator` v1 @kind object) @signature `Lio/objectbox/relation/ToMany;.setComparator:(Ljava/util/Comparator;)V` @AccessFlag PUBLIC {
    temp;

  #L3ec8b0.  v0.`io.objectbox.relation.ToMany.n` @type ^`java.util.Comparator` := v1 @kind object;
  #L3ec8b4.  return @kind void;
}
procedure `void` `setListFactory`(`io.objectbox.relation.ToMany` v1 @kind this, `io.objectbox.relation.ListFactory` v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.setListFactory:(Lio/objectbox/relation/ListFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec8c8.  if v2 == 0 then goto L3ec8d2;
  #L3ec8cc.  v1.`io.objectbox.relation.ToMany.c` @type ^`io.objectbox.relation.ListFactory` := v2 @kind object;
  #L3ec8d0.  return @kind void;
  #L3ec8d2.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ec8d6.  v0:= "ListFactory is null" @kind object;
  #L3ec8da.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec8e0.  throw v2;
}
procedure `void` `setRemoveFromTargetBox`(`io.objectbox.relation.ToMany` v0 @kind this, `boolean` v1 ) @signature `Lio/objectbox/relation/ToMany;.setRemoveFromTargetBox:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3ec8f4.  @monitorenter v0
  #L3ec8f6.  v0.`io.objectbox.relation.ToMany.m` @type ^`boolean` := v1 @kind boolean;
  #L3ec8fa.  @monitorexit v0
  #L3ec8fc.  return @kind void;
  #L3ec8fe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec900.  @monitorexit v0
  #L3ec902.  throw v1;
  catch `java.lang.Throwable` @[L3ec8f6..L3ec8fa] goto L3ec8fe;
}
procedure `int` `size`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebd60.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebd66.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebd6a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ebd70.  v0:= temp;
  #L3ebd72.  return v0;
}
procedure `void` `sortById`(`io.objectbox.relation.ToMany` v2 @kind this) @signature `Lio/objectbox/relation/ToMany;.sortById:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec920.  call `e`(v2) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ec926.  v0:= v2.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec92a.  v1:= new `io.objectbox.relation.ToMany$a`;
  #L3ec92e.  call `<init>`(v1, v2) @signature `Lio/objectbox/relation/ToMany$a;.<init>:(Lio/objectbox/relation/ToMany;)V` @kind direct;
  #L3ec934.  call `sort`(v0, v1) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L3ec93a.  return @kind void;
}
procedure `java.util.List` `subList`(`io.objectbox.relation.ToMany` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/objectbox/relation/ToMany;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec024.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ec02a.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ec02e.  call temp:= `subList`(v0, v2, v3) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L3ec034.  v2:= temp @kind object;
  #L3ec036.  return v2 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.objectbox.relation.ToMany` v1 @kind this) @signature `Lio/objectbox/relation/ToMany;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebfb8.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebfbe.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebfc2.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3ebfc8.  v0:= temp @kind object;
  #L3ebfca.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.objectbox.relation.ToMany` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lio/objectbox/relation/ToMany;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebfdc.  call `e`(v1) @signature `Lio/objectbox/relation/ToMany;.e:()V` @kind direct;
  #L3ebfe2.  v0:= v1.`io.objectbox.relation.ToMany.d` @type ^`java.util.List` @kind object;
  #L3ebfe6.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3ebfec.  v2:= temp @kind object;
  #L3ebfee.  return v2 @kind object;
}
