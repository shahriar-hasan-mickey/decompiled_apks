record `h.a` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
procedure `long` `a`(`long` v7 , `long` v9 ) @signature `Lh/a;.a:(JJ)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dc8a4.  v0:= 0L;
  #L3dc8a8.  v2:= -9223372036854775808L;
  #L3dc8ac.  v4:= lcmp(v9, v0);
  #L3dc8b0.  if v4 >= 0 then goto L3dc8c8;
  #L3dc8b4.  v0:= v7 ^~ v2 @kind long;
  #L3dc8b8.  v2:= v2 ^~ v9 @kind long;
  #L3dc8ba.  v4:= lcmp(v0, v2);
  #L3dc8be.  if v4 >= 0 then goto L3dc8c4;
  #L3dc8c2.  return v7 @kind wide;
  #L3dc8c4.  v7:= v7 - v9 @kind long;
  #L3dc8c6.  return v7 @kind wide;
  #L3dc8c8.  v4:= lcmp(v7, v0);
  #L3dc8cc.  if v4 < 0 then goto L3dc8d4;
  #L3dc8d0.  v7:= v7 %% v9 @kind long;
  #L3dc8d2.  return v7 @kind wide;
  #L3dc8d4.  v4:= 1I;
  #L3dc8d6.  v5:= v7 ^>> v4 @kind long;
  #L3dc8da.  v5:= v5 / v9 @kind long;
  #L3dc8dc.  v4:= v5 ^< v4 @kind long;
  #L3dc8e0.  v4:= v4 * v9 @kind long;
  #L3dc8e4.  v7:= v7 - v4 @kind long;
  #L3dc8e6.  v4:= v7 ^~ v2 @kind long;
  #L3dc8ea.  v2:= v2 ^~ v9 @kind long;
  #L3dc8ec.  v6:= lcmp(v4, v2);
  #L3dc8f0.  if v6 < 0 then goto L3dc8f6;
  #L3dc8f4.  goto L3dc8f8;
  #L3dc8f6.  v9:= v0 @kind wide;
  #L3dc8f8.  v7:= v7 - v9 @kind long;
  #L3dc8fa.  return v7 @kind wide;
}
