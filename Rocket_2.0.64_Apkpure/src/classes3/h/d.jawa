record `h.d` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
procedure `long` `a`(`java.lang.CharSequence` v16 @kind object, `int` v17 , `int` v18 , `int` v19 ) @signature `Lh/d;.a:(Ljava/lang/CharSequence;III)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3dca90.  v0:= v18;
  #L3dca94.  v1:= v19;
  #L3dca98.  v2:= v0 - v17 @kind int;
  #L3dca9c.  if v2 == 0 then goto L3dcb8a;
  #L3dcaa0.  v3:= 2I;
  #L3dcaa2.  if v1 < v3 then goto L3dcb6a;
  #L3dcaa6.  v3:= 36I;
  #L3dcaaa.  if v1 > v3 then goto L3dcb6a;
  #L3dcaae.  v3:= (`long`) v1 @kind i2l;
  #L3dcab0.  v5:= -1L;
  #L3dcab4.  call temp:= `a`(v5, v3) @signature `Lh/b;.a:(JJ)J` @kind static;
  #L3dcaba.  v7:= temp @kind wide;
  #L3dcabc.  call temp:= `charAt`(v16, v17) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3dcac2.  v9:= temp;
  #L3dcac4.  v10:= 43I;
  #L3dcac8.  if v9 != v10 then goto L3dcad8;
  #L3dcacc.  v9:= 1I;
  #L3dcace.  if v2 <= v9 then goto L3dcad8;
  #L3dcad2.  v2:= v17 + 1;
  #L3dcad6.  goto L3dcadc;
  #L3dcad8.  v2:= v17;
  #L3dcadc.  v9:= 0L;
  #L3dcae0.  v11:= v9 @kind wide;
  #L3dcae2.  if v2 >= v0 then goto L3dcb68;
  #L3dcae6.  v13:= v16 @kind object;
  #L3dcaea.  call temp:= `charAt`(v13, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3dcaf0.  v14:= temp;
  #L3dcaf2.  call temp:= `digit`(v14, v1) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3dcaf8.  v14:= temp;
  #L3dcafa.  v15:= -1I;
  #L3dcafc.  if v14 == v15 then goto L3dcb54;
  #L3dcb00.  v15:= lcmp(v11, v9);
  #L3dcb04.  if v15 < 0 then goto L3dcb34;
  #L3dcb08.  v15:= lcmp(v11, v7);
  #L3dcb0c.  if v15 > 0 then goto L3dcb34;
  #L3dcb10.  if v15 != 0 then goto L3dcb22;
  #L3dcb14.  call temp:= `a`(v5, v3) @signature `Lh/a;.a:(JJ)J` @kind static;
  #L3dcb1a.  v9:= temp @kind wide;
  #L3dcb1c.  v10:= (`int`) v9 @kind l2i;
  #L3dcb1e.  if v14 > v10 then goto L3dcb34;
  #L3dcb22.  v11:= v11 * v3 @kind long;
  #L3dcb26.  v9:= (`long`) v14 @kind i2l;
  #L3dcb28.  v11:= v11 + v9 @kind long;
  #L3dcb2a.  v2:= v2 + 1;
  #L3dcb2e.  v9:= 0L;
  #L3dcb32.  goto L3dcae2;
  #L3dcb34.  v0:= new `java.lang.NumberFormatException`;
  #L3dcb38.  call temp:= `toString`(v16) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3dcb3e.  v1:= temp @kind object;
  #L3dcb40.  v2:= "Too large for unsigned long: " @kind object;
  #L3dcb44.  call temp:= `concat`(v2, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3dcb4a.  v1:= temp @kind object;
  #L3dcb4c.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dcb52.  throw v0;
  #L3dcb54.  v0:= new `java.lang.NumberFormatException`;
  #L3dcb58.  call temp:= `toString`(v16) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3dcb5e.  v1:= temp @kind object;
  #L3dcb60.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dcb66.  throw v0;
  #L3dcb68.  return v11 @kind wide;
  #L3dcb6a.  v0:= new `java.lang.NumberFormatException`;
  #L3dcb6e.  call temp:= `valueOf`(v19) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3dcb74.  v1:= temp @kind object;
  #L3dcb76.  v2:= "illegal radix: " @kind object;
  #L3dcb7a.  call temp:= `concat`(v2, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3dcb80.  v1:= temp @kind object;
  #L3dcb82.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dcb88.  throw v0;
  #L3dcb8a.  v0:= new `java.lang.NumberFormatException`;
  #L3dcb8e.  v1:= "empty string" @kind object;
  #L3dcb92.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dcb98.  throw v0;
}
