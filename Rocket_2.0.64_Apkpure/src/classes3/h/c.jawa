record `h.c` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
procedure `long` `a`(`java.lang.CharSequence` v16 @kind object, `int` v17 , `int` v18 , `int` v19 ) @signature `Lh/c;.a:(Ljava/lang/CharSequence;III)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3dc974.  v0:= v18;
  #L3dc978.  v1:= v19;
  #L3dc97c.  v2:= v0 - v17 @kind int;
  #L3dc980.  if v2 == 0 then goto L3dca6e;
  #L3dc984.  v3:= 2I;
  #L3dc986.  if v1 < v3 then goto L3dca4e;
  #L3dc98a.  v3:= 36I;
  #L3dc98e.  if v1 > v3 then goto L3dca4e;
  #L3dc992.  v3:= (`long`) v1 @kind i2l;
  #L3dc994.  v5:= -1L;
  #L3dc998.  call temp:= `a`(v5, v3) @signature `Lh/b;.a:(JJ)J` @kind static;
  #L3dc99e.  v7:= temp @kind wide;
  #L3dc9a0.  call temp:= `charAt`(v16, v17) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3dc9a6.  v9:= temp;
  #L3dc9a8.  v10:= 43I;
  #L3dc9ac.  if v9 != v10 then goto L3dc9bc;
  #L3dc9b0.  v9:= 1I;
  #L3dc9b2.  if v2 <= v9 then goto L3dc9bc;
  #L3dc9b6.  v2:= v17 + 1;
  #L3dc9ba.  goto L3dc9c0;
  #L3dc9bc.  v2:= v17;
  #L3dc9c0.  v9:= 0L;
  #L3dc9c4.  v11:= v9 @kind wide;
  #L3dc9c6.  if v2 >= v0 then goto L3dca4c;
  #L3dc9ca.  v13:= v16 @kind object;
  #L3dc9ce.  call temp:= `charAt`(v13, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3dc9d4.  v14:= temp;
  #L3dc9d6.  call temp:= `digit`(v14, v1) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3dc9dc.  v14:= temp;
  #L3dc9de.  v15:= -1I;
  #L3dc9e0.  if v14 == v15 then goto L3dca38;
  #L3dc9e4.  v15:= lcmp(v11, v9);
  #L3dc9e8.  if v15 < 0 then goto L3dca18;
  #L3dc9ec.  v15:= lcmp(v11, v7);
  #L3dc9f0.  if v15 > 0 then goto L3dca18;
  #L3dc9f4.  if v15 != 0 then goto L3dca06;
  #L3dc9f8.  call temp:= `a`(v5, v3) @signature `Lh/a;.a:(JJ)J` @kind static;
  #L3dc9fe.  v9:= temp @kind wide;
  #L3dca00.  v10:= (`int`) v9 @kind l2i;
  #L3dca02.  if v14 > v10 then goto L3dca18;
  #L3dca06.  v11:= v11 * v3 @kind long;
  #L3dca0a.  v9:= (`long`) v14 @kind i2l;
  #L3dca0c.  v11:= v11 + v9 @kind long;
  #L3dca0e.  v2:= v2 + 1;
  #L3dca12.  v9:= 0L;
  #L3dca16.  goto L3dc9c6;
  #L3dca18.  v0:= new `java.lang.NumberFormatException`;
  #L3dca1c.  call temp:= `toString`(v16) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3dca22.  v1:= temp @kind object;
  #L3dca24.  v2:= "Too large for unsigned long: " @kind object;
  #L3dca28.  call temp:= `concat`(v2, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3dca2e.  v1:= temp @kind object;
  #L3dca30.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dca36.  throw v0;
  #L3dca38.  v0:= new `java.lang.NumberFormatException`;
  #L3dca3c.  call temp:= `toString`(v16) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3dca42.  v1:= temp @kind object;
  #L3dca44.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dca4a.  throw v0;
  #L3dca4c.  return v11 @kind wide;
  #L3dca4e.  v0:= new `java.lang.NumberFormatException`;
  #L3dca52.  call temp:= `valueOf`(v19) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3dca58.  v1:= temp @kind object;
  #L3dca5a.  v2:= "illegal radix: " @kind object;
  #L3dca5e.  call temp:= `concat`(v2, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3dca64.  v1:= temp @kind object;
  #L3dca66.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dca6c.  throw v0;
  #L3dca6e.  v0:= new `java.lang.NumberFormatException`;
  #L3dca72.  v1:= "empty string" @kind object;
  #L3dca76.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dca7c.  throw v0;
}
