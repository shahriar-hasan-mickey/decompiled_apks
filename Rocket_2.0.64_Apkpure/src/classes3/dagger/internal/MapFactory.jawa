record `dagger.internal.MapFactory` @kind class @AccessFlag PUBLIC_FINAL extends `dagger.internal.AbstractMapFactory` @kind class {
}
global `javax.inject.Provider` `@@dagger.internal.MapFactory.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ldagger/internal/MapFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3cd5d0.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L3cd5d6.  v0:= temp @kind object;
  #L3cd5d8.  call temp:= `create`(v0) @signature `Ldagger/internal/InstanceFactory;.create:(Ljava/lang/Object;)Ldagger/internal/Factory;` @kind static;
  #L3cd5de.  v0:= temp @kind object;
  #L3cd5e0.  `@@dagger.internal.MapFactory.b` @type ^`javax.inject.Provider` := v0 @kind object;
  #L3cd5e4.  return @kind void;
}
procedure `void` `<init>`(`dagger.internal.MapFactory` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Ldagger/internal/MapFactory;.<init>:(Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3cd5f8.  call `<init>`(v0, v1) @signature `Ldagger/internal/AbstractMapFactory;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3cd5fe.  return @kind void;
}
procedure `void` `<init>`(`dagger.internal.MapFactory` v0 @kind this, `java.util.Map` v1 @kind object, `dagger.internal.MapFactory$a` v2 @kind object) @signature `Ldagger/internal/MapFactory;.<init>:(Ljava/util/Map;Ldagger/internal/MapFactory$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3cd610.  call `<init>`(v0, v1) @signature `Ldagger/internal/MapFactory;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3cd616.  return @kind void;
}
procedure `dagger.internal.MapFactory$Builder` `builder`(`int` v2 ) @signature `Ldagger/internal/MapFactory;.builder:(I)Ldagger/internal/MapFactory$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3cd4f4.  v0:= new `dagger.internal.MapFactory$Builder`;
  #L3cd4f8.  v1:= 0I;
  #L3cd4fa.  call `<init>`(v0, v2, v1) @signature `Ldagger/internal/MapFactory$Builder;.<init>:(ILdagger/internal/MapFactory$a;)V` @kind direct;
  #L3cd500.  return v0 @kind object;
}
procedure `javax.inject.Provider` `emptyMapProvider`() @signature `Ldagger/internal/MapFactory;.emptyMapProvider:()Ljavax/inject/Provider;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cd5b8.  v0:= `@@dagger.internal.MapFactory.b` @type ^`javax.inject.Provider` @kind object;
  #L3cd5bc.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`dagger.internal.MapFactory` v1 @kind this) @signature `Ldagger/internal/MapFactory;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3cd514.  call temp:= `get`(v1) @signature `Ldagger/internal/MapFactory;.get:()Ljava/util/Map;` @kind virtual;
  #L3cd51a.  v0:= temp @kind object;
  #L3cd51c.  return v0 @kind object;
}
procedure `java.util.Map` `get`(`dagger.internal.MapFactory` v4 @kind this) @signature `Ldagger/internal/MapFactory;.get:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cd530.  call temp:= `b`(v4) @signature `Ldagger/internal/AbstractMapFactory;.b:()Ljava/util/Map;` @kind virtual;
  #L3cd536.  v0:= temp @kind object;
  #L3cd538.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3cd53e.  v0:= temp;
  #L3cd540.  call temp:= `newLinkedHashMapWithExpectedSize`(v0) @signature `Ldagger/internal/DaggerCollections;.newLinkedHashMapWithExpectedSize:(I)Ljava/util/LinkedHashMap;` @kind static;
  #L3cd546.  v0:= temp @kind object;
  #L3cd548.  call temp:= `b`(v4) @signature `Ldagger/internal/AbstractMapFactory;.b:()Ljava/util/Map;` @kind virtual;
  #L3cd54e.  v1:= temp @kind object;
  #L3cd550.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3cd556.  v1:= temp @kind object;
  #L3cd558.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3cd55e.  v1:= temp @kind object;
  #L3cd560.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3cd566.  v2:= temp;
  #L3cd568.  if v2 == 0 then goto L3cd59c;
  #L3cd56c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3cd572.  v2:= temp @kind object;
  #L3cd574.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3cd578.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3cd57e.  v3:= temp @kind object;
  #L3cd580.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3cd586.  v2:= temp @kind object;
  #L3cd588.  v2:= (`javax.inject.Provider`) v2 @kind object;
  #L3cd58c.  call temp:= `get`(v2) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L3cd592.  v2:= temp @kind object;
  #L3cd594.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3cd59a.  goto L3cd560;
  #L3cd59c.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3cd5a2.  v0:= temp @kind object;
  #L3cd5a4.  return v0 @kind object;
}
