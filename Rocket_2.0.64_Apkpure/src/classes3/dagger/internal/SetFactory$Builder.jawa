record `dagger.internal.SetFactory$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `dagger.internal.SetFactory$Builder.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `dagger.internal.SetFactory$Builder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Ldagger/internal/SetFactory$Builder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3cdbb4.  return @kind void;
}
procedure `void` `<init>`(`dagger.internal.SetFactory$Builder` v0 @kind this, `int` v1 , `int` v2 ) @signature `Ldagger/internal/SetFactory$Builder;.<init>:(II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3cdbc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cdbce.  call temp:= `presizedList`(v1) @signature `Ldagger/internal/DaggerCollections;.presizedList:(I)Ljava/util/List;` @kind static;
  #L3cdbd4.  v1:= temp @kind object;
  #L3cdbd6.  v0.`dagger.internal.SetFactory$Builder.a` @type ^`java.util.List` := v1 @kind object;
  #L3cdbda.  call temp:= `presizedList`(v2) @signature `Ldagger/internal/DaggerCollections;.presizedList:(I)Ljava/util/List;` @kind static;
  #L3cdbe0.  v1:= temp @kind object;
  #L3cdbe2.  v0.`dagger.internal.SetFactory$Builder.b` @type ^`java.util.List` := v1 @kind object;
  #L3cdbe6.  return @kind void;
}
procedure `void` `<init>`(`dagger.internal.SetFactory$Builder` v0 @kind this, `int` v1 , `int` v2 , `dagger.internal.SetFactory$a` v3 @kind object) @signature `Ldagger/internal/SetFactory$Builder;.<init>:(IILdagger/internal/SetFactory$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3cdbf8.  call `<init>`(v0, v1, v2) @signature `Ldagger/internal/SetFactory$Builder;.<init>:(II)V` @kind direct;
  #L3cdbfe.  return @kind void;
}
procedure `dagger.internal.SetFactory$Builder` `addCollectionProvider`(`dagger.internal.SetFactory$Builder` v1 @kind this, `javax.inject.Provider` v2 @kind object) @signature `Ldagger/internal/SetFactory$Builder;.addCollectionProvider:(Ljavax/inject/Provider;)Ldagger/internal/SetFactory$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cdb7c.  v0:= v1.`dagger.internal.SetFactory$Builder.b` @type ^`java.util.List` @kind object;
  #L3cdb80.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cdb86.  return v1 @kind object;
}
procedure `dagger.internal.SetFactory$Builder` `addProvider`(`dagger.internal.SetFactory$Builder` v1 @kind this, `javax.inject.Provider` v2 @kind object) @signature `Ldagger/internal/SetFactory$Builder;.addProvider:(Ljavax/inject/Provider;)Ldagger/internal/SetFactory$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cdb98.  v0:= v1.`dagger.internal.SetFactory$Builder.a` @type ^`java.util.List` @kind object;
  #L3cdb9c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cdba2.  return v1 @kind object;
}
procedure `dagger.internal.SetFactory` `build`(`dagger.internal.SetFactory$Builder` v4 @kind this) @signature `Ldagger/internal/SetFactory$Builder;.build:()Ldagger/internal/SetFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cdb54.  v0:= new `dagger.internal.SetFactory`;
  #L3cdb58.  v1:= v4.`dagger.internal.SetFactory$Builder.a` @type ^`java.util.List` @kind object;
  #L3cdb5c.  v2:= v4.`dagger.internal.SetFactory$Builder.b` @type ^`java.util.List` @kind object;
  #L3cdb60.  v3:= 0I;
  #L3cdb62.  call `<init>`(v0, v1, v2, v3) @signature `Ldagger/internal/SetFactory;.<init>:(Ljava/util/List;Ljava/util/List;Ldagger/internal/SetFactory$a;)V` @kind direct;
  #L3cdb68.  return v0 @kind object;
}
