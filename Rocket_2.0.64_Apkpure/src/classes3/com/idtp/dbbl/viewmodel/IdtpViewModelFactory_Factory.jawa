record `com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory` @kind class @AccessFlag PUBLIC_FINAL extends `dagger.internal.Factory` @kind interface {
  `javax.inject.Provider` `com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory` v0 @kind this, `javax.inject.Provider` v1 @kind object) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;.<init>:(Ljavax/inject/Provider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L397bd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397bd6.  v0.`com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory.a` @type ^`javax.inject.Provider` := v1 @kind object;
  #L397bda.  return @kind void;
}
procedure `com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory` `create`(`javax.inject.Provider` v1 @kind object) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;.create:(Ljavax/inject/Provider;)Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L397b98.  v0:= new `com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory`;
  #L397b9c.  call `<init>`(v0, v1) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;.<init>:(Ljavax/inject/Provider;)V` @kind direct;
  #L397ba2.  return v0 @kind object;
}
procedure `com.idtp.dbbl.viewmodel.IdtpViewModelFactory` `newInstance`(`com.idtp.dbbl.model.IdtpAppRepository` v1 @kind object) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;.newInstance:(Lcom/idtp/dbbl/model/IdtpAppRepository;)Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L397b7c.  v0:= new `com.idtp.dbbl.viewmodel.IdtpViewModelFactory`;
  #L397b80.  call `<init>`(v0, v1) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory;.<init>:(Lcom/idtp/dbbl/model/IdtpAppRepository;)V` @kind direct;
  #L397b86.  return v0 @kind object;
}
procedure `com.idtp.dbbl.viewmodel.IdtpViewModelFactory` `get`(`com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory` v1 @kind this) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;.get:()Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397b50.  v0:= v1.`com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory.a` @type ^`javax.inject.Provider` @kind object;
  #L397b54.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L397b5a.  v0:= temp @kind object;
  #L397b5c.  v0:= (`com.idtp.dbbl.model.IdtpAppRepository`) v0 @kind object;
  #L397b60.  call temp:= `newInstance`(v0) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;.newInstance:(Lcom/idtp/dbbl/model/IdtpAppRepository;)Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory;` @kind static;
  #L397b66.  v0:= temp @kind object;
  #L397b68.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`com.idtp.dbbl.viewmodel.IdtpViewModelFactory_Factory` v1 @kind this) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L397bb4.  call temp:= `get`(v1) @signature `Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory_Factory;.get:()Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory;` @kind virtual;
  #L397bba.  v0:= temp @kind object;
  #L397bbc.  return v0 @kind object;
}
