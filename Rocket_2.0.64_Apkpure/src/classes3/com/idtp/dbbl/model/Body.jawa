record `com.idtp.dbbl.model.Body` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.idtp.dbbl.model.Body.a` @AccessFlag PUBLIC;
  `java.lang.String` `com.idtp.dbbl.model.Body.b` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.Body` v2 @kind this) @signature `Lcom/idtp/dbbl/model/Body;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L371060.  v0:= 0I;
  #L371062.  v1:= 3I;
  #L371064.  call `<init>`(v2, v0, v0, v1, v0) @signature `Lcom/idtp/dbbl/model/Body;.<init>:(Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L37106a.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.Body` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/idtp/dbbl/model/Body;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L37107c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L371082.  v0.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` := v1 @kind object;
  #L371086.  v0.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` := v2 @kind object;
  #L37108a.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.Body` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 , `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lcom/idtp/dbbl/model/Body;.<init>:(Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L37109c.  v5:= v4 ^& 1;
  #L3710a0.  v0:= 0I;
  #L3710a2.  if v5 == 0 then goto L3710a8;
  #L3710a6.  v2:= v0 @kind object;
  #L3710a8.  v4:= v4 ^& 2;
  #L3710ac.  if v4 == 0 then goto L3710b2;
  #L3710b0.  v3:= v0 @kind object;
  #L3710b2.  call `<init>`(v1, v2, v3) @signature `Lcom/idtp/dbbl/model/Body;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3710b8.  return @kind void;
}
procedure `com.idtp.dbbl.model.Body` `copy$default`(`com.idtp.dbbl.model.Body` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/idtp/dbbl/model/Body;.copy$default:(Lcom/idtp/dbbl/model/Body;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lcom/idtp/dbbl/model/Body;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L370f18.  v4:= v3 ^& 1;
  #L370f1c.  if v4 == 0 then goto L370f24;
  #L370f20.  v1:= v0.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` @kind object;
  #L370f24.  v3:= v3 ^& 2;
  #L370f28.  if v3 == 0 then goto L370f30;
  #L370f2c.  v2:= v0.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` @kind object;
  #L370f30.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/Body;.copy:(Ljava/lang/String;Ljava/lang/String;)Lcom/idtp/dbbl/model/Body;` @kind virtual;
  #L370f36.  v0:= temp @kind object;
  #L370f38.  return v0 @kind object;
}
procedure `java.lang.String` `component1`(`com.idtp.dbbl.model.Body` v1 @kind this) @signature `Lcom/idtp/dbbl/model/Body;.component1:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L370fa8.  v0:= v1.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` @kind object;
  #L370fac.  return v0 @kind object;
}
procedure `java.lang.String` `component2`(`com.idtp.dbbl.model.Body` v1 @kind this) @signature `Lcom/idtp/dbbl/model/Body;.component2:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L370fc0.  v0:= v1.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` @kind object;
  #L370fc4.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.Body` `copy`(`com.idtp.dbbl.model.Body` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/idtp/dbbl/model/Body;.copy:(Ljava/lang/String;Ljava/lang/String;)Lcom/idtp/dbbl/model/Body;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L370f4c.  v0:= new `com.idtp.dbbl.model.Body`;
  #L370f50.  call `<init>`(v0, v2, v3) @signature `Lcom/idtp/dbbl/model/Body;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L370f56.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.idtp.dbbl.model.Body` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/idtp/dbbl/model/Body;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L370ec0.  v0:= 1I;
  #L370ec2.  if v4 != v5 then goto L370ec8;
  #L370ec6.  return v0;
  #L370ec8.  v1:= instanceof @variable v5 @type ^`com.idtp.dbbl.model.Body` @kind boolean;
  #L370ecc.  v2:= 0I;
  #L370ece.  if v1 != 0 then goto L370ed4;
  #L370ed2.  return v2;
  #L370ed4.  v5:= (`com.idtp.dbbl.model.Body`) v5 @kind object;
  #L370ed8.  v1:= v4.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` @kind object;
  #L370edc.  v3:= v5.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` @kind object;
  #L370ee0.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L370ee6.  v1:= temp;
  #L370ee8.  if v1 != 0 then goto L370eee;
  #L370eec.  return v2;
  #L370eee.  v1:= v4.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` @kind object;
  #L370ef2.  v5:= v5.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` @kind object;
  #L370ef6.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L370efc.  v5:= temp;
  #L370efe.  if v5 != 0 then goto L370f04;
  #L370f02.  return v2;
  #L370f04.  return v0;
}
procedure `java.lang.String` `getMobileNo`(`com.idtp.dbbl.model.Body` v1 @kind this) @signature `Lcom/idtp/dbbl/model/Body;.getMobileNo:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L370fd8.  v0:= v1.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` @kind object;
  #L370fdc.  return v0 @kind object;
}
procedure `java.lang.String` `getVirtualID`(`com.idtp.dbbl.model.Body` v1 @kind this) @signature `Lcom/idtp/dbbl/model/Body;.getVirtualID:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L370ff0.  v0:= v1.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` @kind object;
  #L370ff4.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.idtp.dbbl.model.Body` v3 @kind this) @signature `Lcom/idtp/dbbl/model/Body;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L370f68.  v0:= v3.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` @kind object;
  #L370f6c.  v1:= 0I;
  #L370f6e.  if v0 != 0 then goto L370f76;
  #L370f72.  v0:= 0I;
  #L370f74.  goto L370f7e;
  #L370f76.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L370f7c.  v0:= temp;
  #L370f7e.  v0:= v0 * 31;
  #L370f82.  v2:= v3.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` @kind object;
  #L370f86.  if v2 != 0 then goto L370f8c;
  #L370f8a.  goto L370f94;
  #L370f8c.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L370f92.  v1:= temp;
  #L370f94.  v0:= v0 + v1 @kind int;
  #L370f96.  return v0;
}
procedure `void` `setMobileNo`(`com.idtp.dbbl.model.Body` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/Body;.setMobileNo:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3710cc.  v0.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` := v1 @kind object;
  #L3710d0.  return @kind void;
}
procedure `void` `setVirtualID`(`com.idtp.dbbl.model.Body` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/Body;.setVirtualID:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3710e4.  v0.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` := v1 @kind object;
  #L3710e8.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.idtp.dbbl.model.Body` v2 @kind this) @signature `Lcom/idtp/dbbl/model/Body;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L371008.  v0:= new `java.lang.StringBuilder`;
  #L37100c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L371012.  v1:= "Body(virtualID=" @kind object;
  #L371016.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37101c.  v1:= v2.`com.idtp.dbbl.model.Body.a` @type ^`java.lang.String` @kind object;
  #L371020.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L371026.  v1:= ", mobileNo=" @kind object;
  #L37102a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L371030.  v1:= v2.`com.idtp.dbbl.model.Body.b` @type ^`java.lang.String` @kind object;
  #L371034.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37103a.  v1:= 41I;
  #L37103e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L371044.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37104a.  v0:= temp @kind object;
  #L37104c.  return v0 @kind object;
}
