record `com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.observers.DisposableObserver` @kind class {
  `com.idtp.dbbl.model.IdtpAppRepository` `com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1` v0 @kind this, `com.idtp.dbbl.model.IdtpAppRepository` v1 @kind object) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository$getTransactionFeeResponse$1;.<init>:(Lcom/idtp/dbbl/model/IdtpAppRepository;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L375244.  v0.`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1.a` @type ^`com.idtp.dbbl.model.IdtpAppRepository` := v1 @kind object;
  #L375248.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/DisposableObserver;.<init>:()V` @kind direct;
  #L37524e.  return @kind void;
}
procedure `void` `onComplete`(`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1` v2 @kind this) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository$getTransactionFeeResponse$1;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L375260.  v0:= v2.`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1.a` @type ^`com.idtp.dbbl.model.IdtpAppRepository` @kind object;
  #L375264.  call temp:= `access$getGetTransactionFeeMutableLiveData$p`(v0) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository;.access$getGetTransactionFeeMutableLiveData$p:(Lcom/idtp/dbbl/model/IdtpAppRepository;)Landroidx/lifecycle/MutableLiveData;` @kind static;
  #L37526a.  v0:= temp @kind object;
  #L37526c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L375272.  v1:= v2.`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1.a` @type ^`com.idtp.dbbl.model.IdtpAppRepository` @kind object;
  #L375276.  call temp:= `access$getGetTransactionFee$p`(v1) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository;.access$getGetTransactionFee$p:(Lcom/idtp/dbbl/model/IdtpAppRepository;)Lcom/idtp/dbbl/model/GetTransactionFeeResponse;` @kind static;
  #L37527c.  v1:= temp @kind object;
  #L37527e.  call `postValue`(v0, v1) @signature `Landroidx/lifecycle/MutableLiveData;.postValue:(Ljava/lang/Object;)V` @kind virtual;
  #L375284.  return @kind void;
}
procedure `void` `onError`(`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository$getTransactionFeeResponse$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L375298.  v0:= "e" @kind object;
  #L37529c.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3752a2.  v0:= v6.`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1.a` @type ^`com.idtp.dbbl.model.IdtpAppRepository` @kind object;
  #L3752a6.  v1:= new `com.idtp.dbbl.model.GetTransactionFeeResponse`;
  #L3752aa.  v2:= 0I;
  #L3752ac.  v3:= 3I;
  #L3752ae.  call `<init>`(v1, v2, v2, v3, v2) @signature `Lcom/idtp/dbbl/model/GetTransactionFeeResponse;.<init>:(Lcom/idtp/dbbl/model/HeaderTransResponse;Lcom/idtp/dbbl/model/BodyTransactionFeeResponse;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3752b4.  call `access$setGetTransactionFee$p`(v0, v1) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository;.access$setGetTransactionFee$p:(Lcom/idtp/dbbl/model/IdtpAppRepository;Lcom/idtp/dbbl/model/GetTransactionFeeResponse;)V` @kind static;
  #L3752ba.  v0:= new `com.idtp.dbbl.model.HeaderTransResponse`;
  #L3752be.  v1:= 0I;
  #L3752c0.  call `<init>`(v0, v1, v2, v3, v2) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3752c6.  v3:= 999I;
  #L3752ca.  call `setResponseCode`(v0, v3) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.setResponseCode:(I)V` @kind virtual;
  #L3752d0.  call temp:= `getMessage`(v7) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3752d6.  v7:= temp @kind object;
  #L3752d8.  v3:= v6.`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1.a` @type ^`com.idtp.dbbl.model.IdtpAppRepository` @kind object;
  #L3752dc.  call `checkNotNull`(v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L3752e2.  v4:= "socket" @kind object;
  #L3752e6.  v5:= 2I;
  #L3752e8.  call temp:= `contains$default`(v7, v4, v1, v5, v2) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZILjava/lang/Object;)Z` @kind static;
  #L3752ee.  v7:= temp;
  #L3752f0.  if v7 == 0 then goto L3752fe;
  #L3752f4.  call temp:= `access$getServerIssueMessage$p`(v3) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository;.access$getServerIssueMessage$p:(Lcom/idtp/dbbl/model/IdtpAppRepository;)Ljava/lang/String;` @kind static;
  #L3752fa.  v7:= temp @kind object;
  #L3752fc.  goto L375306;
  #L3752fe.  call temp:= `access$getServerErrorMessage$p`(v3) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository;.access$getServerErrorMessage$p:(Lcom/idtp/dbbl/model/IdtpAppRepository;)Ljava/lang/String;` @kind static;
  #L375304.  v7:= temp @kind object;
  #L375306.  call `setResponseMessage`(v0, v7) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.setResponseMessage:(Ljava/lang/String;)V` @kind virtual;
  #L37530c.  v7:= v6.`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1.a` @type ^`com.idtp.dbbl.model.IdtpAppRepository` @kind object;
  #L375310.  call temp:= `access$getGetTransactionFee$p`(v7) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository;.access$getGetTransactionFee$p:(Lcom/idtp/dbbl/model/IdtpAppRepository;)Lcom/idtp/dbbl/model/GetTransactionFeeResponse;` @kind static;
  #L375316.  v7:= temp @kind object;
  #L375318.  call `checkNotNull`(v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L37531e.  call `setHeader`(v7, v0) @signature `Lcom/idtp/dbbl/model/GetTransactionFeeResponse;.setHeader:(Lcom/idtp/dbbl/model/HeaderTransResponse;)V` @kind virtual;
  #L375324.  call `onComplete`(v6) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository$getTransactionFeeResponse$1;.onComplete:()V` @kind virtual;
  #L37532a.  return @kind void;
}
procedure `void` `onNext`(`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1` v1 @kind this, `com.idtp.dbbl.model.GetTransactionFeeResponse` v2 @kind object) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository$getTransactionFeeResponse$1;.onNext:(Lcom/idtp/dbbl/model/GetTransactionFeeResponse;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37533c.  v0:= "responseModel" @kind object;
  #L375340.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L375346.  v0:= v1.`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1.a` @type ^`com.idtp.dbbl.model.IdtpAppRepository` @kind object;
  #L37534a.  call `access$setGetTransactionFee$p`(v0, v2) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository;.access$setGetTransactionFee$p:(Lcom/idtp/dbbl/model/IdtpAppRepository;Lcom/idtp/dbbl/model/GetTransactionFeeResponse;)V` @kind static;
  #L375350.  return @kind void;
}
procedure `void` `onNext`(`com.idtp.dbbl.model.IdtpAppRepository$getTransactionFeeResponse$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository$getTransactionFeeResponse$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L375364.  v1:= (`com.idtp.dbbl.model.GetTransactionFeeResponse`) v1 @kind object;
  #L375368.  call `onNext`(v0, v1) @signature `Lcom/idtp/dbbl/model/IdtpAppRepository$getTransactionFeeResponse$1;.onNext:(Lcom/idtp/dbbl/model/GetTransactionFeeResponse;)V` @kind virtual;
  #L37536e.  return @kind void;
}
