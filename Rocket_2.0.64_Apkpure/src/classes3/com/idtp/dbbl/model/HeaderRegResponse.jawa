record `com.idtp.dbbl.model.HeaderRegResponse` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `com.idtp.dbbl.model.HeaderRegResponse.a` @AccessFlag PUBLIC;
  `java.lang.String` `com.idtp.dbbl.model.HeaderRegResponse.b` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderRegResponse` v3 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L373374.  v0:= 0I;
  #L373376.  v1:= 0I;
  #L373378.  v2:= 3I;
  #L37337a.  call `<init>`(v3, v0, v1, v2, v1) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L373380.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L373394.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37339a.  v0.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int` := v1;
  #L37339e.  v0.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` := v2 @kind object;
  #L3733a2.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3733b4.  v4:= v3 ^& 1;
  #L3733b8.  if v4 == 0 then goto L3733be;
  #L3733bc.  v1:= 0I;
  #L3733be.  v3:= v3 ^& 2;
  #L3733c2.  if v3 == 0 then goto L3733c8;
  #L3733c6.  v2:= 0I;
  #L3733c8.  call `<init>`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L3733ce.  return @kind void;
}
procedure `com.idtp.dbbl.model.HeaderRegResponse` `copy$default`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind object, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.copy$default:(Lcom/idtp/dbbl/model/HeaderRegResponse;ILjava/lang/String;ILjava/lang/Object;)Lcom/idtp/dbbl/model/HeaderRegResponse;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L37323c.  v4:= v3 ^& 1;
  #L373240.  if v4 == 0 then goto L373248;
  #L373244.  v1:= v0.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L373248.  v3:= v3 ^& 2;
  #L37324c.  if v3 == 0 then goto L373254;
  #L373250.  v2:= v0.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L373254.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.copy:(ILjava/lang/String;)Lcom/idtp/dbbl/model/HeaderRegResponse;` @kind virtual;
  #L37325a.  v0:= temp @kind object;
  #L37325c.  return v0 @kind object;
}
procedure `int` `component1`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.component1:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L37328c.  v0:= v1.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L373290.  return v0;
}
procedure `java.lang.String` `component2`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.component2:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3732ec.  v0:= v1.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L3732f0.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.HeaderRegResponse` `copy`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.copy:(ILjava/lang/String;)Lcom/idtp/dbbl/model/HeaderRegResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L373270.  v0:= new `com.idtp.dbbl.model.HeaderRegResponse`;
  #L373274.  call `<init>`(v0, v2, v3) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L37327a.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.idtp.dbbl.model.HeaderRegResponse` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3731ec.  v0:= 1I;
  #L3731ee.  if v4 != v5 then goto L3731f4;
  #L3731f2.  return v0;
  #L3731f4.  v1:= instanceof @variable v5 @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind boolean;
  #L3731f8.  v2:= 0I;
  #L3731fa.  if v1 != 0 then goto L373200;
  #L3731fe.  return v2;
  #L373200.  v5:= (`com.idtp.dbbl.model.HeaderRegResponse`) v5 @kind object;
  #L373204.  v1:= v4.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L373208.  v3:= v5.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L37320c.  if v1 == v3 then goto L373212;
  #L373210.  return v2;
  #L373212.  v1:= v4.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L373216.  v5:= v5.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L37321a.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L373220.  v5:= temp;
  #L373222.  if v5 != 0 then goto L373228;
  #L373226.  return v2;
  #L373228.  return v0;
}
procedure `int` `getResponseCode`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.getResponseCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3732a4.  v0:= v1.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L3732a8.  return v0;
}
procedure `java.lang.String` `getResponseMessage`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.getResponseMessage:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L373304.  v0:= v1.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L373308.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.idtp.dbbl.model.HeaderRegResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3732bc.  v0:= v2.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L3732c0.  v0:= v0 * 31;
  #L3732c4.  v1:= v2.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L3732c8.  if v1 != 0 then goto L3732d0;
  #L3732cc.  v1:= 0I;
  #L3732ce.  goto L3732d8;
  #L3732d0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3732d6.  v1:= temp;
  #L3732d8.  v0:= v0 + v1 @kind int;
  #L3732da.  return v0;
}
procedure `void` `setResponseCode`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind this, `int` v1 ) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.setResponseCode:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3733e0.  v0.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int` := v1;
  #L3733e4.  return @kind void;
}
procedure `void` `setResponseMessage`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.setResponseMessage:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3733f8.  v0.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` := v1 @kind object;
  #L3733fc.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.idtp.dbbl.model.HeaderRegResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37331c.  v0:= new `java.lang.StringBuilder`;
  #L373320.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L373326.  v1:= "HeaderRegResponse(responseCode=" @kind object;
  #L37332a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L373330.  v1:= v2.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L373334.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L37333a.  v1:= ", responseMessage=" @kind object;
  #L37333e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L373344.  v1:= v2.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L373348.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37334e.  v1:= 41I;
  #L373352.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L373358.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37335e.  v0:= temp @kind object;
  #L373360.  return v0 @kind object;
}
