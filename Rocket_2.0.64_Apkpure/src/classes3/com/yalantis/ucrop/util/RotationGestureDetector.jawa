record `com.yalantis.ucrop.util.RotationGestureDetector` @kind class @AccessFlag PUBLIC {
  `float` `com.yalantis.ucrop.util.RotationGestureDetector.a` @AccessFlag PRIVATE;
  `float` `com.yalantis.ucrop.util.RotationGestureDetector.b` @AccessFlag PRIVATE;
  `float` `com.yalantis.ucrop.util.RotationGestureDetector.c` @AccessFlag PRIVATE;
  `float` `com.yalantis.ucrop.util.RotationGestureDetector.d` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.util.RotationGestureDetector.e` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.util.RotationGestureDetector.f` @AccessFlag PRIVATE;
  `float` `com.yalantis.ucrop.util.RotationGestureDetector.g` @AccessFlag PRIVATE;
  `boolean` `com.yalantis.ucrop.util.RotationGestureDetector.h` @AccessFlag PRIVATE;
  `com.yalantis.ucrop.util.RotationGestureDetector$OnRotationGestureListener` `com.yalantis.ucrop.util.RotationGestureDetector.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.yalantis.ucrop.util.RotationGestureDetector` v0 @kind this, `com.yalantis.ucrop.util.RotationGestureDetector$OnRotationGestureListener` v1 @kind object) @signature `Lcom/yalantis/ucrop/util/RotationGestureDetector;.<init>:(Lcom/yalantis/ucrop/util/RotationGestureDetector$OnRotationGestureListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c9dac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c9db2.  v0.`com.yalantis.ucrop.util.RotationGestureDetector.i` @type ^`com.yalantis.ucrop.util.RotationGestureDetector$OnRotationGestureListener` := v1 @kind object;
  #L3c9db6.  v1:= -1I;
  #L3c9db8.  v0.`com.yalantis.ucrop.util.RotationGestureDetector.e` @type ^`int` := v1;
  #L3c9dbc.  v0.`com.yalantis.ucrop.util.RotationGestureDetector.f` @type ^`int` := v1;
  #L3c9dc0.  return @kind void;
}
procedure `float` `a`(`com.yalantis.ucrop.util.RotationGestureDetector` v2 @kind this, `float` v3 , `float` v4 , `float` v5 , `float` v6 , `float` v7 , `float` v8 , `float` v9 , `float` v10 ) @signature `Lcom/yalantis/ucrop/util/RotationGestureDetector;.a:(FFFFFFFF)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c9cf0.  v4:= v4 - v6 @kind float;
  #L3c9cf2.  v0:= (`double`) v4 @kind f2d;
  #L3c9cf4.  v3:= v3 - v5 @kind float;
  #L3c9cf6.  v3:= (`double`) v3 @kind f2d;
  #L3c9cf8.  call temp:= `atan2`(v0, v3) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L3c9cfe.  v3:= temp @kind wide;
  #L3c9d00.  v3:= (`float`) v3 @kind d2f;
  #L3c9d02.  v3:= (`double`) v3 @kind f2d;
  #L3c9d04.  call temp:= `toDegrees`(v3) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L3c9d0a.  v3:= temp @kind wide;
  #L3c9d0c.  v3:= (`float`) v3 @kind d2f;
  #L3c9d0e.  v8:= v8 - v10 @kind float;
  #L3c9d10.  v4:= (`double`) v8 @kind f2d;
  #L3c9d12.  v7:= v7 - v9 @kind float;
  #L3c9d14.  v6:= (`double`) v7 @kind f2d;
  #L3c9d16.  call temp:= `atan2`(v4, v6) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L3c9d1c.  v4:= temp @kind wide;
  #L3c9d1e.  v4:= (`float`) v4 @kind d2f;
  #L3c9d20.  v4:= (`double`) v4 @kind f2d;
  #L3c9d22.  call temp:= `toDegrees`(v4) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L3c9d28.  v4:= temp @kind wide;
  #L3c9d2a.  v4:= (`float`) v4 @kind d2f;
  #L3c9d2c.  call temp:= `b`(v2, v3, v4) @signature `Lcom/yalantis/ucrop/util/RotationGestureDetector;.b:(FF)F` @kind direct;
  #L3c9d32.  v3:= temp;
  #L3c9d34.  return v3;
}
procedure `float` `b`(`com.yalantis.ucrop.util.RotationGestureDetector` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/yalantis/ucrop/util/RotationGestureDetector;.b:(FF)F` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c9d48.  v0:= 360.0F;
  #L3c9d4c.  v3:= v3 %% v0 @kind float;
  #L3c9d4e.  v2:= v2 %% v0 @kind float;
  #L3c9d50.  v3:= v3 - v2 @kind float;
  #L3c9d52.  v1.`com.yalantis.ucrop.util.RotationGestureDetector.g` @type ^`float` := v3;
  #L3c9d56.  v2:= -180.0F;
  #L3c9d5a.  v2:= fcmpg(v3, v2);
  #L3c9d5e.  if v2 >= 0 then goto L3c9d6a;
  #L3c9d62.  v3:= v3 + v0 @kind float;
  #L3c9d64.  v1.`com.yalantis.ucrop.util.RotationGestureDetector.g` @type ^`float` := v3;
  #L3c9d68.  goto L3c9d7c;
  #L3c9d6a.  v2:= 180.0F;
  #L3c9d6e.  v2:= fcmpl(v3, v2);
  #L3c9d72.  if v2 <= 0 then goto L3c9d7c;
  #L3c9d76.  v3:= v3 - v0 @kind float;
  #L3c9d78.  v1.`com.yalantis.ucrop.util.RotationGestureDetector.g` @type ^`float` := v3;
  #L3c9d7c.  v2:= v1.`com.yalantis.ucrop.util.RotationGestureDetector.g` @type ^`float`;
  #L3c9d80.  return v2;
}
procedure `float` `getAngle`(`com.yalantis.ucrop.util.RotationGestureDetector` v1 @kind this) @signature `Lcom/yalantis/ucrop/util/RotationGestureDetector;.getAngle:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c9d94.  v0:= v1.`com.yalantis.ucrop.util.RotationGestureDetector.g` @type ^`float`;
  #L3c9d98.  return v0;
}
procedure `boolean` `onTouchEvent`(`com.yalantis.ucrop.util.RotationGestureDetector` v15 @kind this, `android.view.MotionEvent` v16 @kind object) @signature `Lcom/yalantis/ucrop/util/RotationGestureDetector;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L3c9b84.  v9:= v15 @kind object;
  #L3c9b86.  v0:= v16 @kind object;
  #L3c9b8a.  call temp:= `getActionMasked`(v16) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L3c9b90.  v1:= temp;
  #L3c9b92.  v2:= 0I;
  #L3c9b94.  v3:= 0I;
  #L3c9b96.  v10:= 1I;
  #L3c9b98.  if v1 == 0 then goto L3c9ca8;
  #L3c9b9c.  v4:= -1I;
  #L3c9b9e.  if v1 == v10 then goto L3c9ca2;
  #L3c9ba2.  v5:= 2I;
  #L3c9ba4.  if v1 == v5 then goto L3c9c00;
  #L3c9ba8.  v2:= 5I;
  #L3c9baa.  if v1 == v2 then goto L3c9bc0;
  #L3c9bae.  v0:= 6I;
  #L3c9bb0.  if v1 == v0 then goto L3c9bb8;
  #L3c9bb4.  goto L3c9cdc;
  #L3c9bb8.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.f` @type ^`int` := v4;
  #L3c9bbc.  goto L3c9cdc;
  #L3c9bc0.  call temp:= `getX`(v16) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L3c9bc6.  v1:= temp;
  #L3c9bc8.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.a` @type ^`float` := v1;
  #L3c9bcc.  call temp:= `getY`(v16) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3c9bd2.  v1:= temp;
  #L3c9bd4.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.b` @type ^`float` := v1;
  #L3c9bd8.  call temp:= `getActionIndex`(v16) @signature `Landroid/view/MotionEvent;.getActionIndex:()I` @kind virtual;
  #L3c9bde.  v1:= temp;
  #L3c9be0.  call temp:= `getPointerId`(v0, v1) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L3c9be6.  v1:= temp;
  #L3c9be8.  call temp:= `findPointerIndex`(v0, v1) @signature `Landroid/view/MotionEvent;.findPointerIndex:(I)I` @kind virtual;
  #L3c9bee.  v0:= temp;
  #L3c9bf0.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.f` @type ^`int` := v0;
  #L3c9bf4.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.g` @type ^`float` := v3;
  #L3c9bf8.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.h` @type ^`boolean` := v10 @kind boolean;
  #L3c9bfc.  goto L3c9cdc;
  #L3c9c00.  v1:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.e` @type ^`int`;
  #L3c9c04.  if v1 == v4 then goto L3c9cdc;
  #L3c9c08.  v1:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.f` @type ^`int`;
  #L3c9c0c.  if v1 == v4 then goto L3c9cdc;
  #L3c9c10.  call temp:= `getPointerCount`(v16) @signature `Landroid/view/MotionEvent;.getPointerCount:()I` @kind virtual;
  #L3c9c16.  v1:= temp;
  #L3c9c18.  v4:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.f` @type ^`int`;
  #L3c9c1c.  if v1 <= v4 then goto L3c9cdc;
  #L3c9c20.  v1:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.e` @type ^`int`;
  #L3c9c24.  call temp:= `getX`(v0, v1) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L3c9c2a.  v11:= temp;
  #L3c9c2c.  v1:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.e` @type ^`int`;
  #L3c9c30.  call temp:= `getY`(v0, v1) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L3c9c36.  v12:= temp;
  #L3c9c38.  v1:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.f` @type ^`int`;
  #L3c9c3c.  call temp:= `getX`(v0, v1) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L3c9c42.  v13:= temp;
  #L3c9c44.  v1:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.f` @type ^`int`;
  #L3c9c48.  call temp:= `getY`(v0, v1) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L3c9c4e.  v14:= temp;
  #L3c9c50.  v0:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.h` @type ^`boolean` @kind boolean;
  #L3c9c54.  if v0 == 0 then goto L3c9c62;
  #L3c9c58.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.g` @type ^`float` := v3;
  #L3c9c5c.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.h` @type ^`boolean` := v2 @kind boolean;
  #L3c9c60.  goto L3c9c82;
  #L3c9c62.  v1:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.a` @type ^`float`;
  #L3c9c66.  v2:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.b` @type ^`float`;
  #L3c9c6a.  v3:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.c` @type ^`float`;
  #L3c9c6e.  v4:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.d` @type ^`float`;
  #L3c9c72.  v0:= v15 @kind object;
  #L3c9c74.  v5:= v13;
  #L3c9c76.  v6:= v14;
  #L3c9c78.  v7:= v11;
  #L3c9c7a.  v8:= v12;
  #L3c9c7c.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/yalantis/ucrop/util/RotationGestureDetector;.a:(FFFFFFFF)F` @kind direct;
  #L3c9c82.  v0:= v9.`com.yalantis.ucrop.util.RotationGestureDetector.i` @type ^`com.yalantis.ucrop.util.RotationGestureDetector$OnRotationGestureListener` @kind object;
  #L3c9c86.  if v0 == 0 then goto L3c9c90;
  #L3c9c8a.  call temp:= `onRotation`(v0, v15) @signature `Lcom/yalantis/ucrop/util/RotationGestureDetector$OnRotationGestureListener;.onRotation:(Lcom/yalantis/ucrop/util/RotationGestureDetector;)Z` @kind interface;
  #L3c9c90.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.a` @type ^`float` := v13;
  #L3c9c94.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.b` @type ^`float` := v14;
  #L3c9c98.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.c` @type ^`float` := v11;
  #L3c9c9c.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.d` @type ^`float` := v12;
  #L3c9ca0.  goto L3c9cdc;
  #L3c9ca2.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.e` @type ^`int` := v4;
  #L3c9ca6.  goto L3c9cdc;
  #L3c9ca8.  call temp:= `getX`(v16) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L3c9cae.  v1:= temp;
  #L3c9cb0.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.c` @type ^`float` := v1;
  #L3c9cb4.  call temp:= `getY`(v16) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3c9cba.  v1:= temp;
  #L3c9cbc.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.d` @type ^`float` := v1;
  #L3c9cc0.  call temp:= `getPointerId`(v0, v2) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L3c9cc6.  v1:= temp;
  #L3c9cc8.  call temp:= `findPointerIndex`(v0, v1) @signature `Landroid/view/MotionEvent;.findPointerIndex:(I)I` @kind virtual;
  #L3c9cce.  v0:= temp;
  #L3c9cd0.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.e` @type ^`int` := v0;
  #L3c9cd4.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.g` @type ^`float` := v3;
  #L3c9cd8.  v9.`com.yalantis.ucrop.util.RotationGestureDetector.h` @type ^`boolean` := v10 @kind boolean;
  #L3c9cdc.  return v10;
}
