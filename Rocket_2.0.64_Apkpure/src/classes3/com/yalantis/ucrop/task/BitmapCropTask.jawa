record `com.yalantis.ucrop.task.BitmapCropTask` @kind class @AccessFlag PUBLIC extends `android.os.AsyncTask` @kind class {
  `java.lang.ref.WeakReference` `com.yalantis.ucrop.task.BitmapCropTask.a` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Bitmap` `com.yalantis.ucrop.task.BitmapCropTask.b` @AccessFlag PRIVATE;
  `android.graphics.RectF` `com.yalantis.ucrop.task.BitmapCropTask.c` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.yalantis.ucrop.task.BitmapCropTask.d` @AccessFlag PRIVATE_FINAL;
  `float` `com.yalantis.ucrop.task.BitmapCropTask.e` @AccessFlag PRIVATE;
  `float` `com.yalantis.ucrop.task.BitmapCropTask.f` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.g` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.h` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Bitmap$CompressFormat` `com.yalantis.ucrop.task.BitmapCropTask.i` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.j` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.yalantis.ucrop.task.BitmapCropTask.k` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.yalantis.ucrop.task.BitmapCropTask.l` @AccessFlag PRIVATE_FINAL;
  `com.yalantis.ucrop.model.ExifInfo` `com.yalantis.ucrop.task.BitmapCropTask.m` @AccessFlag PRIVATE_FINAL;
  `com.yalantis.ucrop.callback.BitmapCropCallback` `com.yalantis.ucrop.task.BitmapCropTask.n` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.o` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.p` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.q` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.yalantis.ucrop.task.BitmapCropTask` v1 @kind this, `android.content.Context` v2 @kind object, `android.graphics.Bitmap` v3 @kind object, `com.yalantis.ucrop.model.ImageState` v4 @kind object, `com.yalantis.ucrop.model.CropParameters` v5 @kind object, `com.yalantis.ucrop.callback.BitmapCropCallback` v6 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.<init>:(Landroid/content/Context;Landroid/graphics/Bitmap;Lcom/yalantis/ucrop/model/ImageState;Lcom/yalantis/ucrop/model/CropParameters;Lcom/yalantis/ucrop/callback/BitmapCropCallback;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c7ba8.  call `<init>`(v1) @signature `Landroid/os/AsyncTask;.<init>:()V` @kind direct;
  #L3c7bae.  v0:= new `java.lang.ref.WeakReference`;
  #L3c7bb2.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3c7bb8.  v1.`com.yalantis.ucrop.task.BitmapCropTask.a` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L3c7bbc.  v1.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` := v3 @kind object;
  #L3c7bc0.  call temp:= `getCropRect`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCropRect:()Landroid/graphics/RectF;` @kind virtual;
  #L3c7bc6.  v2:= temp @kind object;
  #L3c7bc8.  v1.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` := v2 @kind object;
  #L3c7bcc.  call temp:= `getCurrentImageRect`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentImageRect:()Landroid/graphics/RectF;` @kind virtual;
  #L3c7bd2.  v2:= temp @kind object;
  #L3c7bd4.  v1.`com.yalantis.ucrop.task.BitmapCropTask.d` @type ^`android.graphics.RectF` := v2 @kind object;
  #L3c7bd8.  call temp:= `getCurrentScale`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentScale:()F` @kind virtual;
  #L3c7bde.  v2:= temp;
  #L3c7be0.  v1.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float` := v2;
  #L3c7be4.  call temp:= `getCurrentAngle`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentAngle:()F` @kind virtual;
  #L3c7bea.  v2:= temp;
  #L3c7bec.  v1.`com.yalantis.ucrop.task.BitmapCropTask.f` @type ^`float` := v2;
  #L3c7bf0.  call temp:= `getMaxResultImageSizeX`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getMaxResultImageSizeX:()I` @kind virtual;
  #L3c7bf6.  v2:= temp;
  #L3c7bf8.  v1.`com.yalantis.ucrop.task.BitmapCropTask.g` @type ^`int` := v2;
  #L3c7bfc.  call temp:= `getMaxResultImageSizeY`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getMaxResultImageSizeY:()I` @kind virtual;
  #L3c7c02.  v2:= temp;
  #L3c7c04.  v1.`com.yalantis.ucrop.task.BitmapCropTask.h` @type ^`int` := v2;
  #L3c7c08.  call temp:= `getCompressFormat`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getCompressFormat:()Landroid/graphics/Bitmap$CompressFormat;` @kind virtual;
  #L3c7c0e.  v2:= temp @kind object;
  #L3c7c10.  v1.`com.yalantis.ucrop.task.BitmapCropTask.i` @type ^`android.graphics.Bitmap$CompressFormat` := v2 @kind object;
  #L3c7c14.  call temp:= `getCompressQuality`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getCompressQuality:()I` @kind virtual;
  #L3c7c1a.  v2:= temp;
  #L3c7c1c.  v1.`com.yalantis.ucrop.task.BitmapCropTask.j` @type ^`int` := v2;
  #L3c7c20.  call temp:= `getImageInputPath`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getImageInputPath:()Ljava/lang/String;` @kind virtual;
  #L3c7c26.  v2:= temp @kind object;
  #L3c7c28.  v1.`com.yalantis.ucrop.task.BitmapCropTask.k` @type ^`java.lang.String` := v2 @kind object;
  #L3c7c2c.  call temp:= `getImageOutputPath`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getImageOutputPath:()Ljava/lang/String;` @kind virtual;
  #L3c7c32.  v2:= temp @kind object;
  #L3c7c34.  v1.`com.yalantis.ucrop.task.BitmapCropTask.l` @type ^`java.lang.String` := v2 @kind object;
  #L3c7c38.  call temp:= `getExifInfo`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getExifInfo:()Lcom/yalantis/ucrop/model/ExifInfo;` @kind virtual;
  #L3c7c3e.  v2:= temp @kind object;
  #L3c7c40.  v1.`com.yalantis.ucrop.task.BitmapCropTask.m` @type ^`com.yalantis.ucrop.model.ExifInfo` := v2 @kind object;
  #L3c7c44.  v1.`com.yalantis.ucrop.task.BitmapCropTask.n` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` := v6 @kind object;
  #L3c7c48.  return @kind void;
}
procedure `boolean` `a`(`com.yalantis.ucrop.task.BitmapCropTask` v9 @kind this) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3c77b0.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.g` @type ^`int`;
  #L3c77b4.  v1:= 0I;
  #L3c77b6.  if v0 <= 0 then goto L3c786e;
  #L3c77ba.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.h` @type ^`int`;
  #L3c77be.  if v0 <= 0 then goto L3c786e;
  #L3c77c2.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c77c6.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3c77cc.  v0:= temp;
  #L3c77ce.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float`;
  #L3c77d2.  v0:= v0 / v2 @kind float;
  #L3c77d4.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c77d8.  call temp:= `height`(v2) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3c77de.  v2:= temp;
  #L3c77e0.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float`;
  #L3c77e4.  v2:= v2 / v3 @kind float;
  #L3c77e6.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.g` @type ^`int`;
  #L3c77ea.  v4:= (`float`) v3 @kind i2f;
  #L3c77ec.  v4:= fcmpl(v0, v4);
  #L3c77f0.  if v4 > 0 then goto L3c7802;
  #L3c77f4.  v4:= v9.`com.yalantis.ucrop.task.BitmapCropTask.h` @type ^`int`;
  #L3c77f8.  v4:= (`float`) v4 @kind i2f;
  #L3c77fa.  v4:= fcmpl(v2, v4);
  #L3c77fe.  if v4 <= 0 then goto L3c786e;
  #L3c7802.  v3:= (`float`) v3 @kind i2f;
  #L3c7804.  v3:= v3 / v0 @kind float;
  #L3c7806.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.h` @type ^`int`;
  #L3c780a.  v0:= (`float`) v0 @kind i2f;
  #L3c780c.  v0:= v0 / v2 @kind float;
  #L3c780e.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3c7814.  v0:= temp;
  #L3c7816.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c781a.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3c7820.  v3:= temp;
  #L3c7822.  v3:= (`float`) v3 @kind i2f;
  #L3c7824.  v3:= v3 * v0 @kind float;
  #L3c7828.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3c782e.  v3:= temp;
  #L3c7830.  v4:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c7834.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3c783a.  v4:= temp;
  #L3c783c.  v4:= (`float`) v4 @kind i2f;
  #L3c783e.  v4:= v4 * v0 @kind float;
  #L3c7842.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3c7848.  v4:= temp;
  #L3c784a.  call temp:= `createScaledBitmap`(v2, v3, v4, v1) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L3c7850.  v2:= temp @kind object;
  #L3c7852.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c7856.  if v3 == v2 then goto L3c7860;
  #L3c785a.  call `recycle`(v3) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3c7860.  v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L3c7864.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float`;
  #L3c7868.  v2:= v2 / v0 @kind float;
  #L3c786a.  v9.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float` := v2;
  #L3c786e.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.f` @type ^`float`;
  #L3c7872.  v2:= 0I;
  #L3c7874.  v0:= fcmpl(v0, v2);
  #L3c7878.  if v0 == 0 then goto L3c78ec;
  #L3c787c.  v7:= new `android.graphics.Matrix`;
  #L3c7880.  call `<init>`(v7) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3c7886.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.f` @type ^`float`;
  #L3c788a.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c788e.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3c7894.  v2:= temp;
  #L3c7896.  v2:= v2 / 2;
  #L3c789a.  v2:= (`float`) v2 @kind i2f;
  #L3c789c.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c78a0.  call temp:= `getHeight`(v3) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3c78a6.  v3:= temp;
  #L3c78a8.  v3:= v3 / 2;
  #L3c78ac.  v3:= (`float`) v3 @kind i2f;
  #L3c78ae.  call `setRotate`(v7, v0, v2, v3) @signature `Landroid/graphics/Matrix;.setRotate:(FFF)V` @kind virtual;
  #L3c78b4.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c78b8.  v3:= 0I;
  #L3c78ba.  v4:= 0I;
  #L3c78bc.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3c78c2.  v5:= temp;
  #L3c78c4.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c78c8.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3c78ce.  v6:= temp;
  #L3c78d0.  v8:= 1I;
  #L3c78d2.  call temp:= `createBitmap`(v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L3c78d8.  v0:= temp @kind object;
  #L3c78da.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c78de.  if v2 == v0 then goto L3c78e8;
  #L3c78e2.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3c78e8.  v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L3c78ec.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c78f0.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L3c78f4.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.d` @type ^`android.graphics.RectF` @kind object;
  #L3c78f8.  v2:= v2.`android.graphics.RectF.left` @type ^`float`;
  #L3c78fc.  v0:= v0 - v2 @kind float;
  #L3c78fe.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float`;
  #L3c7902.  v0:= v0 / v2 @kind float;
  #L3c7904.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3c790a.  v0:= temp;
  #L3c790c.  v9.`com.yalantis.ucrop.task.BitmapCropTask.q` @type ^`int` := v0;
  #L3c7910.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c7914.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L3c7918.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.d` @type ^`android.graphics.RectF` @kind object;
  #L3c791c.  v2:= v2.`android.graphics.RectF.top` @type ^`float`;
  #L3c7920.  v0:= v0 - v2 @kind float;
  #L3c7922.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float`;
  #L3c7926.  v0:= v0 / v2 @kind float;
  #L3c7928.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3c792e.  v0:= temp;
  #L3c7930.  v9.`com.yalantis.ucrop.task.BitmapCropTask.r` @type ^`int` := v0;
  #L3c7934.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c7938.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3c793e.  v0:= temp;
  #L3c7940.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float`;
  #L3c7944.  v0:= v0 / v2 @kind float;
  #L3c7946.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3c794c.  v0:= temp;
  #L3c794e.  v9.`com.yalantis.ucrop.task.BitmapCropTask.o` @type ^`int` := v0;
  #L3c7952.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c7956.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3c795c.  v0:= temp;
  #L3c795e.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.e` @type ^`float`;
  #L3c7962.  v0:= v0 / v2 @kind float;
  #L3c7964.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3c796a.  v0:= temp;
  #L3c796c.  v9.`com.yalantis.ucrop.task.BitmapCropTask.p` @type ^`int` := v0;
  #L3c7970.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.o` @type ^`int`;
  #L3c7974.  call temp:= `c`(v9, v2, v0) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.c:(II)Z` @kind direct;
  #L3c797a.  v0:= temp;
  #L3c797c.  v2:= new `java.lang.StringBuilder`;
  #L3c7980.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c7986.  v3:= "Should crop: " @kind object;
  #L3c798a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7990.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7996.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c799c.  v2:= temp @kind object;
  #L3c799e.  v3:= "BitmapCropTask" @kind object;
  #L3c79a2.  call temp:= `i`(v3, v2) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3c79a8.  if v0 == 0 then goto L3c7a06;
  #L3c79ac.  v0:= new `androidx.exifinterface.media.ExifInterface`;
  #L3c79b0.  v1:= v9.`com.yalantis.ucrop.task.BitmapCropTask.k` @type ^`java.lang.String` @kind object;
  #L3c79b4.  call `<init>`(v0, v1) @signature `Landroidx/exifinterface/media/ExifInterface;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c79ba.  v1:= v9.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c79be.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.q` @type ^`int`;
  #L3c79c2.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.r` @type ^`int`;
  #L3c79c6.  v4:= v9.`com.yalantis.ucrop.task.BitmapCropTask.o` @type ^`int`;
  #L3c79ca.  v5:= v9.`com.yalantis.ucrop.task.BitmapCropTask.p` @type ^`int`;
  #L3c79ce.  call temp:= `createBitmap`(v1, v2, v3, v4, v5) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;` @kind static;
  #L3c79d4.  v1:= temp @kind object;
  #L3c79d6.  call `b`(v9, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.b:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3c79dc.  v1:= v9.`com.yalantis.ucrop.task.BitmapCropTask.i` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3c79e0.  v2:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3c79e4.  call temp:= `equals`(v1, v2) @signature `Landroid/graphics/Bitmap$CompressFormat;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c79ea.  v1:= temp;
  #L3c79ec.  if v1 == 0 then goto L3c7a02;
  #L3c79f0.  v1:= v9.`com.yalantis.ucrop.task.BitmapCropTask.o` @type ^`int`;
  #L3c79f4.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.p` @type ^`int`;
  #L3c79f8.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.l` @type ^`java.lang.String` @kind object;
  #L3c79fc.  call `copyExif`(v0, v1, v2, v3) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.copyExif:(Landroidx/exifinterface/media/ExifInterface;IILjava/lang/String;)V` @kind static;
  #L3c7a02.  v0:= 1I;
  #L3c7a04.  return v0;
  #L3c7a06.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.k` @type ^`java.lang.String` @kind object;
  #L3c7a0a.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.l` @type ^`java.lang.String` @kind object;
  #L3c7a0e.  call `copyFile`(v0, v2) @signature `Lcom/yalantis/ucrop/util/FileUtils;.copyFile:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c7a14.  return v1;
}
procedure `void` `b`(`com.yalantis.ucrop.task.BitmapCropTask` v4 @kind this, `android.graphics.Bitmap` v5 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.b:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c7cd0.  v0:= v4.`com.yalantis.ucrop.task.BitmapCropTask.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3c7cd4.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3c7cda.  v0:= temp @kind object;
  #L3c7cdc.  v0:= (`android.content.Context`) v0 @kind object;
  #L3c7ce0.  if v0 != 0 then goto L3c7ce6;
  #L3c7ce4.  return @kind void;
  #L3c7ce6.  v0:= 0I;
  #L3c7ce8.  v1:= new `java.io.FileOutputStream`;
  #L3c7cec.  v2:= new `java.io.File`;
  #L3c7cf0.  v3:= v4.`com.yalantis.ucrop.task.BitmapCropTask.l` @type ^`java.lang.String` @kind object;
  #L3c7cf4.  call `<init>`(v2, v3) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c7cfa.  v3:= 0I;
  #L3c7cfc.  call `<init>`(v1, v2, v3) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L3c7d02.  v2:= new `java.io.ByteArrayOutputStream`;
  #L3c7d06.  call `<init>`(v2) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L3c7d0c.  v0:= v4.`com.yalantis.ucrop.task.BitmapCropTask.i` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3c7d10.  v3:= v4.`com.yalantis.ucrop.task.BitmapCropTask.j` @type ^`int`;
  #L3c7d14.  call temp:= `compress`(v5, v0, v3, v2) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L3c7d1a.  call temp:= `toByteArray`(v2) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3c7d20.  v0:= temp @kind object;
  #L3c7d22.  call `write`(v1, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3c7d28.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3c7d2e.  call `close`(v1) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3c7d34.  goto L3c7d70;
  #L3c7d36.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c7d38.  goto L3c7d42;
  #L3c7d3a.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3c7d3c.  goto L3c7d4a;
  #L3c7d3e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c7d40.  v2:= v0 @kind object;
  #L3c7d42.  v0:= v1 @kind object;
  #L3c7d44.  goto L3c7d7a;
  #L3c7d46.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3c7d48.  v2:= v0 @kind object;
  #L3c7d4a.  v0:= v1 @kind object;
  #L3c7d4c.  goto L3c7d58;
  #L3c7d4e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c7d50.  v2:= v0 @kind object;
  #L3c7d52.  goto L3c7d7a;
  #L3c7d54.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3c7d56.  v2:= v0 @kind object;
  #L3c7d58.  v1:= "BitmapCropTask" @kind object;
  #L3c7d5c.  call temp:= `getLocalizedMessage`(v5) @signature `Ljava/io/IOException;.getLocalizedMessage:()Ljava/lang/String;` @kind virtual;
  #L3c7d62.  v5:= temp @kind object;
  #L3c7d64.  call temp:= `e`(v1, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3c7d6a.  call `close`(v0) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3c7d70.  call `close`(v2) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3c7d76.  return @kind void;
  #L3c7d78.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c7d7a.  call `close`(v0) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3c7d80.  call `close`(v2) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3c7d86.  throw v5;
  catch `java.io.IOException` @[L3c7ce8..L3c7d02] goto L3c7d54;
  catch `java.lang.Throwable` @[L3c7ce8..L3c7d02] goto L3c7d4e;
  catch `java.io.IOException` @[L3c7d02..L3c7d0c] goto L3c7d46;
  catch `java.lang.Throwable` @[L3c7d02..L3c7d0c] goto L3c7d3e;
  catch `java.io.IOException` @[L3c7d0c..L3c7d2e] goto L3c7d3a;
  catch `java.lang.Throwable` @[L3c7d0c..L3c7d2e] goto L3c7d36;
  catch `java.lang.Throwable` @[L3c7d58..L3c7d6a] goto L3c7d78;
}
procedure `boolean` `c`(`com.yalantis.ucrop.task.BitmapCropTask` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.c:(II)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c7a28.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3c7a2e.  v3:= temp;
  #L3c7a30.  v3:= (`float`) v3 @kind i2f;
  #L3c7a32.  v4:= 1000.0F;
  #L3c7a36.  v3:= v3 / v4 @kind float;
  #L3c7a38.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3c7a3e.  v3:= temp;
  #L3c7a40.  v4:= 1I;
  #L3c7a42.  v3:= v3 + v4 @kind int;
  #L3c7a44.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.g` @type ^`int`;
  #L3c7a48.  if v0 <= 0 then goto L3c7a54;
  #L3c7a4c.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.h` @type ^`int`;
  #L3c7a50.  if v0 > 0 then goto L3c7af0;
  #L3c7a54.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c7a58.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L3c7a5c.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.d` @type ^`android.graphics.RectF` @kind object;
  #L3c7a60.  v1:= v1.`android.graphics.RectF.left` @type ^`float`;
  #L3c7a64.  v0:= v0 - v1 @kind float;
  #L3c7a66.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3c7a6c.  v0:= temp;
  #L3c7a6e.  v3:= (`float`) v3 @kind i2f;
  #L3c7a70.  v0:= fcmpl(v0, v3);
  #L3c7a74.  if v0 > 0 then goto L3c7af0;
  #L3c7a78.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c7a7c.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L3c7a80.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.d` @type ^`android.graphics.RectF` @kind object;
  #L3c7a84.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L3c7a88.  v0:= v0 - v1 @kind float;
  #L3c7a8a.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3c7a90.  v0:= temp;
  #L3c7a92.  v0:= fcmpl(v0, v3);
  #L3c7a96.  if v0 > 0 then goto L3c7af0;
  #L3c7a9a.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c7a9e.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L3c7aa2.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.d` @type ^`android.graphics.RectF` @kind object;
  #L3c7aa6.  v1:= v1.`android.graphics.RectF.bottom` @type ^`float`;
  #L3c7aaa.  v0:= v0 - v1 @kind float;
  #L3c7aac.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3c7ab2.  v0:= temp;
  #L3c7ab4.  v0:= fcmpl(v0, v3);
  #L3c7ab8.  if v0 > 0 then goto L3c7af0;
  #L3c7abc.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.c` @type ^`android.graphics.RectF` @kind object;
  #L3c7ac0.  v0:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L3c7ac4.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.d` @type ^`android.graphics.RectF` @kind object;
  #L3c7ac8.  v1:= v1.`android.graphics.RectF.right` @type ^`float`;
  #L3c7acc.  v0:= v0 - v1 @kind float;
  #L3c7ace.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3c7ad4.  v0:= temp;
  #L3c7ad6.  v3:= fcmpl(v0, v3);
  #L3c7ada.  if v3 > 0 then goto L3c7af0;
  #L3c7ade.  v3:= v2.`com.yalantis.ucrop.task.BitmapCropTask.f` @type ^`float`;
  #L3c7ae2.  v0:= 0I;
  #L3c7ae4.  v3:= fcmpl(v3, v0);
  #L3c7ae8.  if v3 == 0 then goto L3c7aee;
  #L3c7aec.  goto L3c7af0;
  #L3c7aee.  v4:= 0I;
  #L3c7af0.  return v4;
}
procedure `java.lang.Object` `doInBackground`(`com.yalantis.ucrop.task.BitmapCropTask` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3c7b04.  v1:= (`java.lang.Void`[]) v1 @kind object;
  #L3c7b08.  call temp:= `doInBackground`(v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Void;)Ljava/lang/Throwable;` @kind virtual;
  #L3c7b0e.  v1:= temp @kind object;
  #L3c7b10.  return v1 @kind object;
}
procedure `java.lang.Throwable` `doInBackground`(`com.yalantis.ucrop.task.BitmapCropTask` v1 @kind this, `java.lang.Void`[] v2 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Void;)Ljava/lang/Throwable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3c7b24.  v2:= v1.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3c7b28.  if v2 != 0 then goto L3c7b3c;
  #L3c7b2c.  v2:= new `java.lang.NullPointerException`;
  #L3c7b30.  v0:= "ViewBitmap is null" @kind object;
  #L3c7b34.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c7b3a.  return v2 @kind object;
  #L3c7b3c.  call temp:= `isRecycled`(v2) @signature `Landroid/graphics/Bitmap;.isRecycled:()Z` @kind virtual;
  #L3c7b42.  v2:= temp;
  #L3c7b44.  if v2 == 0 then goto L3c7b58;
  #L3c7b48.  v2:= new `java.lang.NullPointerException`;
  #L3c7b4c.  v0:= "ViewBitmap is recycled" @kind object;
  #L3c7b50.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c7b56.  return v2 @kind object;
  #L3c7b58.  v2:= v1.`com.yalantis.ucrop.task.BitmapCropTask.d` @type ^`android.graphics.RectF` @kind object;
  #L3c7b5c.  call temp:= `isEmpty`(v2) @signature `Landroid/graphics/RectF;.isEmpty:()Z` @kind virtual;
  #L3c7b62.  v2:= temp;
  #L3c7b64.  if v2 == 0 then goto L3c7b78;
  #L3c7b68.  v2:= new `java.lang.NullPointerException`;
  #L3c7b6c.  v0:= "CurrentImageRect is empty" @kind object;
  #L3c7b70.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c7b76.  return v2 @kind object;
  #L3c7b78.  call temp:= `a`(v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.a:()Z` @kind direct;
  #L3c7b7e.  v2:= 0I;
  #L3c7b80.  v1.`com.yalantis.ucrop.task.BitmapCropTask.b` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L3c7b84.  return v2 @kind object;
  #L3c7b86.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c7b88.  return v2 @kind object;
  catch `java.lang.Throwable` @[L3c7b78..L3c7b84] goto L3c7b86;
}
procedure `void` `onPostExecute`(`com.yalantis.ucrop.task.BitmapCropTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3c7c5c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L3c7c60.  call `onPostExecute`(v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3c7c66.  return @kind void;
}
procedure `void` `onPostExecute`(`com.yalantis.ucrop.task.BitmapCropTask` v7 @kind this, `java.lang.Throwable` v8 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c7c78.  v0:= v7.`com.yalantis.ucrop.task.BitmapCropTask.n` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` @kind object;
  #L3c7c7c.  if v0 == 0 then goto L3c7cbc;
  #L3c7c80.  if v8 != 0 then goto L3c7cb6;
  #L3c7c84.  v8:= new `java.io.File`;
  #L3c7c88.  v0:= v7.`com.yalantis.ucrop.task.BitmapCropTask.l` @type ^`java.lang.String` @kind object;
  #L3c7c8c.  call `<init>`(v8, v0) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c7c92.  call temp:= `fromFile`(v8) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L3c7c98.  v2:= temp @kind object;
  #L3c7c9a.  v1:= v7.`com.yalantis.ucrop.task.BitmapCropTask.n` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` @kind object;
  #L3c7c9e.  v3:= v7.`com.yalantis.ucrop.task.BitmapCropTask.q` @type ^`int`;
  #L3c7ca2.  v4:= v7.`com.yalantis.ucrop.task.BitmapCropTask.r` @type ^`int`;
  #L3c7ca6.  v5:= v7.`com.yalantis.ucrop.task.BitmapCropTask.o` @type ^`int`;
  #L3c7caa.  v6:= v7.`com.yalantis.ucrop.task.BitmapCropTask.p` @type ^`int`;
  #L3c7cae.  call `onBitmapCropped`(v1, v2, v3, v4, v5, v6) @signature `Lcom/yalantis/ucrop/callback/BitmapCropCallback;.onBitmapCropped:(Landroid/net/Uri;IIII)V` @kind interface;
  #L3c7cb4.  goto L3c7cbc;
  #L3c7cb6.  call `onCropFailure`(v0, v8) @signature `Lcom/yalantis/ucrop/callback/BitmapCropCallback;.onCropFailure:(Ljava/lang/Throwable;)V` @kind interface;
  #L3c7cbc.  return @kind void;
}
