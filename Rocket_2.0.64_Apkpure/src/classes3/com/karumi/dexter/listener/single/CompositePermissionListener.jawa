record `com.karumi.dexter.listener.single.CompositePermissionListener` @kind class @AccessFlag PUBLIC extends `com.karumi.dexter.listener.single.PermissionListener` @kind interface {
  `java.util.Collection` `com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.single.CompositePermissionListener` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:(Ljava/util/Collection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ac6bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ac6c2.  v0.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` := v1 @kind object;
  #L3ac6c6.  return @kind void;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.single.CompositePermissionListener` v0 @kind this, `com.karumi.dexter.listener.single.PermissionListener`[] v1 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:([Lcom/karumi/dexter/listener/single/PermissionListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ac69c.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3ac6a2.  v1:= temp @kind object;
  #L3ac6a4.  call `<init>`(v0, v1) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3ac6aa.  return @kind void;
}
procedure `void` `onPermissionDenied`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionDeniedResponse` v3 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionDenied:(Lcom/karumi/dexter/listener/PermissionDeniedResponse;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ac6d8.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L3ac6dc.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ac6e2.  v0:= temp @kind object;
  #L3ac6e4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ac6ea.  v1:= temp;
  #L3ac6ec.  if v1 == 0 then goto L3ac704;
  #L3ac6f0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ac6f6.  v1:= temp @kind object;
  #L3ac6f8.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L3ac6fc.  call `onPermissionDenied`(v1, v3) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionDenied:(Lcom/karumi/dexter/listener/PermissionDeniedResponse;)V` @kind interface;
  #L3ac702.  goto L3ac6e4;
  #L3ac704.  return @kind void;
}
procedure `void` `onPermissionGranted`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionGrantedResponse` v3 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionGranted:(Lcom/karumi/dexter/listener/PermissionGrantedResponse;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ac718.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L3ac71c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ac722.  v0:= temp @kind object;
  #L3ac724.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ac72a.  v1:= temp;
  #L3ac72c.  if v1 == 0 then goto L3ac744;
  #L3ac730.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ac736.  v1:= temp @kind object;
  #L3ac738.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L3ac73c.  call `onPermissionGranted`(v1, v3) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionGranted:(Lcom/karumi/dexter/listener/PermissionGrantedResponse;)V` @kind interface;
  #L3ac742.  goto L3ac724;
  #L3ac744.  return @kind void;
}
procedure `void` `onPermissionRationaleShouldBeShown`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionRequest` v3 @kind object, `com.karumi.dexter.PermissionToken` v4 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionRationaleShouldBeShown:(Lcom/karumi/dexter/listener/PermissionRequest;Lcom/karumi/dexter/PermissionToken;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ac758.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L3ac75c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ac762.  v0:= temp @kind object;
  #L3ac764.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ac76a.  v1:= temp;
  #L3ac76c.  if v1 == 0 then goto L3ac784;
  #L3ac770.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ac776.  v1:= temp @kind object;
  #L3ac778.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L3ac77c.  call `onPermissionRationaleShouldBeShown`(v1, v3, v4) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionRationaleShouldBeShown:(Lcom/karumi/dexter/listener/PermissionRequest;Lcom/karumi/dexter/PermissionToken;)V` @kind interface;
  #L3ac782.  goto L3ac764;
  #L3ac784.  return @kind void;
}
