record `com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.karumi.dexter.MultiplePermissionListenerThreadDecorator` `com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.karumi.dexter.MultiplePermissionsReport` `com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1.val$report` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1` v0 @kind this, `com.karumi.dexter.MultiplePermissionListenerThreadDecorator` v1 @kind object, `com.karumi.dexter.MultiplePermissionsReport` v2 @kind object) @signature `Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator$1;.<init>:(Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator;Lcom/karumi/dexter/MultiplePermissionsReport;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3aa4b4.  v0.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1.this$0` @type ^`com.karumi.dexter.MultiplePermissionListenerThreadDecorator` := v1 @kind object;
  #L3aa4b8.  v0.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1.val$report` @type ^`com.karumi.dexter.MultiplePermissionsReport` := v2 @kind object;
  #L3aa4bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aa4c2.  return @kind void;
}
procedure `void` `run`(`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1` v2 @kind this) @signature `Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa4d4.  v0:= v2.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1.this$0` @type ^`com.karumi.dexter.MultiplePermissionListenerThreadDecorator` @kind object;
  #L3aa4d8.  call temp:= `access$000`(v0) @signature `Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator;.access$000:(Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator;)Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;` @kind static;
  #L3aa4de.  v0:= temp @kind object;
  #L3aa4e0.  v1:= v2.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1.val$report` @type ^`com.karumi.dexter.MultiplePermissionsReport` @kind object;
  #L3aa4e4.  call `onPermissionsChecked`(v0, v1) @signature `Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;.onPermissionsChecked:(Lcom/karumi/dexter/MultiplePermissionsReport;)V` @kind interface;
  #L3aa4ea.  return @kind void;
}
