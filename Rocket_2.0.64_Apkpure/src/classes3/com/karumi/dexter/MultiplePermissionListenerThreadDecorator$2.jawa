record `com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.karumi.dexter.MultiplePermissionListenerThreadDecorator` `com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.val$permissions` @AccessFlag FINAL_SYNTHETIC;
  `com.karumi.dexter.PermissionToken` `com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.val$token` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2` v0 @kind this, `com.karumi.dexter.MultiplePermissionListenerThreadDecorator` v1 @kind object, `java.util.List` v2 @kind object, `com.karumi.dexter.PermissionToken` v3 @kind object) @signature `Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator$2;.<init>:(Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator;Ljava/util/List;Lcom/karumi/dexter/PermissionToken;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3aa4fc.  v0.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.this$0` @type ^`com.karumi.dexter.MultiplePermissionListenerThreadDecorator` := v1 @kind object;
  #L3aa500.  v0.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.val$permissions` @type ^`java.util.List` := v2 @kind object;
  #L3aa504.  v0.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.val$token` @type ^`com.karumi.dexter.PermissionToken` := v3 @kind object;
  #L3aa508.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aa50e.  return @kind void;
}
procedure `void` `run`(`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2` v3 @kind this) @signature `Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator$2;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa520.  v0:= v3.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.this$0` @type ^`com.karumi.dexter.MultiplePermissionListenerThreadDecorator` @kind object;
  #L3aa524.  call temp:= `access$000`(v0) @signature `Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator;.access$000:(Lcom/karumi/dexter/MultiplePermissionListenerThreadDecorator;)Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;` @kind static;
  #L3aa52a.  v0:= temp @kind object;
  #L3aa52c.  v1:= v3.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.val$permissions` @type ^`java.util.List` @kind object;
  #L3aa530.  v2:= v3.`com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2.val$token` @type ^`com.karumi.dexter.PermissionToken` @kind object;
  #L3aa534.  call `onPermissionRationaleShouldBeShown`(v0, v1, v2) @signature `Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;.onPermissionRationaleShouldBeShown:(Ljava/util/List;Lcom/karumi/dexter/PermissionToken;)V` @kind interface;
  #L3aa53a.  return @kind void;
}
