record `com.karumi.dexter.DexterBuilder` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `check`() @signature `Lcom/karumi/dexter/DexterBuilder;.check:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.karumi.dexter.DexterBuilder` `onSameThread`() @signature `Lcom/karumi/dexter/DexterBuilder;.onSameThread:()Lcom/karumi/dexter/DexterBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.karumi.dexter.DexterBuilder` `withErrorListener`(`com.karumi.dexter.listener.PermissionRequestErrorListener` v0 @kind object) @signature `Lcom/karumi/dexter/DexterBuilder;.withErrorListener:(Lcom/karumi/dexter/listener/PermissionRequestErrorListener;)Lcom/karumi/dexter/DexterBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
