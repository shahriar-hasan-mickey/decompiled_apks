record `com.google.flatbuffers.FlexBuffers$TypedVector` @kind class @AccessFlag PUBLIC extends `com.google.flatbuffers.FlexBuffers$Vector` @kind class {
  `int` `com.google.flatbuffers.FlexBuffers$TypedVector.e` @AccessFlag PRIVATE_FINAL;
}
global `com.google.flatbuffers.FlexBuffers$TypedVector` `@@com.google.flatbuffers.FlexBuffers$TypedVector.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L284f64.  v0:= new `com.google.flatbuffers.FlexBuffers$TypedVector`;
  #L284f68.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers;.a:()Lcom/google/flatbuffers/a;` @kind static;
  #L284f6e.  v1:= temp @kind object;
  #L284f70.  v2:= 1I;
  #L284f72.  call `<init>`(v0, v1, v2, v2, v2) @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.<init>:(Lcom/google/flatbuffers/a;III)V` @kind direct;
  #L284f78.  `@@com.google.flatbuffers.FlexBuffers$TypedVector.f` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` := v0 @kind object;
  #L284f7c.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlexBuffers$TypedVector` v0 @kind this, `com.google.flatbuffers.a` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.<init>:(Lcom/google/flatbuffers/a;III)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L284f90.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L284f96.  v0.`com.google.flatbuffers.FlexBuffers$TypedVector.e` @type ^`int` := v4;
  #L284f9a.  return @kind void;
}
procedure `com.google.flatbuffers.FlexBuffers$TypedVector` `empty`() @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.empty:()Lcom/google/flatbuffers/FlexBuffers$TypedVector;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L284f34.  v0:= `@@com.google.flatbuffers.FlexBuffers$TypedVector.f` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` @kind object;
  #L284f38.  return v0 @kind object;
}
procedure `com.google.flatbuffers.FlexBuffers$Reference` `get`(`com.google.flatbuffers.FlexBuffers$TypedVector` v7 @kind this, `int` v8 ) @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Reference;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L284ee0.  call temp:= `size`(v7) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.size:()I` @kind virtual;
  #L284ee6.  v0:= temp;
  #L284ee8.  if v8 < v0 then goto L284ef6;
  #L284eec.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers$Reference;.a:()Lcom/google/flatbuffers/FlexBuffers$Reference;` @kind static;
  #L284ef2.  v8:= temp @kind object;
  #L284ef4.  return v8 @kind object;
  #L284ef6.  v0:= v7.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L284efa.  v1:= v7.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L284efe.  v8:= v8 * v1 @kind int;
  #L284f02.  v3:= v0 + v8 @kind int;
  #L284f06.  v8:= new `com.google.flatbuffers.FlexBuffers$Reference`;
  #L284f0a.  v2:= v7.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L284f0e.  v4:= v7.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L284f12.  v5:= 1I;
  #L284f14.  v6:= v7.`com.google.flatbuffers.FlexBuffers$TypedVector.e` @type ^`int`;
  #L284f18.  v1:= v8 @kind object;
  #L284f1a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/flatbuffers/FlexBuffers$Reference;.<init>:(Lcom/google/flatbuffers/a;IIII)V` @kind direct;
  #L284f20.  return v8 @kind object;
}
procedure `int` `getElemType`(`com.google.flatbuffers.FlexBuffers$TypedVector` v1 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.getElemType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284f4c.  v0:= v1.`com.google.flatbuffers.FlexBuffers$TypedVector.e` @type ^`int`;
  #L284f50.  return v0;
}
procedure `boolean` `isEmptyVector`(`com.google.flatbuffers.FlexBuffers$TypedVector` v1 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.isEmptyVector:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284ec0.  v0:= `@@com.google.flatbuffers.FlexBuffers$TypedVector.f` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` @kind object;
  #L284ec4.  if v1 != v0 then goto L284ecc;
  #L284ec8.  v0:= 1I;
  #L284eca.  goto L284ece;
  #L284ecc.  v0:= 0I;
  #L284ece.  return v0;
}
