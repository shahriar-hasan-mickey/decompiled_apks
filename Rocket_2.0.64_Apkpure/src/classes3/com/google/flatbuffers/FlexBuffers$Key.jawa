record `com.google.flatbuffers.FlexBuffers$Key` @kind class @AccessFlag PUBLIC extends `com.google.flatbuffers.FlexBuffers$a` @kind class {
}
global `com.google.flatbuffers.FlexBuffers$Key` `@@com.google.flatbuffers.FlexBuffers$Key.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L283f78.  v0:= new `com.google.flatbuffers.FlexBuffers$Key`;
  #L283f7c.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers;.a:()Lcom/google/flatbuffers/a;` @kind static;
  #L283f82.  v1:= temp @kind object;
  #L283f84.  v2:= 0I;
  #L283f86.  call `<init>`(v0, v1, v2, v2) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L283f8c.  `@@com.google.flatbuffers.FlexBuffers$Key.d` @type ^`com.google.flatbuffers.FlexBuffers$Key` := v0 @kind object;
  #L283f90.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlexBuffers$Key` v0 @kind this, `com.google.flatbuffers.a` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.<init>:(Lcom/google/flatbuffers/a;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L283fa4.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$a;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L283faa.  return @kind void;
}
procedure `com.google.flatbuffers.FlexBuffers$Key` `a`() @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.a:()Lcom/google/flatbuffers/FlexBuffers$Key;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L283e84.  v0:= `@@com.google.flatbuffers.FlexBuffers$Key.d` @type ^`com.google.flatbuffers.FlexBuffers$Key` @kind object;
  #L283e88.  return v0 @kind object;
}
procedure `com.google.flatbuffers.FlexBuffers$Key` `empty`() @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.empty:()Lcom/google/flatbuffers/FlexBuffers$Key;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L283e9c.  v0:= `@@com.google.flatbuffers.FlexBuffers$Key.d` @type ^`com.google.flatbuffers.FlexBuffers$Key` @kind object;
  #L283ea0.  return v0 @kind object;
}
procedure `int` `b`(`com.google.flatbuffers.FlexBuffers$Key` v5 @kind this, `byte`[] v6 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.b:([B)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L283eb4.  v0:= v5.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283eb8.  v1:= 0I;
  #L283eba.  v2:= v5.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283ebe.  call temp:= `get`(v2, v0) @signature `Lcom/google/flatbuffers/a;.get:(I)B` @kind interface;
  #L283ec4.  v2:= temp;
  #L283ec6.  v3:= v6[v1] @kind byte;
  #L283eca.  if v2 != 0 then goto L283ed2;
  #L283ece.  v2:= v2 - v3 @kind int;
  #L283ed0.  return v2;
  #L283ed2.  v0:= v0 + 1;
  #L283ed6.  v1:= v1 + 1;
  #L283eda.  v4:= length @variable v6;
  #L283edc.  if v1 != v4 then goto L283ee4;
  #L283ee0.  v2:= v2 - v3 @kind int;
  #L283ee2.  return v2;
  #L283ee4.  if v2 == v3 then goto L283eba;
  #L283ee8.  v2:= v2 - v3 @kind int;
  #L283eea.  return v2;
}
procedure `boolean` `equals`(`com.google.flatbuffers.FlexBuffers$Key` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283e48.  v0:= instanceof @variable v4 @type ^`com.google.flatbuffers.FlexBuffers$Key` @kind boolean;
  #L283e4c.  v1:= 0I;
  #L283e4e.  if v0 != 0 then goto L283e54;
  #L283e52.  return v1;
  #L283e54.  v4:= (`com.google.flatbuffers.FlexBuffers$Key`) v4 @kind object;
  #L283e58.  v0:= v4.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283e5c.  v2:= v3.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283e60.  if v0 != v2 then goto L283e72;
  #L283e64.  v4:= v4.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L283e68.  v0:= v3.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L283e6c.  if v4 != v0 then goto L283e72;
  #L283e70.  v1:= 1I;
  #L283e72.  return v1;
}
procedure `int` `hashCode`(`com.google.flatbuffers.FlexBuffers$Key` v2 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283efc.  v0:= v2.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283f00.  v1:= v2.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L283f04.  v0:= v0 ^~ v1 @kind int;
  #L283f06.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.flatbuffers.FlexBuffers$Key` v3 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283f18.  v0:= v3.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283f1c.  v1:= v3.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283f20.  call temp:= `get`(v1, v0) @signature `Lcom/google/flatbuffers/a;.get:(I)B` @kind interface;
  #L283f26.  v1:= temp;
  #L283f28.  if v1 != 0 then goto L283f40;
  #L283f2c.  v1:= v3.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283f30.  v0:= v0 - v1 @kind int;
  #L283f32.  v2:= v3.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283f36.  call temp:= `getString`(v2, v1, v0) @signature `Lcom/google/flatbuffers/a;.getString:(II)Ljava/lang/String;` @kind interface;
  #L283f3c.  v0:= temp @kind object;
  #L283f3e.  return v0 @kind object;
  #L283f40.  v0:= v0 + 1;
  #L283f44.  goto L283f1c;
}
procedure `java.lang.StringBuilder` `toString`(`com.google.flatbuffers.FlexBuffers$Key` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.toString:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283f58.  call temp:= `toString`(v1) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.toString:()Ljava/lang/String;` @kind virtual;
  #L283f5e.  v0:= temp @kind object;
  #L283f60.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283f66.  return v2 @kind object;
}
