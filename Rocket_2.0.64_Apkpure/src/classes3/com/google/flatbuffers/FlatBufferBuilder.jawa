record `com.google.flatbuffers.FlatBufferBuilder` @kind class @AccessFlag PUBLIC {
  `java.nio.ByteBuffer` `com.google.flatbuffers.FlatBufferBuilder.a` @AccessFlag ;
  `int` `com.google.flatbuffers.FlatBufferBuilder.b` @AccessFlag ;
  `int` `com.google.flatbuffers.FlatBufferBuilder.c` @AccessFlag ;
  `int`[] `com.google.flatbuffers.FlatBufferBuilder.d` @AccessFlag ;
  `int` `com.google.flatbuffers.FlatBufferBuilder.e` @AccessFlag ;
  `boolean` `com.google.flatbuffers.FlatBufferBuilder.f` @AccessFlag ;
  `boolean` `com.google.flatbuffers.FlatBufferBuilder.g` @AccessFlag ;
  `int` `com.google.flatbuffers.FlatBufferBuilder.h` @AccessFlag ;
  `int`[] `com.google.flatbuffers.FlatBufferBuilder.i` @AccessFlag ;
  `int` `com.google.flatbuffers.FlatBufferBuilder.j` @AccessFlag ;
  `int` `com.google.flatbuffers.FlatBufferBuilder.k` @AccessFlag ;
  `boolean` `com.google.flatbuffers.FlatBufferBuilder.l` @AccessFlag ;
  `com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` `com.google.flatbuffers.FlatBufferBuilder.m` @AccessFlag ;
  `com.google.flatbuffers.Utf8` `com.google.flatbuffers.FlatBufferBuilder.n` @AccessFlag FINAL;
}
procedure `void` `<clinit>`() @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L28321c.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L283230.  v0:= 1024I;
  #L283234.  call `<init>`(v1, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(I)V` @kind direct;
  #L28323a.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `int` v4 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L28324c.  v0:= `@@com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory.INSTANCE` @type ^`com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory` @kind object;
  #L283250.  call temp:= `getDefault`() @signature `Lcom/google/flatbuffers/Utf8;.getDefault:()Lcom/google/flatbuffers/Utf8;` @kind static;
  #L283256.  v1:= temp @kind object;
  #L283258.  v2:= 0I;
  #L28325a.  call `<init>`(v3, v4, v0, v2, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(ILcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/Utf8;)V` @kind direct;
  #L283260.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `int` v3 , `com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` v4 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(ILcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L283274.  call temp:= `getDefault`() @signature `Lcom/google/flatbuffers/Utf8;.getDefault:()Lcom/google/flatbuffers/Utf8;` @kind static;
  #L28327a.  v0:= temp @kind object;
  #L28327c.  v1:= 0I;
  #L28327e.  call `<init>`(v2, v3, v4, v1, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(ILcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/Utf8;)V` @kind direct;
  #L283284.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `int` v4 , `com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` v5 @kind object, `java.nio.ByteBuffer` v6 @kind object, `com.google.flatbuffers.Utf8` v7 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(ILcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/Utf8;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L283298.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28329e.  v0:= 1I;
  #L2832a0.  v3.`com.google.flatbuffers.FlatBufferBuilder.c` @type ^`int` := v0;
  #L2832a4.  v1:= 0I;
  #L2832a6.  v3.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] := v1 @kind object;
  #L2832aa.  v1:= 0I;
  #L2832ac.  v3.`com.google.flatbuffers.FlatBufferBuilder.e` @type ^`int` := v1;
  #L2832b0.  v3.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` := v1 @kind boolean;
  #L2832b4.  v3.`com.google.flatbuffers.FlatBufferBuilder.g` @type ^`boolean` := v1 @kind boolean;
  #L2832b8.  v2:= 16I;
  #L2832bc.  v2:= new `int`[v2];
  #L2832c0.  v3.`com.google.flatbuffers.FlatBufferBuilder.i` @type ^`int`[] := v2 @kind object;
  #L2832c4.  v3.`com.google.flatbuffers.FlatBufferBuilder.j` @type ^`int` := v1;
  #L2832c8.  v3.`com.google.flatbuffers.FlatBufferBuilder.k` @type ^`int` := v1;
  #L2832cc.  v3.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` := v1 @kind boolean;
  #L2832d0.  if v4 > 0 then goto L2832d6;
  #L2832d4.  v4:= 1I;
  #L2832d6.  v3.`com.google.flatbuffers.FlatBufferBuilder.m` @type ^`com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` := v5 @kind object;
  #L2832da.  if v6 == 0 then goto L2832f8;
  #L2832de.  v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` := v6 @kind object;
  #L2832e2.  call temp:= `clear`(v6) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L2832e8.  v4:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2832ec.  v5:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L2832f0.  call temp:= `order`(v4, v5) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2832f6.  goto L283304;
  #L2832f8.  call temp:= `newByteBuffer`(v5, v4) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;.newByteBuffer:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2832fe.  v4:= temp @kind object;
  #L283300.  v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` := v4 @kind object;
  #L283304.  v3.`com.google.flatbuffers.FlatBufferBuilder.n` @type ^`com.google.flatbuffers.Utf8` := v7 @kind object;
  #L283308.  v4:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L28330c.  call temp:= `capacity`(v4) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L283312.  v4:= temp;
  #L283314.  v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v4;
  #L283318.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L28332c.  v0:= new `com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory`;
  #L283330.  call `<init>`(v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$HeapByteBufferFactory;.<init>:()V` @kind direct;
  #L283336.  call `<init>`(v1, v2, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;)V` @kind direct;
  #L28333c.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` v4 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L283350.  call temp:= `capacity`(v3) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L283356.  v0:= temp;
  #L283358.  call temp:= `getDefault`() @signature `Lcom/google/flatbuffers/Utf8;.getDefault:()Lcom/google/flatbuffers/Utf8;` @kind static;
  #L28335e.  v1:= temp @kind object;
  #L283360.  call `<init>`(v2, v0, v4, v3, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.<init>:(ILcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/Utf8;)V` @kind direct;
  #L283366.  return @kind void;
}
procedure `java.nio.ByteBuffer` `a`(`java.nio.ByteBuffer` v3 @kind object, `com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` v4 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.a:(Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;)Ljava/nio/ByteBuffer;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2831ac.  call temp:= `capacity`(v3) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L2831b2.  v0:= temp;
  #L2831b4.  v1:= -2.0F;
  #L2831b8.  v1:= v1 ^& v0 @kind int;
  #L2831ba.  if v1 != 0 then goto L2831fa;
  #L2831be.  if v0 != 0 then goto L2831c6;
  #L2831c2.  v1:= 1I;
  #L2831c4.  goto L2831ca;
  #L2831c6.  v1:= v0 ^< 1;
  #L2831ca.  v2:= 0I;
  #L2831cc.  call temp:= `position`(v3, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2831d2.  call temp:= `newByteBuffer`(v4, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;.newByteBuffer:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2831d8.  v4:= temp @kind object;
  #L2831da.  call temp:= `clear`(v4) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L2831e0.  v1:= temp @kind object;
  #L2831e2.  call temp:= `capacity`(v1) @signature `Ljava/nio/Buffer;.capacity:()I` @kind virtual;
  #L2831e8.  v1:= temp;
  #L2831ea.  v1:= v1 - v0 @kind int;
  #L2831ec.  call temp:= `position`(v4, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2831f2.  call temp:= `put`(v4, v3) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2831f8.  return v4 @kind object;
  #L2831fa.  v3:= new `java.lang.AssertionError`;
  #L2831fe.  v4:= "FlatBuffers: cannot grow buffer beyond 2 gigabytes." @kind object;
  #L283202.  call `<init>`(v3, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L283208.  throw v3;
}
procedure `boolean` `isFieldPresent`(`com.google.flatbuffers.Table` v0 @kind object, `int` v1 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.isFieldPresent:(Lcom/google/flatbuffers/Table;I)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L282c00.  call temp:= `__offset`(v0, v1) @signature `Lcom/google/flatbuffers/Table;.__offset:(I)I` @kind virtual;
  #L282c06.  v0:= temp;
  #L282c08.  if v0 == 0 then goto L282c10;
  #L282c0c.  v0:= 1I;
  #L282c0e.  goto L282c12;
  #L282c10.  v0:= 0I;
  #L282c12.  return v0;
}
procedure `void` `Nested`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.Nested:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283378.  call temp:= `offset`(v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @kind virtual;
  #L28337e.  v0:= temp;
  #L283380.  if v2 != v0 then goto L283386;
  #L283384.  return @kind void;
  #L283386.  v2:= new `java.lang.AssertionError`;
  #L28338a.  v0:= "FlatBuffers: struct must be serialized inline." @kind object;
  #L28338e.  call `<init>`(v2, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L283394.  throw v2;
}
procedure `void` `addBoolean`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `boolean` v3 , `boolean` v4 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addBoolean:(IZZ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2833cc.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` @kind boolean;
  #L2833d0.  if v0 != 0 then goto L2833d8;
  #L2833d4.  if v3 == v4 then goto L2833e4;
  #L2833d8.  call `addBoolean`(v1, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addBoolean:(Z)V` @kind virtual;
  #L2833de.  call `slot`(v1, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L2833e4.  return @kind void;
}
procedure `void` `addBoolean`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `boolean` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addBoolean:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2833a8.  v0:= 1I;
  #L2833aa.  v1:= 0I;
  #L2833ac.  call `prep`(v2, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L2833b2.  call `putBoolean`(v2, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putBoolean:(Z)V` @kind virtual;
  #L2833b8.  return @kind void;
}
procedure `void` `addByte`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `byte` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addByte:(B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2833f8.  v0:= 1I;
  #L2833fa.  v1:= 0I;
  #L2833fc.  call `prep`(v2, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L283402.  call `putByte`(v2, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putByte:(B)V` @kind virtual;
  #L283408.  return @kind void;
}
procedure `void` `addByte`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `byte` v3 , `int` v4 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addByte:(IBI)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28341c.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` @kind boolean;
  #L283420.  if v0 != 0 then goto L283428;
  #L283424.  if v3 == v4 then goto L283434;
  #L283428.  call `addByte`(v1, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addByte:(B)V` @kind virtual;
  #L28342e.  call `slot`(v1, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L283434.  return @kind void;
}
procedure `void` `addDouble`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `double` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addDouble:(D)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283448.  v0:= 8I;
  #L28344c.  v1:= 0I;
  #L28344e.  call `prep`(v2, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L283454.  call `putDouble`(v2, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putDouble:(D)V` @kind virtual;
  #L28345a.  return @kind void;
}
procedure `void` `addDouble`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `double` v3 , `double` v5 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addDouble:(IDD)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28346c.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` @kind boolean;
  #L283470.  if v0 != 0 then goto L28347c;
  #L283474.  v0:= dcmpl(v3, v5);
  #L283478.  if v0 == 0 then goto L283488;
  #L28347c.  call `addDouble`(v1, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addDouble:(D)V` @kind virtual;
  #L283482.  call `slot`(v1, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L283488.  return @kind void;
}
procedure `void` `addFloat`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `float` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addFloat:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28349c.  v0:= 4I;
  #L28349e.  v1:= 0I;
  #L2834a0.  call `prep`(v2, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L2834a6.  call `putFloat`(v2, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putFloat:(F)V` @kind virtual;
  #L2834ac.  return @kind void;
}
procedure `void` `addFloat`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `int` v4 , `float` v5 , `double` v6 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addFloat:(IFD)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2834c0.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` @kind boolean;
  #L2834c4.  if v0 != 0 then goto L2834d2;
  #L2834c8.  v0:= (`double`) v5 @kind f2d;
  #L2834ca.  v2:= dcmpl(v0, v6);
  #L2834ce.  if v2 == 0 then goto L2834de;
  #L2834d2.  call `addFloat`(v3, v5) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addFloat:(F)V` @kind virtual;
  #L2834d8.  call `slot`(v3, v4) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L2834de.  return @kind void;
}
procedure `void` `addInt`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `int` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addInt:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2834f0.  v0:= 4I;
  #L2834f2.  v1:= 0I;
  #L2834f4.  call `prep`(v2, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L2834fa.  call `putInt`(v2, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putInt:(I)V` @kind virtual;
  #L283500.  return @kind void;
}
procedure `void` `addInt`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addInt:(III)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283514.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` @kind boolean;
  #L283518.  if v0 != 0 then goto L283520;
  #L28351c.  if v3 == v4 then goto L28352c;
  #L283520.  call `addInt`(v1, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addInt:(I)V` @kind virtual;
  #L283526.  call `slot`(v1, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L28352c.  return @kind void;
}
procedure `void` `addLong`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `long` v3 , `long` v5 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addLong:(IJJ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283540.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` @kind boolean;
  #L283544.  if v0 != 0 then goto L283550;
  #L283548.  v0:= lcmp(v3, v5);
  #L28354c.  if v0 == 0 then goto L28355c;
  #L283550.  call `addLong`(v1, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addLong:(J)V` @kind virtual;
  #L283556.  call `slot`(v1, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L28355c.  return @kind void;
}
procedure `void` `addLong`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `long` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addLong:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283570.  v0:= 8I;
  #L283574.  v1:= 0I;
  #L283576.  call `prep`(v2, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L28357c.  call `putLong`(v2, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putLong:(J)V` @kind virtual;
  #L283582.  return @kind void;
}
procedure `void` `addOffset`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `int` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283594.  v0:= 4I;
  #L283596.  v1:= 0I;
  #L283598.  call `prep`(v2, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L28359e.  call temp:= `offset`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @kind virtual;
  #L2835a4.  v1:= temp;
  #L2835a6.  v1:= v1 - v3 @kind int;
  #L2835a8.  v1:= v1 + v0 @kind int;
  #L2835aa.  call `putInt`(v2, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putInt:(I)V` @kind virtual;
  #L2835b0.  return @kind void;
}
procedure `void` `addOffset`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addOffset:(III)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2835c4.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` @kind boolean;
  #L2835c8.  if v0 != 0 then goto L2835d0;
  #L2835cc.  if v3 == v4 then goto L2835dc;
  #L2835d0.  call `addOffset`(v1, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addOffset:(I)V` @kind virtual;
  #L2835d6.  call `slot`(v1, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L2835dc.  return @kind void;
}
procedure `void` `addShort`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `short` v3 , `int` v4 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addShort:(ISI)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2835f0.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` @kind boolean;
  #L2835f4.  if v0 != 0 then goto L2835fc;
  #L2835f8.  if v3 == v4 then goto L283608;
  #L2835fc.  call `addShort`(v1, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addShort:(S)V` @kind virtual;
  #L283602.  call `slot`(v1, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L283608.  return @kind void;
}
procedure `void` `addShort`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `short` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addShort:(S)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28361c.  v0:= 2I;
  #L28361e.  v1:= 0I;
  #L283620.  call `prep`(v2, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L283626.  call `putShort`(v2, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putShort:(S)V` @kind virtual;
  #L28362c.  return @kind void;
}
procedure `void` `addStruct`(`com.google.flatbuffers.FlatBufferBuilder` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addStruct:(III)V` @AccessFlag PUBLIC {
    temp;

  #L283640.  if v2 == v3 then goto L283650;
  #L283644.  call `Nested`(v0, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.Nested:(I)V` @kind virtual;
  #L28364a.  call `slot`(v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @kind virtual;
  #L283650.  return @kind void;
}
procedure `void` `clear`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283664.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283668.  call temp:= `capacity`(v0) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L28366e.  v0:= temp;
  #L283670.  v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v0;
  #L283674.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283678.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L28367e.  v0:= 1I;
  #L283680.  v3.`com.google.flatbuffers.FlatBufferBuilder.c` @type ^`int` := v0;
  #L283684.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.e` @type ^`int`;
  #L283688.  v1:= 0I;
  #L28368a.  if v0 <= 0 then goto L2836a0;
  #L28368e.  v2:= v3.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] @kind object;
  #L283692.  v0:= v0 + -1;
  #L283696.  v3.`com.google.flatbuffers.FlatBufferBuilder.e` @type ^`int` := v0;
  #L28369a.  v2[v0]:= v1;
  #L28369e.  goto L283684;
  #L2836a0.  v3.`com.google.flatbuffers.FlatBufferBuilder.e` @type ^`int` := v1;
  #L2836a4.  v3.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` := v1 @kind boolean;
  #L2836a8.  v3.`com.google.flatbuffers.FlatBufferBuilder.g` @type ^`boolean` := v1 @kind boolean;
  #L2836ac.  v3.`com.google.flatbuffers.FlatBufferBuilder.h` @type ^`int` := v1;
  #L2836b0.  v3.`com.google.flatbuffers.FlatBufferBuilder.j` @type ^`int` := v1;
  #L2836b4.  v3.`com.google.flatbuffers.FlatBufferBuilder.k` @type ^`int` := v1;
  #L2836b8.  return @kind void;
}
procedure `int` `createByteVector`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createByteVector:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L282d80.  call temp:= `remaining`(v4) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L282d86.  v0:= temp;
  #L282d88.  v1:= 1I;
  #L282d8a.  call `startVector`(v3, v1, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startVector:(III)V` @kind virtual;
  #L282d90.  v1:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282d94.  v2:= v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L282d98.  v2:= v2 - v0 @kind int;
  #L282d9a.  v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v2;
  #L282d9e.  call temp:= `position`(v1, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L282da4.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282da8.  call temp:= `put`(v0, v4) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L282dae.  call temp:= `endVector`(v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.endVector:()I` @kind virtual;
  #L282db4.  v4:= temp;
  #L282db6.  return v4;
}
procedure `int` `createByteVector`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createByteVector:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L282cfc.  v0:= length @variable v4;
  #L282cfe.  v1:= 1I;
  #L282d00.  call `startVector`(v3, v1, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startVector:(III)V` @kind virtual;
  #L282d06.  v1:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282d0a.  v2:= v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L282d0e.  v2:= v2 - v0 @kind int;
  #L282d10.  v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v2;
  #L282d14.  call temp:= `position`(v1, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L282d1a.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282d1e.  call temp:= `put`(v0, v4) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L282d24.  call temp:= `endVector`(v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.endVector:()I` @kind virtual;
  #L282d2a.  v4:= temp;
  #L282d2c.  return v4;
}
procedure `int` `createByteVector`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createByteVector:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L282d40.  v0:= 1I;
  #L282d42.  call `startVector`(v2, v0, v5, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startVector:(III)V` @kind virtual;
  #L282d48.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282d4c.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L282d50.  v1:= v1 - v5 @kind int;
  #L282d52.  v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L282d56.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L282d5c.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282d60.  call temp:= `put`(v0, v3, v4, v5) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L282d66.  call temp:= `endVector`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.endVector:()I` @kind virtual;
  #L282d6c.  v3:= temp;
  #L282d6e.  return v3;
}
procedure `int` `createSortedVectorOfTables`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `com.google.flatbuffers.Table` v2 @kind object, `int`[] v3 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createSortedVectorOfTables:(Lcom/google/flatbuffers/Table;[I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L282dc8.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282dcc.  call `sortTables`(v2, v3, v0) @signature `Lcom/google/flatbuffers/Table;.sortTables:([ILjava/nio/ByteBuffer;)V` @kind virtual;
  #L282dd2.  call temp:= `createVectorOfTables`(v1, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createVectorOfTables:([I)I` @kind virtual;
  #L282dd8.  v2:= temp;
  #L282dda.  return v2;
}
procedure `int` `createString`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `java.lang.CharSequence` v4 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createString:(Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L282dec.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.n` @type ^`com.google.flatbuffers.Utf8` @kind object;
  #L282df0.  call temp:= `encodedLength`(v0, v4) @signature `Lcom/google/flatbuffers/Utf8;.encodedLength:(Ljava/lang/CharSequence;)I` @kind virtual;
  #L282df6.  v0:= temp;
  #L282df8.  v1:= 0I;
  #L282dfa.  call `addByte`(v3, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addByte:(B)V` @kind virtual;
  #L282e00.  v1:= 1I;
  #L282e02.  call `startVector`(v3, v1, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startVector:(III)V` @kind virtual;
  #L282e08.  v1:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282e0c.  v2:= v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L282e10.  v2:= v2 - v0 @kind int;
  #L282e12.  v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v2;
  #L282e16.  call temp:= `position`(v1, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L282e1c.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.n` @type ^`com.google.flatbuffers.Utf8` @kind object;
  #L282e20.  v1:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282e24.  call `encodeUtf8`(v0, v4, v1) @signature `Lcom/google/flatbuffers/Utf8;.encodeUtf8:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L282e2a.  call temp:= `endVector`(v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.endVector:()I` @kind virtual;
  #L282e30.  v4:= temp;
  #L282e32.  return v4;
}
procedure `int` `createString`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createString:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L282e44.  call temp:= `remaining`(v4) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L282e4a.  v0:= temp;
  #L282e4c.  v1:= 0I;
  #L282e4e.  call `addByte`(v3, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addByte:(B)V` @kind virtual;
  #L282e54.  v1:= 1I;
  #L282e56.  call `startVector`(v3, v1, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startVector:(III)V` @kind virtual;
  #L282e5c.  v1:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282e60.  v2:= v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L282e64.  v2:= v2 - v0 @kind int;
  #L282e66.  v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v2;
  #L282e6a.  call temp:= `position`(v1, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L282e70.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282e74.  call temp:= `put`(v0, v4) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L282e7a.  call temp:= `endVector`(v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.endVector:()I` @kind virtual;
  #L282e80.  v4:= temp;
  #L282e82.  return v4;
}
procedure `java.nio.ByteBuffer` `createUnintializedVector`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createUnintializedVector:(III)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283140.  v0:= v2 * v3 @kind int;
  #L283144.  call `startVector`(v1, v2, v3, v4) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startVector:(III)V` @kind virtual;
  #L28314a.  v2:= v1.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L28314e.  v3:= v1.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L283152.  v3:= v3 - v0 @kind int;
  #L283154.  v1.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v3;
  #L283158.  call temp:= `position`(v2, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L28315e.  v2:= v1.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283162.  call temp:= `slice`(v2) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L283168.  v2:= temp @kind object;
  #L28316a.  v3:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L28316e.  call temp:= `order`(v2, v3) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L283174.  v2:= temp @kind object;
  #L283176.  call temp:= `limit`(v2, v0) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L28317c.  return v2 @kind object;
}
procedure `int` `createVectorOfTables`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `int`[] v3 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.createVectorOfTables:([I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L282e94.  call `notNested`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.notNested:()V` @kind virtual;
  #L282e9a.  v0:= length @variable v3;
  #L282e9c.  v1:= 4I;
  #L282e9e.  call `startVector`(v2, v1, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startVector:(III)V` @kind virtual;
  #L282ea4.  v0:= length @variable v3;
  #L282ea6.  v0:= v0 + -1;
  #L282eaa.  if v0 < 0 then goto L282ebe;
  #L282eae.  v1:= v3[v0];
  #L282eb2.  call `addOffset`(v2, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addOffset:(I)V` @kind virtual;
  #L282eb8.  v0:= v0 + -1;
  #L282ebc.  goto L282eaa;
  #L282ebe.  call temp:= `endVector`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.endVector:()I` @kind virtual;
  #L282ec4.  v3:= temp;
  #L282ec6.  return v3;
}
procedure `java.nio.ByteBuffer` `dataBuffer`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.dataBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283190.  call `finished`(v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finished:()V` @kind virtual;
  #L283196.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L28319a.  return v0 @kind object;
}
procedure `int` `endTable`(`com.google.flatbuffers.FlatBufferBuilder` v11 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.endTable:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L282ed8.  v0:= v11.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] @kind object;
  #L282edc.  if v0 == 0 then goto L28306a;
  #L282ee0.  v0:= v11.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` @kind boolean;
  #L282ee4.  if v0 == 0 then goto L28306a;
  #L282ee8.  v0:= 0I;
  #L282eea.  call `addInt`(v11, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addInt:(I)V` @kind virtual;
  #L282ef0.  call temp:= `offset`(v11) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @kind virtual;
  #L282ef6.  v1:= temp;
  #L282ef8.  v2:= v11.`com.google.flatbuffers.FlatBufferBuilder.e` @type ^`int`;
  #L282efc.  v2:= v2 + -1;
  #L282f00.  if v2 < 0 then goto L282f16;
  #L282f04.  v3:= v11.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] @kind object;
  #L282f08.  v3:= v3[v2];
  #L282f0c.  if v3 != 0 then goto L282f16;
  #L282f10.  v2:= v2 + -1;
  #L282f14.  goto L282f00;
  #L282f16.  v3:= v2 + 1;
  #L282f1a.  if v2 < 0 then goto L282f44;
  #L282f1e.  v4:= v11.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] @kind object;
  #L282f22.  v5:= v4[v2];
  #L282f26.  if v5 == 0 then goto L282f34;
  #L282f2a.  v4:= v4[v2];
  #L282f2e.  v4:= v1 - v4 @kind int;
  #L282f32.  goto L282f36;
  #L282f34.  v4:= 0I;
  #L282f36.  v4:= (`short`) v4 @kind i2s;
  #L282f38.  call `addShort`(v11, v4) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addShort:(S)V` @kind virtual;
  #L282f3e.  v2:= v2 + -1;
  #L282f42.  goto L282f1a;
  #L282f44.  v2:= v11.`com.google.flatbuffers.FlatBufferBuilder.h` @type ^`int`;
  #L282f48.  v2:= v1 - v2 @kind int;
  #L282f4c.  v2:= (`short`) v2 @kind i2s;
  #L282f4e.  call `addShort`(v11, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addShort:(S)V` @kind virtual;
  #L282f54.  v2:= 2I;
  #L282f56.  v3:= v3 + v2 @kind int;
  #L282f58.  v3:= v3 * 2;
  #L282f5c.  v3:= (`short`) v3 @kind i2s;
  #L282f5e.  call `addShort`(v11, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addShort:(S)V` @kind virtual;
  #L282f64.  v3:= 0I;
  #L282f66.  v4:= v11.`com.google.flatbuffers.FlatBufferBuilder.j` @type ^`int`;
  #L282f6a.  if v3 >= v4 then goto L282fe6;
  #L282f6e.  v4:= v11.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282f72.  call temp:= `capacity`(v4) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L282f78.  v4:= temp;
  #L282f7a.  v5:= v11.`com.google.flatbuffers.FlatBufferBuilder.i` @type ^`int`[] @kind object;
  #L282f7e.  v5:= v5[v3];
  #L282f82.  v4:= v4 - v5 @kind int;
  #L282f84.  v5:= v11.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L282f88.  v6:= v11.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282f8c.  call temp:= `getShort`(v6, v4) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L282f92.  v6:= temp;
  #L282f94.  v7:= v11.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282f98.  call temp:= `getShort`(v7, v5) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L282f9e.  v7:= temp;
  #L282fa0.  if v6 != v7 then goto L282fe0;
  #L282fa4.  v7:= 2I;
  #L282fa6.  if v7 >= v6 then goto L282fd6;
  #L282faa.  v8:= v11.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282fae.  v9:= v4 + v7 @kind int;
  #L282fb2.  call temp:= `getShort`(v8, v9) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L282fb8.  v8:= temp;
  #L282fba.  v9:= v11.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282fbe.  v10:= v5 + v7 @kind int;
  #L282fc2.  call temp:= `getShort`(v9, v10) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L282fc8.  v9:= temp;
  #L282fca.  if v8 == v9 then goto L282fd0;
  #L282fce.  goto L282fe0;
  #L282fd0.  v7:= v7 + 2;
  #L282fd4.  goto L282fa6;
  #L282fd6.  v4:= v11.`com.google.flatbuffers.FlatBufferBuilder.i` @type ^`int`[] @kind object;
  #L282fda.  v3:= v4[v3];
  #L282fde.  goto L282fe8;
  #L282fe0.  v3:= v3 + 1;
  #L282fe4.  goto L282f66;
  #L282fe6.  v3:= 0I;
  #L282fe8.  if v3 == 0 then goto L28300c;
  #L282fec.  v2:= v11.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282ff0.  call temp:= `capacity`(v2) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L282ff6.  v2:= temp;
  #L282ff8.  v2:= v2 - v1 @kind int;
  #L282ffa.  v11.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v2;
  #L282ffe.  v4:= v11.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283002.  v3:= v3 - v1 @kind int;
  #L283004.  call temp:= `putInt`(v4, v2, v3) @signature `Ljava/nio/ByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;` @kind virtual;
  #L28300a.  goto L283064;
  #L28300c.  v3:= v11.`com.google.flatbuffers.FlatBufferBuilder.j` @type ^`int`;
  #L283010.  v4:= v11.`com.google.flatbuffers.FlatBufferBuilder.i` @type ^`int`[] @kind object;
  #L283014.  v5:= length @variable v4;
  #L283016.  if v3 != v5 then goto L28302a;
  #L28301a.  v3:= v3 * 2;
  #L28301e.  call temp:= `copyOf`(v4, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L283024.  v2:= temp @kind object;
  #L283026.  v11.`com.google.flatbuffers.FlatBufferBuilder.i` @type ^`int`[] := v2 @kind object;
  #L28302a.  v2:= v11.`com.google.flatbuffers.FlatBufferBuilder.i` @type ^`int`[] @kind object;
  #L28302e.  v3:= v11.`com.google.flatbuffers.FlatBufferBuilder.j` @type ^`int`;
  #L283032.  v4:= v3 + 1;
  #L283036.  v11.`com.google.flatbuffers.FlatBufferBuilder.j` @type ^`int` := v4;
  #L28303a.  call temp:= `offset`(v11) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @kind virtual;
  #L283040.  v4:= temp;
  #L283042.  v2[v3]:= v4;
  #L283046.  v2:= v11.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L28304a.  call temp:= `capacity`(v2) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L283050.  v3:= temp;
  #L283052.  v3:= v3 - v1 @kind int;
  #L283054.  call temp:= `offset`(v11) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @kind virtual;
  #L28305a.  v4:= temp;
  #L28305c.  v4:= v4 - v1 @kind int;
  #L28305e.  call temp:= `putInt`(v2, v3, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;` @kind virtual;
  #L283064.  v11.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` := v0 @kind boolean;
  #L283068.  return v1;
  #L28306a.  v0:= new `java.lang.AssertionError`;
  #L28306e.  v1:= "FlatBuffers: endTable called without startTable" @kind object;
  #L283072.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L283078.  throw v0;
}
procedure `int` `endVector`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.endVector:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28308c.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` @kind boolean;
  #L283090.  if v0 == 0 then goto L2830ae;
  #L283094.  v0:= 0I;
  #L283096.  v2.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` := v0 @kind boolean;
  #L28309a.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.k` @type ^`int`;
  #L28309e.  call `putInt`(v2, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putInt:(I)V` @kind virtual;
  #L2830a4.  call temp:= `offset`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @kind virtual;
  #L2830aa.  v0:= temp;
  #L2830ac.  return v0;
  #L2830ae.  v0:= new `java.lang.AssertionError`;
  #L2830b2.  v1:= "FlatBuffers: endVector called without startVector" @kind object;
  #L2830b6.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2830bc.  throw v0;
}
procedure `void` `finish`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2836cc.  v0:= 0I;
  #L2836ce.  call `finish`(v1, v2, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(IZ)V` @kind virtual;
  #L2836d4.  return @kind void;
}
procedure `void` `finish`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(ILjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283748.  v0:= 0I;
  #L28374a.  call `finish`(v1, v2, v3, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(ILjava/lang/String;Z)V` @kind virtual;
  #L283750.  return @kind void;
}
procedure `void` `finish`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `int` v4 , `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(ILjava/lang/String;Z)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L283764.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.c` @type ^`int`;
  #L283768.  v1:= 4I;
  #L28376a.  if v6 == 0 then goto L283772;
  #L28376e.  v2:= 4I;
  #L283770.  goto L283774;
  #L283772.  v2:= 0I;
  #L283774.  v2:= v2 + 8;
  #L283778.  call `prep`(v3, v0, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L28377e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L283784.  v0:= temp;
  #L283786.  if v0 != v1 then goto L2837ae;
  #L28378a.  v0:= 3I;
  #L28378c.  if v0 < 0 then goto L2837a6;
  #L283790.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L283796.  v1:= temp;
  #L283798.  v1:= (`byte`) v1 @kind i2b;
  #L28379a.  call `addByte`(v3, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addByte:(B)V` @kind virtual;
  #L2837a0.  v0:= v0 + -1;
  #L2837a4.  goto L28378c;
  #L2837a6.  call `finish`(v3, v4, v6) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(IZ)V` @kind virtual;
  #L2837ac.  return @kind void;
  #L2837ae.  v4:= new `java.lang.AssertionError`;
  #L2837b2.  v5:= "FlatBuffers: file identifier must be length 4" @kind object;
  #L2837b6.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2837bc.  throw v4;
}
procedure `void` `finish`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this, `int` v4 , `boolean` v5 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(IZ)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2836e8.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.c` @type ^`int`;
  #L2836ec.  v1:= 4I;
  #L2836ee.  if v5 == 0 then goto L2836f6;
  #L2836f2.  v2:= 4I;
  #L2836f4.  goto L2836f8;
  #L2836f6.  v2:= 0I;
  #L2836f8.  v2:= v2 + v1 @kind int;
  #L2836fa.  call `prep`(v3, v0, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L283700.  call `addOffset`(v3, v4) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addOffset:(I)V` @kind virtual;
  #L283706.  if v5 == 0 then goto L283722;
  #L28370a.  v4:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L28370e.  call temp:= `capacity`(v4) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L283714.  v4:= temp;
  #L283716.  v5:= v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L28371a.  v4:= v4 - v5 @kind int;
  #L28371c.  call `addInt`(v3, v4) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.addInt:(I)V` @kind virtual;
  #L283722.  v4:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283726.  v5:= v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L28372a.  call temp:= `position`(v4, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L283730.  v4:= 1I;
  #L283732.  v3.`com.google.flatbuffers.FlatBufferBuilder.g` @type ^`boolean` := v4 @kind boolean;
  #L283736.  return @kind void;
}
procedure `void` `finishSizePrefixed`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finishSizePrefixed:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2837d0.  v0:= 1I;
  #L2837d2.  call `finish`(v1, v2, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(IZ)V` @kind virtual;
  #L2837d8.  return @kind void;
}
procedure `void` `finishSizePrefixed`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finishSizePrefixed:(ILjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2837ec.  v0:= 1I;
  #L2837ee.  call `finish`(v1, v2, v3, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finish:(ILjava/lang/String;Z)V` @kind virtual;
  #L2837f4.  return @kind void;
}
procedure `void` `finished`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finished:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283808.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.g` @type ^`boolean` @kind boolean;
  #L28380c.  if v0 == 0 then goto L283812;
  #L283810.  return @kind void;
  #L283812.  v0:= new `java.lang.AssertionError`;
  #L283816.  v1:= "FlatBuffers: you can only access the serialized buffer after it has been finished by FlatBufferBuilder.finish()." @kind object;
  #L28381a.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L283820.  throw v0;
}
procedure `com.google.flatbuffers.FlatBufferBuilder` `forceDefaults`(`com.google.flatbuffers.FlatBufferBuilder` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.forceDefaults:(Z)Lcom/google/flatbuffers/FlatBufferBuilder;` @AccessFlag PUBLIC {
    temp;

  #L282c84.  v0.`com.google.flatbuffers.FlatBufferBuilder.l` @type ^`boolean` := v1 @kind boolean;
  #L282c88.  return v0 @kind object;
}
procedure `com.google.flatbuffers.FlatBufferBuilder` `init`(`com.google.flatbuffers.FlatBufferBuilder` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` v2 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.init:(Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;)Lcom/google/flatbuffers/FlatBufferBuilder;` @AccessFlag PUBLIC {
    temp;

  #L282c9c.  v0.`com.google.flatbuffers.FlatBufferBuilder.m` @type ^`com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` := v2 @kind object;
  #L282ca0.  v0.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L282ca4.  call temp:= `clear`(v1) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L282caa.  v1:= v0.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282cae.  v2:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L282cb2.  call temp:= `order`(v1, v2) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L282cb8.  v1:= 1I;
  #L282cba.  v0.`com.google.flatbuffers.FlatBufferBuilder.c` @type ^`int` := v1;
  #L282cbe.  v1:= v0.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282cc2.  call temp:= `capacity`(v1) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L282cc8.  v1:= temp;
  #L282cca.  v0.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L282cce.  v1:= 0I;
  #L282cd0.  v0.`com.google.flatbuffers.FlatBufferBuilder.e` @type ^`int` := v1;
  #L282cd4.  v0.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` := v1 @kind boolean;
  #L282cd8.  v0.`com.google.flatbuffers.FlatBufferBuilder.g` @type ^`boolean` := v1 @kind boolean;
  #L282cdc.  v0.`com.google.flatbuffers.FlatBufferBuilder.h` @type ^`int` := v1;
  #L282ce0.  v0.`com.google.flatbuffers.FlatBufferBuilder.j` @type ^`int` := v1;
  #L282ce4.  v0.`com.google.flatbuffers.FlatBufferBuilder.k` @type ^`int` := v1;
  #L282ce8.  return v0 @kind object;
}
procedure `void` `notNested`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.notNested:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283834.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` @kind boolean;
  #L283838.  if v0 != 0 then goto L28383e;
  #L28383c.  return @kind void;
  #L28383e.  v0:= new `java.lang.AssertionError`;
  #L283842.  v1:= "FlatBuffers: object serialization must not be nested." @kind object;
  #L283846.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L28384c.  throw v0;
}
procedure `int` `offset`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2830d0.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2830d4.  call temp:= `capacity`(v0) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L2830da.  v0:= temp;
  #L2830dc.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L2830e0.  v0:= v0 - v1 @kind int;
  #L2830e2.  return v0;
}
procedure `void` `pad`(`com.google.flatbuffers.FlatBufferBuilder` v4 @kind this, `int` v5 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.pad:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L283860.  v0:= 0I;
  #L283862.  v1:= 0I;
  #L283864.  if v1 >= v5 then goto L283884;
  #L283868.  v2:= v4.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L28386c.  v3:= v4.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L283870.  v3:= v3 + -1;
  #L283874.  v4.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v3;
  #L283878.  call temp:= `put`(v2, v3, v0) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L28387e.  v1:= v1 + 1;
  #L283882.  goto L283864;
  #L283884.  return @kind void;
}
procedure `void` `prep`(`com.google.flatbuffers.FlatBufferBuilder` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L283898.  v0:= v4.`com.google.flatbuffers.FlatBufferBuilder.c` @type ^`int`;
  #L28389c.  if v5 <= v0 then goto L2838a4;
  #L2838a0.  v4.`com.google.flatbuffers.FlatBufferBuilder.c` @type ^`int` := v5;
  #L2838a4.  v0:= v4.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2838a8.  call temp:= `capacity`(v0) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L2838ae.  v0:= temp;
  #L2838b0.  v1:= v4.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L2838b4.  v0:= v0 - v1 @kind int;
  #L2838b6.  v0:= v0 + v6 @kind int;
  #L2838b8.  v0:= ~v0 @kind int;
  #L2838ba.  v0:= v0 + 1;
  #L2838be.  v1:= v5 + -1;
  #L2838c2.  v0:= v0 ^& v1 @kind int;
  #L2838c4.  v1:= v4.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L2838c8.  v2:= v0 + v5 @kind int;
  #L2838cc.  v2:= v2 + v6 @kind int;
  #L2838ce.  if v1 >= v2 then goto L28391a;
  #L2838d2.  v1:= v4.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2838d6.  call temp:= `capacity`(v1) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L2838dc.  v1:= temp;
  #L2838de.  v2:= v4.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2838e2.  v3:= v4.`com.google.flatbuffers.FlatBufferBuilder.m` @type ^`com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` @kind object;
  #L2838e6.  call temp:= `a`(v2, v3) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.a:(Ljava/nio/ByteBuffer;Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;)Ljava/nio/ByteBuffer;` @kind static;
  #L2838ec.  v3:= temp @kind object;
  #L2838ee.  v4.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` := v3 @kind object;
  #L2838f2.  if v2 == v3 then goto L283900;
  #L2838f6.  v3:= v4.`com.google.flatbuffers.FlatBufferBuilder.m` @type ^`com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` @kind object;
  #L2838fa.  call `releaseByteBuffer`(v3, v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;.releaseByteBuffer:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L283900.  v2:= v4.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L283904.  v3:= v4.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283908.  call temp:= `capacity`(v3) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L28390e.  v3:= temp;
  #L283910.  v3:= v3 - v1 @kind int;
  #L283912.  v2:= v2 + v3 @kind int;
  #L283914.  v4.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v2;
  #L283918.  goto L2838c4;
  #L28391a.  call `pad`(v4, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.pad:(I)V` @kind virtual;
  #L283920.  return @kind void;
}
procedure `void` `putBoolean`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `boolean` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putBoolean:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283934.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283938.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L28393c.  v1:= v1 + -1;
  #L283940.  v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L283944.  v3:= (`byte`) v3 @kind i2b;
  #L283946.  call temp:= `put`(v0, v1, v3) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L28394c.  return @kind void;
}
procedure `void` `putByte`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `byte` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putByte:(B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283960.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283964.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L283968.  v1:= v1 + -1;
  #L28396c.  v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L283970.  call temp:= `put`(v0, v1, v3) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L283976.  return @kind void;
}
procedure `void` `putDouble`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `double` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putDouble:(D)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283988.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L28398c.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L283990.  v1:= v1 + -8;
  #L283994.  v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L283998.  call temp:= `putDouble`(v0, v1, v3) @signature `Ljava/nio/ByteBuffer;.putDouble:(ID)Ljava/nio/ByteBuffer;` @kind virtual;
  #L28399e.  return @kind void;
}
procedure `void` `putFloat`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `float` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putFloat:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2839b0.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2839b4.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L2839b8.  v1:= v1 + -4;
  #L2839bc.  v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L2839c0.  call temp:= `putFloat`(v0, v1, v3) @signature `Ljava/nio/ByteBuffer;.putFloat:(IF)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2839c6.  return @kind void;
}
procedure `void` `putInt`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `int` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putInt:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2839d8.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2839dc.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L2839e0.  v1:= v1 + -4;
  #L2839e4.  v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L2839e8.  call temp:= `putInt`(v0, v1, v3) @signature `Ljava/nio/ByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2839ee.  return @kind void;
}
procedure `void` `putLong`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `long` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putLong:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283a00.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283a04.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L283a08.  v1:= v1 + -8;
  #L283a0c.  v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L283a10.  call temp:= `putLong`(v0, v1, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;` @kind virtual;
  #L283a16.  return @kind void;
}
procedure `void` `putShort`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `short` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.putShort:(S)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283a28.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283a2c.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L283a30.  v1:= v1 + -2;
  #L283a34.  v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int` := v1;
  #L283a38.  call temp:= `putShort`(v0, v1, v3) @signature `Ljava/nio/ByteBuffer;.putShort:(IS)Ljava/nio/ByteBuffer;` @kind virtual;
  #L283a3e.  return @kind void;
}
procedure `void` `required`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.required:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283a50.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283a54.  call temp:= `capacity`(v0) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L283a5a.  v0:= temp;
  #L283a5c.  v0:= v0 - v3 @kind int;
  #L283a5e.  v3:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283a62.  call temp:= `getInt`(v3, v0) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L283a68.  v3:= temp;
  #L283a6a.  v0:= v0 - v3 @kind int;
  #L283a6c.  v3:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283a70.  v0:= v0 + v4 @kind int;
  #L283a72.  call temp:= `getShort`(v3, v0) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L283a78.  v3:= temp;
  #L283a7a.  if v3 == 0 then goto L283a82;
  #L283a7e.  v3:= 1I;
  #L283a80.  goto L283a84;
  #L283a82.  v3:= 0I;
  #L283a84.  if v3 == 0 then goto L283a8a;
  #L283a88.  return @kind void;
  #L283a8a.  v3:= new `java.lang.AssertionError`;
  #L283a8e.  v0:= new `java.lang.StringBuilder`;
  #L283a92.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L283a98.  v1:= "FlatBuffers: field " @kind object;
  #L283a9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283aa2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L283aa8.  v4:= " must be set" @kind object;
  #L283aac.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283ab2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L283ab8.  v4:= temp @kind object;
  #L283aba.  call `<init>`(v3, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L283ac0.  throw v3;
}
procedure `byte`[] `sizedByteArray`(`com.google.flatbuffers.FlatBufferBuilder` v3 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.sizedByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L282c24.  v0:= v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L282c28.  v1:= v3.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282c2c.  call temp:= `capacity`(v1) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L282c32.  v1:= temp;
  #L282c34.  v2:= v3.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L282c38.  v1:= v1 - v2 @kind int;
  #L282c3a.  call temp:= `sizedByteArray`(v3, v0, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.sizedByteArray:(II)[B` @kind virtual;
  #L282c40.  v0:= temp @kind object;
  #L282c42.  return v0 @kind object;
}
procedure `byte`[] `sizedByteArray`(`com.google.flatbuffers.FlatBufferBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.sizedByteArray:(II)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L282c54.  call `finished`(v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finished:()V` @kind virtual;
  #L282c5a.  v3:= new `byte`[v3];
  #L282c5e.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282c62.  call temp:= `position`(v0, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L282c68.  v2:= v1.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282c6c.  call temp:= `get`(v2, v3) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L282c72.  return v3 @kind object;
}
procedure `java.io.InputStream` `sizedInputStream`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.sizedInputStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2830f4.  call `finished`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.finished:()V` @kind virtual;
  #L2830fa.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2830fe.  call temp:= `duplicate`(v0) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L283104.  v0:= temp @kind object;
  #L283106.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.b` @type ^`int`;
  #L28310a.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L283110.  v1:= v2.`com.google.flatbuffers.FlatBufferBuilder.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L283114.  call temp:= `capacity`(v1) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L28311a.  v1:= temp;
  #L28311c.  call temp:= `limit`(v0, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L283122.  v1:= new `com.google.flatbuffers.FlatBufferBuilder$a`;
  #L283126.  call `<init>`(v1, v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$a;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L28312c.  return v1 @kind object;
}
procedure `void` `slot`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `int` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.slot:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283ad4.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] @kind object;
  #L283ad8.  call temp:= `offset`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @kind virtual;
  #L283ade.  v1:= temp;
  #L283ae0.  v0[v3]:= v1;
  #L283ae4.  return @kind void;
}
procedure `void` `startTable`(`com.google.flatbuffers.FlatBufferBuilder` v2 @kind this, `int` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startTable:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283af8.  call `notNested`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.notNested:()V` @kind virtual;
  #L283afe.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] @kind object;
  #L283b02.  if v0 == 0 then goto L283b0c;
  #L283b06.  v0:= length @variable v0;
  #L283b08.  if v0 >= v3 then goto L283b14;
  #L283b0c.  v0:= new `int`[v3];
  #L283b10.  v2.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] := v0 @kind object;
  #L283b14.  v2.`com.google.flatbuffers.FlatBufferBuilder.e` @type ^`int` := v3;
  #L283b18.  v0:= v2.`com.google.flatbuffers.FlatBufferBuilder.d` @type ^`int`[] @kind object;
  #L283b1c.  v1:= 0I;
  #L283b1e.  call `fill`(v0, v1, v3, v1) @signature `Ljava/util/Arrays;.fill:([IIII)V` @kind static;
  #L283b24.  v3:= 1I;
  #L283b26.  v2.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` := v3 @kind boolean;
  #L283b2a.  call temp:= `offset`(v2) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.offset:()I` @kind virtual;
  #L283b30.  v3:= temp;
  #L283b32.  v2.`com.google.flatbuffers.FlatBufferBuilder.h` @type ^`int` := v3;
  #L283b36.  return @kind void;
}
procedure `void` `startVector`(`com.google.flatbuffers.FlatBufferBuilder` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.startVector:(III)V` @AccessFlag PUBLIC {
    temp;

  #L283b48.  call `notNested`(v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.notNested:()V` @kind virtual;
  #L283b4e.  v0.`com.google.flatbuffers.FlatBufferBuilder.k` @type ^`int` := v2;
  #L283b52.  v1:= v1 * v2 @kind int;
  #L283b56.  v2:= 4I;
  #L283b58.  call `prep`(v0, v2, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L283b5e.  call `prep`(v0, v3, v1) @signature `Lcom/google/flatbuffers/FlatBufferBuilder;.prep:(II)V` @kind virtual;
  #L283b64.  v1:= 1I;
  #L283b66.  v0.`com.google.flatbuffers.FlatBufferBuilder.f` @type ^`boolean` := v1 @kind boolean;
  #L283b6a.  return @kind void;
}
