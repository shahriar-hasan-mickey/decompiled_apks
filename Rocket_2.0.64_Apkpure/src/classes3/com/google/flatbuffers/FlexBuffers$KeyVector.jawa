record `com.google.flatbuffers.FlexBuffers$KeyVector` @kind class @AccessFlag PUBLIC {
  `com.google.flatbuffers.FlexBuffers$TypedVector` `com.google.flatbuffers.FlexBuffers$KeyVector.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlexBuffers$KeyVector` v0 @kind this, `com.google.flatbuffers.FlexBuffers$TypedVector` v1 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.<init>:(Lcom/google/flatbuffers/FlexBuffers$TypedVector;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L283e2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L283e32.  v0.`com.google.flatbuffers.FlexBuffers$KeyVector.a` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` := v1 @kind object;
  #L283e36.  return @kind void;
}
procedure `com.google.flatbuffers.FlexBuffers$Key` `get`(`com.google.flatbuffers.FlexBuffers$KeyVector` v3 @kind this, `int` v4 ) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Key;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283d30.  call temp:= `size`(v3) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.size:()I` @kind virtual;
  #L283d36.  v0:= temp;
  #L283d38.  if v4 < v0 then goto L283d46;
  #L283d3c.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.a:()Lcom/google/flatbuffers/FlexBuffers$Key;` @kind static;
  #L283d42.  v4:= temp @kind object;
  #L283d44.  return v4 @kind object;
  #L283d46.  v0:= v3.`com.google.flatbuffers.FlexBuffers$KeyVector.a` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` @kind object;
  #L283d4a.  v1:= v0.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283d4e.  v0:= v0.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L283d52.  v4:= v4 * v0 @kind int;
  #L283d56.  v1:= v1 + v4 @kind int;
  #L283d58.  v4:= new `com.google.flatbuffers.FlexBuffers$Key`;
  #L283d5c.  v0:= v3.`com.google.flatbuffers.FlexBuffers$KeyVector.a` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` @kind object;
  #L283d60.  v2:= v0.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283d64.  v0:= v0.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L283d68.  call temp:= `c`(v2, v1, v0) @signature `Lcom/google/flatbuffers/FlexBuffers;.c:(Lcom/google/flatbuffers/a;II)I` @kind static;
  #L283d6e.  v0:= temp;
  #L283d70.  v1:= 1I;
  #L283d72.  call `<init>`(v4, v2, v0, v1) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L283d78.  return v4 @kind object;
}
procedure `int` `size`(`com.google.flatbuffers.FlexBuffers$KeyVector` v1 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283d8c.  v0:= v1.`com.google.flatbuffers.FlexBuffers$KeyVector.a` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` @kind object;
  #L283d90.  call temp:= `size`(v0) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.size:()I` @kind virtual;
  #L283d96.  v0:= temp;
  #L283d98.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.flatbuffers.FlexBuffers$KeyVector` v3 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283dac.  v0:= new `java.lang.StringBuilder`;
  #L283db0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L283db6.  v1:= 91I;
  #L283dba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L283dc0.  v1:= 0I;
  #L283dc2.  v2:= v3.`com.google.flatbuffers.FlexBuffers$KeyVector.a` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` @kind object;
  #L283dc6.  call temp:= `size`(v2) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.size:()I` @kind virtual;
  #L283dcc.  v2:= temp;
  #L283dce.  if v1 >= v2 then goto L283e08;
  #L283dd2.  v2:= v3.`com.google.flatbuffers.FlexBuffers$KeyVector.a` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` @kind object;
  #L283dd6.  call temp:= `get`(v2, v1) @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Reference;` @kind virtual;
  #L283ddc.  v2:= temp @kind object;
  #L283dde.  call temp:= `b`(v2, v0) @signature `Lcom/google/flatbuffers/FlexBuffers$Reference;.b:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283de4.  v2:= v3.`com.google.flatbuffers.FlexBuffers$KeyVector.a` @type ^`com.google.flatbuffers.FlexBuffers$TypedVector` @kind object;
  #L283de8.  call temp:= `size`(v2) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.size:()I` @kind virtual;
  #L283dee.  v2:= temp;
  #L283df0.  v2:= v2 + -1;
  #L283df4.  if v1 == v2 then goto L283e02;
  #L283df8.  v2:= ", " @kind object;
  #L283dfc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283e02.  v1:= v1 + 1;
  #L283e06.  goto L283dc2;
  #L283e08.  v1:= "]" @kind object;
  #L283e0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283e12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L283e18.  v0:= temp @kind object;
  #L283e1a.  return v0 @kind object;
}
