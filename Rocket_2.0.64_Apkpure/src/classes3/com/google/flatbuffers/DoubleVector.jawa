record `com.google.flatbuffers.DoubleVector` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.flatbuffers.BaseVector` @kind class {
}
procedure `void` `<init>`(`com.google.flatbuffers.DoubleVector` v0 @kind this) @signature `Lcom/google/flatbuffers/DoubleVector;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L282b08.  call `<init>`(v0) @signature `Lcom/google/flatbuffers/BaseVector;.<init>:()V` @kind direct;
  #L282b0e.  return @kind void;
}
procedure `com.google.flatbuffers.DoubleVector` `__assign`(`com.google.flatbuffers.DoubleVector` v1 @kind this, `int` v2 , `java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/google/flatbuffers/DoubleVector;.__assign:(ILjava/nio/ByteBuffer;)Lcom/google/flatbuffers/DoubleVector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L282ac4.  v0:= 8I;
  #L282ac8.  call `__reset`(v1, v2, v0, v3) @signature `Lcom/google/flatbuffers/BaseVector;.__reset:(IILjava/nio/ByteBuffer;)V` @kind virtual;
  #L282ace.  return v1 @kind object;
}
procedure `double` `get`(`com.google.flatbuffers.DoubleVector` v2 @kind this, `int` v3 ) @signature `Lcom/google/flatbuffers/DoubleVector;.get:(I)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L282ae0.  v0:= v2.`com.google.flatbuffers.BaseVector.bb` @type ^`java.nio.ByteBuffer` @kind object;
  #L282ae4.  call temp:= `__element`(v2, v3) @signature `Lcom/google/flatbuffers/BaseVector;.__element:(I)I` @kind virtual;
  #L282aea.  v3:= temp;
  #L282aec.  call temp:= `getDouble`(v0, v3) @signature `Ljava/nio/ByteBuffer;.getDouble:(I)D` @kind virtual;
  #L282af2.  v0:= temp @kind wide;
  #L282af4.  return v0 @kind wide;
}
