record `com.google.flatbuffers.FlexBuffers$Blob` @kind class @AccessFlag PUBLIC extends `com.google.flatbuffers.FlexBuffers$b` @kind class {
}
global `com.google.flatbuffers.FlexBuffers$Blob` `@@com.google.flatbuffers.FlexBuffers$Blob.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L283cd4.  v0:= new `com.google.flatbuffers.FlexBuffers$Blob`;
  #L283cd8.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers;.a:()Lcom/google/flatbuffers/a;` @kind static;
  #L283cde.  v1:= temp @kind object;
  #L283ce0.  v2:= 1I;
  #L283ce2.  call `<init>`(v0, v1, v2, v2) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L283ce8.  `@@com.google.flatbuffers.FlexBuffers$Blob.d` @type ^`com.google.flatbuffers.FlexBuffers$Blob` := v0 @kind object;
  #L283cec.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlexBuffers$Blob` v0 @kind this, `com.google.flatbuffers.a` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.<init>:(Lcom/google/flatbuffers/a;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L283d00.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$b;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L283d06.  return @kind void;
}
procedure `com.google.flatbuffers.FlexBuffers$Blob` `empty`() @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.empty:()Lcom/google/flatbuffers/FlexBuffers$Blob;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L283be0.  v0:= `@@com.google.flatbuffers.FlexBuffers$Blob.d` @type ^`com.google.flatbuffers.FlexBuffers$Blob` @kind object;
  #L283be4.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `data`(`com.google.flatbuffers.FlexBuffers$Blob` v3 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.data:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283c80.  v0:= v3.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283c84.  call temp:= `data`(v0) @signature `Lcom/google/flatbuffers/a;.data:()[B` @kind interface;
  #L283c8a.  v0:= temp @kind object;
  #L283c8c.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L283c92.  v0:= temp @kind object;
  #L283c94.  v1:= v3.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283c98.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L283c9e.  v1:= v3.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283ca2.  call temp:= `size`(v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.size:()I` @kind virtual;
  #L283ca8.  v2:= temp;
  #L283caa.  v1:= v1 + v2 @kind int;
  #L283cac.  call temp:= `limit`(v0, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L283cb2.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L283cb8.  v0:= temp @kind object;
  #L283cba.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L283cc0.  v0:= temp @kind object;
  #L283cc2.  return v0 @kind object;
}
procedure `byte` `get`(`com.google.flatbuffers.FlexBuffers$Blob` v2 @kind this, `int` v3 ) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.get:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283b7c.  v0:= v2.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283b80.  v1:= v2.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283b84.  v1:= v1 + v3 @kind int;
  #L283b86.  call temp:= `get`(v0, v1) @signature `Lcom/google/flatbuffers/a;.get:(I)B` @kind interface;
  #L283b8c.  v3:= temp;
  #L283b8e.  return v3;
}
procedure `byte`[] `getBytes`(`com.google.flatbuffers.FlexBuffers$Blob` v5 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.getBytes:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L283ba0.  call temp:= `size`(v5) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.size:()I` @kind virtual;
  #L283ba6.  v0:= temp;
  #L283ba8.  v1:= new `byte`[v0];
  #L283bac.  v2:= 0I;
  #L283bae.  if v2 >= v0 then goto L283bce;
  #L283bb2.  v3:= v5.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283bb6.  v4:= v5.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283bba.  v4:= v4 + v2 @kind int;
  #L283bbc.  call temp:= `get`(v3, v4) @signature `Lcom/google/flatbuffers/a;.get:(I)B` @kind interface;
  #L283bc2.  v3:= temp;
  #L283bc4.  v1[v2]:= v3 @kind byte;
  #L283bc8.  v2:= v2 + 1;
  #L283bcc.  goto L283bae;
  #L283bce.  return v1 @kind object;
}
procedure `int` `size`(`com.google.flatbuffers.FlexBuffers$Blob` v1 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.size:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L283bf8.  call temp:= `size`(v1) @signature `Lcom/google/flatbuffers/FlexBuffers$b;.size:()I` @kind super;
  #L283bfe.  v0:= temp;
  #L283c00.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.flatbuffers.FlexBuffers$Blob` v3 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283c14.  v0:= v3.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283c18.  v1:= v3.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283c1c.  call temp:= `size`(v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.size:()I` @kind virtual;
  #L283c22.  v2:= temp;
  #L283c24.  call temp:= `getString`(v0, v1, v2) @signature `Lcom/google/flatbuffers/a;.getString:(II)Ljava/lang/String;` @kind interface;
  #L283c2a.  v0:= temp @kind object;
  #L283c2c.  return v0 @kind object;
}
procedure `java.lang.StringBuilder` `toString`(`com.google.flatbuffers.FlexBuffers$Blob` v4 @kind this, `java.lang.StringBuilder` v5 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.toString:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L283c40.  v0:= 34I;
  #L283c44.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L283c4a.  v1:= v4.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283c4e.  v2:= v4.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283c52.  call temp:= `size`(v4) @signature `Lcom/google/flatbuffers/FlexBuffers$Blob;.size:()I` @kind virtual;
  #L283c58.  v3:= temp;
  #L283c5a.  call temp:= `getString`(v1, v2, v3) @signature `Lcom/google/flatbuffers/a;.getString:(II)Ljava/lang/String;` @kind interface;
  #L283c60.  v1:= temp @kind object;
  #L283c62.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283c68.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L283c6e.  return v5 @kind object;
}
