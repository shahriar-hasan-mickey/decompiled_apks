record `com.google.flatbuffers.IntVector` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.flatbuffers.BaseVector` @kind class {
}
procedure `void` `<init>`(`com.google.flatbuffers.IntVector` v0 @kind this) @signature `Lcom/google/flatbuffers/IntVector;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2867d8.  call `<init>`(v0) @signature `Lcom/google/flatbuffers/BaseVector;.<init>:()V` @kind direct;
  #L2867de.  return @kind void;
}
procedure `com.google.flatbuffers.IntVector` `__assign`(`com.google.flatbuffers.IntVector` v1 @kind this, `int` v2 , `java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/google/flatbuffers/IntVector;.__assign:(ILjava/nio/ByteBuffer;)Lcom/google/flatbuffers/IntVector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28676c.  v0:= 4I;
  #L28676e.  call `__reset`(v1, v2, v0, v3) @signature `Lcom/google/flatbuffers/BaseVector;.__reset:(IILjava/nio/ByteBuffer;)V` @kind virtual;
  #L286774.  return v1 @kind object;
}
procedure `int` `get`(`com.google.flatbuffers.IntVector` v1 @kind this, `int` v2 ) @signature `Lcom/google/flatbuffers/IntVector;.get:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L286788.  v0:= v1.`com.google.flatbuffers.BaseVector.bb` @type ^`java.nio.ByteBuffer` @kind object;
  #L28678c.  call temp:= `__element`(v1, v2) @signature `Lcom/google/flatbuffers/BaseVector;.__element:(I)I` @kind virtual;
  #L286792.  v2:= temp;
  #L286794.  call temp:= `getInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L28679a.  v2:= temp;
  #L28679c.  return v2;
}
procedure `long` `getAsUnsigned`(`com.google.flatbuffers.IntVector` v4 @kind this, `int` v5 ) @signature `Lcom/google/flatbuffers/IntVector;.getAsUnsigned:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2867b0.  call temp:= `get`(v4, v5) @signature `Lcom/google/flatbuffers/IntVector;.get:(I)I` @kind virtual;
  #L2867b6.  v5:= temp;
  #L2867b8.  v0:= (`long`) v5 @kind i2l;
  #L2867ba.  v2:= 4294967295L;
  #L2867c4.  v0:= v0 ^& v2 @kind long;
  #L2867c6.  return v0 @kind wide;
}
