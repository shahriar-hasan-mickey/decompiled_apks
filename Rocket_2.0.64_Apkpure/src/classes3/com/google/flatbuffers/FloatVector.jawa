record `com.google.flatbuffers.FloatVector` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.flatbuffers.BaseVector` @kind class {
}
procedure `void` `<init>`(`com.google.flatbuffers.FloatVector` v0 @kind this) @signature `Lcom/google/flatbuffers/FloatVector;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L286754.  call `<init>`(v0) @signature `Lcom/google/flatbuffers/BaseVector;.<init>:()V` @kind direct;
  #L28675a.  return @kind void;
}
procedure `com.google.flatbuffers.FloatVector` `__assign`(`com.google.flatbuffers.FloatVector` v1 @kind this, `int` v2 , `java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/google/flatbuffers/FloatVector;.__assign:(ILjava/nio/ByteBuffer;)Lcom/google/flatbuffers/FloatVector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L286710.  v0:= 4I;
  #L286712.  call `__reset`(v1, v2, v0, v3) @signature `Lcom/google/flatbuffers/BaseVector;.__reset:(IILjava/nio/ByteBuffer;)V` @kind virtual;
  #L286718.  return v1 @kind object;
}
procedure `float` `get`(`com.google.flatbuffers.FloatVector` v1 @kind this, `int` v2 ) @signature `Lcom/google/flatbuffers/FloatVector;.get:(I)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28672c.  v0:= v1.`com.google.flatbuffers.BaseVector.bb` @type ^`java.nio.ByteBuffer` @kind object;
  #L286730.  call temp:= `__element`(v1, v2) @signature `Lcom/google/flatbuffers/BaseVector;.__element:(I)I` @kind virtual;
  #L286736.  v2:= temp;
  #L286738.  call temp:= `getFloat`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getFloat:(I)F` @kind virtual;
  #L28673e.  v2:= temp;
  #L286740.  return v2;
}
