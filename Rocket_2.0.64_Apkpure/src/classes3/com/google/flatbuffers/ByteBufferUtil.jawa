record `com.google.flatbuffers.ByteBufferUtil` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.google.flatbuffers.ByteBufferUtil` v0 @kind this) @signature `Lcom/google/flatbuffers/ByteBufferUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L282a04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L282a0a.  return @kind void;
}
procedure `int` `getSizePrefix`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/flatbuffers/ByteBufferUtil;.getSizePrefix:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2829b4.  call temp:= `position`(v1) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L2829ba.  v0:= temp;
  #L2829bc.  call temp:= `getInt`(v1, v0) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L2829c2.  v1:= temp;
  #L2829c4.  return v1;
}
procedure `java.nio.ByteBuffer` `removeSizePrefix`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/flatbuffers/ByteBufferUtil;.removeSizePrefix:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2829d8.  call temp:= `duplicate`(v1) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L2829de.  v1:= temp @kind object;
  #L2829e0.  call temp:= `position`(v1) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L2829e6.  v0:= temp;
  #L2829e8.  v0:= v0 + 4;
  #L2829ec.  call temp:= `position`(v1, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2829f2.  return v1 @kind object;
}
