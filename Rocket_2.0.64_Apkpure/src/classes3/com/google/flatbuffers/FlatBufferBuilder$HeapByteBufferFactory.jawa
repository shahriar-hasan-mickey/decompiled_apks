record `com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory` @kind class {
}
global `com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory` `@@com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/flatbuffers/FlatBufferBuilder$HeapByteBufferFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L282bc8.  v0:= new `com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory`;
  #L282bcc.  call `<init>`(v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$HeapByteBufferFactory;.<init>:()V` @kind direct;
  #L282bd2.  `@@com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory.INSTANCE` @type ^`com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory` := v0 @kind object;
  #L282bd6.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory` v0 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$HeapByteBufferFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L282be8.  call `<init>`(v0) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$ByteBufferFactory;.<init>:()V` @kind direct;
  #L282bee.  return @kind void;
}
procedure `java.nio.ByteBuffer` `newByteBuffer`(`com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory` v1 @kind this, `int` v2 ) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$HeapByteBufferFactory;.newByteBuffer:(I)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L282ba0.  call temp:= `allocate`(v2) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L282ba6.  v2:= temp @kind object;
  #L282ba8.  v0:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L282bac.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L282bb2.  v2:= temp @kind object;
  #L282bb4.  return v2 @kind object;
}
