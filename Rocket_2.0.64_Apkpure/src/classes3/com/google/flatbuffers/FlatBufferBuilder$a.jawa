record `com.google.flatbuffers.FlatBufferBuilder$a` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `java.nio.ByteBuffer` `com.google.flatbuffers.FlatBufferBuilder$a.a` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlatBufferBuilder$a` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$a;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L282b58.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L282b5e.  v0.`com.google.flatbuffers.FlatBufferBuilder$a.a` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L282b62.  return @kind void;
}
procedure `int` `read`(`com.google.flatbuffers.FlatBufferBuilder$a` v1 @kind this) @signature `Lcom/google/flatbuffers/FlatBufferBuilder$a;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L282b20.  v0:= v1.`com.google.flatbuffers.FlatBufferBuilder$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L282b24.  call temp:= `get`(v0) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L282b2a.  v0:= temp;
  #L282b2c.  v0:= v0 ^& 255;
  #L282b30.  return v0;
  #L282b32.  v0:= -1I;
  #L282b34.  return v0;
  catch `java.nio.BufferUnderflowException` @[L282b20..L282b2c] goto L282b32;
}
