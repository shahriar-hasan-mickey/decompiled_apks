record `com.google.flatbuffers.FlexBuffers$Map` @kind class @AccessFlag PUBLIC extends `com.google.flatbuffers.FlexBuffers$Vector` @kind class {
}
global `com.google.flatbuffers.FlexBuffers$Map` `@@com.google.flatbuffers.FlexBuffers$Map.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2841b8.  v0:= new `com.google.flatbuffers.FlexBuffers$Map`;
  #L2841bc.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers;.a:()Lcom/google/flatbuffers/a;` @kind static;
  #L2841c2.  v1:= temp @kind object;
  #L2841c4.  v2:= 1I;
  #L2841c6.  call `<init>`(v0, v1, v2, v2) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L2841cc.  `@@com.google.flatbuffers.FlexBuffers$Map.e` @type ^`com.google.flatbuffers.FlexBuffers$Map` := v0 @kind object;
  #L2841d0.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlexBuffers$Map` v0 @kind this, `com.google.flatbuffers.a` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.<init>:(Lcom/google/flatbuffers/a;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2841e4.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L2841ea.  return @kind void;
}
procedure `int` `a`(`com.google.flatbuffers.FlexBuffers$Map` v4 @kind this, `com.google.flatbuffers.FlexBuffers$KeyVector` v5 @kind object, `byte`[] v6 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.a:(Lcom/google/flatbuffers/FlexBuffers$KeyVector;[B)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2840c0.  call temp:= `size`(v5) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.size:()I` @kind virtual;
  #L2840c6.  v0:= temp;
  #L2840c8.  v0:= v0 + -1;
  #L2840cc.  v1:= 0I;
  #L2840ce.  if v1 > v0 then goto L284104;
  #L2840d2.  v2:= v1 + v0 @kind int;
  #L2840d6.  v2:= v2 ^>> 1;
  #L2840da.  call temp:= `get`(v5, v2) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Key;` @kind virtual;
  #L2840e0.  v3:= temp @kind object;
  #L2840e2.  call temp:= `b`(v3, v6) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.b:([B)I` @kind virtual;
  #L2840e8.  v3:= temp;
  #L2840ea.  if v3 >= 0 then goto L2840f6;
  #L2840ee.  v2:= v2 + 1;
  #L2840f2.  v1:= v2;
  #L2840f4.  goto L2840ce;
  #L2840f6.  if v3 <= 0 then goto L284102;
  #L2840fa.  v2:= v2 + -1;
  #L2840fe.  v0:= v2;
  #L284100.  goto L2840ce;
  #L284102.  return v2;
  #L284104.  v1:= v1 + 1;
  #L284108.  v5:= -v1 @kind int;
  #L28410a.  return v5;
}
procedure `com.google.flatbuffers.FlexBuffers$Map` `empty`() @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.empty:()Lcom/google/flatbuffers/FlexBuffers$Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L284014.  v0:= `@@com.google.flatbuffers.FlexBuffers$Map.e` @type ^`com.google.flatbuffers.FlexBuffers$Map` @kind object;
  #L284018.  return v0 @kind object;
}
procedure `com.google.flatbuffers.FlexBuffers$Reference` `get`(`com.google.flatbuffers.FlexBuffers$Map` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.get:(Ljava/lang/String;)Lcom/google/flatbuffers/FlexBuffers$Reference;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284070.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L284074.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L28407a.  v2:= temp @kind object;
  #L28407c.  call temp:= `get`(v1, v2) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.get:([B)Lcom/google/flatbuffers/FlexBuffers$Reference;` @kind virtual;
  #L284082.  v2:= temp @kind object;
  #L284084.  return v2 @kind object;
}
procedure `com.google.flatbuffers.FlexBuffers$Reference` `get`(`com.google.flatbuffers.FlexBuffers$Map` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.get:([B)Lcom/google/flatbuffers/FlexBuffers$Reference;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28402c.  call temp:= `keys`(v2) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.keys:()Lcom/google/flatbuffers/FlexBuffers$KeyVector;` @kind virtual;
  #L284032.  v0:= temp @kind object;
  #L284034.  call temp:= `size`(v0) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.size:()I` @kind virtual;
  #L28403a.  v1:= temp;
  #L28403c.  call temp:= `a`(v2, v0, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.a:(Lcom/google/flatbuffers/FlexBuffers$KeyVector;[B)I` @kind direct;
  #L284042.  v3:= temp;
  #L284044.  if v3 < 0 then goto L284056;
  #L284048.  if v3 >= v1 then goto L284056;
  #L28404c.  call temp:= `get`(v2, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Reference;` @kind virtual;
  #L284052.  v3:= temp @kind object;
  #L284054.  return v3 @kind object;
  #L284056.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers$Reference;.a:()Lcom/google/flatbuffers/FlexBuffers$Reference;` @kind static;
  #L28405c.  v3:= temp @kind object;
  #L28405e.  return v3 @kind object;
}
procedure `com.google.flatbuffers.FlexBuffers$KeyVector` `keys`(`com.google.flatbuffers.FlexBuffers$Map` v7 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.keys:()Lcom/google/flatbuffers/FlexBuffers$KeyVector;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L283fbc.  v0:= v7.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L283fc0.  v1:= v7.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L283fc4.  v1:= v1 * 3;
  #L283fc8.  v0:= v0 - v1 @kind int;
  #L283fca.  v1:= new `com.google.flatbuffers.FlexBuffers$KeyVector`;
  #L283fce.  v2:= new `com.google.flatbuffers.FlexBuffers$TypedVector`;
  #L283fd2.  v3:= v7.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283fd6.  v4:= v7.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L283fda.  call temp:= `c`(v3, v0, v4) @signature `Lcom/google/flatbuffers/FlexBuffers;.c:(Lcom/google/flatbuffers/a;II)I` @kind static;
  #L283fe0.  v4:= temp;
  #L283fe2.  v5:= v7.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L283fe6.  v6:= v7.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L283fea.  v0:= v0 + v6 @kind int;
  #L283fec.  call temp:= `b`(v5, v0, v6) @signature `Lcom/google/flatbuffers/FlexBuffers;.b:(Lcom/google/flatbuffers/a;II)I` @kind static;
  #L283ff2.  v0:= temp;
  #L283ff4.  v5:= 4I;
  #L283ff6.  call `<init>`(v2, v3, v4, v0, v5) @signature `Lcom/google/flatbuffers/FlexBuffers$TypedVector;.<init>:(Lcom/google/flatbuffers/a;III)V` @kind direct;
  #L283ffc.  call `<init>`(v1, v2) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.<init>:(Lcom/google/flatbuffers/FlexBuffers$TypedVector;)V` @kind direct;
  #L284002.  return v1 @kind object;
}
procedure `java.lang.StringBuilder` `toString`(`com.google.flatbuffers.FlexBuffers$Map` v5 @kind this, `java.lang.StringBuilder` v6 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.toString:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28411c.  v0:= "{ " @kind object;
  #L284120.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284126.  call temp:= `keys`(v5) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.keys:()Lcom/google/flatbuffers/FlexBuffers$KeyVector;` @kind virtual;
  #L28412c.  v0:= temp @kind object;
  #L28412e.  call temp:= `size`(v5) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.size:()I` @kind virtual;
  #L284134.  v1:= temp;
  #L284136.  call temp:= `values`(v5) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.values:()Lcom/google/flatbuffers/FlexBuffers$Vector;` @kind virtual;
  #L28413c.  v2:= temp @kind object;
  #L28413e.  v3:= 0I;
  #L284140.  if v3 >= v1 then goto L28419c;
  #L284144.  v4:= 34I;
  #L284148.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28414e.  call temp:= `get`(v0, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$KeyVector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Key;` @kind virtual;
  #L284154.  v4:= temp @kind object;
  #L284156.  call temp:= `toString`(v4) @signature `Lcom/google/flatbuffers/FlexBuffers$Key;.toString:()Ljava/lang/String;` @kind virtual;
  #L28415c.  v4:= temp @kind object;
  #L28415e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284164.  v4:= "\" : " @kind object;
  #L284168.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28416e.  call temp:= `get`(v2, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Reference;` @kind virtual;
  #L284174.  v4:= temp @kind object;
  #L284176.  call temp:= `toString`(v4) @signature `Lcom/google/flatbuffers/FlexBuffers$Reference;.toString:()Ljava/lang/String;` @kind virtual;
  #L28417c.  v4:= temp @kind object;
  #L28417e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284184.  v4:= v1 + -1;
  #L284188.  if v3 == v4 then goto L284196;
  #L28418c.  v4:= ", " @kind object;
  #L284190.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284196.  v3:= v3 + 1;
  #L28419a.  goto L284140;
  #L28419c.  v0:= " }" @kind object;
  #L2841a0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2841a6.  return v6 @kind object;
}
procedure `com.google.flatbuffers.FlexBuffers$Vector` `values`(`com.google.flatbuffers.FlexBuffers$Map` v4 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Map;.values:()Lcom/google/flatbuffers/FlexBuffers$Vector;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L284098.  v0:= new `com.google.flatbuffers.FlexBuffers$Vector`;
  #L28409c.  v1:= v4.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L2840a0.  v2:= v4.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L2840a4.  v3:= v4.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L2840a8.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L2840ae.  return v0 @kind object;
}
