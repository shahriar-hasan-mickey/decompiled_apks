record `com.google.flatbuffers.FlexBuffers$Vector` @kind class @AccessFlag PUBLIC extends `com.google.flatbuffers.FlexBuffers$b` @kind class {
}
global `com.google.flatbuffers.FlexBuffers$Vector` `@@com.google.flatbuffers.FlexBuffers$Vector.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L285148.  v0:= new `com.google.flatbuffers.FlexBuffers$Vector`;
  #L28514c.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers;.a:()Lcom/google/flatbuffers/a;` @kind static;
  #L285152.  v1:= temp @kind object;
  #L285154.  v2:= 1I;
  #L285156.  call `<init>`(v0, v1, v2, v2) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L28515c.  `@@com.google.flatbuffers.FlexBuffers$Vector.d` @type ^`com.google.flatbuffers.FlexBuffers$Vector` := v0 @kind object;
  #L285160.  return @kind void;
}
procedure `void` `<init>`(`com.google.flatbuffers.FlexBuffers$Vector` v0 @kind this, `com.google.flatbuffers.a` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.<init>:(Lcom/google/flatbuffers/a;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L285174.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/flatbuffers/FlexBuffers$b;.<init>:(Lcom/google/flatbuffers/a;II)V` @kind direct;
  #L28517a.  return @kind void;
}
procedure `com.google.flatbuffers.FlexBuffers$Vector` `empty`() @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.empty:()Lcom/google/flatbuffers/FlexBuffers$Vector;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28509c.  v0:= `@@com.google.flatbuffers.FlexBuffers$Vector.d` @type ^`com.google.flatbuffers.FlexBuffers$Vector` @kind object;
  #L2850a0.  return v0 @kind object;
}
procedure `com.google.flatbuffers.FlexBuffers$Reference` `get`(`com.google.flatbuffers.FlexBuffers$Vector` v9 @kind this, `int` v10 ) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Reference;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L285020.  call temp:= `size`(v9) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.size:()I` @kind virtual;
  #L285026.  v0:= temp;
  #L285028.  v0:= (`long`) v0 @kind i2l;
  #L28502a.  v2:= (`long`) v10 @kind i2l;
  #L28502c.  v4:= lcmp(v2, v0);
  #L285030.  if v4 < 0 then goto L28503e;
  #L285034.  call temp:= `a`() @signature `Lcom/google/flatbuffers/FlexBuffers$Reference;.a:()Lcom/google/flatbuffers/FlexBuffers$Reference;` @kind static;
  #L28503a.  v10:= temp @kind object;
  #L28503c.  return v10 @kind object;
  #L28503e.  v4:= v9.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L285042.  v5:= v9.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L285046.  v5:= (`long`) v5 @kind i2l;
  #L285048.  v7:= v9.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L28504c.  v7:= (`long`) v7 @kind i2l;
  #L28504e.  v0:= v0 * v7 @kind long;
  #L285052.  v5:= v5 + v0 @kind long;
  #L285054.  v5:= v5 + v2 @kind long;
  #L285056.  v0:= (`int`) v5 @kind l2i;
  #L285058.  call temp:= `get`(v4, v0) @signature `Lcom/google/flatbuffers/a;.get:(I)B` @kind interface;
  #L28505e.  v0:= temp;
  #L285060.  call temp:= `a`(v0) @signature `Lcom/google/flatbuffers/FlexBuffers$c;.a:(B)I` @kind static;
  #L285066.  v0:= temp;
  #L285068.  v1:= v9.`com.google.flatbuffers.FlexBuffers$a.b` @type ^`int`;
  #L28506c.  v2:= v9.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L285070.  v10:= v10 * v2 @kind int;
  #L285074.  v1:= v1 + v10 @kind int;
  #L285076.  v10:= new `com.google.flatbuffers.FlexBuffers$Reference`;
  #L28507a.  v2:= v9.`com.google.flatbuffers.FlexBuffers$a.a` @type ^`com.google.flatbuffers.a` @kind object;
  #L28507e.  v3:= v9.`com.google.flatbuffers.FlexBuffers$a.c` @type ^`int`;
  #L285082.  call `<init>`(v10, v2, v1, v3, v0) @signature `Lcom/google/flatbuffers/FlexBuffers$Reference;.<init>:(Lcom/google/flatbuffers/a;III)V` @kind direct;
  #L285088.  return v10 @kind object;
}
procedure `boolean` `isEmpty`(`com.google.flatbuffers.FlexBuffers$Vector` v1 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L285000.  v0:= `@@com.google.flatbuffers.FlexBuffers$Vector.d` @type ^`com.google.flatbuffers.FlexBuffers$Vector` @kind object;
  #L285004.  if v1 != v0 then goto L28500c;
  #L285008.  v0:= 1I;
  #L28500a.  goto L28500e;
  #L28500c.  v0:= 0I;
  #L28500e.  return v0;
}
procedure `int` `size`(`com.google.flatbuffers.FlexBuffers$Vector` v1 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.size:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2850b4.  call temp:= `size`(v1) @signature `Lcom/google/flatbuffers/FlexBuffers$b;.size:()I` @kind super;
  #L2850ba.  v0:= temp;
  #L2850bc.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.flatbuffers.FlexBuffers$Vector` v1 @kind this) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2850d0.  call temp:= `toString`(v1) @signature `Lcom/google/flatbuffers/FlexBuffers$a;.toString:()Ljava/lang/String;` @kind super;
  #L2850d6.  v0:= temp @kind object;
  #L2850d8.  return v0 @kind object;
}
procedure `java.lang.StringBuilder` `toString`(`com.google.flatbuffers.FlexBuffers$Vector` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.toString:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2850ec.  v0:= "[ " @kind object;
  #L2850f0.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2850f6.  call temp:= `size`(v3) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.size:()I` @kind virtual;
  #L2850fc.  v0:= temp;
  #L2850fe.  v1:= 0I;
  #L285100.  if v1 >= v0 then goto L28512a;
  #L285104.  call temp:= `get`(v3, v1) @signature `Lcom/google/flatbuffers/FlexBuffers$Vector;.get:(I)Lcom/google/flatbuffers/FlexBuffers$Reference;` @kind virtual;
  #L28510a.  v2:= temp @kind object;
  #L28510c.  call temp:= `b`(v2, v4) @signature `Lcom/google/flatbuffers/FlexBuffers$Reference;.b:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind virtual;
  #L285112.  v2:= v0 + -1;
  #L285116.  if v1 == v2 then goto L285124;
  #L28511a.  v2:= ", " @kind object;
  #L28511e.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L285124.  v1:= v1 + 1;
  #L285128.  goto L285100;
  #L28512a.  v0:= " ]" @kind object;
  #L28512e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L285134.  return v4 @kind object;
}
