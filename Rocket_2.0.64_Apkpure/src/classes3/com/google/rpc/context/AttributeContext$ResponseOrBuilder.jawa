record `com.google.rpc.context.AttributeContext$ResponseOrBuilder` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `com.google.protobuf.MessageLiteOrBuilder` @kind interface {
}
procedure `boolean` `containsHeaders`(`java.lang.String` v0 @kind object) @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.containsHeaders:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getCode`() @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.getCode:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `getHeaders`() @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.getHeaders:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getHeadersCount`() @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.getHeadersCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `getHeadersMap`() @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.getHeadersMap:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getHeadersOrDefault`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.getHeadersOrDefault:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getHeadersOrThrow`(`java.lang.String` v0 @kind object) @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.getHeadersOrThrow:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getSize`() @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.getSize:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.protobuf.Timestamp` `getTime`() @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.getTime:()Lcom/google/protobuf/Timestamp;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasTime`() @signature `Lcom/google/rpc/context/AttributeContext$ResponseOrBuilder;.hasTime:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
