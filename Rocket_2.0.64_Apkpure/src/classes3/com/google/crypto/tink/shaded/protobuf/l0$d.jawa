record `com.google.crypto.tink.shaded.protobuf.l0$d` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `com.google.crypto.tink.shaded.protobuf.l0$c` `com.google.crypto.tink.shaded.protobuf.l0$d.a` @AccessFlag PRIVATE;
  `com.google.crypto.tink.shaded.protobuf.ByteString$h` `com.google.crypto.tink.shaded.protobuf.l0$d.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.l0$d.c` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.l0$d.d` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.l0$d.e` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.l0$d.f` @AccessFlag PRIVATE;
  `com.google.crypto.tink.shaded.protobuf.l0` `com.google.crypto.tink.shaded.protobuf.l0$d.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.l0$d` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.l0` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/l0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d22b8.  v0.`com.google.crypto.tink.shaded.protobuf.l0$d.g` @type ^`com.google.crypto.tink.shaded.protobuf.l0` := v1 @kind object;
  #L1d22bc.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1d22c2.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.b:()V` @kind direct;
  #L1d22c8.  return @kind void;
}
procedure `void` `a`(`com.google.crypto.tink.shaded.protobuf.l0$d` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1d22dc.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind object;
  #L1d22e0.  if v0 == 0 then goto L1d2338;
  #L1d22e4.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L1d22e8.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int`;
  #L1d22ec.  if v0 != v1 then goto L1d2338;
  #L1d22f0.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int`;
  #L1d22f4.  v0:= v0 + v1 @kind int;
  #L1d22f6.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int` := v0;
  #L1d22fa.  v0:= 0I;
  #L1d22fc.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int` := v0;
  #L1d2300.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.a` @type ^`com.google.crypto.tink.shaded.protobuf.l0$c` @kind object;
  #L1d2304.  call temp:= `hasNext`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.hasNext:()Z` @kind virtual;
  #L1d230a.  v1:= temp;
  #L1d230c.  if v1 == 0 then goto L1d232e;
  #L1d2310.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.a` @type ^`com.google.crypto.tink.shaded.protobuf.l0$c` @kind object;
  #L1d2314.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.c:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;` @kind virtual;
  #L1d231a.  v0:= temp @kind object;
  #L1d231c.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` := v0 @kind object;
  #L1d2320.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1d2326.  v0:= temp;
  #L1d2328.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int` := v0;
  #L1d232c.  goto L1d2338;
  #L1d232e.  v1:= 0I;
  #L1d2330.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` := v1 @kind object;
  #L1d2334.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int` := v0;
  #L1d2338.  return @kind void;
}
procedure `void` `b`(`com.google.crypto.tink.shaded.protobuf.l0$d` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1d234c.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0$c`;
  #L1d2350.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.l0$d.g` @type ^`com.google.crypto.tink.shaded.protobuf.l0` @kind object;
  #L1d2354.  v2:= 0I;
  #L1d2356.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/l0$a;)V` @kind direct;
  #L1d235c.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.a` @type ^`com.google.crypto.tink.shaded.protobuf.l0$c` := v0 @kind object;
  #L1d2360.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.c:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;` @kind virtual;
  #L1d2366.  v0:= temp @kind object;
  #L1d2368.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` := v0 @kind object;
  #L1d236c.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1d2372.  v0:= temp;
  #L1d2374.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int` := v0;
  #L1d2378.  v0:= 0I;
  #L1d237a.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int` := v0;
  #L1d237e.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int` := v0;
  #L1d2382.  return @kind void;
}
procedure `int` `c`(`com.google.crypto.tink.shaded.protobuf.l0$d` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.c:([BII)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d220c.  v0:= v7;
  #L1d220e.  if v0 <= 0 then goto L1d2256;
  #L1d2212.  call `a`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.a:()V` @kind direct;
  #L1d2218.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind object;
  #L1d221c.  if v1 != 0 then goto L1d2222;
  #L1d2220.  goto L1d2256;
  #L1d2222.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int`;
  #L1d2226.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L1d222a.  v1:= v1 - v2 @kind int;
  #L1d222c.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1d2232.  v1:= temp;
  #L1d2234.  if v5 == 0 then goto L1d2248;
  #L1d2238.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind object;
  #L1d223c.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L1d2240.  call `copyTo`(v2, v5, v3, v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BIII)V` @kind virtual;
  #L1d2246.  v6:= v6 + v1 @kind int;
  #L1d2248.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L1d224c.  v2:= v2 + v1 @kind int;
  #L1d224e.  v4.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int` := v2;
  #L1d2252.  v0:= v0 - v1 @kind int;
  #L1d2254.  goto L1d220e;
  #L1d2256.  v7:= v7 - v0 @kind int;
  #L1d2258.  return v7;
}
procedure `int` `available`(`com.google.crypto.tink.shaded.protobuf.l0$d` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d2160.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int`;
  #L1d2164.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L1d2168.  v0:= v0 + v1 @kind int;
  #L1d216a.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.g` @type ^`com.google.crypto.tink.shaded.protobuf.l0` @kind object;
  #L1d216e.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.size:()I` @kind virtual;
  #L1d2174.  v1:= temp;
  #L1d2176.  v1:= v1 - v0 @kind int;
  #L1d2178.  return v1;
}
procedure `void` `mark`(`com.google.crypto.tink.shaded.protobuf.l0$d` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d2394.  v2:= v1.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int`;
  #L1d2398.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L1d239c.  v2:= v2 + v0 @kind int;
  #L1d239e.  v1.`com.google.crypto.tink.shaded.protobuf.l0$d.f` @type ^`int` := v2;
  #L1d23a2.  return @kind void;
}
procedure `boolean` `markSupported`(`com.google.crypto.tink.shaded.protobuf.l0$d` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d214c.  v0:= 1I;
  #L1d214e.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.l0$d` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d218c.  call `a`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.a:()V` @kind direct;
  #L1d2192.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind object;
  #L1d2196.  if v0 != 0 then goto L1d219e;
  #L1d219a.  v0:= -1I;
  #L1d219c.  return v0;
  #L1d219e.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L1d21a2.  v2:= v1 + 1;
  #L1d21a6.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int` := v2;
  #L1d21aa.  call temp:= `byteAt`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.byteAt:(I)B` @kind virtual;
  #L1d21b0.  v0:= temp;
  #L1d21b2.  v0:= v0 ^& 255;
  #L1d21b6.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.l0$d` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d21c8.  call temp:= `requireNonNull`(v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1d21ce.  if v3 < 0 then goto L1d21ee;
  #L1d21d2.  if v4 < 0 then goto L1d21ee;
  #L1d21d6.  v0:= length @variable v2;
  #L1d21d8.  v0:= v0 - v3 @kind int;
  #L1d21da.  if v4 > v0 then goto L1d21ee;
  #L1d21de.  call temp:= `c`(v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.c:([BII)I` @kind direct;
  #L1d21e4.  v2:= temp;
  #L1d21e6.  if v2 != 0 then goto L1d21ec;
  #L1d21ea.  v2:= -1I;
  #L1d21ec.  return v2;
  #L1d21ee.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L1d21f2.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L1d21f8.  throw v2;
}
procedure `void` `reset`(`com.google.crypto.tink.shaded.protobuf.l0$d` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d23b4.  @monitorenter v3
  #L1d23b6.  call `b`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.b:()V` @kind direct;
  #L1d23bc.  v0:= 0I;
  #L1d23be.  v1:= 0I;
  #L1d23c0.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.l0$d.f` @type ^`int`;
  #L1d23c4.  call temp:= `c`(v3, v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.c:([BII)I` @kind direct;
  #L1d23ca.  @monitorexit v3
  #L1d23cc.  return @kind void;
  #L1d23ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d23d0.  @monitorexit v3
  #L1d23d2.  throw v0;
  catch `java.lang.Throwable` @[L1d23b6..L1d23ca] goto L1d23ce;
}
procedure `long` `skip`(`com.google.crypto.tink.shaded.protobuf.l0$d` v3 @kind this, `long` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d226c.  v0:= 0L;
  #L1d2270.  v2:= lcmp(v4, v0);
  #L1d2274.  if v2 < 0 then goto L1d229a;
  #L1d2278.  v0:= 2147483647L;
  #L1d227e.  v2:= lcmp(v4, v0);
  #L1d2282.  if v2 <= 0 then goto L1d2288;
  #L1d2286.  v4:= v0 @kind wide;
  #L1d2288.  v0:= 0I;
  #L1d228a.  v1:= 0I;
  #L1d228c.  v5:= (`int`) v4 @kind l2i;
  #L1d228e.  call temp:= `c`(v3, v0, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.c:([BII)I` @kind direct;
  #L1d2294.  v4:= temp;
  #L1d2296.  v4:= (`long`) v4 @kind i2l;
  #L1d2298.  return v4 @kind wide;
  #L1d229a.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L1d229e.  call `<init>`(v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L1d22a4.  throw v4;
}
