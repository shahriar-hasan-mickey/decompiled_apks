record `com.google.crypto.tink.shaded.protobuf.ByteString$i` @kind class @AccessFlag  extends `com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind class {
  `byte`[] `com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @AccessFlag PROTECTED_FINAL;
}
global `long` `@@com.google.crypto.tink.shaded.protobuf.ByteString$i.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1aed18.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.<init>:()V` @kind direct;
  #L1aed1e.  call temp:= `requireNonNull`(v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1aed24.  v0.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] := v1 @kind object;
  #L1aed28.  return @kind void;
}
procedure `java.nio.ByteBuffer` `asReadOnlyByteBuffer`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1aecbc.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aecc0.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aecc6.  v1:= temp;
  #L1aecc8.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aecce.  v2:= temp;
  #L1aecd0.  call temp:= `wrap`(v0, v1, v2) @signature `Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;` @kind static;
  #L1aecd6.  v0:= temp @kind object;
  #L1aecd8.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1aecde.  v0:= temp @kind object;
  #L1aece0.  return v0 @kind object;
}
procedure `java.util.List` `asReadOnlyByteBufferList`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.asReadOnlyByteBufferList:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1aecf4.  call temp:= `asReadOnlyByteBuffer`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1aecfa.  v0:= temp @kind object;
  #L1aecfc.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1aed02.  v0:= temp @kind object;
  #L1aed04.  return v0 @kind object;
}
procedure `byte` `byteAt`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.byteAt:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aeb30.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aeb34.  v2:= v0[v2] @kind byte;
  #L1aeb38.  return v2;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.copyTo:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1aed3c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aed40.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aed46.  v1:= temp;
  #L1aed48.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aed4e.  v2:= temp;
  #L1aed50.  call temp:= `put`(v4, v0, v1, v2) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1aed56.  return @kind void;
}
procedure `void` `copyToInternal`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.copyToInternal:([BIII)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1aed68.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aed6c.  call `arraycopy`(v0, v3, v2, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1aed72.  return @kind void;
}
procedure `byte` `e`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.e:(I)B` @AccessFlag  {
    temp;
    v0;

  #L1aeb4c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aeb50.  v2:= v0[v2] @kind byte;
  #L1aeb54.  return v2;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ae944.  v0:= 1I;
  #L1ae946.  if v5 != v4 then goto L1ae94c;
  #L1ae94a.  return v0;
  #L1ae94c.  v1:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind boolean;
  #L1ae950.  v2:= 0I;
  #L1ae952.  if v1 != 0 then goto L1ae958;
  #L1ae956.  return v2;
  #L1ae958.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1ae95e.  v1:= temp;
  #L1ae960.  v3:= v5 @kind object;
  #L1ae962.  v3:= (`com.google.crypto.tink.shaded.protobuf.ByteString`) v3 @kind object;
  #L1ae966.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1ae96c.  v3:= temp;
  #L1ae96e.  if v1 == v3 then goto L1ae974;
  #L1ae972.  return v2;
  #L1ae974.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1ae97a.  v1:= temp;
  #L1ae97c.  if v1 != 0 then goto L1ae982;
  #L1ae980.  return v0;
  #L1ae982.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$i` @kind boolean;
  #L1ae986.  if v0 == 0 then goto L1ae9be;
  #L1ae98a.  v5:= (`com.google.crypto.tink.shaded.protobuf.ByteString$i`) v5 @kind object;
  #L1ae98e.  call temp:= `peekCachedHashCode`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.peekCachedHashCode:()I` @kind virtual;
  #L1ae994.  v0:= temp;
  #L1ae996.  call temp:= `peekCachedHashCode`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.peekCachedHashCode:()I` @kind virtual;
  #L1ae99c.  v1:= temp;
  #L1ae99e.  if v0 == 0 then goto L1ae9ac;
  #L1ae9a2.  if v1 == 0 then goto L1ae9ac;
  #L1ae9a6.  if v0 == v1 then goto L1ae9ac;
  #L1ae9aa.  return v2;
  #L1ae9ac.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1ae9b2.  v0:= temp;
  #L1ae9b4.  call temp:= `n`(v4, v5, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @kind virtual;
  #L1ae9ba.  v5:= temp;
  #L1ae9bc.  return v5;
  #L1ae9be.  call temp:= `equals`(v5, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ae9c4.  v5:= temp;
  #L1ae9c6.  return v5;
}
procedure `boolean` `isValidUtf8`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.isValidUtf8:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1aeb00.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aeb06.  v0:= temp;
  #L1aeb08.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aeb0c.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aeb12.  v2:= temp;
  #L1aeb14.  v2:= v2 + v0 @kind int;
  #L1aeb16.  call temp:= `u`(v1, v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.u:([BII)Z` @kind static;
  #L1aeb1c.  v0:= temp;
  #L1aeb1e.  return v0;
}
procedure `void` `m`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteOutput` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1aed84.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aed88.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aed8e.  v1:= temp;
  #L1aed90.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aed96.  v2:= temp;
  #L1aed98.  call `writeLazy`(v4, v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;.writeLazy:([BII)V` @kind virtual;
  #L1aed9e.  return @kind void;
}
procedure `boolean` `n`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v5 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ae9d8.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1ae9de.  v0:= temp;
  #L1ae9e0.  if v8 > v0 then goto L1aeab2;
  #L1ae9e4.  v0:= v7 + v8 @kind int;
  #L1ae9e8.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1ae9ee.  v1:= temp;
  #L1ae9f0.  if v0 > v1 then goto L1aea60;
  #L1ae9f4.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$i` @kind boolean;
  #L1ae9f8.  v2:= 0I;
  #L1ae9fa.  if v1 == 0 then goto L1aea46;
  #L1ae9fe.  v6:= (`com.google.crypto.tink.shaded.protobuf.ByteString$i`) v6 @kind object;
  #L1aea02.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aea06.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aea0a.  call temp:= `o`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aea10.  v3:= temp;
  #L1aea12.  v3:= v3 + v8 @kind int;
  #L1aea14.  call temp:= `o`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aea1a.  v8:= temp;
  #L1aea1c.  call temp:= `o`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aea22.  v6:= temp;
  #L1aea24.  v6:= v6 + v7 @kind int;
  #L1aea26.  if v8 >= v3 then goto L1aea42;
  #L1aea2a.  v7:= v0[v8] @kind byte;
  #L1aea2e.  v4:= v1[v6] @kind byte;
  #L1aea32.  if v7 == v4 then goto L1aea38;
  #L1aea36.  return v2;
  #L1aea38.  v8:= v8 + 1;
  #L1aea3c.  v6:= v6 + 1;
  #L1aea40.  goto L1aea26;
  #L1aea42.  v6:= 1I;
  #L1aea44.  return v6;
  #L1aea46.  call temp:= `substring`(v6, v7, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1aea4c.  v6:= temp @kind object;
  #L1aea4e.  call temp:= `substring`(v5, v2, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1aea54.  v7:= temp @kind object;
  #L1aea56.  call temp:= `equals`(v6, v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aea5c.  v6:= temp;
  #L1aea5e.  return v6;
  #L1aea60.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aea64.  v1:= new `java.lang.StringBuilder`;
  #L1aea68.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aea6e.  v2:= "Ran off end of other: " @kind object;
  #L1aea72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aea78.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aea7e.  v7:= ", " @kind object;
  #L1aea82.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aea88.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aea8e.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aea94.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1aea9a.  v6:= temp;
  #L1aea9c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aeaa2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aeaa8.  v6:= temp @kind object;
  #L1aeaaa.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aeab0.  throw v0;
  #L1aeab2.  v6:= new `java.lang.IllegalArgumentException`;
  #L1aeab6.  v7:= new `java.lang.StringBuilder`;
  #L1aeaba.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aeac0.  v0:= "Length too large: " @kind object;
  #L1aeac4.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aeaca.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aead0.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aead6.  v8:= temp;
  #L1aead8.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aeade.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aeae4.  v7:= temp @kind object;
  #L1aeae6.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aeaec.  throw v6;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newCodedInput`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.newCodedInput:()Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aebac.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aebb0.  call temp:= `o`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aebb6.  v1:= temp;
  #L1aebb8.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aebbe.  v2:= temp;
  #L1aebc0.  v3:= 1I;
  #L1aebc2.  call temp:= `c`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1aebc8.  v0:= temp @kind object;
  #L1aebca.  return v0 @kind object;
}
procedure `java.io.InputStream` `newInput`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.newInput:()Ljava/io/InputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aec5c.  v0:= new `java.io.ByteArrayInputStream`;
  #L1aec60.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aec64.  call temp:= `o`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aec6a.  v2:= temp;
  #L1aec6c.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aec72.  v3:= temp;
  #L1aec74.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/io/ByteArrayInputStream;.<init>:([BII)V` @kind direct;
  #L1aec7a.  return v0 @kind object;
}
procedure `int` `o`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1aebdc.  v0:= 0I;
  #L1aebde.  return v0;
}
procedure `int` `partialHash`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.partialHash:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L1aebf0.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aebf4.  call temp:= `o`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aebfa.  v1:= temp;
  #L1aebfc.  v1:= v1 + v4 @kind int;
  #L1aebfe.  call temp:= `e`(v3, v0, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.e:(I[BII)I` @kind static;
  #L1aec04.  v3:= temp;
  #L1aec06.  return v3;
}
procedure `int` `partialIsValidUtf8`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.partialIsValidUtf8:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1aec18.  call temp:= `o`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aec1e.  v0:= temp;
  #L1aec20.  v0:= v0 + v3 @kind int;
  #L1aec22.  v3:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aec26.  v4:= v4 + v0 @kind int;
  #L1aec28.  call temp:= `w`(v2, v3, v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.w:(I[BII)I` @kind static;
  #L1aec2e.  v2:= temp;
  #L1aec30.  return v2;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aec44.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aec48.  v0:= length @variable v0;
  #L1aec4a.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1aeb68.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aeb6e.  v0:= temp;
  #L1aeb70.  call temp:= `d`(v4, v5, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L1aeb76.  v5:= temp;
  #L1aeb78.  if v5 != 0 then goto L1aeb82;
  #L1aeb7c.  v4:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L1aeb80.  return v4 @kind object;
  #L1aeb82.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$e`;
  #L1aeb86.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aeb8a.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aeb90.  v2:= temp;
  #L1aeb92.  v2:= v2 + v4 @kind int;
  #L1aeb94.  call `<init>`(v0, v1, v2, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$e;.<init>:([BII)V` @kind direct;
  #L1aeb9a.  return v0 @kind object;
}
procedure `java.lang.String` `toStringInternal`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aec8c.  v0:= new `java.lang.String`;
  #L1aec90.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L1aec94.  call temp:= `o`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L1aec9a.  v2:= temp;
  #L1aec9c.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L1aeca2.  v3:= temp;
  #L1aeca4.  call `<init>`(v0, v1, v2, v3, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L1aecaa.  return v0 @kind object;
}
procedure `void` `writeTo`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1aedb0.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1aedb6.  v0:= temp @kind object;
  #L1aedb8.  call `write`(v2, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L1aedbe.  return @kind void;
}
