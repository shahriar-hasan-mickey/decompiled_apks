record `com.google.crypto.tink.shaded.protobuf.WireFormat` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_END_GROUP` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_FIXED32` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_FIXED64` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_LENGTH_DELIMITED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_START_GROUP` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_VARINT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.a` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.b` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.c` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1dae98.  v0:= 1I;
  #L1dae9a.  v1:= 3I;
  #L1dae9c.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1daea2.  v2:= temp;
  #L1daea4.  `@@com.google.crypto.tink.shaded.protobuf.WireFormat.a` @type ^`int` := v2;
  #L1daea8.  v2:= 4I;
  #L1daeaa.  call temp:= `a`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1daeb0.  v0:= temp;
  #L1daeb2.  `@@com.google.crypto.tink.shaded.protobuf.WireFormat.b` @type ^`int` := v0;
  #L1daeb6.  v0:= 2I;
  #L1daeb8.  v2:= 0I;
  #L1daeba.  call temp:= `a`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1daec0.  v2:= temp;
  #L1daec2.  `@@com.google.crypto.tink.shaded.protobuf.WireFormat.c` @type ^`int` := v2;
  #L1daec6.  call temp:= `a`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1daecc.  v0:= temp;
  #L1daece.  `@@com.google.crypto.tink.shaded.protobuf.WireFormat.d` @type ^`int` := v0;
  #L1daed2.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.WireFormat` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1daee4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1daeea.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @AccessFlag STATIC {
    temp;

  #L1daccc.  v0:= v0 ^< 3;
  #L1dacd0.  v0:= v0 ^| v1 @kind int;
  #L1dacd2.  return v0;
}
procedure `java.lang.Object` `b`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType` v2 @kind object, `com.google.crypto.tink.shaded.protobuf.WireFormat$b` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.b:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/WireFormat$FieldType;Lcom/google/crypto/tink/shaded/protobuf/WireFormat$b;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L1dace4.  v0:= `@@com.google.crypto.tink.shaded.protobuf.WireFormat$a.a` @type ^`int`[] @kind object;
  #L1dace8.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1dacee.  v2:= temp;
  #L1dacf0.  v2:= v0[v2];
  #L1dacf4.  goto L1dae38;
  #L1dacfa.  v1:= new `java.lang.RuntimeException`;
  #L1dacfe.  v2:= "There is no way to get here, but the compiler thinks otherwise." @kind object;
  #L1dad02.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dad08.  throw v1;
  #L1dad0a.  v1:= new `java.lang.IllegalArgumentException`;
  #L1dad0e.  v2:= "readPrimitiveField() cannot handle enums." @kind object;
  #L1dad12.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dad18.  throw v1;
  #L1dad1a.  v1:= new `java.lang.IllegalArgumentException`;
  #L1dad1e.  v2:= "readPrimitiveField() cannot handle embedded messages." @kind object;
  #L1dad22.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dad28.  throw v1;
  #L1dad2a.  v1:= new `java.lang.IllegalArgumentException`;
  #L1dad2e.  v2:= "readPrimitiveField() cannot handle nested groups." @kind object;
  #L1dad32.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dad38.  throw v1;
  #L1dad3a.  call temp:= `a`(v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat$b;.a:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;)Ljava/lang/Object;` @kind virtual;
  #L1dad40.  v1:= temp @kind object;
  #L1dad42.  return v1 @kind object;
  #L1dad44.  call temp:= `readSInt64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSInt64:()J` @kind virtual;
  #L1dad4a.  v1:= temp @kind wide;
  #L1dad4c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1dad52.  v1:= temp @kind object;
  #L1dad54.  return v1 @kind object;
  #L1dad56.  call temp:= `readSInt32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSInt32:()I` @kind virtual;
  #L1dad5c.  v1:= temp;
  #L1dad5e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dad64.  v1:= temp @kind object;
  #L1dad66.  return v1 @kind object;
  #L1dad68.  call temp:= `readSFixed64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSFixed64:()J` @kind virtual;
  #L1dad6e.  v1:= temp @kind wide;
  #L1dad70.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1dad76.  v1:= temp @kind object;
  #L1dad78.  return v1 @kind object;
  #L1dad7a.  call temp:= `readSFixed32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSFixed32:()I` @kind virtual;
  #L1dad80.  v1:= temp;
  #L1dad82.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dad88.  v1:= temp @kind object;
  #L1dad8a.  return v1 @kind object;
  #L1dad8c.  call temp:= `readUInt32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUInt32:()I` @kind virtual;
  #L1dad92.  v1:= temp;
  #L1dad94.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dad9a.  v1:= temp @kind object;
  #L1dad9c.  return v1 @kind object;
  #L1dad9e.  call temp:= `readBytes`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dada4.  v1:= temp @kind object;
  #L1dada6.  return v1 @kind object;
  #L1dada8.  call temp:= `readBool`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readBool:()Z` @kind virtual;
  #L1dadae.  v1:= temp;
  #L1dadb0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1dadb6.  v1:= temp @kind object;
  #L1dadb8.  return v1 @kind object;
  #L1dadba.  call temp:= `readFixed32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFixed32:()I` @kind virtual;
  #L1dadc0.  v1:= temp;
  #L1dadc2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dadc8.  v1:= temp @kind object;
  #L1dadca.  return v1 @kind object;
  #L1dadcc.  call temp:= `readFixed64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFixed64:()J` @kind virtual;
  #L1dadd2.  v1:= temp @kind wide;
  #L1dadd4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1dadda.  v1:= temp @kind object;
  #L1daddc.  return v1 @kind object;
  #L1dadde.  call temp:= `readInt32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readInt32:()I` @kind virtual;
  #L1dade4.  v1:= temp;
  #L1dade6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dadec.  v1:= temp @kind object;
  #L1dadee.  return v1 @kind object;
  #L1dadf0.  call temp:= `readUInt64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUInt64:()J` @kind virtual;
  #L1dadf6.  v1:= temp @kind wide;
  #L1dadf8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1dadfe.  v1:= temp @kind object;
  #L1dae00.  return v1 @kind object;
  #L1dae02.  call temp:= `readInt64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readInt64:()J` @kind virtual;
  #L1dae08.  v1:= temp @kind wide;
  #L1dae0a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1dae10.  v1:= temp @kind object;
  #L1dae12.  return v1 @kind object;
  #L1dae14.  call temp:= `readFloat`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFloat:()F` @kind virtual;
  #L1dae1a.  v1:= temp;
  #L1dae1c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L1dae22.  v1:= temp @kind object;
  #L1dae24.  return v1 @kind object;
  #L1dae26.  call temp:= `readDouble`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readDouble:()D` @kind virtual;
  #L1dae2c.  v1:= temp @kind wide;
  #L1dae2e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L1dae34.  v1:= temp @kind object;
  #L1dae36.  return v1 @kind object;
  #L1dae38.  switch v2
                  | 1 => goto L1dae26
                  | 2 => goto L1dae14
                  | 3 => goto L1dae02
                  | 4 => goto L1dadf0
                  | 5 => goto L1dadde
                  | 6 => goto L1dadcc
                  | 7 => goto L1dadba
                  | 8 => goto L1dada8
                  | 9 => goto L1dad9e
                  | 10 => goto L1dad8c
                  | 11 => goto L1dad7a
                  | 12 => goto L1dad68
                  | 13 => goto L1dad56
                  | 14 => goto L1dad44
                  | 15 => goto L1dad3a
                  | 16 => goto L1dad2a
                  | 17 => goto L1dad1a
                  | 18 => goto L1dad0a
                  | else => goto L1dacfa;
}
procedure `int` `getTagFieldNumber`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1dac9c.  v0:= v0 ^>> 3;
  #L1daca0.  return v0;
}
procedure `int` `getTagWireType`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1dacb4.  v0:= v0 ^& 7;
  #L1dacb8.  return v0;
}
