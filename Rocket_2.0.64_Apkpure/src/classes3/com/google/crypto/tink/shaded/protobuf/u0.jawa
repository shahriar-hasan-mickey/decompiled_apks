record `com.google.crypto.tink.shaded.protobuf.u0` @kind class @AccessFlag FINAL {
}
global `com.google.crypto.tink.shaded.protobuf.u0$b` `@@com.google.crypto.tink.shaded.protobuf.u0.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1da274.  call temp:= `p`() @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.p:()Z` @kind static;
  #L1da27a.  v0:= temp;
  #L1da27c.  if v0 == 0 then goto L1da298;
  #L1da280.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/b;.c:()Z` @kind static;
  #L1da286.  v0:= temp;
  #L1da288.  if v0 != 0 then goto L1da298;
  #L1da28c.  v0:= new `com.google.crypto.tink.shaded.protobuf.u0$e`;
  #L1da290.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.<init>:()V` @kind direct;
  #L1da296.  goto L1da2a2;
  #L1da298.  v0:= new `com.google.crypto.tink.shaded.protobuf.u0$c`;
  #L1da29c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.<init>:()V` @kind direct;
  #L1da2a2.  `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` := v0 @kind object;
  #L1da2a6.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1d9e78.  call temp:= `o`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.o:(II)I` @kind static;
  #L1d9e7e.  v0:= temp;
  #L1d9e80.  return v0;
}
procedure `int` `b`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.b:(III)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1d9e94.  call temp:= `p`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.p:(III)I` @kind static;
  #L1d9e9a.  v0:= temp;
  #L1d9e9c.  return v0;
}
procedure `int` `c`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.c:([BII)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1d9eb0.  call temp:= `r`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.r:([BII)I` @kind static;
  #L1d9eb6.  v0:= temp;
  #L1d9eb8.  return v0;
}
procedure `int` `d`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.d:(I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1d9ecc.  call temp:= `n`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.n:(I)I` @kind static;
  #L1d9ed2.  v0:= temp;
  #L1d9ed4.  return v0;
}
procedure `int` `e`(`java.nio.ByteBuffer` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.e:(Ljava/nio/ByteBuffer;II)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1d9ee8.  call temp:= `m`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.m:(Ljava/nio/ByteBuffer;II)I` @kind static;
  #L1d9eee.  v0:= temp;
  #L1d9ef0.  return v0;
}
procedure `int` `f`(`java.nio.ByteBuffer` v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.f:(Ljava/nio/ByteBuffer;III)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1d9f04.  call temp:= `q`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.q:(Ljava/nio/ByteBuffer;III)I` @kind static;
  #L1d9f0a.  v0:= temp;
  #L1d9f0c.  return v0;
}
procedure `java.lang.String` `g`(`java.nio.ByteBuffer` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.g:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L1da254.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1da258.  call temp:= `a`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.a:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @kind virtual;
  #L1da25e.  v1:= temp @kind object;
  #L1da260.  return v1 @kind object;
}
procedure `java.lang.String` `h`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.h:([BII)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L1da234.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1da238.  call temp:= `b`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.b:([BII)Ljava/lang/String;` @kind virtual;
  #L1da23e.  v1:= temp @kind object;
  #L1da240.  return v1 @kind object;
}
procedure `int` `i`(`java.lang.CharSequence` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.i:(Ljava/lang/CharSequence;[BII)I` @AccessFlag STATIC {
    temp;
    v0;

  #L1d9f20.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1d9f24.  call temp:= `e`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.e:(Ljava/lang/CharSequence;[BII)I` @kind virtual;
  #L1d9f2a.  v1:= temp;
  #L1d9f2c.  return v1;
}
procedure `void` `j`(`java.lang.CharSequence` v1 @kind object, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.j:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L1da2b8.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1da2bc.  call `f`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.f:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L1da2c2.  return @kind void;
}
procedure `int` `k`(`java.lang.CharSequence` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.k:(Ljava/lang/CharSequence;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d9f40.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1d9f46.  v0:= temp;
  #L1d9f48.  v1:= 0I;
  #L1d9f4a.  if v1 >= v0 then goto L1d9f64;
  #L1d9f4e.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d9f54.  v2:= temp;
  #L1d9f56.  v3:= 128I;
  #L1d9f5a.  if v2 >= v3 then goto L1d9f64;
  #L1d9f5e.  v1:= v1 + 1;
  #L1d9f62.  goto L1d9f4a;
  #L1d9f64.  v2:= v0;
  #L1d9f66.  if v1 >= v0 then goto L1d9f94;
  #L1d9f6a.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d9f70.  v3:= temp;
  #L1d9f72.  v4:= 2048I;
  #L1d9f76.  if v3 >= v4 then goto L1d9f8a;
  #L1d9f7a.  v3:= v3 - 127;
  #L1d9f7e.  v3:= v3 ^>> 31;
  #L1d9f82.  v2:= v2 + v3 @kind int;
  #L1d9f84.  v1:= v1 + 1;
  #L1d9f88.  goto L1d9f66;
  #L1d9f8a.  call temp:= `l`(v5, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.l:(Ljava/lang/CharSequence;I)I` @kind static;
  #L1d9f90.  v5:= temp;
  #L1d9f92.  v2:= v2 + v5 @kind int;
  #L1d9f94.  if v2 < v0 then goto L1d9f9a;
  #L1d9f98.  return v2;
  #L1d9f9a.  v5:= new `java.lang.IllegalArgumentException`;
  #L1d9f9e.  v0:= new `java.lang.StringBuilder`;
  #L1d9fa2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9fa8.  v1:= "UTF-8 length does not fit in int: " @kind object;
  #L1d9fac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9fb2.  v1:= (`long`) v2 @kind i2l;
  #L1d9fb4.  v3:= 4294967296L;
  #L1d9fbe.  v1:= v1 + v3 @kind long;
  #L1d9fc0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9fc6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9fcc.  v0:= temp @kind object;
  #L1d9fce.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9fd4.  throw v5;
}
procedure `int` `l`(`java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.l:(Ljava/lang/CharSequence;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d9fe8.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1d9fee.  v0:= temp;
  #L1d9ff0.  v1:= 0I;
  #L1d9ff2.  if v5 >= v0 then goto L1da052;
  #L1d9ff6.  call temp:= `charAt`(v4, v5) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d9ffc.  v2:= temp;
  #L1d9ffe.  v3:= 2048I;
  #L1da002.  if v2 >= v3 then goto L1da012;
  #L1da006.  v2:= v2 - 127;
  #L1da00a.  v2:= v2 ^>> 31;
  #L1da00e.  v1:= v1 + v2 @kind int;
  #L1da010.  goto L1da04c;
  #L1da012.  v1:= v1 + 2;
  #L1da016.  v3:= 55296I;
  #L1da01c.  if v3 > v2 then goto L1da04c;
  #L1da020.  v3:= 57343I;
  #L1da026.  if v2 > v3 then goto L1da04c;
  #L1da02a.  call temp:= `codePointAt`(v4, v5) @signature `Ljava/lang/Character;.codePointAt:(Ljava/lang/CharSequence;I)I` @kind static;
  #L1da030.  v2:= temp;
  #L1da032.  v3:= 65536I;
  #L1da036.  if v2 < v3 then goto L1da040;
  #L1da03a.  v5:= v5 + 1;
  #L1da03e.  goto L1da04c;
  #L1da040.  v4:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L1da044.  call `<init>`(v4, v5, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L1da04a.  throw v4;
  #L1da04c.  v5:= v5 + 1;
  #L1da050.  goto L1d9ff2;
  #L1da052.  return v1;
}
procedure `int` `m`(`java.nio.ByteBuffer` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.m:(Ljava/nio/ByteBuffer;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1da064.  v8:= v8 + -7;
  #L1da068.  v0:= v7;
  #L1da06a.  if v0 >= v8 then goto L1da094;
  #L1da06e.  call temp:= `getLong`(v6, v0) @signature `Ljava/nio/ByteBuffer;.getLong:(I)J` @kind virtual;
  #L1da074.  v1:= temp @kind wide;
  #L1da076.  v3:= -2.937446524422997E-306D;
  #L1da080.  v1:= v1 ^& v3 @kind long;
  #L1da082.  v3:= 0L;
  #L1da086.  v5:= lcmp(v1, v3);
  #L1da08a.  if v5 != 0 then goto L1da094;
  #L1da08e.  v0:= v0 + 8;
  #L1da092.  goto L1da06a;
  #L1da094.  v0:= v0 - v7 @kind int;
  #L1da096.  return v0;
}
procedure `int` `n`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.n:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1da10c.  v0:= -12I;
  #L1da110.  if v1 <= v0 then goto L1da116;
  #L1da114.  v1:= -1I;
  #L1da116.  return v1;
}
procedure `int` `o`(`int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.o:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1da128.  v0:= -12I;
  #L1da12c.  if v1 > v0 then goto L1da142;
  #L1da130.  v0:= -65I;
  #L1da134.  if v2 <= v0 then goto L1da13a;
  #L1da138.  goto L1da142;
  #L1da13a.  v2:= v2 ^< 8;
  #L1da13e.  v1:= v1 ^~ v2 @kind int;
  #L1da140.  goto L1da144;
  #L1da142.  v1:= -1I;
  #L1da144.  return v1;
}
procedure `int` `p`(`int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.p:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1da158.  v0:= -12I;
  #L1da15c.  if v1 > v0 then goto L1da17c;
  #L1da160.  v0:= -65I;
  #L1da164.  if v2 > v0 then goto L1da17c;
  #L1da168.  if v3 <= v0 then goto L1da16e;
  #L1da16c.  goto L1da17c;
  #L1da16e.  v2:= v2 ^< 8;
  #L1da172.  v1:= v1 ^~ v2 @kind int;
  #L1da174.  v2:= v3 ^< 16;
  #L1da178.  v1:= v1 ^~ v2 @kind int;
  #L1da17a.  goto L1da17e;
  #L1da17c.  v1:= -1I;
  #L1da17e.  return v1;
}
procedure `int` `q`(`java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.q:(Ljava/nio/ByteBuffer;III)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1da190.  if v5 == 0 then goto L1da1da;
  #L1da194.  v0:= 1I;
  #L1da196.  if v5 == v0 then goto L1da1c8;
  #L1da19a.  v1:= 2I;
  #L1da19c.  if v5 != v1 then goto L1da1bc;
  #L1da1a0.  call temp:= `get`(v2, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1da1a6.  v5:= temp;
  #L1da1a8.  v4:= v4 + v0 @kind int;
  #L1da1aa.  call temp:= `get`(v2, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1da1b0.  v2:= temp;
  #L1da1b2.  call temp:= `p`(v3, v5, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.p:(III)I` @kind static;
  #L1da1b8.  v2:= temp;
  #L1da1ba.  return v2;
  #L1da1bc.  v2:= new `java.lang.AssertionError`;
  #L1da1c0.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1da1c6.  throw v2;
  #L1da1c8.  call temp:= `get`(v2, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1da1ce.  v2:= temp;
  #L1da1d0.  call temp:= `o`(v3, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.o:(II)I` @kind static;
  #L1da1d6.  v2:= temp;
  #L1da1d8.  return v2;
  #L1da1da.  call temp:= `n`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.n:(I)I` @kind static;
  #L1da1e0.  v2:= temp;
  #L1da1e2.  return v2;
}
procedure `int` `r`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.r:([BII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1da0a8.  v0:= v4 + -1;
  #L1da0ac.  v0:= v3[v0] @kind byte;
  #L1da0b0.  v5:= v5 - v4 @kind int;
  #L1da0b2.  if v5 == 0 then goto L1da0f0;
  #L1da0b6.  v1:= 1I;
  #L1da0b8.  if v5 == v1 then goto L1da0e2;
  #L1da0bc.  v2:= 2I;
  #L1da0be.  if v5 != v2 then goto L1da0d6;
  #L1da0c2.  v5:= v3[v4] @kind byte;
  #L1da0c6.  v4:= v4 + v1 @kind int;
  #L1da0c8.  v3:= v3[v4] @kind byte;
  #L1da0cc.  call temp:= `p`(v0, v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.p:(III)I` @kind static;
  #L1da0d2.  v3:= temp;
  #L1da0d4.  return v3;
  #L1da0d6.  v3:= new `java.lang.AssertionError`;
  #L1da0da.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1da0e0.  throw v3;
  #L1da0e2.  v3:= v3[v4] @kind byte;
  #L1da0e6.  call temp:= `o`(v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.o:(II)I` @kind static;
  #L1da0ec.  v3:= temp;
  #L1da0ee.  return v3;
  #L1da0f0.  call temp:= `n`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.n:(I)I` @kind static;
  #L1da0f6.  v3:= temp;
  #L1da0f8.  return v3;
}
procedure `boolean` `s`(`java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.s:(Ljava/nio/ByteBuffer;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d9e48.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1d9e4c.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d9e52.  v1:= temp;
  #L1d9e54.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1d9e5a.  v2:= temp;
  #L1d9e5c.  call temp:= `i`(v0, v3, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.i:(Ljava/nio/ByteBuffer;II)Z` @kind virtual;
  #L1d9e62.  v3:= temp;
  #L1d9e64.  return v3;
}
procedure `boolean` `t`(`byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.t:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d9e04.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1d9e08.  v1:= length @variable v3;
  #L1d9e0a.  v2:= 0I;
  #L1d9e0c.  call temp:= `j`(v0, v3, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.j:([BII)Z` @kind virtual;
  #L1d9e12.  v3:= temp;
  #L1d9e14.  return v3;
}
procedure `boolean` `u`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.u:([BII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d9e28.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1d9e2c.  call temp:= `j`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.j:([BII)Z` @kind virtual;
  #L1d9e32.  v1:= temp;
  #L1d9e34.  return v1;
}
procedure `int` `v`(`int` v1 , `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.v:(ILjava/nio/ByteBuffer;II)I` @AccessFlag STATIC {
    temp;
    v0;

  #L1da214.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1da218.  call temp:= `k`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.k:(ILjava/nio/ByteBuffer;II)I` @kind virtual;
  #L1da21e.  v1:= temp;
  #L1da220.  return v1;
}
procedure `int` `w`(`int` v1 , `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.w:(I[BII)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1da1f4.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L1da1f8.  call temp:= `l`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.l:(I[BII)I` @kind virtual;
  #L1da1fe.  v1:= temp;
  #L1da200.  return v1;
}
