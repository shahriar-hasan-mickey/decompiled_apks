record `com.google.crypto.tink.shaded.protobuf.LazyField$c` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `com.google.crypto.tink.shaded.protobuf.LazyField$c.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.LazyField$c` v0 @kind this, `java.util.Iterator` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/LazyField$c;.<init>:(Ljava/util/Iterator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c4524.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c452a.  v0.`com.google.crypto.tink.shaded.protobuf.LazyField$c.a` @type ^`java.util.Iterator` := v1 @kind object;
  #L1c452e.  return @kind void;
}
procedure `java.util.Map$Entry` `a`(`com.google.crypto.tink.shaded.protobuf.LazyField$c` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/LazyField$c;.a:()Ljava/util/Map$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c44e4.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.LazyField$c.a` @type ^`java.util.Iterator` @kind object;
  #L1c44e8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c44ee.  v0:= temp @kind object;
  #L1c44f0.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L1c44f4.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1c44fa.  v1:= temp @kind object;
  #L1c44fc.  v1:= instanceof @variable v1 @type ^`com.google.crypto.tink.shaded.protobuf.LazyField` @kind boolean;
  #L1c4500.  if v1 == 0 then goto L1c4512;
  #L1c4504.  v1:= new `com.google.crypto.tink.shaded.protobuf.LazyField$b`;
  #L1c4508.  v2:= 0I;
  #L1c450a.  call `<init>`(v1, v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/LazyField$b;.<init>:(Ljava/util/Map$Entry;Lcom/google/crypto/tink/shaded/protobuf/LazyField$a;)V` @kind direct;
  #L1c4510.  return v1 @kind object;
  #L1c4512.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`com.google.crypto.tink.shaded.protobuf.LazyField$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/LazyField$c;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c44a8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.LazyField$c.a` @type ^`java.util.Iterator` @kind object;
  #L1c44ac.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c44b2.  v0:= temp;
  #L1c44b4.  return v0;
}
procedure `java.lang.Object` `next`(`com.google.crypto.tink.shaded.protobuf.LazyField$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/LazyField$c;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1c44c8.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/LazyField$c;.a:()Ljava/util/Map$Entry;` @kind virtual;
  #L1c44ce.  v0:= temp @kind object;
  #L1c44d0.  return v0 @kind object;
}
procedure `void` `remove`(`com.google.crypto.tink.shaded.protobuf.LazyField$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/LazyField$c;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4540.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.LazyField$c.a` @type ^`java.util.Iterator` @kind object;
  #L1c4544.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L1c454a.  return @kind void;
}
