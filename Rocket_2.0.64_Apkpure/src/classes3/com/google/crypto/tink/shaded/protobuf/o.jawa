record `com.google.crypto.tink.shaded.protobuf.o` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.a` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$IntList` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.g0` @kind interface {
  `int`[] `com.google.crypto.tink.shaded.protobuf.o.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.o.c` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.o` `@@com.google.crypto.tink.shaded.protobuf.o.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1c2ff0.  v0:= new `com.google.crypto.tink.shaded.protobuf.o`;
  #L1c2ff4.  v1:= 0I;
  #L1c2ff6.  v2:= new `int`[v1];
  #L1c2ffa.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:([II)V` @kind direct;
  #L1c3000.  `@@com.google.crypto.tink.shaded.protobuf.o.d` @type ^`com.google.crypto.tink.shaded.protobuf.o` := v0 @kind object;
  #L1c3004.  call `makeImmutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.makeImmutable:()V` @kind virtual;
  #L1c300a.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c301c.  v0:= 10I;
  #L1c3020.  v0:= new `int`[v0];
  #L1c3024.  v1:= 0I;
  #L1c3026.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:([II)V` @kind direct;
  #L1c302c.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:([II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c3040.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.<init>:()V` @kind direct;
  #L1c3046.  v0.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] := v1 @kind object;
  #L1c304a.  v0.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v2;
  #L1c304e.  return @kind void;
}
procedure `void` `c`(`com.google.crypto.tink.shaded.protobuf.o` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.c:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c30f4.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c30fa.  if v5 < 0 then goto L1c3170;
  #L1c30fe.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c3102.  if v5 > v0 then goto L1c3170;
  #L1c3106.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c310a.  v2:= length @variable v1;
  #L1c310c.  if v0 >= v2 then goto L1c311e;
  #L1c3110.  v2:= v5 + 1;
  #L1c3114.  v0:= v0 - v5 @kind int;
  #L1c3116.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c311c.  goto L1c314e;
  #L1c311e.  v0:= v0 * 3;
  #L1c3122.  v0:= v0 / 2;
  #L1c3126.  v0:= v0 + 1;
  #L1c312a.  v0:= new `int`[v0];
  #L1c312e.  v2:= 0I;
  #L1c3130.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c3136.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c313a.  v2:= v5 + 1;
  #L1c313e.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c3142.  v3:= v3 - v5 @kind int;
  #L1c3144.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c314a.  v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] := v0 @kind object;
  #L1c314e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c3152.  v0[v5]:= v6;
  #L1c3156.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c315a.  v5:= v5 + 1;
  #L1c315e.  v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v5;
  #L1c3162.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c3166.  v5:= v5 + 1;
  #L1c316a.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L1c316e.  return @kind void;
  #L1c3170.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L1c3174.  call temp:= `g`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.g:(I)Ljava/lang/String;` @kind direct;
  #L1c317a.  v5:= temp @kind object;
  #L1c317c.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c3182.  throw v6;
}
procedure `com.google.crypto.tink.shaded.protobuf.o` `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.d:()Lcom/google/crypto/tink/shaded/protobuf/o;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c2d90.  v0:= `@@com.google.crypto.tink.shaded.protobuf.o.d` @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind object;
  #L1c2d94.  return v0 @kind object;
}
procedure `void` `e`(`com.google.crypto.tink.shaded.protobuf.o` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.e:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c3194.  if v2 < 0 then goto L1c31a2;
  #L1c3198.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c319c.  if v2 >= v0 then goto L1c31a2;
  #L1c31a0.  return @kind void;
  #L1c31a2.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L1c31a6.  call temp:= `g`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.g:(I)Ljava/lang/String;` @kind direct;
  #L1c31ac.  v2:= temp @kind object;
  #L1c31ae.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c31b4.  throw v0;
}
procedure `java.lang.String` `g`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.g:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c2fa8.  v0:= new `java.lang.StringBuilder`;
  #L1c2fac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c2fb2.  v1:= "Index:" @kind object;
  #L1c2fb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c2fbc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c2fc2.  v3:= ", Size:" @kind object;
  #L1c2fc6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c2fcc.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2fd0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c2fd6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c2fdc.  v3:= temp @kind object;
  #L1c2fde.  return v3 @kind object;
}
procedure `void` `a`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 , `java.lang.Integer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.a:(ILjava/lang/Integer;)V` @AccessFlag PUBLIC {
    temp;

  #L1c3060.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1c3066.  v2:= temp;
  #L1c3068.  call `c`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.c:(II)V` @kind direct;
  #L1c306e.  return @kind void;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c3080.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1c3084.  call `a`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.a:(ILjava/lang/Integer;)V` @kind virtual;
  #L1c308a.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c2bf8.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L1c2bfc.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.b:(Ljava/lang/Integer;)Z` @kind virtual;
  #L1c2c02.  v1:= temp;
  #L1c2c04.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.o` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c2c18.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c2c1e.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1c2c24.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L1c2c28.  if v0 != 0 then goto L1c2c36;
  #L1c2c2c.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L1c2c32.  v6:= temp;
  #L1c2c34.  return v6;
  #L1c2c36.  v6:= (`com.google.crypto.tink.shaded.protobuf.o`) v6 @kind object;
  #L1c2c3a.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2c3e.  v1:= 0I;
  #L1c2c40.  if v0 != 0 then goto L1c2c46;
  #L1c2c44.  return v1;
  #L1c2c46.  v2:= 2147483647I;
  #L1c2c4c.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2c50.  v2:= v2 - v3 @kind int;
  #L1c2c52.  if v2 < v0 then goto L1c2c96;
  #L1c2c56.  v3:= v3 + v0 @kind int;
  #L1c2c58.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2c5c.  v2:= length @variable v0;
  #L1c2c5e.  if v3 <= v2 then goto L1c2c6e;
  #L1c2c62.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L1c2c68.  v0:= temp @kind object;
  #L1c2c6a.  v5.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] := v0 @kind object;
  #L1c2c6e.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2c72.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2c76.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2c7a.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2c7e.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c2c84.  v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v3;
  #L1c2c88.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c2c8c.  v0:= 1I;
  #L1c2c8e.  v6:= v6 + v0 @kind int;
  #L1c2c90.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L1c2c94.  return v0;
  #L1c2c96.  v6:= new `java.lang.OutOfMemoryError`;
  #L1c2c9a.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L1c2ca0.  throw v6;
}
procedure `void` `addInt`(`com.google.crypto.tink.shaded.protobuf.o` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c309c.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c30a2.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c30a6.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c30aa.  v2:= length @variable v1;
  #L1c30ac.  if v0 != v2 then goto L1c30cc;
  #L1c30b0.  v2:= v0 * 3;
  #L1c30b4.  v2:= v2 / 2;
  #L1c30b8.  v2:= v2 + 1;
  #L1c30bc.  v2:= new `int`[v2];
  #L1c30c0.  v3:= 0I;
  #L1c30c2.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c30c8.  v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] := v2 @kind object;
  #L1c30cc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c30d0.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c30d4.  v2:= v1 + 1;
  #L1c30d8.  v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v2;
  #L1c30dc.  v0[v1]:= v5;
  #L1c30e0.  return @kind void;
}
procedure `boolean` `b`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.b:(Ljava/lang/Integer;)Z` @AccessFlag PUBLIC {
    temp;

  #L1c2bd4.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1c2bda.  v1:= temp;
  #L1c2bdc.  call `addInt`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L1c2be2.  v1:= 1I;
  #L1c2be4.  return v1;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.o` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c2cb4.  v0:= 1I;
  #L1c2cb6.  if v5 != v6 then goto L1c2cbc;
  #L1c2cba.  return v0;
  #L1c2cbc.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L1c2cc0.  if v1 != 0 then goto L1c2cce;
  #L1c2cc4.  call temp:= `equals`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L1c2cca.  v6:= temp;
  #L1c2ccc.  return v6;
  #L1c2cce.  v6:= (`com.google.crypto.tink.shaded.protobuf.o`) v6 @kind object;
  #L1c2cd2.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2cd6.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2cda.  v3:= 0I;
  #L1c2cdc.  if v1 == v2 then goto L1c2ce2;
  #L1c2ce0.  return v3;
  #L1c2ce2.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2ce6.  v1:= 0I;
  #L1c2ce8.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2cec.  if v1 >= v2 then goto L1c2d08;
  #L1c2cf0.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2cf4.  v2:= v2[v1];
  #L1c2cf8.  v4:= v6[v1];
  #L1c2cfc.  if v2 == v4 then goto L1c2d02;
  #L1c2d00.  return v3;
  #L1c2d02.  v1:= v1 + 1;
  #L1c2d06.  goto L1c2ce8;
  #L1c2d08.  return v0;
}
procedure `java.lang.Integer` `f`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.f:(I)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L1c2e9c.  call temp:= `getInt`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.getInt:(I)I` @kind virtual;
  #L1c2ea2.  v1:= temp;
  #L1c2ea4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1c2eaa.  v1:= temp @kind object;
  #L1c2eac.  return v1 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c2f50.  call temp:= `f`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.f:(I)Ljava/lang/Integer;` @kind virtual;
  #L1c2f56.  v1:= temp @kind object;
  #L1c2f58.  return v1 @kind object;
}
procedure `int` `getInt`(`com.google.crypto.tink.shaded.protobuf.o` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.getInt:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2e04.  call `e`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.e:(I)V` @kind direct;
  #L1c2e0a.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2e0e.  v2:= v0[v2];
  #L1c2e12.  return v2;
}
procedure `java.lang.Integer` `h`(`com.google.crypto.tink.shaded.protobuf.o` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.h:(I)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c2ec0.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c2ec6.  call `e`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.e:(I)V` @kind direct;
  #L1c2ecc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2ed0.  v1:= v0[v5];
  #L1c2ed4.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2ed8.  v3:= v2 + -1;
  #L1c2edc.  if v5 >= v3 then goto L1c2ef0;
  #L1c2ee0.  v3:= v5 + 1;
  #L1c2ee4.  v2:= v2 - v5 @kind int;
  #L1c2ee6.  v2:= v2 + -1;
  #L1c2eea.  call `arraycopy`(v0, v3, v0, v5, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c2ef0.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2ef4.  v5:= v5 + -1;
  #L1c2ef8.  v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v5;
  #L1c2efc.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c2f00.  v5:= v5 + 1;
  #L1c2f04.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L1c2f08.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1c2f0e.  v5:= temp @kind object;
  #L1c2f10.  return v5 @kind object;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.o` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c2e24.  v0:= 1I;
  #L1c2e26.  v1:= 0I;
  #L1c2e28.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2e2c.  if v1 >= v2 then goto L1c2e44;
  #L1c2e30.  v0:= v0 * 31;
  #L1c2e34.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2e38.  v2:= v2[v1];
  #L1c2e3c.  v0:= v0 + v2 @kind int;
  #L1c2e3e.  v1:= v1 + 1;
  #L1c2e42.  goto L1c2e28;
  #L1c2e44.  return v0;
}
procedure `java.lang.Integer` `i`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 , `java.lang.Integer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.i:(ILjava/lang/Integer;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L1c2f24.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1c2f2a.  v2:= temp;
  #L1c2f2c.  call temp:= `setInt`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.setInt:(II)I` @kind virtual;
  #L1c2f32.  v1:= temp;
  #L1c2f34.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1c2f3a.  v1:= temp @kind object;
  #L1c2f3c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$IntList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$IntList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c2da8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2dac.  if v3 < v0 then goto L1c2dcc;
  #L1c2db0.  v0:= new `com.google.crypto.tink.shaded.protobuf.o`;
  #L1c2db4.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2db8.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L1c2dbe.  v3:= temp @kind object;
  #L1c2dc0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2dc4.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:([II)V` @kind direct;
  #L1c2dca.  return v0 @kind object;
  #L1c2dcc.  v3:= new `java.lang.IllegalArgumentException`;
  #L1c2dd0.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L1c2dd6.  throw v3;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$ProtobufList;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c2de8.  call temp:= `mutableCopyWithCapacity`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$IntList;` @kind virtual;
  #L1c2dee.  v1:= temp @kind object;
  #L1c2df0.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c2f6c.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.h:(I)Ljava/lang/Integer;` @kind virtual;
  #L1c2f72.  v1:= temp @kind object;
  #L1c2f74.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.o` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c2d1c.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c2d22.  v0:= 0I;
  #L1c2d24.  v1:= 0I;
  #L1c2d26.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2d2a.  if v1 >= v2 then goto L1c2d7e;
  #L1c2d2e.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2d32.  v2:= v2[v1];
  #L1c2d36.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1c2d3c.  v2:= temp @kind object;
  #L1c2d3e.  call temp:= `equals`(v5, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c2d44.  v2:= temp;
  #L1c2d46.  if v2 == 0 then goto L1c2d78;
  #L1c2d4a.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2d4e.  v0:= v1 + 1;
  #L1c2d52.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2d56.  v2:= v2 - v1 @kind int;
  #L1c2d58.  v3:= 1I;
  #L1c2d5a.  v2:= v2 - v3 @kind int;
  #L1c2d5c.  call `arraycopy`(v5, v0, v5, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c2d62.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2d66.  v5:= v5 - v3 @kind int;
  #L1c2d68.  v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v5;
  #L1c2d6c.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c2d70.  v5:= v5 + v3 @kind int;
  #L1c2d72.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L1c2d76.  return v3;
  #L1c2d78.  v1:= v1 + 1;
  #L1c2d7c.  goto L1c2d26;
  #L1c2d7e.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c31c8.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c31ce.  if v4 < v3 then goto L1c31fc;
  #L1c31d2.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c31d6.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c31da.  v1:= v1 - v4 @kind int;
  #L1c31dc.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c31e2.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c31e6.  v4:= v4 - v3 @kind int;
  #L1c31e8.  v0:= v0 - v4 @kind int;
  #L1c31ea.  v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v0;
  #L1c31ee.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c31f2.  v3:= v3 + 1;
  #L1c31f6.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L1c31fa.  return @kind void;
  #L1c31fc.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L1c3200.  v4:= "toIndex < fromIndex" @kind object;
  #L1c3204.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c320a.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c2f88.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1c2f8c.  call temp:= `i`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.i:(ILjava/lang/Integer;)Ljava/lang/Integer;` @kind virtual;
  #L1c2f92.  v1:= temp @kind object;
  #L1c2f94.  return v1 @kind object;
}
procedure `int` `setInt`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.setInt:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c2e58.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c2e5e.  call `e`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.e:(I)V` @kind direct;
  #L1c2e64.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L1c2e68.  v1:= v0[v3];
  #L1c2e6c.  v0[v3]:= v4;
  #L1c2e70.  return v1;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.o` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2e84.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L1c2e88.  return v0;
}
