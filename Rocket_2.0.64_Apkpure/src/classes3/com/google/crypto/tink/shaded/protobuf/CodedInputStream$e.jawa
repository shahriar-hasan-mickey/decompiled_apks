record `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.CodedInputStream` @kind class {
  `java.nio.ByteBuffer` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.g` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this, `java.nio.ByteBuffer` v5 @kind object, `boolean` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.<init>:(Ljava/nio/ByteBuffer;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b40ec.  v0:= 0I;
  #L1b40ee.  call `<init>`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L1b40f4.  v0:= 2147483647I;
  #L1b40fa.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.o` @type ^`int` := v0;
  #L1b40fe.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` := v5 @kind object;
  #L1b4102.  call temp:= `i`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.i:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L1b4108.  v0:= temp @kind wide;
  #L1b410a.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` := v0 @kind wide;
  #L1b410e.  call temp:= `limit`(v5) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1b4114.  v2:= temp;
  #L1b4116.  v2:= (`long`) v2 @kind i2l;
  #L1b4118.  v2:= v2 + v0 @kind long;
  #L1b411a.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v2 @kind wide;
  #L1b411e.  call temp:= `position`(v5) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1b4124.  v5:= temp;
  #L1b4126.  v2:= (`long`) v5 @kind i2l;
  #L1b4128.  v0:= v0 + v2 @kind long;
  #L1b412a.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v0 @kind wide;
  #L1b412e.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @type ^`long` := v0 @kind wide;
  #L1b4132.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.g` @type ^`boolean` := v6 @kind boolean;
  #L1b4136.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `boolean` v2 , `com.google.crypto.tink.shaded.protobuf.CodedInputStream$a` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.<init>:(Ljava/nio/ByteBuffer;ZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1b4148.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.<init>:(Ljava/nio/ByteBuffer;Z)V` @kind direct;
  #L1b414e.  return @kind void;
}
procedure `int` `d`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this, `long` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.d:(J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b3778.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L1b377c.  v3:= v3 - v0 @kind long;
  #L1b377e.  v4:= (`int`) v3 @kind l2i;
  #L1b3780.  return v4;
}
procedure `boolean` `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.e:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L1b3348.  call temp:= `I`() @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.I:()Z` @kind static;
  #L1b334e.  v0:= temp;
  #L1b3350.  return v0;
}
procedure `void` `g`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b4290.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b4294.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @type ^`int`;
  #L1b4298.  v2:= (`long`) v2 @kind i2l;
  #L1b429a.  v0:= v0 + v2 @kind long;
  #L1b429c.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v0 @kind wide;
  #L1b42a0.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @type ^`long` @kind wide;
  #L1b42a4.  v2:= v0 - v2 @kind long;
  #L1b42a8.  v3:= (`int`) v2 @kind l2i;
  #L1b42aa.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.o` @type ^`int`;
  #L1b42ae.  if v3 <= v2 then goto L1b42c2;
  #L1b42b2.  v3:= v3 - v2 @kind int;
  #L1b42b4.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @type ^`int` := v3;
  #L1b42b8.  v2:= (`long`) v3 @kind i2l;
  #L1b42ba.  v0:= v0 - v2 @kind long;
  #L1b42bc.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v0 @kind wide;
  #L1b42c0.  goto L1b42c8;
  #L1b42c2.  v0:= 0I;
  #L1b42c4.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @type ^`int` := v0;
  #L1b42c8.  return @kind void;
}
procedure `int` `h`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b3af8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b3afc.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3b00.  v0:= v0 - v2 @kind long;
  #L1b3b02.  v1:= (`int`) v0 @kind l2i;
  #L1b3b04.  return v1;
}
procedure `void` `i`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b4398.  call temp:= `h`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L1b439e.  v0:= temp;
  #L1b43a0.  v1:= 10I;
  #L1b43a4.  if v0 < v1 then goto L1b43b0;
  #L1b43a8.  call `j`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.j:()V` @kind direct;
  #L1b43ae.  goto L1b43b6;
  #L1b43b0.  call `k`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.k:()V` @kind direct;
  #L1b43b6.  return @kind void;
}
procedure `void` `j`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b43c8.  v0:= 0I;
  #L1b43ca.  v1:= 10I;
  #L1b43ce.  if v0 >= v1 then goto L1b43f4;
  #L1b43d2.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b43d6.  v3:= 1L;
  #L1b43da.  v3:= v3 + v1 @kind long;
  #L1b43dc.  v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v3 @kind wide;
  #L1b43e0.  call temp:= `v`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b43e6.  v1:= temp;
  #L1b43e8.  if v1 < 0 then goto L1b43ee;
  #L1b43ec.  return @kind void;
  #L1b43ee.  v0:= v0 + 1;
  #L1b43f2.  goto L1b43ca;
  #L1b43f4.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b43fa.  v0:= temp @kind object;
  #L1b43fc.  throw v0;
}
procedure `void` `k`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b4410.  v0:= 0I;
  #L1b4412.  v1:= 10I;
  #L1b4416.  if v0 >= v1 then goto L1b442e;
  #L1b441a.  call temp:= `readRawByte`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawByte:()B` @kind virtual;
  #L1b4420.  v1:= temp;
  #L1b4422.  if v1 < 0 then goto L1b4428;
  #L1b4426.  return @kind void;
  #L1b4428.  v0:= v0 + 1;
  #L1b442c.  goto L1b4412;
  #L1b442e.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b4434.  v0:= temp @kind object;
  #L1b4436.  throw v0;
}
procedure `java.nio.ByteBuffer` `l`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.l:(JJ)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1b3ca8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3cac.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1b3cb2.  v0:= temp;
  #L1b3cb4.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3cb8.  call temp:= `limit`(v1) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1b3cbe.  v1:= temp;
  #L1b3cc0.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3cc4.  call temp:= `d`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.d:(J)I` @kind direct;
  #L1b3cca.  v4:= temp;
  #L1b3ccc.  call temp:= `position`(v2, v4) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1b3cd2.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3cd6.  call temp:= `d`(v3, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.d:(J)I` @kind direct;
  #L1b3cdc.  v5:= temp;
  #L1b3cde.  call temp:= `limit`(v4, v5) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1b3ce4.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3ce8.  call temp:= `slice`(v4) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1b3cee.  v4:= temp @kind object;
  #L1b3cf0.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3cf4.  call temp:= `position`(v5, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1b3cfa.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3cfe.  call temp:= `limit`(v5, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1b3d04.  return v4 @kind object;
  #L1b3d06.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b3d08.  goto L1b3d14;
  #L1b3d0a.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3d10.  v4:= temp @kind object;
  #L1b3d12.  throw v4;
  #L1b3d14.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3d18.  call temp:= `position`(v5, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1b3d1e.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3d22.  call temp:= `limit`(v5, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1b3d28.  throw v4;
  catch `java.lang.IllegalArgumentException` @[L1b3cc0..L1b3cf0] goto L1b3d0a;
  catch `java.lang.Throwable` @[L1b3cc0..L1b3cf0] goto L1b3d06;
  catch `java.lang.Throwable` @[L1b3d0a..L1b3d14] goto L1b3d06;
}
procedure `void` `checkLastTagWas`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b4160.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @type ^`int`;
  #L1b4164.  if v0 != v2 then goto L1b416a;
  #L1b4168.  return @kind void;
  #L1b416a.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.a:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b4170.  v2:= temp @kind object;
  #L1b4172.  throw v2;
}
procedure `void` `enableAliasing`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.enableAliasing:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1b4184.  v0.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`boolean` := v1 @kind boolean;
  #L1b4188.  return @kind void;
}
procedure `long` `f`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.f:()J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b4044.  v0:= 0L;
  #L1b4048.  v2:= 0I;
  #L1b404a.  v3:= 64I;
  #L1b404e.  if v2 >= v3 then goto L1b4074;
  #L1b4052.  call temp:= `readRawByte`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawByte:()B` @kind virtual;
  #L1b4058.  v3:= temp;
  #L1b405a.  v4:= v3 ^& 127;
  #L1b405e.  v4:= (`long`) v4 @kind i2l;
  #L1b4060.  v4:= v4 ^< v2 @kind long;
  #L1b4062.  v0:= v0 ^| v4 @kind long;
  #L1b4064.  v3:= v3 ^& 128;
  #L1b4068.  if v3 != 0 then goto L1b406e;
  #L1b406c.  return v0 @kind wide;
  #L1b406e.  v2:= v2 + 7;
  #L1b4072.  goto L1b404a;
  #L1b4074.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b407a.  v0:= temp @kind object;
  #L1b407c.  throw v0;
}
procedure `int` `getBytesUntilLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getBytesUntilLimit:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b3794.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.o` @type ^`int`;
  #L1b3798.  v1:= 2147483647I;
  #L1b379e.  if v0 != v1 then goto L1b37a6;
  #L1b37a2.  v0:= -1I;
  #L1b37a4.  return v0;
  #L1b37a6.  call temp:= `getTotalBytesRead`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getTotalBytesRead:()I` @kind virtual;
  #L1b37ac.  v1:= temp;
  #L1b37ae.  v0:= v0 - v1 @kind int;
  #L1b37b0.  return v0;
}
procedure `int` `getLastTag`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getLastTag:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b37c4.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @type ^`int`;
  #L1b37c8.  return v0;
}
procedure `int` `getTotalBytesRead`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getTotalBytesRead:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b37dc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b37e0.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @type ^`long` @kind wide;
  #L1b37e4.  v0:= v0 - v2 @kind long;
  #L1b37e6.  v1:= (`int`) v0 @kind l2i;
  #L1b37e8.  return v1;
}
procedure `boolean` `isAtEnd`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.isAtEnd:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b3320.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3324.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b3328.  v4:= lcmp(v0, v2);
  #L1b332c.  if v4 != 0 then goto L1b3334;
  #L1b3330.  v0:= 1I;
  #L1b3332.  goto L1b3336;
  #L1b3334.  v0:= 0I;
  #L1b3336.  return v0;
}
procedure `void` `popLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.popLimit:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1b419c.  v0.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.o` @type ^`int` := v1;
  #L1b41a0.  call `g`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.g:()V` @kind direct;
  #L1b41a6.  return @kind void;
}
procedure `int` `pushLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.pushLimit:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b37fc.  if v2 < 0 then goto L1b3828;
  #L1b3800.  call temp:= `getTotalBytesRead`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getTotalBytesRead:()I` @kind virtual;
  #L1b3806.  v0:= temp;
  #L1b3808.  v2:= v2 + v0 @kind int;
  #L1b380a.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.o` @type ^`int`;
  #L1b380e.  if v2 > v0 then goto L1b381e;
  #L1b3812.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.o` @type ^`int` := v2;
  #L1b3816.  call `g`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.g:()V` @kind direct;
  #L1b381c.  return v0;
  #L1b381e.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3824.  v2:= temp @kind object;
  #L1b3826.  throw v2;
  #L1b3828.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b382e.  v2:= temp @kind object;
  #L1b3830.  throw v2;
}
procedure `boolean` `readBool`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readBool:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b3364.  call temp:= `readRawVarint64`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @kind virtual;
  #L1b336a.  v0:= temp @kind wide;
  #L1b336c.  v2:= 0L;
  #L1b3370.  v4:= lcmp(v0, v2);
  #L1b3374.  if v4 == 0 then goto L1b337c;
  #L1b3378.  v0:= 1I;
  #L1b337a.  goto L1b337e;
  #L1b337c.  v0:= 0I;
  #L1b337e.  return v0;
}
procedure `byte`[] `readByteArray`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3530.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b3536.  v0:= temp;
  #L1b3538.  call temp:= `readRawBytes`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawBytes:(I)[B` @kind virtual;
  #L1b353e.  v0:= temp @kind object;
  #L1b3540.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `readByteBuffer`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v12 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1b3c04.  call temp:= `readRawVarint32`(v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b3c0a.  v0:= temp;
  #L1b3c0c.  if v0 <= 0 then goto L1b3c76;
  #L1b3c10.  call temp:= `h`(v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L1b3c16.  v1:= temp;
  #L1b3c18.  if v0 > v1 then goto L1b3c76;
  #L1b3c1c.  v1:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.g` @type ^`boolean` @kind boolean;
  #L1b3c20.  if v1 != 0 then goto L1b3c4a;
  #L1b3c24.  v1:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`boolean` @kind boolean;
  #L1b3c28.  if v1 == 0 then goto L1b3c4a;
  #L1b3c2c.  v1:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3c30.  v3:= (`long`) v0 @kind i2l;
  #L1b3c32.  v5:= v1 + v3 @kind long;
  #L1b3c36.  call temp:= `l`(v12, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.l:(JJ)Ljava/nio/ByteBuffer;` @kind direct;
  #L1b3c3c.  v0:= temp @kind object;
  #L1b3c3e.  v1:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3c42.  v1:= v1 + v3 @kind long;
  #L1b3c44.  v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v1 @kind wide;
  #L1b3c48.  return v0 @kind object;
  #L1b3c4a.  v1:= new `byte`[v0];
  #L1b3c4e.  v3:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3c52.  v6:= 0L;
  #L1b3c56.  v10:= (`long`) v0 @kind i2l;
  #L1b3c58.  v5:= v1 @kind object;
  #L1b3c5a.  v8:= v10 @kind wide;
  #L1b3c5c.  call `n`(v3, v5, v6, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L1b3c62.  v2:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3c66.  v2:= v2 + v10 @kind long;
  #L1b3c68.  v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v2 @kind wide;
  #L1b3c6c.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L1b3c72.  v0:= temp @kind object;
  #L1b3c74.  return v0 @kind object;
  #L1b3c76.  if v0 != 0 then goto L1b3c80;
  #L1b3c7a.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_BUFFER` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3c7e.  return v0 @kind object;
  #L1b3c80.  if v0 >= 0 then goto L1b3c8e;
  #L1b3c84.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3c8a.  v0:= temp @kind object;
  #L1b3c8c.  throw v0;
  #L1b3c8e.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3c94.  v0:= temp @kind object;
  #L1b3c96.  throw v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v11 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b35c0.  call temp:= `readRawVarint32`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b35c6.  v0:= temp;
  #L1b35c8.  if v0 <= 0 then goto L1b363a;
  #L1b35cc.  call temp:= `h`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L1b35d2.  v1:= temp;
  #L1b35d4.  if v0 > v1 then goto L1b363a;
  #L1b35d8.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.g` @type ^`boolean` @kind boolean;
  #L1b35dc.  if v1 == 0 then goto L1b360e;
  #L1b35e0.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`boolean` @kind boolean;
  #L1b35e4.  if v1 == 0 then goto L1b360e;
  #L1b35e8.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b35ec.  v3:= (`long`) v0 @kind i2l;
  #L1b35ee.  v5:= v1 + v3 @kind long;
  #L1b35f2.  call temp:= `l`(v11, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.l:(JJ)Ljava/nio/ByteBuffer;` @kind direct;
  #L1b35f8.  v0:= temp @kind object;
  #L1b35fa.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b35fe.  v1:= v1 + v3 @kind long;
  #L1b3600.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v1 @kind wide;
  #L1b3604.  call temp:= `j`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.j:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1b360a.  v0:= temp @kind object;
  #L1b360c.  return v0 @kind object;
  #L1b360e.  v8:= new `byte`[v0];
  #L1b3612.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3616.  v4:= 0L;
  #L1b361a.  v9:= (`long`) v0 @kind i2l;
  #L1b361c.  v3:= v8 @kind object;
  #L1b361e.  v6:= v9 @kind wide;
  #L1b3620.  call `n`(v1, v3, v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L1b3626.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b362a.  v0:= v0 + v9 @kind long;
  #L1b362c.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v0 @kind wide;
  #L1b3630.  call temp:= `k`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.k:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1b3636.  v0:= temp @kind object;
  #L1b3638.  return v0 @kind object;
  #L1b363a.  if v0 != 0 then goto L1b3644;
  #L1b363e.  v0:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L1b3642.  return v0 @kind object;
  #L1b3644.  if v0 >= 0 then goto L1b3652;
  #L1b3648.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b364e.  v0:= temp @kind object;
  #L1b3650.  throw v0;
  #L1b3652.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3658.  v0:= temp @kind object;
  #L1b365a.  throw v0;
}
procedure `double` `readDouble`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b3730.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @kind virtual;
  #L1b3736.  v0:= temp @kind wide;
  #L1b3738.  call temp:= `longBitsToDouble`(v0) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L1b373e.  v0:= temp @kind wide;
  #L1b3740.  return v0 @kind wide;
}
procedure `int` `readEnum`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readEnum:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3844.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b384a.  v0:= temp;
  #L1b384c.  return v0;
}
procedure `int` `readFixed32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readFixed32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3860.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @kind virtual;
  #L1b3866.  v0:= temp;
  #L1b3868.  return v0;
}
procedure `long` `readFixed64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readFixed64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b3d54.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @kind virtual;
  #L1b3d5a.  v0:= temp @kind wide;
  #L1b3d5c.  return v0 @kind wide;
}
procedure `float` `readFloat`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readFloat:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3754.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @kind virtual;
  #L1b375a.  v0:= temp;
  #L1b375c.  call temp:= `intBitsToFloat`(v0) @signature `Ljava/lang/Float;.intBitsToFloat:(I)F` @kind static;
  #L1b3762.  v0:= temp;
  #L1b3764.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this, `int` v3 , `com.google.crypto.tink.shaded.protobuf.Parser` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b366c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b3670.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L1b3674.  if v0 >= v1 then goto L1b36aa;
  #L1b3678.  v0:= v0 + 1;
  #L1b367c.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v0;
  #L1b3680.  call temp:= `parsePartialFrom`(v4, v2, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/Parser;.parsePartialFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind interface;
  #L1b3686.  v4:= temp @kind object;
  #L1b3688.  v4:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v4 @kind object;
  #L1b368c.  v5:= 4I;
  #L1b368e.  call temp:= `a`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1b3694.  v3:= temp;
  #L1b3696.  call `checkLastTagWas`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L1b369c.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b36a0.  v3:= v3 + -1;
  #L1b36a4.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v3;
  #L1b36a8.  return v4 @kind object;
  #L1b36aa.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b36b0.  v3:= temp @kind object;
  #L1b36b2.  throw v3;
}
procedure `void` `readGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this, `int` v3 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b41b8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b41bc.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L1b41c0.  if v0 >= v1 then goto L1b41f0;
  #L1b41c4.  v0:= v0 + 1;
  #L1b41c8.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v0;
  #L1b41cc.  call temp:= `mergeFrom`(v4, v2, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;` @kind interface;
  #L1b41d2.  v4:= 4I;
  #L1b41d4.  call temp:= `a`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1b41da.  v3:= temp;
  #L1b41dc.  call `checkLastTagWas`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L1b41e2.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b41e6.  v3:= v3 + -1;
  #L1b41ea.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v3;
  #L1b41ee.  return @kind void;
  #L1b41f0.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b41f6.  v3:= temp @kind object;
  #L1b41f8.  throw v3;
}
procedure `int` `readInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b387c.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b3882.  v0:= temp;
  #L1b3884.  return v0;
}
procedure `long` `readInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b3d70.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @kind virtual;
  #L1b3d76.  v0:= temp @kind wide;
  #L1b3d78.  return v0 @kind wide;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.Parser` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b36c4.  call temp:= `readRawVarint32`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b36ca.  v0:= temp;
  #L1b36cc.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b36d0.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L1b36d4.  if v1 >= v2 then goto L1b3714;
  #L1b36d8.  call temp:= `pushLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.pushLimit:(I)I` @kind virtual;
  #L1b36de.  v0:= temp;
  #L1b36e0.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b36e4.  v1:= v1 + 1;
  #L1b36e8.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v1;
  #L1b36ec.  call temp:= `parsePartialFrom`(v4, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/Parser;.parsePartialFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind interface;
  #L1b36f2.  v4:= temp @kind object;
  #L1b36f4.  v4:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v4 @kind object;
  #L1b36f8.  v5:= 0I;
  #L1b36fa.  call `checkLastTagWas`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L1b3700.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b3704.  v5:= v5 + -1;
  #L1b3708.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v5;
  #L1b370c.  call `popLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.popLimit:(I)V` @kind virtual;
  #L1b3712.  return v4 @kind object;
  #L1b3714.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b371a.  v4:= temp @kind object;
  #L1b371c.  throw v4;
}
procedure `void` `readMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b420c.  call temp:= `readRawVarint32`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b4212.  v0:= temp;
  #L1b4214.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b4218.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L1b421c.  if v1 >= v2 then goto L1b4256;
  #L1b4220.  call temp:= `pushLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.pushLimit:(I)I` @kind virtual;
  #L1b4226.  v0:= temp;
  #L1b4228.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b422c.  v1:= v1 + 1;
  #L1b4230.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v1;
  #L1b4234.  call temp:= `mergeFrom`(v4, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;` @kind interface;
  #L1b423a.  v4:= 0I;
  #L1b423c.  call `checkLastTagWas`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L1b4242.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L1b4246.  v4:= v4 + -1;
  #L1b424a.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v4;
  #L1b424e.  call `popLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.popLimit:(I)V` @kind virtual;
  #L1b4254.  return @kind void;
  #L1b4256.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b425c.  v4:= temp @kind object;
  #L1b425e.  throw v4;
}
procedure `byte` `readRawByte`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b34f0.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b34f4.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b34f8.  v4:= lcmp(v0, v2);
  #L1b34fc.  if v4 == 0 then goto L1b3514;
  #L1b3500.  v2:= 1L;
  #L1b3504.  v2:= v2 + v0 @kind long;
  #L1b3506.  v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v2 @kind wide;
  #L1b350a.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3510.  v0:= temp;
  #L1b3512.  return v0;
  #L1b3514.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b351a.  v0:= temp @kind object;
  #L1b351c.  throw v0;
}
procedure `byte`[] `readRawBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v7 @kind this, `int` v8 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawBytes:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b3554.  if v8 < 0 then goto L1b358c;
  #L1b3558.  call temp:= `h`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L1b355e.  v0:= temp;
  #L1b3560.  if v8 > v0 then goto L1b358c;
  #L1b3564.  v0:= new `byte`[v8];
  #L1b3568.  v1:= v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b356c.  v3:= (`long`) v8 @kind i2l;
  #L1b356e.  v5:= v1 + v3 @kind long;
  #L1b3572.  call temp:= `l`(v7, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.l:(JJ)Ljava/nio/ByteBuffer;` @kind direct;
  #L1b3578.  v8:= temp @kind object;
  #L1b357a.  call temp:= `get`(v8, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1b3580.  v1:= v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3584.  v1:= v1 + v3 @kind long;
  #L1b3586.  v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v1 @kind wide;
  #L1b358a.  return v0 @kind object;
  #L1b358c.  if v8 > 0 then goto L1b35a4;
  #L1b3590.  if v8 != 0 then goto L1b359a;
  #L1b3594.  v8:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L1b3598.  return v8 @kind object;
  #L1b359a.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b35a0.  v8:= temp @kind object;
  #L1b35a2.  throw v8;
  #L1b35a4.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b35aa.  v8:= temp @kind object;
  #L1b35ac.  throw v8;
}
procedure `int` `readRawLittleEndian32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v7 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b3898.  v0:= v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b389c.  v2:= v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b38a0.  v2:= v2 - v0 @kind long;
  #L1b38a2.  v4:= 4L;
  #L1b38a6.  v6:= lcmp(v2, v4);
  #L1b38aa.  if v6 < 0 then goto L1b390a;
  #L1b38ae.  v4:= v4 + v0 @kind long;
  #L1b38b0.  v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v4 @kind wide;
  #L1b38b4.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b38ba.  v2:= temp;
  #L1b38bc.  v2:= v2 ^& 255;
  #L1b38c0.  v3:= 1L;
  #L1b38c4.  v3:= v3 + v0 @kind long;
  #L1b38c6.  call temp:= `v`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b38cc.  v3:= temp;
  #L1b38ce.  v3:= v3 ^& 255;
  #L1b38d2.  v3:= v3 ^< 8;
  #L1b38d6.  v2:= v2 ^| v3 @kind int;
  #L1b38d8.  v3:= 2L;
  #L1b38dc.  v3:= v3 + v0 @kind long;
  #L1b38de.  call temp:= `v`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b38e4.  v3:= temp;
  #L1b38e6.  v3:= v3 ^& 255;
  #L1b38ea.  v3:= v3 ^< 16;
  #L1b38ee.  v2:= v2 ^| v3 @kind int;
  #L1b38f0.  v3:= 3L;
  #L1b38f4.  v0:= v0 + v3 @kind long;
  #L1b38f6.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b38fc.  v0:= temp;
  #L1b38fe.  v0:= v0 ^& 255;
  #L1b3902.  v0:= v0 ^< 24;
  #L1b3906.  v0:= v0 ^| v2 @kind int;
  #L1b3908.  return v0;
  #L1b390a.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3910.  v0:= temp @kind object;
  #L1b3912.  throw v0;
}
procedure `long` `readRawLittleEndian64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v9 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1b3d8c.  v0:= v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3d90.  v2:= v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b3d94.  v2:= v2 - v0 @kind long;
  #L1b3d96.  v4:= 8L;
  #L1b3d9a.  v6:= lcmp(v2, v4);
  #L1b3d9e.  if v6 < 0 then goto L1b3e70;
  #L1b3da2.  v4:= v4 + v0 @kind long;
  #L1b3da4.  v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v4 @kind wide;
  #L1b3da8.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3dae.  v2:= temp;
  #L1b3db0.  v2:= (`long`) v2 @kind i2l;
  #L1b3db2.  v4:= 255L;
  #L1b3db6.  v2:= v2 ^& v4 @kind long;
  #L1b3db8.  v6:= 1L;
  #L1b3dbc.  v6:= v6 + v0 @kind long;
  #L1b3dbe.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3dc4.  v6:= temp;
  #L1b3dc6.  v6:= (`long`) v6 @kind i2l;
  #L1b3dc8.  v6:= v6 ^& v4 @kind long;
  #L1b3dca.  v8:= 8I;
  #L1b3dce.  v6:= v6 ^< v8 @kind long;
  #L1b3dd0.  v2:= v2 ^| v6 @kind long;
  #L1b3dd2.  v6:= 2L;
  #L1b3dd6.  v6:= v6 + v0 @kind long;
  #L1b3dd8.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3dde.  v6:= temp;
  #L1b3de0.  v6:= (`long`) v6 @kind i2l;
  #L1b3de2.  v6:= v6 ^& v4 @kind long;
  #L1b3de4.  v8:= 16I;
  #L1b3de8.  v6:= v6 ^< v8 @kind long;
  #L1b3dea.  v2:= v2 ^| v6 @kind long;
  #L1b3dec.  v6:= 3L;
  #L1b3df0.  v6:= v6 + v0 @kind long;
  #L1b3df2.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3df8.  v6:= temp;
  #L1b3dfa.  v6:= (`long`) v6 @kind i2l;
  #L1b3dfc.  v6:= v6 ^& v4 @kind long;
  #L1b3dfe.  v8:= 24I;
  #L1b3e02.  v6:= v6 ^< v8 @kind long;
  #L1b3e04.  v2:= v2 ^| v6 @kind long;
  #L1b3e06.  v6:= 4L;
  #L1b3e0a.  v6:= v6 + v0 @kind long;
  #L1b3e0c.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3e12.  v6:= temp;
  #L1b3e14.  v6:= (`long`) v6 @kind i2l;
  #L1b3e16.  v6:= v6 ^& v4 @kind long;
  #L1b3e18.  v8:= 32I;
  #L1b3e1c.  v6:= v6 ^< v8 @kind long;
  #L1b3e1e.  v2:= v2 ^| v6 @kind long;
  #L1b3e20.  v6:= 5L;
  #L1b3e24.  v6:= v6 + v0 @kind long;
  #L1b3e26.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3e2c.  v6:= temp;
  #L1b3e2e.  v6:= (`long`) v6 @kind i2l;
  #L1b3e30.  v6:= v6 ^& v4 @kind long;
  #L1b3e32.  v8:= 40I;
  #L1b3e36.  v6:= v6 ^< v8 @kind long;
  #L1b3e38.  v2:= v2 ^| v6 @kind long;
  #L1b3e3a.  v6:= 6L;
  #L1b3e3e.  v6:= v6 + v0 @kind long;
  #L1b3e40.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3e46.  v6:= temp;
  #L1b3e48.  v6:= (`long`) v6 @kind i2l;
  #L1b3e4a.  v6:= v6 ^& v4 @kind long;
  #L1b3e4c.  v8:= 48I;
  #L1b3e50.  v6:= v6 ^< v8 @kind long;
  #L1b3e52.  v2:= v2 ^| v6 @kind long;
  #L1b3e54.  v6:= 7L;
  #L1b3e58.  v0:= v0 + v6 @kind long;
  #L1b3e5a.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3e60.  v0:= temp;
  #L1b3e62.  v0:= (`long`) v0 @kind i2l;
  #L1b3e64.  v0:= v0 ^& v4 @kind long;
  #L1b3e66.  v4:= 56I;
  #L1b3e6a.  v0:= v0 ^< v4 @kind long;
  #L1b3e6c.  v0:= v0 ^| v2 @kind long;
  #L1b3e6e.  return v0 @kind wide;
  #L1b3e70.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3e76.  v0:= temp @kind object;
  #L1b3e78.  throw v0;
}
procedure `int` `readRawVarint32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v10 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1b3924.  v0:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3928.  v2:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b392c.  v4:= lcmp(v2, v0);
  #L1b3930.  if v4 != 0 then goto L1b3938;
  #L1b3934.  goto L1b3a2e;
  #L1b3938.  v2:= 1L;
  #L1b393c.  v4:= v0 + v2 @kind long;
  #L1b3940.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3946.  v0:= temp;
  #L1b3948.  if v0 < 0 then goto L1b3952;
  #L1b394c.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v4 @kind wide;
  #L1b3950.  return v0;
  #L1b3952.  v6:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b3956.  v6:= v6 - v4 @kind long;
  #L1b3958.  v8:= 9L;
  #L1b395c.  v1:= lcmp(v6, v8);
  #L1b3960.  if v1 >= 0 then goto L1b3966;
  #L1b3964.  goto L1b3a2e;
  #L1b3966.  v6:= v4 + v2 @kind long;
  #L1b396a.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3970.  v1:= temp;
  #L1b3972.  v1:= v1 ^< 7;
  #L1b3976.  v0:= v0 ^~ v1 @kind int;
  #L1b3978.  if v0 >= 0 then goto L1b3982;
  #L1b397c.  v0:= v0 ^~ -128;
  #L1b3980.  goto L1b3a3a;
  #L1b3982.  v4:= v6 + v2 @kind long;
  #L1b3986.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b398c.  v1:= temp;
  #L1b398e.  v1:= v1 ^< 14;
  #L1b3992.  v0:= v0 ^~ v1 @kind int;
  #L1b3994.  if v0 < 0 then goto L1b39a0;
  #L1b3998.  v0:= v0 ^~ 16256;
  #L1b399c.  v6:= v4 @kind wide;
  #L1b399e.  goto L1b3a3a;
  #L1b39a0.  v6:= v4 + v2 @kind long;
  #L1b39a4.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b39aa.  v1:= temp;
  #L1b39ac.  v1:= v1 ^< 21;
  #L1b39b0.  v0:= v0 ^~ v1 @kind int;
  #L1b39b2.  if v0 >= 0 then goto L1b39c0;
  #L1b39b6.  v1:= -2080896I;
  #L1b39bc.  v0:= v0 ^~ v1 @kind int;
  #L1b39be.  goto L1b3a3a;
  #L1b39c0.  v4:= v6 + v2 @kind long;
  #L1b39c4.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b39ca.  v1:= temp;
  #L1b39cc.  v6:= v1 ^< 28;
  #L1b39d0.  v0:= v0 ^~ v6 @kind int;
  #L1b39d2.  v6:= 266354560I;
  #L1b39d8.  v0:= v0 ^~ v6 @kind int;
  #L1b39da.  if v1 >= 0 then goto L1b399c;
  #L1b39de.  v6:= v4 + v2 @kind long;
  #L1b39e2.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b39e8.  v1:= temp;
  #L1b39ea.  if v1 >= 0 then goto L1b3a3a;
  #L1b39ee.  v4:= v6 + v2 @kind long;
  #L1b39f2.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b39f8.  v1:= temp;
  #L1b39fa.  if v1 >= 0 then goto L1b399c;
  #L1b39fe.  v6:= v4 + v2 @kind long;
  #L1b3a02.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3a08.  v1:= temp;
  #L1b3a0a.  if v1 >= 0 then goto L1b3a3a;
  #L1b3a0e.  v4:= v6 + v2 @kind long;
  #L1b3a12.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3a18.  v1:= temp;
  #L1b3a1a.  if v1 >= 0 then goto L1b399c;
  #L1b3a1e.  v6:= v4 + v2 @kind long;
  #L1b3a22.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3a28.  v1:= temp;
  #L1b3a2a.  if v1 >= 0 then goto L1b3a3a;
  #L1b3a2e.  call temp:= `f`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.f:()J` @kind virtual;
  #L1b3a34.  v0:= temp @kind wide;
  #L1b3a36.  v1:= (`int`) v0 @kind l2i;
  #L1b3a38.  return v1;
  #L1b3a3a.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v6 @kind wide;
  #L1b3a3e.  return v0;
}
procedure `long` `readRawVarint64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v11 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b3e8c.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3e90.  v2:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b3e94.  v4:= lcmp(v2, v0);
  #L1b3e98.  if v4 != 0 then goto L1b3ea0;
  #L1b3e9c.  goto L1b4022;
  #L1b3ea0.  v2:= 1L;
  #L1b3ea4.  v4:= v0 + v2 @kind long;
  #L1b3ea8.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3eae.  v0:= temp;
  #L1b3eb0.  if v0 < 0 then goto L1b3ebc;
  #L1b3eb4.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v4 @kind wide;
  #L1b3eb8.  v0:= (`long`) v0 @kind i2l;
  #L1b3eba.  return v0 @kind wide;
  #L1b3ebc.  v6:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L1b3ec0.  v6:= v6 - v4 @kind long;
  #L1b3ec2.  v8:= 9L;
  #L1b3ec6.  v1:= lcmp(v6, v8);
  #L1b3eca.  if v1 >= 0 then goto L1b3ed2;
  #L1b3ece.  goto L1b4022;
  #L1b3ed2.  v6:= v4 + v2 @kind long;
  #L1b3ed6.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3edc.  v1:= temp;
  #L1b3ede.  v1:= v1 ^< 7;
  #L1b3ee2.  v0:= v0 ^~ v1 @kind int;
  #L1b3ee4.  if v0 >= 0 then goto L1b3ef2;
  #L1b3ee8.  v0:= v0 ^~ -128;
  #L1b3eec.  v0:= (`long`) v0 @kind i2l;
  #L1b3eee.  goto L1b402e;
  #L1b3ef2.  v4:= v6 + v2 @kind long;
  #L1b3ef6.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3efc.  v1:= temp;
  #L1b3efe.  v1:= v1 ^< 14;
  #L1b3f02.  v0:= v0 ^~ v1 @kind int;
  #L1b3f04.  if v0 < 0 then goto L1b3f14;
  #L1b3f08.  v0:= v0 ^~ 16256;
  #L1b3f0c.  v0:= (`long`) v0 @kind i2l;
  #L1b3f0e.  v6:= v4 @kind wide;
  #L1b3f10.  goto L1b402e;
  #L1b3f14.  v6:= v4 + v2 @kind long;
  #L1b3f18.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3f1e.  v1:= temp;
  #L1b3f20.  v1:= v1 ^< 21;
  #L1b3f24.  v0:= v0 ^~ v1 @kind int;
  #L1b3f26.  if v0 >= 0 then goto L1b3f34;
  #L1b3f2a.  v1:= -2080896I;
  #L1b3f30.  v0:= v0 ^~ v1 @kind int;
  #L1b3f32.  goto L1b3eec;
  #L1b3f34.  v0:= (`long`) v0 @kind i2l;
  #L1b3f36.  v4:= v6 + v2 @kind long;
  #L1b3f3a.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3f40.  v6:= temp;
  #L1b3f42.  v6:= (`long`) v6 @kind i2l;
  #L1b3f44.  v8:= 28I;
  #L1b3f48.  v6:= v6 ^< v8 @kind long;
  #L1b3f4a.  v0:= v0 ^~ v6 @kind long;
  #L1b3f4c.  v6:= 0L;
  #L1b3f50.  v8:= lcmp(v0, v6);
  #L1b3f54.  if v8 < 0 then goto L1b3f62;
  #L1b3f58.  v2:= 266354560L;
  #L1b3f5e.  v0:= v0 ^~ v2 @kind long;
  #L1b3f60.  goto L1b3f0e;
  #L1b3f62.  v8:= v4 + v2 @kind long;
  #L1b3f66.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3f6c.  v4:= temp;
  #L1b3f6e.  v4:= (`long`) v4 @kind i2l;
  #L1b3f70.  v10:= 35I;
  #L1b3f74.  v4:= v4 ^< v10 @kind long;
  #L1b3f76.  v0:= v0 ^~ v4 @kind long;
  #L1b3f78.  v4:= lcmp(v0, v6);
  #L1b3f7c.  if v4 >= 0 then goto L1b3f90;
  #L1b3f80.  v2:= -34093383808L;
  #L1b3f8a.  v0:= v0 ^~ v2 @kind long;
  #L1b3f8c.  v6:= v8 @kind wide;
  #L1b3f8e.  goto L1b402e;
  #L1b3f90.  v4:= v8 + v2 @kind long;
  #L1b3f94.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3f9a.  v8:= temp;
  #L1b3f9c.  v8:= (`long`) v8 @kind i2l;
  #L1b3f9e.  v10:= 42I;
  #L1b3fa2.  v8:= v8 ^< v10 @kind long;
  #L1b3fa4.  v0:= v0 ^~ v8 @kind long;
  #L1b3fa6.  v8:= lcmp(v0, v6);
  #L1b3faa.  if v8 < 0 then goto L1b3fba;
  #L1b3fae.  v2:= 4363953127296L;
  #L1b3fb8.  goto L1b3f5e;
  #L1b3fba.  v8:= v4 + v2 @kind long;
  #L1b3fbe.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3fc4.  v4:= temp;
  #L1b3fc6.  v4:= (`long`) v4 @kind i2l;
  #L1b3fc8.  v10:= 49I;
  #L1b3fcc.  v4:= v4 ^< v10 @kind long;
  #L1b3fce.  v0:= v0 ^~ v4 @kind long;
  #L1b3fd0.  v4:= lcmp(v0, v6);
  #L1b3fd4.  if v4 >= 0 then goto L1b3fe4;
  #L1b3fd8.  v2:= -558586000294016L;
  #L1b3fe2.  goto L1b3f8a;
  #L1b3fe4.  v4:= v8 + v2 @kind long;
  #L1b3fe8.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b3fee.  v8:= temp;
  #L1b3ff0.  v8:= (`long`) v8 @kind i2l;
  #L1b3ff2.  v10:= 56I;
  #L1b3ff6.  v8:= v8 ^< v10 @kind long;
  #L1b3ff8.  v0:= v0 ^~ v8 @kind long;
  #L1b3ffa.  v8:= 71499008037633920L;
  #L1b4004.  v0:= v0 ^~ v8 @kind long;
  #L1b4006.  v8:= lcmp(v0, v6);
  #L1b400a.  if v8 >= 0 then goto L1b3f0e;
  #L1b400e.  v2:= v2 + v4 @kind long;
  #L1b4010.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1b4016.  v4:= temp;
  #L1b4018.  v4:= (`long`) v4 @kind i2l;
  #L1b401a.  v8:= lcmp(v4, v6);
  #L1b401e.  if v8 >= 0 then goto L1b402c;
  #L1b4022.  call temp:= `f`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.f:()J` @kind virtual;
  #L1b4028.  v0:= temp @kind wide;
  #L1b402a.  return v0 @kind wide;
  #L1b402c.  v6:= v2 @kind wide;
  #L1b402e.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v6 @kind wide;
  #L1b4032.  return v0 @kind wide;
}
procedure `int` `readSFixed32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readSFixed32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3a50.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @kind virtual;
  #L1b3a56.  v0:= temp;
  #L1b3a58.  return v0;
}
procedure `long` `readSFixed64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readSFixed64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b4090.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @kind virtual;
  #L1b4096.  v0:= temp @kind wide;
  #L1b4098.  return v0 @kind wide;
}
procedure `int` `readSInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readSInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3a6c.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b3a72.  v0:= temp;
  #L1b3a74.  call temp:= `decodeZigZag32`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag32:(I)I` @kind static;
  #L1b3a7a.  v0:= temp;
  #L1b3a7c.  return v0;
}
procedure `long` `readSInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readSInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b40ac.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @kind virtual;
  #L1b40b2.  v0:= temp @kind wide;
  #L1b40b4.  call temp:= `decodeZigZag64`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag64:(J)J` @kind static;
  #L1b40ba.  v0:= temp @kind wide;
  #L1b40bc.  return v0 @kind wide;
}
procedure `java.lang.String` `readString`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v11 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b3b18.  call temp:= `readRawVarint32`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b3b1e.  v0:= temp;
  #L1b3b20.  if v0 <= 0 then goto L1b3b62;
  #L1b3b24.  call temp:= `h`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L1b3b2a.  v1:= temp;
  #L1b3b2c.  if v0 > v1 then goto L1b3b62;
  #L1b3b30.  v1:= new `byte`[v0];
  #L1b3b34.  v2:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3b38.  v5:= 0L;
  #L1b3b3c.  v9:= (`long`) v0 @kind i2l;
  #L1b3b3e.  v4:= v1 @kind object;
  #L1b3b40.  v7:= v9 @kind wide;
  #L1b3b42.  call `n`(v2, v4, v5, v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L1b3b48.  v0:= new `java.lang.String`;
  #L1b3b4c.  v2:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L1b3b50.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L1b3b56.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3b5a.  v1:= v1 + v9 @kind long;
  #L1b3b5c.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v1 @kind wide;
  #L1b3b60.  return v0 @kind object;
  #L1b3b62.  if v0 != 0 then goto L1b3b6c;
  #L1b3b66.  v0:= "" @kind object;
  #L1b3b6a.  return v0 @kind object;
  #L1b3b6c.  if v0 >= 0 then goto L1b3b7a;
  #L1b3b70.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3b76.  v0:= temp @kind object;
  #L1b3b78.  throw v0;
  #L1b3b7a.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3b80.  v0:= temp @kind object;
  #L1b3b82.  throw v0;
}
procedure `java.lang.String` `readStringRequireUtf8`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readStringRequireUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b3b94.  call temp:= `readRawVarint32`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b3b9a.  v0:= temp;
  #L1b3b9c.  if v0 <= 0 then goto L1b3bd2;
  #L1b3ba0.  call temp:= `h`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L1b3ba6.  v1:= temp;
  #L1b3ba8.  if v0 > v1 then goto L1b3bd2;
  #L1b3bac.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3bb0.  call temp:= `d`(v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.d:(J)I` @kind direct;
  #L1b3bb6.  v1:= temp;
  #L1b3bb8.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L1b3bbc.  call temp:= `g`(v2, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.g:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @kind static;
  #L1b3bc2.  v1:= temp @kind object;
  #L1b3bc4.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b3bc8.  v4:= (`long`) v0 @kind i2l;
  #L1b3bca.  v2:= v2 + v4 @kind long;
  #L1b3bcc.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v2 @kind wide;
  #L1b3bd0.  return v1 @kind object;
  #L1b3bd2.  if v0 != 0 then goto L1b3bdc;
  #L1b3bd6.  v0:= "" @kind object;
  #L1b3bda.  return v0 @kind object;
  #L1b3bdc.  if v0 > 0 then goto L1b3bea;
  #L1b3be0.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3be6.  v0:= temp @kind object;
  #L1b3be8.  throw v0;
  #L1b3bea.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3bf0.  v0:= temp @kind object;
  #L1b3bf2.  throw v0;
}
procedure `int` `readTag`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readTag:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3a90.  call temp:= `isAtEnd`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.isAtEnd:()Z` @kind virtual;
  #L1b3a96.  v0:= temp;
  #L1b3a98.  if v0 == 0 then goto L1b3aa4;
  #L1b3a9c.  v0:= 0I;
  #L1b3a9e.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @type ^`int` := v0;
  #L1b3aa2.  return v0;
  #L1b3aa4.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b3aaa.  v0:= temp;
  #L1b3aac.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @type ^`int` := v0;
  #L1b3ab0.  call temp:= `getTagFieldNumber`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L1b3ab6.  v0:= temp;
  #L1b3ab8.  if v0 == 0 then goto L1b3ac2;
  #L1b3abc.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @type ^`int`;
  #L1b3ac0.  return v0;
  #L1b3ac2.  call temp:= `b`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.b:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b3ac8.  v0:= temp @kind object;
  #L1b3aca.  throw v0;
}
procedure `int` `readUInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readUInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3adc.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b3ae2.  v0:= temp;
  #L1b3ae4.  return v0;
}
procedure `long` `readUInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readUInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b40d0.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @kind virtual;
  #L1b40d6.  v0:= temp @kind wide;
  #L1b40d8.  return v0 @kind wide;
}
procedure `void` `readUnknownGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this, `int` v2 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readUnknownGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b4270.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L1b4276.  v0:= temp @kind object;
  #L1b4278.  call `readGroup`(v1, v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @kind virtual;
  #L1b427e.  return @kind void;
}
procedure `void` `resetSizeCounter`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.resetSizeCounter:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b42dc.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b42e0.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @type ^`long` := v0 @kind wide;
  #L1b42e4.  return @kind void;
}
procedure `boolean` `skipField`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipField:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b3390.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L1b3396.  v0:= temp;
  #L1b3398.  v1:= 1I;
  #L1b339a.  if v0 == 0 then goto L1b340a;
  #L1b339e.  if v0 == v1 then goto L1b33fe;
  #L1b33a2.  v2:= 2I;
  #L1b33a4.  if v0 == v2 then goto L1b33ee;
  #L1b33a8.  v2:= 3I;
  #L1b33aa.  v3:= 4I;
  #L1b33ac.  if v0 == v2 then goto L1b33d0;
  #L1b33b0.  if v0 == v3 then goto L1b33cc;
  #L1b33b4.  v5:= 5I;
  #L1b33b6.  if v0 != v5 then goto L1b33c2;
  #L1b33ba.  call `skipRawBytes`(v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipRawBytes:(I)V` @kind virtual;
  #L1b33c0.  return v1;
  #L1b33c2.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L1b33c8.  v5:= temp @kind object;
  #L1b33ca.  throw v5;
  #L1b33cc.  v5:= 0I;
  #L1b33ce.  return v5;
  #L1b33d0.  call `skipMessage`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipMessage:()V` @kind virtual;
  #L1b33d6.  call temp:= `getTagFieldNumber`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L1b33dc.  v5:= temp;
  #L1b33de.  call temp:= `a`(v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1b33e4.  v5:= temp;
  #L1b33e6.  call `checkLastTagWas`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L1b33ec.  return v1;
  #L1b33ee.  call temp:= `readRawVarint32`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L1b33f4.  v5:= temp;
  #L1b33f6.  call `skipRawBytes`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipRawBytes:(I)V` @kind virtual;
  #L1b33fc.  return v1;
  #L1b33fe.  v5:= 8I;
  #L1b3402.  call `skipRawBytes`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipRawBytes:(I)V` @kind virtual;
  #L1b3408.  return v1;
  #L1b340a.  call `i`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.i:()V` @kind direct;
  #L1b3410.  return v1;
}
procedure `boolean` `skipField`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this, `int` v5 , `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipField:(ILcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b3424.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L1b342a.  v0:= temp;
  #L1b342c.  v1:= 1I;
  #L1b342e.  if v0 == 0 then goto L1b34c8;
  #L1b3432.  if v0 == v1 then goto L1b34b2;
  #L1b3436.  v2:= 2I;
  #L1b3438.  if v0 == v2 then goto L1b349c;
  #L1b343c.  v2:= 3I;
  #L1b343e.  v3:= 4I;
  #L1b3440.  if v0 == v2 then goto L1b3472;
  #L1b3444.  if v0 == v3 then goto L1b346e;
  #L1b3448.  v2:= 5I;
  #L1b344a.  if v0 != v2 then goto L1b3464;
  #L1b344e.  call temp:= `readRawLittleEndian32`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @kind virtual;
  #L1b3454.  v0:= temp;
  #L1b3456.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L1b345c.  call `writeFixed32NoTag`(v6, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeFixed32NoTag:(I)V` @kind virtual;
  #L1b3462.  return v1;
  #L1b3464.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L1b346a.  v5:= temp @kind object;
  #L1b346c.  throw v5;
  #L1b346e.  v5:= 0I;
  #L1b3470.  return v5;
  #L1b3472.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L1b3478.  call `skipMessage`(v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipMessage:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)V` @kind virtual;
  #L1b347e.  call temp:= `getTagFieldNumber`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L1b3484.  v5:= temp;
  #L1b3486.  call temp:= `a`(v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1b348c.  v5:= temp;
  #L1b348e.  call `checkLastTagWas`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L1b3494.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L1b349a.  return v1;
  #L1b349c.  call temp:= `readBytes`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1b34a2.  v0:= temp @kind object;
  #L1b34a4.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L1b34aa.  call `writeBytesNoTag`(v6, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeBytesNoTag:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind virtual;
  #L1b34b0.  return v1;
  #L1b34b2.  call temp:= `readRawLittleEndian64`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @kind virtual;
  #L1b34b8.  v2:= temp @kind wide;
  #L1b34ba.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L1b34c0.  call `writeFixed64NoTag`(v6, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeFixed64NoTag:(J)V` @kind virtual;
  #L1b34c6.  return v1;
  #L1b34c8.  call temp:= `readInt64`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readInt64:()J` @kind virtual;
  #L1b34ce.  v2:= temp @kind wide;
  #L1b34d0.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L1b34d6.  call `writeUInt64NoTag`(v6, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeUInt64NoTag:(J)V` @kind virtual;
  #L1b34dc.  return v1;
}
procedure `void` `skipMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipMessage:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b42f8.  call temp:= `readTag`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readTag:()I` @kind virtual;
  #L1b42fe.  v0:= temp;
  #L1b4300.  if v0 == 0 then goto L1b4310;
  #L1b4304.  call temp:= `skipField`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipField:(I)Z` @kind virtual;
  #L1b430a.  v0:= temp;
  #L1b430c.  if v0 != 0 then goto L1b42f8;
  #L1b4310.  return @kind void;
}
procedure `void` `skipMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipMessage:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b4324.  call temp:= `readTag`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readTag:()I` @kind virtual;
  #L1b432a.  v0:= temp;
  #L1b432c.  if v0 == 0 then goto L1b433c;
  #L1b4330.  call temp:= `skipField`(v1, v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipField:(ILcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)Z` @kind virtual;
  #L1b4336.  v0:= temp;
  #L1b4338.  if v0 != 0 then goto L1b4324;
  #L1b433c.  return @kind void;
}
procedure `void` `skipRawBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipRawBytes:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b4350.  if v5 < 0 then goto L1b436e;
  #L1b4354.  call temp:= `h`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L1b435a.  v0:= temp;
  #L1b435c.  if v5 > v0 then goto L1b436e;
  #L1b4360.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L1b4364.  v2:= (`long`) v5 @kind i2l;
  #L1b4366.  v0:= v0 + v2 @kind long;
  #L1b4368.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v0 @kind wide;
  #L1b436c.  return @kind void;
  #L1b436e.  if v5 >= 0 then goto L1b437c;
  #L1b4372.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b4378.  v5:= temp @kind object;
  #L1b437a.  throw v5;
  #L1b437c.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b4382.  v5:= temp @kind object;
  #L1b4384.  throw v5;
}
