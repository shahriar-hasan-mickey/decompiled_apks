record `com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a` @kind class @AccessFlag FINAL extends `java.io.FilterInputStream` @kind class {
  `int` `com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a` v0 @kind this, `java.io.InputStream` v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite$Builder$a;.<init>:(Ljava/io/InputStream;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1a8da8.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1a8dae.  v0.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int` := v2;
  #L1a8db2.  return @kind void;
}
procedure `int` `available`(`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite$Builder$a;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a8cc8.  call temp:= `available`(v2) @signature `Ljava/io/FilterInputStream;.available:()I` @kind super;
  #L1a8cce.  v0:= temp;
  #L1a8cd0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int`;
  #L1a8cd4.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1a8cda.  v0:= temp;
  #L1a8cdc.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite$Builder$a;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a8cf0.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int`;
  #L1a8cf4.  if v0 > 0 then goto L1a8cfc;
  #L1a8cf8.  v0:= -1I;
  #L1a8cfa.  return v0;
  #L1a8cfc.  call temp:= `read`(v2) @signature `Ljava/io/FilterInputStream;.read:()I` @kind super;
  #L1a8d02.  v0:= temp;
  #L1a8d04.  if v0 < 0 then goto L1a8d14;
  #L1a8d08.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int`;
  #L1a8d0c.  v1:= v1 + -1;
  #L1a8d10.  v2.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int` := v1;
  #L1a8d14.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite$Builder$a;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a8d28.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int`;
  #L1a8d2c.  if v0 > 0 then goto L1a8d34;
  #L1a8d30.  v2:= -1I;
  #L1a8d32.  return v2;
  #L1a8d34.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1a8d3a.  v4:= temp;
  #L1a8d3c.  call temp:= `read`(v1, v2, v3, v4) @signature `Ljava/io/FilterInputStream;.read:([BII)I` @kind super;
  #L1a8d42.  v2:= temp;
  #L1a8d44.  if v2 < 0 then goto L1a8d52;
  #L1a8d48.  v3:= v1.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int`;
  #L1a8d4c.  v3:= v3 - v2 @kind int;
  #L1a8d4e.  v1.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int` := v3;
  #L1a8d52.  return v2;
}
procedure `long` `skip`(`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a` v3 @kind this, `long` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite$Builder$a;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a8d64.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int`;
  #L1a8d68.  v0:= (`long`) v0 @kind i2l;
  #L1a8d6a.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1a8d70.  v4:= temp @kind wide;
  #L1a8d72.  call temp:= `skip`(v3, v4) @signature `Ljava/io/FilterInputStream;.skip:(J)J` @kind super;
  #L1a8d78.  v4:= temp @kind wide;
  #L1a8d7a.  v0:= 0L;
  #L1a8d7e.  v2:= lcmp(v4, v0);
  #L1a8d82.  if v2 < 0 then goto L1a8d94;
  #L1a8d86.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int`;
  #L1a8d8a.  v0:= (`long`) v0 @kind i2l;
  #L1a8d8c.  v0:= v0 - v4 @kind long;
  #L1a8d8e.  v1:= (`int`) v0 @kind l2i;
  #L1a8d90.  v3.`com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$a.a` @type ^`int` := v1;
  #L1a8d94.  return v4 @kind wide;
}
