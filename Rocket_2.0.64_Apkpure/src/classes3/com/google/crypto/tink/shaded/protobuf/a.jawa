record `com.google.crypto.tink.shaded.protobuf.a` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractList` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList` @kind interface {
  `boolean` `com.google.crypto.tink.shaded.protobuf.a.a` @AccessFlag PRIVATE;
}
global `int` `@@com.google.crypto.tink.shaded.protobuf.a.DEFAULT_CAPACITY` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1aa0cc.  call `<init>`(v1) @signature `Ljava/util/AbstractList;.<init>:()V` @kind direct;
  #L1aa0d2.  v0:= 1I;
  #L1aa0d4.  v1.`com.google.crypto.tink.shaded.protobuf.a.a` @type ^`boolean` := v0 @kind boolean;
  #L1aa0d8.  return @kind void;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L1aa0ec.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1aa0f2.  call `add`(v0, v1, v2) @signature `Ljava/util/AbstractList;.add:(ILjava/lang/Object;)V` @kind super;
  #L1aa0f8.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L1a9ef8.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1a9efe.  call temp:= `add`(v0, v1) @signature `Ljava/util/AbstractList;.add:(Ljava/lang/Object;)Z` @kind super;
  #L1a9f04.  v1:= temp;
  #L1a9f06.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L1a9f18.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1a9f1e.  call temp:= `addAll`(v0, v1, v2) @signature `Ljava/util/AbstractList;.addAll:(ILjava/util/Collection;)Z` @kind super;
  #L1a9f24.  v1:= temp;
  #L1a9f26.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L1a9f38.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1a9f3e.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/AbstractList;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L1a9f44.  v1:= temp;
  #L1a9f46.  return v1;
}
procedure `void` `clear`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L1aa10c.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1aa112.  call `clear`(v0) @signature `Ljava/util/AbstractList;.clear:()V` @kind super;
  #L1aa118.  return @kind void;
}
procedure `void` `ensureIsMutable`(`com.google.crypto.tink.shaded.protobuf.a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1aa12c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.a.a` @type ^`boolean` @kind boolean;
  #L1aa130.  if v0 == 0 then goto L1aa136;
  #L1aa134.  return @kind void;
  #L1aa136.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1aa13a.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L1aa140.  throw v0;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.a` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a9f58.  v0:= 1I;
  #L1a9f5a.  if v7 != v6 then goto L1a9f60;
  #L1a9f5e.  return v0;
  #L1a9f60.  v1:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L1a9f64.  v2:= 0I;
  #L1a9f66.  if v1 != 0 then goto L1a9f6c;
  #L1a9f6a.  return v2;
  #L1a9f6c.  v1:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L1a9f70.  if v1 != 0 then goto L1a9f7e;
  #L1a9f74.  call temp:= `equals`(v6, v7) @signature `Ljava/util/AbstractList;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L1a9f7a.  v7:= temp;
  #L1a9f7c.  return v7;
  #L1a9f7e.  v7:= (`java.util.List`) v7 @kind object;
  #L1a9f82.  call temp:= `size`(v6) @signature `Ljava/util/AbstractList;.size:()I` @kind virtual;
  #L1a9f88.  v1:= temp;
  #L1a9f8a.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a9f90.  v3:= temp;
  #L1a9f92.  if v1 == v3 then goto L1a9f98;
  #L1a9f96.  return v2;
  #L1a9f98.  v3:= 0I;
  #L1a9f9a.  if v3 >= v1 then goto L1a9fc2;
  #L1a9f9e.  call temp:= `get`(v6, v3) @signature `Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1a9fa4.  v4:= temp @kind object;
  #L1a9fa6.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a9fac.  v5:= temp @kind object;
  #L1a9fae.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a9fb4.  v4:= temp;
  #L1a9fb6.  if v4 != 0 then goto L1a9fbc;
  #L1a9fba.  return v2;
  #L1a9fbc.  v3:= v3 + 1;
  #L1a9fc0.  goto L1a9f9a;
  #L1a9fc2.  return v0;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.a` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aa04c.  call temp:= `size`(v4) @signature `Ljava/util/AbstractList;.size:()I` @kind virtual;
  #L1aa052.  v0:= temp;
  #L1aa054.  v1:= 1I;
  #L1aa056.  v2:= 0I;
  #L1aa058.  if v2 >= v0 then goto L1aa078;
  #L1aa05c.  v1:= v1 * 31;
  #L1aa060.  call temp:= `get`(v4, v2) @signature `Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1aa066.  v3:= temp @kind object;
  #L1aa068.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1aa06e.  v3:= temp;
  #L1aa070.  v1:= v1 + v3 @kind int;
  #L1aa072.  v2:= v2 + 1;
  #L1aa076.  goto L1aa058;
  #L1aa078.  return v1;
}
procedure `boolean` `isModifiable`(`com.google.crypto.tink.shaded.protobuf.a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.isModifiable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9fd4.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.a.a` @type ^`boolean` @kind boolean;
  #L1a9fd8.  return v0;
}
procedure `void` `makeImmutable`(`com.google.crypto.tink.shaded.protobuf.a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.makeImmutable:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1aa154.  v0:= 0I;
  #L1aa156.  v1.`com.google.crypto.tink.shaded.protobuf.a.a` @type ^`boolean` := v0 @kind boolean;
  #L1aa15a.  return @kind void;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1aa08c.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1aa092.  call temp:= `remove`(v0, v1) @signature `Ljava/util/AbstractList;.remove:(I)Ljava/lang/Object;` @kind super;
  #L1aa098.  v1:= temp @kind object;
  #L1aa09a.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L1a9fec.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1a9ff2.  call temp:= `remove`(v0, v1) @signature `Ljava/util/AbstractList;.remove:(Ljava/lang/Object;)Z` @kind super;
  #L1a9ff8.  v1:= temp;
  #L1a9ffa.  return v1;
}
procedure `boolean` `removeAll`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L1aa00c.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1aa012.  call temp:= `removeAll`(v0, v1) @signature `Ljava/util/AbstractList;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L1aa018.  v1:= temp;
  #L1aa01a.  return v1;
}
procedure `boolean` `retainAll`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L1aa02c.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1aa032.  call temp:= `retainAll`(v0, v1) @signature `Ljava/util/AbstractList;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L1aa038.  v1:= temp;
  #L1aa03a.  return v1;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1aa0ac.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1aa0b2.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/AbstractList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L1aa0b8.  v1:= temp @kind object;
  #L1aa0ba.  return v1 @kind object;
}
