record `com.google.crypto.tink.shaded.protobuf.u0$c` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.u0$b` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.u0$c` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d8c10.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.<init>:()V` @kind direct;
  #L1d8c16.  return @kind void;
}
procedure `int` `p`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.p:([BII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1d87ec.  if v2 >= v3 then goto L1d87fe;
  #L1d87f0.  v0:= v1[v2] @kind byte;
  #L1d87f4.  if v0 < 0 then goto L1d87fe;
  #L1d87f8.  v2:= v2 + 1;
  #L1d87fc.  goto L1d87ec;
  #L1d87fe.  if v2 < v3 then goto L1d8806;
  #L1d8802.  v1:= 0I;
  #L1d8804.  goto L1d880e;
  #L1d8806.  call temp:= `q`(v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.q:([BII)I` @kind static;
  #L1d880c.  v1:= temp;
  #L1d880e.  return v1;
}
procedure `int` `q`(`byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.q:([BII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d895c.  if v7 < v8 then goto L1d8964;
  #L1d8960.  v6:= 0I;
  #L1d8962.  return v6;
  #L1d8964.  v0:= v7 + 1;
  #L1d8968.  v7:= v6[v7] @kind byte;
  #L1d896c.  if v7 >= 0 then goto L1d8a30;
  #L1d8970.  v1:= -32I;
  #L1d8974.  v2:= -1I;
  #L1d8976.  v3:= -65I;
  #L1d897a.  if v7 >= v1 then goto L1d899a;
  #L1d897e.  if v0 < v8 then goto L1d8984;
  #L1d8982.  return v7;
  #L1d8984.  v1:= -62I;
  #L1d8988.  if v7 < v1 then goto L1d8998;
  #L1d898c.  v7:= v0 + 1;
  #L1d8990.  v0:= v6[v0] @kind byte;
  #L1d8994.  if v0 <= v3 then goto L1d895c;
  #L1d8998.  return v2;
  #L1d899a.  v4:= -16I;
  #L1d899e.  if v7 >= v4 then goto L1d89e6;
  #L1d89a2.  v4:= v8 + -1;
  #L1d89a6.  if v0 < v4 then goto L1d89b4;
  #L1d89aa.  call temp:= `c`(v6, v0, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.c:([BII)I` @kind static;
  #L1d89b0.  v6:= temp;
  #L1d89b2.  return v6;
  #L1d89b4.  v4:= v0 + 1;
  #L1d89b8.  v0:= v6[v0] @kind byte;
  #L1d89bc.  if v0 > v3 then goto L1d89e4;
  #L1d89c0.  v5:= -96I;
  #L1d89c4.  if v7 != v1 then goto L1d89cc;
  #L1d89c8.  if v0 < v5 then goto L1d89e4;
  #L1d89cc.  v1:= -19I;
  #L1d89d0.  if v7 != v1 then goto L1d89d8;
  #L1d89d4.  if v0 >= v5 then goto L1d89e4;
  #L1d89d8.  v7:= v4 + 1;
  #L1d89dc.  v0:= v6[v4] @kind byte;
  #L1d89e0.  if v0 <= v3 then goto L1d895c;
  #L1d89e4.  return v2;
  #L1d89e6.  v1:= v8 + -2;
  #L1d89ea.  if v0 < v1 then goto L1d89f8;
  #L1d89ee.  call temp:= `c`(v6, v0, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.c:([BII)I` @kind static;
  #L1d89f4.  v6:= temp;
  #L1d89f6.  return v6;
  #L1d89f8.  v1:= v0 + 1;
  #L1d89fc.  v0:= v6[v0] @kind byte;
  #L1d8a00.  if v0 > v3 then goto L1d8a2e;
  #L1d8a04.  v7:= v7 ^< 28;
  #L1d8a08.  v0:= v0 + 112;
  #L1d8a0c.  v7:= v7 + v0 @kind int;
  #L1d8a0e.  v7:= v7 ^> 30;
  #L1d8a12.  if v7 != 0 then goto L1d8a2e;
  #L1d8a16.  v7:= v1 + 1;
  #L1d8a1a.  v0:= v6[v1] @kind byte;
  #L1d8a1e.  if v0 > v3 then goto L1d8a2e;
  #L1d8a22.  v0:= v7 + 1;
  #L1d8a26.  v7:= v6[v7] @kind byte;
  #L1d8a2a.  if v7 <= v3 then goto L1d8a30;
  #L1d8a2e.  return v2;
  #L1d8a30.  v7:= v0;
  #L1d8a32.  goto L1d895c;
}
procedure `java.lang.String` `b`(`com.google.crypto.tink.shaded.protobuf.u0$c` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.b:([BII)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d8a44.  v0:= v13 ^| v14 @kind int;
  #L1d8a48.  v1:= length @variable v12;
  #L1d8a4a.  v1:= v1 - v13 @kind int;
  #L1d8a4c.  v1:= v1 - v14 @kind int;
  #L1d8a4e.  v0:= v0 ^| v1 @kind int;
  #L1d8a50.  v1:= 0I;
  #L1d8a52.  v2:= 1I;
  #L1d8a54.  if v0 < 0 then goto L1d8b9e;
  #L1d8a58.  v0:= v13 + v14 @kind int;
  #L1d8a5c.  v14:= new `char`[v14];
  #L1d8a60.  v3:= 0I;
  #L1d8a62.  if v13 >= v0 then goto L1d8a8a;
  #L1d8a66.  v4:= v12[v13] @kind byte;
  #L1d8a6a.  call temp:= `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d8a70.  v5:= temp;
  #L1d8a72.  if v5 != 0 then goto L1d8a78;
  #L1d8a76.  goto L1d8a8a;
  #L1d8a78.  v13:= v13 + 1;
  #L1d8a7c.  v5:= v3 + 1;
  #L1d8a80.  call `c`(v4, v14, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d8a86.  v3:= v5;
  #L1d8a88.  goto L1d8a62;
  #L1d8a8a.  v8:= v3;
  #L1d8a8c.  if v13 >= v0 then goto L1d8b92;
  #L1d8a90.  v3:= v13 + 1;
  #L1d8a94.  v13:= v12[v13] @kind byte;
  #L1d8a98.  call temp:= `b`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d8a9e.  v4:= temp;
  #L1d8aa0.  if v4 == 0 then goto L1d8adc;
  #L1d8aa4.  v4:= v8 + 1;
  #L1d8aa8.  call `c`(v13, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d8aae.  if v3 >= v0 then goto L1d8ad6;
  #L1d8ab2.  v13:= v12[v3] @kind byte;
  #L1d8ab6.  call temp:= `b`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d8abc.  v5:= temp;
  #L1d8abe.  if v5 != 0 then goto L1d8ac4;
  #L1d8ac2.  goto L1d8ad6;
  #L1d8ac4.  v3:= v3 + 1;
  #L1d8ac8.  v5:= v4 + 1;
  #L1d8acc.  call `c`(v13, v14, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d8ad2.  v4:= v5;
  #L1d8ad4.  goto L1d8aae;
  #L1d8ad6.  v13:= v3;
  #L1d8ad8.  v8:= v4;
  #L1d8ada.  goto L1d8a8c;
  #L1d8adc.  call temp:= `d`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.d:(B)Z` @kind static;
  #L1d8ae2.  v4:= temp;
  #L1d8ae4.  if v4 == 0 then goto L1d8b0e;
  #L1d8ae8.  if v3 >= v0 then goto L1d8b04;
  #L1d8aec.  v4:= v3 + 1;
  #L1d8af0.  v3:= v12[v3] @kind byte;
  #L1d8af4.  v5:= v8 + 1;
  #L1d8af8.  call `e`(v13, v3, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.e:(BB[CI)V` @kind static;
  #L1d8afe.  v13:= v4;
  #L1d8b00.  v8:= v5;
  #L1d8b02.  goto L1d8a8c;
  #L1d8b04.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d8b0a.  v12:= temp @kind object;
  #L1d8b0c.  throw v12;
  #L1d8b0e.  call temp:= `f`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.f:(B)Z` @kind static;
  #L1d8b14.  v4:= temp;
  #L1d8b16.  if v4 == 0 then goto L1d8b4c;
  #L1d8b1a.  v4:= v0 + -1;
  #L1d8b1e.  if v3 >= v4 then goto L1d8b42;
  #L1d8b22.  v4:= v3 + 1;
  #L1d8b26.  v3:= v12[v3] @kind byte;
  #L1d8b2a.  v5:= v4 + 1;
  #L1d8b2e.  v4:= v12[v4] @kind byte;
  #L1d8b32.  v6:= v8 + 1;
  #L1d8b36.  call `g`(v13, v3, v4, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.g:(BBB[CI)V` @kind static;
  #L1d8b3c.  v13:= v5;
  #L1d8b3e.  v8:= v6;
  #L1d8b40.  goto L1d8a8c;
  #L1d8b42.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d8b48.  v12:= temp @kind object;
  #L1d8b4a.  throw v12;
  #L1d8b4c.  v4:= v0 + -2;
  #L1d8b50.  if v3 >= v4 then goto L1d8b88;
  #L1d8b54.  v4:= v3 + 1;
  #L1d8b58.  v5:= v12[v3] @kind byte;
  #L1d8b5c.  v3:= v4 + 1;
  #L1d8b60.  v6:= v12[v4] @kind byte;
  #L1d8b64.  v9:= v3 + 1;
  #L1d8b68.  v7:= v12[v3] @kind byte;
  #L1d8b6c.  v10:= v8 + 1;
  #L1d8b70.  v3:= v13;
  #L1d8b72.  v4:= v5;
  #L1d8b74.  v5:= v6;
  #L1d8b76.  v6:= v7;
  #L1d8b78.  v7:= v14 @kind object;
  #L1d8b7a.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.a:(BBBB[CI)V` @kind static;
  #L1d8b80.  v10:= v10 + v2 @kind int;
  #L1d8b82.  v13:= v9;
  #L1d8b84.  v8:= v10;
  #L1d8b86.  goto L1d8a8c;
  #L1d8b88.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d8b8e.  v12:= temp @kind object;
  #L1d8b90.  throw v12;
  #L1d8b92.  v12:= new `java.lang.String`;
  #L1d8b96.  call `<init>`(v12, v14, v1, v8) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1d8b9c.  return v12 @kind object;
  #L1d8b9e.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d8ba2.  v3:= 3I;
  #L1d8ba4.  v3:= new `java.lang.Object`[v3];
  #L1d8ba8.  v12:= length @variable v12;
  #L1d8baa.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8bb0.  v12:= temp @kind object;
  #L1d8bb2.  v3[v1]:= v12 @kind object;
  #L1d8bb6.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8bbc.  v12:= temp @kind object;
  #L1d8bbe.  v3[v2]:= v12 @kind object;
  #L1d8bc2.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8bc8.  v12:= temp @kind object;
  #L1d8bca.  v13:= 2I;
  #L1d8bcc.  v3[v13]:= v12 @kind object;
  #L1d8bd0.  v12:= "buffer length=%d, index=%d, size=%d" @kind object;
  #L1d8bd4.  call temp:= `format`(v12, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d8bda.  v12:= temp @kind object;
  #L1d8bdc.  call `<init>`(v0, v12) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d8be2.  throw v0;
}
procedure `java.lang.String` `d`(`com.google.crypto.tink.shaded.protobuf.u0$c` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.d:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @AccessFlag  {
    temp;

  #L1d8bf4.  call temp:= `c`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.c:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @kind virtual;
  #L1d8bfa.  v1:= temp @kind object;
  #L1d8bfc.  return v1 @kind object;
}
procedure `int` `e`(`com.google.crypto.tink.shaded.protobuf.u0$c` v7 @kind this, `java.lang.CharSequence` v8 @kind object, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.e:(Ljava/lang/CharSequence;[BII)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d85e0.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1d85e6.  v0:= temp;
  #L1d85e8.  v11:= v11 + v10 @kind int;
  #L1d85ea.  v1:= 0I;
  #L1d85ec.  v2:= 128I;
  #L1d85f0.  if v1 >= v0 then goto L1d8614;
  #L1d85f4.  v3:= v1 + v10 @kind int;
  #L1d85f8.  if v3 >= v11 then goto L1d8614;
  #L1d85fc.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8602.  v4:= temp;
  #L1d8604.  if v4 >= v2 then goto L1d8614;
  #L1d8608.  v2:= (`byte`) v4 @kind i2b;
  #L1d860a.  v9[v3]:= v2 @kind byte;
  #L1d860e.  v1:= v1 + 1;
  #L1d8612.  goto L1d85ec;
  #L1d8614.  if v1 != v0 then goto L1d861c;
  #L1d8618.  v10:= v10 + v0 @kind int;
  #L1d861a.  return v10;
  #L1d861c.  v10:= v10 + v1 @kind int;
  #L1d861e.  if v1 >= v0 then goto L1d87da;
  #L1d8622.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8628.  v3:= temp;
  #L1d862a.  if v3 >= v2 then goto L1d8642;
  #L1d862e.  if v10 >= v11 then goto L1d8642;
  #L1d8632.  v4:= v10 + 1;
  #L1d8636.  v3:= (`byte`) v3 @kind i2b;
  #L1d8638.  v9[v10]:= v3 @kind byte;
  #L1d863c.  v10:= v4;
  #L1d863e.  goto L1d874a;
  #L1d8642.  v4:= 2048I;
  #L1d8646.  if v3 >= v4 then goto L1d8676;
  #L1d864a.  v4:= v11 + -2;
  #L1d864e.  if v10 > v4 then goto L1d8676;
  #L1d8652.  v4:= v10 + 1;
  #L1d8656.  v5:= v3 ^>> 6;
  #L1d865a.  v5:= v5 ^| 960;
  #L1d865e.  v5:= (`byte`) v5 @kind i2b;
  #L1d8660.  v9[v10]:= v5 @kind byte;
  #L1d8664.  v10:= v4 + 1;
  #L1d8668.  v3:= v3 ^& 63;
  #L1d866c.  v3:= v3 ^| v2 @kind int;
  #L1d866e.  v3:= (`byte`) v3 @kind i2b;
  #L1d8670.  v9[v4]:= v3 @kind byte;
  #L1d8674.  goto L1d874a;
  #L1d8676.  v4:= 57343I;
  #L1d867c.  v5:= 55296I;
  #L1d8682.  if v3 < v5 then goto L1d868a;
  #L1d8686.  if v4 >= v3 then goto L1d86ca;
  #L1d868a.  v6:= v11 + -3;
  #L1d868e.  if v10 > v6 then goto L1d86ca;
  #L1d8692.  v4:= v10 + 1;
  #L1d8696.  v5:= v3 ^>> 12;
  #L1d869a.  v5:= v5 ^| 480;
  #L1d869e.  v5:= (`byte`) v5 @kind i2b;
  #L1d86a0.  v9[v10]:= v5 @kind byte;
  #L1d86a4.  v10:= v4 + 1;
  #L1d86a8.  v5:= v3 ^>> 6;
  #L1d86ac.  v5:= v5 ^& 63;
  #L1d86b0.  v5:= v5 ^| v2 @kind int;
  #L1d86b2.  v5:= (`byte`) v5 @kind i2b;
  #L1d86b4.  v9[v4]:= v5 @kind byte;
  #L1d86b8.  v4:= v10 + 1;
  #L1d86bc.  v3:= v3 ^& 63;
  #L1d86c0.  v3:= v3 ^| v2 @kind int;
  #L1d86c2.  v3:= (`byte`) v3 @kind i2b;
  #L1d86c4.  v9[v10]:= v3 @kind byte;
  #L1d86c8.  goto L1d863c;
  #L1d86ca.  v6:= v11 + -4;
  #L1d86ce.  if v10 > v6 then goto L1d8764;
  #L1d86d2.  v4:= v1 + 1;
  #L1d86d6.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1d86dc.  v5:= temp;
  #L1d86de.  if v4 == v5 then goto L1d8754;
  #L1d86e2.  call temp:= `charAt`(v8, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d86e8.  v1:= temp;
  #L1d86ea.  call temp:= `isSurrogatePair`(v3, v1) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L1d86f0.  v5:= temp;
  #L1d86f2.  if v5 == 0 then goto L1d8752;
  #L1d86f6.  call temp:= `toCodePoint`(v3, v1) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L1d86fc.  v1:= temp;
  #L1d86fe.  v3:= v10 + 1;
  #L1d8702.  v5:= v1 ^>> 18;
  #L1d8706.  v5:= v5 ^| 240;
  #L1d870a.  v5:= (`byte`) v5 @kind i2b;
  #L1d870c.  v9[v10]:= v5 @kind byte;
  #L1d8710.  v10:= v3 + 1;
  #L1d8714.  v5:= v1 ^>> 12;
  #L1d8718.  v5:= v5 ^& 63;
  #L1d871c.  v5:= v5 ^| v2 @kind int;
  #L1d871e.  v5:= (`byte`) v5 @kind i2b;
  #L1d8720.  v9[v3]:= v5 @kind byte;
  #L1d8724.  v3:= v10 + 1;
  #L1d8728.  v5:= v1 ^>> 6;
  #L1d872c.  v5:= v5 ^& 63;
  #L1d8730.  v5:= v5 ^| v2 @kind int;
  #L1d8732.  v5:= (`byte`) v5 @kind i2b;
  #L1d8734.  v9[v10]:= v5 @kind byte;
  #L1d8738.  v10:= v3 + 1;
  #L1d873c.  v1:= v1 ^& 63;
  #L1d8740.  v1:= v1 ^| v2 @kind int;
  #L1d8742.  v1:= (`byte`) v1 @kind i2b;
  #L1d8744.  v9[v3]:= v1 @kind byte;
  #L1d8748.  v1:= v4;
  #L1d874a.  v1:= v1 + 1;
  #L1d874e.  goto L1d861e;
  #L1d8752.  v1:= v4;
  #L1d8754.  v8:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L1d8758.  v1:= v1 + -1;
  #L1d875c.  call `<init>`(v8, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L1d8762.  throw v8;
  #L1d8764.  if v5 > v3 then goto L1d879c;
  #L1d8768.  if v3 > v4 then goto L1d879c;
  #L1d876c.  v9:= v1 + 1;
  #L1d8770.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1d8776.  v11:= temp;
  #L1d8778.  if v9 == v11 then goto L1d8790;
  #L1d877c.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8782.  v8:= temp;
  #L1d8784.  call temp:= `isSurrogatePair`(v3, v8) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L1d878a.  v8:= temp;
  #L1d878c.  if v8 != 0 then goto L1d879c;
  #L1d8790.  v8:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L1d8794.  call `<init>`(v8, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L1d879a.  throw v8;
  #L1d879c.  v8:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d87a0.  v9:= new `java.lang.StringBuilder`;
  #L1d87a4.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d87aa.  v11:= "Failed writing " @kind object;
  #L1d87ae.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d87b4.  call temp:= `append`(v9, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d87ba.  v11:= " at index " @kind object;
  #L1d87be.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d87c4.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d87ca.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d87d0.  v9:= temp @kind object;
  #L1d87d2.  call `<init>`(v8, v9) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d87d8.  throw v8;
  #L1d87da.  return v10;
}
procedure `void` `h`(`com.google.crypto.tink.shaded.protobuf.u0$c` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.h:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag  {
    temp;

  #L1d8c28.  call `g`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.g:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L1d8c2e.  return @kind void;
}
procedure `int` `l`(`com.google.crypto.tink.shaded.protobuf.u0$c` v6 @kind this, `int` v7 , `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.l:(I[BII)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d8820.  if v7 == 0 then goto L1d8924;
  #L1d8824.  if v9 < v10 then goto L1d882a;
  #L1d8828.  return v7;
  #L1d882a.  v0:= (`byte`) v7 @kind i2b;
  #L1d882c.  v1:= -32I;
  #L1d8830.  v2:= -1I;
  #L1d8832.  v3:= -65I;
  #L1d8836.  if v0 >= v1 then goto L1d8858;
  #L1d883a.  v7:= -62I;
  #L1d883e.  if v0 < v7 then goto L1d8856;
  #L1d8842.  v7:= v9 + 1;
  #L1d8846.  v9:= v8[v9] @kind byte;
  #L1d884a.  if v9 <= v3 then goto L1d8850;
  #L1d884e.  goto L1d8856;
  #L1d8850.  v9:= v7;
  #L1d8852.  goto L1d8924;
  #L1d8856.  return v2;
  #L1d8858.  v4:= -16I;
  #L1d885c.  if v0 >= v4 then goto L1d88b2;
  #L1d8860.  v7:= v7 ^> 8;
  #L1d8864.  v7:= ~v7 @kind int;
  #L1d8866.  v7:= (`byte`) v7 @kind i2b;
  #L1d8868.  if v7 != 0 then goto L1d8888;
  #L1d886c.  v7:= v9 + 1;
  #L1d8870.  v9:= v8[v9] @kind byte;
  #L1d8874.  if v7 < v10 then goto L1d8882;
  #L1d8878.  call temp:= `a`(v0, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d887e.  v7:= temp;
  #L1d8880.  return v7;
  #L1d8882.  v5:= v9;
  #L1d8884.  v9:= v7;
  #L1d8886.  v7:= v5;
  #L1d8888.  if v7 > v3 then goto L1d88b0;
  #L1d888c.  v4:= -96I;
  #L1d8890.  if v0 != v1 then goto L1d8898;
  #L1d8894.  if v7 < v4 then goto L1d88b0;
  #L1d8898.  v1:= -19I;
  #L1d889c.  if v0 != v1 then goto L1d88a4;
  #L1d88a0.  if v7 >= v4 then goto L1d88b0;
  #L1d88a4.  v7:= v9 + 1;
  #L1d88a8.  v9:= v8[v9] @kind byte;
  #L1d88ac.  if v9 <= v3 then goto L1d8850;
  #L1d88b0.  return v2;
  #L1d88b2.  v1:= v7 ^> 8;
  #L1d88b6.  v1:= ~v1 @kind int;
  #L1d88b8.  v1:= (`byte`) v1 @kind i2b;
  #L1d88ba.  v4:= 0I;
  #L1d88bc.  if v1 != 0 then goto L1d88da;
  #L1d88c0.  v7:= v9 + 1;
  #L1d88c4.  v1:= v8[v9] @kind byte;
  #L1d88c8.  if v7 < v10 then goto L1d88d6;
  #L1d88cc.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d88d2.  v7:= temp;
  #L1d88d4.  return v7;
  #L1d88d6.  v9:= v7;
  #L1d88d8.  goto L1d88e0;
  #L1d88da.  v7:= v7 ^> 16;
  #L1d88de.  v4:= (`byte`) v7 @kind i2b;
  #L1d88e0.  if v4 != 0 then goto L1d88fc;
  #L1d88e4.  v7:= v9 + 1;
  #L1d88e8.  v4:= v8[v9] @kind byte;
  #L1d88ec.  if v7 < v10 then goto L1d88fa;
  #L1d88f0.  call temp:= `b`(v0, v1, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.b:(III)I` @kind static;
  #L1d88f6.  v7:= temp;
  #L1d88f8.  return v7;
  #L1d88fa.  v9:= v7;
  #L1d88fc.  if v1 > v3 then goto L1d8922;
  #L1d8900.  v7:= v0 ^< 28;
  #L1d8904.  v1:= v1 + 112;
  #L1d8908.  v7:= v7 + v1 @kind int;
  #L1d890a.  v7:= v7 ^> 30;
  #L1d890e.  if v7 != 0 then goto L1d8922;
  #L1d8912.  if v4 > v3 then goto L1d8922;
  #L1d8916.  v7:= v9 + 1;
  #L1d891a.  v9:= v8[v9] @kind byte;
  #L1d891e.  if v9 <= v3 then goto L1d8850;
  #L1d8922.  return v2;
  #L1d8924.  call temp:= `p`(v8, v9, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.p:([BII)I` @kind static;
  #L1d892a.  v7:= temp;
  #L1d892c.  return v7;
}
procedure `int` `o`(`com.google.crypto.tink.shaded.protobuf.u0$c` v0 @kind this, `int` v1 , `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.o:(ILjava/nio/ByteBuffer;II)I` @AccessFlag  {
    temp;

  #L1d8940.  call temp:= `n`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.n:(ILjava/nio/ByteBuffer;II)I` @kind virtual;
  #L1d8946.  v1:= temp;
  #L1d8948.  return v1;
}
