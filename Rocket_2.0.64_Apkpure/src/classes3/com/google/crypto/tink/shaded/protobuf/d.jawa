record `com.google.crypto.tink.shaded.protobuf.d` @kind class @AccessFlag ABSTRACT extends `com.google.crypto.tink.shaded.protobuf.k0` @kind interface {
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.d` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1adebc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1adec2.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.d` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.d$a` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1aded4.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d;.<init>:()V` @kind direct;
  #L1adeda.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.d` `P`(`java.nio.ByteBuffer` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d;.P:(Ljava/nio/ByteBuffer;Z)Lcom/google/crypto/tink/shaded/protobuf/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ade84.  call temp:= `hasArray`(v1) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1ade8a.  v0:= temp;
  #L1ade8c.  if v0 == 0 then goto L1ade9c;
  #L1ade90.  v0:= new `com.google.crypto.tink.shaded.protobuf.d$b`;
  #L1ade94.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.<init>:(Ljava/nio/ByteBuffer;Z)V` @kind direct;
  #L1ade9a.  return v0 @kind object;
  #L1ade9c.  v1:= new `java.lang.IllegalArgumentException`;
  #L1adea0.  v2:= "Direct buffers not yet supported" @kind object;
  #L1adea4.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1adeaa.  throw v1;
}
