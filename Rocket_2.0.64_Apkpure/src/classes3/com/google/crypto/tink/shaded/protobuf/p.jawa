record `com.google.crypto.tink.shaded.protobuf.p` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `java.util.Iterator` `com.google.crypto.tink.shaded.protobuf.p.a` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.google.crypto.tink.shaded.protobuf.p.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.p.c` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.p.d` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.p.e` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.shaded.protobuf.p.f` @AccessFlag PRIVATE;
  `byte`[] `com.google.crypto.tink.shaded.protobuf.p.g` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.p.h` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.p.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.p` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c4058.  call `<init>`(v2) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1c405e.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c4064.  v0:= temp @kind object;
  #L1c4066.  v2.`com.google.crypto.tink.shaded.protobuf.p.a` @type ^`java.util.Iterator` := v0 @kind object;
  #L1c406a.  v0:= 0I;
  #L1c406c.  v2.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int` := v0;
  #L1c4070.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c4076.  v3:= temp @kind object;
  #L1c4078.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c407e.  v1:= temp;
  #L1c4080.  if v1 == 0 then goto L1c409e;
  #L1c4084.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c408a.  v1:= temp @kind object;
  #L1c408c.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L1c4090.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int`;
  #L1c4094.  v1:= v1 + 1;
  #L1c4098.  v2.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int` := v1;
  #L1c409c.  goto L1c4078;
  #L1c409e.  v3:= -1I;
  #L1c40a0.  v2.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int` := v3;
  #L1c40a4.  call temp:= `a`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.a:()Z` @kind direct;
  #L1c40aa.  v3:= temp;
  #L1c40ac.  if v3 != 0 then goto L1c40c8;
  #L1c40b0.  v3:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_BUFFER` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c40b4.  v2.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` := v3 @kind object;
  #L1c40b8.  v2.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int` := v0;
  #L1c40bc.  v2.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int` := v0;
  #L1c40c0.  v0:= 0L;
  #L1c40c4.  v2.`com.google.crypto.tink.shaded.protobuf.p.i` @type ^`long` := v0 @kind wide;
  #L1c40c8.  return @kind void;
}
procedure `boolean` `a`(`com.google.crypto.tink.shaded.protobuf.p` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c3ebc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int`;
  #L1c3ec0.  v1:= 1I;
  #L1c3ec2.  v0:= v0 + v1 @kind int;
  #L1c3ec4.  v4.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int` := v0;
  #L1c3ec8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.a` @type ^`java.util.Iterator` @kind object;
  #L1c3ecc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c3ed2.  v0:= temp;
  #L1c3ed4.  v2:= 0I;
  #L1c3ed6.  if v0 != 0 then goto L1c3edc;
  #L1c3eda.  return v2;
  #L1c3edc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.a` @type ^`java.util.Iterator` @kind object;
  #L1c3ee0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c3ee6.  v0:= temp @kind object;
  #L1c3ee8.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L1c3eec.  v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L1c3ef0.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1c3ef6.  v0:= temp;
  #L1c3ef8.  v4.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int` := v0;
  #L1c3efc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c3f00.  call temp:= `hasArray`(v0) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1c3f06.  v0:= temp;
  #L1c3f08.  if v0 == 0 then goto L1c3f32;
  #L1c3f0c.  v4.`com.google.crypto.tink.shaded.protobuf.p.f` @type ^`boolean` := v1 @kind boolean;
  #L1c3f10.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c3f14.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1c3f1a.  v0:= temp @kind object;
  #L1c3f1c.  v4.`com.google.crypto.tink.shaded.protobuf.p.g` @type ^`byte`[] := v0 @kind object;
  #L1c3f20.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c3f24.  call temp:= `arrayOffset`(v0) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1c3f2a.  v0:= temp;
  #L1c3f2c.  v4.`com.google.crypto.tink.shaded.protobuf.p.h` @type ^`int` := v0;
  #L1c3f30.  goto L1c3f4c;
  #L1c3f32.  v4.`com.google.crypto.tink.shaded.protobuf.p.f` @type ^`boolean` := v2 @kind boolean;
  #L1c3f36.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c3f3a.  call temp:= `i`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.i:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L1c3f40.  v2:= temp @kind wide;
  #L1c3f42.  v4.`com.google.crypto.tink.shaded.protobuf.p.i` @type ^`long` := v2 @kind wide;
  #L1c3f46.  v0:= 0I;
  #L1c3f48.  v4.`com.google.crypto.tink.shaded.protobuf.p.g` @type ^`byte`[] := v0 @kind object;
  #L1c3f4c.  return v1;
}
procedure `void` `b`(`com.google.crypto.tink.shaded.protobuf.p` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c40dc.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L1c40e0.  v0:= v0 + v2 @kind int;
  #L1c40e2.  v1.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int` := v0;
  #L1c40e6.  v2:= v1.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c40ea.  call temp:= `limit`(v2) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1c40f0.  v2:= temp;
  #L1c40f2.  if v0 != v2 then goto L1c40fc;
  #L1c40f6.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.a:()Z` @kind direct;
  #L1c40fc.  return @kind void;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.p` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c3f60.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int`;
  #L1c3f64.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int`;
  #L1c3f68.  if v0 != v1 then goto L1c3f70;
  #L1c3f6c.  v0:= -1I;
  #L1c3f6e.  return v0;
  #L1c3f70.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.p.f` @type ^`boolean` @kind boolean;
  #L1c3f74.  v1:= 1I;
  #L1c3f76.  if v0 == 0 then goto L1c3f98;
  #L1c3f7a.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.p.g` @type ^`byte`[] @kind object;
  #L1c3f7e.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L1c3f82.  v3:= v6.`com.google.crypto.tink.shaded.protobuf.p.h` @type ^`int`;
  #L1c3f86.  v2:= v2 + v3 @kind int;
  #L1c3f88.  v0:= v0[v2] @kind byte;
  #L1c3f8c.  v0:= v0 ^& 255;
  #L1c3f90.  call `b`(v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @kind direct;
  #L1c3f96.  return v0;
  #L1c3f98.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L1c3f9c.  v2:= (`long`) v0 @kind i2l;
  #L1c3f9e.  v4:= v6.`com.google.crypto.tink.shaded.protobuf.p.i` @type ^`long` @kind wide;
  #L1c3fa2.  v2:= v2 + v4 @kind long;
  #L1c3fa4.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1c3faa.  v0:= temp;
  #L1c3fac.  v0:= v0 ^& 255;
  #L1c3fb0.  call `b`(v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @kind direct;
  #L1c3fb6.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.p` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c3fc8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int`;
  #L1c3fcc.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int`;
  #L1c3fd0.  if v0 != v1 then goto L1c3fd8;
  #L1c3fd4.  v4:= -1I;
  #L1c3fd6.  return v4;
  #L1c3fd8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c3fdc.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1c3fe2.  v0:= temp;
  #L1c3fe4.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L1c3fe8.  v0:= v0 - v1 @kind int;
  #L1c3fea.  if v6 <= v0 then goto L1c3ff0;
  #L1c3fee.  v6:= v0;
  #L1c3ff0.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.f` @type ^`boolean` @kind boolean;
  #L1c3ff4.  if v0 == 0 then goto L1c4010;
  #L1c3ff8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.g` @type ^`byte`[] @kind object;
  #L1c3ffc.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.p.h` @type ^`int`;
  #L1c4000.  v1:= v1 + v2 @kind int;
  #L1c4002.  call `arraycopy`(v0, v1, v4, v5, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c4008.  call `b`(v3, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @kind direct;
  #L1c400e.  goto L1c4044;
  #L1c4010.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c4014.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1c401a.  v0:= temp;
  #L1c401c.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c4020.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L1c4024.  call temp:= `position`(v1, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1c402a.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c402e.  call temp:= `get`(v1, v4, v5, v6) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1c4034.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L1c4038.  call temp:= `position`(v4, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1c403e.  call `b`(v3, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @kind direct;
  #L1c4044.  return v6;
}
