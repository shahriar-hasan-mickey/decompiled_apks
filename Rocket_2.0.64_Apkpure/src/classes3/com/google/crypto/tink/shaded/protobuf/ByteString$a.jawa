record `com.google.crypto.tink.shaded.protobuf.ByteString$a` @kind class @AccessFlag  extends `com.google.crypto.tink.shaded.protobuf.ByteString$c` @kind class {
  `int` `com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.ByteString$a.b` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.shaded.protobuf.ByteString` `com.google.crypto.tink.shaded.protobuf.ByteString$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.ByteString$a` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1ae5b8.  v1.`com.google.crypto.tink.shaded.protobuf.ByteString$a.c` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` := v2 @kind object;
  #L1ae5bc.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$c;.<init>:()V` @kind direct;
  #L1ae5c2.  v0:= 0I;
  #L1ae5c4.  v1.`com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @type ^`int` := v0;
  #L1ae5c8.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1ae5ce.  v2:= temp;
  #L1ae5d0.  v1.`com.google.crypto.tink.shaded.protobuf.ByteString$a.b` @type ^`int` := v2;
  #L1ae5d4.  return @kind void;
}
procedure `boolean` `hasNext`(`com.google.crypto.tink.shaded.protobuf.ByteString$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ae554.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @type ^`int`;
  #L1ae558.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.b` @type ^`int`;
  #L1ae55c.  if v0 >= v1 then goto L1ae564;
  #L1ae560.  v0:= 1I;
  #L1ae562.  goto L1ae566;
  #L1ae564.  v0:= 0I;
  #L1ae566.  return v0;
}
procedure `byte` `nextByte`(`com.google.crypto.tink.shaded.protobuf.ByteString$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;.nextByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ae578.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @type ^`int`;
  #L1ae57c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.b` @type ^`int`;
  #L1ae580.  if v0 >= v1 then goto L1ae59a;
  #L1ae584.  v1:= v0 + 1;
  #L1ae588.  v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @type ^`int` := v1;
  #L1ae58c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.c` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L1ae590.  call temp:= `e`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.e:(I)B` @kind virtual;
  #L1ae596.  v0:= temp;
  #L1ae598.  return v0;
  #L1ae59a.  v0:= new `java.util.NoSuchElementException`;
  #L1ae59e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1ae5a4.  throw v0;
}
