record `com.google.crypto.tink.shaded.protobuf.u0$b` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.u0$b` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d82fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d8302.  return @kind void;
}
procedure `int` `m`(`java.nio.ByteBuffer` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.m:(Ljava/nio/ByteBuffer;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d7e68.  call temp:= `e`(v6, v7, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.e:(Ljava/nio/ByteBuffer;II)I` @kind static;
  #L1d7e6e.  v0:= temp;
  #L1d7e70.  v7:= v7 + v0 @kind int;
  #L1d7e72.  if v7 < v8 then goto L1d7e7a;
  #L1d7e76.  v6:= 0I;
  #L1d7e78.  return v6;
  #L1d7e7a.  v0:= v7 + 1;
  #L1d7e7e.  call temp:= `get`(v6, v7) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7e84.  v7:= temp;
  #L1d7e86.  if v7 >= 0 then goto L1d7f70;
  #L1d7e8a.  v1:= -32I;
  #L1d7e8e.  v2:= -1I;
  #L1d7e90.  v3:= -65I;
  #L1d7e94.  if v7 >= v1 then goto L1d7ebc;
  #L1d7e98.  if v0 < v8 then goto L1d7e9e;
  #L1d7e9c.  return v7;
  #L1d7e9e.  v1:= -62I;
  #L1d7ea2.  if v7 < v1 then goto L1d7eba;
  #L1d7ea6.  call temp:= `get`(v6, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7eac.  v7:= temp;
  #L1d7eae.  if v7 <= v3 then goto L1d7eb4;
  #L1d7eb2.  goto L1d7eba;
  #L1d7eb4.  v0:= v0 + 1;
  #L1d7eb8.  goto L1d7f70;
  #L1d7eba.  return v2;
  #L1d7ebc.  v4:= -16I;
  #L1d7ec0.  if v7 >= v4 then goto L1d7f18;
  #L1d7ec4.  v4:= v8 + -1;
  #L1d7ec8.  if v0 < v4 then goto L1d7ed8;
  #L1d7ecc.  v8:= v8 - v0 @kind int;
  #L1d7ece.  call temp:= `f`(v6, v7, v0, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.f:(Ljava/nio/ByteBuffer;III)I` @kind static;
  #L1d7ed4.  v6:= temp;
  #L1d7ed6.  return v6;
  #L1d7ed8.  v4:= v0 + 1;
  #L1d7edc.  call temp:= `get`(v6, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7ee2.  v0:= temp;
  #L1d7ee4.  if v0 > v3 then goto L1d7f16;
  #L1d7ee8.  v5:= -96I;
  #L1d7eec.  if v7 != v1 then goto L1d7ef4;
  #L1d7ef0.  if v0 < v5 then goto L1d7f16;
  #L1d7ef4.  v1:= -19I;
  #L1d7ef8.  if v7 != v1 then goto L1d7f00;
  #L1d7efc.  if v0 >= v5 then goto L1d7f16;
  #L1d7f00.  call temp:= `get`(v6, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7f06.  v7:= temp;
  #L1d7f08.  if v7 <= v3 then goto L1d7f0e;
  #L1d7f0c.  goto L1d7f16;
  #L1d7f0e.  v4:= v4 + 1;
  #L1d7f12.  v7:= v4;
  #L1d7f14.  goto L1d7e72;
  #L1d7f16.  return v2;
  #L1d7f18.  v1:= v8 + -2;
  #L1d7f1c.  if v0 < v1 then goto L1d7f2c;
  #L1d7f20.  v8:= v8 - v0 @kind int;
  #L1d7f22.  call temp:= `f`(v6, v7, v0, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.f:(Ljava/nio/ByteBuffer;III)I` @kind static;
  #L1d7f28.  v6:= temp;
  #L1d7f2a.  return v6;
  #L1d7f2c.  v1:= v0 + 1;
  #L1d7f30.  call temp:= `get`(v6, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7f36.  v0:= temp;
  #L1d7f38.  if v0 > v3 then goto L1d7f6e;
  #L1d7f3c.  v7:= v7 ^< 28;
  #L1d7f40.  v0:= v0 + 112;
  #L1d7f44.  v7:= v7 + v0 @kind int;
  #L1d7f46.  v7:= v7 ^> 30;
  #L1d7f4a.  if v7 != 0 then goto L1d7f6e;
  #L1d7f4e.  v7:= v1 + 1;
  #L1d7f52.  call temp:= `get`(v6, v1) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7f58.  v0:= temp;
  #L1d7f5a.  if v0 > v3 then goto L1d7f6e;
  #L1d7f5e.  v0:= v7 + 1;
  #L1d7f62.  call temp:= `get`(v6, v7) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7f68.  v7:= temp;
  #L1d7f6a.  if v7 <= v3 then goto L1d7f70;
  #L1d7f6e.  return v2;
  #L1d7f70.  v7:= v0;
  #L1d7f72.  goto L1d7e72;
}
procedure `java.lang.String` `a`(`com.google.crypto.tink.shaded.protobuf.u0$b` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.a:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @AccessFlag FINAL {
    temp;
    v0;

  #L1d80c0.  call temp:= `hasArray`(v2) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1d80c6.  v0:= temp;
  #L1d80c8.  if v0 == 0 then goto L1d80e8;
  #L1d80cc.  call temp:= `arrayOffset`(v2) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1d80d2.  v0:= temp;
  #L1d80d4.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1d80da.  v2:= temp @kind object;
  #L1d80dc.  v0:= v0 + v3 @kind int;
  #L1d80de.  call temp:= `b`(v1, v2, v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.b:([BII)Ljava/lang/String;` @kind virtual;
  #L1d80e4.  v2:= temp @kind object;
  #L1d80e6.  return v2 @kind object;
  #L1d80e8.  call temp:= `isDirect`(v2) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L1d80ee.  v0:= temp;
  #L1d80f0.  if v0 == 0 then goto L1d80fe;
  #L1d80f4.  call temp:= `d`(v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.d:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @kind virtual;
  #L1d80fa.  v2:= temp @kind object;
  #L1d80fc.  return v2 @kind object;
  #L1d80fe.  call temp:= `c`(v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.c:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @kind virtual;
  #L1d8104.  v2:= temp @kind object;
  #L1d8106.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.b:([BII)Ljava/lang/String;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.String` `c`(`com.google.crypto.tink.shaded.protobuf.u0$b` v11 @kind this, `java.nio.ByteBuffer` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.c:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d8118.  v0:= v13 ^| v14 @kind int;
  #L1d811c.  call temp:= `limit`(v12) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d8122.  v1:= temp;
  #L1d8124.  v1:= v1 - v13 @kind int;
  #L1d8126.  v1:= v1 - v14 @kind int;
  #L1d8128.  v0:= v0 ^| v1 @kind int;
  #L1d812a.  v1:= 0I;
  #L1d812c.  v2:= 1I;
  #L1d812e.  if v0 < 0 then goto L1d829e;
  #L1d8132.  v0:= v13 + v14 @kind int;
  #L1d8136.  v14:= new `char`[v14];
  #L1d813a.  v3:= 0I;
  #L1d813c.  if v13 >= v0 then goto L1d8168;
  #L1d8140.  call temp:= `get`(v12, v13) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d8146.  v4:= temp;
  #L1d8148.  call temp:= `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d814e.  v5:= temp;
  #L1d8150.  if v5 != 0 then goto L1d8156;
  #L1d8154.  goto L1d8168;
  #L1d8156.  v13:= v13 + 1;
  #L1d815a.  v5:= v3 + 1;
  #L1d815e.  call `c`(v4, v14, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d8164.  v3:= v5;
  #L1d8166.  goto L1d813c;
  #L1d8168.  v8:= v3;
  #L1d816a.  if v13 >= v0 then goto L1d8292;
  #L1d816e.  v3:= v13 + 1;
  #L1d8172.  call temp:= `get`(v12, v13) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d8178.  v13:= temp;
  #L1d817a.  call temp:= `b`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d8180.  v4:= temp;
  #L1d8182.  if v4 == 0 then goto L1d81c2;
  #L1d8186.  v4:= v8 + 1;
  #L1d818a.  call `c`(v13, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d8190.  if v3 >= v0 then goto L1d81bc;
  #L1d8194.  call temp:= `get`(v12, v3) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d819a.  v13:= temp;
  #L1d819c.  call temp:= `b`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d81a2.  v5:= temp;
  #L1d81a4.  if v5 != 0 then goto L1d81aa;
  #L1d81a8.  goto L1d81bc;
  #L1d81aa.  v3:= v3 + 1;
  #L1d81ae.  v5:= v4 + 1;
  #L1d81b2.  call `c`(v13, v14, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d81b8.  v4:= v5;
  #L1d81ba.  goto L1d8190;
  #L1d81bc.  v13:= v3;
  #L1d81be.  v8:= v4;
  #L1d81c0.  goto L1d816a;
  #L1d81c2.  call temp:= `d`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.d:(B)Z` @kind static;
  #L1d81c8.  v4:= temp;
  #L1d81ca.  if v4 == 0 then goto L1d81f8;
  #L1d81ce.  if v3 >= v0 then goto L1d81ee;
  #L1d81d2.  v4:= v3 + 1;
  #L1d81d6.  call temp:= `get`(v12, v3) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d81dc.  v3:= temp;
  #L1d81de.  v5:= v8 + 1;
  #L1d81e2.  call `e`(v13, v3, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.e:(BB[CI)V` @kind static;
  #L1d81e8.  v13:= v4;
  #L1d81ea.  v8:= v5;
  #L1d81ec.  goto L1d816a;
  #L1d81ee.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d81f4.  v12:= temp @kind object;
  #L1d81f6.  throw v12;
  #L1d81f8.  call temp:= `f`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.f:(B)Z` @kind static;
  #L1d81fe.  v4:= temp;
  #L1d8200.  if v4 == 0 then goto L1d823e;
  #L1d8204.  v4:= v0 + -1;
  #L1d8208.  if v3 >= v4 then goto L1d8234;
  #L1d820c.  v4:= v3 + 1;
  #L1d8210.  call temp:= `get`(v12, v3) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d8216.  v3:= temp;
  #L1d8218.  v5:= v4 + 1;
  #L1d821c.  call temp:= `get`(v12, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d8222.  v4:= temp;
  #L1d8224.  v6:= v8 + 1;
  #L1d8228.  call `g`(v13, v3, v4, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.g:(BBB[CI)V` @kind static;
  #L1d822e.  v13:= v5;
  #L1d8230.  v8:= v6;
  #L1d8232.  goto L1d816a;
  #L1d8234.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d823a.  v12:= temp @kind object;
  #L1d823c.  throw v12;
  #L1d823e.  v4:= v0 + -2;
  #L1d8242.  if v3 >= v4 then goto L1d8288;
  #L1d8246.  v4:= v3 + 1;
  #L1d824a.  call temp:= `get`(v12, v3) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d8250.  v5:= temp;
  #L1d8252.  v3:= v4 + 1;
  #L1d8256.  call temp:= `get`(v12, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d825c.  v6:= temp;
  #L1d825e.  v9:= v3 + 1;
  #L1d8262.  call temp:= `get`(v12, v3) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d8268.  v7:= temp;
  #L1d826a.  v10:= v8 + 1;
  #L1d826e.  v3:= v13;
  #L1d8270.  v4:= v5;
  #L1d8272.  v5:= v6;
  #L1d8274.  v6:= v7;
  #L1d8276.  v7:= v14 @kind object;
  #L1d8278.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.a:(BBBB[CI)V` @kind static;
  #L1d827e.  v10:= v10 + v2 @kind int;
  #L1d8280.  v13:= v9;
  #L1d8282.  v8:= v10;
  #L1d8284.  goto L1d816a;
  #L1d8288.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d828e.  v12:= temp @kind object;
  #L1d8290.  throw v12;
  #L1d8292.  v12:= new `java.lang.String`;
  #L1d8296.  call `<init>`(v12, v14, v1, v8) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1d829c.  return v12 @kind object;
  #L1d829e.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d82a2.  v3:= 3I;
  #L1d82a4.  v3:= new `java.lang.Object`[v3];
  #L1d82a8.  call temp:= `limit`(v12) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d82ae.  v12:= temp;
  #L1d82b0.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d82b6.  v12:= temp @kind object;
  #L1d82b8.  v3[v1]:= v12 @kind object;
  #L1d82bc.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d82c2.  v12:= temp @kind object;
  #L1d82c4.  v3[v2]:= v12 @kind object;
  #L1d82c8.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d82ce.  v12:= temp @kind object;
  #L1d82d0.  v13:= 2I;
  #L1d82d2.  v3[v13]:= v12 @kind object;
  #L1d82d6.  v12:= "buffer limit=%d, index=%d, limit=%d" @kind object;
  #L1d82da.  call temp:= `format`(v12, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d82e0.  v12:= temp @kind object;
  #L1d82e2.  call `<init>`(v0, v12) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d82e8.  throw v0;
}
procedure `java.lang.String` `d`(`java.nio.ByteBuffer` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.d:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `e`(`java.lang.CharSequence` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.e:(Ljava/lang/CharSequence;[BII)I` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `f`(`com.google.crypto.tink.shaded.protobuf.u0$b` v4 @kind this, `java.lang.CharSequence` v5 @kind object, `java.nio.ByteBuffer` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.f:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d8314.  call temp:= `hasArray`(v6) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1d831a.  v0:= temp;
  #L1d831c.  if v0 == 0 then goto L1d8354;
  #L1d8320.  call temp:= `arrayOffset`(v6) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1d8326.  v0:= temp;
  #L1d8328.  call temp:= `array`(v6) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1d832e.  v1:= temp @kind object;
  #L1d8330.  call temp:= `position`(v6) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d8336.  v2:= temp;
  #L1d8338.  v2:= v2 + v0 @kind int;
  #L1d833a.  call temp:= `remaining`(v6) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1d8340.  v3:= temp;
  #L1d8342.  call temp:= `i`(v5, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.i:(Ljava/lang/CharSequence;[BII)I` @kind static;
  #L1d8348.  v5:= temp;
  #L1d834a.  v5:= v5 - v0 @kind int;
  #L1d834c.  call temp:= `position`(v6, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1d8352.  goto L1d836e;
  #L1d8354.  call temp:= `isDirect`(v6) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L1d835a.  v0:= temp;
  #L1d835c.  if v0 == 0 then goto L1d8368;
  #L1d8360.  call `h`(v4, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.h:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L1d8366.  goto L1d836e;
  #L1d8368.  call `g`(v4, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.g:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L1d836e.  return @kind void;
}
procedure `void` `g`(`com.google.crypto.tink.shaded.protobuf.u0$b` v7 @kind this, `java.lang.CharSequence` v8 @kind object, `java.nio.ByteBuffer` v9 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.g:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d8380.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1d8386.  v0:= temp;
  #L1d8388.  call temp:= `position`(v9) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d838e.  v1:= temp;
  #L1d8390.  v2:= 0I;
  #L1d8392.  v3:= 128I;
  #L1d8396.  if v2 >= v0 then goto L1d83b8;
  #L1d839a.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d83a0.  v4:= temp;
  #L1d83a2.  if v4 >= v3 then goto L1d83b8;
  #L1d83a6.  v3:= v1 + v2 @kind int;
  #L1d83aa.  v4:= (`byte`) v4 @kind i2b;
  #L1d83ac.  call temp:= `put`(v9, v3, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d83b2.  v2:= v2 + 1;
  #L1d83b6.  goto L1d8392;
  #L1d83b8.  if v2 != v0 then goto L1d83c8;
  #L1d83bc.  v0:= v1 + v2 @kind int;
  #L1d83c0.  call temp:= `position`(v9, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1d83c6.  return @kind void;
  #L1d83c8.  v1:= v1 + v2 @kind int;
  #L1d83ca.  if v2 >= v0 then goto L1d8506;
  #L1d83ce.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d83d4.  v4:= temp;
  #L1d83d6.  if v4 >= v3 then goto L1d83e6;
  #L1d83da.  v4:= (`byte`) v4 @kind i2b;
  #L1d83dc.  call temp:= `put`(v9, v1, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d83e2.  goto L1d84fa;
  #L1d83e6.  v5:= 2048I;
  #L1d83ea.  if v4 >= v5 then goto L1d841c;
  #L1d83ee.  v5:= v1 + 1;
  #L1d83f2.  v6:= v4 ^>> 6;
  #L1d83f6.  v6:= v6 ^| 192;
  #L1d83fa.  v6:= (`byte`) v6 @kind i2b;
  #L1d83fc.  call temp:= `put`(v9, v1, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d8402.  v1:= v4 ^& 63;
  #L1d8406.  v1:= v1 ^| v3 @kind int;
  #L1d8408.  v1:= (`byte`) v1 @kind i2b;
  #L1d840a.  call temp:= `put`(v9, v5, v1) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d8410.  v1:= v5;
  #L1d8412.  goto L1d84fa;
  #L1d8416.  v1:= v5;
  #L1d8418.  goto L1d850e;
  #L1d841c.  v5:= 55296I;
  #L1d8422.  if v4 < v5 then goto L1d84c2;
  #L1d8426.  v5:= 57343I;
  #L1d842c.  if v5 >= v4 then goto L1d8432;
  #L1d8430.  goto L1d84c2;
  #L1d8432.  v5:= v2 + 1;
  #L1d8436.  if v5 == v0 then goto L1d84b6;
  #L1d843a.  call temp:= `charAt`(v8, v5) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8440.  v2:= temp;
  #L1d8442.  call temp:= `isSurrogatePair`(v4, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L1d8448.  v6:= temp;
  #L1d844a.  if v6 == 0 then goto L1d84ae;
  #L1d844e.  call temp:= `toCodePoint`(v4, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L1d8454.  v2:= temp;
  #L1d8456.  v4:= v1 + 1;
  #L1d845a.  v6:= v2 ^>> 18;
  #L1d845e.  v6:= v6 ^| 240;
  #L1d8462.  v6:= (`byte`) v6 @kind i2b;
  #L1d8464.  call temp:= `put`(v9, v1, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d846a.  v1:= v4 + 1;
  #L1d846e.  v6:= v2 ^>> 12;
  #L1d8472.  v6:= v6 ^& 63;
  #L1d8476.  v6:= v6 ^| v3 @kind int;
  #L1d8478.  v6:= (`byte`) v6 @kind i2b;
  #L1d847a.  call temp:= `put`(v9, v4, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d8480.  v4:= v1 + 1;
  #L1d8484.  v6:= v2 ^>> 6;
  #L1d8488.  v6:= v6 ^& 63;
  #L1d848c.  v6:= v6 ^| v3 @kind int;
  #L1d848e.  v6:= (`byte`) v6 @kind i2b;
  #L1d8490.  call temp:= `put`(v9, v1, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d8496.  v1:= v2 ^& 63;
  #L1d849a.  v1:= v1 ^| v3 @kind int;
  #L1d849c.  v1:= (`byte`) v1 @kind i2b;
  #L1d849e.  call temp:= `put`(v9, v4, v1) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d84a4.  v1:= v4;
  #L1d84a6.  v2:= v5;
  #L1d84a8.  goto L1d84fa;
  #L1d84aa.  v1:= v4;
  #L1d84ac.  goto L1d84b2;
  #L1d84ae.  v2:= v5;
  #L1d84b0.  goto L1d84b6;
  #L1d84b2.  v2:= v5;
  #L1d84b4.  goto L1d850e;
  #L1d84b6.  v3:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L1d84ba.  call `<init>`(v3, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L1d84c0.  throw v3;
  #L1d84c2.  v5:= v1 + 1;
  #L1d84c6.  v6:= v4 ^>> 12;
  #L1d84ca.  v6:= v6 ^| 224;
  #L1d84ce.  v6:= (`byte`) v6 @kind i2b;
  #L1d84d0.  call temp:= `put`(v9, v1, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d84d6.  v1:= v5 + 1;
  #L1d84da.  v6:= v4 ^>> 6;
  #L1d84de.  v6:= v6 ^& 63;
  #L1d84e2.  v6:= v6 ^| v3 @kind int;
  #L1d84e4.  v6:= (`byte`) v6 @kind i2b;
  #L1d84e6.  call temp:= `put`(v9, v5, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d84ec.  v4:= v4 ^& 63;
  #L1d84f0.  v4:= v4 ^| v3 @kind int;
  #L1d84f2.  v4:= (`byte`) v4 @kind i2b;
  #L1d84f4.  call temp:= `put`(v9, v1, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d84fa.  v2:= v2 + 1;
  #L1d84fe.  v1:= v1 + 1;
  #L1d8502.  goto L1d83ca;
  #L1d8506.  call temp:= `position`(v9, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1d850c.  return @kind void;
  #L1d850e.  call temp:= `position`(v9) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d8514.  v0:= temp;
  #L1d8516.  call temp:= `position`(v9) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d851c.  v9:= temp;
  #L1d851e.  v1:= v1 - v9 @kind int;
  #L1d8520.  v1:= v1 + 1;
  #L1d8524.  call temp:= `max`(v2, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1d852a.  v9:= temp;
  #L1d852c.  v0:= v0 + v9 @kind int;
  #L1d852e.  v9:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d8532.  v1:= new `java.lang.StringBuilder`;
  #L1d8536.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d853c.  v3:= "Failed writing " @kind object;
  #L1d8540.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8546.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d854c.  v8:= temp;
  #L1d854e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8554.  v8:= " at index " @kind object;
  #L1d8558.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d855e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8564.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d856a.  v8:= temp @kind object;
  #L1d856c.  call `<init>`(v9, v8) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d8572.  throw v9;
  catch `java.lang.IndexOutOfBoundsException` @[L1d839a..L1d83e2] goto L1d850e;
  catch `java.lang.IndexOutOfBoundsException` @[L1d83fc..L1d8410] goto L1d8416;
  catch `java.lang.IndexOutOfBoundsException` @[L1d843a..L1d8456] goto L1d84b2;
  catch `java.lang.IndexOutOfBoundsException` @[L1d8464..L1d846a] goto L1d84aa;
  catch `java.lang.IndexOutOfBoundsException` @[L1d847a..L1d8480] goto L1d84b2;
  catch `java.lang.IndexOutOfBoundsException` @[L1d8490..L1d84a4] goto L1d84aa;
  catch `java.lang.IndexOutOfBoundsException` @[L1d84b6..L1d84c2] goto L1d850e;
  catch `java.lang.IndexOutOfBoundsException` @[L1d84d0..L1d84d6] goto L1d8416;
  catch `java.lang.IndexOutOfBoundsException` @[L1d84e6..L1d850c] goto L1d850e;
}
procedure `void` `h`(`java.lang.CharSequence` v0 @kind object, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.h:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `i`(`com.google.crypto.tink.shaded.protobuf.u0$b` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.i:(Ljava/nio/ByteBuffer;II)Z` @AccessFlag FINAL {
    temp;
    v0;

  #L1d7de8.  v0:= 0I;
  #L1d7dea.  call temp:= `k`(v1, v0, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.k:(ILjava/nio/ByteBuffer;II)I` @kind virtual;
  #L1d7df0.  v2:= temp;
  #L1d7df2.  if v2 != 0 then goto L1d7df8;
  #L1d7df6.  v0:= 1I;
  #L1d7df8.  return v0;
}
procedure `boolean` `j`(`com.google.crypto.tink.shaded.protobuf.u0$b` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.j:([BII)Z` @AccessFlag FINAL {
    temp;
    v0;

  #L1d7dc4.  v0:= 0I;
  #L1d7dc6.  call temp:= `l`(v1, v0, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.l:(I[BII)I` @kind virtual;
  #L1d7dcc.  v2:= temp;
  #L1d7dce.  if v2 != 0 then goto L1d7dd4;
  #L1d7dd2.  v0:= 1I;
  #L1d7dd4.  return v0;
}
procedure `int` `k`(`com.google.crypto.tink.shaded.protobuf.u0$b` v1 @kind this, `int` v2 , `java.nio.ByteBuffer` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.k:(ILjava/nio/ByteBuffer;II)I` @AccessFlag FINAL {
    temp;
    v0;

  #L1d7e0c.  call temp:= `hasArray`(v3) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1d7e12.  v0:= temp;
  #L1d7e14.  if v0 == 0 then goto L1d7e36;
  #L1d7e18.  call temp:= `arrayOffset`(v3) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1d7e1e.  v0:= temp;
  #L1d7e20.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1d7e26.  v3:= temp @kind object;
  #L1d7e28.  v4:= v4 + v0 @kind int;
  #L1d7e2a.  v0:= v0 + v5 @kind int;
  #L1d7e2c.  call temp:= `l`(v1, v2, v3, v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.l:(I[BII)I` @kind virtual;
  #L1d7e32.  v2:= temp;
  #L1d7e34.  return v2;
  #L1d7e36.  call temp:= `isDirect`(v3) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L1d7e3c.  v0:= temp;
  #L1d7e3e.  if v0 == 0 then goto L1d7e4c;
  #L1d7e42.  call temp:= `o`(v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.o:(ILjava/nio/ByteBuffer;II)I` @kind virtual;
  #L1d7e48.  v2:= temp;
  #L1d7e4a.  return v2;
  #L1d7e4c.  call temp:= `n`(v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.n:(ILjava/nio/ByteBuffer;II)I` @kind virtual;
  #L1d7e52.  v2:= temp;
  #L1d7e54.  return v2;
}
procedure `int` `l`(`int` v0 , `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.l:(I[BII)I` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `n`(`com.google.crypto.tink.shaded.protobuf.u0$b` v6 @kind this, `int` v7 , `java.nio.ByteBuffer` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.n:(ILjava/nio/ByteBuffer;II)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d7f88.  if v7 == 0 then goto L1d80a4;
  #L1d7f8c.  if v9 < v10 then goto L1d7f92;
  #L1d7f90.  return v7;
  #L1d7f92.  v0:= (`byte`) v7 @kind i2b;
  #L1d7f94.  v1:= -32I;
  #L1d7f98.  v2:= -1I;
  #L1d7f9a.  v3:= -65I;
  #L1d7f9e.  if v0 >= v1 then goto L1d7fc4;
  #L1d7fa2.  v7:= -62I;
  #L1d7fa6.  if v0 < v7 then goto L1d7fc2;
  #L1d7faa.  v7:= v9 + 1;
  #L1d7fae.  call temp:= `get`(v8, v9) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7fb4.  v9:= temp;
  #L1d7fb6.  if v9 <= v3 then goto L1d7fbc;
  #L1d7fba.  goto L1d7fc2;
  #L1d7fbc.  v9:= v7;
  #L1d7fbe.  goto L1d80a4;
  #L1d7fc2.  return v2;
  #L1d7fc4.  v4:= -16I;
  #L1d7fc8.  if v0 >= v4 then goto L1d8026;
  #L1d7fcc.  v7:= v7 ^> 8;
  #L1d7fd0.  v7:= ~v7 @kind int;
  #L1d7fd2.  v7:= (`byte`) v7 @kind i2b;
  #L1d7fd4.  if v7 != 0 then goto L1d7ff8;
  #L1d7fd8.  v7:= v9 + 1;
  #L1d7fdc.  call temp:= `get`(v8, v9) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d7fe2.  v9:= temp;
  #L1d7fe4.  if v7 < v10 then goto L1d7ff2;
  #L1d7fe8.  call temp:= `a`(v0, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d7fee.  v7:= temp;
  #L1d7ff0.  return v7;
  #L1d7ff2.  v5:= v9;
  #L1d7ff4.  v9:= v7;
  #L1d7ff6.  v7:= v5;
  #L1d7ff8.  if v7 > v3 then goto L1d8024;
  #L1d7ffc.  v4:= -96I;
  #L1d8000.  if v0 != v1 then goto L1d8008;
  #L1d8004.  if v7 < v4 then goto L1d8024;
  #L1d8008.  v1:= -19I;
  #L1d800c.  if v0 != v1 then goto L1d8014;
  #L1d8010.  if v7 >= v4 then goto L1d8024;
  #L1d8014.  v7:= v9 + 1;
  #L1d8018.  call temp:= `get`(v8, v9) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d801e.  v9:= temp;
  #L1d8020.  if v9 <= v3 then goto L1d7fbc;
  #L1d8024.  return v2;
  #L1d8026.  v1:= v7 ^> 8;
  #L1d802a.  v1:= ~v1 @kind int;
  #L1d802c.  v1:= (`byte`) v1 @kind i2b;
  #L1d802e.  v4:= 0I;
  #L1d8030.  if v1 != 0 then goto L1d8052;
  #L1d8034.  v7:= v9 + 1;
  #L1d8038.  call temp:= `get`(v8, v9) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d803e.  v1:= temp;
  #L1d8040.  if v7 < v10 then goto L1d804e;
  #L1d8044.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d804a.  v7:= temp;
  #L1d804c.  return v7;
  #L1d804e.  v9:= v7;
  #L1d8050.  goto L1d8058;
  #L1d8052.  v7:= v7 ^> 16;
  #L1d8056.  v4:= (`byte`) v7 @kind i2b;
  #L1d8058.  if v4 != 0 then goto L1d8078;
  #L1d805c.  v7:= v9 + 1;
  #L1d8060.  call temp:= `get`(v8, v9) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d8066.  v4:= temp;
  #L1d8068.  if v7 < v10 then goto L1d8076;
  #L1d806c.  call temp:= `b`(v0, v1, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.b:(III)I` @kind static;
  #L1d8072.  v7:= temp;
  #L1d8074.  return v7;
  #L1d8076.  v9:= v7;
  #L1d8078.  if v1 > v3 then goto L1d80a2;
  #L1d807c.  v7:= v0 ^< 28;
  #L1d8080.  v1:= v1 + 112;
  #L1d8084.  v7:= v7 + v1 @kind int;
  #L1d8086.  v7:= v7 ^> 30;
  #L1d808a.  if v7 != 0 then goto L1d80a2;
  #L1d808e.  if v4 > v3 then goto L1d80a2;
  #L1d8092.  v7:= v9 + 1;
  #L1d8096.  call temp:= `get`(v8, v9) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d809c.  v9:= temp;
  #L1d809e.  if v9 <= v3 then goto L1d7fbc;
  #L1d80a2.  return v2;
  #L1d80a4.  call temp:= `m`(v8, v9, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.m:(Ljava/nio/ByteBuffer;II)I` @kind static;
  #L1d80aa.  v7:= temp;
  #L1d80ac.  return v7;
}
procedure `int` `o`(`int` v0 , `java.nio.ByteBuffer` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.o:(ILjava/nio/ByteBuffer;II)I` @AccessFlag ABSTRACT {

  # return;
}
