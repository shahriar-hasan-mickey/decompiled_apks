record `com.google.crypto.tink.shaded.protobuf.r` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.a` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$LongList` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.g0` @kind interface {
  `long`[] `com.google.crypto.tink.shaded.protobuf.r.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.r.c` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.r` `@@com.google.crypto.tink.shaded.protobuf.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1c5f94.  v0:= new `com.google.crypto.tink.shaded.protobuf.r`;
  #L1c5f98.  v1:= 0I;
  #L1c5f9a.  v2:= new `long`[v1];
  #L1c5f9e.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:([JI)V` @kind direct;
  #L1c5fa4.  `@@com.google.crypto.tink.shaded.protobuf.r.d` @type ^`com.google.crypto.tink.shaded.protobuf.r` := v0 @kind object;
  #L1c5fa8.  call `makeImmutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.makeImmutable:()V` @kind virtual;
  #L1c5fae.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c5fc0.  v0:= 10I;
  #L1c5fc4.  v0:= new `long`[v0];
  #L1c5fc8.  v1:= 0I;
  #L1c5fca.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:([JI)V` @kind direct;
  #L1c5fd0.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `long`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:([JI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c5fe4.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.<init>:()V` @kind direct;
  #L1c5fea.  v0.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] := v1 @kind object;
  #L1c5fee.  v0.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v2;
  #L1c5ff2.  return @kind void;
}
procedure `void` `c`(`com.google.crypto.tink.shaded.protobuf.r` v4 @kind this, `int` v5 , `long` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.c:(IJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c6040.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c6046.  if v5 < 0 then goto L1c60bc;
  #L1c604a.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c604e.  if v5 > v0 then goto L1c60bc;
  #L1c6052.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c6056.  v2:= length @variable v1;
  #L1c6058.  if v0 >= v2 then goto L1c606a;
  #L1c605c.  v2:= v5 + 1;
  #L1c6060.  v0:= v0 - v5 @kind int;
  #L1c6062.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c6068.  goto L1c609a;
  #L1c606a.  v0:= v0 * 3;
  #L1c606e.  v0:= v0 / 2;
  #L1c6072.  v0:= v0 + 1;
  #L1c6076.  v0:= new `long`[v0];
  #L1c607a.  v2:= 0I;
  #L1c607c.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c6082.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c6086.  v2:= v5 + 1;
  #L1c608a.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c608e.  v3:= v3 - v5 @kind int;
  #L1c6090.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c6096.  v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] := v0 @kind object;
  #L1c609a.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c609e.  v0[v5]:= v6 @kind wide;
  #L1c60a2.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c60a6.  v5:= v5 + 1;
  #L1c60aa.  v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v5;
  #L1c60ae.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c60b2.  v5:= v5 + 1;
  #L1c60b6.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L1c60ba.  return @kind void;
  #L1c60bc.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L1c60c0.  call temp:= `g`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.g:(I)Ljava/lang/String;` @kind direct;
  #L1c60c6.  v5:= temp @kind object;
  #L1c60c8.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c60ce.  throw v6;
}
procedure `com.google.crypto.tink.shaded.protobuf.r` `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.d:()Lcom/google/crypto/tink/shaded/protobuf/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c5d88.  v0:= `@@com.google.crypto.tink.shaded.protobuf.r.d` @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind object;
  #L1c5d8c.  return v0 @kind object;
}
procedure `void` `e`(`com.google.crypto.tink.shaded.protobuf.r` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.e:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c6138.  if v2 < 0 then goto L1c6146;
  #L1c613c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c6140.  if v2 >= v0 then goto L1c6146;
  #L1c6144.  return @kind void;
  #L1c6146.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L1c614a.  call temp:= `g`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.g:(I)Ljava/lang/String;` @kind direct;
  #L1c6150.  v2:= temp @kind object;
  #L1c6152.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6158.  throw v0;
}
procedure `java.lang.String` `g`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.g:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c5f00.  v0:= new `java.lang.StringBuilder`;
  #L1c5f04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c5f0a.  v1:= "Index:" @kind object;
  #L1c5f0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c5f14.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c5f1a.  v3:= ", Size:" @kind object;
  #L1c5f1e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c5f24.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5f28.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c5f2e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c5f34.  v3:= temp @kind object;
  #L1c5f36.  return v3 @kind object;
}
procedure `void` `a`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 , `java.lang.Long` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.a:(ILjava/lang/Long;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c6004.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1c600a.  v0:= temp @kind wide;
  #L1c600c.  call `c`(v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.c:(IJ)V` @kind direct;
  #L1c6012.  return @kind void;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c6024.  v2:= (`java.lang.Long`) v2 @kind object;
  #L1c6028.  call `a`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.a:(ILjava/lang/Long;)V` @kind virtual;
  #L1c602e.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c5b90.  v1:= (`java.lang.Long`) v1 @kind object;
  #L1c5b94.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.b:(Ljava/lang/Long;)Z` @kind virtual;
  #L1c5b9a.  v1:= temp;
  #L1c5b9c.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.r` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c5bb0.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c5bb6.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1c5bbc.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L1c5bc0.  if v0 != 0 then goto L1c5bce;
  #L1c5bc4.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L1c5bca.  v6:= temp;
  #L1c5bcc.  return v6;
  #L1c5bce.  v6:= (`com.google.crypto.tink.shaded.protobuf.r`) v6 @kind object;
  #L1c5bd2.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5bd6.  v1:= 0I;
  #L1c5bd8.  if v0 != 0 then goto L1c5bde;
  #L1c5bdc.  return v1;
  #L1c5bde.  v2:= 2147483647I;
  #L1c5be4.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5be8.  v2:= v2 - v3 @kind int;
  #L1c5bea.  if v2 < v0 then goto L1c5c2e;
  #L1c5bee.  v3:= v3 + v0 @kind int;
  #L1c5bf0.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5bf4.  v2:= length @variable v0;
  #L1c5bf6.  if v3 <= v2 then goto L1c5c06;
  #L1c5bfa.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L1c5c00.  v0:= temp @kind object;
  #L1c5c02.  v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] := v0 @kind object;
  #L1c5c06.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5c0a.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5c0e.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5c12.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5c16.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c5c1c.  v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v3;
  #L1c5c20.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c5c24.  v0:= 1I;
  #L1c5c26.  v6:= v6 + v0 @kind int;
  #L1c5c28.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L1c5c2c.  return v0;
  #L1c5c2e.  v6:= new `java.lang.OutOfMemoryError`;
  #L1c5c32.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L1c5c38.  throw v6;
}
procedure `void` `addLong`(`com.google.crypto.tink.shaded.protobuf.r` v4 @kind this, `long` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c60e0.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c60e6.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c60ea.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c60ee.  v2:= length @variable v1;
  #L1c60f0.  if v0 != v2 then goto L1c6110;
  #L1c60f4.  v2:= v0 * 3;
  #L1c60f8.  v2:= v2 / 2;
  #L1c60fc.  v2:= v2 + 1;
  #L1c6100.  v2:= new `long`[v2];
  #L1c6104.  v3:= 0I;
  #L1c6106.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c610c.  v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] := v2 @kind object;
  #L1c6110.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c6114.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c6118.  v2:= v1 + 1;
  #L1c611c.  v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v2;
  #L1c6120.  v0[v1]:= v5 @kind wide;
  #L1c6124.  return @kind void;
}
procedure `boolean` `b`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `java.lang.Long` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.b:(Ljava/lang/Long;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c5b6c.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1c5b72.  v0:= temp @kind wide;
  #L1c5b74.  call `addLong`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L1c5b7a.  v3:= 1I;
  #L1c5b7c.  return v3;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.r` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1c5c4c.  v0:= 1I;
  #L1c5c4e.  if v8 != v9 then goto L1c5c54;
  #L1c5c52.  return v0;
  #L1c5c54.  v1:= instanceof @variable v9 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L1c5c58.  if v1 != 0 then goto L1c5c66;
  #L1c5c5c.  call temp:= `equals`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L1c5c62.  v9:= temp;
  #L1c5c64.  return v9;
  #L1c5c66.  v9:= (`com.google.crypto.tink.shaded.protobuf.r`) v9 @kind object;
  #L1c5c6a.  v1:= v8.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5c6e.  v2:= v9.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5c72.  v3:= 0I;
  #L1c5c74.  if v1 == v2 then goto L1c5c7a;
  #L1c5c78.  return v3;
  #L1c5c7a.  v9:= v9.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5c7e.  v1:= 0I;
  #L1c5c80.  v2:= v8.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5c84.  if v1 >= v2 then goto L1c5ca4;
  #L1c5c88.  v2:= v8.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5c8c.  v4:= v2[v1] @kind wide;
  #L1c5c90.  v6:= v9[v1] @kind wide;
  #L1c5c94.  v2:= lcmp(v4, v6);
  #L1c5c98.  if v2 == 0 then goto L1c5c9e;
  #L1c5c9c.  return v3;
  #L1c5c9e.  v1:= v1 + 1;
  #L1c5ca2.  goto L1c5c80;
  #L1c5ca4.  return v0;
}
procedure `java.lang.Long` `f`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.f:(I)Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c5df4.  call temp:= `getLong`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.getLong:(I)J` @kind virtual;
  #L1c5dfa.  v0:= temp @kind wide;
  #L1c5dfc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1c5e02.  v3:= temp @kind object;
  #L1c5e04.  return v3 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c5ea8.  call temp:= `f`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.f:(I)Ljava/lang/Long;` @kind virtual;
  #L1c5eae.  v1:= temp @kind object;
  #L1c5eb0.  return v1 @kind object;
}
procedure `long` `getLong`(`com.google.crypto.tink.shaded.protobuf.r` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.getLong:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c5f48.  call `e`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.e:(I)V` @kind direct;
  #L1c5f4e.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5f52.  v1:= v0[v4] @kind wide;
  #L1c5f56.  return v1 @kind wide;
}
procedure `java.lang.Long` `h`(`com.google.crypto.tink.shaded.protobuf.r` v5 @kind this, `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.h:(I)Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c5e18.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c5e1e.  call `e`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.e:(I)V` @kind direct;
  #L1c5e24.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5e28.  v1:= v0[v6] @kind wide;
  #L1c5e2c.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5e30.  v4:= v3 + -1;
  #L1c5e34.  if v6 >= v4 then goto L1c5e48;
  #L1c5e38.  v4:= v6 + 1;
  #L1c5e3c.  v3:= v3 - v6 @kind int;
  #L1c5e3e.  v3:= v3 + -1;
  #L1c5e42.  call `arraycopy`(v0, v4, v0, v6, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c5e48.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5e4c.  v6:= v6 + -1;
  #L1c5e50.  v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v6;
  #L1c5e54.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c5e58.  v6:= v6 + 1;
  #L1c5e5c.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L1c5e60.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1c5e66.  v6:= temp @kind object;
  #L1c5e68.  return v6 @kind object;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.r` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c5da0.  v0:= 1I;
  #L1c5da2.  v1:= 0I;
  #L1c5da4.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5da8.  if v1 >= v2 then goto L1c5dc8;
  #L1c5dac.  v0:= v0 * 31;
  #L1c5db0.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5db4.  v3:= v2[v1] @kind wide;
  #L1c5db8.  call temp:= `hashLong`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashLong:(J)I` @kind static;
  #L1c5dbe.  v2:= temp;
  #L1c5dc0.  v0:= v0 + v2 @kind int;
  #L1c5dc2.  v1:= v1 + 1;
  #L1c5dc6.  goto L1c5da4;
  #L1c5dc8.  return v0;
}
procedure `java.lang.Long` `i`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 , `java.lang.Long` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.i:(ILjava/lang/Long;)Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c5e7c.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1c5e82.  v0:= temp @kind wide;
  #L1c5e84.  call temp:= `setLong`(v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.setLong:(IJ)J` @kind virtual;
  #L1c5e8a.  v3:= temp @kind wide;
  #L1c5e8c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1c5e92.  v3:= temp @kind object;
  #L1c5e94.  return v3 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$LongList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$LongList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c5d2c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5d30.  if v3 < v0 then goto L1c5d50;
  #L1c5d34.  v0:= new `com.google.crypto.tink.shaded.protobuf.r`;
  #L1c5d38.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5d3c.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L1c5d42.  v3:= temp @kind object;
  #L1c5d44.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5d48.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:([JI)V` @kind direct;
  #L1c5d4e.  return v0 @kind object;
  #L1c5d50.  v3:= new `java.lang.IllegalArgumentException`;
  #L1c5d54.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L1c5d5a.  throw v3;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$ProtobufList;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c5d6c.  call temp:= `mutableCopyWithCapacity`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$LongList;` @kind virtual;
  #L1c5d72.  v1:= temp @kind object;
  #L1c5d74.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c5ec4.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.h:(I)Ljava/lang/Long;` @kind virtual;
  #L1c5eca.  v1:= temp @kind object;
  #L1c5ecc.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.r` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c5cb8.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c5cbe.  v0:= 0I;
  #L1c5cc0.  v1:= 0I;
  #L1c5cc2.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5cc6.  if v1 >= v2 then goto L1c5d1a;
  #L1c5cca.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5cce.  v3:= v2[v1] @kind wide;
  #L1c5cd2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1c5cd8.  v2:= temp @kind object;
  #L1c5cda.  call temp:= `equals`(v6, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c5ce0.  v2:= temp;
  #L1c5ce2.  if v2 == 0 then goto L1c5d14;
  #L1c5ce6.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5cea.  v0:= v1 + 1;
  #L1c5cee.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5cf2.  v2:= v2 - v1 @kind int;
  #L1c5cf4.  v3:= 1I;
  #L1c5cf6.  v2:= v2 - v3 @kind int;
  #L1c5cf8.  call `arraycopy`(v6, v0, v6, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c5cfe.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5d02.  v6:= v6 - v3 @kind int;
  #L1c5d04.  v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v6;
  #L1c5d08.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c5d0c.  v6:= v6 + v3 @kind int;
  #L1c5d0e.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L1c5d12.  return v3;
  #L1c5d14.  v1:= v1 + 1;
  #L1c5d18.  goto L1c5cc2;
  #L1c5d1a.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c616c.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c6172.  if v4 < v3 then goto L1c61a0;
  #L1c6176.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c617a.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c617e.  v1:= v1 - v4 @kind int;
  #L1c6180.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c6186.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c618a.  v4:= v4 - v3 @kind int;
  #L1c618c.  v0:= v0 - v4 @kind int;
  #L1c618e.  v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v0;
  #L1c6192.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L1c6196.  v3:= v3 + 1;
  #L1c619a.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L1c619e.  return @kind void;
  #L1c61a0.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L1c61a4.  v4:= "toIndex < fromIndex" @kind object;
  #L1c61a8.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c61ae.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c5ee0.  v2:= (`java.lang.Long`) v2 @kind object;
  #L1c5ee4.  call temp:= `i`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.i:(ILjava/lang/Long;)Ljava/lang/Long;` @kind virtual;
  #L1c5eea.  v1:= temp @kind object;
  #L1c5eec.  return v1 @kind object;
}
procedure `long` `setLong`(`com.google.crypto.tink.shaded.protobuf.r` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.setLong:(IJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c5f68.  call `ensureIsMutable`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L1c5f6e.  call `e`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.e:(I)V` @kind direct;
  #L1c5f74.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L1c5f78.  v1:= v0[v4] @kind wide;
  #L1c5f7c.  v0[v4]:= v5 @kind wide;
  #L1c5f80.  return v1 @kind wide;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.r` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c5ddc.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L1c5de0.  return v0;
}
