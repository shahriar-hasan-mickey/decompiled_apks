record `com.google.crypto.tink.shaded.protobuf.CodedInputStream` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @AccessFlag ;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @AccessFlag ;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.c` @AccessFlag ;
  `com.google.crypto.tink.shaded.protobuf.f` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.d` @AccessFlag ;
  `boolean` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1b69c8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b69ce.  v0:= 100I;
  #L1b69d2.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int` := v0;
  #L1b69d6.  v0:= 2147483647I;
  #L1b69dc.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.c` @type ^`int` := v0;
  #L1b69e0.  v0:= 0I;
  #L1b69e2.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.e` @type ^`boolean` := v0 @kind boolean;
  #L1b69e6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.CodedInputStream$a` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1b69f8.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:()V` @kind direct;
  #L1b69fe.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `a`(`java.lang.Iterable` v5 @kind object, `boolean` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.a:(Ljava/lang/Iterable;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b6718.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b671e.  v0:= temp @kind object;
  #L1b6720.  v1:= 0I;
  #L1b6722.  v2:= 0I;
  #L1b6724.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b672a.  v3:= temp;
  #L1b672c.  if v3 == 0 then goto L1b6770;
  #L1b6730.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b6736.  v3:= temp @kind object;
  #L1b6738.  v3:= (`java.nio.ByteBuffer`) v3 @kind object;
  #L1b673c.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1b6742.  v4:= temp;
  #L1b6744.  v2:= v2 + v4 @kind int;
  #L1b6746.  call temp:= `hasArray`(v3) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1b674c.  v4:= temp;
  #L1b674e.  if v4 == 0 then goto L1b6758;
  #L1b6752.  v1:= v1 ^| 1;
  #L1b6756.  goto L1b6724;
  #L1b6758.  call temp:= `isDirect`(v3) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L1b675e.  v3:= temp;
  #L1b6760.  if v3 == 0 then goto L1b676a;
  #L1b6764.  v1:= v1 ^| 2;
  #L1b6768.  goto L1b6724;
  #L1b676a.  v1:= v1 ^| 4;
  #L1b676e.  goto L1b6724;
  #L1b6770.  v0:= 2I;
  #L1b6772.  if v1 != v0 then goto L1b6784;
  #L1b6776.  v0:= new `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c`;
  #L1b677a.  v1:= 0I;
  #L1b677c.  call `<init>`(v0, v5, v2, v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.<init>:(Ljava/lang/Iterable;IZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L1b6782.  return v0 @kind object;
  #L1b6784.  v6:= new `com.google.crypto.tink.shaded.protobuf.p`;
  #L1b6788.  call `<init>`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L1b678e.  call temp:= `newInstance`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b6794.  v5:= temp @kind object;
  #L1b6796.  return v5 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `b`(`java.nio.ByteBuffer` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.b:(Ljava/nio/ByteBuffer;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1b67c4.  call temp:= `hasArray`(v3) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1b67ca.  v0:= temp;
  #L1b67cc.  if v0 == 0 then goto L1b67fc;
  #L1b67d0.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1b67d6.  v0:= temp @kind object;
  #L1b67d8.  call temp:= `arrayOffset`(v3) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1b67de.  v1:= temp;
  #L1b67e0.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1b67e6.  v2:= temp;
  #L1b67e8.  v1:= v1 + v2 @kind int;
  #L1b67ea.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1b67f0.  v3:= temp;
  #L1b67f2.  call temp:= `c`(v0, v1, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b67f8.  v3:= temp @kind object;
  #L1b67fa.  return v3 @kind object;
  #L1b67fc.  call temp:= `isDirect`(v3) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L1b6802.  v0:= temp;
  #L1b6804.  if v0 == 0 then goto L1b6822;
  #L1b6808.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.e:()Z` @kind static;
  #L1b680e.  v0:= temp;
  #L1b6810.  if v0 == 0 then goto L1b6822;
  #L1b6814.  v0:= new `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e`;
  #L1b6818.  v1:= 0I;
  #L1b681a.  call `<init>`(v0, v3, v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.<init>:(Ljava/nio/ByteBuffer;ZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L1b6820.  return v0 @kind object;
  #L1b6822.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1b6828.  v4:= temp;
  #L1b682a.  v0:= new `byte`[v4];
  #L1b682e.  call temp:= `duplicate`(v3) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1b6834.  v3:= temp @kind object;
  #L1b6836.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1b683c.  v3:= 0I;
  #L1b683e.  v1:= 1I;
  #L1b6840.  call temp:= `c`(v0, v3, v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b6846.  v3:= temp @kind object;
  #L1b6848.  return v3 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `c`(`byte`[] v7 @kind object, `int` v8 , `int` v9 , `boolean` v10 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b662c.  v6:= new `com.google.crypto.tink.shaded.protobuf.CodedInputStream$b`;
  #L1b6630.  v5:= 0I;
  #L1b6632.  v0:= v6 @kind object;
  #L1b6634.  v1:= v7 @kind object;
  #L1b6636.  v2:= v8;
  #L1b6638.  v3:= v9;
  #L1b663a.  v4:= v10;
  #L1b663c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$b;.<init>:([BIIZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L1b6642.  call temp:= `pushLimit`(v6, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$b;.pushLimit:(I)I` @kind virtual;
  #L1b6648.  return v6 @kind object;
  #L1b664a.  v7:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L1b664c.  v8:= new `java.lang.IllegalArgumentException`;
  #L1b6650.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1b6656.  throw v8;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L1b6642..L1b6648] goto L1b664a;
}
procedure `int` `decodeZigZag32`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag32:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b685c.  v0:= v1 ^>> 1;
  #L1b6860.  v1:= v1 ^& 1;
  #L1b6864.  v1:= -v1 @kind int;
  #L1b6866.  v1:= v1 ^~ v0 @kind int;
  #L1b6868.  return v1;
}
procedure `long` `decodeZigZag64`(`long` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag64:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b69a4.  v0:= 1I;
  #L1b69a6.  v0:= v4 ^>> v0 @kind long;
  #L1b69aa.  v2:= 1L;
  #L1b69ae.  v4:= v4 ^& v2 @kind long;
  #L1b69b0.  v4:= -v4 @kind long;
  #L1b69b2.  v4:= v4 ^~ v0 @kind long;
  #L1b69b4.  return v4 @kind wide;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`java.io.InputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b6678.  v0:= 4096I;
  #L1b667c.  call temp:= `newInstance`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b6682.  v1:= temp @kind object;
  #L1b6684.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`java.io.InputStream` v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b6698.  if v3 <= 0 then goto L1b66bc;
  #L1b669c.  if v2 != 0 then goto L1b66ae;
  #L1b66a0.  v2:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L1b66a4.  call temp:= `newInstance`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([B)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b66aa.  v2:= temp @kind object;
  #L1b66ac.  return v2 @kind object;
  #L1b66ae.  v0:= new `com.google.crypto.tink.shaded.protobuf.CodedInputStream$d`;
  #L1b66b2.  v1:= 0I;
  #L1b66b4.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$d;.<init>:(Ljava/io/InputStream;ILcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L1b66ba.  return v0 @kind object;
  #L1b66bc.  v2:= new `java.lang.IllegalArgumentException`;
  #L1b66c0.  v3:= "bufferSize must be > 0" @kind object;
  #L1b66c4.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b66ca.  throw v2;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/lang/Iterable;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b66dc.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.e:()Z` @kind static;
  #L1b66e2.  v0:= temp;
  #L1b66e4.  if v0 != 0 then goto L1b66fc;
  #L1b66e8.  v0:= new `com.google.crypto.tink.shaded.protobuf.p`;
  #L1b66ec.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L1b66f2.  call temp:= `newInstance`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b66f8.  v1:= temp @kind object;
  #L1b66fa.  return v1 @kind object;
  #L1b66fc.  v0:= 0I;
  #L1b66fe.  call temp:= `a`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.a:(Ljava/lang/Iterable;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b6704.  v1:= temp @kind object;
  #L1b6706.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b67a8.  v0:= 0I;
  #L1b67aa.  call temp:= `b`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.b:(Ljava/nio/ByteBuffer;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b67b0.  v1:= temp @kind object;
  #L1b67b2.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([B)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b65f0.  v0:= length @variable v2;
  #L1b65f2.  v1:= 0I;
  #L1b65f4.  call temp:= `newInstance`(v2, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([BII)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b65fa.  v2:= temp @kind object;
  #L1b65fc.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([BII)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b6610.  v0:= 0I;
  #L1b6612.  call temp:= `c`(v1, v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1b6618.  v1:= temp @kind object;
  #L1b661a.  return v1 @kind object;
}
procedure `int` `readRawVarint32`(`int` v3 , `java.io.InputStream` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawVarint32:(ILjava/io/InputStream;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1b687c.  v0:= v3 ^& 128;
  #L1b6880.  if v0 != 0 then goto L1b6886;
  #L1b6884.  return v3;
  #L1b6886.  v3:= v3 ^& 127;
  #L1b688a.  v0:= 7I;
  #L1b688c.  v1:= 32I;
  #L1b6890.  v2:= -1I;
  #L1b6892.  if v0 >= v1 then goto L1b68c4;
  #L1b6896.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L1b689c.  v1:= temp;
  #L1b689e.  if v1 == v2 then goto L1b68ba;
  #L1b68a2.  v2:= v1 ^& 127;
  #L1b68a6.  v2:= v2 ^< v0 @kind int;
  #L1b68a8.  v3:= v3 ^| v2 @kind int;
  #L1b68aa.  v1:= v1 ^& 128;
  #L1b68ae.  if v1 != 0 then goto L1b68b4;
  #L1b68b2.  return v3;
  #L1b68b4.  v0:= v0 + 7;
  #L1b68b8.  goto L1b688c;
  #L1b68ba.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b68c0.  v3:= temp @kind object;
  #L1b68c2.  throw v3;
  #L1b68c4.  v1:= 64I;
  #L1b68c8.  if v0 >= v1 then goto L1b68f2;
  #L1b68cc.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L1b68d2.  v1:= temp;
  #L1b68d4.  if v1 == v2 then goto L1b68e8;
  #L1b68d8.  v1:= v1 ^& 128;
  #L1b68dc.  if v1 != 0 then goto L1b68e2;
  #L1b68e0.  return v3;
  #L1b68e2.  v0:= v0 + 7;
  #L1b68e6.  goto L1b68c4;
  #L1b68e8.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b68ee.  v3:= temp @kind object;
  #L1b68f0.  throw v3;
  #L1b68f2.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1b68f8.  v3:= temp @kind object;
  #L1b68fa.  throw v3;
}
procedure `void` `checkLastTagWas`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.checkLastTagWas:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `enableAliasing`(`boolean` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.enableAliasing:(Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getBytesUntilLimit`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.getBytesUntilLimit:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getLastTag`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.getLastTag:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTotalBytesRead`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.getTotalBytesRead:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAtEnd`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.isAtEnd:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `popLimit`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.popLimit:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `pushLimit`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.pushLimit:(I)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `readBool`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readBool:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `readByteArray`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readByteArray:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.nio.ByteBuffer` `readByteBuffer`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readBytes`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double` `readDouble`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readDouble:()D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readEnum`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readEnum:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readFixed32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFixed32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readFixed64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFixed64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `readFloat`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFloat:()F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readGroup`(`int` v0 , `com.google.crypto.tink.shaded.protobuf.Parser` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readGroup`(`int` v0 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readInt32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readInt32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readInt64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readInt64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readMessage`(`com.google.crypto.tink.shaded.protobuf.Parser` v0 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readMessage`(`com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v0 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `readRawByte`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawByte:()B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `readRawBytes`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawBytes:(I)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readRawLittleEndian32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawLittleEndian32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readRawLittleEndian64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawLittleEndian64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readRawVarint32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawVarint32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readRawVarint64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawVarint64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readSFixed32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSFixed32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readSFixed64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSFixed64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readSInt32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSInt32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readSInt64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSInt64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `readString`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readString:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `readStringRequireUtf8`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readStringRequireUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readTag`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readTag:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readUInt32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUInt32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readUInt64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUInt64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readUnknownGroup`(`int` v0 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUnknownGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resetSizeCounter`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.resetSizeCounter:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `setRecursionLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.setRecursionLimit:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b690c.  if v4 < 0 then goto L1b691a;
  #L1b6910.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L1b6914.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int` := v4;
  #L1b6918.  return v0;
  #L1b691a.  v0:= new `java.lang.IllegalArgumentException`;
  #L1b691e.  v1:= new `java.lang.StringBuilder`;
  #L1b6922.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b6928.  v2:= "Recursion limit cannot be negative: " @kind object;
  #L1b692c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b6932.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b6938.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b693e.  v4:= temp @kind object;
  #L1b6940.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b6946.  throw v0;
}
procedure `int` `setSizeLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.setSizeLimit:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b6958.  if v4 < 0 then goto L1b6966;
  #L1b695c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.c` @type ^`int`;
  #L1b6960.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.c` @type ^`int` := v4;
  #L1b6964.  return v0;
  #L1b6966.  v0:= new `java.lang.IllegalArgumentException`;
  #L1b696a.  v1:= new `java.lang.StringBuilder`;
  #L1b696e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b6974.  v2:= "Size limit cannot be negative: " @kind object;
  #L1b6978.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b697e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b6984.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b698a.  v4:= temp @kind object;
  #L1b698c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b6992.  throw v0;
}
procedure `boolean` `skipField`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipField:(I)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `skipField`(`int` v0 , `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipField:(ILcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipMessage`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipMessage:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipMessage`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipMessage:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipRawBytes`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipRawBytes:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
