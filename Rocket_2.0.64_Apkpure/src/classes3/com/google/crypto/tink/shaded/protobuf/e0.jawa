record `com.google.crypto.tink.shaded.protobuf.e0` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind class {
  `java.nio.ByteBuffer` `com.google.crypto.tink.shaded.protobuf.e0.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1d1520.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.<init>:()V` @kind direct;
  #L1d1526.  v0:= "buffer" @kind object;
  #L1d152a.  call temp:= `b`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.b:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1d1530.  call temp:= `slice`(v2) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d1536.  v2:= temp @kind object;
  #L1d1538.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L1d153e.  v0:= temp @kind object;
  #L1d1540.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d1546.  v2:= temp @kind object;
  #L1d1548.  v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L1d154c.  return @kind void;
}
procedure `java.nio.ByteBuffer` `o`(`com.google.crypto.tink.shaded.protobuf.e0` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.o:(Lcom/google/crypto/tink/shaded/protobuf/e0;)Ljava/nio/ByteBuffer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1d1420.  v0:= v0.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d1424.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `p`(`com.google.crypto.tink.shaded.protobuf.e0` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.p:(II)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1d1458.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d145c.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d1462.  v0:= temp;
  #L1d1464.  if v4 < v0 then goto L1d14b2;
  #L1d1468.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d146c.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d1472.  v0:= temp;
  #L1d1474.  if v5 > v0 then goto L1d14b2;
  #L1d1478.  if v4 > v5 then goto L1d14b2;
  #L1d147c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d1480.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d1486.  v0:= temp @kind object;
  #L1d1488.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d148c.  call temp:= `position`(v1) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d1492.  v1:= temp;
  #L1d1494.  v4:= v4 - v1 @kind int;
  #L1d1496.  call temp:= `position`(v0, v4) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1d149c.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d14a0.  call temp:= `position`(v4) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d14a6.  v4:= temp;
  #L1d14a8.  v5:= v5 - v4 @kind int;
  #L1d14aa.  call temp:= `limit`(v0, v5) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1d14b0.  return v0 @kind object;
  #L1d14b2.  v0:= new `java.lang.IllegalArgumentException`;
  #L1d14b6.  v1:= 2I;
  #L1d14b8.  v1:= new `java.lang.Object`[v1];
  #L1d14bc.  v2:= 0I;
  #L1d14be.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d14c4.  v4:= temp @kind object;
  #L1d14c6.  v1[v2]:= v4 @kind object;
  #L1d14ca.  v4:= 1I;
  #L1d14cc.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d14d2.  v5:= temp @kind object;
  #L1d14d4.  v1[v4]:= v5 @kind object;
  #L1d14d8.  v4:= "Invalid indices [%d, %d]" @kind object;
  #L1d14dc.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d14e2.  v4:= temp @kind object;
  #L1d14e4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d14ea.  throw v0;
}
procedure `void` `readObject`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1d15b0.  v2:= new `java.io.InvalidObjectException`;
  #L1d15b4.  v0:= "NioByteString instances are not to be serialized directly" @kind object;
  #L1d15b8.  call `<init>`(v2, v0) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d15be.  throw v2;
}
procedure `java.lang.Object` `writeReplace`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1d138c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d1390.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d1396.  v0:= temp @kind object;
  #L1d1398.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1d139e.  v0:= temp @kind object;
  #L1d13a0.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `asReadOnlyByteBuffer`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d1438.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d143c.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d1442.  v0:= temp @kind object;
  #L1d1444.  return v0 @kind object;
}
procedure `java.util.List` `asReadOnlyByteBufferList`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.asReadOnlyByteBufferList:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d14fc.  call temp:= `asReadOnlyByteBuffer`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d1502.  v0:= temp @kind object;
  #L1d1504.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d150a.  v0:= temp @kind object;
  #L1d150c.  return v0 @kind object;
}
procedure `byte` `byteAt`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.byteAt:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d1228.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d122c.  call temp:= `get`(v0, v2) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d1232.  v2:= temp;
  #L1d1234.  return v2;
  #L1d1236.  v2:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1d1238.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d123c.  call temp:= `getMessage`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1d1242.  v2:= temp @kind object;
  #L1d1244.  call `<init>`(v0, v2) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d124a.  throw v0;
  #L1d124c.  v2:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L1d124e.  throw v2;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L1d1228..L1d1234] goto L1d124c;
  catch `java.lang.IndexOutOfBoundsException` @[L1d1228..L1d1234] goto L1d1236;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.copyTo:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d1560.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d1564.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d156a.  v0:= temp @kind object;
  #L1d156c.  call temp:= `put`(v2, v0) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d1572.  return @kind void;
}
procedure `void` `copyToInternal`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.copyToInternal:([BIII)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1d1584.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d1588.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d158e.  v0:= temp @kind object;
  #L1d1590.  call temp:= `position`(v0, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1d1596.  call temp:= `get`(v0, v2, v4, v5) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d159c.  return @kind void;
}
procedure `byte` `e`(`com.google.crypto.tink.shaded.protobuf.e0` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.e:(I)B` @AccessFlag PUBLIC {
    temp;

  #L1d1270.  call temp:= `byteAt`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.byteAt:(I)B` @kind virtual;
  #L1d1276.  v1:= temp;
  #L1d1278.  return v1;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.e0` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d1144.  v0:= 1I;
  #L1d1146.  if v6 != v5 then goto L1d114c;
  #L1d114a.  return v0;
  #L1d114c.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind boolean;
  #L1d1150.  v2:= 0I;
  #L1d1152.  if v1 != 0 then goto L1d1158;
  #L1d1156.  return v2;
  #L1d1158.  v1:= v6 @kind object;
  #L1d115a.  v1:= (`com.google.crypto.tink.shaded.protobuf.ByteString`) v1 @kind object;
  #L1d115e.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.size:()I` @kind virtual;
  #L1d1164.  v3:= temp;
  #L1d1166.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1d116c.  v4:= temp;
  #L1d116e.  if v3 == v4 then goto L1d1174;
  #L1d1172.  return v2;
  #L1d1174.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.size:()I` @kind virtual;
  #L1d117a.  v2:= temp;
  #L1d117c.  if v2 != 0 then goto L1d1182;
  #L1d1180.  return v0;
  #L1d1182.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.e0` @kind boolean;
  #L1d1186.  if v0 == 0 then goto L1d11a0;
  #L1d118a.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d118e.  v6:= (`com.google.crypto.tink.shaded.protobuf.e0`) v6 @kind object;
  #L1d1192.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d1196.  call temp:= `equals`(v0, v6) @signature `Ljava/nio/ByteBuffer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d119c.  v6:= temp;
  #L1d119e.  return v6;
  #L1d11a0.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.l0` @kind boolean;
  #L1d11a4.  if v0 == 0 then goto L1d11b2;
  #L1d11a8.  call temp:= `equals`(v6, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d11ae.  v6:= temp;
  #L1d11b0.  return v6;
  #L1d11b2.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d11b6.  call temp:= `asReadOnlyByteBuffer`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d11bc.  v0:= temp @kind object;
  #L1d11be.  call temp:= `equals`(v6, v0) @signature `Ljava/nio/ByteBuffer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d11c4.  v6:= temp;
  #L1d11c6.  return v6;
}
procedure `boolean` `isValidUtf8`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.isValidUtf8:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d1208.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d120c.  call temp:= `s`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.s:(Ljava/nio/ByteBuffer;)Z` @kind static;
  #L1d1212.  v0:= temp;
  #L1d1214.  return v0;
}
procedure `void` `m`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteOutput` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L1d15d0.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d15d4.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1d15da.  v0:= temp @kind object;
  #L1d15dc.  call `writeLazy`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;.writeLazy:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L1d15e2.  return @kind void;
}
procedure `boolean` `n`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @AccessFlag  {
    temp;
    v0;

  #L1d11d8.  v0:= 0I;
  #L1d11da.  call temp:= `substring`(v1, v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1d11e0.  v0:= temp @kind object;
  #L1d11e2.  v4:= v4 + v3 @kind int;
  #L1d11e4.  call temp:= `substring`(v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1d11ea.  v2:= temp @kind object;
  #L1d11ec.  call temp:= `equals`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d11f2.  v2:= temp;
  #L1d11f4.  return v2;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newCodedInput`(`com.google.crypto.tink.shaded.protobuf.e0` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.newCodedInput:()Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d12dc.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d12e0.  v1:= 1I;
  #L1d12e2.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.b:(Ljava/nio/ByteBuffer;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1d12e8.  v0:= temp @kind object;
  #L1d12ea.  return v0 @kind object;
}
procedure `java.io.InputStream` `newInput`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.newInput:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d1370.  v0:= new `com.google.crypto.tink.shaded.protobuf.e0$a`;
  #L1d1374.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/e0;)V` @kind direct;
  #L1d137a.  return v0 @kind object;
}
procedure `int` `partialHash`(`com.google.crypto.tink.shaded.protobuf.e0` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.partialHash:(III)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1d12fc.  v0:= v4;
  #L1d12fe.  v1:= v4 + v5 @kind int;
  #L1d1302.  if v0 >= v1 then goto L1d131e;
  #L1d1306.  v3:= v3 * 31;
  #L1d130a.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d130e.  call temp:= `get`(v1, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L1d1314.  v1:= temp;
  #L1d1316.  v3:= v3 + v1 @kind int;
  #L1d1318.  v0:= v0 + 1;
  #L1d131c.  goto L1d12fe;
  #L1d131e.  return v3;
}
procedure `int` `partialIsValidUtf8`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.partialIsValidUtf8:(III)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1d1330.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d1334.  v4:= v4 + v3 @kind int;
  #L1d1336.  call temp:= `v`(v2, v0, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.v:(ILjava/nio/ByteBuffer;II)I` @kind static;
  #L1d133c.  v2:= temp;
  #L1d133e.  return v2;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d1350.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d1354.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1d135a.  v0:= temp;
  #L1d135c.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`com.google.crypto.tink.shaded.protobuf.e0` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC {
    temp;

  #L1d128c.  call temp:= `p`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.p:(II)Ljava/nio/ByteBuffer;` @kind direct;
  #L1d1292.  v1:= temp @kind object;
  #L1d1294.  v2:= new `com.google.crypto.tink.shaded.protobuf.e0`;
  #L1d1298.  call `<init>`(v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L1d129e.  return v2 @kind object;
  #L1d12a0.  v1:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1d12a2.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d12a6.  call temp:= `getMessage`(v1) @signature `Ljava/lang/IndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1d12ac.  v1:= temp @kind object;
  #L1d12ae.  call `<init>`(v2, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d12b4.  throw v2;
  #L1d12b6.  v1:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L1d12b8.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L1d128c..L1d129e] goto L1d12b6;
  catch `java.lang.IndexOutOfBoundsException` @[L1d128c..L1d129e] goto L1d12a0;
}
procedure `java.lang.String` `toStringInternal`(`com.google.crypto.tink.shaded.protobuf.e0` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d13b4.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d13b8.  call temp:= `hasArray`(v0) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1d13be.  v0:= temp;
  #L1d13c0.  if v0 == 0 then goto L1d13f8;
  #L1d13c4.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d13c8.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1d13ce.  v0:= temp @kind object;
  #L1d13d0.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d13d4.  call temp:= `arrayOffset`(v1) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1d13da.  v1:= temp;
  #L1d13dc.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d13e0.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d13e6.  v2:= temp;
  #L1d13e8.  v1:= v1 + v2 @kind int;
  #L1d13ea.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1d13ee.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1d13f4.  v2:= temp;
  #L1d13f6.  goto L1d1404;
  #L1d13f8.  call temp:= `toByteArray`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1d13fe.  v0:= temp @kind object;
  #L1d1400.  v1:= 0I;
  #L1d1402.  v2:= length @variable v0;
  #L1d1404.  v3:= new `java.lang.String`;
  #L1d1408.  call `<init>`(v3, v0, v1, v2, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L1d140e.  return v3 @kind object;
}
procedure `void` `writeTo`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d15f4.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1d15fa.  v0:= temp @kind object;
  #L1d15fc.  call `write`(v2, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L1d1602.  return @kind void;
}
