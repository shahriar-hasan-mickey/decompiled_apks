record `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` @kind class @AccessFlag ABSTRACT extends `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` @kind class {
  `byte`[] `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @AccessFlag FINAL;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.f` @AccessFlag FINAL;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @AccessFlag ;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1b6a48.  v0:= 0I;
  #L1b6a4a.  call `<init>`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$a;)V` @kind direct;
  #L1b6a50.  if v2 < 0 then goto L1b6a70;
  #L1b6a54.  v0:= 20I;
  #L1b6a58.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1b6a5e.  v2:= temp;
  #L1b6a60.  v2:= new `byte`[v2];
  #L1b6a64.  v1.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] := v2 @kind object;
  #L1b6a68.  v2:= length @variable v2;
  #L1b6a6a.  v1.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.f` @type ^`int` := v2;
  #L1b6a6e.  return @kind void;
  #L1b6a70.  v2:= new `java.lang.IllegalArgumentException`;
  #L1b6a74.  v0:= "bufferSize must be >= 0" @kind object;
  #L1b6a78.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b6a7e.  throw v2;
}
procedure `int` `getTotalBytesWritten`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.getTotalBytesWritten:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b6a10.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6a14.  return v0;
}
procedure `void` `p`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v3 @kind this, `byte` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.p:(B)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b6a90.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6a94.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6a98.  v2:= v1 + 1;
  #L1b6a9c.  v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6aa0.  v0[v1]:= v4 @kind byte;
  #L1b6aa4.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6aa8.  v4:= v4 + 1;
  #L1b6aac.  v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v4;
  #L1b6ab0.  return @kind void;
}
procedure `void` `q`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.q:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b6ac4.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6ac8.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6acc.  v2:= v1 + 1;
  #L1b6ad0.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6ad4.  v3:= v5 ^& 255;
  #L1b6ad8.  v3:= (`byte`) v3 @kind i2b;
  #L1b6ada.  v0[v1]:= v3 @kind byte;
  #L1b6ade.  v1:= v2 + 1;
  #L1b6ae2.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L1b6ae6.  v3:= v5 ^> 8;
  #L1b6aea.  v3:= v3 ^& 255;
  #L1b6aee.  v3:= (`byte`) v3 @kind i2b;
  #L1b6af0.  v0[v2]:= v3 @kind byte;
  #L1b6af4.  v2:= v1 + 1;
  #L1b6af8.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6afc.  v3:= v5 ^> 16;
  #L1b6b00.  v3:= v3 ^& 255;
  #L1b6b04.  v3:= (`byte`) v3 @kind i2b;
  #L1b6b06.  v0[v1]:= v3 @kind byte;
  #L1b6b0a.  v1:= v2 + 1;
  #L1b6b0e.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L1b6b12.  v5:= v5 ^> 24;
  #L1b6b16.  v5:= v5 ^& 255;
  #L1b6b1a.  v5:= (`byte`) v5 @kind i2b;
  #L1b6b1c.  v0[v2]:= v5 @kind byte;
  #L1b6b20.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6b24.  v5:= v5 + 4;
  #L1b6b28.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v5;
  #L1b6b2c.  return @kind void;
}
procedure `void` `r`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v8 @kind this, `long` v9 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.r:(J)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b6b40.  v0:= v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6b44.  v1:= v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6b48.  v2:= v1 + 1;
  #L1b6b4c.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6b50.  v3:= 255L;
  #L1b6b54.  v5:= v9 ^& v3 @kind long;
  #L1b6b58.  v6:= (`int`) v5 @kind l2i;
  #L1b6b5a.  v5:= (`byte`) v6 @kind i2b;
  #L1b6b5c.  v0[v1]:= v5 @kind byte;
  #L1b6b60.  v1:= v2 + 1;
  #L1b6b64.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L1b6b68.  v5:= 8I;
  #L1b6b6c.  v6:= v9 ^> v5 @kind long;
  #L1b6b70.  v6:= v6 ^& v3 @kind long;
  #L1b6b72.  v7:= (`int`) v6 @kind l2i;
  #L1b6b74.  v6:= (`byte`) v7 @kind i2b;
  #L1b6b76.  v0[v2]:= v6 @kind byte;
  #L1b6b7a.  v2:= v1 + 1;
  #L1b6b7e.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6b82.  v6:= 16I;
  #L1b6b86.  v6:= v9 ^> v6 @kind long;
  #L1b6b8a.  v6:= v6 ^& v3 @kind long;
  #L1b6b8c.  v7:= (`int`) v6 @kind l2i;
  #L1b6b8e.  v6:= (`byte`) v7 @kind i2b;
  #L1b6b90.  v0[v1]:= v6 @kind byte;
  #L1b6b94.  v1:= v2 + 1;
  #L1b6b98.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L1b6b9c.  v6:= 24I;
  #L1b6ba0.  v6:= v9 ^> v6 @kind long;
  #L1b6ba4.  v3:= v3 ^& v6 @kind long;
  #L1b6ba6.  v4:= (`int`) v3 @kind l2i;
  #L1b6ba8.  v3:= (`byte`) v4 @kind i2b;
  #L1b6baa.  v0[v2]:= v3 @kind byte;
  #L1b6bae.  v2:= v1 + 1;
  #L1b6bb2.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6bb6.  v3:= 32I;
  #L1b6bba.  v3:= v9 ^> v3 @kind long;
  #L1b6bbe.  v4:= (`int`) v3 @kind l2i;
  #L1b6bc0.  v3:= v4 ^& 255;
  #L1b6bc4.  v3:= (`byte`) v3 @kind i2b;
  #L1b6bc6.  v0[v1]:= v3 @kind byte;
  #L1b6bca.  v1:= v2 + 1;
  #L1b6bce.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L1b6bd2.  v3:= 40I;
  #L1b6bd6.  v3:= v9 ^> v3 @kind long;
  #L1b6bda.  v4:= (`int`) v3 @kind l2i;
  #L1b6bdc.  v3:= v4 ^& 255;
  #L1b6be0.  v3:= (`byte`) v3 @kind i2b;
  #L1b6be2.  v0[v2]:= v3 @kind byte;
  #L1b6be6.  v2:= v1 + 1;
  #L1b6bea.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6bee.  v3:= 48I;
  #L1b6bf2.  v3:= v9 ^> v3 @kind long;
  #L1b6bf6.  v4:= (`int`) v3 @kind l2i;
  #L1b6bf8.  v3:= v4 ^& 255;
  #L1b6bfc.  v3:= (`byte`) v3 @kind i2b;
  #L1b6bfe.  v0[v1]:= v3 @kind byte;
  #L1b6c02.  v1:= v2 + 1;
  #L1b6c06.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L1b6c0a.  v1:= 56I;
  #L1b6c0e.  v9:= v9 ^> v1 @kind long;
  #L1b6c10.  v10:= (`int`) v9 @kind l2i;
  #L1b6c12.  v9:= v10 ^& 255;
  #L1b6c16.  v9:= (`byte`) v9 @kind i2b;
  #L1b6c18.  v0[v2]:= v9 @kind byte;
  #L1b6c1c.  v9:= v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6c20.  v9:= v9 + v5 @kind int;
  #L1b6c22.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v9;
  #L1b6c26.  return @kind void;
}
procedure `void` `s`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.s:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L1b6c38.  if v3 < 0 then goto L1b6c44;
  #L1b6c3c.  call `u`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.u:(I)V` @kind virtual;
  #L1b6c42.  goto L1b6c4c;
  #L1b6c44.  v0:= (`long`) v3 @kind i2l;
  #L1b6c46.  call `v`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.v:(J)V` @kind virtual;
  #L1b6c4c.  return @kind void;
}
procedure `int` `spaceLeft`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.spaceLeft:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b6a28.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1b6a2c.  v1:= "spaceLeft() can only be called on CodedOutputStreams that are writing to a flat array or ByteBuffer." @kind object;
  #L1b6a30.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b6a36.  throw v0;
}
procedure `void` `t`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.t:(II)V` @AccessFlag FINAL {
    temp;

  #L1b6c60.  call temp:= `a`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L1b6c66.  v1:= temp;
  #L1b6c68.  call `u`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.u:(I)V` @kind virtual;
  #L1b6c6e.  return @kind void;
}
procedure `void` `u`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v6 @kind this, `int` v7 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.u:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b6c80.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.a:()Z` @kind static;
  #L1b6c86.  v0:= temp;
  #L1b6c88.  if v0 == 0 then goto L1b6cf2;
  #L1b6c8c.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6c90.  v0:= (`long`) v0 @kind i2l;
  #L1b6c92.  v2:= v7 ^& -128;
  #L1b6c96.  if v2 != 0 then goto L1b6cca;
  #L1b6c9a.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6c9e.  v3:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6ca2.  v4:= v3 + 1;
  #L1b6ca6.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v4;
  #L1b6caa.  v3:= (`long`) v3 @kind i2l;
  #L1b6cac.  v7:= (`byte`) v7 @kind i2b;
  #L1b6cae.  call `O`(v2, v3, v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1b6cb4.  v7:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6cb8.  v2:= (`long`) v7 @kind i2l;
  #L1b6cba.  v2:= v2 - v0 @kind long;
  #L1b6cbc.  v7:= (`int`) v2 @kind l2i;
  #L1b6cbe.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6cc2.  v0:= v0 + v7 @kind int;
  #L1b6cc4.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v0;
  #L1b6cc8.  return @kind void;
  #L1b6cca.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6cce.  v3:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6cd2.  v4:= v3 + 1;
  #L1b6cd6.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v4;
  #L1b6cda.  v3:= (`long`) v3 @kind i2l;
  #L1b6cdc.  v5:= v7 ^& 127;
  #L1b6ce0.  v5:= v5 ^| 128;
  #L1b6ce4.  v5:= (`byte`) v5 @kind i2b;
  #L1b6ce6.  call `O`(v2, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1b6cec.  v7:= v7 ^>> 7;
  #L1b6cf0.  goto L1b6c92;
  #L1b6cf2.  v0:= v7 ^& -128;
  #L1b6cf6.  if v0 != 0 then goto L1b6d1e;
  #L1b6cfa.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6cfe.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6d02.  v2:= v1 + 1;
  #L1b6d06.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6d0a.  v7:= (`byte`) v7 @kind i2b;
  #L1b6d0c.  v0[v1]:= v7 @kind byte;
  #L1b6d10.  v7:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6d14.  v7:= v7 + 1;
  #L1b6d18.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v7;
  #L1b6d1c.  return @kind void;
  #L1b6d1e.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6d22.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6d26.  v2:= v1 + 1;
  #L1b6d2a.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6d2e.  v2:= v7 ^& 127;
  #L1b6d32.  v2:= v2 ^| 128;
  #L1b6d36.  v2:= (`byte`) v2 @kind i2b;
  #L1b6d38.  v0[v1]:= v2 @kind byte;
  #L1b6d3c.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6d40.  v0:= v0 + 1;
  #L1b6d44.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v0;
  #L1b6d48.  v7:= v7 ^>> 7;
  #L1b6d4c.  goto L1b6cf2;
}
procedure `void` `v`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v11 @kind this, `long` v12 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.v:(J)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b6d60.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.a:()Z` @kind static;
  #L1b6d66.  v0:= temp;
  #L1b6d68.  v1:= 7I;
  #L1b6d6a.  v2:= 0L;
  #L1b6d6e.  v4:= -128L;
  #L1b6d72.  if v0 == 0 then goto L1b6de2;
  #L1b6d76.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6d7a.  v6:= (`long`) v0 @kind i2l;
  #L1b6d7c.  v8:= v12 ^& v4 @kind long;
  #L1b6d80.  v0:= lcmp(v8, v2);
  #L1b6d84.  if v0 != 0 then goto L1b6dba;
  #L1b6d88.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6d8c.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6d90.  v2:= v1 + 1;
  #L1b6d94.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6d98.  v1:= (`long`) v1 @kind i2l;
  #L1b6d9a.  v13:= (`int`) v12 @kind l2i;
  #L1b6d9c.  v12:= (`byte`) v13 @kind i2b;
  #L1b6d9e.  call `O`(v0, v1, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1b6da4.  v12:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6da8.  v12:= (`long`) v12 @kind i2l;
  #L1b6daa.  v12:= v12 - v6 @kind long;
  #L1b6dac.  v13:= (`int`) v12 @kind l2i;
  #L1b6dae.  v12:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6db2.  v12:= v12 + v13 @kind int;
  #L1b6db4.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v12;
  #L1b6db8.  return @kind void;
  #L1b6dba.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6dbe.  v8:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6dc2.  v9:= v8 + 1;
  #L1b6dc6.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v9;
  #L1b6dca.  v8:= (`long`) v8 @kind i2l;
  #L1b6dcc.  v10:= (`int`) v12 @kind l2i;
  #L1b6dce.  v10:= v10 ^& 127;
  #L1b6dd2.  v10:= v10 ^| 128;
  #L1b6dd6.  v10:= (`byte`) v10 @kind i2b;
  #L1b6dd8.  call `O`(v0, v8, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1b6dde.  v12:= v12 ^>> v1 @kind long;
  #L1b6de0.  goto L1b6d7c;
  #L1b6de2.  v6:= v12 ^& v4 @kind long;
  #L1b6de6.  v0:= lcmp(v6, v2);
  #L1b6dea.  if v0 != 0 then goto L1b6e14;
  #L1b6dee.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6df2.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6df6.  v2:= v1 + 1;
  #L1b6dfa.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L1b6dfe.  v13:= (`int`) v12 @kind l2i;
  #L1b6e00.  v12:= (`byte`) v13 @kind i2b;
  #L1b6e02.  v0[v1]:= v12 @kind byte;
  #L1b6e06.  v12:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6e0a.  v12:= v12 + 1;
  #L1b6e0e.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v12;
  #L1b6e12.  return @kind void;
  #L1b6e14.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L1b6e18.  v6:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L1b6e1c.  v7:= v6 + 1;
  #L1b6e20.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v7;
  #L1b6e24.  v7:= (`int`) v12 @kind l2i;
  #L1b6e26.  v7:= v7 ^& 127;
  #L1b6e2a.  v7:= v7 ^| 128;
  #L1b6e2e.  v7:= (`byte`) v7 @kind i2b;
  #L1b6e30.  v0[v6]:= v7 @kind byte;
  #L1b6e34.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L1b6e38.  v0:= v0 + 1;
  #L1b6e3c.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v0;
  #L1b6e40.  v12:= v12 ^>> v1 @kind long;
  #L1b6e42.  goto L1b6de2;
}
