record `com.google.crypto.tink.shaded.protobuf.u0$e` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.u0$b` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.u0$e` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d9aec.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.<init>:()V` @kind direct;
  #L1d9af2.  return @kind void;
}
procedure `boolean` `p`() @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.p:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L1d8c8c.  call temp:= `H`() @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.H:()Z` @kind static;
  #L1d8c92.  v0:= temp;
  #L1d8c94.  if v0 == 0 then goto L1d8ca8;
  #L1d8c98.  call temp:= `I`() @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.I:()Z` @kind static;
  #L1d8c9e.  v0:= temp;
  #L1d8ca0.  if v0 == 0 then goto L1d8ca8;
  #L1d8ca4.  v0:= 1I;
  #L1d8ca6.  goto L1d8caa;
  #L1d8ca8.  v0:= 0I;
  #L1d8caa.  return v0;
}
procedure `int` `q`(`long` v8 , `int` v10 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.q:(JI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d9274.  call temp:= `s`(v8, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.s:(JI)I` @kind static;
  #L1d927a.  v0:= temp;
  #L1d927c.  v1:= (`long`) v0 @kind i2l;
  #L1d927e.  v8:= v8 + v1 @kind long;
  #L1d9280.  v10:= v10 - v0 @kind int;
  #L1d9282.  v0:= 0I;
  #L1d9284.  v1:= 0I;
  #L1d9286.  v2:= 1L;
  #L1d928a.  if v10 <= 0 then goto L1d92a8;
  #L1d928e.  v4:= v8 + v2 @kind long;
  #L1d9292.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9298.  v1:= temp;
  #L1d929a.  if v1 < 0 then goto L1d92a6;
  #L1d929e.  v10:= v10 + -1;
  #L1d92a2.  v8:= v4 @kind wide;
  #L1d92a4.  goto L1d9286;
  #L1d92a6.  v8:= v4 @kind wide;
  #L1d92a8.  if v10 != 0 then goto L1d92ae;
  #L1d92ac.  return v0;
  #L1d92ae.  v10:= v10 + -1;
  #L1d92b2.  v0:= -32I;
  #L1d92b6.  v4:= -65I;
  #L1d92ba.  v5:= -1I;
  #L1d92bc.  if v1 >= v0 then goto L1d92e8;
  #L1d92c0.  if v10 != 0 then goto L1d92c6;
  #L1d92c4.  return v1;
  #L1d92c6.  v10:= v10 + -1;
  #L1d92ca.  v0:= -62I;
  #L1d92ce.  if v1 < v0 then goto L1d92e6;
  #L1d92d2.  v2:= v2 + v8 @kind long;
  #L1d92d4.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d92da.  v8:= temp;
  #L1d92dc.  if v8 <= v4 then goto L1d92e2;
  #L1d92e0.  goto L1d92e6;
  #L1d92e2.  v8:= v2 @kind wide;
  #L1d92e4.  goto L1d9282;
  #L1d92e6.  return v5;
  #L1d92e8.  v6:= -16I;
  #L1d92ec.  if v1 >= v6 then goto L1d933c;
  #L1d92f0.  v6:= 2I;
  #L1d92f2.  if v10 >= v6 then goto L1d9300;
  #L1d92f6.  call temp:= `u`(v8, v1, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.u:(JII)I` @kind static;
  #L1d92fc.  v8:= temp;
  #L1d92fe.  return v8;
  #L1d9300.  v10:= v10 + -2;
  #L1d9304.  v6:= v8 + v2 @kind long;
  #L1d9308.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d930e.  v8:= temp;
  #L1d9310.  if v8 > v4 then goto L1d933a;
  #L1d9314.  v9:= -96I;
  #L1d9318.  if v1 != v0 then goto L1d9320;
  #L1d931c.  if v8 < v9 then goto L1d933a;
  #L1d9320.  v0:= -19I;
  #L1d9324.  if v1 != v0 then goto L1d932c;
  #L1d9328.  if v8 >= v9 then goto L1d933a;
  #L1d932c.  v2:= v2 + v6 @kind long;
  #L1d932e.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9334.  v8:= temp;
  #L1d9336.  if v8 <= v4 then goto L1d92e2;
  #L1d933a.  return v5;
  #L1d933c.  v0:= 3I;
  #L1d933e.  if v10 >= v0 then goto L1d934c;
  #L1d9342.  call temp:= `u`(v8, v1, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.u:(JII)I` @kind static;
  #L1d9348.  v8:= temp;
  #L1d934a.  return v8;
  #L1d934c.  v10:= v10 + -3;
  #L1d9350.  v6:= v8 + v2 @kind long;
  #L1d9354.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d935a.  v8:= temp;
  #L1d935c.  if v8 > v4 then goto L1d9390;
  #L1d9360.  v9:= v1 ^< 28;
  #L1d9364.  v8:= v8 + 112;
  #L1d9368.  v9:= v9 + v8 @kind int;
  #L1d936a.  v8:= v9 ^> 30;
  #L1d936e.  if v8 != 0 then goto L1d9390;
  #L1d9372.  v8:= v6 + v2 @kind long;
  #L1d9376.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d937c.  v0:= temp;
  #L1d937e.  if v0 > v4 then goto L1d9390;
  #L1d9382.  v2:= v2 + v8 @kind long;
  #L1d9384.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d938a.  v8:= temp;
  #L1d938c.  if v8 <= v4 then goto L1d92e2;
  #L1d9390.  return v5;
}
procedure `int` `r`(`byte`[] v8 @kind object, `long` v9 , `int` v11 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.r:([BJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d8f9c.  call temp:= `t`(v8, v9, v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.t:([BJI)I` @kind static;
  #L1d8fa2.  v0:= temp;
  #L1d8fa4.  v11:= v11 - v0 @kind int;
  #L1d8fa6.  v0:= (`long`) v0 @kind i2l;
  #L1d8fa8.  v9:= v9 + v0 @kind long;
  #L1d8faa.  v0:= 0I;
  #L1d8fac.  v1:= 0I;
  #L1d8fae.  v2:= 1L;
  #L1d8fb2.  if v11 <= 0 then goto L1d8fd0;
  #L1d8fb6.  v4:= v9 + v2 @kind long;
  #L1d8fba.  call temp:= `w`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d8fc0.  v1:= temp;
  #L1d8fc2.  if v1 < 0 then goto L1d8fce;
  #L1d8fc6.  v11:= v11 + -1;
  #L1d8fca.  v9:= v4 @kind wide;
  #L1d8fcc.  goto L1d8fae;
  #L1d8fce.  v9:= v4 @kind wide;
  #L1d8fd0.  if v11 != 0 then goto L1d8fd6;
  #L1d8fd4.  return v0;
  #L1d8fd6.  v11:= v11 + -1;
  #L1d8fda.  v0:= -32I;
  #L1d8fde.  v4:= -65I;
  #L1d8fe2.  v5:= -1I;
  #L1d8fe4.  if v1 >= v0 then goto L1d9010;
  #L1d8fe8.  if v11 != 0 then goto L1d8fee;
  #L1d8fec.  return v1;
  #L1d8fee.  v11:= v11 + -1;
  #L1d8ff2.  v0:= -62I;
  #L1d8ff6.  if v1 < v0 then goto L1d900e;
  #L1d8ffa.  v2:= v2 + v9 @kind long;
  #L1d8ffc.  call temp:= `w`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9002.  v9:= temp;
  #L1d9004.  if v9 <= v4 then goto L1d900a;
  #L1d9008.  goto L1d900e;
  #L1d900a.  v9:= v2 @kind wide;
  #L1d900c.  goto L1d8faa;
  #L1d900e.  return v5;
  #L1d9010.  v6:= -16I;
  #L1d9014.  if v1 >= v6 then goto L1d9064;
  #L1d9018.  v6:= 2I;
  #L1d901a.  if v11 >= v6 then goto L1d9028;
  #L1d901e.  call temp:= `v`(v8, v1, v9, v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.v:([BIJI)I` @kind static;
  #L1d9024.  v8:= temp;
  #L1d9026.  return v8;
  #L1d9028.  v11:= v11 + -2;
  #L1d902c.  v6:= v9 + v2 @kind long;
  #L1d9030.  call temp:= `w`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9036.  v9:= temp;
  #L1d9038.  if v9 > v4 then goto L1d9062;
  #L1d903c.  v10:= -96I;
  #L1d9040.  if v1 != v0 then goto L1d9048;
  #L1d9044.  if v9 < v10 then goto L1d9062;
  #L1d9048.  v0:= -19I;
  #L1d904c.  if v1 != v0 then goto L1d9054;
  #L1d9050.  if v9 >= v10 then goto L1d9062;
  #L1d9054.  v2:= v2 + v6 @kind long;
  #L1d9056.  call temp:= `w`(v8, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d905c.  v9:= temp;
  #L1d905e.  if v9 <= v4 then goto L1d900a;
  #L1d9062.  return v5;
  #L1d9064.  v0:= 3I;
  #L1d9066.  if v11 >= v0 then goto L1d9074;
  #L1d906a.  call temp:= `v`(v8, v1, v9, v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.v:([BIJI)I` @kind static;
  #L1d9070.  v8:= temp;
  #L1d9072.  return v8;
  #L1d9074.  v11:= v11 + -3;
  #L1d9078.  v6:= v9 + v2 @kind long;
  #L1d907c.  call temp:= `w`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9082.  v9:= temp;
  #L1d9084.  if v9 > v4 then goto L1d90b8;
  #L1d9088.  v10:= v1 ^< 28;
  #L1d908c.  v9:= v9 + 112;
  #L1d9090.  v10:= v10 + v9 @kind int;
  #L1d9092.  v9:= v10 ^> 30;
  #L1d9096.  if v9 != 0 then goto L1d90b8;
  #L1d909a.  v9:= v6 + v2 @kind long;
  #L1d909e.  call temp:= `w`(v8, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d90a4.  v0:= temp;
  #L1d90a6.  if v0 > v4 then goto L1d90b8;
  #L1d90aa.  v2:= v2 + v9 @kind long;
  #L1d90ac.  call temp:= `w`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d90b2.  v9:= temp;
  #L1d90b4.  if v9 <= v4 then goto L1d900a;
  #L1d90b8.  return v5;
}
procedure `int` `s`(`long` v7 , `int` v9 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.s:(JI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d95a8.  v0:= 16I;
  #L1d95ac.  if v9 >= v0 then goto L1d95b4;
  #L1d95b0.  v7:= 0I;
  #L1d95b2.  return v7;
  #L1d95b4.  v0:= (`int`) v7 @kind l2i;
  #L1d95b6.  v0:= v0 ^& 7;
  #L1d95ba.  v1:= 8I;
  #L1d95be.  v0:= v0 - 8;
  #L1d95c2.  v2:= v0;
  #L1d95c4.  if v2 <= 0 then goto L1d95e6;
  #L1d95c8.  v3:= 1L;
  #L1d95cc.  v3:= v3 + v7 @kind long;
  #L1d95ce.  call temp:= `v`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d95d4.  v7:= temp;
  #L1d95d6.  if v7 >= 0 then goto L1d95de;
  #L1d95da.  v0:= v0 - v2 @kind int;
  #L1d95dc.  return v0;
  #L1d95de.  v2:= v2 + -1;
  #L1d95e2.  v7:= v3 @kind wide;
  #L1d95e4.  goto L1d95c4;
  #L1d95e6.  v0:= v9 - v0 @kind int;
  #L1d95ea.  if v0 < v1 then goto L1d961a;
  #L1d95ee.  call temp:= `C`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.C:(J)J` @kind static;
  #L1d95f4.  v2:= temp @kind wide;
  #L1d95f6.  v4:= -2.937446524422997E-306D;
  #L1d9600.  v2:= v2 ^& v4 @kind long;
  #L1d9602.  v4:= 0L;
  #L1d9606.  v6:= lcmp(v2, v4);
  #L1d960a.  if v6 != 0 then goto L1d961a;
  #L1d960e.  v2:= 8L;
  #L1d9612.  v7:= v7 + v2 @kind long;
  #L1d9614.  v0:= v0 + -8;
  #L1d9618.  goto L1d95ea;
  #L1d961a.  v9:= v9 - v0 @kind int;
  #L1d961c.  return v9;
}
procedure `int` `t`(`byte`[] v3 @kind object, `long` v4 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.t:([BJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d9568.  v0:= 0I;
  #L1d956a.  v1:= 16I;
  #L1d956e.  if v6 >= v1 then goto L1d9574;
  #L1d9572.  return v0;
  #L1d9574.  if v0 >= v6 then goto L1d9594;
  #L1d9578.  v1:= 1L;
  #L1d957c.  v1:= v1 + v4 @kind long;
  #L1d957e.  call temp:= `w`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9584.  v4:= temp;
  #L1d9586.  if v4 >= 0 then goto L1d958c;
  #L1d958a.  return v0;
  #L1d958c.  v0:= v0 + 1;
  #L1d9590.  v4:= v1 @kind wide;
  #L1d9592.  goto L1d9574;
  #L1d9594.  return v6;
}
procedure `int` `u`(`long` v2 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.u:(JII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1d9698.  if v5 == 0 then goto L1d96e6;
  #L1d969c.  v0:= 1I;
  #L1d969e.  if v5 == v0 then goto L1d96d4;
  #L1d96a2.  v0:= 2I;
  #L1d96a4.  if v5 != v0 then goto L1d96c8;
  #L1d96a8.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d96ae.  v5:= temp;
  #L1d96b0.  v0:= 1L;
  #L1d96b4.  v2:= v2 + v0 @kind long;
  #L1d96b6.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d96bc.  v2:= temp;
  #L1d96be.  call temp:= `b`(v4, v5, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.b:(III)I` @kind static;
  #L1d96c4.  v2:= temp;
  #L1d96c6.  return v2;
  #L1d96c8.  v2:= new `java.lang.AssertionError`;
  #L1d96cc.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1d96d2.  throw v2;
  #L1d96d4.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d96da.  v2:= temp;
  #L1d96dc.  call temp:= `a`(v4, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d96e2.  v2:= temp;
  #L1d96e4.  return v2;
  #L1d96e6.  call temp:= `d`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.d:(I)I` @kind static;
  #L1d96ec.  v2:= temp;
  #L1d96ee.  return v2;
}
procedure `int` `v`(`byte`[] v2 @kind object, `int` v3 , `long` v4 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.v:([BIJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1d9630.  if v6 == 0 then goto L1d967e;
  #L1d9634.  v0:= 1I;
  #L1d9636.  if v6 == v0 then goto L1d966c;
  #L1d963a.  v0:= 2I;
  #L1d963c.  if v6 != v0 then goto L1d9660;
  #L1d9640.  call temp:= `w`(v2, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9646.  v6:= temp;
  #L1d9648.  v0:= 1L;
  #L1d964c.  v4:= v4 + v0 @kind long;
  #L1d964e.  call temp:= `w`(v2, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9654.  v2:= temp;
  #L1d9656.  call temp:= `b`(v3, v6, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.b:(III)I` @kind static;
  #L1d965c.  v2:= temp;
  #L1d965e.  return v2;
  #L1d9660.  v2:= new `java.lang.AssertionError`;
  #L1d9664.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1d966a.  throw v2;
  #L1d966c.  call temp:= `w`(v2, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9672.  v2:= temp;
  #L1d9674.  call temp:= `a`(v3, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d967a.  v2:= temp;
  #L1d967c.  return v2;
  #L1d967e.  call temp:= `d`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.d:(I)I` @kind static;
  #L1d9684.  v2:= temp;
  #L1d9686.  return v2;
}
procedure `java.lang.String` `b`(`com.google.crypto.tink.shaded.protobuf.u0$e` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.b:([BII)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d9700.  v0:= v13 ^| v14 @kind int;
  #L1d9704.  v1:= length @variable v12;
  #L1d9706.  v1:= v1 - v13 @kind int;
  #L1d9708.  v1:= v1 - v14 @kind int;
  #L1d970a.  v0:= v0 ^| v1 @kind int;
  #L1d970c.  v1:= 0I;
  #L1d970e.  v2:= 1I;
  #L1d9710.  if v0 < 0 then goto L1d9892;
  #L1d9714.  v0:= v13 + v14 @kind int;
  #L1d9718.  v14:= new `char`[v14];
  #L1d971c.  v3:= 0I;
  #L1d971e.  if v13 >= v0 then goto L1d974c;
  #L1d9722.  v4:= (`long`) v13 @kind i2l;
  #L1d9724.  call temp:= `w`(v12, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d972a.  v4:= temp;
  #L1d972c.  call temp:= `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d9732.  v5:= temp;
  #L1d9734.  if v5 != 0 then goto L1d973a;
  #L1d9738.  goto L1d974c;
  #L1d973a.  v13:= v13 + 1;
  #L1d973e.  v5:= v3 + 1;
  #L1d9742.  call `c`(v4, v14, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d9748.  v3:= v5;
  #L1d974a.  goto L1d971e;
  #L1d974c.  v8:= v3;
  #L1d974e.  if v13 >= v0 then goto L1d9886;
  #L1d9752.  v3:= v13 + 1;
  #L1d9756.  v4:= (`long`) v13 @kind i2l;
  #L1d9758.  call temp:= `w`(v12, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d975e.  v13:= temp;
  #L1d9760.  call temp:= `b`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d9766.  v4:= temp;
  #L1d9768.  if v4 == 0 then goto L1d97aa;
  #L1d976c.  v4:= v8 + 1;
  #L1d9770.  call `c`(v13, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d9776.  if v3 >= v0 then goto L1d97a4;
  #L1d977a.  v5:= (`long`) v3 @kind i2l;
  #L1d977c.  call temp:= `w`(v12, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9782.  v13:= temp;
  #L1d9784.  call temp:= `b`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d978a.  v5:= temp;
  #L1d978c.  if v5 != 0 then goto L1d9792;
  #L1d9790.  goto L1d97a4;
  #L1d9792.  v3:= v3 + 1;
  #L1d9796.  v5:= v4 + 1;
  #L1d979a.  call `c`(v13, v14, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d97a0.  v4:= v5;
  #L1d97a2.  goto L1d9776;
  #L1d97a4.  v13:= v3;
  #L1d97a6.  v8:= v4;
  #L1d97a8.  goto L1d974e;
  #L1d97aa.  call temp:= `d`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.d:(B)Z` @kind static;
  #L1d97b0.  v4:= temp;
  #L1d97b2.  if v4 == 0 then goto L1d97e2;
  #L1d97b6.  if v3 >= v0 then goto L1d97d8;
  #L1d97ba.  v4:= v3 + 1;
  #L1d97be.  v5:= (`long`) v3 @kind i2l;
  #L1d97c0.  call temp:= `w`(v12, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d97c6.  v3:= temp;
  #L1d97c8.  v5:= v8 + 1;
  #L1d97cc.  call `e`(v13, v3, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.e:(BB[CI)V` @kind static;
  #L1d97d2.  v13:= v4;
  #L1d97d4.  v8:= v5;
  #L1d97d6.  goto L1d974e;
  #L1d97d8.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d97de.  v12:= temp @kind object;
  #L1d97e0.  throw v12;
  #L1d97e2.  call temp:= `f`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.f:(B)Z` @kind static;
  #L1d97e8.  v4:= temp;
  #L1d97ea.  if v4 == 0 then goto L1d982c;
  #L1d97ee.  v4:= v0 + -1;
  #L1d97f2.  if v3 >= v4 then goto L1d9822;
  #L1d97f6.  v4:= v3 + 1;
  #L1d97fa.  v5:= (`long`) v3 @kind i2l;
  #L1d97fc.  call temp:= `w`(v12, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9802.  v3:= temp;
  #L1d9804.  v5:= v4 + 1;
  #L1d9808.  v6:= (`long`) v4 @kind i2l;
  #L1d980a.  call temp:= `w`(v12, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9810.  v4:= temp;
  #L1d9812.  v6:= v8 + 1;
  #L1d9816.  call `g`(v13, v3, v4, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.g:(BBB[CI)V` @kind static;
  #L1d981c.  v13:= v5;
  #L1d981e.  v8:= v6;
  #L1d9820.  goto L1d974e;
  #L1d9822.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d9828.  v12:= temp @kind object;
  #L1d982a.  throw v12;
  #L1d982c.  v4:= v0 + -2;
  #L1d9830.  if v3 >= v4 then goto L1d987c;
  #L1d9834.  v4:= v3 + 1;
  #L1d9838.  v5:= (`long`) v3 @kind i2l;
  #L1d983a.  call temp:= `w`(v12, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9840.  v5:= temp;
  #L1d9842.  v3:= v4 + 1;
  #L1d9846.  v6:= (`long`) v4 @kind i2l;
  #L1d9848.  call temp:= `w`(v12, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d984e.  v6:= temp;
  #L1d9850.  v9:= v3 + 1;
  #L1d9854.  v3:= (`long`) v3 @kind i2l;
  #L1d9856.  call temp:= `w`(v12, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d985c.  v7:= temp;
  #L1d985e.  v10:= v8 + 1;
  #L1d9862.  v3:= v13;
  #L1d9864.  v4:= v5;
  #L1d9866.  v5:= v6;
  #L1d9868.  v6:= v7;
  #L1d986a.  v7:= v14 @kind object;
  #L1d986c.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.a:(BBBB[CI)V` @kind static;
  #L1d9872.  v10:= v10 + v2 @kind int;
  #L1d9874.  v13:= v9;
  #L1d9876.  v8:= v10;
  #L1d9878.  goto L1d974e;
  #L1d987c.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d9882.  v12:= temp @kind object;
  #L1d9884.  throw v12;
  #L1d9886.  v12:= new `java.lang.String`;
  #L1d988a.  call `<init>`(v12, v14, v1, v8) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1d9890.  return v12 @kind object;
  #L1d9892.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d9896.  v3:= 3I;
  #L1d9898.  v3:= new `java.lang.Object`[v3];
  #L1d989c.  v12:= length @variable v12;
  #L1d989e.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d98a4.  v12:= temp @kind object;
  #L1d98a6.  v3[v1]:= v12 @kind object;
  #L1d98aa.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d98b0.  v12:= temp @kind object;
  #L1d98b2.  v3[v2]:= v12 @kind object;
  #L1d98b6.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d98bc.  v12:= temp @kind object;
  #L1d98be.  v13:= 2I;
  #L1d98c0.  v3[v13]:= v12 @kind object;
  #L1d98c4.  v12:= "buffer length=%d, index=%d, size=%d" @kind object;
  #L1d98c8.  call temp:= `format`(v12, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d98ce.  v12:= temp @kind object;
  #L1d98d0.  call `<init>`(v0, v12) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d98d6.  throw v0;
}
procedure `java.lang.String` `d`(`com.google.crypto.tink.shaded.protobuf.u0$e` v17 @kind this, `java.nio.ByteBuffer` v18 @kind object, `int` v19 , `int` v20 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.d:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L1d98e8.  v0:= v19;
  #L1d98ec.  v1:= v20;
  #L1d98f0.  v2:= v0 ^| v1 @kind int;
  #L1d98f4.  call temp:= `limit`(v18) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d98fa.  v3:= temp;
  #L1d98fc.  v3:= v3 - v0 @kind int;
  #L1d98fe.  v3:= v3 - v1 @kind int;
  #L1d9900.  v2:= v2 ^| v3 @kind int;
  #L1d9902.  v3:= 0I;
  #L1d9904.  v4:= 1I;
  #L1d9906.  if v2 < 0 then goto L1d9a90;
  #L1d990a.  call temp:= `i`(v18) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.i:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L1d9910.  v5:= temp @kind wide;
  #L1d9912.  v7:= (`long`) v0 @kind i2l;
  #L1d9914.  v5:= v5 + v7 @kind long;
  #L1d9916.  v7:= (`long`) v1 @kind i2l;
  #L1d9918.  v7:= v7 + v5 @kind long;
  #L1d991a.  v0:= new `char`[v1];
  #L1d991e.  v1:= 0I;
  #L1d9920.  v15:= 1L;
  #L1d9924.  v2:= lcmp(v5, v7);
  #L1d9928.  if v2 >= 0 then goto L1d9952;
  #L1d992c.  call temp:= `v`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9932.  v2:= temp;
  #L1d9934.  call temp:= `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d993a.  v9:= temp;
  #L1d993c.  if v9 != 0 then goto L1d9942;
  #L1d9940.  goto L1d9952;
  #L1d9942.  v5:= v5 + v15 @kind long;
  #L1d9944.  v9:= v1 + 1;
  #L1d9948.  call `c`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d994e.  v1:= v9;
  #L1d9950.  goto L1d9920;
  #L1d9952.  v14:= v1;
  #L1d9954.  v1:= lcmp(v5, v7);
  #L1d9958.  if v1 >= 0 then goto L1d9a84;
  #L1d995c.  v1:= v5 + v15 @kind long;
  #L1d9960.  call temp:= `v`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9966.  v9:= temp;
  #L1d9968.  call temp:= `b`(v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d996e.  v5:= temp;
  #L1d9970.  if v5 == 0 then goto L1d99b2;
  #L1d9974.  v5:= v14 + 1;
  #L1d9978.  call `c`(v9, v0, v14) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d997e.  v6:= lcmp(v1, v7);
  #L1d9982.  if v6 >= 0 then goto L1d99ac;
  #L1d9986.  call temp:= `v`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d998c.  v6:= temp;
  #L1d998e.  call temp:= `b`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @kind static;
  #L1d9994.  v9:= temp;
  #L1d9996.  if v9 != 0 then goto L1d999c;
  #L1d999a.  goto L1d99ac;
  #L1d999c.  v1:= v1 + v15 @kind long;
  #L1d999e.  v9:= v5 + 1;
  #L1d99a2.  call `c`(v6, v0, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @kind static;
  #L1d99a8.  v5:= v9;
  #L1d99aa.  goto L1d997e;
  #L1d99ac.  v14:= v5;
  #L1d99ae.  v5:= v1 @kind wide;
  #L1d99b0.  goto L1d9954;
  #L1d99b2.  call temp:= `d`(v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.d:(B)Z` @kind static;
  #L1d99b8.  v5:= temp;
  #L1d99ba.  if v5 == 0 then goto L1d99ea;
  #L1d99be.  v5:= lcmp(v1, v7);
  #L1d99c2.  if v5 >= 0 then goto L1d99e0;
  #L1d99c6.  v5:= v1 + v15 @kind long;
  #L1d99ca.  call temp:= `v`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d99d0.  v1:= temp;
  #L1d99d2.  v2:= v14 + 1;
  #L1d99d6.  call `e`(v9, v1, v0, v14) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.e:(BB[CI)V` @kind static;
  #L1d99dc.  v14:= v2;
  #L1d99de.  goto L1d9954;
  #L1d99e0.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d99e6.  v0:= temp @kind object;
  #L1d99e8.  throw v0;
  #L1d99ea.  call temp:= `f`(v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.f:(B)Z` @kind static;
  #L1d99f0.  v5:= temp;
  #L1d99f2.  if v5 == 0 then goto L1d9a34;
  #L1d99f6.  v5:= v7 - v15 @kind long;
  #L1d99fa.  v10:= lcmp(v1, v5);
  #L1d99fe.  if v10 >= 0 then goto L1d9a2a;
  #L1d9a02.  v5:= v1 + v15 @kind long;
  #L1d9a06.  call temp:= `v`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9a0c.  v1:= temp;
  #L1d9a0e.  v10:= v5 + v15 @kind long;
  #L1d9a12.  call temp:= `v`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9a18.  v2:= temp;
  #L1d9a1a.  v5:= v14 + 1;
  #L1d9a1e.  call `g`(v9, v1, v2, v0, v14) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.g:(BBB[CI)V` @kind static;
  #L1d9a24.  v14:= v5;
  #L1d9a26.  v5:= v10 @kind wide;
  #L1d9a28.  goto L1d9954;
  #L1d9a2a.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d9a30.  v0:= temp @kind object;
  #L1d9a32.  throw v0;
  #L1d9a34.  v5:= 2L;
  #L1d9a38.  v5:= v7 - v5 @kind long;
  #L1d9a3c.  v10:= lcmp(v1, v5);
  #L1d9a40.  if v10 >= 0 then goto L1d9a7a;
  #L1d9a44.  v5:= v1 + v15 @kind long;
  #L1d9a48.  call temp:= `v`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9a4e.  v10:= temp;
  #L1d9a50.  v1:= v5 + v15 @kind long;
  #L1d9a54.  call temp:= `v`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9a5a.  v11:= temp;
  #L1d9a5c.  v5:= v1 + v15 @kind long;
  #L1d9a60.  call temp:= `v`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9a66.  v12:= temp;
  #L1d9a68.  v1:= v14 + 1;
  #L1d9a6c.  v13:= v0 @kind object;
  #L1d9a6e.  call `a`(v9, v10, v11, v12, v13, v14) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.a:(BBBB[CI)V` @kind static;
  #L1d9a74.  v1:= v1 + v4 @kind int;
  #L1d9a76.  goto L1d9952;
  #L1d9a7a.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L1d9a80.  v0:= temp @kind object;
  #L1d9a82.  throw v0;
  #L1d9a84.  v1:= new `java.lang.String`;
  #L1d9a88.  call `<init>`(v1, v0, v3, v14) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1d9a8e.  return v1 @kind object;
  #L1d9a90.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d9a94.  v5:= 3I;
  #L1d9a96.  v5:= new `java.lang.Object`[v5];
  #L1d9a9a.  call temp:= `limit`(v18) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d9aa0.  v6:= temp;
  #L1d9aa2.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d9aa8.  v6:= temp @kind object;
  #L1d9aaa.  v5[v3]:= v6 @kind object;
  #L1d9aae.  call temp:= `valueOf`(v19) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d9ab4.  v0:= temp @kind object;
  #L1d9ab6.  v5[v4]:= v0 @kind object;
  #L1d9aba.  v0:= 2I;
  #L1d9abc.  call temp:= `valueOf`(v20) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d9ac2.  v1:= temp @kind object;
  #L1d9ac4.  v5[v0]:= v1 @kind object;
  #L1d9ac8.  v0:= "buffer limit=%d, index=%d, limit=%d" @kind object;
  #L1d9acc.  call temp:= `format`(v0, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d9ad2.  v0:= temp @kind object;
  #L1d9ad4.  call `<init>`(v2, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9ada.  throw v2;
}
procedure `int` `e`(`com.google.crypto.tink.shaded.protobuf.u0$e` v22 @kind this, `java.lang.CharSequence` v23 @kind object, `byte`[] v24 @kind object, `int` v25 , `int` v26 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.e:(Ljava/lang/CharSequence;[BII)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L1d8cbc.  v0:= v23 @kind object;
  #L1d8cc0.  v1:= v24 @kind object;
  #L1d8cc4.  v2:= v25;
  #L1d8cc8.  v3:= v26;
  #L1d8ccc.  v4:= (`long`) v2 @kind i2l;
  #L1d8cce.  v6:= (`long`) v3 @kind i2l;
  #L1d8cd0.  v6:= v6 + v4 @kind long;
  #L1d8cd2.  call temp:= `length`(v23) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1d8cd8.  v8:= temp;
  #L1d8cda.  v9:= " at index " @kind object;
  #L1d8cde.  v10:= "Failed writing " @kind object;
  #L1d8ce2.  if v8 > v3 then goto L1d8f44;
  #L1d8ce6.  v11:= length @variable v1;
  #L1d8ce8.  v11:= v11 - v3 @kind int;
  #L1d8cea.  if v11 < v2 then goto L1d8f44;
  #L1d8cee.  v2:= 0I;
  #L1d8cf0.  v3:= 128I;
  #L1d8cf4.  v11:= 1L;
  #L1d8cf8.  if v2 >= v8 then goto L1d8d1a;
  #L1d8cfc.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8d02.  v13:= temp;
  #L1d8d04.  if v13 >= v3 then goto L1d8d1a;
  #L1d8d08.  v11:= v11 + v4 @kind long;
  #L1d8d0a.  v3:= (`byte`) v13 @kind i2b;
  #L1d8d0c.  call `O`(v1, v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8d12.  v2:= v2 + 1;
  #L1d8d16.  v4:= v11 @kind wide;
  #L1d8d18.  goto L1d8cf0;
  #L1d8d1a.  if v2 != v8 then goto L1d8d22;
  #L1d8d1e.  v0:= (`int`) v4 @kind l2i;
  #L1d8d20.  return v0;
  #L1d8d22.  if v2 >= v8 then goto L1d8f40;
  #L1d8d26.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8d2c.  v13:= temp;
  #L1d8d2e.  if v13 >= v3 then goto L1d8d52;
  #L1d8d32.  v14:= lcmp(v4, v6);
  #L1d8d36.  if v14 >= 0 then goto L1d8d52;
  #L1d8d3a.  v14:= v4 + v11 @kind long;
  #L1d8d3e.  v13:= (`byte`) v13 @kind i2b;
  #L1d8d40.  call `O`(v1, v4, v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8d46.  v4:= v11 @kind wide;
  #L1d8d48.  v12:= v14 @kind wide;
  #L1d8d4a.  v11:= 128I;
  #L1d8d4e.  goto L1d8eb2;
  #L1d8d52.  v14:= 2048I;
  #L1d8d56.  if v13 >= v14 then goto L1d8da6;
  #L1d8d5a.  v14:= 2L;
  #L1d8d5e.  v14:= v6 - v14 @kind long;
  #L1d8d62.  v16:= lcmp(v4, v14);
  #L1d8d66.  if v16 > 0 then goto L1d8da6;
  #L1d8d6a.  v14:= v4 + v11 @kind long;
  #L1d8d6e.  v3:= v13 ^>> 6;
  #L1d8d72.  v3:= v3 ^| 960;
  #L1d8d76.  v3:= (`byte`) v3 @kind i2b;
  #L1d8d78.  call `O`(v1, v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8d7e.  v3:= v14 + v11 @kind long;
  #L1d8d82.  v5:= v13 ^& 63;
  #L1d8d86.  v13:= 128I;
  #L1d8d8a.  v5:= v5 ^| v13 @kind int;
  #L1d8d8c.  v5:= (`byte`) v5 @kind i2b;
  #L1d8d8e.  call `O`(v1, v14, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8d94.  v20:= v11 @kind wide;
  #L1d8d98.  v11:= 128I;
  #L1d8d9c.  v12:= v3 @kind wide;
  #L1d8d9e.  v4:= v20 @kind wide;
  #L1d8da2.  goto L1d8eb2;
  #L1d8da6.  v3:= 57343I;
  #L1d8dac.  v14:= 55296I;
  #L1d8db2.  if v13 < v14 then goto L1d8dba;
  #L1d8db6.  if v3 >= v13 then goto L1d8e18;
  #L1d8dba.  v15:= 3L;
  #L1d8dbe.  v15:= v6 - v15 @kind long;
  #L1d8dc2.  v17:= lcmp(v4, v15);
  #L1d8dc6.  if v17 > 0 then goto L1d8e18;
  #L1d8dca.  v14:= v4 + v11 @kind long;
  #L1d8dce.  v3:= v13 ^>> 12;
  #L1d8dd2.  v3:= v3 ^| 480;
  #L1d8dd6.  v3:= (`byte`) v3 @kind i2b;
  #L1d8dd8.  call `O`(v1, v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8dde.  v3:= v14 + v11 @kind long;
  #L1d8de2.  v5:= v13 ^>> 6;
  #L1d8de6.  v5:= v5 ^& 63;
  #L1d8dea.  v11:= 128I;
  #L1d8dee.  v5:= v5 ^| v11 @kind int;
  #L1d8df0.  v5:= (`byte`) v5 @kind i2b;
  #L1d8df2.  call `O`(v1, v14, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8df8.  v14:= 1L;
  #L1d8dfc.  v18:= v3 + v14 @kind long;
  #L1d8e00.  v5:= v13 ^& 63;
  #L1d8e04.  v5:= v5 ^| v11 @kind int;
  #L1d8e06.  v5:= (`byte`) v5 @kind i2b;
  #L1d8e08.  call `O`(v1, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8e0e.  v12:= v18 @kind wide;
  #L1d8e12.  v4:= 1L;
  #L1d8e16.  goto L1d8d4a;
  #L1d8e18.  v11:= 4L;
  #L1d8e1c.  v11:= v6 - v11 @kind long;
  #L1d8e20.  v15:= lcmp(v4, v11);
  #L1d8e24.  if v15 > 0 then goto L1d8eda;
  #L1d8e28.  v3:= v2 + 1;
  #L1d8e2c.  if v3 == v8 then goto L1d8eca;
  #L1d8e30.  call temp:= `charAt`(v0, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8e36.  v2:= temp;
  #L1d8e38.  call temp:= `isSurrogatePair`(v13, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L1d8e3e.  v11:= temp;
  #L1d8e40.  if v11 == 0 then goto L1d8ec8;
  #L1d8e44.  call temp:= `toCodePoint`(v13, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L1d8e4a.  v2:= temp;
  #L1d8e4c.  v11:= 1L;
  #L1d8e50.  v13:= v4 + v11 @kind long;
  #L1d8e54.  v15:= v2 ^>> 18;
  #L1d8e58.  v15:= v15 ^| 240;
  #L1d8e5c.  v15:= (`byte`) v15 @kind i2b;
  #L1d8e5e.  call `O`(v1, v4, v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8e64.  v4:= v13 + v11 @kind long;
  #L1d8e68.  v15:= v2 ^>> 12;
  #L1d8e6c.  v15:= v15 ^& 63;
  #L1d8e70.  v11:= 128I;
  #L1d8e74.  v12:= v15 ^| 128;
  #L1d8e78.  v12:= (`byte`) v12 @kind i2b;
  #L1d8e7a.  call `O`(v1, v13, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8e80.  v12:= 1L;
  #L1d8e84.  v14:= v4 + v12 @kind long;
  #L1d8e88.  v16:= v2 ^>> 6;
  #L1d8e8c.  v12:= v16 ^& 63;
  #L1d8e90.  v12:= v12 ^| v11 @kind int;
  #L1d8e92.  v12:= (`byte`) v12 @kind i2b;
  #L1d8e94.  call `O`(v1, v4, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8e9a.  v4:= 1L;
  #L1d8e9e.  v12:= v14 + v4 @kind long;
  #L1d8ea2.  v2:= v2 ^& 63;
  #L1d8ea6.  v2:= v2 ^| v11 @kind int;
  #L1d8ea8.  v2:= (`byte`) v2 @kind i2b;
  #L1d8eaa.  call `O`(v1, v14, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L1d8eb0.  v2:= v3;
  #L1d8eb2.  v2:= v2 + 1;
  #L1d8eb6.  v3:= 128I;
  #L1d8eba.  v20:= v4 @kind wide;
  #L1d8ebe.  v4:= v12 @kind wide;
  #L1d8ec0.  v11:= v20 @kind wide;
  #L1d8ec4.  goto L1d8d22;
  #L1d8ec8.  v2:= v3;
  #L1d8eca.  v0:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L1d8ece.  v2:= v2 + -1;
  #L1d8ed2.  call `<init>`(v0, v2, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L1d8ed8.  throw v0;
  #L1d8eda.  if v14 > v13 then goto L1d8f0a;
  #L1d8ede.  if v13 > v3 then goto L1d8f0a;
  #L1d8ee2.  v1:= v2 + 1;
  #L1d8ee6.  if v1 == v8 then goto L1d8efe;
  #L1d8eea.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8ef0.  v0:= temp;
  #L1d8ef2.  call temp:= `isSurrogatePair`(v13, v0) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L1d8ef8.  v0:= temp;
  #L1d8efa.  if v0 != 0 then goto L1d8f0a;
  #L1d8efe.  v0:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L1d8f02.  call `<init>`(v0, v2, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L1d8f08.  throw v0;
  #L1d8f0a.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d8f0e.  v1:= new `java.lang.StringBuilder`;
  #L1d8f12.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d8f18.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8f1e.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8f24.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8f2a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8f30.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d8f36.  v1:= temp @kind object;
  #L1d8f38.  call `<init>`(v0, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d8f3e.  throw v0;
  #L1d8f40.  v0:= (`int`) v4 @kind l2i;
  #L1d8f42.  return v0;
  #L1d8f44.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d8f48.  v4:= new `java.lang.StringBuilder`;
  #L1d8f4c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d8f52.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8f58.  v8:= v8 + -1;
  #L1d8f5c.  call temp:= `charAt`(v0, v8) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d8f62.  v0:= temp;
  #L1d8f64.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8f6a.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8f70.  v0:= v2 + v3 @kind int;
  #L1d8f74.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8f7a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d8f80.  v0:= temp @kind object;
  #L1d8f82.  call `<init>`(v1, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d8f88.  throw v1;
}
procedure `void` `h`(`com.google.crypto.tink.shaded.protobuf.u0$e` v21 @kind this, `java.lang.CharSequence` v22 @kind object, `java.nio.ByteBuffer` v23 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.h:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L1d9b04.  v0:= v22 @kind object;
  #L1d9b08.  v1:= v23 @kind object;
  #L1d9b0c.  call temp:= `i`(v23) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.i:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L1d9b12.  v2:= temp @kind wide;
  #L1d9b14.  call temp:= `position`(v23) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1d9b1a.  v4:= temp;
  #L1d9b1c.  v4:= (`long`) v4 @kind i2l;
  #L1d9b1e.  v4:= v4 + v2 @kind long;
  #L1d9b20.  call temp:= `limit`(v23) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d9b26.  v6:= temp;
  #L1d9b28.  v6:= (`long`) v6 @kind i2l;
  #L1d9b2a.  v6:= v6 + v2 @kind long;
  #L1d9b2c.  call temp:= `length`(v22) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1d9b32.  v8:= temp;
  #L1d9b34.  v9:= (`long`) v8 @kind i2l;
  #L1d9b36.  v11:= v6 - v4 @kind long;
  #L1d9b3a.  v13:= " at index " @kind object;
  #L1d9b3e.  v14:= "Failed writing " @kind object;
  #L1d9b42.  v15:= lcmp(v9, v11);
  #L1d9b46.  if v15 > 0 then goto L1d9da8;
  #L1d9b4a.  v9:= 0I;
  #L1d9b4c.  v10:= 128I;
  #L1d9b50.  v11:= 1L;
  #L1d9b54.  if v9 >= v8 then goto L1d9b78;
  #L1d9b58.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d9b5e.  v15:= temp;
  #L1d9b60.  if v15 >= v10 then goto L1d9b78;
  #L1d9b64.  v10:= v4 + v11 @kind long;
  #L1d9b68.  v12:= (`byte`) v15 @kind i2b;
  #L1d9b6a.  call `N`(v4, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9b70.  v9:= v9 + 1;
  #L1d9b74.  v4:= v10 @kind wide;
  #L1d9b76.  goto L1d9b4c;
  #L1d9b78.  if v9 != v8 then goto L1d9b88;
  #L1d9b7c.  v4:= v4 - v2 @kind long;
  #L1d9b7e.  v0:= (`int`) v4 @kind l2i;
  #L1d9b80.  call temp:= `position`(v1, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1d9b86.  return @kind void;
  #L1d9b88.  if v9 >= v8 then goto L1d9d92;
  #L1d9b8c.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d9b92.  v15:= temp;
  #L1d9b94.  if v15 >= v10 then goto L1d9bbc;
  #L1d9b98.  v16:= lcmp(v4, v6);
  #L1d9b9c.  if v16 >= 0 then goto L1d9bbc;
  #L1d9ba0.  v16:= v4 + v11 @kind long;
  #L1d9ba4.  v15:= (`byte`) v15 @kind i2b;
  #L1d9ba6.  call `N`(v4, v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9bac.  v4:= v16 @kind wide;
  #L1d9bb0.  v15:= 128I;
  #L1d9bb4.  v17:= v2 @kind wide;
  #L1d9bb8.  goto L1d9d06;
  #L1d9bbc.  v10:= 2048I;
  #L1d9bc0.  if v15 >= v10 then goto L1d9c0c;
  #L1d9bc4.  v17:= 2L;
  #L1d9bc8.  v17:= v6 - v17 @kind long;
  #L1d9bcc.  v10:= lcmp(v4, v17);
  #L1d9bd0.  if v10 > 0 then goto L1d9c0c;
  #L1d9bd4.  v17:= v2 @kind wide;
  #L1d9bd8.  v1:= v4 + v11 @kind long;
  #L1d9bdc.  v3:= v15 ^>> 6;
  #L1d9be0.  v3:= v3 ^| 960;
  #L1d9be4.  v3:= (`byte`) v3 @kind i2b;
  #L1d9be6.  call `N`(v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9bec.  v3:= v1 + v11 @kind long;
  #L1d9bf0.  v5:= v15 ^& 63;
  #L1d9bf4.  v10:= 128I;
  #L1d9bf8.  v5:= v5 ^| v10 @kind int;
  #L1d9bfa.  v5:= (`byte`) v5 @kind i2b;
  #L1d9bfc.  call `N`(v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9c02.  v4:= v3 @kind wide;
  #L1d9c04.  v15:= 128I;
  #L1d9c08.  goto L1d9d06;
  #L1d9c0c.  v17:= v2 @kind wide;
  #L1d9c10.  v1:= 57343I;
  #L1d9c16.  v2:= 55296I;
  #L1d9c1c.  if v15 < v2 then goto L1d9c24;
  #L1d9c20.  if v1 >= v15 then goto L1d9c78;
  #L1d9c24.  v19:= 3L;
  #L1d9c28.  v19:= v6 - v19 @kind long;
  #L1d9c2c.  v3:= lcmp(v4, v19);
  #L1d9c30.  if v3 > 0 then goto L1d9c78;
  #L1d9c34.  v1:= v4 + v11 @kind long;
  #L1d9c38.  v3:= v15 ^>> 12;
  #L1d9c3c.  v3:= v3 ^| 480;
  #L1d9c40.  v3:= (`byte`) v3 @kind i2b;
  #L1d9c42.  call `N`(v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9c48.  v3:= v1 + v11 @kind long;
  #L1d9c4c.  v5:= v15 ^>> 6;
  #L1d9c50.  v5:= v5 ^& 63;
  #L1d9c54.  v10:= 128I;
  #L1d9c58.  v5:= v5 ^| v10 @kind int;
  #L1d9c5a.  v5:= (`byte`) v5 @kind i2b;
  #L1d9c5c.  call `N`(v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9c62.  v1:= v3 + v11 @kind long;
  #L1d9c66.  v5:= v15 ^& 63;
  #L1d9c6a.  v5:= v5 ^| v10 @kind int;
  #L1d9c6c.  v5:= (`byte`) v5 @kind i2b;
  #L1d9c6e.  call `N`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9c74.  v4:= v1 @kind wide;
  #L1d9c76.  goto L1d9c04;
  #L1d9c78.  v19:= 4L;
  #L1d9c7c.  v19:= v6 - v19 @kind long;
  #L1d9c80.  v3:= lcmp(v4, v19);
  #L1d9c84.  if v3 > 0 then goto L1d9d2c;
  #L1d9c88.  v1:= v9 + 1;
  #L1d9c8c.  if v1 == v8 then goto L1d9d1c;
  #L1d9c90.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d9c96.  v2:= temp;
  #L1d9c98.  call temp:= `isSurrogatePair`(v15, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L1d9c9e.  v3:= temp;
  #L1d9ca0.  if v3 == 0 then goto L1d9d1a;
  #L1d9ca4.  call temp:= `toCodePoint`(v15, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L1d9caa.  v2:= temp;
  #L1d9cac.  v9:= v4 + v11 @kind long;
  #L1d9cb0.  v3:= v2 ^>> 18;
  #L1d9cb4.  v3:= v3 ^| 240;
  #L1d9cb8.  v3:= (`byte`) v3 @kind i2b;
  #L1d9cba.  call `N`(v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9cc0.  v3:= v9 + v11 @kind long;
  #L1d9cc4.  v5:= v2 ^>> 12;
  #L1d9cc8.  v5:= v5 ^& 63;
  #L1d9ccc.  v15:= 128I;
  #L1d9cd0.  v5:= v5 ^| v15 @kind int;
  #L1d9cd2.  v5:= (`byte`) v5 @kind i2b;
  #L1d9cd4.  call `N`(v9, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9cda.  v9:= v3 + v11 @kind long;
  #L1d9cde.  v5:= v2 ^>> 6;
  #L1d9ce2.  v5:= v5 ^& 63;
  #L1d9ce6.  v5:= v5 ^| v15 @kind int;
  #L1d9ce8.  v5:= (`byte`) v5 @kind i2b;
  #L1d9cea.  call `N`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9cf0.  v3:= v9 + v11 @kind long;
  #L1d9cf4.  v2:= v2 ^& 63;
  #L1d9cf8.  v2:= v2 ^| v15 @kind int;
  #L1d9cfa.  v2:= (`byte`) v2 @kind i2b;
  #L1d9cfc.  call `N`(v9, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.N:(JB)V` @kind static;
  #L1d9d02.  v9:= v1;
  #L1d9d04.  v4:= v3 @kind wide;
  #L1d9d06.  v9:= v9 + 1;
  #L1d9d0a.  v1:= v23 @kind object;
  #L1d9d0e.  v2:= v17 @kind wide;
  #L1d9d12.  v10:= 128I;
  #L1d9d16.  goto L1d9b88;
  #L1d9d1a.  v9:= v1;
  #L1d9d1c.  v0:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L1d9d20.  v9:= v9 + -1;
  #L1d9d24.  call `<init>`(v0, v9, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L1d9d2a.  throw v0;
  #L1d9d2c.  if v2 > v15 then goto L1d9d5c;
  #L1d9d30.  if v15 > v1 then goto L1d9d5c;
  #L1d9d34.  v1:= v9 + 1;
  #L1d9d38.  if v1 == v8 then goto L1d9d50;
  #L1d9d3c.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d9d42.  v0:= temp;
  #L1d9d44.  call temp:= `isSurrogatePair`(v15, v0) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L1d9d4a.  v0:= temp;
  #L1d9d4c.  if v0 != 0 then goto L1d9d5c;
  #L1d9d50.  v0:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L1d9d54.  call `<init>`(v0, v9, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L1d9d5a.  throw v0;
  #L1d9d5c.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d9d60.  v1:= new `java.lang.StringBuilder`;
  #L1d9d64.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9d6a.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9d70.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9d76.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9d7c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9d82.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9d88.  v1:= temp @kind object;
  #L1d9d8a.  call `<init>`(v0, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9d90.  throw v0;
  #L1d9d92.  v17:= v2 @kind wide;
  #L1d9d96.  v4:= v4 - v17 @kind long;
  #L1d9d9a.  v0:= (`int`) v4 @kind l2i;
  #L1d9d9c.  v1:= v23 @kind object;
  #L1d9da0.  call temp:= `position`(v1, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1d9da6.  return @kind void;
  #L1d9da8.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d9dac.  v3:= new `java.lang.StringBuilder`;
  #L1d9db0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9db6.  call temp:= `append`(v3, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9dbc.  v8:= v8 + -1;
  #L1d9dc0.  call temp:= `charAt`(v0, v8) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1d9dc6.  v0:= temp;
  #L1d9dc8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9dce.  call temp:= `append`(v3, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9dd4.  call temp:= `limit`(v23) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d9dda.  v0:= temp;
  #L1d9ddc.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9de2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9de8.  v0:= temp @kind object;
  #L1d9dea.  call `<init>`(v2, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9df0.  throw v2;
}
procedure `int` `l`(`com.google.crypto.tink.shaded.protobuf.u0$e` v11 @kind this, `int` v12 , `byte`[] v13 @kind object, `int` v14 , `int` v15 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.l:(I[BII)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d90cc.  v0:= v14 ^| v15 @kind int;
  #L1d90d0.  v1:= length @variable v13;
  #L1d90d2.  v1:= v1 - v15 @kind int;
  #L1d90d4.  v0:= v0 ^| v1 @kind int;
  #L1d90d6.  v1:= 0I;
  #L1d90d8.  if v0 < 0 then goto L1d921c;
  #L1d90dc.  v2:= (`long`) v14 @kind i2l;
  #L1d90de.  v14:= (`long`) v15 @kind i2l;
  #L1d90e0.  if v12 == 0 then goto L1d920e;
  #L1d90e4.  v0:= lcmp(v2, v14);
  #L1d90e8.  if v0 < 0 then goto L1d90ee;
  #L1d90ec.  return v12;
  #L1d90ee.  v0:= (`byte`) v12 @kind i2b;
  #L1d90f0.  v4:= -32I;
  #L1d90f4.  v5:= -1I;
  #L1d90f6.  v6:= -65I;
  #L1d90fa.  v7:= 1L;
  #L1d90fe.  if v0 >= v4 then goto L1d9122;
  #L1d9102.  v12:= -62I;
  #L1d9106.  if v0 < v12 then goto L1d9120;
  #L1d910a.  v7:= v7 + v2 @kind long;
  #L1d910c.  call temp:= `w`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9112.  v12:= temp;
  #L1d9114.  if v12 <= v6 then goto L1d911a;
  #L1d9118.  goto L1d9120;
  #L1d911a.  v2:= v7 @kind wide;
  #L1d911c.  goto L1d920e;
  #L1d9120.  return v5;
  #L1d9122.  v9:= -16I;
  #L1d9126.  if v0 >= v9 then goto L1d918a;
  #L1d912a.  v12:= v12 ^> 8;
  #L1d912e.  v12:= ~v12 @kind int;
  #L1d9130.  v12:= (`byte`) v12 @kind i2b;
  #L1d9132.  if v12 != 0 then goto L1d9156;
  #L1d9136.  v9:= v2 + v7 @kind long;
  #L1d913a.  call temp:= `w`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9140.  v12:= temp;
  #L1d9142.  v1:= lcmp(v9, v14);
  #L1d9146.  if v1 < 0 then goto L1d9154;
  #L1d914a.  call temp:= `a`(v0, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d9150.  v12:= temp;
  #L1d9152.  return v12;
  #L1d9154.  v2:= v9 @kind wide;
  #L1d9156.  if v12 > v6 then goto L1d9188;
  #L1d915a.  v1:= -96I;
  #L1d915e.  if v0 != v4 then goto L1d9166;
  #L1d9162.  if v12 < v1 then goto L1d9188;
  #L1d9166.  v4:= -19I;
  #L1d916a.  if v0 != v4 then goto L1d9172;
  #L1d916e.  if v12 >= v1 then goto L1d9188;
  #L1d9172.  v0:= v2 + v7 @kind long;
  #L1d9176.  call temp:= `w`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d917c.  v12:= temp;
  #L1d917e.  if v12 <= v6 then goto L1d9184;
  #L1d9182.  goto L1d9188;
  #L1d9184.  v2:= v0 @kind wide;
  #L1d9186.  goto L1d920e;
  #L1d9188.  return v5;
  #L1d918a.  v4:= v12 ^> 8;
  #L1d918e.  v4:= ~v4 @kind int;
  #L1d9190.  v4:= (`byte`) v4 @kind i2b;
  #L1d9192.  if v4 != 0 then goto L1d91b8;
  #L1d9196.  v9:= v2 + v7 @kind long;
  #L1d919a.  call temp:= `w`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d91a0.  v4:= temp;
  #L1d91a2.  v12:= lcmp(v9, v14);
  #L1d91a6.  if v12 < 0 then goto L1d91b4;
  #L1d91aa.  call temp:= `a`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d91b0.  v12:= temp;
  #L1d91b2.  return v12;
  #L1d91b4.  v2:= v9 @kind wide;
  #L1d91b6.  goto L1d91be;
  #L1d91b8.  v12:= v12 ^> 16;
  #L1d91bc.  v1:= (`byte`) v12 @kind i2b;
  #L1d91be.  if v1 != 0 then goto L1d91e2;
  #L1d91c2.  v9:= v2 + v7 @kind long;
  #L1d91c6.  call temp:= `w`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d91cc.  v1:= temp;
  #L1d91ce.  v12:= lcmp(v9, v14);
  #L1d91d2.  if v12 < 0 then goto L1d91e0;
  #L1d91d6.  call temp:= `b`(v0, v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.b:(III)I` @kind static;
  #L1d91dc.  v12:= temp;
  #L1d91de.  return v12;
  #L1d91e0.  v2:= v9 @kind wide;
  #L1d91e2.  if v4 > v6 then goto L1d920c;
  #L1d91e6.  v12:= v0 ^< 28;
  #L1d91ea.  v4:= v4 + 112;
  #L1d91ee.  v12:= v12 + v4 @kind int;
  #L1d91f0.  v12:= v12 ^> 30;
  #L1d91f4.  if v12 != 0 then goto L1d920c;
  #L1d91f8.  if v1 > v6 then goto L1d920c;
  #L1d91fc.  v0:= v2 + v7 @kind long;
  #L1d9200.  call temp:= `w`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.w:([BJ)B` @kind static;
  #L1d9206.  v12:= temp;
  #L1d9208.  if v12 <= v6 then goto L1d9184;
  #L1d920c.  return v5;
  #L1d920e.  v14:= v14 - v2 @kind long;
  #L1d9210.  v12:= (`int`) v14 @kind l2i;
  #L1d9212.  call temp:= `r`(v13, v2, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.r:([BJI)I` @kind static;
  #L1d9218.  v12:= temp;
  #L1d921a.  return v12;
  #L1d921c.  v12:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d9220.  v0:= 3I;
  #L1d9222.  v0:= new `java.lang.Object`[v0];
  #L1d9226.  v13:= length @variable v13;
  #L1d9228.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d922e.  v13:= temp @kind object;
  #L1d9230.  v0[v1]:= v13 @kind object;
  #L1d9234.  v13:= 1I;
  #L1d9236.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d923c.  v14:= temp @kind object;
  #L1d923e.  v0[v13]:= v14 @kind object;
  #L1d9242.  v13:= 2I;
  #L1d9244.  call temp:= `valueOf`(v15) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d924a.  v14:= temp @kind object;
  #L1d924c.  v0[v13]:= v14 @kind object;
  #L1d9250.  v13:= "Array length=%d, index=%d, limit=%d" @kind object;
  #L1d9254.  call temp:= `format`(v13, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d925a.  v13:= temp @kind object;
  #L1d925c.  call `<init>`(v12, v13) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9262.  throw v12;
}
procedure `int` `o`(`com.google.crypto.tink.shaded.protobuf.u0$e` v10 @kind this, `int` v11 , `java.nio.ByteBuffer` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.o:(ILjava/nio/ByteBuffer;II)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1d93a4.  v0:= v13 ^| v14 @kind int;
  #L1d93a8.  call temp:= `limit`(v12) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d93ae.  v1:= temp;
  #L1d93b0.  v1:= v1 - v14 @kind int;
  #L1d93b2.  v0:= v0 ^| v1 @kind int;
  #L1d93b4.  v1:= 0I;
  #L1d93b6.  if v0 < 0 then goto L1d9508;
  #L1d93ba.  call temp:= `i`(v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.i:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L1d93c0.  v2:= temp @kind wide;
  #L1d93c2.  v4:= (`long`) v13 @kind i2l;
  #L1d93c4.  v2:= v2 + v4 @kind long;
  #L1d93c6.  v14:= v14 - v13 @kind int;
  #L1d93c8.  v12:= (`long`) v14 @kind i2l;
  #L1d93ca.  v12:= v12 + v2 @kind long;
  #L1d93cc.  if v11 == 0 then goto L1d94fa;
  #L1d93d0.  v14:= lcmp(v2, v12);
  #L1d93d4.  if v14 < 0 then goto L1d93da;
  #L1d93d8.  return v11;
  #L1d93da.  v14:= (`byte`) v11 @kind i2b;
  #L1d93dc.  v0:= -32I;
  #L1d93e0.  v4:= -1I;
  #L1d93e2.  v5:= -65I;
  #L1d93e6.  v6:= 1L;
  #L1d93ea.  if v14 >= v0 then goto L1d940e;
  #L1d93ee.  v11:= -62I;
  #L1d93f2.  if v14 < v11 then goto L1d940c;
  #L1d93f6.  v6:= v6 + v2 @kind long;
  #L1d93f8.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d93fe.  v11:= temp;
  #L1d9400.  if v11 <= v5 then goto L1d9406;
  #L1d9404.  goto L1d940c;
  #L1d9406.  v2:= v6 @kind wide;
  #L1d9408.  goto L1d94fa;
  #L1d940c.  return v4;
  #L1d940e.  v8:= -16I;
  #L1d9412.  if v14 >= v8 then goto L1d9476;
  #L1d9416.  v11:= v11 ^> 8;
  #L1d941a.  v11:= ~v11 @kind int;
  #L1d941c.  v11:= (`byte`) v11 @kind i2b;
  #L1d941e.  if v11 != 0 then goto L1d9442;
  #L1d9422.  v8:= v2 + v6 @kind long;
  #L1d9426.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d942c.  v11:= temp;
  #L1d942e.  v1:= lcmp(v8, v12);
  #L1d9432.  if v1 < 0 then goto L1d9440;
  #L1d9436.  call temp:= `a`(v14, v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d943c.  v11:= temp;
  #L1d943e.  return v11;
  #L1d9440.  v2:= v8 @kind wide;
  #L1d9442.  if v11 > v5 then goto L1d9474;
  #L1d9446.  v1:= -96I;
  #L1d944a.  if v14 != v0 then goto L1d9452;
  #L1d944e.  if v11 < v1 then goto L1d9474;
  #L1d9452.  v0:= -19I;
  #L1d9456.  if v14 != v0 then goto L1d945e;
  #L1d945a.  if v11 >= v1 then goto L1d9474;
  #L1d945e.  v0:= v2 + v6 @kind long;
  #L1d9462.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d9468.  v11:= temp;
  #L1d946a.  if v11 <= v5 then goto L1d9470;
  #L1d946e.  goto L1d9474;
  #L1d9470.  v2:= v0 @kind wide;
  #L1d9472.  goto L1d94fa;
  #L1d9474.  return v4;
  #L1d9476.  v0:= v11 ^> 8;
  #L1d947a.  v0:= ~v0 @kind int;
  #L1d947c.  v0:= (`byte`) v0 @kind i2b;
  #L1d947e.  if v0 != 0 then goto L1d94a4;
  #L1d9482.  v8:= v2 + v6 @kind long;
  #L1d9486.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d948c.  v0:= temp;
  #L1d948e.  v11:= lcmp(v8, v12);
  #L1d9492.  if v11 < 0 then goto L1d94a0;
  #L1d9496.  call temp:= `a`(v14, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @kind static;
  #L1d949c.  v11:= temp;
  #L1d949e.  return v11;
  #L1d94a0.  v2:= v8 @kind wide;
  #L1d94a2.  goto L1d94aa;
  #L1d94a4.  v11:= v11 ^> 16;
  #L1d94a8.  v1:= (`byte`) v11 @kind i2b;
  #L1d94aa.  if v1 != 0 then goto L1d94ce;
  #L1d94ae.  v8:= v2 + v6 @kind long;
  #L1d94b2.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d94b8.  v1:= temp;
  #L1d94ba.  v11:= lcmp(v8, v12);
  #L1d94be.  if v11 < 0 then goto L1d94cc;
  #L1d94c2.  call temp:= `b`(v14, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.b:(III)I` @kind static;
  #L1d94c8.  v11:= temp;
  #L1d94ca.  return v11;
  #L1d94cc.  v2:= v8 @kind wide;
  #L1d94ce.  if v0 > v5 then goto L1d94f8;
  #L1d94d2.  v11:= v14 ^< 28;
  #L1d94d6.  v0:= v0 + 112;
  #L1d94da.  v11:= v11 + v0 @kind int;
  #L1d94dc.  v11:= v11 ^> 30;
  #L1d94e0.  if v11 != 0 then goto L1d94f8;
  #L1d94e4.  if v1 > v5 then goto L1d94f8;
  #L1d94e8.  v0:= v2 + v6 @kind long;
  #L1d94ec.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L1d94f2.  v11:= temp;
  #L1d94f4.  if v11 <= v5 then goto L1d9470;
  #L1d94f8.  return v4;
  #L1d94fa.  v12:= v12 - v2 @kind long;
  #L1d94fc.  v11:= (`int`) v12 @kind l2i;
  #L1d94fe.  call temp:= `q`(v2, v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.q:(JI)I` @kind static;
  #L1d9504.  v11:= temp;
  #L1d9506.  return v11;
  #L1d9508.  v11:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1d950c.  v0:= 3I;
  #L1d950e.  v0:= new `java.lang.Object`[v0];
  #L1d9512.  call temp:= `limit`(v12) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1d9518.  v12:= temp;
  #L1d951a.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d9520.  v12:= temp @kind object;
  #L1d9522.  v0[v1]:= v12 @kind object;
  #L1d9526.  v12:= 1I;
  #L1d9528.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d952e.  v13:= temp @kind object;
  #L1d9530.  v0[v12]:= v13 @kind object;
  #L1d9534.  v12:= 2I;
  #L1d9536.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d953c.  v13:= temp @kind object;
  #L1d953e.  v0[v12]:= v13 @kind object;
  #L1d9542.  v12:= "buffer limit=%d, index=%d, limit=%d" @kind object;
  #L1d9546.  call temp:= `format`(v12, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d954c.  v12:= temp @kind object;
  #L1d954e.  call `<init>`(v11, v12) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9554.  throw v11;
}
