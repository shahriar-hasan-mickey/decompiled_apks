record `com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind class @AccessFlag ABSTRACT extends `com.google.crypto.tink.shaded.protobuf.ByteString` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.ByteString$h` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ae92c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.<init>:()V` @kind direct;
  #L1ae932.  return @kind void;
}
procedure `int` `getTreeDepth`(`com.google.crypto.tink.shaded.protobuf.ByteString$h` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.getTreeDepth:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1ae918.  v0:= 0I;
  #L1ae91a.  return v0;
}
procedure `boolean` `isBalanced`(`com.google.crypto.tink.shaded.protobuf.ByteString$h` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.isBalanced:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1ae904.  v0:= 1I;
  #L1ae906.  return v0;
}
procedure `boolean` `n`(`com.google.crypto.tink.shaded.protobuf.ByteString` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @AccessFlag ABSTRACT {

  # return;
}
