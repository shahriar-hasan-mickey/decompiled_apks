record `com.google.crypto.tink.shaded.protobuf.ByteString` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Iterable` @kind interface, `java.io.Serializable` @kind interface {
  `int` `com.google.crypto.tink.shaded.protobuf.ByteString.a` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.ByteString` `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.shaded.protobuf.ByteString$f` `@@com.google.crypto.tink.shaded.protobuf.ByteString.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Comparator` `@@com.google.crypto.tink.shaded.protobuf.ByteString.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1afa18.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L1afa1c.  v1:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L1afa20.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L1afa26.  `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` := v0 @kind object;
  #L1afa2a.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/b;.c:()Z` @kind static;
  #L1afa30.  v0:= temp;
  #L1afa32.  v1:= 0I;
  #L1afa34.  if v0 == 0 then goto L1afa44;
  #L1afa38.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$j`;
  #L1afa3c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$j;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;)V` @kind direct;
  #L1afa42.  goto L1afa4e;
  #L1afa44.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$d`;
  #L1afa48.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$d;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;)V` @kind direct;
  #L1afa4e.  `@@com.google.crypto.tink.shaded.protobuf.ByteString.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$f` := v0 @kind object;
  #L1afa52.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$b`;
  #L1afa56.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$b;.<init>:()V` @kind direct;
  #L1afa5c.  `@@com.google.crypto.tink.shaded.protobuf.ByteString.c` @type ^`java.util.Comparator` := v0 @kind object;
  #L1afa60.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1afa74.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1afa7a.  v0:= 0I;
  #L1afa7c.  v1.`com.google.crypto.tink.shaded.protobuf.ByteString.a` @type ^`int` := v0;
  #L1afa80.  return @kind void;
}
procedure `int` `a`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.a:(B)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1af720.  call temp:= `h`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.h:(B)I` @kind static;
  #L1af726.  v0:= temp;
  #L1af728.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `b`(`java.util.Iterator` v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.b:(Ljava/util/Iterator;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1af2b0.  v0:= 1I;
  #L1af2b2.  if v3 < v0 then goto L1af2e8;
  #L1af2b6.  if v3 != v0 then goto L1af2c8;
  #L1af2ba.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1af2c0.  v2:= temp @kind object;
  #L1af2c2.  v2:= (`com.google.crypto.tink.shaded.protobuf.ByteString`) v2 @kind object;
  #L1af2c6.  goto L1af2e6;
  #L1af2c8.  v0:= v3 ^>> 1;
  #L1af2cc.  call temp:= `b`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.b:(Ljava/util/Iterator;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af2d2.  v1:= temp @kind object;
  #L1af2d4.  v3:= v3 - v0 @kind int;
  #L1af2d6.  call temp:= `b`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.b:(Ljava/util/Iterator;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af2dc.  v2:= temp @kind object;
  #L1af2de.  call temp:= `concat`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.concat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1af2e4.  v2:= temp @kind object;
  #L1af2e6.  return v2 @kind object;
  #L1af2e8.  v2:= new `java.lang.IllegalArgumentException`;
  #L1af2ec.  v0:= new `java.lang.Object`[v0];
  #L1af2f0.  v1:= 0I;
  #L1af2f2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1af2f8.  v3:= temp @kind object;
  #L1af2fa.  v0[v1]:= v3 @kind object;
  #L1af2fe.  v3:= "length (%s) must be >= 1" @kind object;
  #L1af302.  call temp:= `format`(v3, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1af308.  v3:= temp @kind object;
  #L1af30a.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af310.  throw v2;
}
procedure `void` `c`(`int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.c:(II)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1afa94.  v0:= v3 + 1;
  #L1afa98.  v0:= v4 - v0 @kind int;
  #L1afa9c.  v0:= v0 ^| v3 @kind int;
  #L1afa9e.  if v0 >= 0 then goto L1afb12;
  #L1afaa2.  if v3 >= 0 then goto L1afad4;
  #L1afaa6.  v4:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1afaaa.  v0:= new `java.lang.StringBuilder`;
  #L1afaae.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1afab4.  v1:= "Index < 0: " @kind object;
  #L1afab8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afabe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afac4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afaca.  v3:= temp @kind object;
  #L1afacc.  call `<init>`(v4, v3) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afad2.  throw v4;
  #L1afad4.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1afad8.  v1:= new `java.lang.StringBuilder`;
  #L1afadc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1afae2.  v2:= "Index > length: " @kind object;
  #L1afae6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afaec.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afaf2.  v3:= ", " @kind object;
  #L1afaf6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afafc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb02.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afb08.  v3:= temp @kind object;
  #L1afb0a.  call `<init>`(v0, v3) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afb10.  throw v0;
  #L1afb12.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.lang.Iterable` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/lang/Iterable;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1af3fc.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L1af400.  if v0 != 0 then goto L1af426;
  #L1af404.  v0:= 0I;
  #L1af406.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1af40c.  v1:= temp @kind object;
  #L1af40e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1af414.  v2:= temp;
  #L1af416.  if v2 == 0 then goto L1af434;
  #L1af41a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1af420.  v0:= v0 + 1;
  #L1af424.  goto L1af40e;
  #L1af426.  v0:= v3 @kind object;
  #L1af428.  v0:= (`java.util.Collection`) v0 @kind object;
  #L1af42c.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1af432.  v0:= temp;
  #L1af434.  if v0 != 0 then goto L1af43e;
  #L1af438.  v3:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L1af43c.  return v3 @kind object;
  #L1af43e.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1af444.  v3:= temp @kind object;
  #L1af446.  call temp:= `b`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.b:(Ljava/util/Iterator;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af44c.  v3:= temp @kind object;
  #L1af44e.  return v3 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1af460.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L1af464.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L1af46a.  v1:= temp @kind object;
  #L1af46c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L1af472.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.lang.String` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1af484.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L1af488.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1af48e.  v1:= temp @kind object;
  #L1af490.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L1af496.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1af4a8.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1af4ae.  v0:= temp;
  #L1af4b0.  call temp:= `copyFrom`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/nio/ByteBuffer;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af4b6.  v1:= temp @kind object;
  #L1af4b8.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.nio.ByteBuffer` v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/nio/ByteBuffer;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1af4cc.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1af4d2.  v0:= temp;
  #L1af4d4.  v1:= 0I;
  #L1af4d6.  call temp:= `d`(v1, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L1af4dc.  v3:= new `byte`[v3];
  #L1af4e0.  call temp:= `get`(v2, v3) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1af4e6.  v2:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L1af4ea.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L1af4f0.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1af3a8.  v0:= length @variable v2;
  #L1af3aa.  v1:= 0I;
  #L1af3ac.  call temp:= `copyFrom`(v2, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af3b2.  v2:= temp @kind object;
  #L1af3b4.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1af3c8.  v0:= v3 + v4 @kind int;
  #L1af3cc.  v1:= length @variable v2;
  #L1af3ce.  call temp:= `d`(v3, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L1af3d4.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L1af3d8.  v1:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$f` @kind object;
  #L1af3dc.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$f;.a:([BII)[B` @kind interface;
  #L1af3e2.  v2:= temp @kind object;
  #L1af3e4.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L1af3ea.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFromUtf8`(`java.lang.String` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFromUtf8:(Ljava/lang/String;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1af504.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L1af508.  v1:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L1af50c.  call temp:= `getBytes`(v2, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1af512.  v2:= temp @kind object;
  #L1af514.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L1af51a.  return v0 @kind object;
}
procedure `int` `d`(`int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1af73c.  v0:= v4 - v3 @kind int;
  #L1af740.  v1:= v3 ^| v4 @kind int;
  #L1af744.  v1:= v1 ^| v0 @kind int;
  #L1af746.  v2:= v5 - v4 @kind int;
  #L1af74a.  v1:= v1 ^| v2 @kind int;
  #L1af74c.  if v1 >= 0 then goto L1af80c;
  #L1af750.  if v3 < 0 then goto L1af7d4;
  #L1af754.  if v4 >= v3 then goto L1af796;
  #L1af758.  v5:= new `java.lang.IndexOutOfBoundsException`;
  #L1af75c.  v0:= new `java.lang.StringBuilder`;
  #L1af760.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af766.  v1:= "Beginning index larger than ending index: " @kind object;
  #L1af76a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af770.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af776.  v3:= ", " @kind object;
  #L1af77a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af780.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af786.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af78c.  v3:= temp @kind object;
  #L1af78e.  call `<init>`(v5, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af794.  throw v5;
  #L1af796.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L1af79a.  v0:= new `java.lang.StringBuilder`;
  #L1af79e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af7a4.  v1:= "End index: " @kind object;
  #L1af7a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af7ae.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af7b4.  v4:= " >= " @kind object;
  #L1af7b8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af7be.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af7c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af7ca.  v4:= temp @kind object;
  #L1af7cc.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af7d2.  throw v3;
  #L1af7d4.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L1af7d8.  v5:= new `java.lang.StringBuilder`;
  #L1af7dc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af7e2.  v0:= "Beginning index: " @kind object;
  #L1af7e6.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af7ec.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af7f2.  v3:= " < 0" @kind object;
  #L1af7f6.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af7fc.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af802.  v3:= temp @kind object;
  #L1af804.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af80a.  throw v4;
  #L1af80c.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$g` `f`(`int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.f:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString$g;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1af6c4.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$g`;
  #L1af6c8.  v1:= 0I;
  #L1af6ca.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$g;.<init>:(ILcom/google/crypto/tink/shaded/protobuf/ByteString$a;)V` @kind direct;
  #L1af6d0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `g`(`java.io.InputStream` v5 @kind object, `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.g:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1af52c.  v0:= new `byte`[v6];
  #L1af530.  v1:= 0I;
  #L1af532.  v2:= 0I;
  #L1af534.  if v2 >= v6 then goto L1af550;
  #L1af538.  v3:= v6 - v2 @kind int;
  #L1af53c.  call temp:= `read`(v5, v0, v2, v3) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L1af542.  v3:= temp;
  #L1af544.  v4:= -1I;
  #L1af546.  if v3 != v4 then goto L1af54c;
  #L1af54a.  goto L1af550;
  #L1af54c.  v2:= v2 + v3 @kind int;
  #L1af54e.  goto L1af534;
  #L1af550.  if v2 != 0 then goto L1af558;
  #L1af554.  v5:= 0I;
  #L1af556.  return v5 @kind object;
  #L1af558.  call temp:= `copyFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af55e.  v5:= temp @kind object;
  #L1af560.  return v5 @kind object;
}
procedure `int` `h`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.h:(B)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1af870.  v0:= v0 ^& 255;
  #L1af874.  return v0;
}
procedure `java.lang.String` `i`(`com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.i:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1af980.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af986.  v0:= temp;
  #L1af988.  v1:= 50I;
  #L1af98c.  if v0 > v1 then goto L1af99a;
  #L1af990.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/q0;.a:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Ljava/lang/String;` @kind static;
  #L1af996.  v0:= temp @kind object;
  #L1af998.  goto L1af9d2;
  #L1af99a.  v0:= new `java.lang.StringBuilder`;
  #L1af99e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af9a4.  v1:= 0I;
  #L1af9a6.  v2:= 47I;
  #L1af9aa.  call temp:= `substring`(v3, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1af9b0.  v1:= temp @kind object;
  #L1af9b2.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/q0;.a:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Ljava/lang/String;` @kind static;
  #L1af9b8.  v1:= temp @kind object;
  #L1af9ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af9c0.  v1:= "..." @kind object;
  #L1af9c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af9ca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af9d0.  v0:= temp @kind object;
  #L1af9d2.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `j`(`java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.j:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1af654.  call temp:= `hasArray`(v3) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1af65a.  v0:= temp;
  #L1af65c.  if v0 == 0 then goto L1af68c;
  #L1af660.  call temp:= `arrayOffset`(v3) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1af666.  v0:= temp;
  #L1af668.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1af66e.  v1:= temp @kind object;
  #L1af670.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1af676.  v2:= temp;
  #L1af678.  v0:= v0 + v2 @kind int;
  #L1af67a.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1af680.  v3:= temp;
  #L1af682.  call temp:= `l`(v1, v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.l:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af688.  v3:= temp @kind object;
  #L1af68a.  return v3 @kind object;
  #L1af68c.  v0:= new `com.google.crypto.tink.shaded.protobuf.e0`;
  #L1af690.  call `<init>`(v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L1af696.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `k`(`byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.k:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC {
    temp;
    v0;

  #L1af61c.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L1af620.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L1af626.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `l`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.l:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC {
    temp;
    v0;

  #L1af638.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$e`;
  #L1af63c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$e;.<init>:([BII)V` @kind direct;
  #L1af642.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$Output` `newOutput`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.newOutput:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$Output;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1af6e4.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$Output`;
  #L1af6e8.  v1:= 128I;
  #L1af6ec.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$Output;.<init>:(I)V` @kind direct;
  #L1af6f2.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$Output` `newOutput`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.newOutput:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString$Output;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1af704.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$Output`;
  #L1af708.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$Output;.<init>:(I)V` @kind direct;
  #L1af70e.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readFrom`(`java.io.InputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1af574.  v0:= 256I;
  #L1af578.  v1:= 8192I;
  #L1af57c.  call temp:= `readFrom`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af582.  v2:= temp @kind object;
  #L1af584.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readFrom`(`java.io.InputStream` v0 @kind object, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1af598.  call temp:= `readFrom`(v0, v1, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af59e.  v0:= temp @kind object;
  #L1af5a0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readFrom`(`java.io.InputStream` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1af5b4.  v0:= new `java.util.ArrayList`;
  #L1af5b8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1af5be.  call temp:= `g`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.g:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af5c4.  v1:= temp @kind object;
  #L1af5c6.  if v1 != 0 then goto L1af5d4;
  #L1af5ca.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/lang/Iterable;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af5d0.  v2:= temp @kind object;
  #L1af5d2.  return v2 @kind object;
  #L1af5d4.  call temp:= `add`(v0, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1af5da.  v3:= v3 * 2;
  #L1af5de.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1af5e4.  v3:= temp;
  #L1af5e6.  goto L1af5be;
}
procedure `java.util.Comparator` `unsignedLexicographicalComparator`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.unsignedLexicographicalComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1af9e4.  v0:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.c` @type ^`java.util.Comparator` @kind object;
  #L1af9e8.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `asReadOnlyByteBuffer`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `asReadOnlyByteBufferList`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.asReadOnlyByteBufferList:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `byteAt`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.byteAt:(I)B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `concat`(`com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.concat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1af324.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af32a.  v0:= temp;
  #L1af32c.  v1:= 2147483647I;
  #L1af332.  v1:= v1 - v0 @kind int;
  #L1af334.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af33a.  v0:= temp;
  #L1af33c.  if v1 < v0 then goto L1af34a;
  #L1af340.  call temp:= `p`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.p:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1af346.  v4:= temp @kind object;
  #L1af348.  return v4 @kind object;
  #L1af34a.  v0:= new `java.lang.IllegalArgumentException`;
  #L1af34e.  v1:= new `java.lang.StringBuilder`;
  #L1af352.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af358.  v2:= "ByteString would be too long: " @kind object;
  #L1af35c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af362.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af368.  v2:= temp;
  #L1af36a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af370.  v2:= "+" @kind object;
  #L1af374.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af37a.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af380.  v4:= temp;
  #L1af382.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af388.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af38e.  v4:= temp @kind object;
  #L1af390.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af396.  throw v0;
}
procedure `void` `copyTo`(`java.nio.ByteBuffer` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1afb24.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1afb2a.  v0:= temp;
  #L1afb2c.  v1:= 0I;
  #L1afb2e.  call `copyTo`(v2, v3, v1, v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BIII)V` @kind virtual;
  #L1afb34.  return @kind void;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BIII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1afb48.  v0:= v4 + v6 @kind int;
  #L1afb4c.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1afb52.  v1:= temp;
  #L1afb54.  call temp:= `d`(v4, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L1afb5a.  v0:= v5 + v6 @kind int;
  #L1afb5e.  v1:= length @variable v3;
  #L1afb60.  call temp:= `d`(v5, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L1afb66.  if v6 <= 0 then goto L1afb70;
  #L1afb6a.  call `copyToInternal`(v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @kind virtual;
  #L1afb70.  return @kind void;
}
procedure `void` `copyToInternal`(`byte`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `byte` `e`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.e:(I)B` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `endsWith`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.endsWith:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1af1c0.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af1c6.  v0:= temp;
  #L1af1c8.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af1ce.  v1:= temp;
  #L1af1d0.  if v0 < v1 then goto L1af1fe;
  #L1af1d4.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af1da.  v0:= temp;
  #L1af1dc.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af1e2.  v1:= temp;
  #L1af1e4.  v0:= v0 - v1 @kind int;
  #L1af1e6.  call temp:= `substring`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1af1ec.  v0:= temp @kind object;
  #L1af1ee.  call temp:= `equals`(v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1af1f4.  v3:= temp;
  #L1af1f6.  if v3 == 0 then goto L1af1fe;
  #L1af1fa.  v3:= 1I;
  #L1af1fc.  goto L1af200;
  #L1af1fe.  v3:= 0I;
  #L1af200.  return v3;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTreeDepth`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1af820.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString.a` @type ^`int`;
  #L1af824.  if v0 != 0 then goto L1af844;
  #L1af828.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af82e.  v0:= temp;
  #L1af830.  v1:= 0I;
  #L1af832.  call temp:= `partialHash`(v2, v0, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialHash:(III)I` @kind virtual;
  #L1af838.  v0:= temp;
  #L1af83a.  if v0 != 0 then goto L1af840;
  #L1af83e.  v0:= 1I;
  #L1af840.  v2.`com.google.crypto.tink.shaded.protobuf.ByteString.a` @type ^`int` := v0;
  #L1af844.  return v0;
}
procedure `boolean` `isBalanced`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.isBalanced:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af214.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af21a.  v0:= temp;
  #L1af21c.  if v0 != 0 then goto L1af224;
  #L1af220.  v0:= 1I;
  #L1af222.  goto L1af226;
  #L1af224.  v0:= 0I;
  #L1af226.  return v0;
}
procedure `boolean` `isValidUtf8`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.isValidUtf8:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$ByteIterator` `iterator`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.iterator:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$ByteIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af6a8.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$a`;
  #L1af6ac.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind direct;
  #L1af6b2.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1af9fc.  call temp:= `iterator`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.iterator:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$ByteIterator;` @kind virtual;
  #L1afa02.  v0:= temp @kind object;
  #L1afa04.  return v0 @kind object;
}
procedure `void` `m`(`com.google.crypto.tink.shaded.protobuf.ByteOutput` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newCodedInput`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.newCodedInput:()Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.io.InputStream` `newInput`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.newInput:()Ljava/io/InputStream;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `partialHash`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialHash:(III)I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `partialIsValidUtf8`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialIsValidUtf8:(III)I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `peekCachedHashCode`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.peekCachedHashCode:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1af858.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString.a` @type ^`int`;
  #L1af85c.  return v0;
}
procedure `int` `size`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `startsWith`(`com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.startsWith:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1af238.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af23e.  v0:= temp;
  #L1af240.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af246.  v1:= temp;
  #L1af248.  v2:= 0I;
  #L1af24a.  if v0 < v1 then goto L1af26c;
  #L1af24e.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af254.  v0:= temp;
  #L1af256.  call temp:= `substring`(v3, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1af25c.  v0:= temp @kind object;
  #L1af25e.  call temp:= `equals`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1af264.  v4:= temp;
  #L1af266.  if v4 == 0 then goto L1af26c;
  #L1af26a.  v2:= 1I;
  #L1af26c.  return v2;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af5f8.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af5fe.  v0:= temp;
  #L1af600.  call temp:= `substring`(v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1af606.  v2:= temp @kind object;
  #L1af608.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `toByteArray`(`com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1af280.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af286.  v0:= temp;
  #L1af288.  if v0 != 0 then goto L1af292;
  #L1af28c.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L1af290.  return v0 @kind object;
  #L1af292.  v1:= new `byte`[v0];
  #L1af296.  v2:= 0I;
  #L1af298.  call `copyToInternal`(v3, v1, v2, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @kind virtual;
  #L1af29e.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1af888.  v0:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L1af88c.  v1:= 3I;
  #L1af88e.  v1:= new `java.lang.Object`[v1];
  #L1af892.  call temp:= `identityHashCode`(v4) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L1af898.  v2:= temp;
  #L1af89a.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1af8a0.  v2:= temp @kind object;
  #L1af8a2.  v3:= 0I;
  #L1af8a4.  v1[v3]:= v2 @kind object;
  #L1af8a8.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af8ae.  v2:= temp;
  #L1af8b0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1af8b6.  v2:= temp @kind object;
  #L1af8b8.  v3:= 1I;
  #L1af8ba.  v1[v3]:= v2 @kind object;
  #L1af8be.  call temp:= `i`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.i:()Ljava/lang/String;` @kind direct;
  #L1af8c4.  v2:= temp @kind object;
  #L1af8c6.  v3:= 2I;
  #L1af8c8.  v1[v3]:= v2 @kind object;
  #L1af8cc.  v2:= "<ByteString@%s size=%d contents=\"%s\">" @kind object;
  #L1af8d0.  call temp:= `format`(v0, v2, v1) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1af8d6.  v0:= temp @kind object;
  #L1af8d8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1af8ec.  call temp:= `forName`(v3) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1af8f2.  v0:= temp @kind object;
  #L1af8f4.  call temp:= `toString`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L1af8fa.  v3:= temp @kind object;
  #L1af8fc.  return v3 @kind object;
  #L1af8fe.  v0:= Exception @type ^`java.nio.charset.UnsupportedCharsetException` @kind object;
  #L1af900.  v1:= new `java.io.UnsupportedEncodingException`;
  #L1af904.  call `<init>`(v1, v3) @signature `Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af90a.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/UnsupportedEncodingException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1af910.  throw v1;
  catch `java.nio.charset.UnsupportedCharsetException` @[L1af8ec..L1af8fc] goto L1af8fe;
}
procedure `java.lang.String` `toString`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af934.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1af93a.  v0:= temp;
  #L1af93c.  if v0 != 0 then goto L1af946;
  #L1af940.  v2:= "" @kind object;
  #L1af944.  goto L1af94e;
  #L1af946.  call temp:= `toStringInternal`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L1af94c.  v2:= temp @kind object;
  #L1af94e.  return v2 @kind object;
}
procedure `java.lang.String` `toStringInternal`(`java.nio.charset.Charset` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toStringUtf8`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toStringUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af960.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L1af964.  call temp:= `toString`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L1af96a.  v0:= temp @kind object;
  #L1af96c.  return v0 @kind object;
}
procedure `void` `writeTo`(`java.io.OutputStream` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
