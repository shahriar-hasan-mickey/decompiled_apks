record `com.google.crypto.tink.shaded.protobuf.Internal` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.ByteBuffer` `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_BUFFER` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_CODED_INPUT_STREAM` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @AccessFlag STATIC_FINAL;
global `java.nio.charset.Charset` `@@com.google.crypto.tink.shaded.protobuf.Internal.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c3c2c.  v0:= "UTF-8" @kind object;
  #L1c3c30.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1c3c36.  v0:= temp @kind object;
  #L1c3c38.  `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L1c3c3c.  v0:= "ISO-8859-1" @kind object;
  #L1c3c40.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1c3c46.  v0:= temp @kind object;
  #L1c3c48.  `@@com.google.crypto.tink.shaded.protobuf.Internal.b` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L1c3c4c.  v0:= 0I;
  #L1c3c4e.  v0:= new `byte`[v0];
  #L1c3c52.  `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v0 @kind object;
  #L1c3c56.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L1c3c5c.  v1:= temp @kind object;
  #L1c3c5e.  `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_BUFFER` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L1c3c62.  call temp:= `newInstance`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([B)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L1c3c68.  v0:= temp @kind object;
  #L1c3c6a.  `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_CODED_INPUT_STREAM` @type ^`com.google.crypto.tink.shaded.protobuf.CodedInputStream` := v0 @kind object;
  #L1c3c6e.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.Internal` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c3c80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c3c86.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L1c3b1c.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1c3b22.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.b:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L1c3b34.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c3b3a.  return v0 @kind object;
}
procedure `byte`[] `byteArrayDefaultValue`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.byteArrayDefaultValue:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c37e8.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.b` @type ^`java.nio.charset.Charset` @kind object;
  #L1c37ec.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1c37f2.  v1:= temp @kind object;
  #L1c37f4.  return v1 @kind object;
}
procedure `java.nio.ByteBuffer` `byteBufferDefaultValue`(`java.lang.String` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.byteBufferDefaultValue:(Ljava/lang/String;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c3bcc.  call temp:= `byteArrayDefaultValue`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.byteArrayDefaultValue:(Ljava/lang/String;)[B` @kind static;
  #L1c3bd2.  v0:= temp @kind object;
  #L1c3bd4.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L1c3bda.  v0:= temp @kind object;
  #L1c3bdc.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `bytesDefaultValue`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.bytesDefaultValue:(Ljava/lang/String;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c3828.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.b` @type ^`java.nio.charset.Charset` @kind object;
  #L1c382c.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1c3832.  v1:= temp @kind object;
  #L1c3834.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1c383a.  v1:= temp @kind object;
  #L1c383c.  return v1 @kind object;
}
procedure `int` `c`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.c:([BII)I` @AccessFlag STATIC {
    temp;

  #L1c3904.  call temp:= `e`(v2, v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.e:(I[BII)I` @kind static;
  #L1c390a.  v0:= temp;
  #L1c390c.  if v0 != 0 then goto L1c3912;
  #L1c3910.  v0:= 1I;
  #L1c3912.  return v0;
}
procedure `java.nio.ByteBuffer` `copyByteBuffer`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.copyByteBuffer:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c3bf0.  call temp:= `duplicate`(v1) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1c3bf6.  v1:= temp @kind object;
  #L1c3bf8.  call temp:= `clear`(v1) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L1c3bfe.  call temp:= `capacity`(v1) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L1c3c04.  v0:= temp;
  #L1c3c06.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L1c3c0c.  v0:= temp @kind object;
  #L1c3c0e.  call temp:= `put`(v0, v1) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1c3c14.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L1c3c1a.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.d:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L1c3b4c.  v0:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v0 @kind object;
  #L1c3b50.  call temp:= `toBuilder`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;` @kind interface;
  #L1c3b56.  v0:= temp @kind object;
  #L1c3b58.  v1:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v1 @kind object;
  #L1c3b5c.  call temp:= `mergeFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;` @kind interface;
  #L1c3b62.  v0:= temp @kind object;
  #L1c3b64.  call temp:= `buildPartial`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;.buildPartial:()Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind interface;
  #L1c3b6a.  v0:= temp @kind object;
  #L1c3b6c.  return v0 @kind object;
}
procedure `int` `e`(`int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.e:(I[BII)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1c3af0.  v0:= v4;
  #L1c3af2.  v1:= v4 + v5 @kind int;
  #L1c3af6.  if v0 >= v1 then goto L1c3b0a;
  #L1c3afa.  v2:= v2 * 31;
  #L1c3afe.  v1:= v3[v0] @kind byte;
  #L1c3b02.  v2:= v2 + v1 @kind int;
  #L1c3b04.  v0:= v0 + 1;
  #L1c3b08.  goto L1c3af2;
  #L1c3b0a.  return v2;
}
procedure `boolean` `equals`(`java.util.List` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.equals:(Ljava/util/List;Ljava/util/List;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c368c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1c3692.  v0:= temp;
  #L1c3694.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1c369a.  v1:= temp;
  #L1c369c.  v2:= 0I;
  #L1c369e.  if v0 == v1 then goto L1c36a4;
  #L1c36a2.  return v2;
  #L1c36a4.  v0:= 0I;
  #L1c36a6.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1c36ac.  v1:= temp;
  #L1c36ae.  if v0 >= v1 then goto L1c36de;
  #L1c36b2.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1c36b8.  v1:= temp @kind object;
  #L1c36ba.  v1:= (`byte`[]) v1 @kind object;
  #L1c36be.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1c36c4.  v3:= temp @kind object;
  #L1c36c6.  v3:= (`byte`[]) v3 @kind object;
  #L1c36ca.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L1c36d0.  v1:= temp;
  #L1c36d2.  if v1 != 0 then goto L1c36d8;
  #L1c36d6.  return v2;
  #L1c36d8.  v0:= v0 + 1;
  #L1c36dc.  goto L1c36a6;
  #L1c36de.  v4:= 1I;
  #L1c36e0.  return v4;
}
procedure `boolean` `equalsByteBuffer`(`java.nio.ByteBuffer` v2 @kind object, `java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.equalsByteBuffer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c36f4.  call temp:= `capacity`(v2) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L1c36fa.  v0:= temp;
  #L1c36fc.  call temp:= `capacity`(v3) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L1c3702.  v1:= temp;
  #L1c3704.  if v0 == v1 then goto L1c370c;
  #L1c3708.  v2:= 0I;
  #L1c370a.  return v2;
  #L1c370c.  call temp:= `duplicate`(v2) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1c3712.  v2:= temp @kind object;
  #L1c3714.  call temp:= `clear`(v2) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L1c371a.  v2:= temp @kind object;
  #L1c371c.  call temp:= `duplicate`(v3) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1c3722.  v3:= temp @kind object;
  #L1c3724.  call temp:= `clear`(v3) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L1c372a.  v3:= temp @kind object;
  #L1c372c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c3732.  v2:= temp;
  #L1c3734.  return v2;
}
procedure `boolean` `equalsByteBuffer`(`java.util.List` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.equalsByteBuffer:(Ljava/util/List;Ljava/util/List;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c3748.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1c374e.  v0:= temp;
  #L1c3750.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1c3756.  v1:= temp;
  #L1c3758.  v2:= 0I;
  #L1c375a.  if v0 == v1 then goto L1c3760;
  #L1c375e.  return v2;
  #L1c3760.  v0:= 0I;
  #L1c3762.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1c3768.  v1:= temp;
  #L1c376a.  if v0 >= v1 then goto L1c379a;
  #L1c376e.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1c3774.  v1:= temp @kind object;
  #L1c3776.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L1c377a.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1c3780.  v3:= temp @kind object;
  #L1c3782.  v3:= (`java.nio.ByteBuffer`) v3 @kind object;
  #L1c3786.  call temp:= `equalsByteBuffer`(v1, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.equalsByteBuffer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Z` @kind static;
  #L1c378c.  v1:= temp;
  #L1c378e.  if v1 != 0 then goto L1c3794;
  #L1c3792.  return v2;
  #L1c3794.  v0:= v0 + 1;
  #L1c3798.  goto L1c3762;
  #L1c379a.  v4:= 1I;
  #L1c379c.  return v4;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `getDefaultInstance`(`java.lang.Class` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.getDefaultInstance:(Ljava/lang/Class;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c3850.  v0:= "getDefaultInstance" @kind object;
  #L1c3854.  v1:= 0I;
  #L1c3856.  v2:= new `java.lang.Class`[v1];
  #L1c385a.  call temp:= `getMethod`(v4, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1c3860.  v0:= temp @kind object;
  #L1c3862.  v1:= new `java.lang.Object`[v1];
  #L1c3866.  call temp:= `invoke`(v0, v0, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c386c.  v0:= temp @kind object;
  #L1c386e.  v0:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v0 @kind object;
  #L1c3872.  return v0 @kind object;
  #L1c3874.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c3876.  v1:= new `java.lang.RuntimeException`;
  #L1c387a.  v2:= new `java.lang.StringBuilder`;
  #L1c387e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c3884.  v3:= "Failed to get default instance for " @kind object;
  #L1c3888.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c388e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c3894.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c389a.  v4:= temp @kind object;
  #L1c389c.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c38a2.  throw v1;
  catch `java.lang.Exception` @[L1c3850..L1c3872] goto L1c3874;
}
procedure `int` `hashBoolean`(`boolean` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashBoolean:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c38c4.  if v0 == 0 then goto L1c38ce;
  #L1c38c8.  v0:= 1231I;
  #L1c38cc.  goto L1c38d2;
  #L1c38ce.  v0:= 1237I;
  #L1c38d2.  return v0;
}
procedure `int` `hashCode`(`java.util.List` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashCode:(Ljava/util/List;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c3924.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c392a.  v2:= temp @kind object;
  #L1c392c.  v0:= 1I;
  #L1c392e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c3934.  v1:= temp;
  #L1c3936.  if v1 == 0 then goto L1c3956;
  #L1c393a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c3940.  v1:= temp @kind object;
  #L1c3942.  v1:= (`byte`[]) v1 @kind object;
  #L1c3946.  v0:= v0 * 31;
  #L1c394a.  call temp:= `hashCode`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashCode:([B)I` @kind static;
  #L1c3950.  v1:= temp;
  #L1c3952.  v0:= v0 + v1 @kind int;
  #L1c3954.  goto L1c392e;
  #L1c3956.  return v0;
}
procedure `int` `hashCode`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashCode:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c38e4.  v0:= length @variable v2;
  #L1c38e6.  v1:= 0I;
  #L1c38e8.  call temp:= `c`(v2, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.c:([BII)I` @kind static;
  #L1c38ee.  v2:= temp;
  #L1c38f0.  return v2;
}
procedure `int` `hashCodeByteBuffer`(`java.nio.ByteBuffer` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashCodeByteBuffer:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c3968.  call temp:= `hasArray`(v6) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L1c396e.  v0:= temp;
  #L1c3970.  v1:= 1I;
  #L1c3972.  if v0 == 0 then goto L1c39a8;
  #L1c3976.  call temp:= `capacity`(v6) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L1c397c.  v0:= temp;
  #L1c397e.  call temp:= `array`(v6) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1c3984.  v2:= temp @kind object;
  #L1c3986.  call temp:= `arrayOffset`(v6) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1c398c.  v3:= temp;
  #L1c398e.  call temp:= `capacity`(v6) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L1c3994.  v6:= temp;
  #L1c3996.  call temp:= `e`(v0, v2, v3, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.e:(I[BII)I` @kind static;
  #L1c399c.  v6:= temp;
  #L1c399e.  if v6 != 0 then goto L1c39a4;
  #L1c39a2.  goto L1c39a6;
  #L1c39a4.  v1:= v6;
  #L1c39a6.  return v1;
  #L1c39a8.  call temp:= `capacity`(v6) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L1c39ae.  v0:= temp;
  #L1c39b0.  v2:= 4096I;
  #L1c39b4.  if v0 <= v2 then goto L1c39ba;
  #L1c39b8.  goto L1c39c2;
  #L1c39ba.  call temp:= `capacity`(v6) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L1c39c0.  v2:= temp;
  #L1c39c2.  v0:= new `byte`[v2];
  #L1c39c6.  call temp:= `duplicate`(v6) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1c39cc.  v3:= temp @kind object;
  #L1c39ce.  call temp:= `clear`(v3) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L1c39d4.  call temp:= `capacity`(v6) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L1c39da.  v6:= temp;
  #L1c39dc.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1c39e2.  v4:= temp;
  #L1c39e4.  if v4 <= 0 then goto L1c3a12;
  #L1c39e8.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1c39ee.  v4:= temp;
  #L1c39f0.  if v4 > v2 then goto L1c39fe;
  #L1c39f4.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1c39fa.  v4:= temp;
  #L1c39fc.  goto L1c3a00;
  #L1c39fe.  v4:= v2;
  #L1c3a00.  v5:= 0I;
  #L1c3a02.  call temp:= `get`(v3, v0, v5, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1c3a08.  call temp:= `e`(v6, v0, v5, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.e:(I[BII)I` @kind static;
  #L1c3a0e.  v6:= temp;
  #L1c3a10.  goto L1c39dc;
  #L1c3a12.  if v6 != 0 then goto L1c3a18;
  #L1c3a16.  goto L1c3a1a;
  #L1c3a18.  v1:= v6;
  #L1c3a1a.  return v1;
}
procedure `int` `hashCodeByteBuffer`(`java.util.List` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashCodeByteBuffer:(Ljava/util/List;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c3a2c.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c3a32.  v2:= temp @kind object;
  #L1c3a34.  v0:= 1I;
  #L1c3a36.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c3a3c.  v1:= temp;
  #L1c3a3e.  if v1 == 0 then goto L1c3a5e;
  #L1c3a42.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c3a48.  v1:= temp @kind object;
  #L1c3a4a.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L1c3a4e.  v0:= v0 * 31;
  #L1c3a52.  call temp:= `hashCodeByteBuffer`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashCodeByteBuffer:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L1c3a58.  v1:= temp;
  #L1c3a5a.  v0:= v0 + v1 @kind int;
  #L1c3a5c.  goto L1c3a36;
  #L1c3a5e.  return v0;
}
procedure `int` `hashEnum`(`com.google.crypto.tink.shaded.protobuf.Internal$EnumLite` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashEnum:(Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumLite;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c3a70.  call temp:= `getNumber`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumLite;.getNumber:()I` @kind interface;
  #L1c3a76.  v0:= temp;
  #L1c3a78.  return v0;
}
procedure `int` `hashEnumList`(`java.util.List` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashEnumList:(Ljava/util/List;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c3a8c.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c3a92.  v2:= temp @kind object;
  #L1c3a94.  v0:= 1I;
  #L1c3a96.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c3a9c.  v1:= temp;
  #L1c3a9e.  if v1 == 0 then goto L1c3abe;
  #L1c3aa2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c3aa8.  v1:= temp @kind object;
  #L1c3aaa.  v1:= (`com.google.crypto.tink.shaded.protobuf.Internal$EnumLite`) v1 @kind object;
  #L1c3aae.  v0:= v0 * 31;
  #L1c3ab2.  call temp:= `hashEnum`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashEnum:(Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumLite;)I` @kind static;
  #L1c3ab8.  v1:= temp;
  #L1c3aba.  v0:= v0 + v1 @kind int;
  #L1c3abc.  goto L1c3a96;
  #L1c3abe.  return v0;
}
procedure `int` `hashLong`(`long` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashLong:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c3ad0.  v0:= 32I;
  #L1c3ad4.  v0:= v2 ^>> v0 @kind long;
  #L1c3ad8.  v2:= v2 ^~ v0 @kind long;
  #L1c3ada.  v3:= (`int`) v2 @kind l2i;
  #L1c3adc.  return v3;
}
procedure `boolean` `isValidUtf8`(`com.google.crypto.tink.shaded.protobuf.ByteString` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.isValidUtf8:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c37cc.  call temp:= `isValidUtf8`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.isValidUtf8:()Z` @kind virtual;
  #L1c37d2.  v0:= temp;
  #L1c37d4.  return v0;
}
procedure `boolean` `isValidUtf8`(`byte`[] v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.isValidUtf8:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c37b0.  call temp:= `t`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.t:([B)Z` @kind static;
  #L1c37b6.  v0:= temp;
  #L1c37b8.  return v0;
}
procedure `java.lang.String` `stringDefaultValue`(`java.lang.String` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.stringDefaultValue:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c3b80.  v0:= new `java.lang.String`;
  #L1c3b84.  v1:= `@@com.google.crypto.tink.shaded.protobuf.Internal.b` @type ^`java.nio.charset.Charset` @kind object;
  #L1c3b88.  call temp:= `getBytes`(v2, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1c3b8e.  v2:= temp @kind object;
  #L1c3b90.  v1:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L1c3b94.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L1c3b9a.  return v0 @kind object;
}
procedure `byte`[] `toByteArray`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.toByteArray:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c3808.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L1c380c.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1c3812.  v1:= temp @kind object;
  #L1c3814.  return v1 @kind object;
}
procedure `java.lang.String` `toStringUtf8`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.toStringUtf8:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c3bac.  v0:= new `java.lang.String`;
  #L1c3bb0.  v1:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L1c3bb4.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L1c3bba.  return v0 @kind object;
}
