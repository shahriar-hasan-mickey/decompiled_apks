record `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v4 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1decd8.  v0:= constclass @type ^`com.google.crypto.tink.proto.AesCtrHmacStreamingKey` @kind object;
  #L1decdc.  v1:= 1I;
  #L1decde.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L1dece2.  v2:= new `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$a`;
  #L1dece6.  v3:= constclass @type ^`com.google.crypto.tink.StreamingAead` @kind object;
  #L1decea.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1decf0.  v3:= 0I;
  #L1decf2.  v1[v3]:= v2 @kind object;
  #L1decf6.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L1decfc.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `aes128CtrHmacSha2561MBTemplate`() @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.aes128CtrHmacSha2561MBTemplate:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1deac0.  v3:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1deac4.  v0:= 16I;
  #L1deac8.  v2:= 16I;
  #L1deacc.  v4:= 32I;
  #L1dead0.  v5:= 1048576I;
  #L1dead4.  v1:= v3 @kind object;
  #L1dead6.  call temp:= `c`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;ILcom/google/crypto/tink/proto/HashType;II)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1deadc.  v0:= temp @kind object;
  #L1deade.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `aes128CtrHmacSha2564KBTemplate`() @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.aes128CtrHmacSha2564KBTemplate:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1deaf0.  v3:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1deaf4.  v0:= 16I;
  #L1deaf8.  v2:= 16I;
  #L1deafc.  v4:= 32I;
  #L1deb00.  v5:= 4096I;
  #L1deb04.  v1:= v3 @kind object;
  #L1deb06.  call temp:= `c`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;ILcom/google/crypto/tink/proto/HashType;II)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1deb0c.  v0:= temp @kind object;
  #L1deb0e.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `aes256CtrHmacSha2561MBTemplate`() @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.aes256CtrHmacSha2561MBTemplate:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1deb20.  v3:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1deb24.  v0:= 32I;
  #L1deb28.  v2:= 32I;
  #L1deb2c.  v4:= 32I;
  #L1deb30.  v5:= 1048576I;
  #L1deb34.  v1:= v3 @kind object;
  #L1deb36.  call temp:= `c`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;ILcom/google/crypto/tink/proto/HashType;II)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1deb3c.  v0:= temp @kind object;
  #L1deb3e.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `aes256CtrHmacSha2564KBTemplate`() @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.aes256CtrHmacSha2564KBTemplate:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1deb50.  v3:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1deb54.  v0:= 32I;
  #L1deb58.  v2:= 32I;
  #L1deb5c.  v4:= 32I;
  #L1deb60.  v5:= 4096I;
  #L1deb64.  v1:= v3 @kind object;
  #L1deb66.  call temp:= `c`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;ILcom/google/crypto/tink/proto/HashType;II)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1deb6c.  v0:= temp @kind object;
  #L1deb6e.  return v0 @kind object;
}
procedure `void` `b`(`com.google.crypto.tink.proto.AesCtrHmacStreamingParams` v0 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.b:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1ded10.  call `e`(v0) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.e:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;)V` @kind static;
  #L1ded16.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `c`(`int` v1 , `com.google.crypto.tink.proto.HashType` v2 @kind object, `int` v3 , `com.google.crypto.tink.proto.HashType` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;ILcom/google/crypto/tink/proto/HashType;II)Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1deb80.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacParams;.newBuilder:()Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind static;
  #L1deb86.  v0:= temp @kind object;
  #L1deb88.  call temp:= `setHash`(v0, v4) @signature `Lcom/google/crypto/tink/proto/HmacParams$Builder;.setHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind virtual;
  #L1deb8e.  v4:= temp @kind object;
  #L1deb90.  call temp:= `setTagSize`(v4, v5) @signature `Lcom/google/crypto/tink/proto/HmacParams$Builder;.setTagSize:(I)Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind virtual;
  #L1deb96.  v4:= temp @kind object;
  #L1deb98.  call temp:= `build`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1deb9e.  v4:= temp @kind object;
  #L1deba0.  v4:= (`com.google.crypto.tink.proto.HmacParams`) v4 @kind object;
  #L1deba4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;` @kind static;
  #L1debaa.  v5:= temp @kind object;
  #L1debac.  call temp:= `setCiphertextSegmentSize`(v5, v6) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;.setCiphertextSegmentSize:(I)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;` @kind virtual;
  #L1debb2.  v5:= temp @kind object;
  #L1debb4.  call temp:= `setDerivedKeySize`(v5, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;.setDerivedKeySize:(I)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;` @kind virtual;
  #L1debba.  v3:= temp @kind object;
  #L1debbc.  call temp:= `setHkdfHashType`(v3, v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;.setHkdfHashType:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;` @kind virtual;
  #L1debc2.  v2:= temp @kind object;
  #L1debc4.  call temp:= `setHmacParams`(v2, v4) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;.setHmacParams:(Lcom/google/crypto/tink/proto/HmacParams;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams$Builder;` @kind virtual;
  #L1debca.  v2:= temp @kind object;
  #L1debcc.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1debd2.  v2:= temp @kind object;
  #L1debd4.  v2:= (`com.google.crypto.tink.proto.AesCtrHmacStreamingParams`) v2 @kind object;
  #L1debd8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat$Builder;` @kind static;
  #L1debde.  v3:= temp @kind object;
  #L1debe0.  call temp:= `setParams`(v3, v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat$Builder;` @kind virtual;
  #L1debe6.  v2:= temp @kind object;
  #L1debe8.  call temp:= `setKeySize`(v2, v1) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat$Builder;` @kind virtual;
  #L1debee.  v1:= temp @kind object;
  #L1debf0.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1debf6.  v1:= temp @kind object;
  #L1debf8.  v1:= (`com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat`) v1 @kind object;
  #L1debfc.  v2:= new `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager`;
  #L1dec00.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.<init>:()V` @kind direct;
  #L1dec06.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L1dec0c.  v2:= temp @kind object;
  #L1dec0e.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteArray:()[B` @kind virtual;
  #L1dec14.  v1:= temp @kind object;
  #L1dec16.  v3:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L1dec1a.  call temp:= `create`(v2, v1, v3) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1dec20.  v1:= temp @kind object;
  #L1dec22.  return v1 @kind object;
}
procedure `void` `d`(`com.google.crypto.tink.proto.HmacParams` v3 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.d:(Lcom/google/crypto/tink/proto/HmacParams;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ded4c.  call temp:= `getTagSize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getTagSize:()I` @kind virtual;
  #L1ded52.  v0:= temp;
  #L1ded54.  v1:= 10I;
  #L1ded58.  if v0 < v1 then goto L1dedf4;
  #L1ded5c.  v0:= `@@com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$c.a` @type ^`int`[] @kind object;
  #L1ded60.  call temp:= `getHash`(v3) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1ded66.  v1:= temp @kind object;
  #L1ded68.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1ded6e.  v1:= temp;
  #L1ded70.  v0:= v0[v1];
  #L1ded74.  v1:= 1I;
  #L1ded76.  v2:= "tag size too big" @kind object;
  #L1ded7a.  if v0 == v1 then goto L1dedd6;
  #L1ded7e.  v1:= 2I;
  #L1ded80.  if v0 == v1 then goto L1dedb8;
  #L1ded84.  v1:= 3I;
  #L1ded86.  if v0 != v1 then goto L1deda8;
  #L1ded8a.  call temp:= `getTagSize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getTagSize:()I` @kind virtual;
  #L1ded90.  v3:= temp;
  #L1ded92.  v0:= 64I;
  #L1ded96.  if v3 > v0 then goto L1ded9c;
  #L1ded9a.  goto L1dede6;
  #L1ded9c.  v3:= new `java.security.GeneralSecurityException`;
  #L1deda0.  call `<init>`(v3, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1deda6.  throw v3;
  #L1deda8.  v3:= new `java.security.GeneralSecurityException`;
  #L1dedac.  v0:= "unknown hash type" @kind object;
  #L1dedb0.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dedb6.  throw v3;
  #L1dedb8.  call temp:= `getTagSize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getTagSize:()I` @kind virtual;
  #L1dedbe.  v3:= temp;
  #L1dedc0.  v0:= 32I;
  #L1dedc4.  if v3 > v0 then goto L1dedca;
  #L1dedc8.  goto L1dede6;
  #L1dedca.  v3:= new `java.security.GeneralSecurityException`;
  #L1dedce.  call `<init>`(v3, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dedd4.  throw v3;
  #L1dedd6.  call temp:= `getTagSize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getTagSize:()I` @kind virtual;
  #L1deddc.  v3:= temp;
  #L1dedde.  v0:= 20I;
  #L1dede2.  if v3 > v0 then goto L1dede8;
  #L1dede6.  return @kind void;
  #L1dede8.  v3:= new `java.security.GeneralSecurityException`;
  #L1dedec.  call `<init>`(v3, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dedf2.  throw v3;
  #L1dedf4.  v3:= new `java.security.GeneralSecurityException`;
  #L1dedf8.  v0:= "tag size too small" @kind object;
  #L1dedfc.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dee02.  throw v3;
}
procedure `void` `e`(`com.google.crypto.tink.proto.AesCtrHmacStreamingParams` v2 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.e:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1deec4.  call temp:= `getDerivedKeySize`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.getDerivedKeySize:()I` @kind virtual;
  #L1deeca.  v0:= temp;
  #L1deecc.  call `validateAesKeySize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L1deed2.  call temp:= `getHkdfHashType`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.getHkdfHashType:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1deed8.  v0:= temp @kind object;
  #L1deeda.  v1:= `@@com.google.crypto.tink.proto.HashType.UNKNOWN_HASH` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1deede.  if v0 == v1 then goto L1def54;
  #L1deee2.  call temp:= `getHmacParams`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.getHmacParams:()Lcom/google/crypto/tink/proto/HmacParams;` @kind virtual;
  #L1deee8.  v0:= temp @kind object;
  #L1deeea.  call temp:= `getHash`(v0) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1deef0.  v0:= temp @kind object;
  #L1deef2.  if v0 == v1 then goto L1def44;
  #L1deef6.  call temp:= `getHmacParams`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.getHmacParams:()Lcom/google/crypto/tink/proto/HmacParams;` @kind virtual;
  #L1deefc.  v0:= temp @kind object;
  #L1deefe.  call `d`(v0) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.d:(Lcom/google/crypto/tink/proto/HmacParams;)V` @kind static;
  #L1def04.  call temp:= `getCiphertextSegmentSize`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.getCiphertextSegmentSize:()I` @kind virtual;
  #L1def0a.  v0:= temp;
  #L1def0c.  call temp:= `getDerivedKeySize`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.getDerivedKeySize:()I` @kind virtual;
  #L1def12.  v1:= temp;
  #L1def14.  call temp:= `getHmacParams`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.getHmacParams:()Lcom/google/crypto/tink/proto/HmacParams;` @kind virtual;
  #L1def1a.  v2:= temp @kind object;
  #L1def1c.  call temp:= `getTagSize`(v2) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getTagSize:()I` @kind virtual;
  #L1def22.  v2:= temp;
  #L1def24.  v1:= v1 + v2 @kind int;
  #L1def26.  v1:= v1 + 2;
  #L1def2a.  v1:= v1 + 7;
  #L1def2e.  if v0 < v1 then goto L1def34;
  #L1def32.  return @kind void;
  #L1def34.  v2:= new `java.security.GeneralSecurityException`;
  #L1def38.  v0:= "ciphertext_segment_size must be at least (derived_key_size + tag_size + NONCE_PREFIX_IN_BYTES + 2)" @kind object;
  #L1def3c.  call `<init>`(v2, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1def42.  throw v2;
  #L1def44.  v2:= new `java.security.GeneralSecurityException`;
  #L1def48.  v0:= "unknown HMAC hash type" @kind object;
  #L1def4c.  call `<init>`(v2, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1def52.  throw v2;
  #L1def54.  v2:= new `java.security.GeneralSecurityException`;
  #L1def58.  v0:= "unknown HKDF hash type" @kind object;
  #L1def5c.  call `<init>`(v2, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1def62.  throw v2;
}
procedure `void` `register`(`boolean` v1 ) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.register:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ded28.  v0:= new `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager`;
  #L1ded2c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.<init>:()V` @kind direct;
  #L1ded32.  call `registerKeyManager`(v0, v1) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L1ded38.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1decc0.  v0:= "type.googleapis.com/google.crypto.tink.AesCtrHmacStreamingKey" @kind object;
  #L1decc4.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1decac.  v0:= 0I;
  #L1decae.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dec34.  v0:= new `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b`;
  #L1dec38.  v1:= constclass @type ^`com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat` @kind object;
  #L1dec3c.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.<init>:(Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;Ljava/lang/Class;)V` @kind direct;
  #L1dec42.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dec78.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L1dec7c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.AesCtrHmacStreamingKey` `parseKey`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dec54.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L1dec5a.  v0:= temp @kind object;
  #L1dec5c.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;` @kind static;
  #L1dec62.  v2:= temp @kind object;
  #L1dec64.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dec90.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;` @kind virtual;
  #L1dec96.  v1:= temp @kind object;
  #L1dec98.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v2 @kind this, `com.google.crypto.tink.proto.AesCtrHmacStreamingKey` v3 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dee14.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;.getVersion:()I` @kind virtual;
  #L1dee1a.  v0:= temp;
  #L1dee1c.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.getVersion:()I` @kind virtual;
  #L1dee22.  v1:= temp;
  #L1dee24.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L1dee2a.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dee30.  v0:= temp @kind object;
  #L1dee32.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1dee38.  v0:= temp;
  #L1dee3a.  v1:= 16I;
  #L1dee3e.  if v0 < v1 then goto L1dee86;
  #L1dee42.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dee48.  v0:= temp @kind object;
  #L1dee4a.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1dee50.  v0:= temp;
  #L1dee52.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;.getParams:()Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;` @kind virtual;
  #L1dee58.  v1:= temp @kind object;
  #L1dee5a.  call temp:= `getDerivedKeySize`(v1) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;.getDerivedKeySize:()I` @kind virtual;
  #L1dee60.  v1:= temp;
  #L1dee62.  if v0 < v1 then goto L1dee76;
  #L1dee66.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;.getParams:()Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;` @kind virtual;
  #L1dee6c.  v3:= temp @kind object;
  #L1dee6e.  call `e`(v3) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.e:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;)V` @kind static;
  #L1dee74.  return @kind void;
  #L1dee76.  v3:= new `java.security.GeneralSecurityException`;
  #L1dee7a.  v0:= "key_value must have at least as many bits as derived keys" @kind object;
  #L1dee7e.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dee84.  throw v3;
  #L1dee86.  v3:= new `java.security.GeneralSecurityException`;
  #L1dee8a.  v0:= "key_value must have at least 16 bytes" @kind object;
  #L1dee8e.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dee94.  throw v3;
}
procedure `void` `validateKey`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1deea8.  v1:= (`com.google.crypto.tink.proto.AesCtrHmacStreamingKey`) v1 @kind object;
  #L1deeac.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;)V` @kind virtual;
  #L1deeb2.  return @kind void;
}
