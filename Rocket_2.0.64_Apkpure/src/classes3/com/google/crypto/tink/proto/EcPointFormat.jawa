record `com.google.crypto.tink.proto.EcPointFormat` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$EnumLite` @kind interface {
  `int` `com.google.crypto.tink.proto.EcPointFormat.a` @AccessFlag PRIVATE_FINAL;
}
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.UNRECOGNIZED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` `@@com.google.crypto.tink.proto.EcPointFormat.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat`[] `@@com.google.crypto.tink.proto.EcPointFormat.c` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L18f1f0.  v0:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L18f1f4.  v1:= "UNKNOWN_FORMAT" @kind object;
  #L18f1f8.  v2:= 0I;
  #L18f1fa.  call `<init>`(v0, v1, v2, v2) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L18f200.  `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v0 @kind object;
  #L18f204.  v1:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L18f208.  v3:= "UNCOMPRESSED" @kind object;
  #L18f20c.  v4:= 1I;
  #L18f20e.  call `<init>`(v1, v3, v4, v4) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L18f214.  `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v1 @kind object;
  #L18f218.  v3:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L18f21c.  v5:= "COMPRESSED" @kind object;
  #L18f220.  v6:= 2I;
  #L18f222.  call `<init>`(v3, v5, v6, v6) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L18f228.  `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v3 @kind object;
  #L18f22c.  v5:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L18f230.  v7:= "DO_NOT_USE_CRUNCHY_UNCOMPRESSED" @kind object;
  #L18f234.  v8:= 3I;
  #L18f236.  call `<init>`(v5, v7, v8, v8) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L18f23c.  `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v5 @kind object;
  #L18f240.  v7:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L18f244.  v9:= "UNRECOGNIZED" @kind object;
  #L18f248.  v10:= 4I;
  #L18f24a.  v11:= -1I;
  #L18f24c.  call `<init>`(v7, v9, v10, v11) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L18f252.  `@@com.google.crypto.tink.proto.EcPointFormat.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v7 @kind object;
  #L18f256.  v9:= 5I;
  #L18f258.  v9:= new `com.google.crypto.tink.proto.EcPointFormat`[v9];
  #L18f25c.  v9[v2]:= v0 @kind object;
  #L18f260.  v9[v4]:= v1 @kind object;
  #L18f264.  v9[v6]:= v3 @kind object;
  #L18f268.  v9[v8]:= v5 @kind object;
  #L18f26c.  v9[v10]:= v7 @kind object;
  #L18f270.  `@@com.google.crypto.tink.proto.EcPointFormat.c` @type ^`com.google.crypto.tink.proto.EcPointFormat`[] := v9 @kind object;
  #L18f274.  v0:= new `com.google.crypto.tink.proto.EcPointFormat$a`;
  #L18f278.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/proto/EcPointFormat$a;.<init>:()V` @kind direct;
  #L18f27e.  `@@com.google.crypto.tink.proto.EcPointFormat.b` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` := v0 @kind object;
  #L18f282.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.proto.EcPointFormat` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L18f294.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L18f29a.  v0.`com.google.crypto.tink.proto.EcPointFormat.a` @type ^`int` := v3;
  #L18f29e.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EcPointFormat` `forNumber`(`int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.forNumber:(I)Lcom/google/crypto/tink/proto/EcPointFormat;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18f0e8.  if v1 == 0 then goto L18f114;
  #L18f0ec.  v0:= 1I;
  #L18f0ee.  if v1 == v0 then goto L18f10e;
  #L18f0f2.  v0:= 2I;
  #L18f0f4.  if v1 == v0 then goto L18f108;
  #L18f0f8.  v0:= 3I;
  #L18f0fa.  if v1 == v0 then goto L18f102;
  #L18f0fe.  v1:= 0I;
  #L18f100.  return v1 @kind object;
  #L18f102.  v1:= `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L18f106.  return v1 @kind object;
  #L18f108.  v1:= `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L18f10c.  return v1 @kind object;
  #L18f10e.  v1:= `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L18f112.  return v1 @kind object;
  #L18f114.  v1:= `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L18f118.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` `internalGetValueMap`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.internalGetValueMap:()Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumLiteMap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18f190.  v0:= `@@com.google.crypto.tink.proto.EcPointFormat.b` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` @kind object;
  #L18f194.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` `internalGetVerifier`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.internalGetVerifier:()Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumVerifier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18f1a8.  v0:= `@@com.google.crypto.tink.proto.EcPointFormat$b.a` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` @kind object;
  #L18f1ac.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcPointFormat` `valueOf`(`int` v0 ) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.valueOf:(I)Lcom/google/crypto/tink/proto/EcPointFormat;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L18f12c.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.forNumber:(I)Lcom/google/crypto/tink/proto/EcPointFormat;` @kind static;
  #L18f132.  v0:= temp @kind object;
  #L18f134.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcPointFormat` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.valueOf:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/EcPointFormat;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18f148.  v0:= constclass @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L18f14c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L18f152.  v1:= temp @kind object;
  #L18f154.  v1:= (`com.google.crypto.tink.proto.EcPointFormat`) v1 @kind object;
  #L18f158.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcPointFormat`[] `values`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.values:()[Lcom/google/crypto/tink/proto/EcPointFormat;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18f16c.  v0:= `@@com.google.crypto.tink.proto.EcPointFormat.c` @type ^`com.google.crypto.tink.proto.EcPointFormat`[] @kind object;
  #L18f170.  call temp:= `clone`(v0) @signature `[Lcom/google/crypto/tink/proto/EcPointFormat;.clone:()Ljava/lang/Object;` @kind virtual;
  #L18f176.  v0:= temp @kind object;
  #L18f178.  v0:= (`com.google.crypto.tink.proto.EcPointFormat`[]) v0 @kind object;
  #L18f17c.  return v0 @kind object;
}
procedure `int` `getNumber`(`com.google.crypto.tink.proto.EcPointFormat` v2 @kind this) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.getNumber:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L18f1c0.  v0:= `@@com.google.crypto.tink.proto.EcPointFormat.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L18f1c4.  if v2 == v0 then goto L18f1ce;
  #L18f1c8.  v0:= v2.`com.google.crypto.tink.proto.EcPointFormat.a` @type ^`int`;
  #L18f1cc.  return v0;
  #L18f1ce.  v0:= new `java.lang.IllegalArgumentException`;
  #L18f1d2.  v1:= "Can't get the number of an unknown enum value." @kind object;
  #L18f1d6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18f1dc.  throw v0;
}
