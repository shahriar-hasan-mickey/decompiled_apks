record `com.google.crypto.tink.proto.EcdsaParams` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite` @kind class, `com.google.crypto.tink.proto.EcdsaParamsOrBuilder` @kind interface {
  `int` `com.google.crypto.tink.proto.EcdsaParams.curve_` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.proto.EcdsaParams.encoding_` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.proto.EcdsaParams.hashType_` @AccessFlag PRIVATE;
}
global `int` `@@com.google.crypto.tink.proto.EcdsaParams.CURVE_FIELD_NUMBER` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcdsaParams` `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.proto.EcdsaParams.ENCODING_FIELD_NUMBER` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.proto.EcdsaParams.HASH_TYPE_FIELD_NUMBER` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.shaded.protobuf.Parser` `@@com.google.crypto.tink.proto.EcdsaParams.PARSER` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L190108.  v0:= new `com.google.crypto.tink.proto.EcdsaParams`;
  #L19010c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.<init>:()V` @kind direct;
  #L190112.  `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` := v0 @kind object;
  #L190116.  v1:= constclass @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L19011a.  call `registerDefaultInstance`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.registerDefaultInstance:(Ljava/lang/Class;Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)V` @kind static;
  #L190120.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L190134.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.<init>:()V` @kind direct;
  #L19013a.  return @kind void;
}
procedure `void` `A`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.A:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L190224.  v0:= 0I;
  #L190226.  v1.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int` := v0;
  #L19022a.  return @kind void;
}
procedure `void` `B`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.B:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19023c.  v0:= 0I;
  #L19023e.  v1.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int` := v0;
  #L190242.  return @kind void;
}
procedure `void` `C`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.C:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L190254.  v0:= 0I;
  #L190256.  v1.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int` := v0;
  #L19025a.  return @kind void;
}
procedure `void` `D`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `com.google.crypto.tink.proto.EllipticCurveType` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.D:(Lcom/google/crypto/tink/proto/EllipticCurveType;)V` @AccessFlag PRIVATE {
    temp;

  #L19026c.  call temp:= `getNumber`(v1) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.getNumber:()I` @kind virtual;
  #L190272.  v1:= temp;
  #L190274.  v0.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int` := v1;
  #L190278.  return @kind void;
}
procedure `void` `E`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.E:(I)V` @AccessFlag PRIVATE {
    temp;

  #L19028c.  v0.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int` := v1;
  #L190290.  return @kind void;
}
procedure `void` `F`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `com.google.crypto.tink.proto.EcdsaSignatureEncoding` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.F:(Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)V` @AccessFlag PRIVATE {
    temp;

  #L1902a4.  call temp:= `getNumber`(v1) @signature `Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;.getNumber:()I` @kind virtual;
  #L1902aa.  v1:= temp;
  #L1902ac.  v0.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int` := v1;
  #L1902b0.  return @kind void;
}
procedure `void` `G`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.G:(I)V` @AccessFlag PRIVATE {
    temp;

  #L1902c4.  v0.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int` := v1;
  #L1902c8.  return @kind void;
}
procedure `void` `H`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `com.google.crypto.tink.proto.HashType` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.H:(Lcom/google/crypto/tink/proto/HashType;)V` @AccessFlag PRIVATE {
    temp;

  #L1902dc.  call temp:= `getNumber`(v1) @signature `Lcom/google/crypto/tink/proto/HashType;.getNumber:()I` @kind virtual;
  #L1902e2.  v1:= temp;
  #L1902e4.  v0.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int` := v1;
  #L1902e8.  return @kind void;
}
procedure `void` `I`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.I:(I)V` @AccessFlag PRIVATE {
    temp;

  #L1902fc.  v0.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int` := v1;
  #L190300.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getDefaultInstance:()Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fd20.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fd24.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams$Builder` `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.newBuilder:()Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fee8.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18feec.  call temp:= `createBuilder`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.createBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L18fef2.  v0:= temp @kind object;
  #L18fef4.  v0:= (`com.google.crypto.tink.proto.EcdsaParams$Builder`) v0 @kind object;
  #L18fef8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams$Builder` `newBuilder`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.newBuilder:(Lcom/google/crypto/tink/proto/EcdsaParams;)Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18ff0c.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18ff10.  call temp:= `createBuilder`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.createBuilder:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L18ff16.  v1:= temp @kind object;
  #L18ff18.  v1:= (`com.google.crypto.tink.proto.EcdsaParams$Builder`) v1 @kind object;
  #L18ff1c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseDelimitedFrom`(`java.io.InputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseDelimitedFrom:(Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fd38.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fd3c.  call temp:= `parseDelimitedFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseDelimitedFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fd42.  v1:= temp @kind object;
  #L18fd44.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fd48.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseDelimitedFrom`(`java.io.InputStream` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseDelimitedFrom:(Ljava/io/InputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fd5c.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fd60.  call temp:= `parseDelimitedFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseDelimitedFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/io/InputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fd66.  v1:= temp @kind object;
  #L18fd68.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fd6c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fdc8.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fdcc.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fdd2.  v1:= temp @kind object;
  #L18fdd4.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fdd8.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fdec.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fdf0.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fdf6.  v1:= temp @kind object;
  #L18fdf8.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fdfc.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fe10.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fe14.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fe1a.  v1:= temp @kind object;
  #L18fe1c.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fe20.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fe34.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fe38.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fe3e.  v1:= temp @kind object;
  #L18fe40.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fe44.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`java.io.InputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fe58.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fe5c.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fe62.  v1:= temp @kind object;
  #L18fe64.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fe68.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`java.io.InputStream` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Ljava/io/InputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fe7c.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fe80.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/io/InputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fe86.  v1:= temp @kind object;
  #L18fe88.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fe8c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fea0.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fea4.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18feaa.  v1:= temp @kind object;
  #L18feac.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18feb0.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`java.nio.ByteBuffer` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Ljava/nio/ByteBuffer;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fec4.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fec8.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/nio/ByteBuffer;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fece.  v1:= temp @kind object;
  #L18fed0.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fed4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:([B)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fd80.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fd84.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;[B)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fd8a.  v1:= temp @kind object;
  #L18fd8c.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fd90.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`byte`[] v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:([BLcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fda4.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fda8.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;[BLcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L18fdae.  v1:= temp @kind object;
  #L18fdb0.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L18fdb4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Parser` `parser`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parser:()Lcom/google/crypto/tink/shaded/protobuf/Parser;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18ffa8.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18ffac.  call temp:= `getParserForType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.getParserForType:()Lcom/google/crypto/tink/shaded/protobuf/Parser;` @kind virtual;
  #L18ffb2.  v0:= temp @kind object;
  #L18ffb4.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `q`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.q:()Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L18fd08.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L18fd0c.  return v0 @kind object;
}
procedure `void` `r`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.r:(Lcom/google/crypto/tink/proto/EcdsaParams;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L19014c.  call `I`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.I:(I)V` @kind direct;
  #L190152.  return @kind void;
}
procedure `void` `s`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `com.google.crypto.tink.proto.HashType` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.s:(Lcom/google/crypto/tink/proto/EcdsaParams;Lcom/google/crypto/tink/proto/HashType;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L190164.  call `H`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.H:(Lcom/google/crypto/tink/proto/HashType;)V` @kind direct;
  #L19016a.  return @kind void;
}
procedure `void` `t`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.t:(Lcom/google/crypto/tink/proto/EcdsaParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L19017c.  call `C`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.C:()V` @kind direct;
  #L190182.  return @kind void;
}
procedure `void` `u`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.u:(Lcom/google/crypto/tink/proto/EcdsaParams;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L190194.  call `E`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.E:(I)V` @kind direct;
  #L19019a.  return @kind void;
}
procedure `void` `v`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `com.google.crypto.tink.proto.EllipticCurveType` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.v:(Lcom/google/crypto/tink/proto/EcdsaParams;Lcom/google/crypto/tink/proto/EllipticCurveType;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1901ac.  call `D`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.D:(Lcom/google/crypto/tink/proto/EllipticCurveType;)V` @kind direct;
  #L1901b2.  return @kind void;
}
procedure `void` `w`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.w:(Lcom/google/crypto/tink/proto/EcdsaParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1901c4.  call `A`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.A:()V` @kind direct;
  #L1901ca.  return @kind void;
}
procedure `void` `x`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.x:(Lcom/google/crypto/tink/proto/EcdsaParams;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1901dc.  call `G`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.G:(I)V` @kind direct;
  #L1901e2.  return @kind void;
}
procedure `void` `y`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `com.google.crypto.tink.proto.EcdsaSignatureEncoding` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.y:(Lcom/google/crypto/tink/proto/EcdsaParams;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1901f4.  call `F`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.F:(Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)V` @kind direct;
  #L1901fa.  return @kind void;
}
procedure `void` `z`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.z:(Lcom/google/crypto/tink/proto/EcdsaParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L19020c.  call `B`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.B:()V` @kind direct;
  #L190212.  return @kind void;
}
procedure `java.lang.Object` `dynamicMethod`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.dynamicMethod:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$MethodToInvoke;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L190010.  v3:= `@@com.google.crypto.tink.proto.EcdsaParams$a.a` @type ^`int`[] @kind object;
  #L190014.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L19001a.  v2:= temp;
  #L19001c.  v2:= v3[v2];
  #L190020.  v3:= 1I;
  #L190022.  v4:= 0I;
  #L190024.  goto L1900c8;
  #L19002a.  v2:= new `java.lang.UnsupportedOperationException`;
  #L19002e.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L190034.  throw v2;
  #L190036.  return v4 @kind object;
  #L190038.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L19003e.  v2:= temp @kind object;
  #L190040.  return v2 @kind object;
  #L190042.  v2:= `@@com.google.crypto.tink.proto.EcdsaParams.PARSER` @type ^`com.google.crypto.tink.shaded.protobuf.Parser` @kind object;
  #L190046.  if v2 != 0 then goto L190074;
  #L19004a.  v3:= constclass @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L19004e.  @monitorenter v3
  #L190050.  v2:= `@@com.google.crypto.tink.proto.EcdsaParams.PARSER` @type ^`com.google.crypto.tink.shaded.protobuf.Parser` @kind object;
  #L190054.  if v2 != 0 then goto L19006a;
  #L190058.  v2:= new `com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$DefaultInstanceBasedParser`;
  #L19005c.  v4:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L190060.  call `<init>`(v2, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$DefaultInstanceBasedParser;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)V` @kind direct;
  #L190066.  `@@com.google.crypto.tink.proto.EcdsaParams.PARSER` @type ^`com.google.crypto.tink.shaded.protobuf.Parser` := v2 @kind object;
  #L19006a.  @monitorexit v3
  #L19006c.  goto L190074;
  #L19006e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L190070.  @monitorexit v3
  #L190072.  throw v2;
  #L190074.  return v2 @kind object;
  #L190076.  v2:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L19007a.  return v2 @kind object;
  #L19007c.  v2:= 3I;
  #L19007e.  v2:= new `java.lang.Object`[v2];
  #L190082.  v4:= 0I;
  #L190084.  v0:= "hashType_" @kind object;
  #L190088.  v2[v4]:= v0 @kind object;
  #L19008c.  v4:= "curve_" @kind object;
  #L190090.  v2[v3]:= v4 @kind object;
  #L190094.  v3:= 2I;
  #L190096.  v4:= "encoding_" @kind object;
  #L19009a.  v2[v3]:= v4 @kind object;
  #L19009e.  v3:= "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\f\u0003\f" @kind object;
  #L1900a2.  v4:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L1900a6.  call temp:= `newMessageInfo`(v4, v3, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.newMessageInfo:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1900ac.  v2:= temp @kind object;
  #L1900ae.  return v2 @kind object;
  #L1900b0.  v2:= new `com.google.crypto.tink.proto.EcdsaParams$Builder`;
  #L1900b4.  call `<init>`(v2, v4) @signature `Lcom/google/crypto/tink/proto/EcdsaParams$Builder;.<init>:(Lcom/google/crypto/tink/proto/EcdsaParams$a;)V` @kind direct;
  #L1900ba.  return v2 @kind object;
  #L1900bc.  v2:= new `com.google.crypto.tink.proto.EcdsaParams`;
  #L1900c0.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.<init>:()V` @kind direct;
  #L1900c6.  return v2 @kind object;
  #L1900c8.  switch v2
                  | 1 => goto L1900bc
                  | 2 => goto L1900b0
                  | 3 => goto L19007c
                  | 4 => goto L190076
                  | 5 => goto L190042
                  | 6 => goto L190038
                  | 7 => goto L190036
                  | else => goto L19002a;
  catch `java.lang.Throwable` @[L190050..L190072] goto L19006e;
}
procedure `com.google.crypto.tink.proto.EllipticCurveType` `getCurve`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getCurve:()Lcom/google/crypto/tink/proto/EllipticCurveType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18ff58.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int`;
  #L18ff5c.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.forNumber:(I)Lcom/google/crypto/tink/proto/EllipticCurveType;` @kind static;
  #L18ff62.  v0:= temp @kind object;
  #L18ff64.  if v0 != 0 then goto L18ff6c;
  #L18ff68.  v0:= `@@com.google.crypto.tink.proto.EllipticCurveType.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L18ff6c.  return v0 @kind object;
}
procedure `int` `getCurveValue`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getCurveValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18ffc8.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int`;
  #L18ffcc.  return v0;
}
procedure `com.google.crypto.tink.proto.EcdsaSignatureEncoding` `getEncoding`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getEncoding:()Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18ff30.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int`;
  #L18ff34.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;.forNumber:(I)Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;` @kind static;
  #L18ff3a.  v0:= temp @kind object;
  #L18ff3c.  if v0 != 0 then goto L18ff44;
  #L18ff40.  v0:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L18ff44.  return v0 @kind object;
}
procedure `int` `getEncodingValue`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getEncodingValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18ffe0.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int`;
  #L18ffe4.  return v0;
}
procedure `com.google.crypto.tink.proto.HashType` `getHashType`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getHashType:()Lcom/google/crypto/tink/proto/HashType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18ff80.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int`;
  #L18ff84.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/HashType;.forNumber:(I)Lcom/google/crypto/tink/proto/HashType;` @kind static;
  #L18ff8a.  v0:= temp @kind object;
  #L18ff8c.  if v0 != 0 then goto L18ff94;
  #L18ff90.  v0:= `@@com.google.crypto.tink.proto.HashType.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L18ff94.  return v0 @kind object;
}
procedure `int` `getHashTypeValue`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getHashTypeValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fff8.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int`;
  #L18fffc.  return v0;
}
