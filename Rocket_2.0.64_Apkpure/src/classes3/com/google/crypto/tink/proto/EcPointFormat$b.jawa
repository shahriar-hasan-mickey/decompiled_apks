record `com.google.crypto.tink.proto.EcPointFormat$b` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` @kind interface {
}
global `com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` `@@com.google.crypto.tink.proto.EcPointFormat$b.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L18f0b0.  v0:= new `com.google.crypto.tink.proto.EcPointFormat$b`;
  #L18f0b4.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/proto/EcPointFormat$b;.<init>:()V` @kind direct;
  #L18f0ba.  `@@com.google.crypto.tink.proto.EcPointFormat$b.a` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` := v0 @kind object;
  #L18f0be.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.proto.EcPointFormat$b` v0 @kind this) @signature `Lcom/google/crypto/tink/proto/EcPointFormat$b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L18f0d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L18f0d6.  return @kind void;
}
procedure `boolean` `isInRange`(`com.google.crypto.tink.proto.EcPointFormat$b` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcPointFormat$b;.isInRange:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L18f08c.  call temp:= `forNumber`(v1) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.forNumber:(I)Lcom/google/crypto/tink/proto/EcPointFormat;` @kind static;
  #L18f092.  v1:= temp @kind object;
  #L18f094.  if v1 == 0 then goto L18f09c;
  #L18f098.  v1:= 1I;
  #L18f09a.  goto L18f09e;
  #L18f09c.  v1:= 0I;
  #L18f09e.  return v1;
}
