record `com.google.crypto.tink.proto.AesCtrHmacStreamingParamsOrBuilder` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `com.google.crypto.tink.shaded.protobuf.MessageLiteOrBuilder` @kind interface {
}
procedure `int` `getCiphertextSegmentSize`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParamsOrBuilder;.getCiphertextSegmentSize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getDerivedKeySize`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParamsOrBuilder;.getDerivedKeySize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.proto.HashType` `getHkdfHashType`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParamsOrBuilder;.getHkdfHashType:()Lcom/google/crypto/tink/proto/HashType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getHkdfHashTypeValue`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParamsOrBuilder;.getHkdfHashTypeValue:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.proto.HmacParams` `getHmacParams`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParamsOrBuilder;.getHmacParams:()Lcom/google/crypto/tink/proto/HmacParams;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasHmacParams`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParamsOrBuilder;.hasHmacParams:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
