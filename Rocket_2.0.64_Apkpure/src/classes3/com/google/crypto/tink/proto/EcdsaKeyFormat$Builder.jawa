record `com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder` @kind class, `com.google.crypto.tink.proto.EcdsaKeyFormatOrBuilder` @kind interface {
}
procedure `void` `<init>`(`com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L18f4b8.  call temp:= `q`() @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.q:()Lcom/google/crypto/tink/proto/EcdsaKeyFormat;` @kind static;
  #L18f4be.  v0:= temp @kind object;
  #L18f4c0.  call `<init>`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)V` @kind direct;
  #L18f4c6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` v0 @kind this, `com.google.crypto.tink.proto.EcdsaKeyFormat$a` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.<init>:(Lcom/google/crypto/tink/proto/EcdsaKeyFormat$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L18f4d8.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.<init>:()V` @kind direct;
  #L18f4de.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` `clearParams`(`com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.clearParams:()Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f3e8.  call `copyOnWrite`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.copyOnWrite:()V` @kind virtual;
  #L18f3ee.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder.instance` @type ^`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite` @kind object;
  #L18f3f2.  v0:= (`com.google.crypto.tink.proto.EcdsaKeyFormat`) v0 @kind object;
  #L18f3f6.  call `t`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.t:(Lcom/google/crypto/tink/proto/EcdsaKeyFormat;)V` @kind static;
  #L18f3fc.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `getParams`(`com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.getParams:()Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f494.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder.instance` @type ^`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite` @kind object;
  #L18f498.  v0:= (`com.google.crypto.tink.proto.EcdsaKeyFormat`) v0 @kind object;
  #L18f49c.  call temp:= `getParams`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/EcdsaParams;` @kind virtual;
  #L18f4a2.  v0:= temp @kind object;
  #L18f4a4.  return v0 @kind object;
}
procedure `boolean` `hasParams`(`com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.hasParams:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f3c4.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder.instance` @type ^`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite` @kind object;
  #L18f3c8.  v0:= (`com.google.crypto.tink.proto.EcdsaKeyFormat`) v0 @kind object;
  #L18f3cc.  call temp:= `hasParams`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.hasParams:()Z` @kind virtual;
  #L18f3d2.  v0:= temp;
  #L18f3d4.  return v0;
}
procedure `com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` `mergeParams`(`com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` v1 @kind this, `com.google.crypto.tink.proto.EcdsaParams` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.mergeParams:(Lcom/google/crypto/tink/proto/EcdsaParams;)Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f410.  call `copyOnWrite`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.copyOnWrite:()V` @kind virtual;
  #L18f416.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder.instance` @type ^`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite` @kind object;
  #L18f41a.  v0:= (`com.google.crypto.tink.proto.EcdsaKeyFormat`) v0 @kind object;
  #L18f41e.  call `s`(v0, v2) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.s:(Lcom/google/crypto/tink/proto/EcdsaKeyFormat;Lcom/google/crypto/tink/proto/EcdsaParams;)V` @kind static;
  #L18f424.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` `setParams`(`com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` v1 @kind this, `com.google.crypto.tink.proto.EcdsaParams$Builder` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/EcdsaParams$Builder;)Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f438.  call `copyOnWrite`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.copyOnWrite:()V` @kind virtual;
  #L18f43e.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder.instance` @type ^`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite` @kind object;
  #L18f442.  v0:= (`com.google.crypto.tink.proto.EcdsaKeyFormat`) v0 @kind object;
  #L18f446.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L18f44c.  v2:= temp @kind object;
  #L18f44e.  v2:= (`com.google.crypto.tink.proto.EcdsaParams`) v2 @kind object;
  #L18f452.  call `r`(v0, v2) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.r:(Lcom/google/crypto/tink/proto/EcdsaKeyFormat;Lcom/google/crypto/tink/proto/EcdsaParams;)V` @kind static;
  #L18f458.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` `setParams`(`com.google.crypto.tink.proto.EcdsaKeyFormat$Builder` v1 @kind this, `com.google.crypto.tink.proto.EcdsaParams` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/EcdsaParams;)Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f46c.  call `copyOnWrite`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.copyOnWrite:()V` @kind virtual;
  #L18f472.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder.instance` @type ^`com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite` @kind object;
  #L18f476.  v0:= (`com.google.crypto.tink.proto.EcdsaKeyFormat`) v0 @kind object;
  #L18f47a.  call `r`(v0, v2) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.r:(Lcom/google/crypto/tink/proto/EcdsaKeyFormat;Lcom/google/crypto/tink/proto/EcdsaParams;)V` @kind static;
  #L18f480.  return v1 @kind object;
}
