record `com.google.crypto.tink.proto.EllipticCurveType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$EnumLite` @kind interface {
  `int` `com.google.crypto.tink.proto.EllipticCurveType.a` @AccessFlag PRIVATE_FINAL;
}
global `com.google.crypto.tink.proto.EllipticCurveType` `@@com.google.crypto.tink.proto.EllipticCurveType.CURVE25519` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EllipticCurveType.CURVE25519_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EllipticCurveType` `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EllipticCurveType` `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P384` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P384_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EllipticCurveType` `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P521` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P521_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EllipticCurveType` `@@com.google.crypto.tink.proto.EllipticCurveType.UNKNOWN_CURVE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EllipticCurveType.UNKNOWN_CURVE_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EllipticCurveType` `@@com.google.crypto.tink.proto.EllipticCurveType.UNRECOGNIZED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` `@@com.google.crypto.tink.proto.EllipticCurveType.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.crypto.tink.proto.EllipticCurveType`[] `@@com.google.crypto.tink.proto.EllipticCurveType.c` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1962bc.  v0:= new `com.google.crypto.tink.proto.EllipticCurveType`;
  #L1962c0.  v1:= "UNKNOWN_CURVE" @kind object;
  #L1962c4.  v2:= 0I;
  #L1962c6.  call `<init>`(v0, v1, v2, v2) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1962cc.  `@@com.google.crypto.tink.proto.EllipticCurveType.UNKNOWN_CURVE` @type ^`com.google.crypto.tink.proto.EllipticCurveType` := v0 @kind object;
  #L1962d0.  v1:= new `com.google.crypto.tink.proto.EllipticCurveType`;
  #L1962d4.  v3:= "NIST_P256" @kind object;
  #L1962d8.  v4:= 1I;
  #L1962da.  v5:= 2I;
  #L1962dc.  call `<init>`(v1, v3, v4, v5) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1962e2.  `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` := v1 @kind object;
  #L1962e6.  v3:= new `com.google.crypto.tink.proto.EllipticCurveType`;
  #L1962ea.  v6:= "NIST_P384" @kind object;
  #L1962ee.  v7:= 3I;
  #L1962f0.  call `<init>`(v3, v6, v5, v7) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1962f6.  `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P384` @type ^`com.google.crypto.tink.proto.EllipticCurveType` := v3 @kind object;
  #L1962fa.  v6:= new `com.google.crypto.tink.proto.EllipticCurveType`;
  #L1962fe.  v8:= "NIST_P521" @kind object;
  #L196302.  v9:= 4I;
  #L196304.  call `<init>`(v6, v8, v7, v9) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L19630a.  `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P521` @type ^`com.google.crypto.tink.proto.EllipticCurveType` := v6 @kind object;
  #L19630e.  v8:= new `com.google.crypto.tink.proto.EllipticCurveType`;
  #L196312.  v10:= "CURVE25519" @kind object;
  #L196316.  v11:= 5I;
  #L196318.  call `<init>`(v8, v10, v9, v11) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L19631e.  `@@com.google.crypto.tink.proto.EllipticCurveType.CURVE25519` @type ^`com.google.crypto.tink.proto.EllipticCurveType` := v8 @kind object;
  #L196322.  v10:= new `com.google.crypto.tink.proto.EllipticCurveType`;
  #L196326.  v12:= "UNRECOGNIZED" @kind object;
  #L19632a.  v13:= -1I;
  #L19632c.  call `<init>`(v10, v12, v11, v13) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L196332.  `@@com.google.crypto.tink.proto.EllipticCurveType.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EllipticCurveType` := v10 @kind object;
  #L196336.  v12:= 6I;
  #L196338.  v12:= new `com.google.crypto.tink.proto.EllipticCurveType`[v12];
  #L19633c.  v12[v2]:= v0 @kind object;
  #L196340.  v12[v4]:= v1 @kind object;
  #L196344.  v12[v5]:= v3 @kind object;
  #L196348.  v12[v7]:= v6 @kind object;
  #L19634c.  v12[v9]:= v8 @kind object;
  #L196350.  v12[v11]:= v10 @kind object;
  #L196354.  `@@com.google.crypto.tink.proto.EllipticCurveType.c` @type ^`com.google.crypto.tink.proto.EllipticCurveType`[] := v12 @kind object;
  #L196358.  v0:= new `com.google.crypto.tink.proto.EllipticCurveType$a`;
  #L19635c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType$a;.<init>:()V` @kind direct;
  #L196362.  `@@com.google.crypto.tink.proto.EllipticCurveType.b` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` := v0 @kind object;
  #L196366.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.proto.EllipticCurveType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L196378.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L19637e.  v0.`com.google.crypto.tink.proto.EllipticCurveType.a` @type ^`int` := v3;
  #L196382.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EllipticCurveType` `forNumber`(`int` v1 ) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.forNumber:(I)Lcom/google/crypto/tink/proto/EllipticCurveType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1961a8.  if v1 == 0 then goto L1961e0;
  #L1961ac.  v0:= 2I;
  #L1961ae.  if v1 == v0 then goto L1961da;
  #L1961b2.  v0:= 3I;
  #L1961b4.  if v1 == v0 then goto L1961d4;
  #L1961b8.  v0:= 4I;
  #L1961ba.  if v1 == v0 then goto L1961ce;
  #L1961be.  v0:= 5I;
  #L1961c0.  if v1 == v0 then goto L1961c8;
  #L1961c4.  v1:= 0I;
  #L1961c6.  return v1 @kind object;
  #L1961c8.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.CURVE25519` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L1961cc.  return v1 @kind object;
  #L1961ce.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P521` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L1961d2.  return v1 @kind object;
  #L1961d4.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P384` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L1961d8.  return v1 @kind object;
  #L1961da.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L1961de.  return v1 @kind object;
  #L1961e0.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.UNKNOWN_CURVE` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L1961e4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` `internalGetValueMap`() @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.internalGetValueMap:()Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumLiteMap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19625c.  v0:= `@@com.google.crypto.tink.proto.EllipticCurveType.b` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` @kind object;
  #L196260.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` `internalGetVerifier`() @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.internalGetVerifier:()Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumVerifier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L196274.  v0:= `@@com.google.crypto.tink.proto.EllipticCurveType$b.a` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` @kind object;
  #L196278.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EllipticCurveType` `valueOf`(`int` v0 ) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.valueOf:(I)Lcom/google/crypto/tink/proto/EllipticCurveType;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1961f8.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.forNumber:(I)Lcom/google/crypto/tink/proto/EllipticCurveType;` @kind static;
  #L1961fe.  v0:= temp @kind object;
  #L196200.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EllipticCurveType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.valueOf:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/EllipticCurveType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L196214.  v0:= constclass @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L196218.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L19621e.  v1:= temp @kind object;
  #L196220.  v1:= (`com.google.crypto.tink.proto.EllipticCurveType`) v1 @kind object;
  #L196224.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EllipticCurveType`[] `values`() @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.values:()[Lcom/google/crypto/tink/proto/EllipticCurveType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L196238.  v0:= `@@com.google.crypto.tink.proto.EllipticCurveType.c` @type ^`com.google.crypto.tink.proto.EllipticCurveType`[] @kind object;
  #L19623c.  call temp:= `clone`(v0) @signature `[Lcom/google/crypto/tink/proto/EllipticCurveType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L196242.  v0:= temp @kind object;
  #L196244.  v0:= (`com.google.crypto.tink.proto.EllipticCurveType`[]) v0 @kind object;
  #L196248.  return v0 @kind object;
}
procedure `int` `getNumber`(`com.google.crypto.tink.proto.EllipticCurveType` v2 @kind this) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.getNumber:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19628c.  v0:= `@@com.google.crypto.tink.proto.EllipticCurveType.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L196290.  if v2 == v0 then goto L19629a;
  #L196294.  v0:= v2.`com.google.crypto.tink.proto.EllipticCurveType.a` @type ^`int`;
  #L196298.  return v0;
  #L19629a.  v0:= new `java.lang.IllegalArgumentException`;
  #L19629e.  v1:= "Can't get the number of an unknown enum value." @kind object;
  #L1962a2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1962a8.  throw v0;
}
