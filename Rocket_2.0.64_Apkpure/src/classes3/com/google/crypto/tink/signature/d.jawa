record `com.google.crypto.tink.signature.d` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.d` v4 @kind this) @signature `Lcom/google/crypto/tink/signature/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dcb0c.  v0:= constclass @type ^`com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey` @kind object;
  #L1dcb10.  v1:= 1I;
  #L1dcb12.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L1dcb16.  v2:= new `com.google.crypto.tink.signature.d$a`;
  #L1dcb1a.  v3:= constclass @type ^`com.google.crypto.tink.PublicKeyVerify` @kind object;
  #L1dcb1e.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/signature/d$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1dcb24.  v3:= 0I;
  #L1dcb26.  v1[v3]:= v2 @kind object;
  #L1dcb2a.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L1dcb30.  return @kind void;
}
procedure `com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey` `b`(`com.google.crypto.tink.signature.d` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/d;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcaa0.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L1dcaa6.  v0:= temp @kind object;
  #L1dcaa8.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind static;
  #L1dcaae.  v2:= temp @kind object;
  #L1dcab0.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.signature.d` v3 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/d;.c:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1dcb44.  call temp:= `getVersion`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getVersion:()I` @kind virtual;
  #L1dcb4a.  v0:= temp;
  #L1dcb4c.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/signature/d;.getVersion:()I` @kind virtual;
  #L1dcb52.  v1:= temp;
  #L1dcb54.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L1dcb5a.  v0:= new `java.math.BigInteger`;
  #L1dcb5e.  call temp:= `getN`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcb64.  v1:= temp @kind object;
  #L1dcb66.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcb6c.  v1:= temp @kind object;
  #L1dcb6e.  v2:= 1I;
  #L1dcb70.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcb76.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L1dcb7c.  v0:= temp;
  #L1dcb7e.  call `validateRsaModulusSize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L1dcb84.  v0:= new `java.math.BigInteger`;
  #L1dcb88.  call temp:= `getE`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcb8e.  v1:= temp @kind object;
  #L1dcb90.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcb96.  v1:= temp @kind object;
  #L1dcb98.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcb9e.  call `validateRsaPublicExponent`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaPublicExponent:(Ljava/math/BigInteger;)V` @kind static;
  #L1dcba4.  call temp:= `getParams`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L1dcbaa.  v4:= temp @kind object;
  #L1dcbac.  call `e`(v4) @signature `Lcom/google/crypto/tink/signature/f;.e:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)V` @kind static;
  #L1dcbb2.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.signature.d` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/d;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcaf4.  v0:= "type.googleapis.com/google.crypto.tink.RsaSsaPkcs1PublicKey" @kind object;
  #L1dcaf8.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.signature.d` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/d;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcae0.  v0:= 0I;
  #L1dcae2.  return v0;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.signature.d` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/d;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dca88.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PUBLIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L1dca8c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.signature.d` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/d;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dcac4.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/d;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dcaca.  v1:= temp @kind object;
  #L1dcacc.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.signature.d` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/d;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dcbc4.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey`) v1 @kind object;
  #L1dcbc8.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/signature/d;.c:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;)V` @kind virtual;
  #L1dcbce.  return @kind void;
}
