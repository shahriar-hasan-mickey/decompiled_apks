record `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v0 @kind this, `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.<init>:(Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dd0cc.  v0.`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` := v1 @kind object;
  #L1dd0d0.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1dd0d6.  return @kind void;
}
procedure `com.google.crypto.tink.proto.RsaSsaPssPrivateKey` `a`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v6 @kind this, `com.google.crypto.tink.proto.RsaSsaPssKeyFormat` v7 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.a:(Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1dce88.  call temp:= `getParams`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPssParams;` @kind virtual;
  #L1dce8e.  v0:= temp @kind object;
  #L1dce90.  call temp:= `getModulusSizeInBits`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L1dce96.  v1:= temp;
  #L1dce98.  call `validateRsaModulusSize`(v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L1dce9e.  call temp:= `getSigHash`(v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getSigHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dcea4.  v1:= temp @kind object;
  #L1dcea6.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dceac.  v1:= temp @kind object;
  #L1dceae.  call `validateSignatureHash`(v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateSignatureHash:(Lcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind static;
  #L1dceb4.  v1:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_PAIR_GENERATOR` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1dceb8.  v2:= "RSA" @kind object;
  #L1dcebc.  call temp:= `getInstance`(v1, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1dcec2.  v1:= temp @kind object;
  #L1dcec4.  v1:= (`java.security.KeyPairGenerator`) v1 @kind object;
  #L1dcec8.  v2:= new `java.security.spec.RSAKeyGenParameterSpec`;
  #L1dcecc.  call temp:= `getModulusSizeInBits`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L1dced2.  v3:= temp;
  #L1dced4.  v4:= new `java.math.BigInteger`;
  #L1dced8.  call temp:= `getPublicExponent`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getPublicExponent:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcede.  v7:= temp @kind object;
  #L1dcee0.  call temp:= `toByteArray`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcee6.  v7:= temp @kind object;
  #L1dcee8.  v5:= 1I;
  #L1dceea.  call `<init>`(v4, v5, v7) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcef0.  call `<init>`(v2, v3, v4) @signature `Ljava/security/spec/RSAKeyGenParameterSpec;.<init>:(ILjava/math/BigInteger;)V` @kind direct;
  #L1dcef6.  call `initialize`(v1, v2) @signature `Ljava/security/KeyPairGenerator;.initialize:(Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L1dcefc.  call temp:= `generateKeyPair`(v1) @signature `Ljava/security/KeyPairGenerator;.generateKeyPair:()Ljava/security/KeyPair;` @kind virtual;
  #L1dcf02.  v7:= temp @kind object;
  #L1dcf04.  call temp:= `getPublic`(v7) @signature `Ljava/security/KeyPair;.getPublic:()Ljava/security/PublicKey;` @kind virtual;
  #L1dcf0a.  v1:= temp @kind object;
  #L1dcf0c.  v1:= (`java.security.interfaces.RSAPublicKey`) v1 @kind object;
  #L1dcf10.  call temp:= `getPrivate`(v7) @signature `Ljava/security/KeyPair;.getPrivate:()Ljava/security/PrivateKey;` @kind virtual;
  #L1dcf16.  v7:= temp @kind object;
  #L1dcf18.  v7:= (`java.security.interfaces.RSAPrivateCrtKey`) v7 @kind object;
  #L1dcf1c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind static;
  #L1dcf22.  v2:= temp @kind object;
  #L1dcf24.  v3:= v6.`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` @kind object;
  #L1dcf28.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.getVersion:()I` @kind virtual;
  #L1dcf2e.  v3:= temp;
  #L1dcf30.  call temp:= `setVersion`(v2, v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind virtual;
  #L1dcf36.  v2:= temp @kind object;
  #L1dcf38.  call temp:= `setParams`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPssParams;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind virtual;
  #L1dcf3e.  v0:= temp @kind object;
  #L1dcf40.  call temp:= `getPublicExponent`(v1) @signature `Ljava/security/interfaces/RSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;` @kind interface;
  #L1dcf46.  v2:= temp @kind object;
  #L1dcf48.  call temp:= `toByteArray`(v2) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dcf4e.  v2:= temp @kind object;
  #L1dcf50.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dcf56.  v2:= temp @kind object;
  #L1dcf58.  call temp:= `setE`(v0, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;.setE:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind virtual;
  #L1dcf5e.  v0:= temp @kind object;
  #L1dcf60.  call temp:= `getModulus`(v1) @signature `Ljava/security/interfaces/RSAPublicKey;.getModulus:()Ljava/math/BigInteger;` @kind interface;
  #L1dcf66.  v1:= temp @kind object;
  #L1dcf68.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dcf6e.  v1:= temp @kind object;
  #L1dcf70.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dcf76.  v1:= temp @kind object;
  #L1dcf78.  call temp:= `setN`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;.setN:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind virtual;
  #L1dcf7e.  v0:= temp @kind object;
  #L1dcf80.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dcf86.  v0:= temp @kind object;
  #L1dcf88.  v0:= (`com.google.crypto.tink.proto.RsaSsaPssPublicKey`) v0 @kind object;
  #L1dcf8c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind static;
  #L1dcf92.  v1:= temp @kind object;
  #L1dcf94.  v2:= v6.`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` @kind object;
  #L1dcf98.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.getVersion:()I` @kind virtual;
  #L1dcf9e.  v2:= temp;
  #L1dcfa0.  call temp:= `setVersion`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L1dcfa6.  v1:= temp @kind object;
  #L1dcfa8.  call temp:= `setPublicKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setPublicKey:(Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L1dcfae.  v0:= temp @kind object;
  #L1dcfb0.  call temp:= `getPrivateExponent`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;` @kind interface;
  #L1dcfb6.  v1:= temp @kind object;
  #L1dcfb8.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dcfbe.  v1:= temp @kind object;
  #L1dcfc0.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dcfc6.  v1:= temp @kind object;
  #L1dcfc8.  call temp:= `setD`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setD:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L1dcfce.  v0:= temp @kind object;
  #L1dcfd0.  call temp:= `getPrimeP`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;` @kind interface;
  #L1dcfd6.  v1:= temp @kind object;
  #L1dcfd8.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dcfde.  v1:= temp @kind object;
  #L1dcfe0.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dcfe6.  v1:= temp @kind object;
  #L1dcfe8.  call temp:= `setP`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setP:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L1dcfee.  v0:= temp @kind object;
  #L1dcff0.  call temp:= `getPrimeQ`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;` @kind interface;
  #L1dcff6.  v1:= temp @kind object;
  #L1dcff8.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dcffe.  v1:= temp @kind object;
  #L1dd000.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dd006.  v1:= temp @kind object;
  #L1dd008.  call temp:= `setQ`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setQ:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L1dd00e.  v0:= temp @kind object;
  #L1dd010.  call temp:= `getPrimeExponentP`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;` @kind interface;
  #L1dd016.  v1:= temp @kind object;
  #L1dd018.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dd01e.  v1:= temp @kind object;
  #L1dd020.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dd026.  v1:= temp @kind object;
  #L1dd028.  call temp:= `setDp`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setDp:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L1dd02e.  v0:= temp @kind object;
  #L1dd030.  call temp:= `getPrimeExponentQ`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;` @kind interface;
  #L1dd036.  v1:= temp @kind object;
  #L1dd038.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dd03e.  v1:= temp @kind object;
  #L1dd040.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dd046.  v1:= temp @kind object;
  #L1dd048.  call temp:= `setDq`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setDq:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L1dd04e.  v0:= temp @kind object;
  #L1dd050.  call temp:= `getCrtCoefficient`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;` @kind interface;
  #L1dd056.  v7:= temp @kind object;
  #L1dd058.  call temp:= `toByteArray`(v7) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dd05e.  v7:= temp @kind object;
  #L1dd060.  call temp:= `copyFrom`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dd066.  v7:= temp @kind object;
  #L1dd068.  call temp:= `setCrt`(v0, v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setCrt:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L1dd06e.  v7:= temp @kind object;
  #L1dd070.  call temp:= `build`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dd076.  v7:= temp @kind object;
  #L1dd078.  v7:= (`com.google.crypto.tink.proto.RsaSsaPssPrivateKey`) v7 @kind object;
  #L1dd07c.  return v7 @kind object;
}
procedure `com.google.crypto.tink.proto.RsaSsaPssKeyFormat` `b`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dce64.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L1dce6a.  v0:= temp @kind object;
  #L1dce6c.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;` @kind static;
  #L1dce72.  v2:= temp @kind object;
  #L1dce74.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.RsaSsaPssKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.c:(Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dd0e8.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPssParams;` @kind virtual;
  #L1dd0ee.  v0:= temp @kind object;
  #L1dd0f0.  call `f`(v0) @signature `Lcom/google/crypto/tink/signature/f;.f:(Lcom/google/crypto/tink/proto/RsaSsaPssParams;)V` @kind static;
  #L1dd0f6.  call temp:= `getModulusSizeInBits`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L1dd0fc.  v0:= temp;
  #L1dd0fe.  call `validateRsaModulusSize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L1dd104.  v0:= new `java.math.BigInteger`;
  #L1dd108.  call temp:= `getPublicExponent`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getPublicExponent:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dd10e.  v3:= temp @kind object;
  #L1dd110.  call temp:= `toByteArray`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dd116.  v3:= temp @kind object;
  #L1dd118.  v1:= 1I;
  #L1dd11a.  call `<init>`(v0, v1, v3) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dd120.  call `validateRsaPublicExponent`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaPublicExponent:(Ljava/math/BigInteger;)V` @kind static;
  #L1dd126.  return @kind void;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dd0ac.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssKeyFormat`) v1 @kind object;
  #L1dd0b0.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.a:(Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;` @kind virtual;
  #L1dd0b6.  v1:= temp @kind object;
  #L1dd0b8.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dd090.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;` @kind virtual;
  #L1dd096.  v1:= temp @kind object;
  #L1dd098.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dd138.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssKeyFormat`) v1 @kind object;
  #L1dd13c.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.c:(Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;)V` @kind virtual;
  #L1dd142.  return @kind void;
}
