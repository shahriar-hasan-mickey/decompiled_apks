record `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dc358.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1dc35e.  return @kind void;
}
procedure `com.google.crypto.tink.PublicKeySign` `b`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$a` v12 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey` v13 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$a;.b:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;)Lcom/google/crypto/tink/PublicKeySign;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1dc10c.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1dc110.  v1:= "RSA" @kind object;
  #L1dc114.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1dc11a.  v0:= temp @kind object;
  #L1dc11c.  v0:= (`java.security.KeyFactory`) v0 @kind object;
  #L1dc120.  v10:= new `java.security.spec.RSAPrivateCrtKeySpec`;
  #L1dc124.  v2:= new `java.math.BigInteger`;
  #L1dc128.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc12e.  v1:= temp @kind object;
  #L1dc130.  call temp:= `getN`(v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc136.  v1:= temp @kind object;
  #L1dc138.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc13e.  v1:= temp @kind object;
  #L1dc140.  v11:= 1I;
  #L1dc142.  call `<init>`(v2, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc148.  v3:= new `java.math.BigInteger`;
  #L1dc14c.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc152.  v1:= temp @kind object;
  #L1dc154.  call temp:= `getE`(v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc15a.  v1:= temp @kind object;
  #L1dc15c.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc162.  v1:= temp @kind object;
  #L1dc164.  call `<init>`(v3, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc16a.  v4:= new `java.math.BigInteger`;
  #L1dc16e.  call temp:= `getD`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getD:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc174.  v1:= temp @kind object;
  #L1dc176.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc17c.  v1:= temp @kind object;
  #L1dc17e.  call `<init>`(v4, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc184.  v5:= new `java.math.BigInteger`;
  #L1dc188.  call temp:= `getP`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getP:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc18e.  v1:= temp @kind object;
  #L1dc190.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc196.  v1:= temp @kind object;
  #L1dc198.  call `<init>`(v5, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc19e.  v6:= new `java.math.BigInteger`;
  #L1dc1a2.  call temp:= `getQ`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getQ:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc1a8.  v1:= temp @kind object;
  #L1dc1aa.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc1b0.  v1:= temp @kind object;
  #L1dc1b2.  call `<init>`(v6, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc1b8.  v7:= new `java.math.BigInteger`;
  #L1dc1bc.  call temp:= `getDp`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getDp:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc1c2.  v1:= temp @kind object;
  #L1dc1c4.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc1ca.  v1:= temp @kind object;
  #L1dc1cc.  call `<init>`(v7, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc1d2.  v8:= new `java.math.BigInteger`;
  #L1dc1d6.  call temp:= `getDq`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getDq:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc1dc.  v1:= temp @kind object;
  #L1dc1de.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc1e4.  v1:= temp @kind object;
  #L1dc1e6.  call `<init>`(v8, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc1ec.  v9:= new `java.math.BigInteger`;
  #L1dc1f0.  call temp:= `getCrt`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getCrt:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc1f6.  v1:= temp @kind object;
  #L1dc1f8.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc1fe.  v1:= temp @kind object;
  #L1dc200.  call `<init>`(v9, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc206.  v1:= v10 @kind object;
  #L1dc208.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ljava/security/spec/RSAPrivateCrtKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L1dc20e.  call temp:= `generatePrivate`(v0, v10) @signature `Ljava/security/KeyFactory;.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;` @kind virtual;
  #L1dc214.  v1:= temp @kind object;
  #L1dc216.  v1:= (`java.security.interfaces.RSAPrivateCrtKey`) v1 @kind object;
  #L1dc21a.  v2:= new `com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce`;
  #L1dc21e.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc224.  v3:= temp @kind object;
  #L1dc226.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L1dc22c.  v3:= temp @kind object;
  #L1dc22e.  call temp:= `getHashType`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;.getHashType:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dc234.  v3:= temp @kind object;
  #L1dc236.  call temp:= `c`(v3) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dc23c.  v3:= temp @kind object;
  #L1dc23e.  call `<init>`(v2, v1, v3) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPkcs1SignJce;.<init>:(Ljava/security/interfaces/RSAPrivateCrtKey;Lcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1dc244.  v1:= new `java.security.spec.RSAPublicKeySpec`;
  #L1dc248.  v3:= new `java.math.BigInteger`;
  #L1dc24c.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc252.  v4:= temp @kind object;
  #L1dc254.  call temp:= `getN`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc25a.  v4:= temp @kind object;
  #L1dc25c.  call temp:= `toByteArray`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc262.  v4:= temp @kind object;
  #L1dc264.  call `<init>`(v3, v11, v4) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc26a.  v4:= new `java.math.BigInteger`;
  #L1dc26e.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc274.  v5:= temp @kind object;
  #L1dc276.  call temp:= `getE`(v5) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc27c.  v5:= temp @kind object;
  #L1dc27e.  call temp:= `toByteArray`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc284.  v5:= temp @kind object;
  #L1dc286.  call `<init>`(v4, v11, v5) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc28c.  call `<init>`(v1, v3, v4) @signature `Ljava/security/spec/RSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L1dc292.  call temp:= `generatePublic`(v0, v1) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L1dc298.  v0:= temp @kind object;
  #L1dc29a.  v0:= (`java.security.interfaces.RSAPublicKey`) v0 @kind object;
  #L1dc29e.  v1:= new `com.google.crypto.tink.subtle.RsaSsaPkcs1VerifyJce`;
  #L1dc2a2.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc2a8.  v13:= temp @kind object;
  #L1dc2aa.  call temp:= `getParams`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L1dc2b0.  v13:= temp @kind object;
  #L1dc2b2.  call temp:= `getHashType`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;.getHashType:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dc2b8.  v13:= temp @kind object;
  #L1dc2ba.  call temp:= `c`(v13) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dc2c0.  v13:= temp @kind object;
  #L1dc2c2.  call `<init>`(v1, v0, v13) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPkcs1VerifyJce;.<init>:(Ljava/security/interfaces/RSAPublicKey;Lcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1dc2c8.  call temp:= `b`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.b:()[B` @kind static;
  #L1dc2ce.  v13:= temp @kind object;
  #L1dc2d0.  call temp:= `sign`(v2, v13) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPkcs1SignJce;.sign:([B)[B` @kind virtual;
  #L1dc2d6.  v13:= temp @kind object;
  #L1dc2d8.  call temp:= `b`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.b:()[B` @kind static;
  #L1dc2de.  v0:= temp @kind object;
  #L1dc2e0.  call `verify`(v1, v13, v0) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPkcs1VerifyJce;.verify:([B[B)V` @kind virtual;
  #L1dc2e6.  return v2 @kind object;
  #L1dc2e8.  v13:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1dc2ea.  v0:= new `java.lang.RuntimeException`;
  #L1dc2ee.  v1:= new `java.lang.StringBuilder`;
  #L1dc2f2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dc2f8.  v2:= "Security bug: signing with private key followed by verifying with public key failed" @kind object;
  #L1dc2fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dc302.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dc308.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dc30e.  v13:= temp @kind object;
  #L1dc310.  call `<init>`(v0, v13) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dc316.  throw v0;
  catch `java.security.GeneralSecurityException` @[L1dc2c8..L1dc2e6] goto L1dc2e8;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dc338.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey`) v1 @kind object;
  #L1dc33c.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$a;.b:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;)Lcom/google/crypto/tink/PublicKeySign;` @kind virtual;
  #L1dc342.  v1:= temp @kind object;
  #L1dc344.  return v1 @kind object;
}
