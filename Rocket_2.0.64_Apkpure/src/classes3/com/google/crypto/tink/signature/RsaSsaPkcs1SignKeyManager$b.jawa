record `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v0 @kind this, `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.<init>:(Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dc5b4.  v0.`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` := v1 @kind object;
  #L1dc5b8.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1dc5be.  return @kind void;
}
procedure `com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey` `a`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v6 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat` v7 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.a:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1dc394.  call temp:= `getParams`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L1dc39a.  v0:= temp @kind object;
  #L1dc39c.  v1:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_PAIR_GENERATOR` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1dc3a0.  v2:= "RSA" @kind object;
  #L1dc3a4.  call temp:= `getInstance`(v1, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1dc3aa.  v1:= temp @kind object;
  #L1dc3ac.  v1:= (`java.security.KeyPairGenerator`) v1 @kind object;
  #L1dc3b0.  v2:= new `java.security.spec.RSAKeyGenParameterSpec`;
  #L1dc3b4.  call temp:= `getModulusSizeInBits`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L1dc3ba.  v3:= temp;
  #L1dc3bc.  v4:= new `java.math.BigInteger`;
  #L1dc3c0.  call temp:= `getPublicExponent`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getPublicExponent:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc3c6.  v7:= temp @kind object;
  #L1dc3c8.  call temp:= `toByteArray`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc3ce.  v7:= temp @kind object;
  #L1dc3d0.  v5:= 1I;
  #L1dc3d2.  call `<init>`(v4, v5, v7) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc3d8.  call `<init>`(v2, v3, v4) @signature `Ljava/security/spec/RSAKeyGenParameterSpec;.<init>:(ILjava/math/BigInteger;)V` @kind direct;
  #L1dc3de.  call `initialize`(v1, v2) @signature `Ljava/security/KeyPairGenerator;.initialize:(Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L1dc3e4.  call temp:= `generateKeyPair`(v1) @signature `Ljava/security/KeyPairGenerator;.generateKeyPair:()Ljava/security/KeyPair;` @kind virtual;
  #L1dc3ea.  v7:= temp @kind object;
  #L1dc3ec.  call temp:= `getPublic`(v7) @signature `Ljava/security/KeyPair;.getPublic:()Ljava/security/PublicKey;` @kind virtual;
  #L1dc3f2.  v1:= temp @kind object;
  #L1dc3f4.  v1:= (`java.security.interfaces.RSAPublicKey`) v1 @kind object;
  #L1dc3f8.  call temp:= `getPrivate`(v7) @signature `Ljava/security/KeyPair;.getPrivate:()Ljava/security/PrivateKey;` @kind virtual;
  #L1dc3fe.  v7:= temp @kind object;
  #L1dc400.  v7:= (`java.security.interfaces.RSAPrivateCrtKey`) v7 @kind object;
  #L1dc404.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind static;
  #L1dc40a.  v2:= temp @kind object;
  #L1dc40c.  v3:= v6.`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` @kind object;
  #L1dc410.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getVersion:()I` @kind virtual;
  #L1dc416.  v3:= temp;
  #L1dc418.  call temp:= `setVersion`(v2, v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind virtual;
  #L1dc41e.  v2:= temp @kind object;
  #L1dc420.  call temp:= `setParams`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind virtual;
  #L1dc426.  v0:= temp @kind object;
  #L1dc428.  call temp:= `getPublicExponent`(v1) @signature `Ljava/security/interfaces/RSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;` @kind interface;
  #L1dc42e.  v2:= temp @kind object;
  #L1dc430.  call temp:= `toByteArray`(v2) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc436.  v2:= temp @kind object;
  #L1dc438.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc43e.  v2:= temp @kind object;
  #L1dc440.  call temp:= `setE`(v0, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;.setE:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind virtual;
  #L1dc446.  v0:= temp @kind object;
  #L1dc448.  call temp:= `getModulus`(v1) @signature `Ljava/security/interfaces/RSAPublicKey;.getModulus:()Ljava/math/BigInteger;` @kind interface;
  #L1dc44e.  v1:= temp @kind object;
  #L1dc450.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc456.  v1:= temp @kind object;
  #L1dc458.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc45e.  v1:= temp @kind object;
  #L1dc460.  call temp:= `setN`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;.setN:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind virtual;
  #L1dc466.  v0:= temp @kind object;
  #L1dc468.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dc46e.  v0:= temp @kind object;
  #L1dc470.  v0:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey`) v0 @kind object;
  #L1dc474.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind static;
  #L1dc47a.  v1:= temp @kind object;
  #L1dc47c.  v2:= v6.`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` @kind object;
  #L1dc480.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getVersion:()I` @kind virtual;
  #L1dc486.  v2:= temp;
  #L1dc488.  call temp:= `setVersion`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L1dc48e.  v1:= temp @kind object;
  #L1dc490.  call temp:= `setPublicKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setPublicKey:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L1dc496.  v0:= temp @kind object;
  #L1dc498.  call temp:= `getPrivateExponent`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;` @kind interface;
  #L1dc49e.  v1:= temp @kind object;
  #L1dc4a0.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc4a6.  v1:= temp @kind object;
  #L1dc4a8.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc4ae.  v1:= temp @kind object;
  #L1dc4b0.  call temp:= `setD`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setD:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L1dc4b6.  v0:= temp @kind object;
  #L1dc4b8.  call temp:= `getPrimeP`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;` @kind interface;
  #L1dc4be.  v1:= temp @kind object;
  #L1dc4c0.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc4c6.  v1:= temp @kind object;
  #L1dc4c8.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc4ce.  v1:= temp @kind object;
  #L1dc4d0.  call temp:= `setP`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setP:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L1dc4d6.  v0:= temp @kind object;
  #L1dc4d8.  call temp:= `getPrimeQ`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;` @kind interface;
  #L1dc4de.  v1:= temp @kind object;
  #L1dc4e0.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc4e6.  v1:= temp @kind object;
  #L1dc4e8.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc4ee.  v1:= temp @kind object;
  #L1dc4f0.  call temp:= `setQ`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setQ:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L1dc4f6.  v0:= temp @kind object;
  #L1dc4f8.  call temp:= `getPrimeExponentP`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;` @kind interface;
  #L1dc4fe.  v1:= temp @kind object;
  #L1dc500.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc506.  v1:= temp @kind object;
  #L1dc508.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc50e.  v1:= temp @kind object;
  #L1dc510.  call temp:= `setDp`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setDp:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L1dc516.  v0:= temp @kind object;
  #L1dc518.  call temp:= `getPrimeExponentQ`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;` @kind interface;
  #L1dc51e.  v1:= temp @kind object;
  #L1dc520.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc526.  v1:= temp @kind object;
  #L1dc528.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc52e.  v1:= temp @kind object;
  #L1dc530.  call temp:= `setDq`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setDq:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L1dc536.  v0:= temp @kind object;
  #L1dc538.  call temp:= `getCrtCoefficient`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;` @kind interface;
  #L1dc53e.  v7:= temp @kind object;
  #L1dc540.  call temp:= `toByteArray`(v7) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc546.  v7:= temp @kind object;
  #L1dc548.  call temp:= `copyFrom`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc54e.  v7:= temp @kind object;
  #L1dc550.  call temp:= `setCrt`(v0, v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setCrt:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L1dc556.  v7:= temp @kind object;
  #L1dc558.  call temp:= `build`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dc55e.  v7:= temp @kind object;
  #L1dc560.  v7:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey`) v7 @kind object;
  #L1dc564.  return v7 @kind object;
}
procedure `com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat` `b`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc370.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L1dc376.  v0:= temp @kind object;
  #L1dc378.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;` @kind static;
  #L1dc37e.  v2:= temp @kind object;
  #L1dc380.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.c:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dc5d0.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L1dc5d6.  v0:= temp @kind object;
  #L1dc5d8.  call `e`(v0) @signature `Lcom/google/crypto/tink/signature/f;.e:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)V` @kind static;
  #L1dc5de.  call temp:= `getModulusSizeInBits`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L1dc5e4.  v0:= temp;
  #L1dc5e6.  call `validateRsaModulusSize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L1dc5ec.  v0:= new `java.math.BigInteger`;
  #L1dc5f0.  call temp:= `getPublicExponent`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getPublicExponent:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc5f6.  v3:= temp @kind object;
  #L1dc5f8.  call temp:= `toByteArray`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc5fe.  v3:= temp @kind object;
  #L1dc600.  v1:= 1I;
  #L1dc602.  call `<init>`(v0, v1, v3) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc608.  call `validateRsaPublicExponent`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaPublicExponent:(Ljava/math/BigInteger;)V` @kind static;
  #L1dc60e.  return @kind void;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dc594.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat`) v1 @kind object;
  #L1dc598.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.a:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;` @kind virtual;
  #L1dc59e.  v1:= temp @kind object;
  #L1dc5a0.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dc578.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;` @kind virtual;
  #L1dc57e.  v1:= temp @kind object;
  #L1dc580.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dc620.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat`) v1 @kind object;
  #L1dc624.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.c:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;)V` @kind virtual;
  #L1dc62a.  return @kind void;
}
