record `com.google.crypto.tink.signature.SignatureKeyTemplates` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256_IEEE_P1363` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256_IEEE_P1363_WITHOUT_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P384` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P384_IEEE_P1363` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P521` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P521_IEEE_P1363` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ED25519` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ED25519WithRawOutput` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_3072_SHA256_F4` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_3072_SHA256_F4_WITHOUT_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_4096_SHA512_F4` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PSS_3072_SHA256_SHA256_32_F4` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PSS_4096_SHA512_SHA512_64_F4` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1dde8c.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1dde90.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L1dde94.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.DER` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L1dde98.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L1dde9c.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddea2.  v4:= temp @kind object;
  #L1ddea4.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v4 @kind object;
  #L1ddea8.  v4:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1ddeac.  v5:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P384` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L1ddeb0.  call temp:= `createEcdsaKeyTemplate`(v4, v5, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddeb6.  v6:= temp @kind object;
  #L1ddeb8.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P384` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v6 @kind object;
  #L1ddebc.  v6:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P521` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L1ddec0.  call temp:= `createEcdsaKeyTemplate`(v4, v6, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddec6.  v2:= temp @kind object;
  #L1ddec8.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P521` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v2 @kind object;
  #L1ddecc.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.IEEE_P1363` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L1dded0.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1dded6.  v7:= temp @kind object;
  #L1dded8.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256_IEEE_P1363` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v7 @kind object;
  #L1ddedc.  call temp:= `createEcdsaKeyTemplate`(v4, v5, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddee2.  v5:= temp @kind object;
  #L1ddee4.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P384_IEEE_P1363` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v5 @kind object;
  #L1ddee8.  v5:= `@@com.google.crypto.tink.proto.OutputPrefixType.RAW` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L1ddeec.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v5) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddef2.  v1:= temp @kind object;
  #L1ddef4.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256_IEEE_P1363_WITHOUT_PREFIX` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L1ddef8.  call temp:= `createEcdsaKeyTemplate`(v4, v6, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddefe.  v1:= temp @kind object;
  #L1ddf00.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P521_IEEE_P1363` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L1ddf04.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L1ddf0a.  v1:= temp @kind object;
  #L1ddf0c.  v2:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager`;
  #L1ddf10.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @kind direct;
  #L1ddf16.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L1ddf1c.  v2:= temp @kind object;
  #L1ddf1e.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddf24.  v1:= temp @kind object;
  #L1ddf26.  call temp:= `setOutputPrefixType`(v1, v3) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddf2c.  v1:= temp @kind object;
  #L1ddf2e.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1ddf34.  v1:= temp @kind object;
  #L1ddf36.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L1ddf3a.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ED25519` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L1ddf3e.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L1ddf44.  v1:= temp @kind object;
  #L1ddf46.  v2:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager`;
  #L1ddf4a.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @kind direct;
  #L1ddf50.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L1ddf56.  v2:= temp @kind object;
  #L1ddf58.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddf5e.  v1:= temp @kind object;
  #L1ddf60.  call temp:= `setOutputPrefixType`(v1, v5) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddf66.  v1:= temp @kind object;
  #L1ddf68.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1ddf6e.  v1:= temp @kind object;
  #L1ddf70.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L1ddf74.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ED25519WithRawOutput` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L1ddf78.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1ddf7c.  v2:= 3072I;
  #L1ddf80.  call temp:= `createRsaSsaPkcs1KeyTemplate`(v0, v2, v1, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPkcs1KeyTemplate:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddf86.  v1:= temp @kind object;
  #L1ddf88.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_3072_SHA256_F4` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L1ddf8c.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1ddf90.  call temp:= `createRsaSsaPkcs1KeyTemplate`(v0, v2, v1, v5) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPkcs1KeyTemplate:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddf96.  v1:= temp @kind object;
  #L1ddf98.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_3072_SHA256_F4_WITHOUT_PREFIX` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L1ddf9c.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1ddfa0.  v5:= 4096I;
  #L1ddfa4.  call temp:= `createRsaSsaPkcs1KeyTemplate`(v4, v5, v1, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPkcs1KeyTemplate:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddfaa.  v1:= temp @kind object;
  #L1ddfac.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_4096_SHA512_F4` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L1ddfb0.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1ddfb4.  v3:= 32I;
  #L1ddfb8.  call temp:= `createRsaSsaPssKeyTemplate`(v0, v0, v3, v2, v1) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPssKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/HashType;IILjava/math/BigInteger;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddfbe.  v0:= temp @kind object;
  #L1ddfc0.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PSS_3072_SHA256_SHA256_32_F4` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L1ddfc4.  v0:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1ddfc8.  v1:= 64I;
  #L1ddfcc.  call temp:= `createRsaSsaPssKeyTemplate`(v4, v4, v1, v5, v0) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPssKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/HashType;IILjava/math/BigInteger;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L1ddfd2.  v0:= temp @kind object;
  #L1ddfd4.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PSS_4096_SHA512_SHA512_64_F4` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L1ddfd8.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.SignatureKeyTemplates` v0 @kind this) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ddfec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ddff2.  return @kind void;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createEcdsaKeyTemplate`(`com.google.crypto.tink.proto.HashType` v1 @kind object, `com.google.crypto.tink.proto.EllipticCurveType` v2 @kind object, `com.google.crypto.tink.proto.EcdsaSignatureEncoding` v3 @kind object, `com.google.crypto.tink.proto.OutputPrefixType` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ddc78.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.newBuilder:()Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @kind static;
  #L1ddc7e.  v0:= temp @kind object;
  #L1ddc80.  call temp:= `setHashType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams$Builder;.setHashType:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @kind virtual;
  #L1ddc86.  v1:= temp @kind object;
  #L1ddc88.  call temp:= `setCurve`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EcdsaParams$Builder;.setCurve:(Lcom/google/crypto/tink/proto/EllipticCurveType;)Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @kind virtual;
  #L1ddc8e.  v1:= temp @kind object;
  #L1ddc90.  call temp:= `setEncoding`(v1, v3) @signature `Lcom/google/crypto/tink/proto/EcdsaParams$Builder;.setEncoding:(Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @kind virtual;
  #L1ddc96.  v1:= temp @kind object;
  #L1ddc98.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1ddc9e.  v1:= temp @kind object;
  #L1ddca0.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L1ddca4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;` @kind static;
  #L1ddcaa.  v2:= temp @kind object;
  #L1ddcac.  call temp:= `setParams`(v2, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/EcdsaParams;)Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;` @kind virtual;
  #L1ddcb2.  v1:= temp @kind object;
  #L1ddcb4.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1ddcba.  v1:= temp @kind object;
  #L1ddcbc.  v1:= (`com.google.crypto.tink.proto.EcdsaKeyFormat`) v1 @kind object;
  #L1ddcc0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L1ddcc6.  v2:= temp @kind object;
  #L1ddcc8.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1ddcce.  v1:= temp @kind object;
  #L1ddcd0.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddcd6.  v1:= temp @kind object;
  #L1ddcd8.  v2:= new `com.google.crypto.tink.signature.EcdsaSignKeyManager`;
  #L1ddcdc.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/EcdsaSignKeyManager;.<init>:()V` @kind direct;
  #L1ddce2.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/EcdsaSignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L1ddce8.  v2:= temp @kind object;
  #L1ddcea.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddcf0.  v1:= temp @kind object;
  #L1ddcf2.  call temp:= `setOutputPrefixType`(v1, v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddcf8.  v1:= temp @kind object;
  #L1ddcfa.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1ddd00.  v1:= temp @kind object;
  #L1ddd02.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L1ddd06.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createRsaSsaPkcs1KeyTemplate`(`com.google.crypto.tink.proto.HashType` v1 @kind object, `int` v2 , `java.math.BigInteger` v3 @kind object, `com.google.crypto.tink.proto.OutputPrefixType` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPkcs1KeyTemplate:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ddd18.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;` @kind static;
  #L1ddd1e.  v0:= temp @kind object;
  #L1ddd20.  call temp:= `setHashType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;.setHashType:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;` @kind virtual;
  #L1ddd26.  v1:= temp @kind object;
  #L1ddd28.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1ddd2e.  v1:= temp @kind object;
  #L1ddd30.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1Params`) v1 @kind object;
  #L1ddd34.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind static;
  #L1ddd3a.  v0:= temp @kind object;
  #L1ddd3c.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L1ddd42.  v1:= temp @kind object;
  #L1ddd44.  call temp:= `setModulusSizeInBits`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setModulusSizeInBits:(I)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L1ddd4a.  v1:= temp @kind object;
  #L1ddd4c.  call temp:= `toByteArray`(v3) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1ddd52.  v2:= temp @kind object;
  #L1ddd54.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1ddd5a.  v2:= temp @kind object;
  #L1ddd5c.  call temp:= `setPublicExponent`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setPublicExponent:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L1ddd62.  v1:= temp @kind object;
  #L1ddd64.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1ddd6a.  v1:= temp @kind object;
  #L1ddd6c.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat`) v1 @kind object;
  #L1ddd70.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L1ddd76.  v2:= temp @kind object;
  #L1ddd78.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1ddd7e.  v1:= temp @kind object;
  #L1ddd80.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddd86.  v1:= temp @kind object;
  #L1ddd88.  v2:= new `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager`;
  #L1ddd8c.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.<init>:()V` @kind direct;
  #L1ddd92.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L1ddd98.  v2:= temp @kind object;
  #L1ddd9a.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddda0.  v1:= temp @kind object;
  #L1ddda2.  call temp:= `setOutputPrefixType`(v1, v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1ddda8.  v1:= temp @kind object;
  #L1dddaa.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dddb0.  v1:= temp @kind object;
  #L1dddb2.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L1dddb6.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createRsaSsaPssKeyTemplate`(`com.google.crypto.tink.proto.HashType` v1 @kind object, `com.google.crypto.tink.proto.HashType` v2 @kind object, `int` v3 , `int` v4 , `java.math.BigInteger` v5 @kind object) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPssKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/HashType;IILjava/math/BigInteger;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1dddc8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;` @kind static;
  #L1dddce.  v0:= temp @kind object;
  #L1dddd0.  call temp:= `setSigHash`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;.setSigHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;` @kind virtual;
  #L1dddd6.  v1:= temp @kind object;
  #L1dddd8.  call temp:= `setMgf1Hash`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;.setMgf1Hash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;` @kind virtual;
  #L1dddde.  v1:= temp @kind object;
  #L1ddde0.  call temp:= `setSaltLength`(v1, v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;.setSaltLength:(I)Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;` @kind virtual;
  #L1ddde6.  v1:= temp @kind object;
  #L1ddde8.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dddee.  v1:= temp @kind object;
  #L1dddf0.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssParams`) v1 @kind object;
  #L1dddf4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;` @kind static;
  #L1dddfa.  v2:= temp @kind object;
  #L1dddfc.  call temp:= `setParams`(v2, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPssParams;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;` @kind virtual;
  #L1dde02.  v1:= temp @kind object;
  #L1dde04.  call temp:= `setModulusSizeInBits`(v1, v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;.setModulusSizeInBits:(I)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;` @kind virtual;
  #L1dde0a.  v1:= temp @kind object;
  #L1dde0c.  call temp:= `toByteArray`(v5) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dde12.  v2:= temp @kind object;
  #L1dde14.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dde1a.  v2:= temp @kind object;
  #L1dde1c.  call temp:= `setPublicExponent`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;.setPublicExponent:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;` @kind virtual;
  #L1dde22.  v1:= temp @kind object;
  #L1dde24.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dde2a.  v1:= temp @kind object;
  #L1dde2c.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssKeyFormat`) v1 @kind object;
  #L1dde30.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L1dde36.  v2:= temp @kind object;
  #L1dde38.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dde3e.  v1:= temp @kind object;
  #L1dde40.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1dde46.  v1:= temp @kind object;
  #L1dde48.  v2:= new `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager`;
  #L1dde4c.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.<init>:()V` @kind direct;
  #L1dde52.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L1dde58.  v2:= temp @kind object;
  #L1dde5a.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1dde60.  v1:= temp @kind object;
  #L1dde62.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L1dde66.  call temp:= `setOutputPrefixType`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L1dde6c.  v1:= temp @kind object;
  #L1dde6e.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dde74.  v1:= temp @kind object;
  #L1dde76.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L1dde7a.  return v1 @kind object;
}
