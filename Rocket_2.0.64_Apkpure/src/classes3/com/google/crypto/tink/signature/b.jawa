record `com.google.crypto.tink.signature.b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.b` v4 @kind this) @signature `Lcom/google/crypto/tink/signature/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dbb64.  v0:= constclass @type ^`com.google.crypto.tink.proto.Ed25519PublicKey` @kind object;
  #L1dbb68.  v1:= 1I;
  #L1dbb6a.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L1dbb6e.  v2:= new `com.google.crypto.tink.signature.b$a`;
  #L1dbb72.  v3:= constclass @type ^`com.google.crypto.tink.PublicKeyVerify` @kind object;
  #L1dbb76.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/signature/b$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1dbb7c.  v3:= 0I;
  #L1dbb7e.  v1[v3]:= v2 @kind object;
  #L1dbb82.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L1dbb88.  return @kind void;
}
procedure `com.google.crypto.tink.proto.Ed25519PublicKey` `b`(`com.google.crypto.tink.signature.b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/Ed25519PublicKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbae0.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L1dbae6.  v0:= temp @kind object;
  #L1dbae8.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/Ed25519PublicKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/Ed25519PublicKey;` @kind static;
  #L1dbaee.  v2:= temp @kind object;
  #L1dbaf0.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.signature.b` v2 @kind this, `com.google.crypto.tink.proto.Ed25519PublicKey` v3 @kind object) @signature `Lcom/google/crypto/tink/signature/b;.c:(Lcom/google/crypto/tink/proto/Ed25519PublicKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbb9c.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/Ed25519PublicKey;.getVersion:()I` @kind virtual;
  #L1dbba2.  v0:= temp;
  #L1dbba4.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/signature/b;.getVersion:()I` @kind virtual;
  #L1dbbaa.  v1:= temp;
  #L1dbbac.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L1dbbb2.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/Ed25519PublicKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dbbb8.  v3:= temp @kind object;
  #L1dbbba.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L1dbbc0.  v3:= temp;
  #L1dbbc2.  v0:= 32I;
  #L1dbbc6.  if v3 != v0 then goto L1dbbcc;
  #L1dbbca.  return @kind void;
  #L1dbbcc.  v3:= new `java.security.GeneralSecurityException`;
  #L1dbbd0.  v0:= "invalid Ed25519 public key: incorrect key length" @kind object;
  #L1dbbd4.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dbbda.  throw v3;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.signature.b` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/b;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbb4c.  v0:= "type.googleapis.com/google.crypto.tink.Ed25519PublicKey" @kind object;
  #L1dbb50.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.signature.b` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/b;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbb38.  v0:= 0I;
  #L1dbb3a.  return v0;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.signature.b` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/b;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbb04.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PUBLIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L1dbb08.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.signature.b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/b;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dbb1c.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/Ed25519PublicKey;` @kind virtual;
  #L1dbb22.  v1:= temp @kind object;
  #L1dbb24.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.signature.b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/b;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dbbec.  v1:= (`com.google.crypto.tink.proto.Ed25519PublicKey`) v1 @kind object;
  #L1dbbf0.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/signature/b;.c:(Lcom/google/crypto/tink/proto/Ed25519PublicKey;)V` @kind virtual;
  #L1dbbf6.  return @kind void;
}
