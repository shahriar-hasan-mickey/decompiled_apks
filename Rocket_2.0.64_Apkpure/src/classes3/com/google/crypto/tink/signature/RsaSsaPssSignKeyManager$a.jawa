record `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dce4c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1dce52.  return @kind void;
}
procedure `com.google.crypto.tink.PublicKeySign` `b`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$a` v12 @kind this, `com.google.crypto.tink.proto.RsaSsaPssPrivateKey` v13 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$a;.b:(Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;)Lcom/google/crypto/tink/PublicKeySign;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1dcbe0.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1dcbe4.  v1:= "RSA" @kind object;
  #L1dcbe8.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1dcbee.  v0:= temp @kind object;
  #L1dcbf0.  v0:= (`java.security.KeyFactory`) v0 @kind object;
  #L1dcbf4.  v10:= new `java.security.spec.RSAPrivateCrtKeySpec`;
  #L1dcbf8.  v2:= new `java.math.BigInteger`;
  #L1dcbfc.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;` @kind virtual;
  #L1dcc02.  v1:= temp @kind object;
  #L1dcc04.  call temp:= `getN`(v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcc0a.  v1:= temp @kind object;
  #L1dcc0c.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcc12.  v1:= temp @kind object;
  #L1dcc14.  v11:= 1I;
  #L1dcc16.  call `<init>`(v2, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcc1c.  v3:= new `java.math.BigInteger`;
  #L1dcc20.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;` @kind virtual;
  #L1dcc26.  v1:= temp @kind object;
  #L1dcc28.  call temp:= `getE`(v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcc2e.  v1:= temp @kind object;
  #L1dcc30.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcc36.  v1:= temp @kind object;
  #L1dcc38.  call `<init>`(v3, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcc3e.  v4:= new `java.math.BigInteger`;
  #L1dcc42.  call temp:= `getD`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getD:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcc48.  v1:= temp @kind object;
  #L1dcc4a.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcc50.  v1:= temp @kind object;
  #L1dcc52.  call `<init>`(v4, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcc58.  v5:= new `java.math.BigInteger`;
  #L1dcc5c.  call temp:= `getP`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getP:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcc62.  v1:= temp @kind object;
  #L1dcc64.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcc6a.  v1:= temp @kind object;
  #L1dcc6c.  call `<init>`(v5, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcc72.  v6:= new `java.math.BigInteger`;
  #L1dcc76.  call temp:= `getQ`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getQ:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcc7c.  v1:= temp @kind object;
  #L1dcc7e.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcc84.  v1:= temp @kind object;
  #L1dcc86.  call `<init>`(v6, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcc8c.  v7:= new `java.math.BigInteger`;
  #L1dcc90.  call temp:= `getDp`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getDp:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcc96.  v1:= temp @kind object;
  #L1dcc98.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcc9e.  v1:= temp @kind object;
  #L1dcca0.  call `<init>`(v7, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcca6.  v8:= new `java.math.BigInteger`;
  #L1dccaa.  call temp:= `getDq`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getDq:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dccb0.  v1:= temp @kind object;
  #L1dccb2.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dccb8.  v1:= temp @kind object;
  #L1dccba.  call `<init>`(v8, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dccc0.  v9:= new `java.math.BigInteger`;
  #L1dccc4.  call temp:= `getCrt`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getCrt:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dccca.  v1:= temp @kind object;
  #L1dcccc.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dccd2.  v1:= temp @kind object;
  #L1dccd4.  call `<init>`(v9, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dccda.  v1:= v10 @kind object;
  #L1dccdc.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ljava/security/spec/RSAPrivateCrtKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L1dcce2.  call temp:= `generatePrivate`(v0, v10) @signature `Ljava/security/KeyFactory;.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;` @kind virtual;
  #L1dcce8.  v1:= temp @kind object;
  #L1dccea.  v1:= (`java.security.interfaces.RSAPrivateCrtKey`) v1 @kind object;
  #L1dccee.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;` @kind virtual;
  #L1dccf4.  v2:= temp @kind object;
  #L1dccf6.  call temp:= `getParams`(v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPssParams;` @kind virtual;
  #L1dccfc.  v2:= temp @kind object;
  #L1dccfe.  v3:= new `com.google.crypto.tink.subtle.RsaSsaPssSignJce`;
  #L1dcd02.  call temp:= `getSigHash`(v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getSigHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dcd08.  v4:= temp @kind object;
  #L1dcd0a.  call temp:= `c`(v4) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dcd10.  v4:= temp @kind object;
  #L1dcd12.  call temp:= `getMgf1Hash`(v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getMgf1Hash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dcd18.  v5:= temp @kind object;
  #L1dcd1a.  call temp:= `c`(v5) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dcd20.  v5:= temp @kind object;
  #L1dcd22.  call temp:= `getSaltLength`(v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getSaltLength:()I` @kind virtual;
  #L1dcd28.  v6:= temp;
  #L1dcd2a.  call `<init>`(v3, v1, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPssSignJce;.<init>:(Ljava/security/interfaces/RSAPrivateCrtKey;Lcom/google/crypto/tink/subtle/Enums$HashType;Lcom/google/crypto/tink/subtle/Enums$HashType;I)V` @kind direct;
  #L1dcd30.  v1:= new `java.security.spec.RSAPublicKeySpec`;
  #L1dcd34.  v4:= new `java.math.BigInteger`;
  #L1dcd38.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;` @kind virtual;
  #L1dcd3e.  v5:= temp @kind object;
  #L1dcd40.  call temp:= `getN`(v5) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcd46.  v5:= temp @kind object;
  #L1dcd48.  call temp:= `toByteArray`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcd4e.  v5:= temp @kind object;
  #L1dcd50.  call `<init>`(v4, v11, v5) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcd56.  v5:= new `java.math.BigInteger`;
  #L1dcd5a.  call temp:= `getPublicKey`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;` @kind virtual;
  #L1dcd60.  v13:= temp @kind object;
  #L1dcd62.  call temp:= `getE`(v13) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dcd68.  v13:= temp @kind object;
  #L1dcd6a.  call temp:= `toByteArray`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dcd70.  v13:= temp @kind object;
  #L1dcd72.  call `<init>`(v5, v11, v13) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dcd78.  call `<init>`(v1, v4, v5) @signature `Ljava/security/spec/RSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L1dcd7e.  call temp:= `generatePublic`(v0, v1) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L1dcd84.  v13:= temp @kind object;
  #L1dcd86.  v13:= (`java.security.interfaces.RSAPublicKey`) v13 @kind object;
  #L1dcd8a.  v0:= new `com.google.crypto.tink.subtle.RsaSsaPssVerifyJce`;
  #L1dcd8e.  call temp:= `getSigHash`(v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getSigHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dcd94.  v1:= temp @kind object;
  #L1dcd96.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dcd9c.  v1:= temp @kind object;
  #L1dcd9e.  call temp:= `getMgf1Hash`(v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getMgf1Hash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dcda4.  v4:= temp @kind object;
  #L1dcda6.  call temp:= `c`(v4) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dcdac.  v4:= temp @kind object;
  #L1dcdae.  call temp:= `getSaltLength`(v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getSaltLength:()I` @kind virtual;
  #L1dcdb4.  v2:= temp;
  #L1dcdb6.  call `<init>`(v0, v13, v1, v4, v2) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPssVerifyJce;.<init>:(Ljava/security/interfaces/RSAPublicKey;Lcom/google/crypto/tink/subtle/Enums$HashType;Lcom/google/crypto/tink/subtle/Enums$HashType;I)V` @kind direct;
  #L1dcdbc.  call temp:= `b`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.b:()[B` @kind static;
  #L1dcdc2.  v13:= temp @kind object;
  #L1dcdc4.  call temp:= `sign`(v3, v13) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPssSignJce;.sign:([B)[B` @kind virtual;
  #L1dcdca.  v13:= temp @kind object;
  #L1dcdcc.  call temp:= `b`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.b:()[B` @kind static;
  #L1dcdd2.  v1:= temp @kind object;
  #L1dcdd4.  call `verify`(v0, v13, v1) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPssVerifyJce;.verify:([B[B)V` @kind virtual;
  #L1dcdda.  return v3 @kind object;
  #L1dcddc.  v13:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1dcdde.  v0:= new `java.lang.RuntimeException`;
  #L1dcde2.  v1:= new `java.lang.StringBuilder`;
  #L1dcde6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dcdec.  v2:= "Security bug: signing with private key followed by verifying with public key failed" @kind object;
  #L1dcdf0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcdf6.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcdfc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dce02.  v13:= temp @kind object;
  #L1dce04.  call `<init>`(v0, v13) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dce0a.  throw v0;
  catch `java.security.GeneralSecurityException` @[L1dcdbc..L1dcdda] goto L1dcddc;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dce2c.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssPrivateKey`) v1 @kind object;
  #L1dce30.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$a;.b:(Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;)Lcom/google/crypto/tink/PublicKeySign;` @kind virtual;
  #L1dce36.  v1:= temp @kind object;
  #L1dce38.  return v1 @kind object;
}
