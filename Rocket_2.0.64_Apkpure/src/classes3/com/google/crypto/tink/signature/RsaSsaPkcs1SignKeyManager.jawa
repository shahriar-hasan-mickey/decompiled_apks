record `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.PrivateKeyTypeManager` @kind class {
}
global `byte`[] `@@com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1dc870.  v0:= "UTF-8" @kind object;
  #L1dc874.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1dc87a.  v0:= temp @kind object;
  #L1dc87c.  v1:= "Tink and Wycheproof." @kind object;
  #L1dc880.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1dc886.  v0:= temp @kind object;
  #L1dc888.  `@@com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager.e` @type ^`byte`[] := v0 @kind object;
  #L1dc88c.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v5 @kind this) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dc8a0.  v0:= constclass @type ^`com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey` @kind object;
  #L1dc8a4.  v1:= constclass @type ^`com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey` @kind object;
  #L1dc8a8.  v2:= 1I;
  #L1dc8aa.  v2:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v2];
  #L1dc8ae.  v3:= new `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$a`;
  #L1dc8b2.  v4:= constclass @type ^`com.google.crypto.tink.PublicKeySign` @kind object;
  #L1dc8b6.  call `<init>`(v3, v4) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1dc8bc.  v4:= 0I;
  #L1dc8be.  v2[v4]:= v3 @kind object;
  #L1dc8c2.  call `<init>`(v5, v0, v1, v2) @signature `Lcom/google/crypto/tink/PrivateKeyTypeManager;.<init>:(Ljava/lang/Class;Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L1dc8c8.  return @kind void;
}
procedure `byte`[] `b`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.b:()[B` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1dc63c.  v0:= `@@com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager.e` @type ^`byte`[] @kind object;
  #L1dc640.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `c`(`com.google.crypto.tink.proto.HashType` v1 @kind object, `int` v2 , `java.math.BigInteger` v3 @kind object, `com.google.crypto.tink.KeyTemplate$OutputPrefixType` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.c:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1dc654.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;` @kind static;
  #L1dc65a.  v0:= temp @kind object;
  #L1dc65c.  call temp:= `setHashType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;.setHashType:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;` @kind virtual;
  #L1dc662.  v1:= temp @kind object;
  #L1dc664.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dc66a.  v1:= temp @kind object;
  #L1dc66c.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1Params`) v1 @kind object;
  #L1dc670.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind static;
  #L1dc676.  v0:= temp @kind object;
  #L1dc678.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L1dc67e.  v1:= temp @kind object;
  #L1dc680.  call temp:= `setModulusSizeInBits`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setModulusSizeInBits:(I)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L1dc686.  v1:= temp @kind object;
  #L1dc688.  call temp:= `toByteArray`(v3) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1dc68e.  v2:= temp @kind object;
  #L1dc690.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L1dc696.  v2:= temp @kind object;
  #L1dc698.  call temp:= `setPublicExponent`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setPublicExponent:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L1dc69e.  v1:= temp @kind object;
  #L1dc6a0.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L1dc6a6.  v1:= temp @kind object;
  #L1dc6a8.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat`) v1 @kind object;
  #L1dc6ac.  v2:= new `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager`;
  #L1dc6b0.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.<init>:()V` @kind direct;
  #L1dc6b6.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L1dc6bc.  v2:= temp @kind object;
  #L1dc6be.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteArray:()[B` @kind virtual;
  #L1dc6c4.  v1:= temp @kind object;
  #L1dc6c6.  call temp:= `create`(v2, v1, v4) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1dc6cc.  v1:= temp @kind object;
  #L1dc6ce.  return v1 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `rawRsa3072SsaPkcs1Sha256F4Template`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.rawRsa3072SsaPkcs1Sha256F4Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dc6e0.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1dc6e4.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1dc6e8.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L1dc6ec.  v3:= 3072I;
  #L1dc6f0.  call temp:= `c`(v0, v3, v1, v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.c:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1dc6f6.  v0:= temp @kind object;
  #L1dc6f8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `rawRsa4096SsaPkcs1Sha512F4Template`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.rawRsa4096SsaPkcs1Sha512F4Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dc70c.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1dc710.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1dc714.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L1dc718.  v3:= 4096I;
  #L1dc71c.  call temp:= `c`(v0, v3, v1, v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.c:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1dc722.  v0:= temp @kind object;
  #L1dc724.  return v0 @kind object;
}
procedure `void` `registerPair`(`boolean` v2 ) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.registerPair:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1dc8dc.  v0:= new `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager`;
  #L1dc8e0.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.<init>:()V` @kind direct;
  #L1dc8e6.  v1:= new `com.google.crypto.tink.signature.d`;
  #L1dc8ea.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/signature/d;.<init>:()V` @kind direct;
  #L1dc8f0.  call `registerAsymmetricKeyManagers`(v0, v1, v2) @signature `Lcom/google/crypto/tink/Registry;.registerAsymmetricKeyManagers:(Lcom/google/crypto/tink/PrivateKeyTypeManager;Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L1dc8f6.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `rsa3072SsaPkcs1Sha256F4Template`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.rsa3072SsaPkcs1Sha256F4Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dc738.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1dc73c.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1dc740.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L1dc744.  v3:= 3072I;
  #L1dc748.  call temp:= `c`(v0, v3, v1, v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.c:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1dc74e.  v0:= temp @kind object;
  #L1dc750.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `rsa4096SsaPkcs1Sha512F4Template`() @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.rsa4096SsaPkcs1Sha512F4Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dc764.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L1dc768.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L1dc76c.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L1dc770.  v3:= 4096I;
  #L1dc774.  call temp:= `c`(v0, v3, v1, v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.c:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L1dc77a.  v0:= temp @kind object;
  #L1dc77c.  return v0 @kind object;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc858.  v0:= "type.googleapis.com/google.crypto.tink.RsaSsaPkcs1PrivateKey" @kind object;
  #L1dc85c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey` `getPublicKey`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v0 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getPublicKey:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @AccessFlag PUBLIC {
    temp;

  #L1dc7ec.  call temp:= `getPublicKey`(v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc7f2.  v1:= temp @kind object;
  #L1dc7f4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `getPublicKey`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getPublicKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dc808.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey`) v1 @kind object;
  #L1dc80c.  call temp:= `getPublicKey`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getPublicKey:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc812.  v1:= temp @kind object;
  #L1dc814.  return v1 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc844.  v0:= 0I;
  #L1dc846.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dc790.  v0:= new `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b`;
  #L1dc794.  v1:= constclass @type ^`com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat` @kind object;
  #L1dc798.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.<init>:(Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;Ljava/lang/Class;)V` @kind direct;
  #L1dc79e.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc7b0.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PRIVATE` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L1dc7b4.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey` `parseKey`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc7c8.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L1dc7ce.  v0:= temp @kind object;
  #L1dc7d0.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;` @kind static;
  #L1dc7d6.  v2:= temp @kind object;
  #L1dc7d8.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dc828.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;` @kind virtual;
  #L1dc82e.  v1:= temp @kind object;
  #L1dc830.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v3 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1dc908.  call temp:= `getVersion`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getVersion:()I` @kind virtual;
  #L1dc90e.  v0:= temp;
  #L1dc910.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getVersion:()I` @kind virtual;
  #L1dc916.  v1:= temp;
  #L1dc918.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L1dc91e.  v0:= new `java.math.BigInteger`;
  #L1dc922.  call temp:= `getPublicKey`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc928.  v1:= temp @kind object;
  #L1dc92a.  call temp:= `getN`(v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc930.  v1:= temp @kind object;
  #L1dc932.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc938.  v1:= temp @kind object;
  #L1dc93a.  v2:= 1I;
  #L1dc93c.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc942.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L1dc948.  v0:= temp;
  #L1dc94a.  call `validateRsaModulusSize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L1dc950.  v0:= new `java.math.BigInteger`;
  #L1dc954.  call temp:= `getPublicKey`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc95a.  v1:= temp @kind object;
  #L1dc95c.  call temp:= `getE`(v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dc962.  v1:= temp @kind object;
  #L1dc964.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dc96a.  v1:= temp @kind object;
  #L1dc96c.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dc972.  call `validateRsaPublicExponent`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaPublicExponent:(Ljava/math/BigInteger;)V` @kind static;
  #L1dc978.  call temp:= `getPublicKey`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;` @kind virtual;
  #L1dc97e.  v4:= temp @kind object;
  #L1dc980.  call temp:= `getParams`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L1dc986.  v4:= temp @kind object;
  #L1dc988.  call `e`(v4) @signature `Lcom/google/crypto/tink/signature/f;.e:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)V` @kind static;
  #L1dc98e.  return @kind void;
}
procedure `void` `validateKey`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dc9a0.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey`) v1 @kind object;
  #L1dc9a4.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;)V` @kind virtual;
  #L1dc9aa.  return @kind void;
}
