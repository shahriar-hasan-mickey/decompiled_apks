record `com.google.crypto.tink.signature.e$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.e$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/e$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dd5c0.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1dd5c6.  return @kind void;
}
procedure `com.google.crypto.tink.PublicKeyVerify` `b`(`com.google.crypto.tink.signature.e$a` v5 @kind this, `com.google.crypto.tink.proto.RsaSsaPssPublicKey` v6 @kind object) @signature `Lcom/google/crypto/tink/signature/e$a;.b:(Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;)Lcom/google/crypto/tink/PublicKeyVerify;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dd4f4.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1dd4f8.  v1:= "RSA" @kind object;
  #L1dd4fc.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1dd502.  v0:= temp @kind object;
  #L1dd504.  v0:= (`java.security.KeyFactory`) v0 @kind object;
  #L1dd508.  v1:= new `java.math.BigInteger`;
  #L1dd50c.  call temp:= `getN`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dd512.  v2:= temp @kind object;
  #L1dd514.  call temp:= `toByteArray`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dd51a.  v2:= temp @kind object;
  #L1dd51c.  v3:= 1I;
  #L1dd51e.  call `<init>`(v1, v3, v2) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dd524.  v2:= new `java.math.BigInteger`;
  #L1dd528.  call temp:= `getE`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L1dd52e.  v4:= temp @kind object;
  #L1dd530.  call temp:= `toByteArray`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L1dd536.  v4:= temp @kind object;
  #L1dd538.  call `<init>`(v2, v3, v4) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L1dd53e.  v3:= new `java.security.spec.RSAPublicKeySpec`;
  #L1dd542.  call `<init>`(v3, v1, v2) @signature `Ljava/security/spec/RSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L1dd548.  call temp:= `generatePublic`(v0, v3) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L1dd54e.  v0:= temp @kind object;
  #L1dd550.  v0:= (`java.security.interfaces.RSAPublicKey`) v0 @kind object;
  #L1dd554.  call temp:= `getParams`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPssParams;` @kind virtual;
  #L1dd55a.  v6:= temp @kind object;
  #L1dd55c.  v1:= new `com.google.crypto.tink.subtle.RsaSsaPssVerifyJce`;
  #L1dd560.  call temp:= `getSigHash`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getSigHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dd566.  v2:= temp @kind object;
  #L1dd568.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dd56e.  v2:= temp @kind object;
  #L1dd570.  call temp:= `getMgf1Hash`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getMgf1Hash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L1dd576.  v3:= temp @kind object;
  #L1dd578.  call temp:= `c`(v3) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1dd57e.  v3:= temp @kind object;
  #L1dd580.  call temp:= `getSaltLength`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getSaltLength:()I` @kind virtual;
  #L1dd586.  v6:= temp;
  #L1dd588.  call `<init>`(v1, v0, v2, v3, v6) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPssVerifyJce;.<init>:(Ljava/security/interfaces/RSAPublicKey;Lcom/google/crypto/tink/subtle/Enums$HashType;Lcom/google/crypto/tink/subtle/Enums$HashType;I)V` @kind direct;
  #L1dd58e.  return v1 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.signature.e$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/e$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dd5a0.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssPublicKey`) v1 @kind object;
  #L1dd5a4.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/e$a;.b:(Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;)Lcom/google/crypto/tink/PublicKeyVerify;` @kind virtual;
  #L1dd5aa.  v1:= temp @kind object;
  #L1dd5ac.  return v1 @kind object;
}
