record `com.google.crypto.tink.subtle.AesEaxJce` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.Aead` @kind interface {
  `byte`[] `com.google.crypto.tink.subtle.AesEaxJce.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.google.crypto.tink.subtle.AesEaxJce.b` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesEaxJce.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.subtle.AesEaxJce.d` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ThreadLocal` `@@com.google.crypto.tink.subtle.AesEaxJce.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@com.google.crypto.tink.subtle.AesEaxJce.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e15f0.  v0:= new `com.google.crypto.tink.subtle.AesEaxJce$a`;
  #L1e15f4.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce$a;.<init>:()V` @kind direct;
  #L1e15fa.  `@@com.google.crypto.tink.subtle.AesEaxJce.e` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L1e15fe.  v0:= new `com.google.crypto.tink.subtle.AesEaxJce$b`;
  #L1e1602.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce$b;.<init>:()V` @kind direct;
  #L1e1608.  `@@com.google.crypto.tink.subtle.AesEaxJce.f` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L1e160c.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.AesEaxJce` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e1620.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e1626.  v0:= 16I;
  #L1e162a.  v1:= 12I;
  #L1e162e.  if v4 == v1 then goto L1e1648;
  #L1e1632.  if v4 != v0 then goto L1e1638;
  #L1e1636.  goto L1e1648;
  #L1e1638.  v3:= new `java.lang.IllegalArgumentException`;
  #L1e163c.  v4:= "IV size should be either 12 or 16 bytes" @kind object;
  #L1e1640.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e1646.  throw v3;
  #L1e1648.  v2.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int` := v4;
  #L1e164c.  v4:= length @variable v3;
  #L1e164e.  call `validateAesKeySize`(v4) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L1e1654.  v4:= new `javax.crypto.spec.SecretKeySpec`;
  #L1e1658.  v1:= "AES" @kind object;
  #L1e165c.  call `<init>`(v4, v3, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1e1662.  v2.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` := v4 @kind object;
  #L1e1666.  v3:= `@@com.google.crypto.tink.subtle.AesEaxJce.e` @type ^`java.lang.ThreadLocal` @kind object;
  #L1e166a.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1e1670.  v3:= temp @kind object;
  #L1e1672.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L1e1676.  v1:= 1I;
  #L1e1678.  call `init`(v3, v1, v4) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L1e167e.  v4:= new `byte`[v0];
  #L1e1682.  call temp:= `doFinal`(v3, v4) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L1e1688.  v3:= temp @kind object;
  #L1e168a.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.a:([B)[B` @kind static;
  #L1e1690.  v3:= temp @kind object;
  #L1e1692.  v2.`com.google.crypto.tink.subtle.AesEaxJce.a` @type ^`byte`[] := v3 @kind object;
  #L1e1696.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.a:([B)[B` @kind static;
  #L1e169c.  v3:= temp @kind object;
  #L1e169e.  v2.`com.google.crypto.tink.subtle.AesEaxJce.b` @type ^`byte`[] := v3 @kind object;
  #L1e16a2.  return @kind void;
}
procedure `byte`[] `a`(`byte`[] v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.a:([B)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e1438.  v0:= 16I;
  #L1e143c.  v0:= new `byte`[v0];
  #L1e1440.  v1:= 0I;
  #L1e1442.  v2:= 0I;
  #L1e1444.  v3:= 15I;
  #L1e1448.  if v2 >= v3 then goto L1e1474;
  #L1e144c.  v3:= v6[v2] @kind byte;
  #L1e1450.  v3:= v3 ^< 1;
  #L1e1454.  v4:= v2 + 1;
  #L1e1458.  v5:= v6[v4] @kind byte;
  #L1e145c.  v5:= v5 ^& 255;
  #L1e1460.  v5:= v5 ^>> 7;
  #L1e1464.  v3:= v3 ^~ v5 @kind int;
  #L1e1466.  v3:= v3 ^& 255;
  #L1e146a.  v3:= (`byte`) v3 @kind i2b;
  #L1e146c.  v0[v2]:= v3 @kind byte;
  #L1e1470.  v2:= v4;
  #L1e1472.  goto L1e1444;
  #L1e1474.  v2:= v6[v3] @kind byte;
  #L1e1478.  v2:= v2 ^< 1;
  #L1e147c.  v6:= v6[v1] @kind byte;
  #L1e1480.  v6:= v6 ^& 128;
  #L1e1484.  if v6 != 0 then goto L1e148a;
  #L1e1488.  goto L1e148e;
  #L1e148a.  v1:= 135I;
  #L1e148e.  v6:= v2 ^~ v1 @kind int;
  #L1e1492.  v6:= (`byte`) v6 @kind i2b;
  #L1e1494.  v0[v3]:= v6 @kind byte;
  #L1e1498.  return v0 @kind object;
}
procedure `byte`[] `b`(`com.google.crypto.tink.subtle.AesEaxJce` v6 @kind this, `javax.crypto.Cipher` v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e14ac.  v0:= 16I;
  #L1e14b0.  v1:= new `byte`[v0];
  #L1e14b4.  v2:= 15I;
  #L1e14b8.  v8:= (`byte`) v8 @kind i2b;
  #L1e14ba.  v1[v2]:= v8 @kind byte;
  #L1e14be.  if v11 != 0 then goto L1e14d8;
  #L1e14c2.  v8:= v6.`com.google.crypto.tink.subtle.AesEaxJce.a` @type ^`byte`[] @kind object;
  #L1e14c6.  call temp:= `d`(v1, v8) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.d:([B[B)[B` @kind static;
  #L1e14cc.  v8:= temp @kind object;
  #L1e14ce.  call temp:= `doFinal`(v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L1e14d4.  v7:= temp @kind object;
  #L1e14d6.  return v7 @kind object;
  #L1e14d8.  call temp:= `doFinal`(v7, v1) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L1e14de.  v8:= temp @kind object;
  #L1e14e0.  v1:= 0I;
  #L1e14e2.  v2:= 0I;
  #L1e14e4.  v3:= v11 - v2 @kind int;
  #L1e14e8.  if v3 <= v0 then goto L1e151c;
  #L1e14ec.  v3:= 0I;
  #L1e14ee.  if v3 >= v0 then goto L1e150e;
  #L1e14f2.  v4:= v8[v3] @kind byte;
  #L1e14f6.  v5:= v10 + v2 @kind int;
  #L1e14fa.  v5:= v5 + v3 @kind int;
  #L1e14fc.  v5:= v9[v5] @kind byte;
  #L1e1500.  v4:= v4 ^~ v5 @kind int;
  #L1e1502.  v4:= (`byte`) v4 @kind i2b;
  #L1e1504.  v8[v3]:= v4 @kind byte;
  #L1e1508.  v3:= v3 + 1;
  #L1e150c.  goto L1e14ee;
  #L1e150e.  call temp:= `doFinal`(v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L1e1514.  v8:= temp @kind object;
  #L1e1516.  v2:= v2 + 16;
  #L1e151a.  goto L1e14e4;
  #L1e151c.  v2:= v2 + v10 @kind int;
  #L1e151e.  v10:= v10 + v11 @kind int;
  #L1e1520.  call temp:= `copyOfRange`(v9, v2, v10) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L1e1526.  v9:= temp @kind object;
  #L1e1528.  call temp:= `c`(v6, v9) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.c:([B)[B` @kind direct;
  #L1e152e.  v9:= temp @kind object;
  #L1e1530.  call temp:= `d`(v8, v9) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.d:([B[B)[B` @kind static;
  #L1e1536.  v8:= temp @kind object;
  #L1e1538.  call temp:= `doFinal`(v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L1e153e.  v7:= temp @kind object;
  #L1e1540.  return v7 @kind object;
}
procedure `byte`[] `c`(`com.google.crypto.tink.subtle.AesEaxJce` v4 @kind this, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.c:([B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e1554.  v0:= length @variable v5;
  #L1e1556.  v1:= 16I;
  #L1e155a.  if v0 != v1 then goto L1e156c;
  #L1e155e.  v0:= v4.`com.google.crypto.tink.subtle.AesEaxJce.a` @type ^`byte`[] @kind object;
  #L1e1562.  call temp:= `d`(v5, v0) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.d:([B[B)[B` @kind static;
  #L1e1568.  v5:= temp @kind object;
  #L1e156a.  return v5 @kind object;
  #L1e156c.  v0:= v4.`com.google.crypto.tink.subtle.AesEaxJce.b` @type ^`byte`[] @kind object;
  #L1e1570.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1e1576.  v0:= temp @kind object;
  #L1e1578.  v1:= 0I;
  #L1e157a.  v2:= length @variable v5;
  #L1e157c.  if v1 >= v2 then goto L1e1596;
  #L1e1580.  v2:= v0[v1] @kind byte;
  #L1e1584.  v3:= v5[v1] @kind byte;
  #L1e1588.  v2:= v2 ^~ v3 @kind int;
  #L1e158a.  v2:= (`byte`) v2 @kind i2b;
  #L1e158c.  v0[v1]:= v2 @kind byte;
  #L1e1590.  v1:= v1 + 1;
  #L1e1594.  goto L1e157a;
  #L1e1596.  v1:= length @variable v5;
  #L1e1598.  v5:= length @variable v5;
  #L1e159a.  v5:= v0[v5] @kind byte;
  #L1e159e.  v5:= v5 ^~ 128;
  #L1e15a2.  v5:= (`byte`) v5 @kind i2b;
  #L1e15a4.  v0[v1]:= v5 @kind byte;
  #L1e15a8.  return v0 @kind object;
}
procedure `byte`[] `d`(`byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.d:([B[B)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e15bc.  v0:= length @variable v5;
  #L1e15be.  v1:= new `byte`[v0];
  #L1e15c2.  v2:= 0I;
  #L1e15c4.  if v2 >= v0 then goto L1e15de;
  #L1e15c8.  v3:= v5[v2] @kind byte;
  #L1e15cc.  v4:= v6[v2] @kind byte;
  #L1e15d0.  v3:= v3 ^~ v4 @kind int;
  #L1e15d2.  v3:= (`byte`) v3 @kind i2b;
  #L1e15d4.  v1[v2]:= v3 @kind byte;
  #L1e15d8.  v2:= v2 + 1;
  #L1e15dc.  goto L1e15c4;
  #L1e15de.  return v1 @kind object;
}
procedure `byte`[] `decrypt`(`com.google.crypto.tink.subtle.AesEaxJce` v13 @kind this, `byte`[] v14 @kind object, `byte`[] v15 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1e11fc.  v0:= length @variable v14;
  #L1e11fe.  v1:= v13.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e1202.  v0:= v0 - v1 @kind int;
  #L1e1204.  v1:= 16I;
  #L1e1208.  v0:= v0 - v1 @kind int;
  #L1e120a.  if v0 < 0 then goto L1e12ea;
  #L1e120e.  v2:= `@@com.google.crypto.tink.subtle.AesEaxJce.e` @type ^`java.lang.ThreadLocal` @kind object;
  #L1e1212.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1e1218.  v2:= temp @kind object;
  #L1e121a.  v9:= v2 @kind object;
  #L1e121c.  v9:= (`javax.crypto.Cipher`) v9 @kind object;
  #L1e1220.  v2:= v13.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L1e1224.  v10:= 1I;
  #L1e1226.  call `init`(v9, v10, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L1e122c.  v5:= 0I;
  #L1e122e.  v7:= 0I;
  #L1e1230.  v8:= v13.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e1234.  v3:= v13 @kind object;
  #L1e1236.  v4:= v9 @kind object;
  #L1e1238.  v6:= v14 @kind object;
  #L1e123a.  call temp:= `b`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L1e1240.  v11:= temp @kind object;
  #L1e1242.  v12:= 0I;
  #L1e1244.  if v15 != 0 then goto L1e124c;
  #L1e1248.  v15:= new `byte`[v12];
  #L1e124c.  v6:= v15 @kind object;
  #L1e124e.  v5:= 1I;
  #L1e1250.  v7:= 0I;
  #L1e1252.  v8:= length @variable v6;
  #L1e1254.  v3:= v13 @kind object;
  #L1e1256.  v4:= v9 @kind object;
  #L1e1258.  call temp:= `b`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L1e125e.  v15:= temp @kind object;
  #L1e1260.  v4:= 2I;
  #L1e1262.  v6:= v13.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e1266.  v2:= v13 @kind object;
  #L1e1268.  v3:= v9 @kind object;
  #L1e126a.  v5:= v14 @kind object;
  #L1e126c.  v7:= v0;
  #L1e126e.  call temp:= `b`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L1e1274.  v2:= temp @kind object;
  #L1e1276.  v3:= length @variable v14;
  #L1e1278.  v3:= v3 - v1 @kind int;
  #L1e127a.  v4:= 0I;
  #L1e127c.  if v12 >= v1 then goto L1e12a4;
  #L1e1280.  v5:= v3 + v12 @kind int;
  #L1e1284.  v5:= v14[v5] @kind byte;
  #L1e1288.  v6:= v15[v12] @kind byte;
  #L1e128c.  v5:= v5 ^~ v6 @kind int;
  #L1e128e.  v6:= v11[v12] @kind byte;
  #L1e1292.  v5:= v5 ^~ v6 @kind int;
  #L1e1294.  v6:= v2[v12] @kind byte;
  #L1e1298.  v5:= v5 ^~ v6 @kind int;
  #L1e129a.  v4:= v4 ^| v5 @kind int;
  #L1e129c.  v4:= (`byte`) v4 @kind i2b;
  #L1e129e.  v12:= v12 + 1;
  #L1e12a2.  goto L1e127c;
  #L1e12a4.  if v4 != 0 then goto L1e12da;
  #L1e12a8.  v15:= `@@com.google.crypto.tink.subtle.AesEaxJce.f` @type ^`java.lang.ThreadLocal` @kind object;
  #L1e12ac.  call temp:= `get`(v15) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1e12b2.  v15:= temp @kind object;
  #L1e12b4.  v15:= (`javax.crypto.Cipher`) v15 @kind object;
  #L1e12b8.  v1:= v13.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L1e12bc.  v2:= new `javax.crypto.spec.IvParameterSpec`;
  #L1e12c0.  call `<init>`(v2, v11) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L1e12c6.  call `init`(v15, v10, v1, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L1e12cc.  v1:= v13.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e12d0.  call temp:= `doFinal`(v15, v14, v1, v0) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L1e12d6.  v14:= temp @kind object;
  #L1e12d8.  return v14 @kind object;
  #L1e12da.  v14:= new `javax.crypto.AEADBadTagException`;
  #L1e12de.  v15:= "tag mismatch" @kind object;
  #L1e12e2.  call `<init>`(v14, v15) @signature `Ljavax/crypto/AEADBadTagException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e12e8.  throw v14;
  #L1e12ea.  v14:= new `java.security.GeneralSecurityException`;
  #L1e12ee.  v15:= "ciphertext too short" @kind object;
  #L1e12f2.  call `<init>`(v14, v15) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e12f8.  throw v14;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.subtle.AesEaxJce` v15 @kind this, `byte`[] v16 @kind object, `byte`[] v17 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L1e130c.  v6:= v15 @kind object;
  #L1e130e.  v7:= v16 @kind object;
  #L1e1312.  v0:= length @variable v7;
  #L1e1314.  v1:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e1318.  v2:= 2147483647I;
  #L1e131e.  v2:= v2 - v1 @kind int;
  #L1e1320.  v8:= 16I;
  #L1e1324.  v2:= v2 - v8 @kind int;
  #L1e1326.  if v0 > v2 then goto L1e1416;
  #L1e132a.  v0:= length @variable v7;
  #L1e132c.  v0:= v0 + v1 @kind int;
  #L1e132e.  v0:= v0 + v8 @kind int;
  #L1e1330.  v9:= new `byte`[v0];
  #L1e1334.  call temp:= `randBytes`(v1) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L1e133a.  v3:= temp @kind object;
  #L1e133c.  v0:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e1340.  v10:= 0I;
  #L1e1342.  call `arraycopy`(v3, v10, v9, v10, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1e1348.  v0:= `@@com.google.crypto.tink.subtle.AesEaxJce.e` @type ^`java.lang.ThreadLocal` @kind object;
  #L1e134c.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1e1352.  v0:= temp @kind object;
  #L1e1354.  v11:= v0 @kind object;
  #L1e1356.  v11:= (`javax.crypto.Cipher`) v11 @kind object;
  #L1e135a.  v0:= v6.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L1e135e.  v12:= 1I;
  #L1e1360.  call `init`(v11, v12, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L1e1366.  v2:= 0I;
  #L1e1368.  v4:= 0I;
  #L1e136a.  v5:= length @variable v3;
  #L1e136c.  v0:= v15 @kind object;
  #L1e136e.  v1:= v11 @kind object;
  #L1e1370.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L1e1376.  v13:= temp @kind object;
  #L1e1378.  if v17 != 0 then goto L1e1384;
  #L1e137c.  v0:= new `byte`[v10];
  #L1e1380.  v3:= v0 @kind object;
  #L1e1382.  goto L1e1388;
  #L1e1384.  v3:= v17 @kind object;
  #L1e1388.  v2:= 1I;
  #L1e138a.  v4:= 0I;
  #L1e138c.  v5:= length @variable v3;
  #L1e138e.  v0:= v15 @kind object;
  #L1e1390.  v1:= v11 @kind object;
  #L1e1392.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L1e1398.  v14:= temp @kind object;
  #L1e139a.  v0:= `@@com.google.crypto.tink.subtle.AesEaxJce.f` @type ^`java.lang.ThreadLocal` @kind object;
  #L1e139e.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1e13a4.  v0:= temp @kind object;
  #L1e13a6.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L1e13aa.  v1:= v6.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L1e13ae.  v2:= new `javax.crypto.spec.IvParameterSpec`;
  #L1e13b2.  call `<init>`(v2, v13) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L1e13b8.  call `init`(v0, v12, v1, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L1e13be.  v2:= 0I;
  #L1e13c0.  v3:= length @variable v7;
  #L1e13c2.  v5:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e13c6.  v1:= v16 @kind object;
  #L1e13ca.  v4:= v9 @kind object;
  #L1e13cc.  call temp:= `doFinal`(v0, v1, v2, v3, v4, v5) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L1e13d2.  v2:= 2I;
  #L1e13d4.  v4:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e13d8.  v5:= length @variable v7;
  #L1e13da.  v0:= v15 @kind object;
  #L1e13dc.  v1:= v11 @kind object;
  #L1e13de.  v3:= v9 @kind object;
  #L1e13e0.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L1e13e6.  v0:= temp @kind object;
  #L1e13e8.  v1:= length @variable v7;
  #L1e13ea.  v2:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L1e13ee.  v1:= v1 + v2 @kind int;
  #L1e13f0.  if v10 >= v8 then goto L1e1414;
  #L1e13f4.  v2:= v1 + v10 @kind int;
  #L1e13f8.  v3:= v14[v10] @kind byte;
  #L1e13fc.  v4:= v13[v10] @kind byte;
  #L1e1400.  v3:= v3 ^~ v4 @kind int;
  #L1e1402.  v4:= v0[v10] @kind byte;
  #L1e1406.  v3:= v3 ^~ v4 @kind int;
  #L1e1408.  v3:= (`byte`) v3 @kind i2b;
  #L1e140a.  v9[v2]:= v3 @kind byte;
  #L1e140e.  v10:= v10 + 1;
  #L1e1412.  goto L1e13f0;
  #L1e1414.  return v9 @kind object;
  #L1e1416.  v0:= new `java.security.GeneralSecurityException`;
  #L1e141a.  v1:= "plaintext too long" @kind object;
  #L1e141e.  call `<init>`(v0, v1) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e1424.  throw v0;
}
