record `com.google.crypto.tink.subtle.j` @kind class @AccessFlag  {
}
procedure `byte`[] `a`(`byte`[] v53 @kind object, `byte`[] v54 @kind object) @signature `Lcom/google/crypto/tink/subtle/j;.a:([B[B)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;
    v33;
    v34;
    v35;
    v36;
    v37;
    v38;
    v39;
    v40;
    v41;
    v42;
    v43;
    v44;
    v45;
    v46;
    v47;
    v48;
    v49;
    v50;
    v51;
    v52;

  #L1ec700.  v0:= v53 @kind object;
  #L1ec704.  v1:= v54 @kind object;
  #L1ec708.  v2:= length @variable v0;
  #L1ec70a.  v3:= 32I;
  #L1ec70e.  if v2 != v3 then goto L1ecad0;
  #L1ec712.  v2:= 0I;
  #L1ec714.  call temp:= `c`(v0, v2, v2) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec71a.  v4:= temp @kind wide;
  #L1ec71c.  v6:= 67108863L;
  #L1ec722.  v4:= v4 ^& v6 @kind long;
  #L1ec724.  v8:= 3I;
  #L1ec726.  v9:= 2I;
  #L1ec728.  call temp:= `c`(v0, v8, v9) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec72e.  v10:= temp @kind wide;
  #L1ec730.  v12:= 67108611L;
  #L1ec736.  v10:= v10 ^& v12 @kind long;
  #L1ec738.  v12:= 6I;
  #L1ec73a.  v13:= 4I;
  #L1ec73c.  call temp:= `c`(v0, v12, v13) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec742.  v14:= temp @kind wide;
  #L1ec744.  v16:= 67092735L;
  #L1ec74a.  v14:= v14 ^& v16 @kind long;
  #L1ec74e.  v3:= 9I;
  #L1ec752.  call temp:= `c`(v0, v3, v12) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec758.  v17:= temp @kind wide;
  #L1ec75a.  v19:= 66076671L;
  #L1ec760.  v17:= v17 ^& v19 @kind long;
  #L1ec764.  v6:= 12I;
  #L1ec768.  v7:= 8I;
  #L1ec76c.  call temp:= `c`(v0, v6, v7) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec772.  v21:= temp @kind wide;
  #L1ec774.  v23:= 1048575L;
  #L1ec77a.  v21:= v21 ^& v23 @kind long;
  #L1ec77e.  v23:= 5L;
  #L1ec782.  v25:= v10 * v23 @kind long;
  #L1ec786.  v27:= v14 * v23 @kind long;
  #L1ec78a.  v29:= v17 * v23 @kind long;
  #L1ec78e.  v31:= v21 * v23 @kind long;
  #L1ec792.  v6:= 17I;
  #L1ec796.  v6:= new `byte`[v6];
  #L1ec79a.  v33:= 0L;
  #L1ec79e.  v35:= v33 @kind wide;
  #L1ec7a2.  v37:= v35 @kind wide;
  #L1ec7a6.  v39:= v37 @kind wide;
  #L1ec7aa.  v41:= v39 @kind wide;
  #L1ec7ae.  v7:= 0I;
  #L1ec7b0.  v3:= length @variable v1;
  #L1ec7b2.  v12:= 16I;
  #L1ec7b6.  v43:= 26I;
  #L1ec7ba.  if v7 >= v3 then goto L1ec942;
  #L1ec7be.  call `b`(v6, v1, v7) @signature `Lcom/google/crypto/tink/subtle/j;.b:([B[BI)V` @kind static;
  #L1ec7c4.  call temp:= `c`(v6, v2, v2) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec7ca.  v44:= temp @kind wide;
  #L1ec7cc.  v41:= v41 + v44 @kind long;
  #L1ec7d0.  call temp:= `c`(v6, v8, v9) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec7d6.  v44:= temp @kind wide;
  #L1ec7d8.  v33:= v33 + v44 @kind long;
  #L1ec7dc.  v3:= 6I;
  #L1ec7de.  call temp:= `c`(v6, v3, v13) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec7e4.  v44:= temp @kind wide;
  #L1ec7e6.  v35:= v35 + v44 @kind long;
  #L1ec7ea.  v8:= 9I;
  #L1ec7ee.  call temp:= `c`(v6, v8, v3) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec7f4.  v45:= temp @kind wide;
  #L1ec7f6.  v37:= v37 + v45 @kind long;
  #L1ec7fa.  v3:= 8I;
  #L1ec7fe.  v8:= 12I;
  #L1ec802.  call temp:= `c`(v6, v8, v3) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L1ec808.  v45:= temp @kind wide;
  #L1ec80a.  v3:= v6[v12] @kind byte;
  #L1ec80e.  v8:= 24I;
  #L1ec812.  v3:= v3 ^< v8 @kind int;
  #L1ec814.  v2:= (`long`) v3 @kind i2l;
  #L1ec816.  v2:= v45 ^| v2 @kind long;
  #L1ec81a.  v39:= v39 + v2 @kind long;
  #L1ec81e.  v2:= v41 * v4 @kind long;
  #L1ec822.  v45:= v33 * v31 @kind long;
  #L1ec826.  v2:= v2 + v45 @kind long;
  #L1ec82a.  v45:= v35 * v29 @kind long;
  #L1ec82e.  v2:= v2 + v45 @kind long;
  #L1ec832.  v45:= v37 * v27 @kind long;
  #L1ec836.  v2:= v2 + v45 @kind long;
  #L1ec83a.  v45:= v39 * v25 @kind long;
  #L1ec83e.  v2:= v2 + v45 @kind long;
  #L1ec842.  v45:= v41 * v10 @kind long;
  #L1ec846.  v47:= v33 * v4 @kind long;
  #L1ec84a.  v45:= v45 + v47 @kind long;
  #L1ec84e.  v47:= v35 * v31 @kind long;
  #L1ec852.  v45:= v45 + v47 @kind long;
  #L1ec856.  v47:= v37 * v29 @kind long;
  #L1ec85a.  v45:= v45 + v47 @kind long;
  #L1ec85e.  v47:= v39 * v27 @kind long;
  #L1ec862.  v45:= v45 + v47 @kind long;
  #L1ec866.  v47:= v41 * v14 @kind long;
  #L1ec86a.  v49:= v33 * v10 @kind long;
  #L1ec86e.  v47:= v47 + v49 @kind long;
  #L1ec872.  v49:= v35 * v4 @kind long;
  #L1ec876.  v47:= v47 + v49 @kind long;
  #L1ec87a.  v49:= v37 * v31 @kind long;
  #L1ec87e.  v47:= v47 + v49 @kind long;
  #L1ec882.  v49:= v39 * v29 @kind long;
  #L1ec886.  v47:= v47 + v49 @kind long;
  #L1ec88a.  v49:= v41 * v17 @kind long;
  #L1ec88e.  v51:= v33 * v14 @kind long;
  #L1ec892.  v49:= v49 + v51 @kind long;
  #L1ec896.  v51:= v35 * v10 @kind long;
  #L1ec89a.  v49:= v49 + v51 @kind long;
  #L1ec89e.  v51:= v37 * v4 @kind long;
  #L1ec8a2.  v49:= v49 + v51 @kind long;
  #L1ec8a6.  v51:= v39 * v31 @kind long;
  #L1ec8aa.  v49:= v49 + v51 @kind long;
  #L1ec8ae.  v41:= v41 * v21 @kind long;
  #L1ec8b2.  v33:= v33 * v17 @kind long;
  #L1ec8b6.  v41:= v41 + v33 @kind long;
  #L1ec8ba.  v35:= v35 * v14 @kind long;
  #L1ec8be.  v41:= v41 + v35 @kind long;
  #L1ec8c2.  v37:= v37 * v10 @kind long;
  #L1ec8c6.  v41:= v41 + v37 @kind long;
  #L1ec8ca.  v39:= v39 * v4 @kind long;
  #L1ec8ce.  v41:= v41 + v39 @kind long;
  #L1ec8d2.  v33:= v2 ^> v43 @kind long;
  #L1ec8d6.  v19:= 67108863L;
  #L1ec8dc.  v2:= v2 ^& v19 @kind long;
  #L1ec8e0.  v45:= v45 + v33 @kind long;
  #L1ec8e4.  v33:= v45 ^> v43 @kind long;
  #L1ec8e8.  v35:= v45 ^& v19 @kind long;
  #L1ec8ec.  v47:= v47 + v33 @kind long;
  #L1ec8f0.  v33:= v47 ^> v43 @kind long;
  #L1ec8f4.  v37:= v47 ^& v19 @kind long;
  #L1ec8f8.  v49:= v49 + v33 @kind long;
  #L1ec8fc.  v33:= v49 ^> v43 @kind long;
  #L1ec900.  v39:= v49 ^& v19 @kind long;
  #L1ec904.  v41:= v41 + v33 @kind long;
  #L1ec908.  v33:= v41 ^> v43 @kind long;
  #L1ec90c.  v41:= v41 ^& v19 @kind long;
  #L1ec910.  v33:= v33 * v23 @kind long;
  #L1ec914.  v2:= v2 + v33 @kind long;
  #L1ec918.  v33:= v2 ^> v43 @kind long;
  #L1ec91c.  v2:= v2 ^& v19 @kind long;
  #L1ec920.  v33:= v35 + v33 @kind long;
  #L1ec924.  v7:= v7 + 16;
  #L1ec928.  v35:= v37 @kind wide;
  #L1ec92c.  v37:= v39 @kind wide;
  #L1ec930.  v39:= v41 @kind wide;
  #L1ec934.  v8:= 3I;
  #L1ec936.  v12:= 6I;
  #L1ec938.  v41:= v2 @kind wide;
  #L1ec93c.  v2:= 0I;
  #L1ec93e.  goto L1ec7b0;
  #L1ec942.  v19:= 67108863L;
  #L1ec948.  v1:= v33 ^> v43 @kind long;
  #L1ec94c.  v3:= v33 ^& v19 @kind long;
  #L1ec950.  v35:= v35 + v1 @kind long;
  #L1ec954.  v1:= v35 ^> v43 @kind long;
  #L1ec958.  v5:= v35 ^& v19 @kind long;
  #L1ec95c.  v37:= v37 + v1 @kind long;
  #L1ec960.  v1:= v37 ^> v43 @kind long;
  #L1ec964.  v9:= v37 ^& v19 @kind long;
  #L1ec968.  v39:= v39 + v1 @kind long;
  #L1ec96c.  v1:= v39 ^> v43 @kind long;
  #L1ec970.  v14:= v39 ^& v19 @kind long;
  #L1ec974.  v1:= v1 * v23 @kind long;
  #L1ec978.  v41:= v41 + v1 @kind long;
  #L1ec97c.  v1:= v41 ^> v43 @kind long;
  #L1ec980.  v17:= v41 ^& v19 @kind long;
  #L1ec984.  v3:= v3 + v1 @kind long;
  #L1ec986.  v23:= v17 + v23 @kind long;
  #L1ec98a.  v1:= v23 ^> v43 @kind long;
  #L1ec98e.  v21:= v23 ^& v19 @kind long;
  #L1ec992.  v1:= v1 + v3 @kind long;
  #L1ec994.  v23:= v1 ^> v43 @kind long;
  #L1ec998.  v1:= v1 ^& v19 @kind long;
  #L1ec99c.  v23:= v5 + v23 @kind long;
  #L1ec9a0.  v25:= v23 ^> v43 @kind long;
  #L1ec9a4.  v23:= v23 ^& v19 @kind long;
  #L1ec9a8.  v25:= v9 + v25 @kind long;
  #L1ec9ac.  v27:= v25 ^> v43 @kind long;
  #L1ec9b0.  v19:= v25 ^& v19 @kind long;
  #L1ec9b4.  v27:= v14 + v27 @kind long;
  #L1ec9b8.  v25:= 67108864L;
  #L1ec9be.  v27:= v27 - v25 @kind long;
  #L1ec9c2.  v7:= 63I;
  #L1ec9c6.  v12:= v27 ^> v7 @kind long;
  #L1ec9ca.  v17:= v17 ^& v12 @kind long;
  #L1ec9ce.  v3:= v3 ^& v12 @kind long;
  #L1ec9d0.  v5:= v5 ^& v12 @kind long;
  #L1ec9d2.  v9:= v9 ^& v12 @kind long;
  #L1ec9d4.  v14:= v14 ^& v12 @kind long;
  #L1ec9d6.  v12:= ~v12 @kind long;
  #L1ec9d8.  v21:= v21 ^& v12 @kind long;
  #L1ec9dc.  v17:= v17 ^| v21 @kind long;
  #L1ec9e0.  v1:= v1 ^& v12 @kind long;
  #L1ec9e2.  v1:= v1 ^| v3 @kind long;
  #L1ec9e4.  v3:= v23 ^& v12 @kind long;
  #L1ec9e8.  v3:= v3 ^| v5 @kind long;
  #L1ec9ea.  v5:= v19 ^& v12 @kind long;
  #L1ec9ee.  v5:= v5 ^| v9 @kind long;
  #L1ec9f0.  v9:= v27 ^& v12 @kind long;
  #L1ec9f4.  v9:= v9 ^| v14 @kind long;
  #L1ec9f6.  v12:= v1 ^< v43 @kind long;
  #L1ec9fa.  v12:= v17 ^| v12 @kind long;
  #L1ec9fe.  v14:= 4294967295L;
  #L1eca08.  v12:= v12 ^& v14 @kind long;
  #L1eca0a.  v7:= 6I;
  #L1eca0c.  v1:= v1 ^> v7 @kind long;
  #L1eca0e.  v7:= 20I;
  #L1eca12.  v17:= v3 ^< v7 @kind long;
  #L1eca16.  v1:= v1 ^| v17 @kind long;
  #L1eca1a.  v1:= v1 ^& v14 @kind long;
  #L1eca1c.  v17:= 12I;
  #L1eca20.  v3:= v3 ^> v17 @kind long;
  #L1eca24.  v17:= 14I;
  #L1eca28.  v17:= v5 ^< v17 @kind long;
  #L1eca2c.  v3:= v3 ^| v17 @kind long;
  #L1eca30.  v3:= v3 ^& v14 @kind long;
  #L1eca32.  v17:= 18I;
  #L1eca36.  v5:= v5 ^> v17 @kind long;
  #L1eca3a.  v17:= 8I;
  #L1eca3e.  v9:= v9 ^< v17 @kind long;
  #L1eca42.  v5:= v5 ^| v9 @kind long;
  #L1eca44.  v5:= v5 ^& v14 @kind long;
  #L1eca46.  v9:= 16I;
  #L1eca4a.  call temp:= `d`(v0, v9) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L1eca50.  v17:= temp @kind wide;
  #L1eca52.  v12:= v12 + v17 @kind long;
  #L1eca56.  v9:= v12 ^& v14 @kind long;
  #L1eca5a.  call temp:= `d`(v0, v7) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L1eca60.  v17:= temp @kind wide;
  #L1eca62.  v1:= v1 + v17 @kind long;
  #L1eca66.  v7:= 32I;
  #L1eca6a.  v12:= v12 ^> v7 @kind long;
  #L1eca6c.  v1:= v1 + v12 @kind long;
  #L1eca6e.  v12:= v1 ^& v14 @kind long;
  #L1eca72.  v8:= 24I;
  #L1eca76.  call temp:= `d`(v0, v8) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L1eca7c.  v17:= temp @kind wide;
  #L1eca7e.  v3:= v3 + v17 @kind long;
  #L1eca82.  v1:= v1 ^> v7 @kind long;
  #L1eca84.  v3:= v3 + v1 @kind long;
  #L1eca86.  v1:= v3 ^& v14 @kind long;
  #L1eca8a.  v8:= 28I;
  #L1eca8e.  call temp:= `d`(v0, v8) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L1eca94.  v17:= temp @kind wide;
  #L1eca96.  v5:= v5 + v17 @kind long;
  #L1eca9a.  v3:= v3 ^> v7 @kind long;
  #L1eca9c.  v5:= v5 + v3 @kind long;
  #L1eca9e.  v3:= v5 ^& v14 @kind long;
  #L1ecaa2.  v0:= 16I;
  #L1ecaa6.  v0:= new `byte`[v0];
  #L1ecaaa.  v5:= 0I;
  #L1ecaac.  call `e`(v0, v9, v5) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @kind static;
  #L1ecab2.  v5:= 4I;
  #L1ecab4.  call `e`(v0, v12, v5) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @kind static;
  #L1ecaba.  v5:= 8I;
  #L1ecabe.  call `e`(v0, v1, v5) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @kind static;
  #L1ecac4.  v1:= 12I;
  #L1ecac8.  call `e`(v0, v3, v1) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @kind static;
  #L1ecace.  return v0 @kind object;
  #L1ecad0.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ecad4.  v1:= "The key length in bytes must be 32." @kind object;
  #L1ecad8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ecade.  throw v0;
}
procedure `void` `b`(`byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/crypto/tink/subtle/j;.b:([B[BI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ecb74.  v0:= length @variable v4;
  #L1ecb76.  v0:= v0 - v5 @kind int;
  #L1ecb78.  v1:= 16I;
  #L1ecb7c.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1ecb82.  v0:= temp;
  #L1ecb84.  v2:= 0I;
  #L1ecb86.  call `arraycopy`(v4, v5, v3, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1ecb8c.  v4:= 1I;
  #L1ecb8e.  v3[v0]:= v4 @kind byte;
  #L1ecb92.  if v0 == v1 then goto L1ecba0;
  #L1ecb96.  v0:= v0 + v4 @kind int;
  #L1ecb98.  v4:= length @variable v3;
  #L1ecb9a.  call `fill`(v3, v0, v4, v2) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L1ecba0.  return @kind void;
}
procedure `long` `c`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1ecaf0.  call temp:= `d`(v2, v3) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L1ecaf6.  v2:= temp @kind wide;
  #L1ecaf8.  v2:= v2 ^> v4 @kind long;
  #L1ecafa.  v0:= 67108863L;
  #L1ecb00.  v2:= v2 ^& v0 @kind long;
  #L1ecb02.  return v2 @kind wide;
}
procedure `long` `d`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1ecb14.  v0:= v2[v3] @kind byte;
  #L1ecb18.  v0:= v0 ^& 255;
  #L1ecb1c.  v1:= v3 + 1;
  #L1ecb20.  v1:= v2[v1] @kind byte;
  #L1ecb24.  v1:= v1 ^& 255;
  #L1ecb28.  v1:= v1 ^< 8;
  #L1ecb2c.  v0:= v0 ^| v1 @kind int;
  #L1ecb2e.  v1:= v3 + 2;
  #L1ecb32.  v1:= v2[v1] @kind byte;
  #L1ecb36.  v1:= v1 ^& 255;
  #L1ecb3a.  v1:= v1 ^< 16;
  #L1ecb3e.  v0:= v0 ^| v1 @kind int;
  #L1ecb40.  v3:= v3 + 3;
  #L1ecb44.  v2:= v2[v3] @kind byte;
  #L1ecb48.  v2:= v2 ^& 255;
  #L1ecb4c.  v2:= v2 ^< 24;
  #L1ecb50.  v2:= v2 ^| v0 @kind int;
  #L1ecb52.  v2:= (`long`) v2 @kind i2l;
  #L1ecb54.  v0:= 4294967295L;
  #L1ecb5e.  v2:= v2 ^& v0 @kind long;
  #L1ecb60.  return v2 @kind wide;
}
procedure `void` `e`(`byte`[] v4 @kind object, `long` v5 , `int` v7 ) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ecbb4.  v0:= 0I;
  #L1ecbb6.  v1:= 4I;
  #L1ecbb8.  if v0 >= v1 then goto L1ecbda;
  #L1ecbbc.  v1:= v7 + v0 @kind int;
  #L1ecbc0.  v2:= 255L;
  #L1ecbc4.  v2:= v2 ^& v5 @kind long;
  #L1ecbc6.  v3:= (`int`) v2 @kind l2i;
  #L1ecbc8.  v2:= (`byte`) v3 @kind i2b;
  #L1ecbca.  v4[v1]:= v2 @kind byte;
  #L1ecbce.  v0:= v0 + 1;
  #L1ecbd2.  v1:= 8I;
  #L1ecbd6.  v5:= v5 ^> v1 @kind long;
  #L1ecbd8.  goto L1ecbb6;
  #L1ecbda.  return @kind void;
}
procedure `void` `f`(`byte`[] v0 @kind object, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/j;.f:([B[B[B)V` @AccessFlag STATIC {
    temp;

  #L1ecbec.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/j;.a:([B[B)[B` @kind static;
  #L1ecbf2.  v0:= temp @kind object;
  #L1ecbf4.  call temp:= `equal`(v0, v2) @signature `Lcom/google/crypto/tink/subtle/Bytes;.equal:([B[B)Z` @kind static;
  #L1ecbfa.  v0:= temp;
  #L1ecbfc.  if v0 == 0 then goto L1ecc02;
  #L1ecc00.  return @kind void;
  #L1ecc02.  v0:= new `java.security.GeneralSecurityException`;
  #L1ecc06.  v1:= "invalid MAC" @kind object;
  #L1ecc0a.  call `<init>`(v0, v1) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ecc10.  throw v0;
}
