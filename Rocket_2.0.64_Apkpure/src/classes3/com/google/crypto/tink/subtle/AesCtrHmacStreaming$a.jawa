record `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a` @kind class @AccessFlag  extends `com.google.crypto.tink.subtle.StreamSegmentDecrypter` @kind interface {
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.a` @AccessFlag PRIVATE;
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.b` @AccessFlag PRIVATE;
  `javax.crypto.Cipher` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.c` @AccessFlag PRIVATE;
  `javax.crypto.Mac` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @AccessFlag PRIVATE;
  `byte`[] `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.e` @AccessFlag PRIVATE;
  `com.google.crypto.tink.subtle.AesCtrHmacStreaming` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L1e0408.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a` v0 @kind this, `com.google.crypto.tink.subtle.AesCtrHmacStreaming` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming$a;.<init>:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e041c.  v0.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` := v1 @kind object;
  #L1e0420.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e0426.  return @kind void;
}
procedure `void` `decryptSegment`(`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object, `int` v7 , `boolean` v8 , `java.nio.ByteBuffer` v9 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming$a;.decryptSegment:(Ljava/nio/ByteBuffer;IZLjava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e0438.  @monitorenter v5
  #L1e043a.  call temp:= `position`(v6) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1e0440.  v0:= temp;
  #L1e0442.  v1:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e0446.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.e` @type ^`byte`[] @kind object;
  #L1e044a.  v3:= (`long`) v7 @kind i2l;
  #L1e044c.  call temp:= `h`(v1, v2, v3, v8) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.h:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;[BJZ)[B` @kind static;
  #L1e0452.  v7:= temp @kind object;
  #L1e0454.  call temp:= `remaining`(v6) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1e045a.  v8:= temp;
  #L1e045c.  v1:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e0460.  call temp:= `i`(v1) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.i:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L1e0466.  v1:= temp;
  #L1e0468.  if v8 < v1 then goto L1e053a;
  #L1e046c.  v1:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e0470.  call temp:= `i`(v1) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.i:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L1e0476.  v1:= temp;
  #L1e0478.  v8:= v8 - v1 @kind int;
  #L1e047a.  v0:= v0 + v8 @kind int;
  #L1e047c.  call temp:= `duplicate`(v6) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e0482.  v8:= temp @kind object;
  #L1e0484.  call temp:= `limit`(v8, v0) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1e048a.  call temp:= `duplicate`(v6) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e0490.  v1:= temp @kind object;
  #L1e0492.  call temp:= `position`(v1, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1e0498.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` @kind object;
  #L1e049c.  v3:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.b` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L1e04a0.  call `init`(v2, v3) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L1e04a6.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` @kind object;
  #L1e04aa.  call `update`(v2, v7) @signature `Ljavax/crypto/Mac;.update:([B)V` @kind virtual;
  #L1e04b0.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` @kind object;
  #L1e04b4.  call `update`(v2, v8) @signature `Ljavax/crypto/Mac;.update:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L1e04ba.  v8:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` @kind object;
  #L1e04be.  call temp:= `doFinal`(v8) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L1e04c4.  v8:= temp @kind object;
  #L1e04c6.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e04ca.  call temp:= `i`(v2) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.i:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L1e04d0.  v2:= temp;
  #L1e04d2.  call temp:= `copyOf`(v8, v2) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1e04d8.  v8:= temp @kind object;
  #L1e04da.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e04de.  call temp:= `i`(v2) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.i:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L1e04e4.  v2:= temp;
  #L1e04e6.  v2:= new `byte`[v2];
  #L1e04ea.  call temp:= `get`(v1, v2) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e04f0.  call temp:= `equal`(v2, v8) @signature `Lcom/google/crypto/tink/subtle/Bytes;.equal:([B[B)Z` @kind static;
  #L1e04f6.  v8:= temp;
  #L1e04f8.  if v8 == 0 then goto L1e052a;
  #L1e04fc.  call temp:= `limit`(v6, v0) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1e0502.  v8:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.c` @type ^`javax.crypto.Cipher` @kind object;
  #L1e0506.  v0:= 1I;
  #L1e0508.  v1:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.a` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L1e050c.  v2:= new `javax.crypto.spec.IvParameterSpec`;
  #L1e0510.  call `<init>`(v2, v7) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L1e0516.  call `init`(v8, v0, v1, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L1e051c.  v7:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.c` @type ^`javax.crypto.Cipher` @kind object;
  #L1e0520.  call temp:= `doFinal`(v7, v6, v9) @signature `Ljavax/crypto/Cipher;.doFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L1e0526.  @monitorexit v5
  #L1e0528.  return @kind void;
  #L1e052a.  v6:= new `java.security.GeneralSecurityException`;
  #L1e052e.  v7:= "Tag mismatch" @kind object;
  #L1e0532.  call `<init>`(v6, v7) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e0538.  throw v6;
  #L1e053a.  v6:= new `java.security.GeneralSecurityException`;
  #L1e053e.  v7:= "Ciphertext too short" @kind object;
  #L1e0542.  call `<init>`(v6, v7) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e0548.  throw v6;
  #L1e054a.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e054c.  @monitorexit v5
  #L1e054e.  throw v6;
  catch `java.lang.Throwable` @[L1e043a..L1e0526] goto L1e054a;
  catch `java.lang.Throwable` @[L1e052a..L1e054a] goto L1e054a;
}
procedure `void` `init`(`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming$a;.init:(Ljava/nio/ByteBuffer;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e0574.  @monitorenter v2
  #L1e0576.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1e057c.  v0:= temp;
  #L1e057e.  v1:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e0582.  call temp:= `getHeaderLength`(v1) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.getHeaderLength:()I` @kind virtual;
  #L1e0588.  v1:= temp;
  #L1e058a.  if v0 != v1 then goto L1e062c;
  #L1e058e.  call temp:= `get`(v3) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L1e0594.  v0:= temp;
  #L1e0596.  v1:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e059a.  call temp:= `getHeaderLength`(v1) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.getHeaderLength:()I` @kind virtual;
  #L1e05a0.  v1:= temp;
  #L1e05a2.  if v0 != v1 then goto L1e061c;
  #L1e05a6.  v0:= 7I;
  #L1e05a8.  v0:= new `byte`[v0];
  #L1e05ac.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.e` @type ^`byte`[] := v0 @kind object;
  #L1e05b0.  v0:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e05b4.  call temp:= `j`(v0) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.j:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L1e05ba.  v0:= temp;
  #L1e05bc.  v0:= new `byte`[v0];
  #L1e05c0.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e05c6.  v1:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.e` @type ^`byte`[] @kind object;
  #L1e05ca.  call temp:= `get`(v3, v1) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e05d0.  v3:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e05d4.  call temp:= `e`(v3, v0, v4) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.e:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;[B[B)[B` @kind static;
  #L1e05da.  v3:= temp @kind object;
  #L1e05dc.  v4:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e05e0.  call temp:= `f`(v4, v3) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.f:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;[B)Ljavax/crypto/spec/SecretKeySpec;` @kind static;
  #L1e05e6.  v4:= temp @kind object;
  #L1e05e8.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.a` @type ^`javax.crypto.spec.SecretKeySpec` := v4 @kind object;
  #L1e05ec.  v4:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e05f0.  call temp:= `g`(v4, v3) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.g:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;[B)Ljavax/crypto/spec/SecretKeySpec;` @kind static;
  #L1e05f6.  v3:= temp @kind object;
  #L1e05f8.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.b` @type ^`javax.crypto.spec.SecretKeySpec` := v3 @kind object;
  #L1e05fc.  call temp:= `a`() @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.a:()Ljavax/crypto/Cipher;` @kind static;
  #L1e0602.  v3:= temp @kind object;
  #L1e0604.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.c` @type ^`javax.crypto.Cipher` := v3 @kind object;
  #L1e0608.  v3:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L1e060c.  call temp:= `b`(v3) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.b:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)Ljavax/crypto/Mac;` @kind static;
  #L1e0612.  v3:= temp @kind object;
  #L1e0614.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` := v3 @kind object;
  #L1e0618.  @monitorexit v2
  #L1e061a.  return @kind void;
  #L1e061c.  v3:= new `java.security.GeneralSecurityException`;
  #L1e0620.  v4:= "Invalid ciphertext" @kind object;
  #L1e0624.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e062a.  throw v3;
  #L1e062c.  v3:= new `java.security.InvalidAlgorithmParameterException`;
  #L1e0630.  v4:= "Invalid header length" @kind object;
  #L1e0634.  call `<init>`(v3, v4) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e063a.  throw v3;
  #L1e063c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e063e.  @monitorexit v2
  #L1e0640.  throw v3;
  catch `java.lang.Throwable` @[L1e0576..L1e0618] goto L1e063c;
  catch `java.lang.Throwable` @[L1e061c..L1e063c] goto L1e063c;
}
