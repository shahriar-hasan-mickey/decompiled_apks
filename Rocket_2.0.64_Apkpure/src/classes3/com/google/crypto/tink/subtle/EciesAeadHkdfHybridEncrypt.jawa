record `com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.HybridEncrypt` @kind interface {
  `com.google.crypto.tink.subtle.EciesHkdfSenderKem` `com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.c` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` `com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.d` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.subtle.EciesAeadHkdfDemHelper` `com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.e` @AccessFlag PRIVATE_FINAL;
}
global `byte`[] `@@com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/EciesAeadHkdfHybridEncrypt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e4c78.  v0:= 0I;
  #L1e4c7a.  v0:= new `byte`[v0];
  #L1e4c7e.  `@@com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.f` @type ^`byte`[] := v0 @kind object;
  #L1e4c82.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt` v1 @kind this, `java.security.interfaces.ECPublicKey` v2 @kind object, `byte`[] v3 @kind object, `java.lang.String` v4 @kind object, `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` v5 @kind object, `com.google.crypto.tink.subtle.EciesAeadHkdfDemHelper` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/EciesAeadHkdfHybridEncrypt;.<init>:(Ljava/security/interfaces/ECPublicKey;[BLjava/lang/String;Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;Lcom/google/crypto/tink/subtle/EciesAeadHkdfDemHelper;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e4c94.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e4c9a.  call `b`(v2) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.b:(Ljava/security/interfaces/ECPublicKey;)V` @kind static;
  #L1e4ca0.  v0:= new `com.google.crypto.tink.subtle.EciesHkdfSenderKem`;
  #L1e4ca4.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/subtle/EciesHkdfSenderKem;.<init>:(Ljava/security/interfaces/ECPublicKey;)V` @kind direct;
  #L1e4caa.  v1.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.a` @type ^`com.google.crypto.tink.subtle.EciesHkdfSenderKem` := v0 @kind object;
  #L1e4cae.  v1.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.c` @type ^`byte`[] := v3 @kind object;
  #L1e4cb2.  v1.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.b` @type ^`java.lang.String` := v4 @kind object;
  #L1e4cb6.  v1.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.d` @type ^`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` := v5 @kind object;
  #L1e4cba.  v1.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.e` @type ^`com.google.crypto.tink.subtle.EciesAeadHkdfDemHelper` := v6 @kind object;
  #L1e4cbe.  return @kind void;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lcom/google/crypto/tink/subtle/EciesAeadHkdfHybridEncrypt;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e4bf0.  v0:= v6.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.a` @type ^`com.google.crypto.tink.subtle.EciesHkdfSenderKem` @kind object;
  #L1e4bf4.  v1:= v6.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.b` @type ^`java.lang.String` @kind object;
  #L1e4bf8.  v2:= v6.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.c` @type ^`byte`[] @kind object;
  #L1e4bfc.  v3:= v6.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.e` @type ^`com.google.crypto.tink.subtle.EciesAeadHkdfDemHelper` @kind object;
  #L1e4c00.  call temp:= `getSymmetricKeySizeInBytes`(v3) @signature `Lcom/google/crypto/tink/subtle/EciesAeadHkdfDemHelper;.getSymmetricKeySizeInBytes:()I` @kind interface;
  #L1e4c06.  v4:= temp;
  #L1e4c08.  v5:= v6.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.d` @type ^`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` @kind object;
  #L1e4c0c.  v3:= v8 @kind object;
  #L1e4c0e.  call temp:= `generateKey`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/subtle/EciesHkdfSenderKem;.generateKey:(Ljava/lang/String;[B[BILcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;)Lcom/google/crypto/tink/subtle/EciesHkdfSenderKem$KemKey;` @kind virtual;
  #L1e4c14.  v8:= temp @kind object;
  #L1e4c16.  v0:= v6.`com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.e` @type ^`com.google.crypto.tink.subtle.EciesAeadHkdfDemHelper` @kind object;
  #L1e4c1a.  call temp:= `getSymmetricKey`(v8) @signature `Lcom/google/crypto/tink/subtle/EciesHkdfSenderKem$KemKey;.getSymmetricKey:()[B` @kind virtual;
  #L1e4c20.  v1:= temp @kind object;
  #L1e4c22.  call temp:= `getAead`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EciesAeadHkdfDemHelper;.getAead:([B)Lcom/google/crypto/tink/Aead;` @kind interface;
  #L1e4c28.  v0:= temp @kind object;
  #L1e4c2a.  v1:= `@@com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt.f` @type ^`byte`[] @kind object;
  #L1e4c2e.  call temp:= `encrypt`(v0, v7, v1) @signature `Lcom/google/crypto/tink/Aead;.encrypt:([B[B)[B` @kind interface;
  #L1e4c34.  v7:= temp @kind object;
  #L1e4c36.  call temp:= `getKemBytes`(v8) @signature `Lcom/google/crypto/tink/subtle/EciesHkdfSenderKem$KemKey;.getKemBytes:()[B` @kind virtual;
  #L1e4c3c.  v8:= temp @kind object;
  #L1e4c3e.  v0:= length @variable v8;
  #L1e4c40.  v1:= length @variable v7;
  #L1e4c42.  v0:= v0 + v1 @kind int;
  #L1e4c44.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L1e4c4a.  v0:= temp @kind object;
  #L1e4c4c.  call temp:= `put`(v0, v8) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e4c52.  v8:= temp @kind object;
  #L1e4c54.  call temp:= `put`(v8, v7) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e4c5a.  v7:= temp @kind object;
  #L1e4c5c.  call temp:= `array`(v7) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1e4c62.  v7:= temp @kind object;
  #L1e4c64.  return v7 @kind object;
}
