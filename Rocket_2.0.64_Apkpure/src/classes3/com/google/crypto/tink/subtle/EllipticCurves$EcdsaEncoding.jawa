record `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` `@@com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding.DER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` `@@com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding.IEEE_P1363` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`[] `@@com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e89c0.  v0:= new `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`;
  #L1e89c4.  v1:= "IEEE_P1363" @kind object;
  #L1e89c8.  v2:= 0I;
  #L1e89ca.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e89d0.  `@@com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding.IEEE_P1363` @type ^`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` := v0 @kind object;
  #L1e89d4.  v1:= new `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`;
  #L1e89d8.  v3:= "DER" @kind object;
  #L1e89dc.  v4:= 1I;
  #L1e89de.  call `<init>`(v1, v3, v4) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e89e4.  `@@com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding.DER` @type ^`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` := v1 @kind object;
  #L1e89e8.  v3:= 2I;
  #L1e89ea.  v3:= new `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`[v3];
  #L1e89ee.  v3[v2]:= v0 @kind object;
  #L1e89f2.  v3[v4]:= v1 @kind object;
  #L1e89f6.  `@@com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding.a` @type ^`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`[] := v3 @kind object;
  #L1e89fa.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1e8a0c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e8a12.  return @kind void;
}
procedure `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;.valueOf:(Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1e8978.  v0:= constclass @type ^`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` @kind object;
  #L1e897c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1e8982.  v1:= temp @kind object;
  #L1e8984.  v1:= (`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`) v1 @kind object;
  #L1e8988.  return v1 @kind object;
}
procedure `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`[] `values`() @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;.values:()[Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1e899c.  v0:= `@@com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding.a` @type ^`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`[] @kind object;
  #L1e89a0.  call temp:= `clone`(v0) @signature `[Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1e89a6.  v0:= temp @kind object;
  #L1e89a8.  v0:= (`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding`[]) v0 @kind object;
  #L1e89ac.  return v0 @kind object;
}
