record `com.google.crypto.tink.subtle.g` @kind class @AccessFlag FINAL {
}
global `long`[] `@@com.google.crypto.tink.subtle.g.a` @AccessFlag STATIC_FINAL;
global `long`[] `@@com.google.crypto.tink.subtle.g.b` @AccessFlag STATIC_FINAL;
global `long`[] `@@com.google.crypto.tink.subtle.g.c` @AccessFlag STATIC_FINAL;
global `com.google.crypto.tink.subtle.f$a`[][] `@@com.google.crypto.tink.subtle.g.d` @AccessFlag STATIC_FINAL;
global `com.google.crypto.tink.subtle.f$a`[] `@@com.google.crypto.tink.subtle.g.e` @AccessFlag STATIC_FINAL;
global `java.math.BigInteger` `@@com.google.crypto.tink.subtle.g.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@com.google.crypto.tink.subtle.g.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@com.google.crypto.tink.subtle.g.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@com.google.crypto.tink.subtle.g.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1e58c4.  v0:= 2L;
  #L1e58c8.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e58ce.  v2:= temp @kind object;
  #L1e58d0.  v3:= 255I;
  #L1e58d4.  call temp:= `pow`(v2, v3) @signature `Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;` @kind virtual;
  #L1e58da.  v2:= temp @kind object;
  #L1e58dc.  v3:= 19L;
  #L1e58e0.  call temp:= `valueOf`(v3) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e58e6.  v3:= temp @kind object;
  #L1e58e8.  call temp:= `subtract`(v2, v3) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e58ee.  v2:= temp @kind object;
  #L1e58f0.  `@@com.google.crypto.tink.subtle.g.f` @type ^`java.math.BigInteger` := v2 @kind object;
  #L1e58f4.  v3:= -121665L;
  #L1e58fa.  call temp:= `valueOf`(v3) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e5900.  v3:= temp @kind object;
  #L1e5902.  v4:= 121666L;
  #L1e5908.  call temp:= `valueOf`(v4) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e590e.  v4:= temp @kind object;
  #L1e5910.  call temp:= `modInverse`(v4, v2) @signature `Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5916.  v4:= temp @kind object;
  #L1e5918.  call temp:= `multiply`(v3, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e591e.  v3:= temp @kind object;
  #L1e5920.  call temp:= `mod`(v3, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5926.  v3:= temp @kind object;
  #L1e5928.  `@@com.google.crypto.tink.subtle.g.g` @type ^`java.math.BigInteger` := v3 @kind object;
  #L1e592c.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e5932.  v4:= temp @kind object;
  #L1e5934.  call temp:= `multiply`(v4, v3) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e593a.  v4:= temp @kind object;
  #L1e593c.  call temp:= `mod`(v4, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5942.  v4:= temp @kind object;
  #L1e5944.  `@@com.google.crypto.tink.subtle.g.h` @type ^`java.math.BigInteger` := v4 @kind object;
  #L1e5948.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e594e.  v0:= temp @kind object;
  #L1e5950.  v1:= `@@java.math.BigInteger.ONE` @type ^`java.math.BigInteger` @kind object;
  #L1e5954.  call temp:= `subtract`(v2, v1) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e595a.  v1:= temp @kind object;
  #L1e595c.  v5:= 4L;
  #L1e5960.  call temp:= `valueOf`(v5) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e5966.  v7:= temp @kind object;
  #L1e5968.  call temp:= `divide`(v1, v7) @signature `Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e596e.  v1:= temp @kind object;
  #L1e5970.  call temp:= `modPow`(v0, v1, v2) @signature `Ljava/math/BigInteger;.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5976.  v0:= temp @kind object;
  #L1e5978.  `@@com.google.crypto.tink.subtle.g.i` @type ^`java.math.BigInteger` := v0 @kind object;
  #L1e597c.  v1:= new `com.google.crypto.tink.subtle.g$b`;
  #L1e5980.  v7:= 0I;
  #L1e5982.  call `<init>`(v1, v7) @signature `Lcom/google/crypto/tink/subtle/g$b;.<init>:(Lcom/google/crypto/tink/subtle/g$a;)V` @kind direct;
  #L1e5988.  call temp:= `valueOf`(v5) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e598e.  v5:= temp @kind object;
  #L1e5990.  v6:= 5L;
  #L1e5994.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e599a.  v6:= temp @kind object;
  #L1e599c.  call temp:= `modInverse`(v6, v2) @signature `Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e59a2.  v6:= temp @kind object;
  #L1e59a4.  call temp:= `multiply`(v5, v6) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e59aa.  v5:= temp @kind object;
  #L1e59ac.  call temp:= `mod`(v5, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e59b2.  v2:= temp @kind object;
  #L1e59b4.  call temp:= `b`(v1, v2) @signature `Lcom/google/crypto/tink/subtle/g$b;.b:(Lcom/google/crypto/tink/subtle/g$b;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind static;
  #L1e59ba.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e59c0.  v2:= temp @kind object;
  #L1e59c2.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/subtle/g;.c:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind static;
  #L1e59c8.  v2:= temp @kind object;
  #L1e59ca.  call temp:= `d`(v1, v2) @signature `Lcom/google/crypto/tink/subtle/g$b;.d:(Lcom/google/crypto/tink/subtle/g$b;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind static;
  #L1e59d0.  call temp:= `d`(v3) @signature `Lcom/google/crypto/tink/subtle/g;.d:(Ljava/math/BigInteger;)[B` @kind static;
  #L1e59d6.  v2:= temp @kind object;
  #L1e59d8.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/subtle/h;.c:([B)[J` @kind static;
  #L1e59de.  v2:= temp @kind object;
  #L1e59e0.  `@@com.google.crypto.tink.subtle.g.a` @type ^`long`[] := v2 @kind object;
  #L1e59e4.  call temp:= `d`(v4) @signature `Lcom/google/crypto/tink/subtle/g;.d:(Ljava/math/BigInteger;)[B` @kind static;
  #L1e59ea.  v2:= temp @kind object;
  #L1e59ec.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/subtle/h;.c:([B)[J` @kind static;
  #L1e59f2.  v2:= temp @kind object;
  #L1e59f4.  `@@com.google.crypto.tink.subtle.g.b` @type ^`long`[] := v2 @kind object;
  #L1e59f8.  call temp:= `d`(v0) @signature `Lcom/google/crypto/tink/subtle/g;.d:(Ljava/math/BigInteger;)[B` @kind static;
  #L1e59fe.  v0:= temp @kind object;
  #L1e5a00.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/subtle/h;.c:([B)[J` @kind static;
  #L1e5a06.  v0:= temp @kind object;
  #L1e5a08.  `@@com.google.crypto.tink.subtle.g.c` @type ^`long`[] := v0 @kind object;
  #L1e5a0c.  v0:= 2I;
  #L1e5a0e.  v0:= new `int`[v0];
  #L1e5a12.  goto L1e5ab8;
  #L1e5a18.  v2:= constclass @type ^`com.google.crypto.tink.subtle.f$a` @kind object;
  #L1e5a1c.  call temp:= `newInstance`(v2, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;` @kind static;
  #L1e5a22.  v0:= temp @kind object;
  #L1e5a24.  v0:= (`com.google.crypto.tink.subtle.f$a`[][]) v0 @kind object;
  #L1e5a28.  `@@com.google.crypto.tink.subtle.g.d` @type ^`com.google.crypto.tink.subtle.f$a`[][] := v0 @kind object;
  #L1e5a2c.  v0:= 0I;
  #L1e5a2e.  v3:= v1 @kind object;
  #L1e5a30.  v2:= 0I;
  #L1e5a32.  v4:= 32I;
  #L1e5a36.  v5:= 8I;
  #L1e5a3a.  if v2 >= v4 then goto L1e5a82;
  #L1e5a3e.  v6:= v3 @kind object;
  #L1e5a40.  v4:= 0I;
  #L1e5a42.  if v4 >= v5 then goto L1e5a68;
  #L1e5a46.  v7:= `@@com.google.crypto.tink.subtle.g.d` @type ^`com.google.crypto.tink.subtle.f$a`[][] @kind object;
  #L1e5a4a.  v7:= v7[v2] @kind object;
  #L1e5a4e.  call temp:= `b`(v6) @signature `Lcom/google/crypto/tink/subtle/g;.b:(Lcom/google/crypto/tink/subtle/g$b;)Lcom/google/crypto/tink/subtle/f$a;` @kind static;
  #L1e5a54.  v8:= temp @kind object;
  #L1e5a56.  v7[v4]:= v8 @kind object;
  #L1e5a5a.  call temp:= `a`(v6, v3) @signature `Lcom/google/crypto/tink/subtle/g;.a:(Lcom/google/crypto/tink/subtle/g$b;Lcom/google/crypto/tink/subtle/g$b;)Lcom/google/crypto/tink/subtle/g$b;` @kind static;
  #L1e5a60.  v6:= temp @kind object;
  #L1e5a62.  v4:= v4 + 1;
  #L1e5a66.  goto L1e5a42;
  #L1e5a68.  v4:= 0I;
  #L1e5a6a.  if v4 >= v5 then goto L1e5a7c;
  #L1e5a6e.  call temp:= `a`(v3, v3) @signature `Lcom/google/crypto/tink/subtle/g;.a:(Lcom/google/crypto/tink/subtle/g$b;Lcom/google/crypto/tink/subtle/g$b;)Lcom/google/crypto/tink/subtle/g$b;` @kind static;
  #L1e5a74.  v3:= temp @kind object;
  #L1e5a76.  v4:= v4 + 1;
  #L1e5a7a.  goto L1e5a6a;
  #L1e5a7c.  v2:= v2 + 1;
  #L1e5a80.  goto L1e5a32;
  #L1e5a82.  call temp:= `a`(v1, v1) @signature `Lcom/google/crypto/tink/subtle/g;.a:(Lcom/google/crypto/tink/subtle/g$b;Lcom/google/crypto/tink/subtle/g$b;)Lcom/google/crypto/tink/subtle/g$b;` @kind static;
  #L1e5a88.  v2:= temp @kind object;
  #L1e5a8a.  v3:= new `com.google.crypto.tink.subtle.f$a`[v5];
  #L1e5a8e.  `@@com.google.crypto.tink.subtle.g.e` @type ^`com.google.crypto.tink.subtle.f$a`[] := v3 @kind object;
  #L1e5a92.  if v0 >= v5 then goto L1e5ab4;
  #L1e5a96.  v3:= `@@com.google.crypto.tink.subtle.g.e` @type ^`com.google.crypto.tink.subtle.f$a`[] @kind object;
  #L1e5a9a.  call temp:= `b`(v1) @signature `Lcom/google/crypto/tink/subtle/g;.b:(Lcom/google/crypto/tink/subtle/g$b;)Lcom/google/crypto/tink/subtle/f$a;` @kind static;
  #L1e5aa0.  v4:= temp @kind object;
  #L1e5aa2.  v3[v0]:= v4 @kind object;
  #L1e5aa6.  call temp:= `a`(v1, v2) @signature `Lcom/google/crypto/tink/subtle/g;.a:(Lcom/google/crypto/tink/subtle/g$b;Lcom/google/crypto/tink/subtle/g$b;)Lcom/google/crypto/tink/subtle/g$b;` @kind static;
  #L1e5aac.  v1:= temp @kind object;
  #L1e5aae.  v0:= v0 + 1;
  #L1e5ab2.  goto L1e5a92;
  #L1e5ab4.  return @kind void;
  #L1e5ab6.  
  #L1e5ab8.  v0:= (32I, 8I) @kind object;
  #L1e5ac7.  goto L1e5a18;
}
procedure `com.google.crypto.tink.subtle.g$b` `a`(`com.google.crypto.tink.subtle.g$b` v6 @kind object, `com.google.crypto.tink.subtle.g$b` v7 @kind object) @signature `Lcom/google/crypto/tink/subtle/g;.a:(Lcom/google/crypto/tink/subtle/g$b;Lcom/google/crypto/tink/subtle/g$b;)Lcom/google/crypto/tink/subtle/g$b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e56b8.  v0:= new `com.google.crypto.tink.subtle.g$b`;
  #L1e56bc.  v1:= 0I;
  #L1e56be.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/g$b;.<init>:(Lcom/google/crypto/tink/subtle/g$a;)V` @kind direct;
  #L1e56c4.  v1:= `@@com.google.crypto.tink.subtle.g.g` @type ^`java.math.BigInteger` @kind object;
  #L1e56c8.  call temp:= `c`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e56ce.  v2:= temp @kind object;
  #L1e56d0.  call temp:= `c`(v7) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e56d6.  v3:= temp @kind object;
  #L1e56d8.  call temp:= `multiply`(v2, v3) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e56de.  v2:= temp @kind object;
  #L1e56e0.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e56e6.  v3:= temp @kind object;
  #L1e56e8.  call temp:= `multiply`(v2, v3) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e56ee.  v2:= temp @kind object;
  #L1e56f0.  call temp:= `a`(v7) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e56f6.  v3:= temp @kind object;
  #L1e56f8.  call temp:= `multiply`(v2, v3) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e56fe.  v2:= temp @kind object;
  #L1e5700.  call temp:= `multiply`(v1, v2) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5706.  v1:= temp @kind object;
  #L1e5708.  v2:= `@@com.google.crypto.tink.subtle.g.f` @type ^`java.math.BigInteger` @kind object;
  #L1e570c.  call temp:= `mod`(v1, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5712.  v1:= temp @kind object;
  #L1e5714.  call temp:= `c`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e571a.  v3:= temp @kind object;
  #L1e571c.  call temp:= `a`(v7) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e5722.  v4:= temp @kind object;
  #L1e5724.  call temp:= `multiply`(v3, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e572a.  v3:= temp @kind object;
  #L1e572c.  call temp:= `c`(v7) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e5732.  v4:= temp @kind object;
  #L1e5734.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e573a.  v5:= temp @kind object;
  #L1e573c.  call temp:= `multiply`(v4, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5742.  v4:= temp @kind object;
  #L1e5744.  call temp:= `add`(v3, v4) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e574a.  v3:= temp @kind object;
  #L1e574c.  v4:= `@@java.math.BigInteger.ONE` @type ^`java.math.BigInteger` @kind object;
  #L1e5750.  call temp:= `add`(v4, v1) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5756.  v5:= temp @kind object;
  #L1e5758.  call temp:= `modInverse`(v5, v2) @signature `Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e575e.  v5:= temp @kind object;
  #L1e5760.  call temp:= `multiply`(v3, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5766.  v3:= temp @kind object;
  #L1e5768.  call temp:= `mod`(v3, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e576e.  v3:= temp @kind object;
  #L1e5770.  call temp:= `d`(v0, v3) @signature `Lcom/google/crypto/tink/subtle/g$b;.d:(Lcom/google/crypto/tink/subtle/g$b;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind static;
  #L1e5776.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e577c.  v3:= temp @kind object;
  #L1e577e.  call temp:= `a`(v7) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e5784.  v5:= temp @kind object;
  #L1e5786.  call temp:= `multiply`(v3, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e578c.  v3:= temp @kind object;
  #L1e578e.  call temp:= `c`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e5794.  v6:= temp @kind object;
  #L1e5796.  call temp:= `c`(v7) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e579c.  v7:= temp @kind object;
  #L1e579e.  call temp:= `multiply`(v6, v7) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e57a4.  v6:= temp @kind object;
  #L1e57a6.  call temp:= `add`(v3, v6) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e57ac.  v6:= temp @kind object;
  #L1e57ae.  call temp:= `subtract`(v4, v1) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e57b4.  v7:= temp @kind object;
  #L1e57b6.  call temp:= `modInverse`(v7, v2) @signature `Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e57bc.  v7:= temp @kind object;
  #L1e57be.  call temp:= `multiply`(v6, v7) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e57c4.  v6:= temp @kind object;
  #L1e57c6.  call temp:= `mod`(v6, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e57cc.  v6:= temp @kind object;
  #L1e57ce.  call temp:= `b`(v0, v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.b:(Lcom/google/crypto/tink/subtle/g$b;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind static;
  #L1e57d4.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.f$a` `b`(`com.google.crypto.tink.subtle.g$b` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/g;.b:(Lcom/google/crypto/tink/subtle/g$b;)Lcom/google/crypto/tink/subtle/f$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e55fc.  v0:= new `com.google.crypto.tink.subtle.f$a`;
  #L1e5600.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e5606.  v1:= temp @kind object;
  #L1e5608.  call temp:= `c`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e560e.  v2:= temp @kind object;
  #L1e5610.  call temp:= `add`(v1, v2) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5616.  v1:= temp @kind object;
  #L1e5618.  v2:= `@@com.google.crypto.tink.subtle.g.f` @type ^`java.math.BigInteger` @kind object;
  #L1e561c.  call temp:= `mod`(v1, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5622.  v1:= temp @kind object;
  #L1e5624.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/subtle/g;.d:(Ljava/math/BigInteger;)[B` @kind static;
  #L1e562a.  v1:= temp @kind object;
  #L1e562c.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/subtle/h;.c:([B)[J` @kind static;
  #L1e5632.  v1:= temp @kind object;
  #L1e5634.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e563a.  v3:= temp @kind object;
  #L1e563c.  call temp:= `c`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e5642.  v4:= temp @kind object;
  #L1e5644.  call temp:= `subtract`(v3, v4) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e564a.  v3:= temp @kind object;
  #L1e564c.  call temp:= `mod`(v3, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5652.  v3:= temp @kind object;
  #L1e5654.  call temp:= `d`(v3) @signature `Lcom/google/crypto/tink/subtle/g;.d:(Ljava/math/BigInteger;)[B` @kind static;
  #L1e565a.  v3:= temp @kind object;
  #L1e565c.  call temp:= `c`(v3) @signature `Lcom/google/crypto/tink/subtle/h;.c:([B)[J` @kind static;
  #L1e5662.  v3:= temp @kind object;
  #L1e5664.  v4:= `@@com.google.crypto.tink.subtle.g.h` @type ^`java.math.BigInteger` @kind object;
  #L1e5668.  call temp:= `c`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.c:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e566e.  v5:= temp @kind object;
  #L1e5670.  call temp:= `multiply`(v4, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5676.  v4:= temp @kind object;
  #L1e5678.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/subtle/g$b;.a:(Lcom/google/crypto/tink/subtle/g$b;)Ljava/math/BigInteger;` @kind static;
  #L1e567e.  v6:= temp @kind object;
  #L1e5680.  call temp:= `multiply`(v4, v6) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5686.  v6:= temp @kind object;
  #L1e5688.  call temp:= `mod`(v6, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e568e.  v6:= temp @kind object;
  #L1e5690.  call temp:= `d`(v6) @signature `Lcom/google/crypto/tink/subtle/g;.d:(Ljava/math/BigInteger;)[B` @kind static;
  #L1e5696.  v6:= temp @kind object;
  #L1e5698.  call temp:= `c`(v6) @signature `Lcom/google/crypto/tink/subtle/h;.c:([B)[J` @kind static;
  #L1e569e.  v6:= temp @kind object;
  #L1e56a0.  call `<init>`(v0, v1, v3, v6) @signature `Lcom/google/crypto/tink/subtle/f$a;.<init>:([J[J[J)V` @kind direct;
  #L1e56a6.  return v0 @kind object;
}
procedure `java.math.BigInteger` `c`(`java.math.BigInteger` v5 @kind object) @signature `Lcom/google/crypto/tink/subtle/g;.c:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e57e8.  v0:= 2I;
  #L1e57ea.  call temp:= `pow`(v5, v0) @signature `Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;` @kind virtual;
  #L1e57f0.  v1:= temp @kind object;
  #L1e57f2.  v2:= `@@java.math.BigInteger.ONE` @type ^`java.math.BigInteger` @kind object;
  #L1e57f6.  call temp:= `subtract`(v1, v2) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e57fc.  v1:= temp @kind object;
  #L1e57fe.  v3:= `@@com.google.crypto.tink.subtle.g.g` @type ^`java.math.BigInteger` @kind object;
  #L1e5802.  call temp:= `pow`(v5, v0) @signature `Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;` @kind virtual;
  #L1e5808.  v5:= temp @kind object;
  #L1e580a.  call temp:= `multiply`(v3, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5810.  v5:= temp @kind object;
  #L1e5812.  call temp:= `add`(v5, v2) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5818.  v5:= temp @kind object;
  #L1e581a.  v2:= `@@com.google.crypto.tink.subtle.g.f` @type ^`java.math.BigInteger` @kind object;
  #L1e581e.  call temp:= `modInverse`(v5, v2) @signature `Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5824.  v5:= temp @kind object;
  #L1e5826.  call temp:= `multiply`(v1, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e582c.  v5:= temp @kind object;
  #L1e582e.  v3:= 3L;
  #L1e5832.  call temp:= `valueOf`(v3) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e5838.  v1:= temp @kind object;
  #L1e583a.  call temp:= `add`(v2, v1) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5840.  v1:= temp @kind object;
  #L1e5842.  v3:= 8L;
  #L1e5846.  call temp:= `valueOf`(v3) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1e584c.  v3:= temp @kind object;
  #L1e584e.  call temp:= `divide`(v1, v3) @signature `Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5854.  v1:= temp @kind object;
  #L1e5856.  call temp:= `modPow`(v5, v1, v2) @signature `Ljava/math/BigInteger;.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e585c.  v1:= temp @kind object;
  #L1e585e.  call temp:= `pow`(v1, v0) @signature `Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;` @kind virtual;
  #L1e5864.  v0:= temp @kind object;
  #L1e5866.  call temp:= `subtract`(v0, v5) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e586c.  v5:= temp @kind object;
  #L1e586e.  call temp:= `mod`(v5, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5874.  v5:= temp @kind object;
  #L1e5876.  v0:= `@@java.math.BigInteger.ZERO` @type ^`java.math.BigInteger` @kind object;
  #L1e587a.  call temp:= `equals`(v5, v0) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e5880.  v5:= temp;
  #L1e5882.  if v5 != 0 then goto L1e589a;
  #L1e5886.  v5:= `@@com.google.crypto.tink.subtle.g.i` @type ^`java.math.BigInteger` @kind object;
  #L1e588a.  call temp:= `multiply`(v1, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5890.  v5:= temp @kind object;
  #L1e5892.  call temp:= `mod`(v5, v2) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e5898.  v1:= temp @kind object;
  #L1e589a.  v5:= 0I;
  #L1e589c.  call temp:= `testBit`(v1, v5) @signature `Ljava/math/BigInteger;.testBit:(I)Z` @kind virtual;
  #L1e58a2.  v5:= temp;
  #L1e58a4.  if v5 == 0 then goto L1e58b0;
  #L1e58a8.  call temp:= `subtract`(v2, v1) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1e58ae.  v1:= temp @kind object;
  #L1e58b0.  return v1 @kind object;
}
procedure `byte`[] `d`(`java.math.BigInteger` v4 @kind object) @signature `Lcom/google/crypto/tink/subtle/g;.d:(Ljava/math/BigInteger;)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e55a4.  v0:= 32I;
  #L1e55a8.  v1:= new `byte`[v0];
  #L1e55ac.  call temp:= `toByteArray`(v4) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L1e55b2.  v4:= temp @kind object;
  #L1e55b4.  v2:= length @variable v4;
  #L1e55b6.  v0:= v0 - v2 @kind int;
  #L1e55b8.  v2:= length @variable v4;
  #L1e55ba.  v3:= 0I;
  #L1e55bc.  call `arraycopy`(v4, v3, v1, v0, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1e55c2.  v4:= 16I;
  #L1e55c6.  if v3 >= v4 then goto L1e55e8;
  #L1e55ca.  v4:= v1[v3] @kind byte;
  #L1e55ce.  v0:= v3 - 32;
  #L1e55d2.  v0:= v0 + -1;
  #L1e55d6.  v2:= v1[v0] @kind byte;
  #L1e55da.  v1[v3]:= v2 @kind byte;
  #L1e55de.  v1[v0]:= v4 @kind byte;
  #L1e55e2.  v3:= v3 + 1;
  #L1e55e6.  goto L1e55c2;
  #L1e55e8.  return v1 @kind object;
}
