record `com.google.crypto.tink.subtle.Ed25519Sign$KeyPair` @kind class @AccessFlag PUBLIC_FINAL {
  `byte`[] `com.google.crypto.tink.subtle.Ed25519Sign$KeyPair.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.google.crypto.tink.subtle.Ed25519Sign$KeyPair.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.Ed25519Sign$KeyPair` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/Ed25519Sign$KeyPair;.<init>:([B[B)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1e5b50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e5b56.  v0.`com.google.crypto.tink.subtle.Ed25519Sign$KeyPair.a` @type ^`byte`[] := v1 @kind object;
  #L1e5b5a.  v0.`com.google.crypto.tink.subtle.Ed25519Sign$KeyPair.b` @type ^`byte`[] := v2 @kind object;
  #L1e5b5e.  return @kind void;
}
procedure `com.google.crypto.tink.subtle.Ed25519Sign$KeyPair` `newKeyPair`() @signature `Lcom/google/crypto/tink/subtle/Ed25519Sign$KeyPair;.newKeyPair:()Lcom/google/crypto/tink/subtle/Ed25519Sign$KeyPair;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1e5b18.  v0:= 32I;
  #L1e5b1c.  call temp:= `randBytes`(v0) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L1e5b22.  v0:= temp @kind object;
  #L1e5b24.  call temp:= `j`(v0) @signature `Lcom/google/crypto/tink/subtle/f;.j:([B)[B` @kind static;
  #L1e5b2a.  v1:= temp @kind object;
  #L1e5b2c.  call temp:= `u`(v1) @signature `Lcom/google/crypto/tink/subtle/f;.u:([B)[B` @kind static;
  #L1e5b32.  v1:= temp @kind object;
  #L1e5b34.  v2:= new `com.google.crypto.tink.subtle.Ed25519Sign$KeyPair`;
  #L1e5b38.  call `<init>`(v2, v1, v0) @signature `Lcom/google/crypto/tink/subtle/Ed25519Sign$KeyPair;.<init>:([B[B)V` @kind direct;
  #L1e5b3e.  return v2 @kind object;
}
procedure `byte`[] `getPrivateKey`(`com.google.crypto.tink.subtle.Ed25519Sign$KeyPair` v2 @kind this) @signature `Lcom/google/crypto/tink/subtle/Ed25519Sign$KeyPair;.getPrivateKey:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e5ad8.  v0:= v2.`com.google.crypto.tink.subtle.Ed25519Sign$KeyPair.b` @type ^`byte`[] @kind object;
  #L1e5adc.  v1:= length @variable v0;
  #L1e5ade.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1e5ae4.  v0:= temp @kind object;
  #L1e5ae6.  return v0 @kind object;
}
procedure `byte`[] `getPublicKey`(`com.google.crypto.tink.subtle.Ed25519Sign$KeyPair` v2 @kind this) @signature `Lcom/google/crypto/tink/subtle/Ed25519Sign$KeyPair;.getPublicKey:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e5af8.  v0:= v2.`com.google.crypto.tink.subtle.Ed25519Sign$KeyPair.a` @type ^`byte`[] @kind object;
  #L1e5afc.  v1:= length @variable v0;
  #L1e5afe.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1e5b04.  v0:= temp @kind object;
  #L1e5b06.  return v0 @kind object;
}
