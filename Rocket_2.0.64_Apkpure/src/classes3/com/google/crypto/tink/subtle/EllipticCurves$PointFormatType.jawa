record `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.COMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.UNCOMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`[] `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1e8a6c.  v0:= new `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`;
  #L1e8a70.  v1:= "UNCOMPRESSED" @kind object;
  #L1e8a74.  v2:= 0I;
  #L1e8a76.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e8a7c.  `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.UNCOMPRESSED` @type ^`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` := v0 @kind object;
  #L1e8a80.  v1:= new `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`;
  #L1e8a84.  v3:= "COMPRESSED" @kind object;
  #L1e8a88.  v4:= 1I;
  #L1e8a8a.  call `<init>`(v1, v3, v4) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e8a90.  `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.COMPRESSED` @type ^`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` := v1 @kind object;
  #L1e8a94.  v3:= new `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`;
  #L1e8a98.  v5:= "DO_NOT_USE_CRUNCHY_UNCOMPRESSED" @kind object;
  #L1e8a9c.  v6:= 2I;
  #L1e8a9e.  call `<init>`(v3, v5, v6) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e8aa4.  `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @type ^`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` := v3 @kind object;
  #L1e8aa8.  v5:= 3I;
  #L1e8aaa.  v5:= new `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`[v5];
  #L1e8aae.  v5[v2]:= v0 @kind object;
  #L1e8ab2.  v5[v4]:= v1 @kind object;
  #L1e8ab6.  v5[v6]:= v3 @kind object;
  #L1e8aba.  `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.a` @type ^`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`[] := v5 @kind object;
  #L1e8abe.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1e8ad0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e8ad6.  return @kind void;
}
procedure `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;.valueOf:(Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1e8a24.  v0:= constclass @type ^`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType` @kind object;
  #L1e8a28.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1e8a2e.  v1:= temp @kind object;
  #L1e8a30.  v1:= (`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`) v1 @kind object;
  #L1e8a34.  return v1 @kind object;
}
procedure `com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`[] `values`() @signature `Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;.values:()[Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1e8a48.  v0:= `@@com.google.crypto.tink.subtle.EllipticCurves$PointFormatType.a` @type ^`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`[] @kind object;
  #L1e8a4c.  call temp:= `clone`(v0) @signature `[Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1e8a52.  v0:= temp @kind object;
  #L1e8a54.  v0:= (`com.google.crypto.tink.subtle.EllipticCurves$PointFormatType`[]) v0 @kind object;
  #L1e8a58.  return v0 @kind object;
}
