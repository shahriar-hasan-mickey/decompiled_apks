record `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `byte`[] `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.a` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.Mac` `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @AccessFlag PRIVATE;
  `byte`[] `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.c` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @AccessFlag PRIVATE;
  `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v0 @kind this, `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.<init>:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f07f4.  v0.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` := v1 @kind object;
  #L1f07f8.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1f07fe.  v1:= -1I;
  #L1f0800.  v0.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int` := v1;
  #L1f0804.  v1:= length @variable v2;
  #L1f0806.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1f080c.  v1:= temp @kind object;
  #L1f080e.  v0.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.a` @type ^`byte`[] := v1 @kind object;
  #L1f0812.  return @kind void;
}
procedure `void` `a`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f0824.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.MAC` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1f0828.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L1f082c.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.a:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1f0832.  v1:= temp @kind object;
  #L1f0834.  call temp:= `b`(v1) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.b:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L1f083a.  v1:= temp @kind object;
  #L1f083c.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1f0842.  v0:= temp @kind object;
  #L1f0844.  v0:= (`javax.crypto.Mac`) v0 @kind object;
  #L1f0848.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` := v0 @kind object;
  #L1f084c.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L1f0850.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.c:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)[B` @kind static;
  #L1f0856.  v0:= temp @kind object;
  #L1f0858.  if v0 == 0 then goto L1f08a6;
  #L1f085c.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L1f0860.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.c:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)[B` @kind static;
  #L1f0866.  v0:= temp @kind object;
  #L1f0868.  v0:= length @variable v0;
  #L1f086a.  if v0 != 0 then goto L1f0870;
  #L1f086e.  goto L1f08a6;
  #L1f0870.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f0874.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L1f0878.  v2:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L1f087c.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.c:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)[B` @kind static;
  #L1f0882.  v2:= temp @kind object;
  #L1f0884.  v3:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L1f0888.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.a:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1f088e.  v3:= temp @kind object;
  #L1f0890.  call temp:= `b`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.b:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L1f0896.  v3:= temp @kind object;
  #L1f0898.  call `<init>`(v1, v2, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1f089e.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L1f08a4.  goto L1f08de;
  #L1f08a6.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f08aa.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L1f08ae.  v2:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f08b2.  call temp:= `getMacLength`(v2) @signature `Ljavax/crypto/Mac;.getMacLength:()I` @kind virtual;
  #L1f08b8.  v2:= temp;
  #L1f08ba.  v2:= new `byte`[v2];
  #L1f08be.  v3:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L1f08c2.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.a:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1f08c8.  v3:= temp @kind object;
  #L1f08ca.  call temp:= `b`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.b:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L1f08d0.  v3:= temp @kind object;
  #L1f08d2.  call `<init>`(v1, v2, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1f08d8.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L1f08de.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f08e2.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L1f08e6.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.d:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)[B` @kind static;
  #L1f08ec.  v1:= temp @kind object;
  #L1f08ee.  call `update`(v0, v1) @signature `Ljavax/crypto/Mac;.update:([B)V` @kind virtual;
  #L1f08f4.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f08f8.  call temp:= `doFinal`(v0) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L1f08fe.  v0:= temp @kind object;
  #L1f0900.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.c` @type ^`byte`[] := v0 @kind object;
  #L1f0904.  v0:= 0I;
  #L1f0906.  call temp:= `allocateDirect`(v0) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L1f090c.  v1:= temp @kind object;
  #L1f090e.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L1f0912.  call temp:= `mark`(v1) @signature `Ljava/nio/ByteBuffer;.mark:()Ljava/nio/Buffer;` @kind virtual;
  #L1f0918.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int` := v0;
  #L1f091c.  return @kind void;
  #L1f091e.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1f0920.  v1:= new `java.io.IOException`;
  #L1f0924.  v2:= "Creating HMac failed" @kind object;
  #L1f0928.  call `<init>`(v1, v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1f092e.  throw v1;
  catch `java.security.GeneralSecurityException` @[L1f0824..L1f084c] goto L1f091e;
}
procedure `void` `b`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f0950.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f0954.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L1f0958.  v2:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.c` @type ^`byte`[] @kind object;
  #L1f095c.  v3:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L1f0960.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.a:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L1f0966.  v3:= temp @kind object;
  #L1f0968.  call temp:= `b`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.b:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L1f096e.  v3:= temp @kind object;
  #L1f0970.  call `<init>`(v1, v2, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1f0976.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L1f097c.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1f0980.  call temp:= `reset`(v0) @signature `Ljava/nio/ByteBuffer;.reset:()Ljava/nio/Buffer;` @kind virtual;
  #L1f0986.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f098a.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1f098e.  call `update`(v0, v1) @signature `Ljavax/crypto/Mac;.update:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L1f0994.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f0998.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.a` @type ^`byte`[] @kind object;
  #L1f099c.  call `update`(v0, v1) @signature `Ljavax/crypto/Mac;.update:([B)V` @kind virtual;
  #L1f09a2.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int`;
  #L1f09a6.  v0:= v0 + 1;
  #L1f09aa.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int` := v0;
  #L1f09ae.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f09b2.  v0:= (`byte`) v0 @kind i2b;
  #L1f09b4.  call `update`(v1, v0) @signature `Ljavax/crypto/Mac;.update:(B)V` @kind virtual;
  #L1f09ba.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L1f09be.  call temp:= `doFinal`(v0) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L1f09c4.  v0:= temp @kind object;
  #L1f09c6.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L1f09cc.  v0:= temp @kind object;
  #L1f09ce.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L1f09d2.  call temp:= `mark`(v0) @signature `Ljava/nio/ByteBuffer;.mark:()Ljava/nio/Buffer;` @kind virtual;
  #L1f09d8.  return @kind void;
}
procedure `int` `read`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f06f0.  v0:= 1I;
  #L1f06f2.  v1:= new `byte`[v0];
  #L1f06f6.  v2:= 0I;
  #L1f06f8.  call temp:= `read`(v4, v1, v2, v0) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:([BII)I` @kind virtual;
  #L1f06fe.  v3:= temp;
  #L1f0700.  if v3 != v0 then goto L1f070e;
  #L1f0704.  v0:= v1[v2] @kind byte;
  #L1f0708.  v0:= v0 ^& 255;
  #L1f070c.  return v0;
  #L1f070e.  v0:= -1I;
  #L1f0710.  if v3 != v0 then goto L1f0716;
  #L1f0714.  return v3;
  #L1f0716.  v0:= new `java.io.IOException`;
  #L1f071a.  v1:= "Reading failed" @kind object;
  #L1f071e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f0724.  throw v0;
}
procedure `int` `read`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f0738.  v0:= length @variable v3;
  #L1f073a.  v1:= 0I;
  #L1f073c.  call temp:= `read`(v2, v3, v1, v0) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:([BII)I` @kind virtual;
  #L1f0742.  v3:= temp;
  #L1f0744.  return v3;
}
procedure `int` `read`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f0758.  v0:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int`;
  #L1f075c.  v1:= -1I;
  #L1f075e.  if v0 != v1 then goto L1f0768;
  #L1f0762.  call `a`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.a:()V` @kind direct;
  #L1f0768.  v0:= 0I;
  #L1f076a.  if v0 >= v6 then goto L1f07ba;
  #L1f076e.  v1:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1f0772.  call temp:= `hasRemaining`(v1) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L1f0778.  v1:= temp;
  #L1f077a.  if v1 != 0 then goto L1f0792;
  #L1f077e.  v1:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int`;
  #L1f0782.  v2:= 255I;
  #L1f0786.  if v1 != v2 then goto L1f078c;
  #L1f078a.  return v0;
  #L1f078c.  call `b`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.b:()V` @kind direct;
  #L1f0792.  v1:= v6 - v0 @kind int;
  #L1f0796.  v2:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1f079a.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1f07a0.  v2:= temp;
  #L1f07a2.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1f07a8.  v1:= temp;
  #L1f07aa.  v2:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1f07ae.  call temp:= `get`(v2, v4, v5, v1) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1f07b4.  v5:= v5 + v1 @kind int;
  #L1f07b6.  v0:= v0 + v1 @kind int;
  #L1f07b8.  goto L1f076a;
  #L1f07ba.  return v0;
  #L1f07bc.  v4:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1f07be.  v5:= 0I;
  #L1f07c0.  v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` := v5 @kind object;
  #L1f07c4.  v5:= new `java.io.IOException`;
  #L1f07c8.  v6:= "HkdfInputStream failed" @kind object;
  #L1f07cc.  call `<init>`(v5, v6, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1f07d2.  throw v5;
  catch `java.security.GeneralSecurityException` @[L1f0758..L1f07b4] goto L1f07bc;
}
