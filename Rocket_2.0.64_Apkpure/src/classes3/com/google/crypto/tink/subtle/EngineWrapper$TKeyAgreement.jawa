record `com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.subtle.EngineWrapper` @kind interface {
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement` v0 @kind this) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyAgreement;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ea2ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ea2f2.  return @kind void;
}
procedure `java.lang.Object` `getInstance`(`com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement` v0 @kind this, `java.lang.String` v1 @kind object, `java.security.Provider` v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyAgreement;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1ea2a8.  call temp:= `getInstance`(v0, v1, v2) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyAgreement;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyAgreement;` @kind virtual;
  #L1ea2ae.  v1:= temp @kind object;
  #L1ea2b0.  return v1 @kind object;
}
procedure `javax.crypto.KeyAgreement` `getInstance`(`com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement` v0 @kind this, `java.lang.String` v1 @kind object, `java.security.Provider` v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyAgreement;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyAgreement;` @AccessFlag PUBLIC {
    temp;

  #L1ea2c4.  if v2 != 0 then goto L1ea2d2;
  #L1ea2c8.  call temp:= `getInstance`(v1) @signature `Ljavax/crypto/KeyAgreement;.getInstance:(Ljava/lang/String;)Ljavax/crypto/KeyAgreement;` @kind static;
  #L1ea2ce.  v1:= temp @kind object;
  #L1ea2d0.  return v1 @kind object;
  #L1ea2d2.  call temp:= `getInstance`(v1, v2) @signature `Ljavax/crypto/KeyAgreement;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyAgreement;` @kind static;
  #L1ea2d8.  v1:= temp @kind object;
  #L1ea2da.  return v1 @kind object;
}
