record `com.google.crypto.tink.subtle.Random$a` @kind class @AccessFlag  extends `java.lang.ThreadLocal` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.Random$a` v0 @kind this) @signature `Lcom/google/crypto/tink/subtle/Random$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ed134.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L1ed13a.  return @kind void;
}
procedure `java.security.SecureRandom` `a`(`com.google.crypto.tink.subtle.Random$a` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/Random$a;.a:()Ljava/security/SecureRandom;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1ed118.  call temp:= `a`() @signature `Lcom/google/crypto/tink/subtle/Random;.a:()Ljava/security/SecureRandom;` @kind static;
  #L1ed11e.  v0:= temp @kind object;
  #L1ed120.  return v0 @kind object;
}
procedure `java.lang.Object` `initialValue`(`com.google.crypto.tink.subtle.Random$a` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/Random$a;.initialValue:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L1ed0fc.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/subtle/Random$a;.a:()Ljava/security/SecureRandom;` @kind virtual;
  #L1ed102.  v0:= temp @kind object;
  #L1ed104.  return v0 @kind object;
}
