record `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a` @kind class @AccessFlag  extends `com.google.crypto.tink.subtle.StreamSegmentDecrypter` @kind interface {
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.a` @AccessFlag PRIVATE;
  `javax.crypto.Cipher` `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.b` @AccessFlag PRIVATE;
  `byte`[] `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.c` @AccessFlag PRIVATE;
  `com.google.crypto.tink.subtle.AesGcmHkdfStreaming` `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a` v0 @kind this, `com.google.crypto.tink.subtle.AesGcmHkdfStreaming` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming$a;.<init>:(Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e16b4.  v0.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.d` @type ^`com.google.crypto.tink.subtle.AesGcmHkdfStreaming` := v1 @kind object;
  #L1e16b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e16be.  return @kind void;
}
procedure `void` `decryptSegment`(`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object, `int` v5 , `boolean` v6 , `java.nio.ByteBuffer` v7 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming$a;.decryptSegment:(Ljava/nio/ByteBuffer;IZLjava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1e16d0.  @monitorenter v3
  #L1e16d2.  v0:= v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.c` @type ^`byte`[] @kind object;
  #L1e16d6.  v1:= (`long`) v5 @kind i2l;
  #L1e16d8.  call temp:= `e`(v0, v1, v6) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.e:([BJZ)Ljavax/crypto/spec/GCMParameterSpec;` @kind static;
  #L1e16de.  v5:= temp @kind object;
  #L1e16e0.  v6:= v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.b` @type ^`javax.crypto.Cipher` @kind object;
  #L1e16e4.  v0:= 2I;
  #L1e16e6.  v1:= v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.a` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L1e16ea.  call `init`(v6, v0, v1, v5) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L1e16f0.  v5:= v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.b` @type ^`javax.crypto.Cipher` @kind object;
  #L1e16f4.  call temp:= `doFinal`(v5, v4, v7) @signature `Ljavax/crypto/Cipher;.doFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L1e16fa.  @monitorexit v3
  #L1e16fc.  return @kind void;
  #L1e16fe.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e1700.  @monitorexit v3
  #L1e1702.  throw v4;
  catch `java.lang.Throwable` @[L1e16d2..L1e16fa] goto L1e16fe;
}
procedure `void` `init`(`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming$a;.init:(Ljava/nio/ByteBuffer;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e1720.  @monitorenter v2
  #L1e1722.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1e1728.  v0:= temp;
  #L1e172a.  v1:= v2.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.d` @type ^`com.google.crypto.tink.subtle.AesGcmHkdfStreaming` @kind object;
  #L1e172e.  call temp:= `getHeaderLength`(v1) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.getHeaderLength:()I` @kind virtual;
  #L1e1734.  v1:= temp;
  #L1e1736.  if v0 != v1 then goto L1e17ac;
  #L1e173a.  call temp:= `get`(v3) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L1e1740.  v0:= temp;
  #L1e1742.  v1:= v2.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.d` @type ^`com.google.crypto.tink.subtle.AesGcmHkdfStreaming` @kind object;
  #L1e1746.  call temp:= `getHeaderLength`(v1) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.getHeaderLength:()I` @kind virtual;
  #L1e174c.  v1:= temp;
  #L1e174e.  if v0 != v1 then goto L1e179c;
  #L1e1752.  v0:= 7I;
  #L1e1754.  v0:= new `byte`[v0];
  #L1e1758.  v2.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.c` @type ^`byte`[] := v0 @kind object;
  #L1e175c.  v0:= v2.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.d` @type ^`com.google.crypto.tink.subtle.AesGcmHkdfStreaming` @kind object;
  #L1e1760.  call temp:= `f`(v0) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.f:(Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;)I` @kind static;
  #L1e1766.  v0:= temp;
  #L1e1768.  v0:= new `byte`[v0];
  #L1e176c.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e1772.  v1:= v2.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.c` @type ^`byte`[] @kind object;
  #L1e1776.  call temp:= `get`(v3, v1) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1e177c.  v3:= v2.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.d` @type ^`com.google.crypto.tink.subtle.AesGcmHkdfStreaming` @kind object;
  #L1e1780.  call temp:= `d`(v3, v0, v4) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.d:(Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;[B[B)Ljavax/crypto/spec/SecretKeySpec;` @kind static;
  #L1e1786.  v3:= temp @kind object;
  #L1e1788.  v2.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.a` @type ^`javax.crypto.spec.SecretKeySpec` := v3 @kind object;
  #L1e178c.  call temp:= `a`() @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.a:()Ljavax/crypto/Cipher;` @kind static;
  #L1e1792.  v3:= temp @kind object;
  #L1e1794.  v2.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$a.b` @type ^`javax.crypto.Cipher` := v3 @kind object;
  #L1e1798.  @monitorexit v2
  #L1e179a.  return @kind void;
  #L1e179c.  v3:= new `java.security.GeneralSecurityException`;
  #L1e17a0.  v4:= "Invalid ciphertext" @kind object;
  #L1e17a4.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e17aa.  throw v3;
  #L1e17ac.  v3:= new `java.security.InvalidAlgorithmParameterException`;
  #L1e17b0.  v4:= "Invalid header length" @kind object;
  #L1e17b4.  call `<init>`(v3, v4) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e17ba.  throw v3;
  #L1e17bc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e17be.  @monitorexit v2
  #L1e17c0.  throw v3;
  catch `java.lang.Throwable` @[L1e1722..L1e1798] goto L1e17bc;
  catch `java.lang.Throwable` @[L1e179c..L1e17bc] goto L1e17bc;
}
