record `com.google.crypto.tink.subtle.EngineFactory` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.crypto.tink.subtle.EngineWrapper` `com.google.crypto.tink.subtle.EngineFactory.a` @AccessFlag PRIVATE;
  `java.util.List` `com.google.crypto.tink.subtle.EngineFactory.b` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.subtle.EngineFactory.c` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.CIPHER` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.KEY_AGREEMENT` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.KEY_PAIR_GENERATOR` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.MAC` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.MESSAGE_DIGEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.SIGNATURE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@com.google.crypto.tink.subtle.EngineFactory.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@com.google.crypto.tink.subtle.EngineFactory.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ea0c8.  v0:= constclass @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1ea0cc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1ea0d2.  v0:= temp @kind object;
  #L1ea0d4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1ea0da.  v0:= temp @kind object;
  #L1ea0dc.  `@@com.google.crypto.tink.subtle.EngineFactory.d` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L1ea0e0.  call temp:= `isAndroid`() @signature `Lcom/google/crypto/tink/subtle/SubtleUtil;.isAndroid:()Z` @kind static;
  #L1ea0e6.  v0:= temp;
  #L1ea0e8.  if v0 == 0 then goto L1ea10a;
  #L1ea0ec.  v0:= "GmsCore_OpenSSL" @kind object;
  #L1ea0f0.  v1:= "AndroidOpenSSL" @kind object;
  #L1ea0f4.  temp:= new `java.lang.String`[v0, v1];
  #L1ea0fa.  v0:= temp @kind object;
  #L1ea0fc.  call temp:= `toProviderList`(v0) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1ea102.  v0:= temp @kind object;
  #L1ea104.  `@@com.google.crypto.tink.subtle.EngineFactory.e` @type ^`java.util.List` := v0 @kind object;
  #L1ea108.  goto L1ea118;
  #L1ea10a.  v0:= new `java.util.ArrayList`;
  #L1ea10e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ea114.  `@@com.google.crypto.tink.subtle.EngineFactory.e` @type ^`java.util.List` := v0 @kind object;
  #L1ea118.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1ea11c.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TCipher`;
  #L1ea120.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TCipher;.<init>:()V` @kind direct;
  #L1ea126.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L1ea12c.  `@@com.google.crypto.tink.subtle.EngineFactory.CIPHER` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L1ea130.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1ea134.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TMac`;
  #L1ea138.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMac;.<init>:()V` @kind direct;
  #L1ea13e.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L1ea144.  `@@com.google.crypto.tink.subtle.EngineFactory.MAC` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L1ea148.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1ea14c.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TSignature`;
  #L1ea150.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TSignature;.<init>:()V` @kind direct;
  #L1ea156.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L1ea15c.  `@@com.google.crypto.tink.subtle.EngineFactory.SIGNATURE` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L1ea160.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1ea164.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest`;
  #L1ea168.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMessageDigest;.<init>:()V` @kind direct;
  #L1ea16e.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L1ea174.  `@@com.google.crypto.tink.subtle.EngineFactory.MESSAGE_DIGEST` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L1ea178.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1ea17c.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement`;
  #L1ea180.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyAgreement;.<init>:()V` @kind direct;
  #L1ea186.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L1ea18c.  `@@com.google.crypto.tink.subtle.EngineFactory.KEY_AGREEMENT` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L1ea190.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1ea194.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator`;
  #L1ea198.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyPairGenerator;.<init>:()V` @kind direct;
  #L1ea19e.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L1ea1a4.  `@@com.google.crypto.tink.subtle.EngineFactory.KEY_PAIR_GENERATOR` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L1ea1a8.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1ea1ac.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory`;
  #L1ea1b0.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyFactory;.<init>:()V` @kind direct;
  #L1ea1b6.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L1ea1bc.  `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L1ea1c0.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EngineFactory` v0 @kind this, `com.google.crypto.tink.subtle.EngineWrapper` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ea1d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ea1da.  v0.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` := v1 @kind object;
  #L1ea1de.  v1:= `@@com.google.crypto.tink.subtle.EngineFactory.e` @type ^`java.util.List` @kind object;
  #L1ea1e2.  v0.`com.google.crypto.tink.subtle.EngineFactory.b` @type ^`java.util.List` := v1 @kind object;
  #L1ea1e6.  v1:= 1I;
  #L1ea1e8.  v0.`com.google.crypto.tink.subtle.EngineFactory.c` @type ^`boolean` := v1 @kind boolean;
  #L1ea1ec.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EngineFactory` v0 @kind this, `com.google.crypto.tink.subtle.EngineWrapper` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ea200.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ea206.  v0.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` := v1 @kind object;
  #L1ea20a.  v0.`com.google.crypto.tink.subtle.EngineFactory.b` @type ^`java.util.List` := v2 @kind object;
  #L1ea20e.  v1:= 1I;
  #L1ea210.  v0.`com.google.crypto.tink.subtle.EngineFactory.c` @type ^`boolean` := v1 @kind boolean;
  #L1ea214.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EngineFactory` v0 @kind this, `com.google.crypto.tink.subtle.EngineWrapper` v1 @kind object, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ea228.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ea22e.  v0.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` := v1 @kind object;
  #L1ea232.  v0.`com.google.crypto.tink.subtle.EngineFactory.b` @type ^`java.util.List` := v2 @kind object;
  #L1ea236.  v0.`com.google.crypto.tink.subtle.EngineFactory.c` @type ^`boolean` := v3 @kind boolean;
  #L1ea23a.  return @kind void;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomCipherProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomCipherProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9e8c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1e9e90.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TCipher`;
  #L1e9e94.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TCipher;.<init>:()V` @kind direct;
  #L1e9e9a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1e9ea0.  v3:= temp @kind object;
  #L1e9ea2.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L1e9ea8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomKeyAgreementProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomKeyAgreementProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9ebc.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1e9ec0.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement`;
  #L1e9ec4.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyAgreement;.<init>:()V` @kind direct;
  #L1e9eca.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1e9ed0.  v3:= temp @kind object;
  #L1e9ed2.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L1e9ed8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomKeyFactoryProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomKeyFactoryProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9eec.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1e9ef0.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory`;
  #L1e9ef4.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyFactory;.<init>:()V` @kind direct;
  #L1e9efa.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1e9f00.  v3:= temp @kind object;
  #L1e9f02.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L1e9f08.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomKeyPairGeneratorProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomKeyPairGeneratorProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9f1c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1e9f20.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator`;
  #L1e9f24.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyPairGenerator;.<init>:()V` @kind direct;
  #L1e9f2a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1e9f30.  v3:= temp @kind object;
  #L1e9f32.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L1e9f38.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomMacProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomMacProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9f4c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1e9f50.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TMac`;
  #L1e9f54.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMac;.<init>:()V` @kind direct;
  #L1e9f5a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1e9f60.  v3:= temp @kind object;
  #L1e9f62.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L1e9f68.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomMessageDigestProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomMessageDigestProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9f7c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1e9f80.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest`;
  #L1e9f84.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMessageDigest;.<init>:()V` @kind direct;
  #L1e9f8a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1e9f90.  v3:= temp @kind object;
  #L1e9f92.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L1e9f98.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomSignatureProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomSignatureProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9fac.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L1e9fb0.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TSignature`;
  #L1e9fb4.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TSignature;.<init>:()V` @kind direct;
  #L1e9fba.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1e9fc0.  v3:= temp @kind object;
  #L1e9fc2.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L1e9fc8.  return v0 @kind object;
}
procedure `java.util.List` `toProviderList`(`java.lang.String`[] v7 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ea064.  v0:= new `java.util.ArrayList`;
  #L1ea068.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ea06e.  v1:= length @variable v7;
  #L1ea070.  v2:= 0I;
  #L1ea072.  v3:= 0I;
  #L1ea074.  if v3 >= v1 then goto L1ea0b6;
  #L1ea078.  v4:= v7[v3] @kind object;
  #L1ea07c.  call temp:= `getProvider`(v4) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L1ea082.  v5:= temp @kind object;
  #L1ea084.  if v5 == 0 then goto L1ea090;
  #L1ea088.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1ea08e.  goto L1ea0b0;
  #L1ea090.  v5:= `@@com.google.crypto.tink.subtle.EngineFactory.d` @type ^`java.util.logging.Logger` @kind object;
  #L1ea094.  v6:= 1I;
  #L1ea096.  v6:= new `java.lang.Object`[v6];
  #L1ea09a.  v6[v2]:= v4 @kind object;
  #L1ea09e.  v4:= "Provider %s not available" @kind object;
  #L1ea0a2.  call temp:= `format`(v4, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ea0a8.  v4:= temp @kind object;
  #L1ea0aa.  call `info`(v5, v4) @signature `Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V` @kind virtual;
  #L1ea0b0.  v3:= v3 + 1;
  #L1ea0b4.  goto L1ea074;
  #L1ea0b6.  return v0 @kind object;
}
procedure `java.lang.Object` `getInstance`(`com.google.crypto.tink.subtle.EngineFactory` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e9fdc.  v0:= v5.`com.google.crypto.tink.subtle.EngineFactory.b` @type ^`java.util.List` @kind object;
  #L1e9fe0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e9fe6.  v0:= temp @kind object;
  #L1e9fe8.  v1:= 0I;
  #L1e9fea.  v2:= v1 @kind object;
  #L1e9fec.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e9ff2.  v3:= temp;
  #L1e9ff4.  if v3 == 0 then goto L1ea01c;
  #L1e9ff8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e9ffe.  v3:= temp @kind object;
  #L1ea000.  v3:= (`java.security.Provider`) v3 @kind object;
  #L1ea004.  v4:= v5.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` @kind object;
  #L1ea008.  call temp:= `getInstance`(v4, v6, v3) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;` @kind interface;
  #L1ea00e.  v6:= temp @kind object;
  #L1ea010.  return v6 @kind object;
  #L1ea012.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L1ea014.  if v2 != 0 then goto L1e9fec;
  #L1ea018.  v2:= v3 @kind object;
  #L1ea01a.  goto L1e9fec;
  #L1ea01c.  v0:= v5.`com.google.crypto.tink.subtle.EngineFactory.c` @type ^`boolean` @kind boolean;
  #L1ea020.  if v0 == 0 then goto L1ea032;
  #L1ea024.  v0:= v5.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` @kind object;
  #L1ea028.  call temp:= `getInstance`(v0, v6, v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;` @kind interface;
  #L1ea02e.  v6:= temp @kind object;
  #L1ea030.  return v6 @kind object;
  #L1ea032.  v6:= new `java.security.GeneralSecurityException`;
  #L1ea036.  v0:= "No good Provider found." @kind object;
  #L1ea03a.  call `<init>`(v6, v0, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1ea040.  throw v6;
  catch `java.lang.Exception` @[L1ea004..L1ea010] goto L1ea012;
}
