record `com.google.crypto.tink.subtle.n` @kind class @AccessFlag  extends `java.io.FilterOutputStream` @kind class {
  `com.google.crypto.tink.subtle.StreamSegmentEncrypter` `com.google.crypto.tink.subtle.n.a` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.subtle.n.b` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.n.c` @AccessFlag ;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.n.d` @AccessFlag ;
  `boolean` `com.google.crypto.tink.subtle.n.e` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.n` v0 @kind this, `com.google.crypto.tink.subtle.i` v1 @kind object, `java.io.OutputStream` v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/n;.<init>:(Lcom/google/crypto/tink/subtle/i;Ljava/io/OutputStream;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1eeffc.  call `<init>`(v0, v2) @signature `Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L1ef002.  call temp:= `newStreamSegmentEncrypter`(v1, v3) @signature `Lcom/google/crypto/tink/subtle/i;.newStreamSegmentEncrypter:([B)Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;` @kind virtual;
  #L1ef008.  v2:= temp @kind object;
  #L1ef00a.  v0.`com.google.crypto.tink.subtle.n.a` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` := v2 @kind object;
  #L1ef00e.  call temp:= `getPlaintextSegmentSize`(v1) @signature `Lcom/google/crypto/tink/subtle/i;.getPlaintextSegmentSize:()I` @kind virtual;
  #L1ef014.  v2:= temp;
  #L1ef016.  v0.`com.google.crypto.tink.subtle.n.b` @type ^`int` := v2;
  #L1ef01a.  call temp:= `allocate`(v2) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L1ef020.  v2:= temp @kind object;
  #L1ef022.  v0.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L1ef026.  call temp:= `getCiphertextSegmentSize`(v1) @signature `Lcom/google/crypto/tink/subtle/i;.getCiphertextSegmentSize:()I` @kind virtual;
  #L1ef02c.  v2:= temp;
  #L1ef02e.  call temp:= `allocate`(v2) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L1ef034.  v2:= temp @kind object;
  #L1ef036.  v0.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L1ef03a.  v2:= v0.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef03e.  v3:= v0.`com.google.crypto.tink.subtle.n.b` @type ^`int`;
  #L1ef042.  call temp:= `getCiphertextOffset`(v1) @signature `Lcom/google/crypto/tink/subtle/i;.getCiphertextOffset:()I` @kind virtual;
  #L1ef048.  v1:= temp;
  #L1ef04a.  v3:= v3 - v1 @kind int;
  #L1ef04c.  call temp:= `limit`(v2, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1ef052.  v1:= v0.`com.google.crypto.tink.subtle.n.a` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L1ef056.  call temp:= `getHeader`(v1) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.getHeader:()Ljava/nio/ByteBuffer;` @kind interface;
  #L1ef05c.  v1:= temp @kind object;
  #L1ef05e.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1ef064.  v2:= temp;
  #L1ef066.  v2:= new `byte`[v2];
  #L1ef06a.  call temp:= `get`(v1, v2) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1ef070.  v1:= v0.`java.io.FilterOutputStream.out` @type ^`java.io.OutputStream` @kind object;
  #L1ef074.  call `write`(v1, v2) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L1ef07a.  v1:= 1I;
  #L1ef07c.  v0.`com.google.crypto.tink.subtle.n.e` @type ^`boolean` := v1 @kind boolean;
  #L1ef080.  return @kind void;
}
procedure `void` `close`(`com.google.crypto.tink.subtle.n` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/n;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ef094.  @monitorenter v4
  #L1ef096.  v0:= v4.`com.google.crypto.tink.subtle.n.e` @type ^`boolean` @kind boolean;
  #L1ef09a.  if v0 != 0 then goto L1ef0a2;
  #L1ef09e.  @monitorexit v4
  #L1ef0a0.  return @kind void;
  #L1ef0a2.  v0:= v4.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef0a6.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L1ef0ac.  v0:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef0b0.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L1ef0b6.  v0:= v4.`com.google.crypto.tink.subtle.n.a` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L1ef0ba.  v1:= v4.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef0be.  v2:= 1I;
  #L1ef0c0.  v3:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef0c4.  call `encryptSegment`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.encryptSegment:(Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @kind interface;
  #L1ef0ca.  v0:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef0ce.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L1ef0d4.  v0:= v4.`java.io.FilterOutputStream.out` @type ^`java.io.OutputStream` @kind object;
  #L1ef0d8.  v1:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef0dc.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1ef0e2.  v1:= temp @kind object;
  #L1ef0e4.  v2:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef0e8.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1ef0ee.  v2:= temp;
  #L1ef0f0.  v3:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef0f4.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1ef0fa.  v3:= temp;
  #L1ef0fc.  call `write`(v0, v1, v2, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L1ef102.  v0:= 0I;
  #L1ef104.  v4.`com.google.crypto.tink.subtle.n.e` @type ^`boolean` := v0 @kind boolean;
  #L1ef108.  call `close`(v4) @signature `Ljava/io/FilterOutputStream;.close:()V` @kind super;
  #L1ef10e.  @monitorexit v4
  #L1ef110.  return @kind void;
  #L1ef112.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1ef114.  v1:= new `java.io.IOException`;
  #L1ef118.  v2:= new `java.lang.StringBuilder`;
  #L1ef11c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ef122.  v3:= "ptBuffer.remaining():" @kind object;
  #L1ef126.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef12c.  v3:= v4.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef130.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1ef136.  v3:= temp;
  #L1ef138.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef13e.  v3:= " ctBuffer.remaining():" @kind object;
  #L1ef142.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef148.  v3:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef14c.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1ef152.  v3:= temp;
  #L1ef154.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef15a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ef160.  v2:= temp @kind object;
  #L1ef162.  call `<init>`(v1, v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1ef168.  throw v1;
  #L1ef16a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ef16c.  @monitorexit v4
  #L1ef16e.  throw v0;
  catch `java.lang.Throwable` @[L1ef096..L1ef09a] goto L1ef16a;
  catch `java.security.GeneralSecurityException` @[L1ef0a2..L1ef0ca] goto L1ef112;
  catch `java.lang.Throwable` @[L1ef0a2..L1ef0ca] goto L1ef16a;
  catch `java.lang.Throwable` @[L1ef0ca..L1ef10e] goto L1ef16a;
  catch `java.lang.Throwable` @[L1ef114..L1ef16a] goto L1ef16a;
}
procedure `void` `write`(`com.google.crypto.tink.subtle.n` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/subtle/n;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ef2dc.  v0:= 1I;
  #L1ef2de.  v0:= new `byte`[v0];
  #L1ef2e2.  v3:= (`byte`) v3 @kind i2b;
  #L1ef2e4.  v1:= 0I;
  #L1ef2e6.  v0[v1]:= v3 @kind byte;
  #L1ef2ea.  call `write`(v2, v0) @signature `Lcom/google/crypto/tink/subtle/n;.write:([B)V` @kind virtual;
  #L1ef2f0.  return @kind void;
}
procedure `void` `write`(`com.google.crypto.tink.subtle.n` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/n;.write:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ef1a8.  v0:= length @variable v3;
  #L1ef1aa.  v1:= 0I;
  #L1ef1ac.  call `write`(v2, v3, v1, v0) @signature `Lcom/google/crypto/tink/subtle/n;.write:([BII)V` @kind virtual;
  #L1ef1b2.  return @kind void;
}
procedure `void` `write`(`com.google.crypto.tink.subtle.n` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/crypto/tink/subtle/n;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ef1c4.  @monitorenter v5
  #L1ef1c6.  v0:= v5.`com.google.crypto.tink.subtle.n.e` @type ^`boolean` @kind boolean;
  #L1ef1ca.  if v0 == 0 then goto L1ef28c;
  #L1ef1ce.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef1d2.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1ef1d8.  v0:= temp;
  #L1ef1da.  if v8 <= v0 then goto L1ef27e;
  #L1ef1de.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef1e2.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1ef1e8.  v0:= temp;
  #L1ef1ea.  call temp:= `wrap`(v6, v7, v0) @signature `Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;` @kind static;
  #L1ef1f0.  v1:= temp @kind object;
  #L1ef1f2.  v7:= v7 + v0 @kind int;
  #L1ef1f4.  v8:= v8 - v0 @kind int;
  #L1ef1f6.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef1fa.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L1ef200.  v0:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef204.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L1ef20a.  v0:= v5.`com.google.crypto.tink.subtle.n.a` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L1ef20e.  v2:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef212.  v3:= 0I;
  #L1ef214.  v4:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef218.  call `encryptSegment`(v0, v2, v1, v3, v4) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.encryptSegment:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @kind interface;
  #L1ef21e.  v0:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef222.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L1ef228.  v0:= v5.`java.io.FilterOutputStream.out` @type ^`java.io.OutputStream` @kind object;
  #L1ef22c.  v1:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef230.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1ef236.  v1:= temp @kind object;
  #L1ef238.  v2:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef23c.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1ef242.  v2:= temp;
  #L1ef244.  v3:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef248.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1ef24e.  v3:= temp;
  #L1ef250.  call `write`(v0, v1, v2, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L1ef256.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef25a.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L1ef260.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef264.  v1:= v5.`com.google.crypto.tink.subtle.n.b` @type ^`int`;
  #L1ef268.  call temp:= `limit`(v0, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1ef26e.  goto L1ef1ce;
  #L1ef270.  v6:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1ef272.  v7:= new `java.io.IOException`;
  #L1ef276.  call `<init>`(v7, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1ef27c.  throw v7;
  #L1ef27e.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L1ef282.  call temp:= `put`(v0, v6, v7, v8) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1ef288.  @monitorexit v5
  #L1ef28a.  return @kind void;
  #L1ef28c.  v6:= new `java.io.IOException`;
  #L1ef290.  v7:= "Trying to write to closed stream" @kind object;
  #L1ef294.  call `<init>`(v6, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ef29a.  throw v6;
  #L1ef29c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ef29e.  @monitorexit v5
  #L1ef2a0.  throw v6;
  catch `java.lang.Throwable` @[L1ef1c6..L1ef1f2] goto L1ef29c;
  catch `java.security.GeneralSecurityException` @[L1ef1f6..L1ef21e] goto L1ef270;
  catch `java.lang.Throwable` @[L1ef1f6..L1ef21e] goto L1ef29c;
  catch `java.lang.Throwable` @[L1ef21e..L1ef288] goto L1ef29c;
  catch `java.lang.Throwable` @[L1ef28c..L1ef29c] goto L1ef29c;
}
