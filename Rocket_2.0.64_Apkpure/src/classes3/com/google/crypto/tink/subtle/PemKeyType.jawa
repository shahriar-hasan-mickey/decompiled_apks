record `com.google.crypto.tink.subtle.PemKeyType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.google.crypto.tink.subtle.PemKeyType.algorithm` @AccessFlag PUBLIC_FINAL;
  `com.google.crypto.tink.subtle.Enums$HashType` `com.google.crypto.tink.subtle.PemKeyType.hash` @AccessFlag PUBLIC_FINAL;
  `int` `com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `com.google.crypto.tink.subtle.PemKeyType.keyType` @AccessFlag PUBLIC_FINAL;
}
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P256_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P384_SHA384` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P521_SHA512` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_2048_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_3072_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA512` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_2048_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_3072_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA512` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType`[] `@@com.google.crypto.tink.subtle.PemKeyType.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;

  #L1ec4d8.  v7:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec4dc.  v8:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L1ec4e0.  v1:= "RSA_PSS_2048_SHA256" @kind object;
  #L1ec4e4.  v2:= 0I;
  #L1ec4e6.  v3:= "RSA" @kind object;
  #L1ec4ea.  v4:= "RSASSA-PSS" @kind object;
  #L1ec4ee.  v5:= 2048I;
  #L1ec4f2.  v0:= v7 @kind object;
  #L1ec4f4.  v6:= v8 @kind object;
  #L1ec4f6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec4fc.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_2048_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v7 @kind object;
  #L1ec500.  v9:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec504.  v1:= "RSA_PSS_3072_SHA256" @kind object;
  #L1ec508.  v2:= 1I;
  #L1ec50a.  v3:= "RSA" @kind object;
  #L1ec50e.  v4:= "RSASSA-PSS" @kind object;
  #L1ec512.  v5:= 3072I;
  #L1ec516.  v0:= v9 @kind object;
  #L1ec518.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec51e.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_3072_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v9 @kind object;
  #L1ec522.  v10:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec526.  v1:= "RSA_PSS_4096_SHA256" @kind object;
  #L1ec52a.  v2:= 2I;
  #L1ec52c.  v3:= "RSA" @kind object;
  #L1ec530.  v4:= "RSASSA-PSS" @kind object;
  #L1ec534.  v5:= 4096I;
  #L1ec538.  v0:= v10 @kind object;
  #L1ec53a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec540.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v10 @kind object;
  #L1ec544.  v18:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec548.  v19:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA512` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L1ec54c.  v12:= "RSA_PSS_4096_SHA512" @kind object;
  #L1ec550.  v13:= 3I;
  #L1ec552.  v14:= "RSA" @kind object;
  #L1ec556.  v15:= "RSASSA-PSS" @kind object;
  #L1ec55a.  v16:= 4096I;
  #L1ec55e.  v11:= v18 @kind object;
  #L1ec562.  v17:= v19 @kind object;
  #L1ec566.  call `<init>`(v11, v12, v13, v14, v15, v16, v17) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec56c.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA512` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v18 @kind object;
  #L1ec570.  v11:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec574.  v1:= "RSA_SIGN_PKCS1_2048_SHA256" @kind object;
  #L1ec578.  v2:= 4I;
  #L1ec57a.  v3:= "RSA" @kind object;
  #L1ec57e.  v4:= "RSASSA-PKCS1-v1_5" @kind object;
  #L1ec582.  v5:= 2048I;
  #L1ec586.  v0:= v11 @kind object;
  #L1ec588.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec58e.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_2048_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v11 @kind object;
  #L1ec592.  v12:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec596.  v1:= "RSA_SIGN_PKCS1_3072_SHA256" @kind object;
  #L1ec59a.  v2:= 5I;
  #L1ec59c.  v3:= "RSA" @kind object;
  #L1ec5a0.  v4:= "RSASSA-PKCS1-v1_5" @kind object;
  #L1ec5a4.  v5:= 3072I;
  #L1ec5a8.  v0:= v12 @kind object;
  #L1ec5aa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec5b0.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_3072_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v12 @kind object;
  #L1ec5b4.  v13:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec5b8.  v1:= "RSA_SIGN_PKCS1_4096_SHA256" @kind object;
  #L1ec5bc.  v2:= 6I;
  #L1ec5be.  v3:= "RSA" @kind object;
  #L1ec5c2.  v4:= "RSASSA-PKCS1-v1_5" @kind object;
  #L1ec5c6.  v5:= 4096I;
  #L1ec5ca.  v0:= v13 @kind object;
  #L1ec5cc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec5d2.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v13 @kind object;
  #L1ec5d6.  v14:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec5da.  v1:= "RSA_SIGN_PKCS1_4096_SHA512" @kind object;
  #L1ec5de.  v2:= 7I;
  #L1ec5e0.  v3:= "RSA" @kind object;
  #L1ec5e4.  v4:= "RSASSA-PKCS1-v1_5" @kind object;
  #L1ec5e8.  v0:= v14 @kind object;
  #L1ec5ea.  v6:= v19 @kind object;
  #L1ec5ee.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec5f4.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA512` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v14 @kind object;
  #L1ec5f8.  v15:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec5fc.  v1:= "ECDSA_P256_SHA256" @kind object;
  #L1ec600.  v2:= 8I;
  #L1ec604.  v3:= "EC" @kind object;
  #L1ec608.  v4:= "ECDSA" @kind object;
  #L1ec60c.  v5:= 256I;
  #L1ec610.  v0:= v15 @kind object;
  #L1ec612.  v6:= v8 @kind object;
  #L1ec614.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec61a.  `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P256_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v15 @kind object;
  #L1ec61e.  v8:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec622.  v26:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA384` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L1ec626.  v21:= "ECDSA_P384_SHA384" @kind object;
  #L1ec62a.  v22:= 9I;
  #L1ec62e.  v23:= "EC" @kind object;
  #L1ec632.  v24:= "ECDSA" @kind object;
  #L1ec636.  v25:= 384I;
  #L1ec63a.  v20:= v8 @kind object;
  #L1ec63e.  call `<init>`(v20, v21, v22, v23, v24, v25, v26) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec644.  `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P384_SHA384` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v8 @kind object;
  #L1ec648.  v16:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L1ec64c.  v1:= "ECDSA_P521_SHA512" @kind object;
  #L1ec650.  v2:= 10I;
  #L1ec654.  v3:= "EC" @kind object;
  #L1ec658.  v4:= "ECDSA" @kind object;
  #L1ec65c.  v5:= 521I;
  #L1ec660.  v0:= v16 @kind object;
  #L1ec664.  v6:= v19 @kind object;
  #L1ec668.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L1ec66e.  `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P521_SHA512` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v16 @kind object;
  #L1ec672.  v0:= 11I;
  #L1ec676.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`[v0];
  #L1ec67a.  v1:= 0I;
  #L1ec67c.  v0[v1]:= v7 @kind object;
  #L1ec680.  v1:= 1I;
  #L1ec682.  v0[v1]:= v9 @kind object;
  #L1ec686.  v1:= 2I;
  #L1ec688.  v0[v1]:= v10 @kind object;
  #L1ec68c.  v1:= 3I;
  #L1ec68e.  v0[v1]:= v18 @kind object;
  #L1ec692.  v1:= 4I;
  #L1ec694.  v0[v1]:= v11 @kind object;
  #L1ec698.  v1:= 5I;
  #L1ec69a.  v0[v1]:= v12 @kind object;
  #L1ec69e.  v1:= 6I;
  #L1ec6a0.  v0[v1]:= v13 @kind object;
  #L1ec6a4.  v1:= 7I;
  #L1ec6a6.  v0[v1]:= v14 @kind object;
  #L1ec6aa.  v1:= 8I;
  #L1ec6ae.  v0[v1]:= v15 @kind object;
  #L1ec6b2.  v1:= 9I;
  #L1ec6b6.  v0[v1]:= v8 @kind object;
  #L1ec6ba.  v1:= 10I;
  #L1ec6be.  v0[v1]:= v16 @kind object;
  #L1ec6c2.  `@@com.google.crypto.tink.subtle.PemKeyType.a` @type ^`com.google.crypto.tink.subtle.PemKeyType`[] := v0 @kind object;
  #L1ec6c6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.PemKeyType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `com.google.crypto.tink.subtle.Enums$HashType` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1ec6d8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1ec6de.  v0.`com.google.crypto.tink.subtle.PemKeyType.keyType` @type ^`java.lang.String` := v3 @kind object;
  #L1ec6e2.  v0.`com.google.crypto.tink.subtle.PemKeyType.algorithm` @type ^`java.lang.String` := v4 @kind object;
  #L1ec6e6.  v0.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int` := v5;
  #L1ec6ea.  v0.`com.google.crypto.tink.subtle.PemKeyType.hash` @type ^`com.google.crypto.tink.subtle.Enums$HashType` := v6 @kind object;
  #L1ec6ee.  return @kind void;
}
procedure `java.security.Key` `a`(`com.google.crypto.tink.subtle.PemKeyType` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.a:([B)Ljava/security/Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ec204.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1ec208.  v1:= v2.`com.google.crypto.tink.subtle.PemKeyType.keyType` @type ^`java.lang.String` @kind object;
  #L1ec20c.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1ec212.  v0:= temp @kind object;
  #L1ec214.  v0:= (`java.security.KeyFactory`) v0 @kind object;
  #L1ec218.  v1:= new `java.security.spec.PKCS8EncodedKeySpec`;
  #L1ec21c.  call `<init>`(v1, v3) @signature `Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L1ec222.  call temp:= `generatePrivate`(v0, v1) @signature `Ljava/security/KeyFactory;.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;` @kind virtual;
  #L1ec228.  v3:= temp @kind object;
  #L1ec22a.  call temp:= `c`(v2, v3) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.c:(Ljava/security/Key;)Ljava/security/Key;` @kind direct;
  #L1ec230.  v3:= temp @kind object;
  #L1ec232.  return v3 @kind object;
}
procedure `java.security.Key` `b`(`com.google.crypto.tink.subtle.PemKeyType` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.b:([B)Ljava/security/Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ec244.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1ec248.  v1:= v2.`com.google.crypto.tink.subtle.PemKeyType.keyType` @type ^`java.lang.String` @kind object;
  #L1ec24c.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1ec252.  v0:= temp @kind object;
  #L1ec254.  v0:= (`java.security.KeyFactory`) v0 @kind object;
  #L1ec258.  v1:= new `java.security.spec.X509EncodedKeySpec`;
  #L1ec25c.  call `<init>`(v1, v3) @signature `Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L1ec262.  call temp:= `generatePublic`(v0, v1) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L1ec268.  v3:= temp @kind object;
  #L1ec26a.  call temp:= `c`(v2, v3) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.c:(Ljava/security/Key;)Ljava/security/Key;` @kind direct;
  #L1ec270.  v3:= temp @kind object;
  #L1ec272.  return v3 @kind object;
}
procedure `java.security.Key` `c`(`com.google.crypto.tink.subtle.PemKeyType` v5 @kind this, `java.security.Key` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.c:(Ljava/security/Key;)Ljava/security/Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ec3b4.  v0:= v5.`com.google.crypto.tink.subtle.PemKeyType.keyType` @type ^`java.lang.String` @kind object;
  #L1ec3b8.  v1:= "RSA" @kind object;
  #L1ec3bc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ec3c2.  v0:= temp;
  #L1ec3c4.  v1:= 1I;
  #L1ec3c6.  v2:= 0I;
  #L1ec3c8.  v3:= 2I;
  #L1ec3ca.  if v0 == 0 then goto L1ec426;
  #L1ec3ce.  v0:= v6 @kind object;
  #L1ec3d0.  v0:= (`java.security.interfaces.RSAKey`) v0 @kind object;
  #L1ec3d4.  call temp:= `getModulus`(v0) @signature `Ljava/security/interfaces/RSAKey;.getModulus:()Ljava/math/BigInteger;` @kind interface;
  #L1ec3da.  v0:= temp @kind object;
  #L1ec3dc.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L1ec3e2.  v0:= temp;
  #L1ec3e4.  v4:= v5.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int`;
  #L1ec3e8.  if v0 != v4 then goto L1ec3ee;
  #L1ec3ec.  goto L1ec458;
  #L1ec3ee.  v6:= new `java.security.GeneralSecurityException`;
  #L1ec3f2.  v3:= new `java.lang.Object`[v3];
  #L1ec3f6.  v4:= v5.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int`;
  #L1ec3fa.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1ec400.  v4:= temp @kind object;
  #L1ec402.  v3[v2]:= v4 @kind object;
  #L1ec406.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1ec40c.  v0:= temp @kind object;
  #L1ec40e.  v3[v1]:= v0 @kind object;
  #L1ec412.  v0:= "invalid RSA key size, want %d got %d" @kind object;
  #L1ec416.  call temp:= `format`(v0, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ec41c.  v0:= temp @kind object;
  #L1ec41e.  call `<init>`(v6, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ec424.  throw v6;
  #L1ec426.  v0:= v6 @kind object;
  #L1ec428.  v0:= (`java.security.interfaces.ECKey`) v0 @kind object;
  #L1ec42c.  call temp:= `getParams`(v0) @signature `Ljava/security/interfaces/ECKey;.getParams:()Ljava/security/spec/ECParameterSpec;` @kind interface;
  #L1ec432.  v0:= temp @kind object;
  #L1ec434.  call temp:= `isNistEcParameterSpec`(v0) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.isNistEcParameterSpec:(Ljava/security/spec/ECParameterSpec;)Z` @kind static;
  #L1ec43a.  v4:= temp;
  #L1ec43c.  if v4 == 0 then goto L1ec492;
  #L1ec440.  call temp:= `getCurve`(v0) @signature `Ljava/security/spec/ECParameterSpec;.getCurve:()Ljava/security/spec/EllipticCurve;` @kind virtual;
  #L1ec446.  v0:= temp @kind object;
  #L1ec448.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.c:(Ljava/security/spec/EllipticCurve;)I` @kind static;
  #L1ec44e.  v0:= temp;
  #L1ec450.  v4:= v5.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int`;
  #L1ec454.  if v0 != v4 then goto L1ec45a;
  #L1ec458.  return v6 @kind object;
  #L1ec45a.  v6:= new `java.security.GeneralSecurityException`;
  #L1ec45e.  v3:= new `java.lang.Object`[v3];
  #L1ec462.  v4:= v5.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int`;
  #L1ec466.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1ec46c.  v4:= temp @kind object;
  #L1ec46e.  v3[v2]:= v4 @kind object;
  #L1ec472.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1ec478.  v0:= temp @kind object;
  #L1ec47a.  v3[v1]:= v0 @kind object;
  #L1ec47e.  v0:= "invalid EC key size, want %d got %d" @kind object;
  #L1ec482.  call temp:= `format`(v0, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ec488.  v0:= temp @kind object;
  #L1ec48a.  call `<init>`(v6, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ec490.  throw v6;
  #L1ec492.  v6:= new `java.security.GeneralSecurityException`;
  #L1ec496.  v1:= new `java.lang.StringBuilder`;
  #L1ec49a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ec4a0.  v2:= "unsupport EC spec: " @kind object;
  #L1ec4a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec4aa.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ec4b0.  v0:= temp @kind object;
  #L1ec4b2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec4b8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ec4be.  v0:= temp @kind object;
  #L1ec4c0.  call `<init>`(v6, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ec4c6.  throw v6;
}
procedure `com.google.crypto.tink.subtle.PemKeyType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.valueOf:(Ljava/lang/String;)Lcom/google/crypto/tink/subtle/PemKeyType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ec1bc.  v0:= constclass @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L1ec1c0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1ec1c6.  v1:= temp @kind object;
  #L1ec1c8.  v1:= (`com.google.crypto.tink.subtle.PemKeyType`) v1 @kind object;
  #L1ec1cc.  return v1 @kind object;
}
procedure `com.google.crypto.tink.subtle.PemKeyType`[] `values`() @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.values:()[Lcom/google/crypto/tink/subtle/PemKeyType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ec1e0.  v0:= `@@com.google.crypto.tink.subtle.PemKeyType.a` @type ^`com.google.crypto.tink.subtle.PemKeyType`[] @kind object;
  #L1ec1e4.  call temp:= `clone`(v0) @signature `[Lcom/google/crypto/tink/subtle/PemKeyType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1ec1ea.  v0:= temp @kind object;
  #L1ec1ec.  v0:= (`com.google.crypto.tink.subtle.PemKeyType`[]) v0 @kind object;
  #L1ec1f0.  return v0 @kind object;
}
procedure `java.security.Key` `readKey`(`com.google.crypto.tink.subtle.PemKeyType` v7 @kind this, `java.io.BufferedReader` v8 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.readKey:(Ljava/io/BufferedReader;)Ljava/security/Key;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ec284.  call temp:= `readLine`(v8) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L1ec28a.  v0:= temp @kind object;
  #L1ec28c.  if v0 == 0 then goto L1ec2aa;
  #L1ec290.  v1:= "-----BEGIN " @kind object;
  #L1ec294.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ec29a.  v1:= temp;
  #L1ec29c.  if v1 != 0 then goto L1ec2aa;
  #L1ec2a0.  call temp:= `readLine`(v8) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L1ec2a6.  v0:= temp @kind object;
  #L1ec2a8.  goto L1ec28c;
  #L1ec2aa.  v1:= 0I;
  #L1ec2ac.  if v0 != 0 then goto L1ec2b2;
  #L1ec2b0.  return v1 @kind object;
  #L1ec2b2.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1ec2b8.  v0:= temp @kind object;
  #L1ec2ba.  v2:= 11I;
  #L1ec2be.  call temp:= `substring`(v0, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1ec2c4.  v0:= temp @kind object;
  #L1ec2c6.  v2:= "-----" @kind object;
  #L1ec2ca.  call temp:= `indexOf`(v0, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L1ec2d0.  v3:= temp;
  #L1ec2d2.  if v3 >= 0 then goto L1ec2d8;
  #L1ec2d6.  return v1 @kind object;
  #L1ec2d8.  v4:= 0I;
  #L1ec2da.  call temp:= `substring`(v0, v4, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ec2e0.  v0:= temp @kind object;
  #L1ec2e2.  v3:= new `java.lang.StringBuilder`;
  #L1ec2e6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ec2ec.  v5:= "-----END " @kind object;
  #L1ec2f0.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec2f6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec2fc.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec302.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ec308.  v2:= temp @kind object;
  #L1ec30a.  v3:= new `java.lang.StringBuilder`;
  #L1ec30e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ec314.  call temp:= `readLine`(v8) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L1ec31a.  v5:= temp @kind object;
  #L1ec31c.  if v5 == 0 then goto L1ec348;
  #L1ec320.  v6:= ":" @kind object;
  #L1ec324.  call temp:= `indexOf`(v5, v6) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L1ec32a.  v6:= temp;
  #L1ec32c.  if v6 <= 0 then goto L1ec332;
  #L1ec330.  goto L1ec314;
  #L1ec332.  call temp:= `contains`(v5, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1ec338.  v6:= temp;
  #L1ec33a.  if v6 == 0 then goto L1ec340;
  #L1ec33e.  goto L1ec348;
  #L1ec340.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec346.  goto L1ec314;
  #L1ec348.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ec34e.  v8:= temp @kind object;
  #L1ec350.  call temp:= `decode`(v8, v4) @signature `Lcom/google/crypto/tink/subtle/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L1ec356.  v8:= temp @kind object;
  #L1ec358.  v2:= "PUBLIC KEY" @kind object;
  #L1ec35c.  call temp:= `contains`(v0, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1ec362.  v2:= temp;
  #L1ec364.  if v2 == 0 then goto L1ec372;
  #L1ec368.  call temp:= `b`(v7, v8) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.b:([B)Ljava/security/Key;` @kind direct;
  #L1ec36e.  v8:= temp @kind object;
  #L1ec370.  return v8 @kind object;
  #L1ec372.  v2:= "PRIVATE KEY" @kind object;
  #L1ec376.  call temp:= `contains`(v0, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1ec37c.  v0:= temp;
  #L1ec37e.  if v0 == 0 then goto L1ec38c;
  #L1ec382.  call temp:= `a`(v7, v8) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.a:([B)Ljava/security/Key;` @kind direct;
  #L1ec388.  v8:= temp @kind object;
  #L1ec38a.  return v8 @kind object;
  #L1ec38c.  return v1 @kind object;
  catch `java.security.GeneralSecurityException` @[L1ec348..L1ec38a] goto L1ec38c;
  catch `java.lang.IllegalArgumentException` @[L1ec348..L1ec38a] goto L1ec38c;
}
