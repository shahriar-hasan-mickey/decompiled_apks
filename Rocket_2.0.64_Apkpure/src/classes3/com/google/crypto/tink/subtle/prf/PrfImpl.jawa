record `com.google.crypto.tink.subtle.prf.PrfImpl` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.prf.Prf` @kind interface {
  `com.google.crypto.tink.subtle.prf.StreamingPrf` `com.google.crypto.tink.subtle.prf.PrfImpl.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.prf.PrfImpl` v0 @kind this, `com.google.crypto.tink.subtle.prf.StreamingPrf` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/prf/PrfImpl;.<init>:(Lcom/google/crypto/tink/subtle/prf/StreamingPrf;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1f0bf8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f0bfe.  v0.`com.google.crypto.tink.subtle.prf.PrfImpl.a` @type ^`com.google.crypto.tink.subtle.prf.StreamingPrf` := v1 @kind object;
  #L1f0c02.  return @kind void;
}
procedure `byte`[] `a`(`java.io.InputStream` v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/subtle/prf/PrfImpl;.a:(Ljava/io/InputStream;I)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1f0b7c.  v0:= new `byte`[v4];
  #L1f0b80.  v1:= 0I;
  #L1f0b82.  if v1 >= v4 then goto L1f0baa;
  #L1f0b86.  v2:= v4 - v1 @kind int;
  #L1f0b8a.  call temp:= `read`(v3, v0, v1, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L1f0b90.  v2:= temp;
  #L1f0b92.  if v2 <= 0 then goto L1f0b9a;
  #L1f0b96.  v1:= v1 + v2 @kind int;
  #L1f0b98.  goto L1f0b82;
  #L1f0b9a.  v3:= new `java.security.GeneralSecurityException`;
  #L1f0b9e.  v4:= "Provided StreamingPrf terminated before providing requested number of bytes." @kind object;
  #L1f0ba2.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f0ba8.  throw v3;
  #L1f0baa.  return v0 @kind object;
  #L1f0bac.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L1f0bae.  v4:= new `java.security.GeneralSecurityException`;
  #L1f0bb2.  call `<init>`(v4, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1f0bb8.  throw v4;
  catch `java.io.IOException` @[L1f0b7c..L1f0baa] goto L1f0bac;
}
procedure `com.google.crypto.tink.subtle.prf.PrfImpl` `wrap`(`com.google.crypto.tink.subtle.prf.StreamingPrf` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/prf/PrfImpl;.wrap:(Lcom/google/crypto/tink/subtle/prf/StreamingPrf;)Lcom/google/crypto/tink/subtle/prf/PrfImpl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f0bdc.  v0:= new `com.google.crypto.tink.subtle.prf.PrfImpl`;
  #L1f0be0.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/prf/PrfImpl;.<init>:(Lcom/google/crypto/tink/subtle/prf/StreamingPrf;)V` @kind direct;
  #L1f0be6.  return v0 @kind object;
}
procedure `byte`[] `compute`(`com.google.crypto.tink.subtle.prf.PrfImpl` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/subtle/prf/PrfImpl;.compute:([BI)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f0b2c.  if v2 == 0 then goto L1f0b5a;
  #L1f0b30.  if v3 <= 0 then goto L1f0b4a;
  #L1f0b34.  v0:= v1.`com.google.crypto.tink.subtle.prf.PrfImpl.a` @type ^`com.google.crypto.tink.subtle.prf.StreamingPrf` @kind object;
  #L1f0b38.  call temp:= `computePrf`(v0, v2) @signature `Lcom/google/crypto/tink/subtle/prf/StreamingPrf;.computePrf:([B)Ljava/io/InputStream;` @kind interface;
  #L1f0b3e.  v2:= temp @kind object;
  #L1f0b40.  call temp:= `a`(v2, v3) @signature `Lcom/google/crypto/tink/subtle/prf/PrfImpl;.a:(Ljava/io/InputStream;I)[B` @kind static;
  #L1f0b46.  v2:= temp @kind object;
  #L1f0b48.  return v2 @kind object;
  #L1f0b4a.  v2:= new `java.security.GeneralSecurityException`;
  #L1f0b4e.  v3:= "Invalid outputLength specified." @kind object;
  #L1f0b52.  call `<init>`(v2, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f0b58.  throw v2;
  #L1f0b5a.  v2:= new `java.security.GeneralSecurityException`;
  #L1f0b5e.  v3:= "Invalid input provided." @kind object;
  #L1f0b62.  call `<init>`(v2, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f0b68.  throw v2;
}
