record `com.google.crypto.tink.subtle.EngineWrapper$TMac` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.subtle.EngineWrapper` @kind interface {
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EngineWrapper$TMac` v0 @kind this) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMac;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ea400.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ea406.  return @kind void;
}
procedure `java.lang.Object` `getInstance`(`com.google.crypto.tink.subtle.EngineWrapper$TMac` v0 @kind this, `java.lang.String` v1 @kind object, `java.security.Provider` v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMac;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1ea3bc.  call temp:= `getInstance`(v0, v1, v2) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMac;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Mac;` @kind virtual;
  #L1ea3c2.  v1:= temp @kind object;
  #L1ea3c4.  return v1 @kind object;
}
procedure `javax.crypto.Mac` `getInstance`(`com.google.crypto.tink.subtle.EngineWrapper$TMac` v0 @kind this, `java.lang.String` v1 @kind object, `java.security.Provider` v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMac;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Mac;` @AccessFlag PUBLIC {
    temp;

  #L1ea3d8.  if v2 != 0 then goto L1ea3e6;
  #L1ea3dc.  call temp:= `getInstance`(v1) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L1ea3e2.  v1:= temp @kind object;
  #L1ea3e4.  return v1 @kind object;
  #L1ea3e6.  call temp:= `getInstance`(v1, v2) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Mac;` @kind static;
  #L1ea3ec.  v1:= temp @kind object;
  #L1ea3ee.  return v1 @kind object;
}
