record `com.google.crypto.tink.subtle.EcdsaSignJce` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.PublicKeySign` @kind interface {
  `java.security.interfaces.ECPrivateKey` `com.google.crypto.tink.subtle.EcdsaSignJce.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.crypto.tink.subtle.EcdsaSignJce.b` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` `com.google.crypto.tink.subtle.EcdsaSignJce.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EcdsaSignJce` v0 @kind this, `java.security.interfaces.ECPrivateKey` v1 @kind object, `com.google.crypto.tink.subtle.Enums$HashType` v2 @kind object, `com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EcdsaSignJce;.<init>:(Ljava/security/interfaces/ECPrivateKey;Lcom/google/crypto/tink/subtle/Enums$HashType;Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e49d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e49da.  v0.`com.google.crypto.tink.subtle.EcdsaSignJce.a` @type ^`java.security.interfaces.ECPrivateKey` := v1 @kind object;
  #L1e49de.  call temp:= `toEcdsaAlgo`(v2) @signature `Lcom/google/crypto/tink/subtle/SubtleUtil;.toEcdsaAlgo:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L1e49e4.  v1:= temp @kind object;
  #L1e49e6.  v0.`com.google.crypto.tink.subtle.EcdsaSignJce.b` @type ^`java.lang.String` := v1 @kind object;
  #L1e49ea.  v0.`com.google.crypto.tink.subtle.EcdsaSignJce.c` @type ^`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` := v3 @kind object;
  #L1e49ee.  return @kind void;
}
procedure `byte`[] `sign`(`com.google.crypto.tink.subtle.EcdsaSignJce` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EcdsaSignJce;.sign:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e4960.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.SIGNATURE` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L1e4964.  v1:= v2.`com.google.crypto.tink.subtle.EcdsaSignJce.b` @type ^`java.lang.String` @kind object;
  #L1e4968.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1e496e.  v0:= temp @kind object;
  #L1e4970.  v0:= (`java.security.Signature`) v0 @kind object;
  #L1e4974.  v1:= v2.`com.google.crypto.tink.subtle.EcdsaSignJce.a` @type ^`java.security.interfaces.ECPrivateKey` @kind object;
  #L1e4978.  call `initSign`(v0, v1) @signature `Ljava/security/Signature;.initSign:(Ljava/security/PrivateKey;)V` @kind virtual;
  #L1e497e.  call `update`(v0, v3) @signature `Ljava/security/Signature;.update:([B)V` @kind virtual;
  #L1e4984.  call temp:= `sign`(v0) @signature `Ljava/security/Signature;.sign:()[B` @kind virtual;
  #L1e498a.  v3:= temp @kind object;
  #L1e498c.  v0:= v2.`com.google.crypto.tink.subtle.EcdsaSignJce.c` @type ^`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` @kind object;
  #L1e4990.  v1:= `@@com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding.IEEE_P1363` @type ^`com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding` @kind object;
  #L1e4994.  if v0 != v1 then goto L1e49c0;
  #L1e4998.  v0:= v2.`com.google.crypto.tink.subtle.EcdsaSignJce.a` @type ^`java.security.interfaces.ECPrivateKey` @kind object;
  #L1e499c.  call temp:= `getParams`(v0) @signature `Ljava/security/interfaces/ECPrivateKey;.getParams:()Ljava/security/spec/ECParameterSpec;` @kind interface;
  #L1e49a2.  v0:= temp @kind object;
  #L1e49a4.  call temp:= `getCurve`(v0) @signature `Ljava/security/spec/ECParameterSpec;.getCurve:()Ljava/security/spec/EllipticCurve;` @kind virtual;
  #L1e49aa.  v0:= temp @kind object;
  #L1e49ac.  call temp:= `fieldSizeInBytes`(v0) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.fieldSizeInBytes:(Ljava/security/spec/EllipticCurve;)I` @kind static;
  #L1e49b2.  v0:= temp;
  #L1e49b4.  v0:= v0 * 2;
  #L1e49b8.  call temp:= `ecdsaDer2Ieee`(v3, v0) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.ecdsaDer2Ieee:([BI)[B` @kind static;
  #L1e49be.  v3:= temp @kind object;
  #L1e49c0.  return v3 @kind object;
}
