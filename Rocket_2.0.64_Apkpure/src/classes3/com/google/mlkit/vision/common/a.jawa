record `com.google.mlkit.vision.common.a` @kind class @AccessFlag FINAL extends `com.google.mlkit.vision.common.PointF3D` @kind class {
  `float` `com.google.mlkit.vision.common.a.a` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.mlkit.vision.common.a.b` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.mlkit.vision.common.a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.vision.common.a` v0 @kind this, `float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/google/mlkit/vision/common/a;.<init>:(FFF)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2aab50.  call `<init>`(v0) @signature `Lcom/google/mlkit/vision/common/PointF3D;.<init>:()V` @kind direct;
  #L2aab56.  v0.`com.google.mlkit.vision.common.a.a` @type ^`float` := v1;
  #L2aab5a.  v0.`com.google.mlkit.vision.common.a.b` @type ^`float` := v2;
  #L2aab5e.  v0.`com.google.mlkit.vision.common.a.c` @type ^`float` := v3;
  #L2aab62.  return @kind void;
}
procedure `boolean` `equals`(`com.google.mlkit.vision.common.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/mlkit/vision/common/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2aa9c4.  v0:= 1I;
  #L2aa9c6.  if v5 != v4 then goto L2aa9cc;
  #L2aa9ca.  return v0;
  #L2aa9cc.  v1:= instanceof @variable v5 @type ^`com.google.mlkit.vision.common.PointF3D` @kind boolean;
  #L2aa9d0.  v2:= 0I;
  #L2aa9d2.  if v1 == 0 then goto L2aaa3c;
  #L2aa9d6.  v5:= (`com.google.mlkit.vision.common.PointF3D`) v5 @kind object;
  #L2aa9da.  v1:= v4.`com.google.mlkit.vision.common.a.a` @type ^`float`;
  #L2aa9de.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aa9e4.  v1:= temp;
  #L2aa9e6.  call temp:= `getX`(v5) @signature `Lcom/google/mlkit/vision/common/PointF3D;.getX:()F` @kind virtual;
  #L2aa9ec.  v3:= temp;
  #L2aa9ee.  call temp:= `floatToIntBits`(v3) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aa9f4.  v3:= temp;
  #L2aa9f6.  if v1 != v3 then goto L2aaa3c;
  #L2aa9fa.  v1:= v4.`com.google.mlkit.vision.common.a.b` @type ^`float`;
  #L2aa9fe.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aaa04.  v1:= temp;
  #L2aaa06.  call temp:= `getY`(v5) @signature `Lcom/google/mlkit/vision/common/PointF3D;.getY:()F` @kind virtual;
  #L2aaa0c.  v3:= temp;
  #L2aaa0e.  call temp:= `floatToIntBits`(v3) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aaa14.  v3:= temp;
  #L2aaa16.  if v1 != v3 then goto L2aaa3c;
  #L2aaa1a.  v1:= v4.`com.google.mlkit.vision.common.a.c` @type ^`float`;
  #L2aaa1e.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aaa24.  v1:= temp;
  #L2aaa26.  call temp:= `getZ`(v5) @signature `Lcom/google/mlkit/vision/common/PointF3D;.getZ:()F` @kind virtual;
  #L2aaa2c.  v5:= temp;
  #L2aaa2e.  call temp:= `floatToIntBits`(v5) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aaa34.  v5:= temp;
  #L2aaa36.  if v1 != v5 then goto L2aaa3c;
  #L2aaa3a.  return v0;
  #L2aaa3c.  return v2;
}
procedure `float` `getX`(`com.google.mlkit.vision.common.a` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/a;.getX:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aaa50.  v0:= v1.`com.google.mlkit.vision.common.a.a` @type ^`float`;
  #L2aaa54.  return v0;
}
procedure `float` `getY`(`com.google.mlkit.vision.common.a` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/a;.getY:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aaa68.  v0:= v1.`com.google.mlkit.vision.common.a.b` @type ^`float`;
  #L2aaa6c.  return v0;
}
procedure `float` `getZ`(`com.google.mlkit.vision.common.a` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/a;.getZ:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aaa80.  v0:= v1.`com.google.mlkit.vision.common.a.c` @type ^`float`;
  #L2aaa84.  return v0;
}
procedure `int` `hashCode`(`com.google.mlkit.vision.common.a` v3 @kind this) @signature `Lcom/google/mlkit/vision/common/a;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2aaa98.  v0:= v3.`com.google.mlkit.vision.common.a.a` @type ^`float`;
  #L2aaa9c.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aaaa2.  v0:= temp;
  #L2aaaa4.  v1:= 1000003I;
  #L2aaaaa.  v0:= v0 ^~ v1 @kind int;
  #L2aaaac.  v0:= v0 * v1 @kind int;
  #L2aaab0.  v2:= v3.`com.google.mlkit.vision.common.a.b` @type ^`float`;
  #L2aaab4.  call temp:= `floatToIntBits`(v2) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aaaba.  v2:= temp;
  #L2aaabc.  v0:= v0 ^~ v2 @kind int;
  #L2aaabe.  v0:= v0 * v1 @kind int;
  #L2aaac2.  v1:= v3.`com.google.mlkit.vision.common.a.c` @type ^`float`;
  #L2aaac6.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2aaacc.  v1:= temp;
  #L2aaace.  v0:= v0 ^~ v1 @kind int;
  #L2aaad0.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.mlkit.vision.common.a` v5 @kind this) @signature `Lcom/google/mlkit/vision/common/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2aaae4.  v0:= v5.`com.google.mlkit.vision.common.a.a` @type ^`float`;
  #L2aaae8.  v1:= v5.`com.google.mlkit.vision.common.a.b` @type ^`float`;
  #L2aaaec.  v2:= v5.`com.google.mlkit.vision.common.a.c` @type ^`float`;
  #L2aaaf0.  v3:= new `java.lang.StringBuilder`;
  #L2aaaf4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aaafa.  v4:= "PointF3D{x=" @kind object;
  #L2aaafe.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab04.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab0a.  v0:= ", y=" @kind object;
  #L2aab0e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab14.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab1a.  v0:= ", z=" @kind object;
  #L2aab1e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab24.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab2a.  v0:= "}" @kind object;
  #L2aab2e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab34.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aab3a.  v0:= temp @kind object;
  #L2aab3c.  return v0 @kind object;
}
