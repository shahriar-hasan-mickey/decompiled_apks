record `s0.g` @kind class @AccessFlag FINAL extends `s0.f` @kind class {
}
global `long` `@@s0.g.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`s0.g` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Ls0/g;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fb250.  call `<init>`(v0, v1) @signature `Ls0/f;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4fb256.  return @kind void;
}
procedure `void` `a`(`s0.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ls0/g;.a:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L4fb268.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L4fb26c.  call `b`(v0, v1) @signature `Ls0/g;.b:(Ljava/lang/Runnable;)V` @kind virtual;
  #L4fb272.  return @kind void;
}
procedure `void` `b`(`s0.g` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Ls0/g;.b:(Ljava/lang/Runnable;)V` @AccessFlag PROTECTED {
    temp;

  #L4fb284.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L4fb28a.  return @kind void;
}
procedure `java.lang.String` `toString`(`s0.g` v2 @kind this) @signature `Ls0/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fb1f0.  v0:= new `java.lang.StringBuilder`;
  #L4fb1f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fb1fa.  v1:= "RunnableDisposable(disposed=" @kind object;
  #L4fb1fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb204.  call temp:= `isDisposed`(v2) @signature `Ls0/f;.isDisposed:()Z` @kind virtual;
  #L4fb20a.  v1:= temp;
  #L4fb20c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb212.  v1:= ", " @kind object;
  #L4fb216.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb21c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4fb222.  v1:= temp @kind object;
  #L4fb224.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb22a.  v1:= ")" @kind object;
  #L4fb22e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb234.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fb23a.  v0:= temp @kind object;
  #L4fb23c.  return v0 @kind object;
}
