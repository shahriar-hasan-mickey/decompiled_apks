record `s0.a` @kind class @AccessFlag FINAL extends `s0.f` @kind class {
}
global `long` `@@s0.a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`s0.a` v0 @kind this, `io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Ls0/a;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fae78.  call `<init>`(v0, v1) @signature `Ls0/f;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4fae7e.  return @kind void;
}
procedure `void` `a`(`s0.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ls0/a;.a:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L4faec0.  v1:= (`io.reactivex.rxjava3.functions.Action`) v1 @kind object;
  #L4faec4.  call `b`(v0, v1) @signature `Ls0/a;.b:(Lio/reactivex/rxjava3/functions/Action;)V` @kind virtual;
  #L4faeca.  return @kind void;
}
procedure `void` `b`(`s0.a` v0 @kind this, `io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Ls0/a;.b:(Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PROTECTED {
    temp;

  #L4fae90.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4fae96.  return @kind void;
  #L4fae98.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fae9a.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4faea0.  v1:= temp @kind object;
  #L4faea2.  throw v1;
  catch `java.lang.Throwable` @[L4fae90..L4fae96] goto L4fae98;
}
procedure `java.lang.String` `toString`(`s0.a` v2 @kind this) @signature `Ls0/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fae18.  v0:= new `java.lang.StringBuilder`;
  #L4fae1c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fae22.  v1:= "ActionDisposable(disposed=" @kind object;
  #L4fae26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae2c.  call temp:= `isDisposed`(v2) @signature `Ls0/f;.isDisposed:()Z` @kind virtual;
  #L4fae32.  v1:= temp;
  #L4fae34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae3a.  v1:= ", " @kind object;
  #L4fae3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae44.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4fae4a.  v1:= temp @kind object;
  #L4fae4c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae52.  v1:= ")" @kind object;
  #L4fae56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae5c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fae62.  v0:= temp @kind object;
  #L4fae64.  return v0 @kind object;
}
