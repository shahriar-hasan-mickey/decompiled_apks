record `s0.b` @kind class @AccessFlag FINAL extends `s0.f` @kind class {
}
global `long` `@@s0.b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`s0.b` v0 @kind this, `java.lang.AutoCloseable` v1 @kind object) @signature `Ls0/b;.<init>:(Ljava/lang/AutoCloseable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4faf3c.  call `<init>`(v0, v1) @signature `Ls0/f;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4faf42.  return @kind void;
}
procedure `void` `a`(`s0.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ls0/b;.a:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L4faf84.  v1:= (`java.lang.AutoCloseable`) v1 @kind object;
  #L4faf88.  call `b`(v0, v1) @signature `Ls0/b;.b:(Ljava/lang/AutoCloseable;)V` @kind virtual;
  #L4faf8e.  return @kind void;
}
procedure `void` `b`(`s0.b` v0 @kind this, `java.lang.AutoCloseable` v1 @kind object) @signature `Ls0/b;.b:(Ljava/lang/AutoCloseable;)V` @AccessFlag PROTECTED {
    temp;

  #L4faf54.  call `close`(v1) @signature `Ljava/lang/AutoCloseable;.close:()V` @kind interface;
  #L4faf5a.  return @kind void;
  #L4faf5c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4faf5e.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4faf64.  v1:= temp @kind object;
  #L4faf66.  throw v1;
  catch `java.lang.Throwable` @[L4faf54..L4faf5a] goto L4faf5c;
}
procedure `java.lang.String` `toString`(`s0.b` v2 @kind this) @signature `Ls0/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4faedc.  v0:= new `java.lang.StringBuilder`;
  #L4faee0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4faee6.  v1:= "AutoCloseableDisposable(disposed=" @kind object;
  #L4faeea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4faef0.  call temp:= `isDisposed`(v2) @signature `Ls0/f;.isDisposed:()Z` @kind virtual;
  #L4faef6.  v1:= temp;
  #L4faef8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4faefe.  v1:= ", " @kind object;
  #L4faf02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4faf08.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4faf0e.  v1:= temp @kind object;
  #L4faf10.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4faf16.  v1:= ")" @kind object;
  #L4faf1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4faf20.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4faf26.  v0:= temp @kind object;
  #L4faf28.  return v0 @kind object;
}
