record `s0.h` @kind class @AccessFlag FINAL extends `s0.f` @kind class {
}
global `long` `@@s0.h.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`s0.h` v0 @kind this, `org.reactivestreams.Subscription` v1 @kind object) @signature `Ls0/h;.<init>:(Lorg/reactivestreams/Subscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fb29c.  call `<init>`(v0, v1) @signature `Ls0/f;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4fb2a2.  return @kind void;
}
procedure `void` `a`(`s0.h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ls0/h;.a:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L4fb2b4.  v1:= (`org.reactivestreams.Subscription`) v1 @kind object;
  #L4fb2b8.  call `b`(v0, v1) @signature `Ls0/h;.b:(Lorg/reactivestreams/Subscription;)V` @kind virtual;
  #L4fb2be.  return @kind void;
}
procedure `void` `b`(`s0.h` v0 @kind this, `org.reactivestreams.Subscription` v1 @kind object) @signature `Ls0/h;.b:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PROTECTED {
    temp;

  #L4fb2d0.  call `cancel`(v1) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4fb2d6.  return @kind void;
}
