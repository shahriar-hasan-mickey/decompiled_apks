record `retrofit2.i$g` @kind class @AccessFlag FINAL extends `retrofit2.i` @kind class {
  `java.lang.reflect.Method` `retrofit2.i$g.a` @AccessFlag PRIVATE_FINAL;
  `int` `retrofit2.i$g.b` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.i$g.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.i$g` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `int` v2 , `retrofit2.Converter` v3 @kind object) @signature `Lretrofit2/i$g;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c06cc.  call `<init>`(v0) @signature `Lretrofit2/i;.<init>:()V` @kind direct;
  #L1c06d2.  v0.`retrofit2.i$g.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1c06d6.  v0.`retrofit2.i$g.b` @type ^`int` := v2;
  #L1c06da.  v0.`retrofit2.i$g.c` @type ^`retrofit2.Converter` := v3 @kind object;
  #L1c06de.  return @kind void;
}
procedure `void` `a`(`retrofit2.i$g` v0 @kind this, `retrofit2.k` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/i$g;.a:(Lretrofit2/k;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L1c06f0.  v2:= (`java.util.Map`) v2 @kind object;
  #L1c06f4.  call `d`(v0, v1, v2) @signature `Lretrofit2/i$g;.d:(Lretrofit2/k;Ljava/util/Map;)V` @kind virtual;
  #L1c06fa.  return @kind void;
}
procedure `void` `d`(`retrofit2.i$g` v4 @kind this, `retrofit2.k` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lretrofit2/i$g;.d:(Lretrofit2/k;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c070c.  v0:= 0I;
  #L1c070e.  if v6 == 0 then goto L1c07cc;
  #L1c0712.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L1c0718.  v6:= temp @kind object;
  #L1c071a.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c0720.  v6:= temp @kind object;
  #L1c0722.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c0728.  v1:= temp;
  #L1c072a.  if v1 == 0 then goto L1c07ca;
  #L1c072e.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c0734.  v1:= temp @kind object;
  #L1c0736.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L1c073a.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1c0740.  v2:= temp @kind object;
  #L1c0742.  v2:= (`java.lang.String`) v2 @kind object;
  #L1c0746.  if v2 == 0 then goto L1c07b0;
  #L1c074a.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1c0750.  v1:= temp @kind object;
  #L1c0752.  if v1 == 0 then goto L1c076e;
  #L1c0756.  v3:= v4.`retrofit2.i$g.c` @type ^`retrofit2.Converter` @kind object;
  #L1c075a.  call temp:= `convert`(v3, v1) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1c0760.  v1:= temp @kind object;
  #L1c0762.  v1:= (`java.lang.String`) v1 @kind object;
  #L1c0766.  call `b`(v5, v2, v1) @signature `Lretrofit2/k;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1c076c.  goto L1c0722;
  #L1c076e.  v5:= v4.`retrofit2.i$g.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c0772.  v6:= v4.`retrofit2.i$g.b` @type ^`int`;
  #L1c0776.  v1:= new `java.lang.StringBuilder`;
  #L1c077a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c0780.  v3:= "Header map contained null value for key '" @kind object;
  #L1c0784.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c078a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0790.  v2:= "'." @kind object;
  #L1c0794.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c079a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c07a0.  v1:= temp @kind object;
  #L1c07a2.  v0:= new `java.lang.Object`[v0];
  #L1c07a6.  call temp:= `o`(v5, v6, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c07ac.  v5:= temp @kind object;
  #L1c07ae.  throw v5;
  #L1c07b0.  v5:= v4.`retrofit2.i$g.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c07b4.  v6:= v4.`retrofit2.i$g.b` @type ^`int`;
  #L1c07b8.  v0:= new `java.lang.Object`[v0];
  #L1c07bc.  v1:= "Header map contained null key." @kind object;
  #L1c07c0.  call temp:= `o`(v5, v6, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c07c6.  v5:= temp @kind object;
  #L1c07c8.  throw v5;
  #L1c07ca.  return @kind void;
  #L1c07cc.  v5:= v4.`retrofit2.i$g.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c07d0.  v6:= v4.`retrofit2.i$g.b` @type ^`int`;
  #L1c07d4.  v0:= new `java.lang.Object`[v0];
  #L1c07d8.  v1:= "Header map was null." @kind object;
  #L1c07dc.  call temp:= `o`(v5, v6, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c07e2.  v5:= temp @kind object;
  #L1c07e4.  throw v5;
}
