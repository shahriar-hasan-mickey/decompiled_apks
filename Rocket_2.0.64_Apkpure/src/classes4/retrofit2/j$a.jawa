record `retrofit2.j$a` @kind class @AccessFlag FINAL extends `retrofit2.j` @kind class {
}
procedure `void` `<init>`(`retrofit2.j$a` v2 @kind this) @signature `Lretrofit2/j$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c1020.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1c1024.  v1:= 24I;
  #L1c1028.  if v0 < v1 then goto L1c1030;
  #L1c102c.  v0:= 1I;
  #L1c102e.  goto L1c1032;
  #L1c1030.  v0:= 0I;
  #L1c1032.  call `<init>`(v2, v0) @signature `Lretrofit2/j;.<init>:(Z)V` @kind direct;
  #L1c1038.  return @kind void;
}
procedure `java.util.concurrent.Executor` `c`(`retrofit2.j$a` v1 @kind this) @signature `Lretrofit2/j$a;.c:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1004.  v0:= new `retrofit2.j$a$a`;
  #L1c1008.  call `<init>`(v0) @signature `Lretrofit2/j$a$a;.<init>:()V` @kind direct;
  #L1c100e.  return v0 @kind object;
}
procedure `java.lang.Object` `h`(`retrofit2.j$a` v2 @kind this, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lretrofit2/j$a;.h:(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1c0fcc.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1c0fd0.  v1:= 26I;
  #L1c0fd4.  if v0 < v1 then goto L1c0fe2;
  #L1c0fd8.  call temp:= `h`(v2, v3, v4, v5, v6) @signature `Lretrofit2/j;.h:(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L1c0fde.  v3:= temp @kind object;
  #L1c0fe0.  return v3 @kind object;
  #L1c0fe2.  v3:= new `java.lang.UnsupportedOperationException`;
  #L1c0fe6.  v4:= "Calling default methods on API 24 and 25 is not supported" @kind object;
  #L1c0fea.  call `<init>`(v3, v4) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c0ff0.  throw v3;
}
