record `retrofit2.m` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`retrofit2.m` v0 @kind this) @signature `Lretrofit2/m;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c4164.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c416a.  return @kind void;
}
procedure `retrofit2.m` `b`(`retrofit2.Retrofit` v4 @kind object, `java.lang.reflect.Method` v5 @kind object) @signature `Lretrofit2/m;.b:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)Lretrofit2/m;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c40f8.  call temp:= `b`(v4, v5) @signature `Lretrofit2/l;.b:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)Lretrofit2/l;` @kind static;
  #L1c40fe.  v0:= temp @kind object;
  #L1c4100.  call temp:= `getGenericReturnType`(v5) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1c4106.  v1:= temp @kind object;
  #L1c4108.  call temp:= `j`(v1) @signature `Lretrofit2/o;.j:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1c410e.  v2:= temp;
  #L1c4110.  v3:= 0I;
  #L1c4112.  if v2 != 0 then goto L1c413a;
  #L1c4116.  v2:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L1c411a.  if v1 == v2 then goto L1c4128;
  #L1c411e.  call temp:= `f`(v4, v5, v0) @signature `Lretrofit2/f;.f:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Lretrofit2/l;)Lretrofit2/f;` @kind static;
  #L1c4124.  v4:= temp @kind object;
  #L1c4126.  return v4 @kind object;
  #L1c4128.  v4:= new `java.lang.Object`[v3];
  #L1c412c.  v0:= "Service methods cannot return void." @kind object;
  #L1c4130.  call temp:= `m`(v5, v0, v4) @signature `Lretrofit2/o;.m:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c4136.  v4:= temp @kind object;
  #L1c4138.  throw v4;
  #L1c413a.  v4:= 1I;
  #L1c413c.  v4:= new `java.lang.Object`[v4];
  #L1c4140.  v4[v3]:= v1 @kind object;
  #L1c4144.  v0:= "Method return type must not include a type variable or wildcard: %s" @kind object;
  #L1c4148.  call temp:= `m`(v5, v0, v4) @signature `Lretrofit2/o;.m:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c414e.  v4:= temp @kind object;
  #L1c4150.  throw v4;
}
procedure `java.lang.Object` `a`(`java.lang.Object`[] v0 @kind object) @signature `Lretrofit2/m;.a:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
