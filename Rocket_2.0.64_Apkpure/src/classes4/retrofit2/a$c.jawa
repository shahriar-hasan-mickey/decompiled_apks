record `retrofit2.a$c` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
}
global `retrofit2.a$c` `@@retrofit2.a$c.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/a$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1be470.  v0:= new `retrofit2.a$c`;
  #L1be474.  call `<init>`(v0) @signature `Lretrofit2/a$c;.<init>:()V` @kind direct;
  #L1be47a.  `@@retrofit2.a$c.a` @type ^`retrofit2.a$c` := v0 @kind object;
  #L1be47e.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.a$c` v0 @kind this) @signature `Lretrofit2/a$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1be490.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1be496.  return @kind void;
}
procedure `okhttp3.ResponseBody` `a`(`retrofit2.a$c` v0 @kind this, `okhttp3.ResponseBody` v1 @kind object) @signature `Lretrofit2/a$c;.a:(Lokhttp3/ResponseBody;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;

  #L1be45c.  return v1 @kind object;
}
procedure `java.lang.Object` `convert`(`retrofit2.a$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/a$c;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1be43c.  v1:= (`okhttp3.ResponseBody`) v1 @kind object;
  #L1be440.  call temp:= `a`(v0, v1) @signature `Lretrofit2/a$c;.a:(Lokhttp3/ResponseBody;)Lokhttp3/ResponseBody;` @kind virtual;
  #L1be446.  v1:= temp @kind object;
  #L1be448.  return v1 @kind object;
}
