record `retrofit2.converter.simplexml.b` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
  `java.lang.Class` `retrofit2.converter.simplexml.b.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.Serializer` `retrofit2.converter.simplexml.b.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.converter.simplexml.b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.converter.simplexml.b` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.Serializer` v2 @kind object, `boolean` v3 ) @signature `Lretrofit2/converter/simplexml/b;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/Serializer;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c6788.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c678e.  v0.`retrofit2.converter.simplexml.b.a` @type ^`java.lang.Class` := v1 @kind object;
  #L1c6792.  v0.`retrofit2.converter.simplexml.b.b` @type ^`org.simpleframework.xml.Serializer` := v2 @kind object;
  #L1c6796.  v0.`retrofit2.converter.simplexml.b.c` @type ^`boolean` := v3 @kind boolean;
  #L1c679a.  return @kind void;
}
procedure `java.lang.Object` `a`(`retrofit2.converter.simplexml.b` v4 @kind this, `okhttp3.ResponseBody` v5 @kind object) @signature `Lretrofit2/converter/simplexml/b;.a:(Lokhttp3/ResponseBody;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c66d4.  v0:= v4.`retrofit2.converter.simplexml.b.b` @type ^`org.simpleframework.xml.Serializer` @kind object;
  #L1c66d8.  v1:= v4.`retrofit2.converter.simplexml.b.a` @type ^`java.lang.Class` @kind object;
  #L1c66dc.  call temp:= `charStream`(v5) @signature `Lokhttp3/ResponseBody;.charStream:()Ljava/io/Reader;` @kind virtual;
  #L1c66e2.  v2:= temp @kind object;
  #L1c66e4.  v3:= v4.`retrofit2.converter.simplexml.b.c` @type ^`boolean` @kind boolean;
  #L1c66e8.  call temp:= `read`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/Serializer;.read:(Ljava/lang/Class;Ljava/io/Reader;Z)Ljava/lang/Object;` @kind interface;
  #L1c66ee.  v0:= temp @kind object;
  #L1c66f0.  if v0 == 0 then goto L1c66fc;
  #L1c66f4.  call `close`(v5) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L1c66fa.  return v0 @kind object;
  #L1c66fc.  v0:= new `java.lang.IllegalStateException`;
  #L1c6700.  v1:= new `java.lang.StringBuilder`;
  #L1c6704.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c670a.  v2:= "Could not deserialize body as " @kind object;
  #L1c670e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6714.  v2:= v4.`retrofit2.converter.simplexml.b.a` @type ^`java.lang.Class` @kind object;
  #L1c6718.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c671e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c6724.  v1:= temp @kind object;
  #L1c6726.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c672c.  throw v0;
  #L1c672e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c6730.  goto L1c6748;
  #L1c6732.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c6734.  v1:= new `java.lang.RuntimeException`;
  #L1c6738.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1c673e.  throw v1;
  #L1c6740.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1c6742.  goto L1c6746;
  #L1c6744.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1c6746.  throw v0;
  #L1c6748.  call `close`(v5) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L1c674e.  throw v0;
  catch `java.lang.RuntimeException` @[L1c66d4..L1c66f0] goto L1c6744;
  catch `java.io.IOException` @[L1c66d4..L1c66f0] goto L1c6740;
  catch `java.lang.Exception` @[L1c66d4..L1c66f0] goto L1c6732;
  catch `java.lang.Throwable` @[L1c66d4..L1c66f0] goto L1c672e;
  catch `java.lang.RuntimeException` @[L1c66fc..L1c672e] goto L1c6744;
  catch `java.io.IOException` @[L1c66fc..L1c672e] goto L1c6740;
  catch `java.lang.Exception` @[L1c66fc..L1c672e] goto L1c6732;
  catch `java.lang.Throwable` @[L1c66fc..L1c672e] goto L1c672e;
  catch `java.lang.Throwable` @[L1c6734..L1c6748] goto L1c672e;
}
procedure `java.lang.Object` `convert`(`retrofit2.converter.simplexml.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/converter/simplexml/b;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c66b4.  v1:= (`okhttp3.ResponseBody`) v1 @kind object;
  #L1c66b8.  call temp:= `a`(v0, v1) @signature `Lretrofit2/converter/simplexml/b;.a:(Lokhttp3/ResponseBody;)Ljava/lang/Object;` @kind virtual;
  #L1c66be.  v1:= temp @kind object;
  #L1c66c0.  return v1 @kind object;
}
