record `retrofit2.converter.simplexml.SimpleXmlConverterFactory` @kind class @AccessFlag PUBLIC_FINAL extends `retrofit2.Converter$Factory` @kind class {
  `org.simpleframework.xml.Serializer` `retrofit2.converter.simplexml.SimpleXmlConverterFactory.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.converter.simplexml.SimpleXmlConverterFactory.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.converter.simplexml.SimpleXmlConverterFactory` v0 @kind this, `org.simpleframework.xml.Serializer` v1 @kind object, `boolean` v2 ) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.<init>:(Lorg/simpleframework/xml/Serializer;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c65b8.  call `<init>`(v0) @signature `Lretrofit2/Converter$Factory;.<init>:()V` @kind direct;
  #L1c65be.  v0.`retrofit2.converter.simplexml.SimpleXmlConverterFactory.a` @type ^`org.simpleframework.xml.Serializer` := v1 @kind object;
  #L1c65c2.  v0.`retrofit2.converter.simplexml.SimpleXmlConverterFactory.b` @type ^`boolean` := v2 @kind boolean;
  #L1c65c6.  return @kind void;
}
procedure `retrofit2.converter.simplexml.SimpleXmlConverterFactory` `create`() @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.create:()Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c6528.  v0:= new `org.simpleframework.xml.core.Persister`;
  #L1c652c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:()V` @kind direct;
  #L1c6532.  call temp:= `create`(v0) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.create:(Lorg/simpleframework/xml/Serializer;)Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;` @kind static;
  #L1c6538.  v0:= temp @kind object;
  #L1c653a.  return v0 @kind object;
}
procedure `retrofit2.converter.simplexml.SimpleXmlConverterFactory` `create`(`org.simpleframework.xml.Serializer` v2 @kind object) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.create:(Lorg/simpleframework/xml/Serializer;)Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c654c.  v0:= new `retrofit2.converter.simplexml.SimpleXmlConverterFactory`;
  #L1c6550.  v1:= 1I;
  #L1c6552.  call `<init>`(v0, v2, v1) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.<init>:(Lorg/simpleframework/xml/Serializer;Z)V` @kind direct;
  #L1c6558.  return v0 @kind object;
}
procedure `retrofit2.converter.simplexml.SimpleXmlConverterFactory` `createNonStrict`() @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.createNonStrict:()Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c656c.  v0:= new `org.simpleframework.xml.core.Persister`;
  #L1c6570.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:()V` @kind direct;
  #L1c6576.  call temp:= `createNonStrict`(v0) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.createNonStrict:(Lorg/simpleframework/xml/Serializer;)Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;` @kind static;
  #L1c657c.  v0:= temp @kind object;
  #L1c657e.  return v0 @kind object;
}
procedure `retrofit2.converter.simplexml.SimpleXmlConverterFactory` `createNonStrict`(`org.simpleframework.xml.Serializer` v2 @kind object) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.createNonStrict:(Lorg/simpleframework/xml/Serializer;)Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c6590.  v0:= "serializer == null" @kind object;
  #L1c6594.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c659a.  v0:= new `retrofit2.converter.simplexml.SimpleXmlConverterFactory`;
  #L1c659e.  v1:= 0I;
  #L1c65a0.  call `<init>`(v0, v2, v1) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.<init>:(Lorg/simpleframework/xml/Serializer;Z)V` @kind direct;
  #L1c65a6.  return v0 @kind object;
}
procedure `boolean` `isStrict`(`retrofit2.converter.simplexml.SimpleXmlConverterFactory` v1 @kind this) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.isStrict:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c64b0.  v0:= v1.`retrofit2.converter.simplexml.SimpleXmlConverterFactory.b` @type ^`boolean` @kind boolean;
  #L1c64b4.  return v0;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.converter.simplexml.SimpleXmlConverterFactory` v0 @kind this, `java.lang.reflect.Type` v1 @kind object, `java.lang.annotation.Annotation`[] v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object, `retrofit2.Retrofit` v4 @kind object) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;

  #L1c64c8.  v1:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L1c64cc.  if v1 != 0 then goto L1c64d4;
  #L1c64d0.  v1:= 0I;
  #L1c64d2.  return v1 @kind object;
  #L1c64d4.  v1:= new `retrofit2.converter.simplexml.a`;
  #L1c64d8.  v2:= v0.`retrofit2.converter.simplexml.SimpleXmlConverterFactory.a` @type ^`org.simpleframework.xml.Serializer` @kind object;
  #L1c64dc.  call `<init>`(v1, v2) @signature `Lretrofit2/converter/simplexml/a;.<init>:(Lorg/simpleframework/xml/Serializer;)V` @kind direct;
  #L1c64e2.  return v1 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.converter.simplexml.SimpleXmlConverterFactory` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object, `retrofit2.Retrofit` v4 @kind object) @signature `Lretrofit2/converter/simplexml/SimpleXmlConverterFactory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c64f4.  v3:= instanceof @variable v2 @type ^`java.lang.Class` @kind boolean;
  #L1c64f8.  if v3 != 0 then goto L1c6500;
  #L1c64fc.  v2:= 0I;
  #L1c64fe.  return v2 @kind object;
  #L1c6500.  v2:= (`java.lang.Class`) v2 @kind object;
  #L1c6504.  v3:= new `retrofit2.converter.simplexml.b`;
  #L1c6508.  v4:= v1.`retrofit2.converter.simplexml.SimpleXmlConverterFactory.a` @type ^`org.simpleframework.xml.Serializer` @kind object;
  #L1c650c.  v0:= v1.`retrofit2.converter.simplexml.SimpleXmlConverterFactory.b` @type ^`boolean` @kind boolean;
  #L1c6510.  call `<init>`(v3, v2, v4, v0) @signature `Lretrofit2/converter/simplexml/b;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/Serializer;Z)V` @kind direct;
  #L1c6516.  return v3 @kind object;
}
