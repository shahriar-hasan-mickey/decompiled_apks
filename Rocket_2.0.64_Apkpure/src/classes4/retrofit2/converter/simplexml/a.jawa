record `retrofit2.converter.simplexml.a` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
  `org.simpleframework.xml.Serializer` `retrofit2.converter.simplexml.a.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@retrofit2.converter.simplexml.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/converter/simplexml/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c6674.  v0:= "application/xml; charset=UTF-8" @kind object;
  #L1c6678.  call temp:= `get`(v0) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1c667e.  v0:= temp @kind object;
  #L1c6680.  `@@retrofit2.converter.simplexml.a.b` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1c6684.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.converter.simplexml.a` v0 @kind this, `org.simpleframework.xml.Serializer` v1 @kind object) @signature `Lretrofit2/converter/simplexml/a;.<init>:(Lorg/simpleframework/xml/Serializer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c6698.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c669e.  v0.`retrofit2.converter.simplexml.a.a` @type ^`org.simpleframework.xml.Serializer` := v1 @kind object;
  #L1c66a2.  return @kind void;
}
procedure `okhttp3.RequestBody` `a`(`retrofit2.converter.simplexml.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lretrofit2/converter/simplexml/a;.a:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c65f4.  v0:= new `okio.Buffer`;
  #L1c65f8.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1c65fe.  v1:= new `java.io.OutputStreamWriter`;
  #L1c6602.  call temp:= `outputStream`(v0) @signature `Lokio/Buffer;.outputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L1c6608.  v2:= temp @kind object;
  #L1c660a.  v3:= "UTF-8" @kind object;
  #L1c660e.  call `<init>`(v1, v2, v3) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V` @kind direct;
  #L1c6614.  v2:= v4.`retrofit2.converter.simplexml.a.a` @type ^`org.simpleframework.xml.Serializer` @kind object;
  #L1c6618.  call `write`(v2, v5, v1) @signature `Lorg/simpleframework/xml/Serializer;.write:(Ljava/lang/Object;Ljava/io/Writer;)V` @kind interface;
  #L1c661e.  call `flush`(v1) @signature `Ljava/io/OutputStreamWriter;.flush:()V` @kind virtual;
  #L1c6624.  v5:= `@@retrofit2.converter.simplexml.a.b` @type ^`okhttp3.MediaType` @kind object;
  #L1c6628.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1c662e.  v0:= temp @kind object;
  #L1c6630.  call temp:= `create`(v5, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;` @kind static;
  #L1c6636.  v5:= temp @kind object;
  #L1c6638.  return v5 @kind object;
  #L1c663a.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c663c.  v0:= new `java.lang.RuntimeException`;
  #L1c6640.  call `<init>`(v0, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1c6646.  throw v0;
  #L1c6648.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L1c664a.  goto L1c664e;
  #L1c664c.  v5:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1c664e.  throw v5;
  catch `java.lang.RuntimeException` @[L1c65fe..L1c6624] goto L1c664c;
  catch `java.io.IOException` @[L1c65fe..L1c6624] goto L1c6648;
  catch `java.lang.Exception` @[L1c65fe..L1c6624] goto L1c663a;
}
procedure `java.lang.Object` `convert`(`retrofit2.converter.simplexml.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/converter/simplexml/a;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c65d8.  call temp:= `a`(v0, v1) @signature `Lretrofit2/converter/simplexml/a;.a:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @kind virtual;
  #L1c65de.  v1:= temp @kind object;
  #L1c65e0.  return v1 @kind object;
}
