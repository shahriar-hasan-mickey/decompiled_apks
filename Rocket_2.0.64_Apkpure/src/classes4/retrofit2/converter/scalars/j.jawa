record `retrofit2.converter.scalars.j` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
}
global `retrofit2.converter.scalars.j` `@@retrofit2.converter.scalars.j.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/converter/scalars/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c62bc.  v0:= new `retrofit2.converter.scalars.j`;
  #L1c62c0.  call `<init>`(v0) @signature `Lretrofit2/converter/scalars/j;.<init>:()V` @kind direct;
  #L1c62c6.  `@@retrofit2.converter.scalars.j.a` @type ^`retrofit2.converter.scalars.j` := v0 @kind object;
  #L1c62ca.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.converter.scalars.j` v0 @kind this) @signature `Lretrofit2/converter/scalars/j;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c62dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c62e2.  return @kind void;
}
procedure `java.lang.String` `a`(`retrofit2.converter.scalars.j` v0 @kind this, `okhttp3.ResponseBody` v1 @kind object) @signature `Lretrofit2/converter/scalars/j;.a:(Lokhttp3/ResponseBody;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L1c62a0.  call temp:= `string`(v1) @signature `Lokhttp3/ResponseBody;.string:()Ljava/lang/String;` @kind virtual;
  #L1c62a6.  v1:= temp @kind object;
  #L1c62a8.  return v1 @kind object;
}
procedure `java.lang.Object` `convert`(`retrofit2.converter.scalars.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/converter/scalars/j;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c6280.  v1:= (`okhttp3.ResponseBody`) v1 @kind object;
  #L1c6284.  call temp:= `a`(v0, v1) @signature `Lretrofit2/converter/scalars/j;.a:(Lokhttp3/ResponseBody;)Ljava/lang/String;` @kind virtual;
  #L1c628a.  v1:= temp @kind object;
  #L1c628c.  return v1 @kind object;
}
