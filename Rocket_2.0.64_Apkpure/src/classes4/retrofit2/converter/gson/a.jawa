record `retrofit2.converter.gson.a` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
  `com.google.gson.Gson` `retrofit2.converter.gson.a.a` @AccessFlag PRIVATE_FINAL;
  `com.google.gson.TypeAdapter` `retrofit2.converter.gson.a.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@retrofit2.converter.gson.a.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@retrofit2.converter.gson.a.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/converter/gson/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c5cbc.  v0:= "application/json; charset=UTF-8" @kind object;
  #L1c5cc0.  call temp:= `get`(v0) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1c5cc6.  v0:= temp @kind object;
  #L1c5cc8.  `@@retrofit2.converter.gson.a.c` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1c5ccc.  v0:= "UTF-8" @kind object;
  #L1c5cd0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1c5cd6.  v0:= temp @kind object;
  #L1c5cd8.  `@@retrofit2.converter.gson.a.d` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L1c5cdc.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.converter.gson.a` v0 @kind this, `com.google.gson.Gson` v1 @kind object, `com.google.gson.TypeAdapter` v2 @kind object) @signature `Lretrofit2/converter/gson/a;.<init>:(Lcom/google/gson/Gson;Lcom/google/gson/TypeAdapter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c5cf0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c5cf6.  v0.`retrofit2.converter.gson.a.a` @type ^`com.google.gson.Gson` := v1 @kind object;
  #L1c5cfa.  v0.`retrofit2.converter.gson.a.b` @type ^`com.google.gson.TypeAdapter` := v2 @kind object;
  #L1c5cfe.  return @kind void;
}
procedure `okhttp3.RequestBody` `a`(`retrofit2.converter.gson.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lretrofit2/converter/gson/a;.a:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c5c58.  v0:= new `okio.Buffer`;
  #L1c5c5c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1c5c62.  v1:= new `java.io.OutputStreamWriter`;
  #L1c5c66.  call temp:= `outputStream`(v0) @signature `Lokio/Buffer;.outputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L1c5c6c.  v2:= temp @kind object;
  #L1c5c6e.  v3:= `@@retrofit2.converter.gson.a.d` @type ^`java.nio.charset.Charset` @kind object;
  #L1c5c72.  call `<init>`(v1, v2, v3) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L1c5c78.  v2:= v4.`retrofit2.converter.gson.a.a` @type ^`com.google.gson.Gson` @kind object;
  #L1c5c7c.  call temp:= `newJsonWriter`(v2, v1) @signature `Lcom/google/gson/Gson;.newJsonWriter:(Ljava/io/Writer;)Lcom/google/gson/stream/JsonWriter;` @kind virtual;
  #L1c5c82.  v1:= temp @kind object;
  #L1c5c84.  v2:= v4.`retrofit2.converter.gson.a.b` @type ^`com.google.gson.TypeAdapter` @kind object;
  #L1c5c88.  call `write`(v2, v1, v5) @signature `Lcom/google/gson/TypeAdapter;.write:(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V` @kind virtual;
  #L1c5c8e.  call `close`(v1) @signature `Lcom/google/gson/stream/JsonWriter;.close:()V` @kind virtual;
  #L1c5c94.  v5:= `@@retrofit2.converter.gson.a.c` @type ^`okhttp3.MediaType` @kind object;
  #L1c5c98.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1c5c9e.  v0:= temp @kind object;
  #L1c5ca0.  call temp:= `create`(v5, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;` @kind static;
  #L1c5ca6.  v5:= temp @kind object;
  #L1c5ca8.  return v5 @kind object;
}
procedure `java.lang.Object` `convert`(`retrofit2.converter.gson.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/converter/gson/a;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c5c3c.  call temp:= `a`(v0, v1) @signature `Lretrofit2/converter/gson/a;.a:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @kind virtual;
  #L1c5c42.  v1:= temp @kind object;
  #L1c5c44.  return v1 @kind object;
}
