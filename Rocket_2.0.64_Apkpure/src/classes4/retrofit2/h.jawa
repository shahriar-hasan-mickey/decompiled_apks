record `retrofit2.h` @kind class @AccessFlag FINAL extends `retrofit2.Converter$Factory` @kind class {
}
global `retrofit2.Converter$Factory` `@@retrofit2.h.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c02ec.  v0:= new `retrofit2.h`;
  #L1c02f0.  call `<init>`(v0) @signature `Lretrofit2/h;.<init>:()V` @kind direct;
  #L1c02f6.  `@@retrofit2.h.a` @type ^`retrofit2.Converter$Factory` := v0 @kind object;
  #L1c02fa.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.h` v0 @kind this) @signature `Lretrofit2/h;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c030c.  call `<init>`(v0) @signature `Lretrofit2/Converter$Factory;.<init>:()V` @kind direct;
  #L1c0312.  return @kind void;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.h` v2 @kind this, `java.lang.reflect.Type` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object, `retrofit2.Retrofit` v5 @kind object) @signature `Lretrofit2/h;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c02a4.  call temp:= `getRawType`(v3) @signature `Lretrofit2/Converter$Factory;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1c02aa.  v0:= temp @kind object;
  #L1c02ac.  v1:= constclass @type ^`java.util.Optional` @kind object;
  #L1c02b0.  if v0 == v1 then goto L1c02b8;
  #L1c02b4.  v3:= 0I;
  #L1c02b6.  return v3 @kind object;
  #L1c02b8.  v0:= 0I;
  #L1c02ba.  v3:= (`java.lang.reflect.ParameterizedType`) v3 @kind object;
  #L1c02be.  call temp:= `getParameterUpperBound`(v0, v3) @signature `Lretrofit2/Converter$Factory;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1c02c4.  v3:= temp @kind object;
  #L1c02c6.  call temp:= `responseBodyConverter`(v5, v3, v4) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1c02cc.  v3:= temp @kind object;
  #L1c02ce.  v4:= new `retrofit2.h$a`;
  #L1c02d2.  call `<init>`(v4, v3) @signature `Lretrofit2/h$a;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1c02d8.  return v4 @kind object;
}
