record `retrofit2.i$p` @kind class @AccessFlag FINAL extends `retrofit2.i` @kind class {
  `java.lang.reflect.Method` `retrofit2.i$p.a` @AccessFlag PRIVATE_FINAL;
  `int` `retrofit2.i$p.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.i$p` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `int` v2 ) @signature `Lretrofit2/i$p;.<init>:(Ljava/lang/reflect/Method;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c0ea0.  call `<init>`(v0) @signature `Lretrofit2/i;.<init>:()V` @kind direct;
  #L1c0ea6.  v0.`retrofit2.i$p.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1c0eaa.  v0.`retrofit2.i$p.b` @type ^`int` := v2;
  #L1c0eae.  return @kind void;
}
procedure `void` `a`(`retrofit2.i$p` v2 @kind this, `retrofit2.k` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lretrofit2/i$p;.a:(Lretrofit2/k;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1c0ec0.  if v4 == 0 then goto L1c0ecc;
  #L1c0ec4.  call `m`(v3, v4) @signature `Lretrofit2/k;.m:(Ljava/lang/Object;)V` @kind virtual;
  #L1c0eca.  return @kind void;
  #L1c0ecc.  v3:= v2.`retrofit2.i$p.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c0ed0.  v4:= v2.`retrofit2.i$p.b` @type ^`int`;
  #L1c0ed4.  v0:= 0I;
  #L1c0ed6.  v0:= new `java.lang.Object`[v0];
  #L1c0eda.  v1:= "@Url parameter is null." @kind object;
  #L1c0ede.  call temp:= `o`(v3, v4, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c0ee4.  v3:= temp @kind object;
  #L1c0ee6.  throw v3;
}
