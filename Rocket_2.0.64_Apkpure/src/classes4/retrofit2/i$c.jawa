record `retrofit2.i$c` @kind class @AccessFlag FINAL extends `retrofit2.i` @kind class {
  `java.lang.reflect.Method` `retrofit2.i$c.a` @AccessFlag PRIVATE_FINAL;
  `int` `retrofit2.i$c.b` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.i$c.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.i$c` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `int` v2 , `retrofit2.Converter` v3 @kind object) @signature `Lretrofit2/i$c;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c03f8.  call `<init>`(v0) @signature `Lretrofit2/i;.<init>:()V` @kind direct;
  #L1c03fe.  v0.`retrofit2.i$c.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1c0402.  v0.`retrofit2.i$c.b` @type ^`int` := v2;
  #L1c0406.  v0.`retrofit2.i$c.c` @type ^`retrofit2.Converter` := v3 @kind object;
  #L1c040a.  return @kind void;
}
procedure `void` `a`(`retrofit2.i$c` v5 @kind this, `retrofit2.k` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lretrofit2/i$c;.a:(Lretrofit2/k;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c041c.  v0:= 0I;
  #L1c041e.  if v7 == 0 then goto L1c047e;
  #L1c0422.  v1:= v5.`retrofit2.i$c.c` @type ^`retrofit2.Converter` @kind object;
  #L1c0426.  call temp:= `convert`(v1, v7) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1c042c.  v1:= temp @kind object;
  #L1c042e.  v1:= (`okhttp3.RequestBody`) v1 @kind object;
  #L1c0432.  call `l`(v6, v1) @signature `Lretrofit2/k;.l:(Lokhttp3/RequestBody;)V` @kind virtual;
  #L1c0438.  return @kind void;
  #L1c043a.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L1c043c.  v1:= v5.`retrofit2.i$c.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c0440.  v2:= v5.`retrofit2.i$c.b` @type ^`int`;
  #L1c0444.  v3:= new `java.lang.StringBuilder`;
  #L1c0448.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c044e.  v4:= "Unable to convert " @kind object;
  #L1c0452.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0458.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c045e.  v7:= " to RequestBody" @kind object;
  #L1c0462.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0468.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c046e.  v7:= temp @kind object;
  #L1c0470.  v0:= new `java.lang.Object`[v0];
  #L1c0474.  call temp:= `p`(v1, v6, v2, v7, v0) @signature `Lretrofit2/o;.p:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c047a.  v6:= temp @kind object;
  #L1c047c.  throw v6;
  #L1c047e.  v6:= v5.`retrofit2.i$c.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c0482.  v7:= v5.`retrofit2.i$c.b` @type ^`int`;
  #L1c0486.  v0:= new `java.lang.Object`[v0];
  #L1c048a.  v1:= "Body parameter value must not be null." @kind object;
  #L1c048e.  call temp:= `o`(v6, v7, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c0494.  v6:= temp @kind object;
  #L1c0496.  throw v6;
  catch `java.io.IOException` @[L1c0422..L1c0432] goto L1c043a;
}
