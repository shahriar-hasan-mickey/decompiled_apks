record `retrofit2.a$f` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
}
global `retrofit2.a$f` `@@retrofit2.a$f.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/a$f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1be5c8.  v0:= new `retrofit2.a$f`;
  #L1be5cc.  call `<init>`(v0) @signature `Lretrofit2/a$f;.<init>:()V` @kind direct;
  #L1be5d2.  `@@retrofit2.a$f.a` @type ^`retrofit2.a$f` := v0 @kind object;
  #L1be5d6.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.a$f` v0 @kind this) @signature `Lretrofit2/a$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1be5e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1be5ee.  return @kind void;
}
procedure `java.lang.Void` `a`(`retrofit2.a$f` v0 @kind this, `okhttp3.ResponseBody` v1 @kind object) @signature `Lretrofit2/a$f;.a:(Lokhttp3/ResponseBody;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;

  #L1be5ac.  call `close`(v1) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L1be5b2.  v1:= 0I;
  #L1be5b4.  return v1 @kind object;
}
procedure `java.lang.Object` `convert`(`retrofit2.a$f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/a$f;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1be58c.  v1:= (`okhttp3.ResponseBody`) v1 @kind object;
  #L1be590.  call temp:= `a`(v0, v1) @signature `Lretrofit2/a$f;.a:(Lokhttp3/ResponseBody;)Ljava/lang/Void;` @kind virtual;
  #L1be596.  v1:= temp @kind object;
  #L1be598.  return v1 @kind object;
}
