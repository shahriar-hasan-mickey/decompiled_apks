record `retrofit2.i$e` @kind class @AccessFlag FINAL extends `retrofit2.i` @kind class {
  `java.lang.reflect.Method` `retrofit2.i$e.a` @AccessFlag PRIVATE_FINAL;
  `int` `retrofit2.i$e.b` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.i$e.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.i$e.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.i$e` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `int` v2 , `retrofit2.Converter` v3 @kind object, `boolean` v4 ) @signature `Lretrofit2/i$e;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c04b8.  call `<init>`(v0) @signature `Lretrofit2/i;.<init>:()V` @kind direct;
  #L1c04be.  v0.`retrofit2.i$e.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1c04c2.  v0.`retrofit2.i$e.b` @type ^`int` := v2;
  #L1c04c6.  v0.`retrofit2.i$e.c` @type ^`retrofit2.Converter` := v3 @kind object;
  #L1c04ca.  v0.`retrofit2.i$e.d` @type ^`boolean` := v4 @kind boolean;
  #L1c04ce.  return @kind void;
}
procedure `void` `a`(`retrofit2.i$e` v0 @kind this, `retrofit2.k` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/i$e;.a:(Lretrofit2/k;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L1c04e0.  v2:= (`java.util.Map`) v2 @kind object;
  #L1c04e4.  call `d`(v0, v1, v2) @signature `Lretrofit2/i$e;.d:(Lretrofit2/k;Ljava/util/Map;)V` @kind virtual;
  #L1c04ea.  return @kind void;
}
procedure `void` `d`(`retrofit2.i$e` v6 @kind this, `retrofit2.k` v7 @kind object, `java.util.Map` v8 @kind object) @signature `Lretrofit2/i$e;.d:(Lretrofit2/k;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c04fc.  v0:= 0I;
  #L1c04fe.  if v8 == 0 then goto L1c0636;
  #L1c0502.  call temp:= `entrySet`(v8) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L1c0508.  v8:= temp @kind object;
  #L1c050a.  call temp:= `iterator`(v8) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c0510.  v8:= temp @kind object;
  #L1c0512.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c0518.  v1:= temp;
  #L1c051a.  if v1 == 0 then goto L1c0634;
  #L1c051e.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c0524.  v1:= temp @kind object;
  #L1c0526.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L1c052a.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1c0530.  v2:= temp @kind object;
  #L1c0532.  v2:= (`java.lang.String`) v2 @kind object;
  #L1c0536.  if v2 == 0 then goto L1c061a;
  #L1c053a.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1c0540.  v1:= temp @kind object;
  #L1c0542.  v3:= "'." @kind object;
  #L1c0546.  if v1 == 0 then goto L1c05dc;
  #L1c054a.  v4:= v6.`retrofit2.i$e.c` @type ^`retrofit2.Converter` @kind object;
  #L1c054e.  call temp:= `convert`(v4, v1) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1c0554.  v4:= temp @kind object;
  #L1c0556.  v4:= (`java.lang.String`) v4 @kind object;
  #L1c055a.  if v4 == 0 then goto L1c056a;
  #L1c055e.  v1:= v6.`retrofit2.i$e.d` @type ^`boolean` @kind boolean;
  #L1c0562.  call `a`(v7, v2, v4, v1) @signature `Lretrofit2/k;.a:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L1c0568.  goto L1c0512;
  #L1c056a.  v7:= v6.`retrofit2.i$e.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c056e.  v8:= v6.`retrofit2.i$e.b` @type ^`int`;
  #L1c0572.  v4:= new `java.lang.StringBuilder`;
  #L1c0576.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c057c.  v5:= "Field map value '" @kind object;
  #L1c0580.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0586.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c058c.  v1:= "' converted to null by " @kind object;
  #L1c0590.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0596.  v1:= v6.`retrofit2.i$e.c` @type ^`retrofit2.Converter` @kind object;
  #L1c059a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c05a0.  v1:= temp @kind object;
  #L1c05a2.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1c05a8.  v1:= temp @kind object;
  #L1c05aa.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c05b0.  v1:= " for key '" @kind object;
  #L1c05b4.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c05ba.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c05c0.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c05c6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c05cc.  v1:= temp @kind object;
  #L1c05ce.  v0:= new `java.lang.Object`[v0];
  #L1c05d2.  call temp:= `o`(v7, v8, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c05d8.  v7:= temp @kind object;
  #L1c05da.  throw v7;
  #L1c05dc.  v7:= v6.`retrofit2.i$e.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c05e0.  v8:= v6.`retrofit2.i$e.b` @type ^`int`;
  #L1c05e4.  v1:= new `java.lang.StringBuilder`;
  #L1c05e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c05ee.  v4:= "Field map contained null value for key '" @kind object;
  #L1c05f2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c05f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c05fe.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0604.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c060a.  v1:= temp @kind object;
  #L1c060c.  v0:= new `java.lang.Object`[v0];
  #L1c0610.  call temp:= `o`(v7, v8, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c0616.  v7:= temp @kind object;
  #L1c0618.  throw v7;
  #L1c061a.  v7:= v6.`retrofit2.i$e.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c061e.  v8:= v6.`retrofit2.i$e.b` @type ^`int`;
  #L1c0622.  v0:= new `java.lang.Object`[v0];
  #L1c0626.  v1:= "Field map contained null key." @kind object;
  #L1c062a.  call temp:= `o`(v7, v8, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c0630.  v7:= temp @kind object;
  #L1c0632.  throw v7;
  #L1c0634.  return @kind void;
  #L1c0636.  v7:= v6.`retrofit2.i$e.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c063a.  v8:= v6.`retrofit2.i$e.b` @type ^`int`;
  #L1c063e.  v0:= new `java.lang.Object`[v0];
  #L1c0642.  v1:= "Field map was null." @kind object;
  #L1c0646.  call temp:= `o`(v7, v8, v1, v0) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c064c.  v7:= temp @kind object;
  #L1c064e.  throw v7;
}
