record `retrofit2.i$l` @kind class @AccessFlag FINAL extends `retrofit2.i` @kind class {
  `java.lang.String` `retrofit2.i$l.a` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.i$l.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.i$l.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.i$l` v1 @kind this, `java.lang.String` v2 @kind object, `retrofit2.Converter` v3 @kind object, `boolean` v4 ) @signature `Lretrofit2/i$l;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1c0dc4.  call `<init>`(v1) @signature `Lretrofit2/i;.<init>:()V` @kind direct;
  #L1c0dca.  v0:= "name == null" @kind object;
  #L1c0dce.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c0dd4.  v1.`retrofit2.i$l.a` @type ^`java.lang.String` := v2 @kind object;
  #L1c0dd8.  v1.`retrofit2.i$l.b` @type ^`retrofit2.Converter` := v3 @kind object;
  #L1c0ddc.  v1.`retrofit2.i$l.c` @type ^`boolean` := v4 @kind boolean;
  #L1c0de0.  return @kind void;
}
procedure `void` `a`(`retrofit2.i$l` v2 @kind this, `retrofit2.k` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lretrofit2/i$l;.a:(Lretrofit2/k;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1c0df4.  if v4 != 0 then goto L1c0dfa;
  #L1c0df8.  return @kind void;
  #L1c0dfa.  v0:= v2.`retrofit2.i$l.b` @type ^`retrofit2.Converter` @kind object;
  #L1c0dfe.  call temp:= `convert`(v0, v4) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1c0e04.  v4:= temp @kind object;
  #L1c0e06.  v4:= (`java.lang.String`) v4 @kind object;
  #L1c0e0a.  if v4 != 0 then goto L1c0e10;
  #L1c0e0e.  return @kind void;
  #L1c0e10.  v0:= v2.`retrofit2.i$l.a` @type ^`java.lang.String` @kind object;
  #L1c0e14.  v1:= v2.`retrofit2.i$l.c` @type ^`boolean` @kind boolean;
  #L1c0e18.  call `g`(v3, v0, v4, v1) @signature `Lretrofit2/k;.g:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L1c0e1e.  return @kind void;
}
