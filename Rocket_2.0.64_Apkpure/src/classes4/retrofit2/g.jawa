record `retrofit2.g` @kind class @AccessFlag FINAL extends `retrofit2.Call` @kind interface {
  `retrofit2.l` `retrofit2.g.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object`[] `retrofit2.g.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call$Factory` `retrofit2.g.c` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.g.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.g.e` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Call` `retrofit2.g.f` @AccessFlag PRIVATE;
  `java.lang.Throwable` `retrofit2.g.g` @AccessFlag PRIVATE;
  `boolean` `retrofit2.g.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`retrofit2.g` v0 @kind this, `retrofit2.l` v1 @kind object, `java.lang.Object`[] v2 @kind object, `okhttp3.Call$Factory` v3 @kind object, `retrofit2.Converter` v4 @kind object) @signature `Lretrofit2/g;.<init>:(Lretrofit2/l;[Ljava/lang/Object;Lokhttp3/Call$Factory;Lretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c0110.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c0116.  v0.`retrofit2.g.a` @type ^`retrofit2.l` := v1 @kind object;
  #L1c011a.  v0.`retrofit2.g.b` @type ^`java.lang.Object`[] := v2 @kind object;
  #L1c011e.  v0.`retrofit2.g.c` @type ^`okhttp3.Call$Factory` := v3 @kind object;
  #L1c0122.  v0.`retrofit2.g.d` @type ^`retrofit2.Converter` := v4 @kind object;
  #L1c0126.  return @kind void;
}
procedure `okhttp3.Call` `b`(`retrofit2.g` v3 @kind this) @signature `Lretrofit2/g;.b:()Lokhttp3/Call;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1bfe04.  v0:= v3.`retrofit2.g.c` @type ^`okhttp3.Call$Factory` @kind object;
  #L1bfe08.  v1:= v3.`retrofit2.g.a` @type ^`retrofit2.l` @kind object;
  #L1bfe0c.  v2:= v3.`retrofit2.g.b` @type ^`java.lang.Object`[] @kind object;
  #L1bfe10.  call temp:= `a`(v1, v2) @signature `Lretrofit2/l;.a:([Ljava/lang/Object;)Lokhttp3/Request;` @kind virtual;
  #L1bfe16.  v1:= temp @kind object;
  #L1bfe18.  call temp:= `newCall`(v0, v1) @signature `Lokhttp3/Call$Factory;.newCall:(Lokhttp3/Request;)Lokhttp3/Call;` @kind interface;
  #L1bfe1e.  v0:= temp @kind object;
  #L1bfe20.  v1:= "Call.Factory returned null." @kind object;
  #L1bfe24.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1bfe2a.  return v0 @kind object;
}
procedure `okhttp3.Call` `c`(`retrofit2.g` v2 @kind this) @signature `Lretrofit2/g;.c:()Lokhttp3/Call;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1bfe3c.  v0:= v2.`retrofit2.g.f` @type ^`okhttp3.Call` @kind object;
  #L1bfe40.  if v0 == 0 then goto L1bfe46;
  #L1bfe44.  return v0 @kind object;
  #L1bfe46.  v0:= v2.`retrofit2.g.g` @type ^`java.lang.Throwable` @kind object;
  #L1bfe4a.  if v0 == 0 then goto L1bfe70;
  #L1bfe4e.  v1:= instanceof @variable v0 @type ^`java.io.IOException` @kind boolean;
  #L1bfe52.  if v1 != 0 then goto L1bfe6a;
  #L1bfe56.  v1:= instanceof @variable v0 @type ^`java.lang.RuntimeException` @kind boolean;
  #L1bfe5a.  if v1 == 0 then goto L1bfe64;
  #L1bfe5e.  v0:= (`java.lang.RuntimeException`) v0 @kind object;
  #L1bfe62.  throw v0;
  #L1bfe64.  v0:= (`java.lang.Error`) v0 @kind object;
  #L1bfe68.  throw v0;
  #L1bfe6a.  v0:= (`java.io.IOException`) v0 @kind object;
  #L1bfe6e.  throw v0;
  #L1bfe70.  call temp:= `b`(v2) @signature `Lretrofit2/g;.b:()Lokhttp3/Call;` @kind direct;
  #L1bfe76.  v0:= temp @kind object;
  #L1bfe78.  v2.`retrofit2.g.f` @type ^`okhttp3.Call` := v0 @kind object;
  #L1bfe7c.  return v0 @kind object;
  #L1bfe7e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1bfe80.  goto L1bfe88;
  #L1bfe82.  v0:= Exception @type ^`java.lang.Error` @kind object;
  #L1bfe84.  goto L1bfe88;
  #L1bfe86.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1bfe88.  call `s`(v0) @signature `Lretrofit2/o;.s:(Ljava/lang/Throwable;)V` @kind static;
  #L1bfe8e.  v2.`retrofit2.g.g` @type ^`java.lang.Throwable` := v0 @kind object;
  #L1bfe92.  throw v0;
  catch `java.lang.RuntimeException` @[L1bfe70..L1bfe7c] goto L1bfe86;
  catch `java.lang.Error` @[L1bfe70..L1bfe7c] goto L1bfe82;
  catch `java.io.IOException` @[L1bfe70..L1bfe7c] goto L1bfe7e;
}
procedure `retrofit2.g` `a`(`retrofit2.g` v5 @kind this) @signature `Lretrofit2/g;.a:()Lretrofit2/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1bff84.  v0:= new `retrofit2.g`;
  #L1bff88.  v1:= v5.`retrofit2.g.a` @type ^`retrofit2.l` @kind object;
  #L1bff8c.  v2:= v5.`retrofit2.g.b` @type ^`java.lang.Object`[] @kind object;
  #L1bff90.  v3:= v5.`retrofit2.g.c` @type ^`okhttp3.Call$Factory` @kind object;
  #L1bff94.  v4:= v5.`retrofit2.g.d` @type ^`retrofit2.Converter` @kind object;
  #L1bff98.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lretrofit2/g;.<init>:(Lretrofit2/l;[Ljava/lang/Object;Lokhttp3/Call$Factory;Lretrofit2/Converter;)V` @kind direct;
  #L1bff9e.  return v0 @kind object;
}
procedure `void` `cancel`(`retrofit2.g` v1 @kind this) @signature `Lretrofit2/g;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c0138.  v0:= 1I;
  #L1c013a.  v1.`retrofit2.g.e` @type ^`boolean` := v0 @kind boolean;
  #L1c013e.  @monitorenter v1
  #L1c0140.  v0:= v1.`retrofit2.g.f` @type ^`okhttp3.Call` @kind object;
  #L1c0144.  @monitorexit v1
  #L1c0146.  if v0 == 0 then goto L1c0150;
  #L1c014a.  call `cancel`(v0) @signature `Lokhttp3/Call;.cancel:()V` @kind interface;
  #L1c0150.  return @kind void;
  #L1c0152.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c0154.  @monitorexit v1
  #L1c0156.  throw v0;
  catch `java.lang.Throwable` @[L1c0140..L1c0146] goto L1c0152;
  catch `java.lang.Throwable` @[L1c0154..L1c0156] goto L1c0152;
}
procedure `java.lang.Object` `clone`(`retrofit2.g` v1 @kind this) @signature `Lretrofit2/g;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1bfde8.  call temp:= `a`(v1) @signature `Lretrofit2/g;.a:()Lretrofit2/g;` @kind virtual;
  #L1bfdee.  v0:= temp @kind object;
  #L1bfdf0.  return v0 @kind object;
}
procedure `retrofit2.Call` `clone`(`retrofit2.g` v1 @kind this) @signature `Lretrofit2/g;.clone:()Lretrofit2/Call;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1bff68.  call temp:= `a`(v1) @signature `Lretrofit2/g;.a:()Lretrofit2/g;` @kind virtual;
  #L1bff6e.  v0:= temp @kind object;
  #L1bff70.  return v0 @kind object;
}
procedure `retrofit2.Response` `d`(`retrofit2.g` v5 @kind this, `okhttp3.Response` v6 @kind object) @signature `Lretrofit2/g;.d:(Lokhttp3/Response;)Lretrofit2/Response;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c0024.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1c002a.  v0:= temp @kind object;
  #L1c002c.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1c0032.  v6:= temp @kind object;
  #L1c0034.  v1:= new `retrofit2.g$c`;
  #L1c0038.  call temp:= `contentType`(v0) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L1c003e.  v2:= temp @kind object;
  #L1c0040.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L1c0046.  v3:= temp @kind wide;
  #L1c0048.  call `<init>`(v1, v2, v3) @signature `Lretrofit2/g$c;.<init>:(Lokhttp3/MediaType;J)V` @kind direct;
  #L1c004e.  call temp:= `body`(v6, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1c0054.  v6:= temp @kind object;
  #L1c0056.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1c005c.  v6:= temp @kind object;
  #L1c005e.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1c0064.  v1:= temp;
  #L1c0066.  v2:= 200I;
  #L1c006a.  if v1 < v2 then goto L1c00c6;
  #L1c006e.  v2:= 300I;
  #L1c0072.  if v1 < v2 then goto L1c0078;
  #L1c0076.  goto L1c00c6;
  #L1c0078.  v2:= 204I;
  #L1c007c.  if v1 == v2 then goto L1c00b4;
  #L1c0080.  v2:= 205I;
  #L1c0084.  if v1 != v2 then goto L1c008a;
  #L1c0088.  goto L1c00b4;
  #L1c008a.  v1:= new `retrofit2.g$b`;
  #L1c008e.  call `<init>`(v1, v0) @signature `Lretrofit2/g$b;.<init>:(Lokhttp3/ResponseBody;)V` @kind direct;
  #L1c0094.  v0:= v5.`retrofit2.g.d` @type ^`retrofit2.Converter` @kind object;
  #L1c0098.  call temp:= `convert`(v0, v1) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1c009e.  v0:= temp @kind object;
  #L1c00a0.  call temp:= `success`(v0, v6) @signature `Lretrofit2/Response;.success:(Ljava/lang/Object;Lokhttp3/Response;)Lretrofit2/Response;` @kind static;
  #L1c00a6.  v6:= temp @kind object;
  #L1c00a8.  return v6 @kind object;
  #L1c00aa.  v6:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1c00ac.  call `b`(v1) @signature `Lretrofit2/g$b;.b:()V` @kind virtual;
  #L1c00b2.  throw v6;
  #L1c00b4.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L1c00ba.  v0:= 0I;
  #L1c00bc.  call temp:= `success`(v0, v6) @signature `Lretrofit2/Response;.success:(Ljava/lang/Object;Lokhttp3/Response;)Lretrofit2/Response;` @kind static;
  #L1c00c2.  v6:= temp @kind object;
  #L1c00c4.  return v6 @kind object;
  #L1c00c6.  call temp:= `a`(v0) @signature `Lretrofit2/o;.a:(Lokhttp3/ResponseBody;)Lokhttp3/ResponseBody;` @kind static;
  #L1c00cc.  v1:= temp @kind object;
  #L1c00ce.  call temp:= `error`(v1, v6) @signature `Lretrofit2/Response;.error:(Lokhttp3/ResponseBody;Lokhttp3/Response;)Lretrofit2/Response;` @kind static;
  #L1c00d4.  v6:= temp @kind object;
  #L1c00d6.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L1c00dc.  return v6 @kind object;
  #L1c00de.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c00e0.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L1c00e6.  throw v6;
  catch `java.lang.RuntimeException` @[L1c0094..L1c00a8] goto L1c00aa;
  catch `java.lang.Throwable` @[L1c00c6..L1c00d6] goto L1c00de;
}
procedure `void` `enqueue`(`retrofit2.g` v3 @kind this, `retrofit2.Callback` v4 @kind object) @signature `Lretrofit2/g;.enqueue:(Lretrofit2/Callback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c017c.  v0:= "callback == null" @kind object;
  #L1c0180.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c0186.  @monitorenter v3
  #L1c0188.  v0:= v3.`retrofit2.g.h` @type ^`boolean` @kind boolean;
  #L1c018c.  if v0 != 0 then goto L1c01f0;
  #L1c0190.  v0:= 1I;
  #L1c0192.  v3.`retrofit2.g.h` @type ^`boolean` := v0 @kind boolean;
  #L1c0196.  v0:= v3.`retrofit2.g.f` @type ^`okhttp3.Call` @kind object;
  #L1c019a.  v1:= v3.`retrofit2.g.g` @type ^`java.lang.Throwable` @kind object;
  #L1c019e.  if v0 != 0 then goto L1c01c2;
  #L1c01a2.  if v1 != 0 then goto L1c01c2;
  #L1c01a6.  call temp:= `b`(v3) @signature `Lretrofit2/g;.b:()Lokhttp3/Call;` @kind direct;
  #L1c01ac.  v2:= temp @kind object;
  #L1c01ae.  v3.`retrofit2.g.f` @type ^`okhttp3.Call` := v2 @kind object;
  #L1c01b2.  v0:= v2 @kind object;
  #L1c01b4.  goto L1c01c2;
  #L1c01b6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c01b8.  call `s`(v1) @signature `Lretrofit2/o;.s:(Ljava/lang/Throwable;)V` @kind static;
  #L1c01be.  v3.`retrofit2.g.g` @type ^`java.lang.Throwable` := v1 @kind object;
  #L1c01c2.  @monitorexit v3
  #L1c01c4.  if v1 == 0 then goto L1c01d0;
  #L1c01c8.  call `onFailure`(v4, v3, v1) @signature `Lretrofit2/Callback;.onFailure:(Lretrofit2/Call;Ljava/lang/Throwable;)V` @kind interface;
  #L1c01ce.  return @kind void;
  #L1c01d0.  v1:= v3.`retrofit2.g.e` @type ^`boolean` @kind boolean;
  #L1c01d4.  if v1 == 0 then goto L1c01de;
  #L1c01d8.  call `cancel`(v0) @signature `Lokhttp3/Call;.cancel:()V` @kind interface;
  #L1c01de.  v1:= new `retrofit2.g$a`;
  #L1c01e2.  call `<init>`(v1, v3, v4) @signature `Lretrofit2/g$a;.<init>:(Lretrofit2/g;Lretrofit2/Callback;)V` @kind direct;
  #L1c01e8.  call `enqueue`(v0, v1) @signature `Lcom/google/firebase/perf/network/FirebasePerfOkHttpClient;.enqueue:(Lokhttp3/Call;Lokhttp3/Callback;)V` @kind static;
  #L1c01ee.  return @kind void;
  #L1c01f0.  v4:= new `java.lang.IllegalStateException`;
  #L1c01f4.  v0:= "Already executed." @kind object;
  #L1c01f8.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c01fe.  throw v4;
  #L1c0200.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c0202.  @monitorexit v3
  #L1c0204.  throw v4;
  catch `java.lang.Throwable` @[L1c0188..L1c019e] goto L1c0200;
  catch `java.lang.Throwable` @[L1c01a6..L1c01b2] goto L1c01b6;
  catch `java.lang.Throwable` @[L1c01b8..L1c01c4] goto L1c0200;
  catch `java.lang.Throwable` @[L1c01f0..L1c0204] goto L1c0200;
}
procedure `retrofit2.Response` `execute`(`retrofit2.g` v2 @kind this) @signature `Lretrofit2/g;.execute:()Lretrofit2/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bffb0.  @monitorenter v2
  #L1bffb2.  v0:= v2.`retrofit2.g.h` @type ^`boolean` @kind boolean;
  #L1bffb6.  if v0 != 0 then goto L1bffea;
  #L1bffba.  v0:= 1I;
  #L1bffbc.  v2.`retrofit2.g.h` @type ^`boolean` := v0 @kind boolean;
  #L1bffc0.  call temp:= `c`(v2) @signature `Lretrofit2/g;.c:()Lokhttp3/Call;` @kind direct;
  #L1bffc6.  v0:= temp @kind object;
  #L1bffc8.  @monitorexit v2
  #L1bffca.  v1:= v2.`retrofit2.g.e` @type ^`boolean` @kind boolean;
  #L1bffce.  if v1 == 0 then goto L1bffd8;
  #L1bffd2.  call `cancel`(v0) @signature `Lokhttp3/Call;.cancel:()V` @kind interface;
  #L1bffd8.  call temp:= `execute`(v0) @signature `Lcom/google/firebase/perf/network/FirebasePerfOkHttpClient;.execute:(Lokhttp3/Call;)Lokhttp3/Response;` @kind static;
  #L1bffde.  v0:= temp @kind object;
  #L1bffe0.  call temp:= `d`(v2, v0) @signature `Lretrofit2/g;.d:(Lokhttp3/Response;)Lretrofit2/Response;` @kind virtual;
  #L1bffe6.  v0:= temp @kind object;
  #L1bffe8.  return v0 @kind object;
  #L1bffea.  v0:= new `java.lang.IllegalStateException`;
  #L1bffee.  v1:= "Already executed." @kind object;
  #L1bfff2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bfff8.  throw v0;
  #L1bfffa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bfffc.  @monitorexit v2
  #L1bfffe.  throw v0;
  catch `java.lang.Throwable` @[L1bffb2..L1bffca] goto L1bfffa;
  catch `java.lang.Throwable` @[L1bffea..L1bfffe] goto L1bfffa;
}
procedure `boolean` `isCanceled`(`retrofit2.g` v2 @kind this) @signature `Lretrofit2/g;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bfd70.  v0:= v2.`retrofit2.g.e` @type ^`boolean` @kind boolean;
  #L1bfd74.  v1:= 1I;
  #L1bfd76.  if v0 == 0 then goto L1bfd7c;
  #L1bfd7a.  return v1;
  #L1bfd7c.  @monitorenter v2
  #L1bfd7e.  v0:= v2.`retrofit2.g.f` @type ^`okhttp3.Call` @kind object;
  #L1bfd82.  if v0 == 0 then goto L1bfd94;
  #L1bfd86.  call temp:= `isCanceled`(v0) @signature `Lokhttp3/Call;.isCanceled:()Z` @kind interface;
  #L1bfd8c.  v0:= temp;
  #L1bfd8e.  if v0 == 0 then goto L1bfd94;
  #L1bfd92.  goto L1bfd96;
  #L1bfd94.  v1:= 0I;
  #L1bfd96.  @monitorexit v2
  #L1bfd98.  return v1;
  #L1bfd9a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bfd9c.  @monitorexit v2
  #L1bfd9e.  throw v0;
  catch `java.lang.Throwable` @[L1bfd7e..L1bfd9e] goto L1bfd9a;
}
procedure `boolean` `isExecuted`(`retrofit2.g` v1 @kind this) @signature `Lretrofit2/g;.isExecuted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bfdbc.  @monitorenter v1
  #L1bfdbe.  v0:= v1.`retrofit2.g.h` @type ^`boolean` @kind boolean;
  #L1bfdc2.  @monitorexit v1
  #L1bfdc4.  return v0;
  #L1bfdc6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bfdc8.  @monitorexit v1
  #L1bfdca.  throw v0;
  catch `java.lang.Throwable` @[L1bfdbe..L1bfdc2] goto L1bfdc6;
}
procedure `okhttp3.Request` `request`(`retrofit2.g` v3 @kind this) @signature `Lretrofit2/g;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1bfeb8.  @monitorenter v3
  #L1bfeba.  call temp:= `c`(v3) @signature `Lretrofit2/g;.c:()Lokhttp3/Call;` @kind direct;
  #L1bfec0.  v0:= temp @kind object;
  #L1bfec2.  call temp:= `request`(v0) @signature `Lokhttp3/Call;.request:()Lokhttp3/Request;` @kind interface;
  #L1bfec8.  v0:= temp @kind object;
  #L1bfeca.  @monitorexit v3
  #L1bfecc.  return v0 @kind object;
  #L1bfece.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bfed0.  goto L1bfee4;
  #L1bfed2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1bfed4.  v1:= new `java.lang.RuntimeException`;
  #L1bfed8.  v2:= "Unable to create request." @kind object;
  #L1bfedc.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1bfee2.  throw v1;
  #L1bfee4.  @monitorexit v3
  #L1bfee6.  throw v0;
  catch `java.io.IOException` @[L1bfeba..L1bfeca] goto L1bfed2;
  catch `java.lang.Throwable` @[L1bfeba..L1bfeca] goto L1bfece;
  catch `java.lang.Throwable` @[L1bfed4..L1bfee4] goto L1bfece;
}
procedure `okio.Timeout` `timeout`(`retrofit2.g` v3 @kind this) @signature `Lretrofit2/g;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1bff10.  @monitorenter v3
  #L1bff12.  call temp:= `c`(v3) @signature `Lretrofit2/g;.c:()Lokhttp3/Call;` @kind direct;
  #L1bff18.  v0:= temp @kind object;
  #L1bff1a.  call temp:= `timeout`(v0) @signature `Lokhttp3/Call;.timeout:()Lokio/Timeout;` @kind interface;
  #L1bff20.  v0:= temp @kind object;
  #L1bff22.  @monitorexit v3
  #L1bff24.  return v0 @kind object;
  #L1bff26.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bff28.  goto L1bff3c;
  #L1bff2a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1bff2c.  v1:= new `java.lang.RuntimeException`;
  #L1bff30.  v2:= "Unable to create call." @kind object;
  #L1bff34.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1bff3a.  throw v1;
  #L1bff3c.  @monitorexit v3
  #L1bff3e.  throw v0;
  catch `java.io.IOException` @[L1bff12..L1bff22] goto L1bff2a;
  catch `java.lang.Throwable` @[L1bff12..L1bff22] goto L1bff26;
  catch `java.lang.Throwable` @[L1bff2c..L1bff3c] goto L1bff26;
}
