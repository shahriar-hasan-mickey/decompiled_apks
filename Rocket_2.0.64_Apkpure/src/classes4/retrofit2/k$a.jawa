record `retrofit2.k$a` @kind class @AccessFlag  extends `okhttp3.RequestBody` @kind class {
  `okhttp3.RequestBody` `retrofit2.k$a.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `retrofit2.k$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.k$a` v0 @kind this, `okhttp3.RequestBody` v1 @kind object, `okhttp3.MediaType` v2 @kind object) @signature `Lretrofit2/k$a;.<init>:(Lokhttp3/RequestBody;Lokhttp3/MediaType;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c12c0.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L1c12c6.  v0.`retrofit2.k$a.a` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L1c12ca.  v0.`retrofit2.k$a.b` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L1c12ce.  return @kind void;
}
procedure `long` `contentLength`(`retrofit2.k$a` v2 @kind this) @signature `Lretrofit2/k$a;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c1288.  v0:= v2.`retrofit2.k$a.a` @type ^`okhttp3.RequestBody` @kind object;
  #L1c128c.  call temp:= `contentLength`(v0) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L1c1292.  v0:= temp @kind wide;
  #L1c1294.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`retrofit2.k$a` v1 @kind this) @signature `Lretrofit2/k$a;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c12a8.  v0:= v1.`retrofit2.k$a.b` @type ^`okhttp3.MediaType` @kind object;
  #L1c12ac.  return v0 @kind object;
}
procedure `void` `writeTo`(`retrofit2.k$a` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lretrofit2/k$a;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c12e0.  v0:= v1.`retrofit2.k$a.a` @type ^`okhttp3.RequestBody` @kind object;
  #L1c12e4.  call `writeTo`(v0, v2) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L1c12ea.  return @kind void;
}
