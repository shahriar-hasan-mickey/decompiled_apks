record `retrofit2.i$f` @kind class @AccessFlag FINAL extends `retrofit2.i` @kind class {
  `java.lang.String` `retrofit2.i$f.a` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.i$f.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.i$f` v1 @kind this, `java.lang.String` v2 @kind object, `retrofit2.Converter` v3 @kind object) @signature `Lretrofit2/i$f;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1c086c.  call `<init>`(v1) @signature `Lretrofit2/i;.<init>:()V` @kind direct;
  #L1c0872.  v0:= "name == null" @kind object;
  #L1c0876.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c087c.  v1.`retrofit2.i$f.a` @type ^`java.lang.String` := v2 @kind object;
  #L1c0880.  v1.`retrofit2.i$f.b` @type ^`retrofit2.Converter` := v3 @kind object;
  #L1c0884.  return @kind void;
}
procedure `void` `a`(`retrofit2.i$f` v1 @kind this, `retrofit2.k` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lretrofit2/i$f;.a:(Lretrofit2/k;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L1c0898.  if v3 != 0 then goto L1c089e;
  #L1c089c.  return @kind void;
  #L1c089e.  v0:= v1.`retrofit2.i$f.b` @type ^`retrofit2.Converter` @kind object;
  #L1c08a2.  call temp:= `convert`(v0, v3) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1c08a8.  v3:= temp @kind object;
  #L1c08aa.  v3:= (`java.lang.String`) v3 @kind object;
  #L1c08ae.  if v3 != 0 then goto L1c08b4;
  #L1c08b2.  return @kind void;
  #L1c08b4.  v0:= v1.`retrofit2.i$f.a` @type ^`java.lang.String` @kind object;
  #L1c08b8.  call `b`(v2, v0, v3) @signature `Lretrofit2/k;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1c08be.  return @kind void;
}
