record `retrofit2.adapter.rxjava3.b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `retrofit2.Call` `retrofit2.adapter.rxjava3.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava3.b` v0 @kind this, `retrofit2.Call` v1 @kind object) @signature `Lretrofit2/adapter/rxjava3/b;.<init>:(Lretrofit2/Call;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c5450.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L1c5456.  v0.`retrofit2.adapter.rxjava3.b.a` @type ^`retrofit2.Call` := v1 @kind object;
  #L1c545a.  return @kind void;
}
procedure `void` `subscribeActual`(`retrofit2.adapter.rxjava3.b` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lretrofit2/adapter/rxjava3/b;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c546c.  v0:= v2.`retrofit2.adapter.rxjava3.b.a` @type ^`retrofit2.Call` @kind object;
  #L1c5470.  call temp:= `clone`(v0) @signature `Lretrofit2/Call;.clone:()Lretrofit2/Call;` @kind interface;
  #L1c5476.  v0:= temp @kind object;
  #L1c5478.  v1:= new `retrofit2.adapter.rxjava3.b$a`;
  #L1c547c.  call `<init>`(v1, v0, v3) @signature `Lretrofit2/adapter/rxjava3/b$a;.<init>:(Lretrofit2/Call;Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L1c5482.  call `onSubscribe`(v3, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L1c5488.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava3/b$a;.isDisposed:()Z` @kind virtual;
  #L1c548e.  v3:= temp;
  #L1c5490.  if v3 != 0 then goto L1c549a;
  #L1c5494.  call `enqueue`(v0, v1) @signature `Lretrofit2/Call;.enqueue:(Lretrofit2/Callback;)V` @kind interface;
  #L1c549a.  return @kind void;
}
