record `retrofit2.adapter.rxjava3.c` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `retrofit2.Call` `retrofit2.adapter.rxjava3.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava3.c` v0 @kind this, `retrofit2.Call` v1 @kind object) @signature `Lretrofit2/adapter/rxjava3/c;.<init>:(Lretrofit2/Call;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c5504.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L1c550a.  v0.`retrofit2.adapter.rxjava3.c.a` @type ^`retrofit2.Call` := v1 @kind object;
  #L1c550e.  return @kind void;
}
procedure `void` `subscribeActual`(`retrofit2.adapter.rxjava3.c` v5 @kind this, `io.reactivex.rxjava3.core.Observer` v6 @kind object) @signature `Lretrofit2/adapter/rxjava3/c;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c5520.  v0:= v5.`retrofit2.adapter.rxjava3.c.a` @type ^`retrofit2.Call` @kind object;
  #L1c5524.  call temp:= `clone`(v0) @signature `Lretrofit2/Call;.clone:()Lretrofit2/Call;` @kind interface;
  #L1c552a.  v0:= temp @kind object;
  #L1c552c.  v1:= new `retrofit2.adapter.rxjava3.c$a`;
  #L1c5530.  call `<init>`(v1, v0) @signature `Lretrofit2/adapter/rxjava3/c$a;.<init>:(Lretrofit2/Call;)V` @kind direct;
  #L1c5536.  call `onSubscribe`(v6, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L1c553c.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava3/c$a;.isDisposed:()Z` @kind virtual;
  #L1c5542.  v2:= temp;
  #L1c5544.  if v2 == 0 then goto L1c554a;
  #L1c5548.  return @kind void;
  #L1c554a.  v2:= 1I;
  #L1c554c.  v3:= 0I;
  #L1c554e.  call temp:= `execute`(v0) @signature `Lretrofit2/Call;.execute:()Lretrofit2/Response;` @kind interface;
  #L1c5554.  v0:= temp @kind object;
  #L1c5556.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava3/c$a;.isDisposed:()Z` @kind virtual;
  #L1c555c.  v4:= temp;
  #L1c555e.  if v4 != 0 then goto L1c5568;
  #L1c5562.  call `onNext`(v6, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L1c5568.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava3/c$a;.isDisposed:()Z` @kind virtual;
  #L1c556e.  v0:= temp;
  #L1c5570.  if v0 != 0 then goto L1c55d2;
  #L1c5574.  call `onComplete`(v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L1c557a.  goto L1c55d2;
  #L1c557c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c557e.  v4:= 1I;
  #L1c5580.  goto L1c5586;
  #L1c5582.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c5584.  v4:= 0I;
  #L1c5586.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L1c558c.  if v4 == 0 then goto L1c5598;
  #L1c5590.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1c5596.  goto L1c55d2;
  #L1c5598.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava3/c$a;.isDisposed:()Z` @kind virtual;
  #L1c559e.  v1:= temp;
  #L1c55a0.  if v1 != 0 then goto L1c55d2;
  #L1c55a4.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L1c55aa.  goto L1c55d2;
  #L1c55ac.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c55ae.  call `throwIfFatal`(v6) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L1c55b4.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L1c55b8.  v4:= 2I;
  #L1c55ba.  v4:= new `java.lang.Throwable`[v4];
  #L1c55be.  v4[v3]:= v0 @kind object;
  #L1c55c2.  v4[v2]:= v6 @kind object;
  #L1c55c6.  call `<init>`(v1, v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L1c55cc.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1c55d2.  return @kind void;
  catch `java.lang.Throwable` @[L1c554e..L1c5570] goto L1c5582;
  catch `java.lang.Throwable` @[L1c5574..L1c557a] goto L1c557c;
  catch `java.lang.Throwable` @[L1c55a4..L1c55aa] goto L1c55ac;
}
