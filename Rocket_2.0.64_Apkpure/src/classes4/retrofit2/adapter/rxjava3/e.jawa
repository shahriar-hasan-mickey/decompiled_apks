record `retrofit2.adapter.rxjava3.e` @kind class @AccessFlag FINAL extends `retrofit2.CallAdapter` @kind interface {
  `java.lang.reflect.Type` `retrofit2.adapter.rxjava3.e.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `retrofit2.adapter.rxjava3.e.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.e.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.e.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.e.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.e.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.e.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.e.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.e.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava3.e` v0 @kind this, `java.lang.reflect.Type` v1 @kind object, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 , `boolean` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `boolean` v8 , `boolean` v9 ) @signature `Lretrofit2/adapter/rxjava3/e;.<init>:(Ljava/lang/reflect/Type;Lio/reactivex/rxjava3/core/Scheduler;ZZZZZZZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c5b30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c5b36.  v0.`retrofit2.adapter.rxjava3.e.a` @type ^`java.lang.reflect.Type` := v1 @kind object;
  #L1c5b3a.  v0.`retrofit2.adapter.rxjava3.e.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v2 @kind object;
  #L1c5b3e.  v0.`retrofit2.adapter.rxjava3.e.c` @type ^`boolean` := v3 @kind boolean;
  #L1c5b42.  v0.`retrofit2.adapter.rxjava3.e.d` @type ^`boolean` := v4 @kind boolean;
  #L1c5b46.  v0.`retrofit2.adapter.rxjava3.e.e` @type ^`boolean` := v5 @kind boolean;
  #L1c5b4a.  v0.`retrofit2.adapter.rxjava3.e.f` @type ^`boolean` := v6 @kind boolean;
  #L1c5b4e.  v0.`retrofit2.adapter.rxjava3.e.g` @type ^`boolean` := v7 @kind boolean;
  #L1c5b52.  v0.`retrofit2.adapter.rxjava3.e.h` @type ^`boolean` := v8 @kind boolean;
  #L1c5b56.  v0.`retrofit2.adapter.rxjava3.e.i` @type ^`boolean` := v9 @kind boolean;
  #L1c5b5a.  return @kind void;
}
procedure `java.lang.Object` `adapt`(`retrofit2.adapter.rxjava3.e` v1 @kind this, `retrofit2.Call` v2 @kind object) @signature `Lretrofit2/adapter/rxjava3/e;.adapt:(Lretrofit2/Call;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c5a58.  v0:= v1.`retrofit2.adapter.rxjava3.e.c` @type ^`boolean` @kind boolean;
  #L1c5a5c.  if v0 == 0 then goto L1c5a6c;
  #L1c5a60.  v0:= new `retrofit2.adapter.rxjava3.b`;
  #L1c5a64.  call `<init>`(v0, v2) @signature `Lretrofit2/adapter/rxjava3/b;.<init>:(Lretrofit2/Call;)V` @kind direct;
  #L1c5a6a.  goto L1c5a76;
  #L1c5a6c.  v0:= new `retrofit2.adapter.rxjava3.c`;
  #L1c5a70.  call `<init>`(v0, v2) @signature `Lretrofit2/adapter/rxjava3/c;.<init>:(Lretrofit2/Call;)V` @kind direct;
  #L1c5a76.  v2:= v1.`retrofit2.adapter.rxjava3.e.d` @type ^`boolean` @kind boolean;
  #L1c5a7a.  if v2 == 0 then goto L1c5a8c;
  #L1c5a7e.  v2:= new `retrofit2.adapter.rxjava3.d`;
  #L1c5a82.  call `<init>`(v2, v0) @signature `Lretrofit2/adapter/rxjava3/d;.<init>:(Lio/reactivex/rxjava3/core/Observable;)V` @kind direct;
  #L1c5a88.  v0:= v2 @kind object;
  #L1c5a8a.  goto L1c5aa0;
  #L1c5a8c.  v2:= v1.`retrofit2.adapter.rxjava3.e.e` @type ^`boolean` @kind boolean;
  #L1c5a90.  if v2 == 0 then goto L1c5aa0;
  #L1c5a94.  v2:= new `retrofit2.adapter.rxjava3.a`;
  #L1c5a98.  call `<init>`(v2, v0) @signature `Lretrofit2/adapter/rxjava3/a;.<init>:(Lio/reactivex/rxjava3/core/Observable;)V` @kind direct;
  #L1c5a9e.  goto L1c5a88;
  #L1c5aa0.  v2:= v1.`retrofit2.adapter.rxjava3.e.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L1c5aa4.  if v2 == 0 then goto L1c5ab0;
  #L1c5aa8.  call temp:= `subscribeOn`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L1c5aae.  v0:= temp @kind object;
  #L1c5ab0.  v2:= v1.`retrofit2.adapter.rxjava3.e.f` @type ^`boolean` @kind boolean;
  #L1c5ab4.  if v2 == 0 then goto L1c5ac6;
  #L1c5ab8.  v2:= `@@io.reactivex.rxjava3.core.BackpressureStrategy.LATEST` @type ^`io.reactivex.rxjava3.core.BackpressureStrategy` @kind object;
  #L1c5abc.  call temp:= `toFlowable`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.toFlowable:(Lio/reactivex/rxjava3/core/BackpressureStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L1c5ac2.  v2:= temp @kind object;
  #L1c5ac4.  return v2 @kind object;
  #L1c5ac6.  v2:= v1.`retrofit2.adapter.rxjava3.e.g` @type ^`boolean` @kind boolean;
  #L1c5aca.  if v2 == 0 then goto L1c5ad8;
  #L1c5ace.  call temp:= `singleOrError`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.singleOrError:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L1c5ad4.  v2:= temp @kind object;
  #L1c5ad6.  return v2 @kind object;
  #L1c5ad8.  v2:= v1.`retrofit2.adapter.rxjava3.e.h` @type ^`boolean` @kind boolean;
  #L1c5adc.  if v2 == 0 then goto L1c5aea;
  #L1c5ae0.  call temp:= `singleElement`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L1c5ae6.  v2:= temp @kind object;
  #L1c5ae8.  return v2 @kind object;
  #L1c5aea.  v2:= v1.`retrofit2.adapter.rxjava3.e.i` @type ^`boolean` @kind boolean;
  #L1c5aee.  if v2 == 0 then goto L1c5afc;
  #L1c5af2.  call temp:= `ignoreElements`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.ignoreElements:()Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L1c5af8.  v2:= temp @kind object;
  #L1c5afa.  return v2 @kind object;
  #L1c5afc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L1c5b02.  v2:= temp @kind object;
  #L1c5b04.  return v2 @kind object;
}
procedure `java.lang.reflect.Type` `responseType`(`retrofit2.adapter.rxjava3.e` v1 @kind this) @signature `Lretrofit2/adapter/rxjava3/e;.responseType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c5b18.  v0:= v1.`retrofit2.adapter.rxjava3.e.a` @type ^`java.lang.reflect.Type` @kind object;
  #L1c5b1c.  return v0 @kind object;
}
