record `retrofit2.i$i` @kind class @AccessFlag FINAL extends `retrofit2.i` @kind class {
  `java.lang.reflect.Method` `retrofit2.i$i.a` @AccessFlag PRIVATE_FINAL;
  `int` `retrofit2.i$i.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `retrofit2.i$i.c` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.i$i.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.i$i` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `int` v2 , `okhttp3.Headers` v3 @kind object, `retrofit2.Converter` v4 @kind object) @signature `Lretrofit2/i$i;.<init>:(Ljava/lang/reflect/Method;ILokhttp3/Headers;Lretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c0a5c.  call `<init>`(v0) @signature `Lretrofit2/i;.<init>:()V` @kind direct;
  #L1c0a62.  v0.`retrofit2.i$i.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1c0a66.  v0.`retrofit2.i$i.b` @type ^`int` := v2;
  #L1c0a6a.  v0.`retrofit2.i$i.c` @type ^`okhttp3.Headers` := v3 @kind object;
  #L1c0a6e.  v0.`retrofit2.i$i.d` @type ^`retrofit2.Converter` := v4 @kind object;
  #L1c0a72.  return @kind void;
}
procedure `void` `a`(`retrofit2.i$i` v4 @kind this, `retrofit2.k` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lretrofit2/i$i;.a:(Lretrofit2/k;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c0a84.  if v6 != 0 then goto L1c0a8a;
  #L1c0a88.  return @kind void;
  #L1c0a8a.  v0:= v4.`retrofit2.i$i.d` @type ^`retrofit2.Converter` @kind object;
  #L1c0a8e.  call temp:= `convert`(v0, v6) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1c0a94.  v0:= temp @kind object;
  #L1c0a96.  v0:= (`okhttp3.RequestBody`) v0 @kind object;
  #L1c0a9a.  v6:= v4.`retrofit2.i$i.c` @type ^`okhttp3.Headers` @kind object;
  #L1c0a9e.  call `d`(v5, v6, v0) @signature `Lretrofit2/k;.d:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind virtual;
  #L1c0aa4.  return @kind void;
  #L1c0aa6.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L1c0aa8.  v0:= v4.`retrofit2.i$i.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1c0aac.  v1:= v4.`retrofit2.i$i.b` @type ^`int`;
  #L1c0ab0.  v2:= new `java.lang.StringBuilder`;
  #L1c0ab4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c0aba.  v3:= "Unable to convert " @kind object;
  #L1c0abe.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0ac4.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0aca.  v6:= " to RequestBody" @kind object;
  #L1c0ace.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0ad4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c0ada.  v6:= temp @kind object;
  #L1c0adc.  v2:= 1I;
  #L1c0ade.  v2:= new `java.lang.Object`[v2];
  #L1c0ae2.  v3:= 0I;
  #L1c0ae4.  v2[v3]:= v5 @kind object;
  #L1c0ae8.  call temp:= `o`(v0, v1, v6, v2) @signature `Lretrofit2/o;.o:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L1c0aee.  v5:= temp @kind object;
  #L1c0af0.  throw v5;
  catch `java.io.IOException` @[L1c0a8a..L1c0a9a] goto L1c0aa6;
}
