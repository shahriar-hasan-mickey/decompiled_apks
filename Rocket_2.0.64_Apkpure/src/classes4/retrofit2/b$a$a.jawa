record `retrofit2.b$a$a` @kind class @AccessFlag  extends `retrofit2.Callback` @kind interface {
  `java.util.concurrent.CompletableFuture` `retrofit2.b$a$a.a` @AccessFlag PRIVATE_FINAL;
  `retrofit2.b$a` `retrofit2.b$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.b$a$a` v0 @kind this, `retrofit2.b$a` v1 @kind object, `java.util.concurrent.CompletableFuture` v2 @kind object) @signature `Lretrofit2/b$a$a;.<init>:(Lretrofit2/b$a;Ljava/util/concurrent/CompletableFuture;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1be718.  v0.`retrofit2.b$a$a.b` @type ^`retrofit2.b$a` := v1 @kind object;
  #L1be71c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1be722.  v0.`retrofit2.b$a$a.a` @type ^`java.util.concurrent.CompletableFuture` := v2 @kind object;
  #L1be726.  return @kind void;
}
procedure `void` `onFailure`(`retrofit2.b$a$a` v0 @kind this, `retrofit2.Call` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lretrofit2/b$a$a;.onFailure:(Lretrofit2/Call;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L1be738.  v1:= v0.`retrofit2.b$a$a.a` @type ^`java.util.concurrent.CompletableFuture` @kind object;
  #L1be73c.  call temp:= `completeExceptionally`(v1, v2) @signature `Ljava/util/concurrent/CompletableFuture;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1be742.  return @kind void;
}
procedure `void` `onResponse`(`retrofit2.b$a$a` v1 @kind this, `retrofit2.Call` v2 @kind object, `retrofit2.Response` v3 @kind object) @signature `Lretrofit2/b$a$a;.onResponse:(Lretrofit2/Call;Lretrofit2/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1be754.  call temp:= `isSuccessful`(v3) @signature `Lretrofit2/Response;.isSuccessful:()Z` @kind virtual;
  #L1be75a.  v2:= temp;
  #L1be75c.  if v2 == 0 then goto L1be774;
  #L1be760.  v2:= v1.`retrofit2.b$a$a.a` @type ^`java.util.concurrent.CompletableFuture` @kind object;
  #L1be764.  call temp:= `body`(v3) @signature `Lretrofit2/Response;.body:()Ljava/lang/Object;` @kind virtual;
  #L1be76a.  v3:= temp @kind object;
  #L1be76c.  call temp:= `complete`(v2, v3) @signature `Ljava/util/concurrent/CompletableFuture;.complete:(Ljava/lang/Object;)Z` @kind virtual;
  #L1be772.  goto L1be788;
  #L1be774.  v2:= v1.`retrofit2.b$a$a.a` @type ^`java.util.concurrent.CompletableFuture` @kind object;
  #L1be778.  v0:= new `retrofit2.HttpException`;
  #L1be77c.  call `<init>`(v0, v3) @signature `Lretrofit2/HttpException;.<init>:(Lretrofit2/Response;)V` @kind direct;
  #L1be782.  call temp:= `completeExceptionally`(v2, v0) @signature `Ljava/util/concurrent/CompletableFuture;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1be788.  return @kind void;
}
