record `retrofit2.f$b` @kind class @AccessFlag FINAL extends `retrofit2.f` @kind class {
  `retrofit2.CallAdapter` `retrofit2.f$b.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.f$b.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.f$b` v0 @kind this, `retrofit2.l` v1 @kind object, `okhttp3.Call$Factory` v2 @kind object, `retrofit2.Converter` v3 @kind object, `retrofit2.CallAdapter` v4 @kind object, `boolean` v5 ) @signature `Lretrofit2/f$b;.<init>:(Lretrofit2/l;Lokhttp3/Call$Factory;Lretrofit2/Converter;Lretrofit2/CallAdapter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1bf018.  call `<init>`(v0, v1, v2, v3) @signature `Lretrofit2/f;.<init>:(Lretrofit2/l;Lokhttp3/Call$Factory;Lretrofit2/Converter;)V` @kind direct;
  #L1bf01e.  v0.`retrofit2.f$b.d` @type ^`retrofit2.CallAdapter` := v4 @kind object;
  #L1bf022.  v0.`retrofit2.f$b.e` @type ^`boolean` := v5 @kind boolean;
  #L1bf026.  return @kind void;
}
procedure `java.lang.Object` `c`(`retrofit2.f$b` v1 @kind this, `retrofit2.Call` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lretrofit2/f$b;.c:(Lretrofit2/Call;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1befb0.  v0:= v1.`retrofit2.f$b.d` @type ^`retrofit2.CallAdapter` @kind object;
  #L1befb4.  call temp:= `adapt`(v0, v2) @signature `Lretrofit2/CallAdapter;.adapt:(Lretrofit2/Call;)Ljava/lang/Object;` @kind interface;
  #L1befba.  v2:= temp @kind object;
  #L1befbc.  v2:= (`retrofit2.Call`) v2 @kind object;
  #L1befc0.  v0:= length @variable v3;
  #L1befc2.  v0:= v0 + -1;
  #L1befc6.  v3:= v3[v0] @kind object;
  #L1befca.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L1befce.  v0:= v1.`retrofit2.f$b.e` @type ^`boolean` @kind boolean;
  #L1befd2.  if v0 == 0 then goto L1befe0;
  #L1befd6.  call temp:= `awaitNullable`(v2, v3) @signature `Lretrofit2/KotlinExtensions;.awaitNullable:(Lretrofit2/Call;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L1befdc.  v2:= temp @kind object;
  #L1befde.  goto L1befe8;
  #L1befe0.  call temp:= `await`(v2, v3) @signature `Lretrofit2/KotlinExtensions;.await:(Lretrofit2/Call;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L1befe6.  v2:= temp @kind object;
  #L1befe8.  return v2 @kind object;
  #L1befea.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L1befec.  call temp:= `suspendAndThrow`(v2, v3) @signature `Lretrofit2/KotlinExtensions;.suspendAndThrow:(Ljava/lang/Exception;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L1beff2.  v2:= temp @kind object;
  #L1beff4.  return v2 @kind object;
  catch `java.lang.Exception` @[L1befce..L1befe8] goto L1befea;
}
