record `kotlin.contracts.InvocationKind` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.AT_LEAST_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.AT_MOST_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.EXACTLY_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind`[] `@@kotlin.contracts.InvocationKind.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/contracts/InvocationKind;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0bb828.  v0:= new `kotlin.contracts.InvocationKind`;
  #L0bb82c.  v1:= "AT_MOST_ONCE" @kind object;
  #L0bb830.  v2:= 0I;
  #L0bb832.  call `<init>`(v0, v1, v2) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0bb838.  `@@kotlin.contracts.InvocationKind.AT_MOST_ONCE` @type ^`kotlin.contracts.InvocationKind` := v0 @kind object;
  #L0bb83c.  v0:= new `kotlin.contracts.InvocationKind`;
  #L0bb840.  v1:= "AT_LEAST_ONCE" @kind object;
  #L0bb844.  v2:= 1I;
  #L0bb846.  call `<init>`(v0, v1, v2) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0bb84c.  `@@kotlin.contracts.InvocationKind.AT_LEAST_ONCE` @type ^`kotlin.contracts.InvocationKind` := v0 @kind object;
  #L0bb850.  v0:= new `kotlin.contracts.InvocationKind`;
  #L0bb854.  v1:= "EXACTLY_ONCE" @kind object;
  #L0bb858.  v2:= 2I;
  #L0bb85a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0bb860.  `@@kotlin.contracts.InvocationKind.EXACTLY_ONCE` @type ^`kotlin.contracts.InvocationKind` := v0 @kind object;
  #L0bb864.  v0:= new `kotlin.contracts.InvocationKind`;
  #L0bb868.  v1:= "UNKNOWN" @kind object;
  #L0bb86c.  v2:= 3I;
  #L0bb86e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0bb874.  `@@kotlin.contracts.InvocationKind.UNKNOWN` @type ^`kotlin.contracts.InvocationKind` := v0 @kind object;
  #L0bb878.  call temp:= `a`() @signature `Lkotlin/contracts/InvocationKind;.a:()[Lkotlin/contracts/InvocationKind;` @kind static;
  #L0bb87e.  v0:= temp @kind object;
  #L0bb880.  `@@kotlin.contracts.InvocationKind.a` @type ^`kotlin.contracts.InvocationKind`[] := v0 @kind object;
  #L0bb884.  return @kind void;
}
procedure `void` `<init>`(`kotlin.contracts.InvocationKind` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0bb898.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0bb89e.  return @kind void;
}
procedure `kotlin.contracts.InvocationKind`[] `a`() @signature `Lkotlin/contracts/InvocationKind;.a:()[Lkotlin/contracts/InvocationKind;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0bb7c4.  v0:= 4I;
  #L0bb7c6.  v0:= new `kotlin.contracts.InvocationKind`[v0];
  #L0bb7ca.  v1:= `@@kotlin.contracts.InvocationKind.AT_MOST_ONCE` @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L0bb7ce.  v2:= 0I;
  #L0bb7d0.  v0[v2]:= v1 @kind object;
  #L0bb7d4.  v1:= `@@kotlin.contracts.InvocationKind.AT_LEAST_ONCE` @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L0bb7d8.  v2:= 1I;
  #L0bb7da.  v0[v2]:= v1 @kind object;
  #L0bb7de.  v1:= `@@kotlin.contracts.InvocationKind.EXACTLY_ONCE` @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L0bb7e2.  v2:= 2I;
  #L0bb7e4.  v0[v2]:= v1 @kind object;
  #L0bb7e8.  v1:= `@@kotlin.contracts.InvocationKind.UNKNOWN` @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L0bb7ec.  v2:= 3I;
  #L0bb7ee.  v0[v2]:= v1 @kind object;
  #L0bb7f2.  return v0 @kind object;
}
procedure `kotlin.contracts.InvocationKind` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/contracts/InvocationKind;.valueOf:(Ljava/lang/String;)Lkotlin/contracts/InvocationKind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0bb7a0.  v0:= constclass @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L0bb7a4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L0bb7aa.  v1:= temp @kind object;
  #L0bb7ac.  v1:= (`kotlin.contracts.InvocationKind`) v1 @kind object;
  #L0bb7b0.  return v1 @kind object;
}
procedure `kotlin.contracts.InvocationKind`[] `values`() @signature `Lkotlin/contracts/InvocationKind;.values:()[Lkotlin/contracts/InvocationKind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0bb804.  v0:= `@@kotlin.contracts.InvocationKind.a` @type ^`kotlin.contracts.InvocationKind`[] @kind object;
  #L0bb808.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L0bb80e.  v0:= temp @kind object;
  #L0bb810.  v0:= (`kotlin.contracts.InvocationKind`[]) v0 @kind object;
  #L0bb814.  return v0 @kind object;
}
