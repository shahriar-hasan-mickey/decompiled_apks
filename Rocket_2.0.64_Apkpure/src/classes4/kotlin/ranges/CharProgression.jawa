record `kotlin.ranges.CharProgression` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `char` `kotlin.ranges.CharProgression.a` @AccessFlag PRIVATE_FINAL;
  `char` `kotlin.ranges.CharProgression.b` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.ranges.CharProgression.c` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.ranges.CharProgression$Companion` `@@kotlin.ranges.CharProgression.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/CharProgression;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0cbf0c.  v0:= new `kotlin.ranges.CharProgression$Companion`;
  #L0cbf10.  v1:= 0I;
  #L0cbf12.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/CharProgression$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0cbf18.  `@@kotlin.ranges.CharProgression.Companion` @type ^`kotlin.ranges.CharProgression$Companion` := v0 @kind object;
  #L0cbf1c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.CharProgression` v1 @kind this, `char` v2 , `char` v3 , `int` v4 ) @signature `Lkotlin/ranges/CharProgression;.<init>:(CCI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0cbf30.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0cbf36.  if v4 == 0 then goto L0cbf6a;
  #L0cbf3a.  v0:= -2147483648I;
  #L0cbf3e.  if v4 == v0 then goto L0cbf5a;
  #L0cbf42.  v1.`kotlin.ranges.CharProgression.a` @type ^`char` := v2 @kind char;
  #L0cbf46.  call temp:= `getProgressionLastElement`(v2, v3, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.getProgressionLastElement:(III)I` @kind static;
  #L0cbf4c.  v2:= temp;
  #L0cbf4e.  v2:= (`char`) v2 @kind i2c;
  #L0cbf50.  v1.`kotlin.ranges.CharProgression.b` @type ^`char` := v2 @kind char;
  #L0cbf54.  v1.`kotlin.ranges.CharProgression.c` @type ^`int` := v4;
  #L0cbf58.  return @kind void;
  #L0cbf5a.  v2:= new `java.lang.IllegalArgumentException`;
  #L0cbf5e.  v3:= "Step must be greater than Int.MIN_VALUE to avoid overflow on negation." @kind object;
  #L0cbf62.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0cbf68.  throw v2;
  #L0cbf6a.  v2:= new `java.lang.IllegalArgumentException`;
  #L0cbf6e.  v3:= "Step must be non-zero." @kind object;
  #L0cbf72.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0cbf78.  throw v2;
}
procedure `boolean` `equals`(`kotlin.ranges.CharProgression` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ranges/CharProgression;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0cbcfc.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.CharProgression` @kind boolean;
  #L0cbd00.  if v0 == 0 then goto L0cbd4e;
  #L0cbd04.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L0cbd0a.  v0:= temp;
  #L0cbd0c.  if v0 == 0 then goto L0cbd22;
  #L0cbd10.  v0:= v3 @kind object;
  #L0cbd12.  v0:= (`kotlin.ranges.CharProgression`) v0 @kind object;
  #L0cbd16.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L0cbd1c.  v0:= temp;
  #L0cbd1e.  if v0 != 0 then goto L0cbd4a;
  #L0cbd22.  v0:= v2.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbd26.  v3:= (`kotlin.ranges.CharProgression`) v3 @kind object;
  #L0cbd2a.  v1:= v3.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbd2e.  if v0 != v1 then goto L0cbd4e;
  #L0cbd32.  v0:= v2.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbd36.  v1:= v3.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbd3a.  if v0 != v1 then goto L0cbd4e;
  #L0cbd3e.  v0:= v2.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbd42.  v3:= v3.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbd46.  if v0 != v3 then goto L0cbd4e;
  #L0cbd4a.  v3:= 1I;
  #L0cbd4c.  goto L0cbd50;
  #L0cbd4e.  v3:= 0I;
  #L0cbd50.  return v3;
}
procedure `char` `getFirst`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getFirst:()C` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0cbdb0.  v0:= v1.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbdb4.  return v0;
}
procedure `char` `getLast`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getLast:()C` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0cbdc8.  v0:= v1.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbdcc.  return v0;
}
procedure `int` `getStep`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getStep:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0cbde0.  v0:= v1.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbde4.  return v0;
}
procedure `int` `hashCode`(`kotlin.ranges.CharProgression` v2 @kind this) @signature `Lkotlin/ranges/CharProgression;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0cbdf8.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L0cbdfe.  v0:= temp;
  #L0cbe00.  if v0 == 0 then goto L0cbe08;
  #L0cbe04.  v0:= -1I;
  #L0cbe06.  goto L0cbe20;
  #L0cbe08.  v0:= v2.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbe0c.  v0:= v0 * 31;
  #L0cbe10.  v1:= v2.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbe14.  v0:= v0 + v1 @kind int;
  #L0cbe16.  v0:= v0 * 31;
  #L0cbe1a.  v1:= v2.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbe1e.  v0:= v0 + v1 @kind int;
  #L0cbe20.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.CharProgression` v4 @kind this) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0cbd64.  v0:= v4.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbd68.  v1:= 1I;
  #L0cbd6a.  v2:= 0I;
  #L0cbd6c.  if v0 <= 0 then goto L0cbd86;
  #L0cbd70.  v0:= v4.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbd74.  v3:= v4.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbd78.  call temp:= `compare`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L0cbd7e.  v0:= temp;
  #L0cbd80.  if v0 <= 0 then goto L0cbd9c;
  #L0cbd84.  goto L0cbd9e;
  #L0cbd86.  v0:= v4.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbd8a.  v3:= v4.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbd8e.  call temp:= `compare`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L0cbd94.  v0:= temp;
  #L0cbd96.  if v0 >= 0 then goto L0cbd9c;
  #L0cbd9a.  goto L0cbd9e;
  #L0cbd9c.  v1:= 0I;
  #L0cbd9e.  return v1;
}
procedure `java.util.Iterator` `iterator`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L0cbec8.  call temp:= `iterator`(v1) @signature `Lkotlin/ranges/CharProgression;.iterator:()Lkotlin/collections/CharIterator;` @kind virtual;
  #L0cbece.  v0:= temp @kind object;
  #L0cbed0.  return v0 @kind object;
}
procedure `kotlin.collections.CharIterator` `iterator`(`kotlin.ranges.CharProgression` v4 @kind this) @signature `Lkotlin/ranges/CharProgression;.iterator:()Lkotlin/collections/CharIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0cbee4.  v0:= new `kotlin.ranges.CharProgressionIterator`;
  #L0cbee8.  v1:= v4.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbeec.  v2:= v4.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbef0.  v3:= v4.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbef4.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlin/ranges/CharProgressionIterator;.<init>:(CCI)V` @kind direct;
  #L0cbefa.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.CharProgression` v3 @kind this) @signature `Lkotlin/ranges/CharProgression;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0cbe34.  v0:= v3.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbe38.  v1:= " step " @kind object;
  #L0cbe3c.  if v0 <= 0 then goto L0cbe74;
  #L0cbe40.  v0:= new `java.lang.StringBuilder`;
  #L0cbe44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0cbe4a.  v2:= v3.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbe4e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbe54.  v2:= ".." @kind object;
  #L0cbe58.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbe5e.  v2:= v3.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbe62.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbe68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbe6e.  v1:= v3.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbe72.  goto L0cbea8;
  #L0cbe74.  v0:= new `java.lang.StringBuilder`;
  #L0cbe78.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0cbe7e.  v2:= v3.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L0cbe82.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbe88.  v2:= " downTo " @kind object;
  #L0cbe8c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbe92.  v2:= v3.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L0cbe96.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbe9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbea2.  v1:= v3.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L0cbea6.  v1:= -v1 @kind int;
  #L0cbea8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cbeae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0cbeb4.  v0:= temp @kind object;
  #L0cbeb6.  return v0 @kind object;
}
