record `kotlin.ranges.UIntRange` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.ranges.UIntProgression` @kind class, `kotlin.ranges.ClosedRange` @kind interface {
}
global `kotlin.ranges.UIntRange$Companion` `@@kotlin.ranges.UIntRange.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.ranges.UIntRange` `@@kotlin.ranges.UIntRange.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/UIntRange;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0cfea0.  v0:= new `kotlin.ranges.UIntRange$Companion`;
  #L0cfea4.  v1:= 0I;
  #L0cfea6.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/UIntRange$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0cfeac.  `@@kotlin.ranges.UIntRange.Companion` @type ^`kotlin.ranges.UIntRange$Companion` := v0 @kind object;
  #L0cfeb0.  v0:= new `kotlin.ranges.UIntRange`;
  #L0cfeb4.  v2:= -1I;
  #L0cfeb6.  v3:= 0I;
  #L0cfeb8.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/ranges/UIntRange;.<init>:(IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0cfebe.  `@@kotlin.ranges.UIntRange.d` @type ^`kotlin.ranges.UIntRange` := v0 @kind object;
  #L0cfec2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.UIntRange` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lkotlin/ranges/UIntRange;.<init>:(II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0cfed4.  v0:= 1I;
  #L0cfed6.  v1:= 0I;
  #L0cfed8.  call `<init>`(v2, v3, v4, v0, v1) @signature `Lkotlin/ranges/UIntProgression;.<init>:(IIILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0cfede.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.UIntRange` v0 @kind this, `int` v1 , `int` v2 , `kotlin.jvm.internal.DefaultConstructorMarker` v3 @kind object) @signature `Lkotlin/ranges/UIntRange;.<init>:(IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L0cfef0.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/UIntRange;.<init>:(II)V` @kind direct;
  #L0cfef6.  return @kind void;
}
procedure `kotlin.ranges.UIntRange` `access$getEMPTY$cp`() @signature `Lkotlin/ranges/UIntRange;.access$getEMPTY$cp:()Lkotlin/ranges/UIntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0cfe88.  v0:= `@@kotlin.ranges.UIntRange.d` @type ^`kotlin.ranges.UIntRange` @kind object;
  #L0cfe8c.  return v0 @kind object;
}
procedure `boolean` `contains`(`kotlin.ranges.UIntRange` v0 @kind this, `java.lang.Comparable` v1 @kind object) @signature `Lkotlin/ranges/UIntRange;.contains:(Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0cfc6c.  v1:= (`kotlin.UInt`) v1 @kind object;
  #L0cfc70.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UInt;.unbox-impl:()I` @kind virtual;
  #L0cfc76.  v1:= temp;
  #L0cfc78.  call temp:= `contains-WZ4Q5Ns`(v0, v1) @signature `Lkotlin/ranges/UIntRange;.contains-WZ4Q5Ns:(I)Z` @kind virtual;
  #L0cfc7e.  v1:= temp;
  #L0cfc80.  return v1;
}
procedure `boolean` `contains-WZ4Q5Ns`(`kotlin.ranges.UIntRange` v1 @kind this, `int` v2 ) @signature `Lkotlin/ranges/UIntRange;.contains-WZ4Q5Ns:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0cfc94.  call temp:= `getFirst-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cfc9a.  v0:= temp;
  #L0cfc9c.  call temp:= `uintCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L0cfca2.  v0:= temp;
  #L0cfca4.  if v0 > 0 then goto L0cfcc0;
  #L0cfca8.  call temp:= `getLast-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cfcae.  v0:= temp;
  #L0cfcb0.  call temp:= `uintCompare`(v2, v0) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L0cfcb6.  v2:= temp;
  #L0cfcb8.  if v2 > 0 then goto L0cfcc0;
  #L0cfcbc.  v2:= 1I;
  #L0cfcbe.  goto L0cfcc2;
  #L0cfcc0.  v2:= 0I;
  #L0cfcc2.  return v2;
}
procedure `boolean` `equals`(`kotlin.ranges.UIntRange` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ranges/UIntRange;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0cfcd4.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.UIntRange` @kind boolean;
  #L0cfcd8.  if v0 == 0 then goto L0cfd2a;
  #L0cfcdc.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L0cfce2.  v0:= temp;
  #L0cfce4.  if v0 == 0 then goto L0cfcfa;
  #L0cfce8.  v0:= v3 @kind object;
  #L0cfcea.  v0:= (`kotlin.ranges.UIntRange`) v0 @kind object;
  #L0cfcee.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L0cfcf4.  v0:= temp;
  #L0cfcf6.  if v0 != 0 then goto L0cfd26;
  #L0cfcfa.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cfd00.  v0:= temp;
  #L0cfd02.  v3:= (`kotlin.ranges.UIntRange`) v3 @kind object;
  #L0cfd06.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cfd0c.  v1:= temp;
  #L0cfd0e.  if v0 != v1 then goto L0cfd2a;
  #L0cfd12.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cfd18.  v0:= temp;
  #L0cfd1a.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cfd20.  v3:= temp;
  #L0cfd22.  if v0 != v3 then goto L0cfd2a;
  #L0cfd26.  v3:= 1I;
  #L0cfd28.  goto L0cfd2c;
  #L0cfd2a.  v3:= 0I;
  #L0cfd2c.  return v3;
}
procedure `java.lang.Comparable` `getEndInclusive`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L0cfde4.  call temp:= `getEndInclusive-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive-pVg5ArA:()I` @kind virtual;
  #L0cfdea.  v0:= temp;
  #L0cfdec.  call temp:= `box-impl`(v0) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L0cfdf2.  v0:= temp @kind object;
  #L0cfdf4.  return v0 @kind object;
}
procedure `int` `getEndInclusive-pVg5ArA`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive-pVg5ArA:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0cfd74.  call temp:= `getLast-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cfd7a.  v0:= temp;
  #L0cfd7c.  return v0;
}
procedure `java.lang.Comparable` `getStart`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getStart:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L0cfe08.  call temp:= `getStart-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntRange;.getStart-pVg5ArA:()I` @kind virtual;
  #L0cfe0e.  v0:= temp;
  #L0cfe10.  call temp:= `box-impl`(v0) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L0cfe16.  v0:= temp @kind object;
  #L0cfe18.  return v0 @kind object;
}
procedure `int` `getStart-pVg5ArA`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getStart-pVg5ArA:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0cfd90.  call temp:= `getFirst-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cfd96.  v0:= temp;
  #L0cfd98.  return v0;
}
procedure `int` `hashCode`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0cfdac.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L0cfdb2.  v0:= temp;
  #L0cfdb4.  if v0 == 0 then goto L0cfdbc;
  #L0cfdb8.  v0:= -1I;
  #L0cfdba.  goto L0cfdd2;
  #L0cfdbc.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cfdc2.  v0:= temp;
  #L0cfdc4.  v0:= v0 * 31;
  #L0cfdc8.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cfdce.  v1:= temp;
  #L0cfdd0.  v0:= v0 + v1 @kind int;
  #L0cfdd2.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0cfd40.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cfd46.  v0:= temp;
  #L0cfd48.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cfd4e.  v1:= temp;
  #L0cfd50.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L0cfd56.  v0:= temp;
  #L0cfd58.  if v0 <= 0 then goto L0cfd60;
  #L0cfd5c.  v0:= 1I;
  #L0cfd5e.  goto L0cfd62;
  #L0cfd60.  v0:= 0I;
  #L0cfd62.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0cfe2c.  v0:= new `java.lang.StringBuilder`;
  #L0cfe30.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0cfe36.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cfe3c.  v1:= temp;
  #L0cfe3e.  call temp:= `toString-impl`(v1) @signature `Lkotlin/UInt;.toString-impl:(I)Ljava/lang/String;` @kind static;
  #L0cfe44.  v1:= temp @kind object;
  #L0cfe46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cfe4c.  v1:= ".." @kind object;
  #L0cfe50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cfe56.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cfe5c.  v1:= temp;
  #L0cfe5e.  call temp:= `toString-impl`(v1) @signature `Lkotlin/UInt;.toString-impl:(I)Ljava/lang/String;` @kind static;
  #L0cfe64.  v1:= temp @kind object;
  #L0cfe66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cfe6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0cfe72.  v0:= temp @kind object;
  #L0cfe74.  return v0 @kind object;
}
