record `kotlin.ranges.ULongRange` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.ranges.ULongProgression` @kind class, `kotlin.ranges.ClosedRange` @kind interface {
}
global `kotlin.ranges.ULongRange$Companion` `@@kotlin.ranges.ULongRange.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.ranges.ULongRange` `@@kotlin.ranges.ULongRange.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/ULongRange;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0d0650.  v0:= new `kotlin.ranges.ULongRange$Companion`;
  #L0d0654.  v1:= 0I;
  #L0d0656.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/ULongRange$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0d065c.  `@@kotlin.ranges.ULongRange.Companion` @type ^`kotlin.ranges.ULongRange$Companion` := v0 @kind object;
  #L0d0660.  v0:= new `kotlin.ranges.ULongRange`;
  #L0d0664.  v3:= -1L;
  #L0d0668.  v5:= 0L;
  #L0d066c.  v7:= 0I;
  #L0d066e.  v2:= v0 @kind object;
  #L0d0670.  call `<init>`(v2, v3, v5, v7) @signature `Lkotlin/ranges/ULongRange;.<init>:(JJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0d0676.  `@@kotlin.ranges.ULongRange.d` @type ^`kotlin.ranges.ULongRange` := v0 @kind object;
  #L0d067a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.ULongRange` v8 @kind this, `long` v9 , `long` v11 ) @signature `Lkotlin/ranges/ULongRange;.<init>:(JJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0d068c.  v5:= 1L;
  #L0d0690.  v7:= 0I;
  #L0d0692.  v0:= v8 @kind object;
  #L0d0694.  v1:= v9 @kind wide;
  #L0d0696.  v3:= v11 @kind wide;
  #L0d0698.  call `<init>`(v0, v1, v3, v5, v7) @signature `Lkotlin/ranges/ULongProgression;.<init>:(JJJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0d069e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.ULongRange` v0 @kind this, `long` v1 , `long` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lkotlin/ranges/ULongRange;.<init>:(JJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L0d06b0.  call `<init>`(v0, v1, v3) @signature `Lkotlin/ranges/ULongRange;.<init>:(JJ)V` @kind direct;
  #L0d06b6.  return @kind void;
}
procedure `kotlin.ranges.ULongRange` `access$getEMPTY$cp`() @signature `Lkotlin/ranges/ULongRange;.access$getEMPTY$cp:()Lkotlin/ranges/ULongRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d0600.  v0:= `@@kotlin.ranges.ULongRange.d` @type ^`kotlin.ranges.ULongRange` @kind object;
  #L0d0604.  return v0 @kind object;
}
procedure `boolean` `contains`(`kotlin.ranges.ULongRange` v2 @kind this, `java.lang.Comparable` v3 @kind object) @signature `Lkotlin/ranges/ULongRange;.contains:(Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0d03d0.  v3:= (`kotlin.ULong`) v3 @kind object;
  #L0d03d4.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L0d03da.  v0:= temp @kind wide;
  #L0d03dc.  call temp:= `contains-VKZWuLQ`(v2, v0) @signature `Lkotlin/ranges/ULongRange;.contains-VKZWuLQ:(J)Z` @kind virtual;
  #L0d03e2.  v3:= temp;
  #L0d03e4.  return v3;
}
procedure `boolean` `contains-VKZWuLQ`(`kotlin.ranges.ULongRange` v2 @kind this, `long` v3 ) @signature `Lkotlin/ranges/ULongRange;.contains-VKZWuLQ:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0d03f8.  call temp:= `getFirst-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0d03fe.  v0:= temp @kind wide;
  #L0d0400.  call temp:= `ulongCompare`(v0, v3) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L0d0406.  v0:= temp;
  #L0d0408.  if v0 > 0 then goto L0d0424;
  #L0d040c.  call temp:= `getLast-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0d0412.  v0:= temp @kind wide;
  #L0d0414.  call temp:= `ulongCompare`(v3, v0) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L0d041a.  v3:= temp;
  #L0d041c.  if v3 > 0 then goto L0d0424;
  #L0d0420.  v3:= 1I;
  #L0d0422.  goto L0d0426;
  #L0d0424.  v3:= 0I;
  #L0d0426.  return v3;
}
procedure `boolean` `equals`(`kotlin.ranges.ULongRange` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/ranges/ULongRange;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0d0438.  v0:= instanceof @variable v6 @type ^`kotlin.ranges.ULongRange` @kind boolean;
  #L0d043c.  if v0 == 0 then goto L0d0496;
  #L0d0440.  call temp:= `isEmpty`(v5) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L0d0446.  v0:= temp;
  #L0d0448.  if v0 == 0 then goto L0d045e;
  #L0d044c.  v0:= v6 @kind object;
  #L0d044e.  v0:= (`kotlin.ranges.ULongRange`) v0 @kind object;
  #L0d0452.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L0d0458.  v0:= temp;
  #L0d045a.  if v0 != 0 then goto L0d0492;
  #L0d045e.  call temp:= `getFirst-s-VKNKU`(v5) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0d0464.  v0:= temp @kind wide;
  #L0d0466.  v6:= (`kotlin.ranges.ULongRange`) v6 @kind object;
  #L0d046a.  call temp:= `getFirst-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0d0470.  v2:= temp @kind wide;
  #L0d0472.  v4:= lcmp(v0, v2);
  #L0d0476.  if v4 != 0 then goto L0d0496;
  #L0d047a.  call temp:= `getLast-s-VKNKU`(v5) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0d0480.  v0:= temp @kind wide;
  #L0d0482.  call temp:= `getLast-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0d0488.  v2:= temp @kind wide;
  #L0d048a.  v6:= lcmp(v0, v2);
  #L0d048e.  if v6 != 0 then goto L0d0496;
  #L0d0492.  v6:= 1I;
  #L0d0494.  goto L0d0498;
  #L0d0496.  v6:= 0I;
  #L0d0498.  return v6;
}
procedure `java.lang.Comparable` `getEndInclusive`(`kotlin.ranges.ULongRange` v2 @kind this) @signature `Lkotlin/ranges/ULongRange;.getEndInclusive:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0d055c.  call temp:= `getEndInclusive-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongRange;.getEndInclusive-s-VKNKU:()J` @kind virtual;
  #L0d0562.  v0:= temp @kind wide;
  #L0d0564.  call temp:= `box-impl`(v0) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L0d056a.  v0:= temp @kind object;
  #L0d056c.  return v0 @kind object;
}
procedure `long` `getEndInclusive-s-VKNKU`(`kotlin.ranges.ULongRange` v2 @kind this) @signature `Lkotlin/ranges/ULongRange;.getEndInclusive-s-VKNKU:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0d0618.  call temp:= `getLast-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0d061e.  v0:= temp @kind wide;
  #L0d0620.  return v0 @kind wide;
}
procedure `java.lang.Comparable` `getStart`(`kotlin.ranges.ULongRange` v2 @kind this) @signature `Lkotlin/ranges/ULongRange;.getStart:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0d0580.  call temp:= `getStart-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongRange;.getStart-s-VKNKU:()J` @kind virtual;
  #L0d0586.  v0:= temp @kind wide;
  #L0d0588.  call temp:= `box-impl`(v0) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L0d058e.  v0:= temp @kind object;
  #L0d0590.  return v0 @kind object;
}
procedure `long` `getStart-s-VKNKU`(`kotlin.ranges.ULongRange` v2 @kind this) @signature `Lkotlin/ranges/ULongRange;.getStart-s-VKNKU:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0d0634.  call temp:= `getFirst-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0d063a.  v0:= temp @kind wide;
  #L0d063c.  return v0 @kind wide;
}
procedure `int` `hashCode`(`kotlin.ranges.ULongRange` v7 @kind this) @signature `Lkotlin/ranges/ULongRange;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0d04e0.  call temp:= `isEmpty`(v7) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L0d04e6.  v0:= temp;
  #L0d04e8.  if v0 == 0 then goto L0d04f0;
  #L0d04ec.  v0:= -1I;
  #L0d04ee.  goto L0d0548;
  #L0d04f0.  call temp:= `getFirst-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0d04f6.  v0:= temp @kind wide;
  #L0d04f8.  call temp:= `getFirst-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0d04fe.  v2:= temp @kind wide;
  #L0d0500.  v4:= 32I;
  #L0d0504.  v2:= v2 ^>> v4 @kind long;
  #L0d0506.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0d050c.  v2:= temp @kind wide;
  #L0d050e.  v0:= v0 ^~ v2 @kind long;
  #L0d0510.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0d0516.  v0:= temp @kind wide;
  #L0d0518.  v1:= (`int`) v0 @kind l2i;
  #L0d051a.  v1:= v1 * 31;
  #L0d051e.  call temp:= `getLast-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0d0524.  v2:= temp @kind wide;
  #L0d0526.  call temp:= `getLast-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0d052c.  v5:= temp @kind wide;
  #L0d052e.  v4:= v5 ^>> v4 @kind long;
  #L0d0532.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0d0538.  v4:= temp @kind wide;
  #L0d053a.  v2:= v2 ^~ v4 @kind long;
  #L0d053c.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0d0542.  v2:= temp @kind wide;
  #L0d0544.  v0:= (`int`) v2 @kind l2i;
  #L0d0546.  v0:= v0 + v1 @kind int;
  #L0d0548.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.ULongRange` v4 @kind this) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0d04ac.  call temp:= `getFirst-s-VKNKU`(v4) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0d04b2.  v0:= temp @kind wide;
  #L0d04b4.  call temp:= `getLast-s-VKNKU`(v4) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0d04ba.  v2:= temp @kind wide;
  #L0d04bc.  call temp:= `ulongCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L0d04c2.  v0:= temp;
  #L0d04c4.  if v0 <= 0 then goto L0d04cc;
  #L0d04c8.  v0:= 1I;
  #L0d04ca.  goto L0d04ce;
  #L0d04cc.  v0:= 0I;
  #L0d04ce.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.ULongRange` v3 @kind this) @signature `Lkotlin/ranges/ULongRange;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0d05a4.  v0:= new `java.lang.StringBuilder`;
  #L0d05a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0d05ae.  call temp:= `getFirst-s-VKNKU`(v3) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0d05b4.  v1:= temp @kind wide;
  #L0d05b6.  call temp:= `toString-impl`(v1) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L0d05bc.  v1:= temp @kind object;
  #L0d05be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d05c4.  v1:= ".." @kind object;
  #L0d05c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d05ce.  call temp:= `getLast-s-VKNKU`(v3) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0d05d4.  v1:= temp @kind wide;
  #L0d05d6.  call temp:= `toString-impl`(v1) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L0d05dc.  v1:= temp @kind object;
  #L0d05de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d05e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0d05ea.  v0:= temp @kind object;
  #L0d05ec.  return v0 @kind object;
}
