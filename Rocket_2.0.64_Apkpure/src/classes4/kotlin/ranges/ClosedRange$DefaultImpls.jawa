record `kotlin.ranges.ClosedRange$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `contains`(`kotlin.ranges.ClosedRange` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lkotlin/ranges/ClosedRange$DefaultImpls;.contains:(Lkotlin/ranges/ClosedRange;Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0cc7b8.  v0:= "value" @kind object;
  #L0cc7bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cc7c2.  call temp:= `getStart`(v1) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L0cc7c8.  v0:= temp @kind object;
  #L0cc7ca.  call temp:= `compareTo`(v2, v0) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0cc7d0.  v0:= temp;
  #L0cc7d2.  if v0 < 0 then goto L0cc7ee;
  #L0cc7d6.  call temp:= `getEndInclusive`(v1) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L0cc7dc.  v1:= temp @kind object;
  #L0cc7de.  call temp:= `compareTo`(v2, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0cc7e4.  v1:= temp;
  #L0cc7e6.  if v1 > 0 then goto L0cc7ee;
  #L0cc7ea.  v1:= 1I;
  #L0cc7ec.  goto L0cc7f0;
  #L0cc7ee.  v1:= 0I;
  #L0cc7f0.  return v1;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.ClosedRange` v1 @kind object) @signature `Lkotlin/ranges/ClosedRange$DefaultImpls;.isEmpty:(Lkotlin/ranges/ClosedRange;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0cc804.  call temp:= `getStart`(v1) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L0cc80a.  v0:= temp @kind object;
  #L0cc80c.  call temp:= `getEndInclusive`(v1) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L0cc812.  v1:= temp @kind object;
  #L0cc814.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0cc81a.  v1:= temp;
  #L0cc81c.  if v1 <= 0 then goto L0cc824;
  #L0cc820.  v1:= 1I;
  #L0cc822.  goto L0cc826;
  #L0cc824.  v1:= 0I;
  #L0cc826.  return v1;
}
