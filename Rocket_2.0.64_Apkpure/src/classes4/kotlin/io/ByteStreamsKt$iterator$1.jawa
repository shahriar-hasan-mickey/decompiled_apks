record `kotlin.io.ByteStreamsKt$iterator$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.ByteIterator` @kind class {
  `int` `kotlin.io.ByteStreamsKt$iterator$1.a` @AccessFlag PRIVATE;
  `boolean` `kotlin.io.ByteStreamsKt$iterator$1.b` @AccessFlag PRIVATE;
  `boolean` `kotlin.io.ByteStreamsKt$iterator$1.c` @AccessFlag PRIVATE;
  `java.io.BufferedInputStream` `kotlin.io.ByteStreamsKt$iterator$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.io.ByteStreamsKt$iterator$1` v0 @kind this, `java.io.BufferedInputStream` v1 @kind object) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.<init>:(Ljava/io/BufferedInputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0be608.  v0.`kotlin.io.ByteStreamsKt$iterator$1.d` @type ^`java.io.BufferedInputStream` := v1 @kind object;
  #L0be60c.  call `<init>`(v0) @signature `Lkotlin/collections/ByteIterator;.<init>:()V` @kind direct;
  #L0be612.  v1:= -1I;
  #L0be614.  v0.`kotlin.io.ByteStreamsKt$iterator$1.a` @type ^`int` := v1;
  #L0be618.  return @kind void;
}
procedure `void` `b`(`kotlin.io.ByteStreamsKt$iterator$1` v3 @kind this) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0be62c.  v0:= v3.`kotlin.io.ByteStreamsKt$iterator$1.b` @type ^`boolean` @kind boolean;
  #L0be630.  if v0 != 0 then goto L0be660;
  #L0be634.  v0:= v3.`kotlin.io.ByteStreamsKt$iterator$1.c` @type ^`boolean` @kind boolean;
  #L0be638.  if v0 != 0 then goto L0be660;
  #L0be63c.  v0:= v3.`kotlin.io.ByteStreamsKt$iterator$1.d` @type ^`java.io.BufferedInputStream` @kind object;
  #L0be640.  call temp:= `read`(v0) @signature `Ljava/io/BufferedInputStream;.read:()I` @kind virtual;
  #L0be646.  v0:= temp;
  #L0be648.  v3.`kotlin.io.ByteStreamsKt$iterator$1.a` @type ^`int` := v0;
  #L0be64c.  v1:= 1I;
  #L0be64e.  v3.`kotlin.io.ByteStreamsKt$iterator$1.b` @type ^`boolean` := v1 @kind boolean;
  #L0be652.  v2:= -1I;
  #L0be654.  if v0 != v2 then goto L0be65a;
  #L0be658.  goto L0be65c;
  #L0be65a.  v1:= 0I;
  #L0be65c.  v3.`kotlin.io.ByteStreamsKt$iterator$1.c` @type ^`boolean` := v1 @kind boolean;
  #L0be660.  return @kind void;
}
procedure `boolean` `getFinished`(`kotlin.io.ByteStreamsKt$iterator$1` v1 @kind this) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.getFinished:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0be564.  v0:= v1.`kotlin.io.ByteStreamsKt$iterator$1.c` @type ^`boolean` @kind boolean;
  #L0be568.  return v0;
}
procedure `int` `getNextByte`(`kotlin.io.ByteStreamsKt$iterator$1` v1 @kind this) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.getNextByte:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0be5f0.  v0:= v1.`kotlin.io.ByteStreamsKt$iterator$1.a` @type ^`int`;
  #L0be5f4.  return v0;
}
procedure `boolean` `getNextPrepared`(`kotlin.io.ByteStreamsKt$iterator$1` v1 @kind this) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.getNextPrepared:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0be57c.  v0:= v1.`kotlin.io.ByteStreamsKt$iterator$1.b` @type ^`boolean` @kind boolean;
  #L0be580.  return v0;
}
procedure `boolean` `hasNext`(`kotlin.io.ByteStreamsKt$iterator$1` v1 @kind this) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0be594.  call `b`(v1) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.b:()V` @kind direct;
  #L0be59a.  v0:= v1.`kotlin.io.ByteStreamsKt$iterator$1.c` @type ^`boolean` @kind boolean;
  #L0be59e.  v0:= v0 ^~ 1;
  #L0be5a2.  return v0;
}
procedure `byte` `nextByte`(`kotlin.io.ByteStreamsKt$iterator$1` v2 @kind this) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.nextByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0be5b4.  call `b`(v2) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.b:()V` @kind direct;
  #L0be5ba.  v0:= v2.`kotlin.io.ByteStreamsKt$iterator$1.c` @type ^`boolean` @kind boolean;
  #L0be5be.  if v0 != 0 then goto L0be5d0;
  #L0be5c2.  v0:= v2.`kotlin.io.ByteStreamsKt$iterator$1.a` @type ^`int`;
  #L0be5c6.  v0:= (`byte`) v0 @kind i2b;
  #L0be5c8.  v1:= 0I;
  #L0be5ca.  v2.`kotlin.io.ByteStreamsKt$iterator$1.b` @type ^`boolean` := v1 @kind boolean;
  #L0be5ce.  return v0;
  #L0be5d0.  v0:= new `java.util.NoSuchElementException`;
  #L0be5d4.  v1:= "Input stream is over." @kind object;
  #L0be5d8.  call `<init>`(v0, v1) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0be5de.  throw v0;
}
procedure `void` `setFinished`(`kotlin.io.ByteStreamsKt$iterator$1` v0 @kind this, `boolean` v1 ) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.setFinished:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0be674.  v0.`kotlin.io.ByteStreamsKt$iterator$1.c` @type ^`boolean` := v1 @kind boolean;
  #L0be678.  return @kind void;
}
procedure `void` `setNextByte`(`kotlin.io.ByteStreamsKt$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.setNextByte:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0be68c.  v0.`kotlin.io.ByteStreamsKt$iterator$1.a` @type ^`int` := v1;
  #L0be690.  return @kind void;
}
procedure `void` `setNextPrepared`(`kotlin.io.ByteStreamsKt$iterator$1` v0 @kind this, `boolean` v1 ) @signature `Lkotlin/io/ByteStreamsKt$iterator$1;.setNextPrepared:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0be6a4.  v0.`kotlin.io.ByteStreamsKt$iterator$1.b` @type ^`boolean` := v1 @kind boolean;
  #L0be6a8.  return @kind void;
}
