record `kotlin.io.path.a` @kind class @AccessFlag FINAL {
}
global `kotlin.io.path.a` `@@kotlin.io.path.a.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.file.Path` `@@kotlin.io.path.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.file.Path` `@@kotlin.io.path.a.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/io/path/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0c1bac.  v0:= new `kotlin.io.path.a`;
  #L0c1bb0.  call `<init>`(v0) @signature `Lkotlin/io/path/a;.<init>:()V` @kind direct;
  #L0c1bb6.  `@@kotlin.io.path.a.a` @type ^`kotlin.io.path.a` := v0 @kind object;
  #L0c1bba.  v0:= 0I;
  #L0c1bbc.  v1:= new `java.lang.String`[v0];
  #L0c1bc0.  v2:= "" @kind object;
  #L0c1bc4.  call temp:= `get`(v2, v1) @signature `Ljava/nio/file/Paths;.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;` @kind static;
  #L0c1bca.  v1:= temp @kind object;
  #L0c1bcc.  `@@kotlin.io.path.a.b` @type ^`java.nio.file.Path` := v1 @kind object;
  #L0c1bd0.  v0:= new `java.lang.String`[v0];
  #L0c1bd4.  v1:= ".." @kind object;
  #L0c1bd8.  call temp:= `get`(v1, v0) @signature `Ljava/nio/file/Paths;.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;` @kind static;
  #L0c1bde.  v0:= temp @kind object;
  #L0c1be0.  `@@kotlin.io.path.a.c` @type ^`java.nio.file.Path` := v0 @kind object;
  #L0c1be4.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.path.a` v0 @kind this) @signature `Lkotlin/io/path/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0c1bf8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c1bfe.  return @kind void;
}
procedure `java.nio.file.Path` `a`(`kotlin.io.path.a` v7 @kind this, `java.nio.file.Path` v8 @kind object, `java.nio.file.Path` v9 @kind object) @signature `Lkotlin/io/path/a;.a:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0c1a74.  v0:= "path" @kind object;
  #L0c1a78.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1a7e.  v0:= "base" @kind object;
  #L0c1a82.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1a88.  call temp:= `normalize`(v9) @signature `Ljava/nio/file/Path;.normalize:()Ljava/nio/file/Path;` @kind interface;
  #L0c1a8e.  v9:= temp @kind object;
  #L0c1a90.  call temp:= `normalize`(v8) @signature `Ljava/nio/file/Path;.normalize:()Ljava/nio/file/Path;` @kind interface;
  #L0c1a96.  v8:= temp @kind object;
  #L0c1a98.  call temp:= `relativize`(v9, v8) @signature `Ljava/nio/file/Path;.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;` @kind interface;
  #L0c1a9e.  v0:= temp @kind object;
  #L0c1aa0.  call temp:= `getNameCount`(v9) @signature `Ljava/nio/file/Path;.getNameCount:()I` @kind interface;
  #L0c1aa6.  v1:= temp;
  #L0c1aa8.  call temp:= `getNameCount`(v8) @signature `Ljava/nio/file/Path;.getNameCount:()I` @kind interface;
  #L0c1aae.  v2:= temp;
  #L0c1ab0.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L0c1ab6.  v1:= temp;
  #L0c1ab8.  v2:= 0I;
  #L0c1aba.  v3:= 0I;
  #L0c1abc.  if v3 >= v1 then goto L0c1b06;
  #L0c1ac0.  v4:= v3 + 1;
  #L0c1ac4.  call temp:= `getName`(v9, v3) @signature `Ljava/nio/file/Path;.getName:(I)Ljava/nio/file/Path;` @kind interface;
  #L0c1aca.  v5:= temp @kind object;
  #L0c1acc.  v6:= `@@kotlin.io.path.a.c` @type ^`java.nio.file.Path` @kind object;
  #L0c1ad0.  call temp:= `areEqual`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c1ad6.  v5:= temp;
  #L0c1ad8.  if v5 != 0 then goto L0c1ade;
  #L0c1adc.  goto L0c1b06;
  #L0c1ade.  call temp:= `getName`(v8, v3) @signature `Ljava/nio/file/Path;.getName:(I)Ljava/nio/file/Path;` @kind interface;
  #L0c1ae4.  v3:= temp @kind object;
  #L0c1ae6.  call temp:= `areEqual`(v3, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c1aec.  v3:= temp;
  #L0c1aee.  if v3 == 0 then goto L0c1af6;
  #L0c1af2.  v3:= v4;
  #L0c1af4.  goto L0c1abc;
  #L0c1af6.  v8:= new `java.lang.IllegalArgumentException`;
  #L0c1afa.  v9:= "Unable to compute relative path" @kind object;
  #L0c1afe.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0c1b04.  throw v8;
  #L0c1b06.  call temp:= `areEqual`(v8, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c1b0c.  v1:= temp;
  #L0c1b0e.  if v1 != 0 then goto L0c1b24;
  #L0c1b12.  v1:= `@@kotlin.io.path.a.b` @type ^`java.nio.file.Path` @kind object;
  #L0c1b16.  call temp:= `areEqual`(v9, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c1b1c.  v9:= temp;
  #L0c1b1e.  if v9 == 0 then goto L0c1b24;
  #L0c1b22.  goto L0c1b8e;
  #L0c1b24.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c1b2a.  v8:= temp @kind object;
  #L0c1b2c.  call temp:= `getFileSystem`(v0) @signature `Ljava/nio/file/Path;.getFileSystem:()Ljava/nio/file/FileSystem;` @kind interface;
  #L0c1b32.  v9:= temp @kind object;
  #L0c1b34.  call temp:= `getSeparator`(v9) @signature `Ljava/nio/file/FileSystem;.getSeparator:()Ljava/lang/String;` @kind virtual;
  #L0c1b3a.  v9:= temp @kind object;
  #L0c1b3c.  v1:= "rn.fileSystem.separator" @kind object;
  #L0c1b40.  call `checkNotNullExpressionValue`(v9, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1b46.  v1:= 2I;
  #L0c1b48.  v3:= 0I;
  #L0c1b4a.  call temp:= `endsWith$default`(v8, v9, v2, v1, v3) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L0c1b50.  v9:= temp;
  #L0c1b52.  if v9 == 0 then goto L0c1b8c;
  #L0c1b56.  call temp:= `getFileSystem`(v0) @signature `Ljava/nio/file/Path;.getFileSystem:()Ljava/nio/file/FileSystem;` @kind interface;
  #L0c1b5c.  v9:= temp @kind object;
  #L0c1b5e.  call temp:= `getFileSystem`(v0) @signature `Ljava/nio/file/Path;.getFileSystem:()Ljava/nio/file/FileSystem;` @kind interface;
  #L0c1b64.  v0:= temp @kind object;
  #L0c1b66.  call temp:= `getSeparator`(v0) @signature `Ljava/nio/file/FileSystem;.getSeparator:()Ljava/lang/String;` @kind virtual;
  #L0c1b6c.  v0:= temp @kind object;
  #L0c1b6e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0c1b74.  v0:= temp;
  #L0c1b76.  call temp:= `dropLast`(v8, v0) @signature `Lkotlin/text/StringsKt;.dropLast:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L0c1b7c.  v8:= temp @kind object;
  #L0c1b7e.  v0:= new `java.lang.String`[v2];
  #L0c1b82.  call temp:= `getPath`(v9, v8, v0) @signature `Ljava/nio/file/FileSystem;.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;` @kind virtual;
  #L0c1b88.  v8:= temp @kind object;
  #L0c1b8a.  goto L0c1b8e;
  #L0c1b8c.  v8:= v0 @kind object;
  #L0c1b8e.  v9:= "r" @kind object;
  #L0c1b92.  call `checkNotNullExpressionValue`(v8, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1b98.  return v8 @kind object;
}
