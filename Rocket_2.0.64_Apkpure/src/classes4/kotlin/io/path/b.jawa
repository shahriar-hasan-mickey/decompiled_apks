record `kotlin.io.path.b` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.io.path.b` v0 @kind this) @signature `Lkotlin/io/path/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c1cb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c1cbe.  return @kind void;
}
procedure `void` `appendText`(`java.nio.file.Path` v3 @kind object, `java.lang.CharSequence` v4 @kind object, `java.nio.charset.Charset` v5 @kind object) @signature `Lkotlin/io/path/b;.appendText:(Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0c1cf4.  v0:= "<this>" @kind object;
  #L0c1cf8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1cfe.  v0:= "text" @kind object;
  #L0c1d02.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1d08.  v0:= "charset" @kind object;
  #L0c1d0c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1d12.  v0:= 1I;
  #L0c1d14.  v0:= new `java.nio.file.OpenOption`[v0];
  #L0c1d18.  v1:= `@@java.nio.file.StandardOpenOption.APPEND` @type ^`java.nio.file.StandardOpenOption` @kind object;
  #L0c1d1c.  v2:= 0I;
  #L0c1d1e.  v0[v2]:= v1 @kind object;
  #L0c1d22.  call temp:= `newOutputStream`(v3, v0) @signature `Ljava/nio/file/Files;.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;` @kind static;
  #L0c1d28.  v3:= temp @kind object;
  #L0c1d2a.  v0:= "newOutputStream(this, StandardOpenOption.APPEND)" @kind object;
  #L0c1d2e.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1d34.  v0:= new `java.io.OutputStreamWriter`;
  #L0c1d38.  call `<init>`(v0, v3, v5) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L0c1d3e.  call temp:= `append`(v0, v4) @signature `Ljava/io/OutputStreamWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L0c1d44.  v3:= 0I;
  #L0c1d46.  call `closeFinally`(v0, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L0c1d4c.  return @kind void;
  #L0c1d4e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0c1d50.  throw v3;
  #L0c1d52.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0c1d54.  call `closeFinally`(v0, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L0c1d5a.  throw v4;
  catch `java.lang.Throwable` @[L0c1d3e..L0c1d44] goto L0c1d4e;
  catch `java.lang.Throwable` @[L0c1d50..L0c1d52] goto L0c1d52;
}
procedure `void` `appendText$default`(`java.nio.file.Path` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `java.nio.charset.Charset` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/io/path/b;.appendText$default:(Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c1cd0.  v3:= v3 ^& 2;
  #L0c1cd4.  if v3 == 0 then goto L0c1cdc;
  #L0c1cd8.  v2:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0c1cdc.  call `appendText`(v0, v1, v2) @signature `Lkotlin/io/path/b;.appendText:(Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V` @kind static;
  #L0c1ce2.  return @kind void;
}
procedure `java.lang.String` `readText`(`java.nio.file.Path` v3 @kind object, `java.nio.charset.Charset` v4 @kind object) @signature `Lkotlin/io/path/b;.readText:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0c1c38.  v0:= "<this>" @kind object;
  #L0c1c3c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1c42.  v0:= "charset" @kind object;
  #L0c1c46.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1c4c.  v0:= 0I;
  #L0c1c4e.  v1:= new `java.nio.file.OpenOption`[v0];
  #L0c1c52.  v2:= new `java.io.InputStreamReader`;
  #L0c1c56.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0c1c5c.  v0:= temp @kind object;
  #L0c1c5e.  v0:= (`java.nio.file.OpenOption`[]) v0 @kind object;
  #L0c1c62.  call temp:= `newInputStream`(v3, v0) @signature `Ljava/nio/file/Files;.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;` @kind static;
  #L0c1c68.  v3:= temp @kind object;
  #L0c1c6a.  call `<init>`(v2, v3, v4) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L0c1c70.  call temp:= `readText`(v2) @signature `Lkotlin/io/TextStreamsKt;.readText:(Ljava/io/Reader;)Ljava/lang/String;` @kind static;
  #L0c1c76.  v3:= temp @kind object;
  #L0c1c78.  v4:= 0I;
  #L0c1c7a.  call `closeFinally`(v2, v4) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L0c1c80.  return v3 @kind object;
  #L0c1c82.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0c1c84.  throw v3;
  #L0c1c86.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0c1c88.  call `closeFinally`(v2, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L0c1c8e.  throw v4;
  catch `java.lang.Throwable` @[L0c1c70..L0c1c78] goto L0c1c82;
  catch `java.lang.Throwable` @[L0c1c84..L0c1c86] goto L0c1c86;
}
procedure `java.lang.String` `readText$default`(`java.nio.file.Path` v0 @kind object, `java.nio.charset.Charset` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/io/path/b;.readText$default:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c1c10.  v2:= v2 ^& 1;
  #L0c1c14.  if v2 == 0 then goto L0c1c1c;
  #L0c1c18.  v1:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0c1c1c.  call temp:= `readText`(v0, v1) @signature `Lkotlin/io/path/b;.readText:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L0c1c22.  v0:= temp @kind object;
  #L0c1c24.  return v0 @kind object;
}
procedure `void` `writeText`(`java.nio.file.Path` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `java.nio.charset.Charset` v3 @kind object, `java.nio.file.OpenOption`[] v4 @kind object) @signature `Lkotlin/io/path/b;.writeText:(Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0c1da8.  v0:= "<this>" @kind object;
  #L0c1dac.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1db2.  v0:= "text" @kind object;
  #L0c1db6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1dbc.  v0:= "charset" @kind object;
  #L0c1dc0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1dc6.  v0:= "options" @kind object;
  #L0c1dca.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1dd0.  v0:= length @variable v4;
  #L0c1dd2.  call temp:= `copyOf`(v4, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0c1dd8.  v4:= temp @kind object;
  #L0c1dda.  v4:= (`java.nio.file.OpenOption`[]) v4 @kind object;
  #L0c1dde.  call temp:= `newOutputStream`(v1, v4) @signature `Ljava/nio/file/Files;.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;` @kind static;
  #L0c1de4.  v1:= temp @kind object;
  #L0c1de6.  v4:= "newOutputStream(this, *options)" @kind object;
  #L0c1dea.  call `checkNotNullExpressionValue`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c1df0.  v4:= new `java.io.OutputStreamWriter`;
  #L0c1df4.  call `<init>`(v4, v1, v3) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L0c1dfa.  call temp:= `append`(v4, v2) @signature `Ljava/io/OutputStreamWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L0c1e00.  v1:= 0I;
  #L0c1e02.  call `closeFinally`(v4, v1) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L0c1e08.  return @kind void;
  #L0c1e0a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0c1e0c.  throw v1;
  #L0c1e0e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0c1e10.  call `closeFinally`(v4, v1) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L0c1e16.  throw v2;
  catch `java.lang.Throwable` @[L0c1dfa..L0c1e00] goto L0c1e0a;
  catch `java.lang.Throwable` @[L0c1e0c..L0c1e0e] goto L0c1e0e;
}
procedure `void` `writeText$default`(`java.nio.file.Path` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `java.nio.charset.Charset` v2 @kind object, `java.nio.file.OpenOption`[] v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/io/path/b;.writeText$default:(Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c1d84.  v4:= v4 ^& 2;
  #L0c1d88.  if v4 == 0 then goto L0c1d90;
  #L0c1d8c.  v2:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0c1d90.  call `writeText`(v0, v1, v2, v3) @signature `Lkotlin/io/path/b;.writeText:(Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)V` @kind static;
  #L0c1d96.  return @kind void;
}
