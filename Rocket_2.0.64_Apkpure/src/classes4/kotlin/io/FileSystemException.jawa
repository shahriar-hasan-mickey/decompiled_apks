record `kotlin.io.FileSystemException` @kind class @AccessFlag PUBLIC extends `java.io.IOException` @kind class {
  `java.io.File` `kotlin.io.FileSystemException.a` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `kotlin.io.FileSystemException.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.io.FileSystemException.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.io.FileSystemException` v1 @kind this, `java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlin/io/FileSystemException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0bed48.  v0:= "file" @kind object;
  #L0bed4c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bed52.  call temp:= `access$constructMessage`(v2, v3, v4) @signature `Lkotlin/io/ExceptionsKt;.access$constructMessage:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0bed58.  v0:= temp @kind object;
  #L0bed5a.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0bed60.  v1.`kotlin.io.FileSystemException.a` @type ^`java.io.File` := v2 @kind object;
  #L0bed64.  v1.`kotlin.io.FileSystemException.b` @type ^`java.io.File` := v3 @kind object;
  #L0bed68.  v1.`kotlin.io.FileSystemException.c` @type ^`java.lang.String` := v4 @kind object;
  #L0bed6c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileSystemException` v1 @kind this, `java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `kotlin.jvm.internal.DefaultConstructorMarker` v6 @kind object) @signature `Lkotlin/io/FileSystemException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L0bed80.  v6:= v5 ^& 2;
  #L0bed84.  v0:= 0I;
  #L0bed86.  if v6 == 0 then goto L0bed8c;
  #L0bed8a.  v3:= v0 @kind object;
  #L0bed8c.  v5:= v5 ^& 4;
  #L0bed90.  if v5 == 0 then goto L0bed96;
  #L0bed94.  v4:= v0 @kind object;
  #L0bed96.  call `<init>`(v1, v2, v3, v4) @signature `Lkotlin/io/FileSystemException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L0bed9c.  return @kind void;
}
procedure `java.io.File` `getFile`(`kotlin.io.FileSystemException` v1 @kind this) @signature `Lkotlin/io/FileSystemException;.getFile:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0bed00.  v0:= v1.`kotlin.io.FileSystemException.a` @type ^`java.io.File` @kind object;
  #L0bed04.  return v0 @kind object;
}
procedure `java.io.File` `getOther`(`kotlin.io.FileSystemException` v1 @kind this) @signature `Lkotlin/io/FileSystemException;.getOther:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0bed18.  v0:= v1.`kotlin.io.FileSystemException.b` @type ^`java.io.File` @kind object;
  #L0bed1c.  return v0 @kind object;
}
procedure `java.lang.String` `getReason`(`kotlin.io.FileSystemException` v1 @kind this) @signature `Lkotlin/io/FileSystemException;.getReason:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0bed30.  v0:= v1.`kotlin.io.FileSystemException.c` @type ^`java.lang.String` @kind object;
  #L0bed34.  return v0 @kind object;
}
