record `kotlin.io.ExceptionsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlin/io/ExceptionsKt;.a:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0be918.  v0:= new `java.lang.StringBuilder`;
  #L0be91c.  call temp:= `toString`(v2) @signature `Ljava/io/File;.toString:()Ljava/lang/String;` @kind virtual;
  #L0be922.  v2:= temp @kind object;
  #L0be924.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0be92a.  if v3 == 0 then goto L0be956;
  #L0be92e.  v2:= new `java.lang.StringBuilder`;
  #L0be932.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0be938.  v1:= " -> " @kind object;
  #L0be93c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0be942.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0be948.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0be94e.  v2:= temp @kind object;
  #L0be950.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0be956.  if v4 == 0 then goto L0be982;
  #L0be95a.  v2:= new `java.lang.StringBuilder`;
  #L0be95e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0be964.  v3:= ": " @kind object;
  #L0be968.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0be96e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0be974.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0be97a.  v2:= temp @kind object;
  #L0be97c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0be982.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0be988.  v2:= temp @kind object;
  #L0be98a.  v3:= "sb.toString()" @kind object;
  #L0be98e.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0be994.  return v2 @kind object;
}
procedure `java.lang.String` `access$constructMessage`(`java.io.File` v0 @kind object, `java.io.File` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/io/ExceptionsKt;.access$constructMessage:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0be8fc.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/io/ExceptionsKt;.a:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0be902.  v0:= temp @kind object;
  #L0be904.  return v0 @kind object;
}
