record `kotlin.io.FileTreeWalk$b` @kind class @AccessFlag ABSTRACT {
  `java.io.File` `kotlin.io.FileTreeWalk$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk$b` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lkotlin/io/FileTreeWalk$b;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0bf308.  v0:= "root" @kind object;
  #L0bf30c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bf312.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0bf318.  v1.`kotlin.io.FileTreeWalk$b.a` @type ^`java.io.File` := v2 @kind object;
  #L0bf31c.  return @kind void;
}
procedure `java.io.File` `a`(`kotlin.io.FileTreeWalk$b` v1 @kind this) @signature `Lkotlin/io/FileTreeWalk$b;.a:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0bf2f0.  v0:= v1.`kotlin.io.FileTreeWalk$b.a` @type ^`java.io.File` @kind object;
  #L0bf2f4.  return v0 @kind object;
}
procedure `java.io.File` `b`() @signature `Lkotlin/io/FileTreeWalk$b;.b:()Ljava/io/File;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
