record `kotlin.io.OnErrorAction` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.io.OnErrorAction` `@@kotlin.io.OnErrorAction.SKIP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.io.OnErrorAction` `@@kotlin.io.OnErrorAction.TERMINATE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.io.OnErrorAction`[] `@@kotlin.io.OnErrorAction.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/io/OnErrorAction;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0c1688.  v0:= new `kotlin.io.OnErrorAction`;
  #L0c168c.  v1:= "SKIP" @kind object;
  #L0c1690.  v2:= 0I;
  #L0c1692.  call `<init>`(v0, v1, v2) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0c1698.  `@@kotlin.io.OnErrorAction.SKIP` @type ^`kotlin.io.OnErrorAction` := v0 @kind object;
  #L0c169c.  v0:= new `kotlin.io.OnErrorAction`;
  #L0c16a0.  v1:= "TERMINATE" @kind object;
  #L0c16a4.  v2:= 1I;
  #L0c16a6.  call `<init>`(v0, v1, v2) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0c16ac.  `@@kotlin.io.OnErrorAction.TERMINATE` @type ^`kotlin.io.OnErrorAction` := v0 @kind object;
  #L0c16b0.  call temp:= `a`() @signature `Lkotlin/io/OnErrorAction;.a:()[Lkotlin/io/OnErrorAction;` @kind static;
  #L0c16b6.  v0:= temp @kind object;
  #L0c16b8.  `@@kotlin.io.OnErrorAction.a` @type ^`kotlin.io.OnErrorAction`[] := v0 @kind object;
  #L0c16bc.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.OnErrorAction` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0c16d0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0c16d6.  return @kind void;
}
procedure `kotlin.io.OnErrorAction`[] `a`() @signature `Lkotlin/io/OnErrorAction;.a:()[Lkotlin/io/OnErrorAction;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0c1638.  v0:= 2I;
  #L0c163a.  v0:= new `kotlin.io.OnErrorAction`[v0];
  #L0c163e.  v1:= `@@kotlin.io.OnErrorAction.SKIP` @type ^`kotlin.io.OnErrorAction` @kind object;
  #L0c1642.  v2:= 0I;
  #L0c1644.  v0[v2]:= v1 @kind object;
  #L0c1648.  v1:= `@@kotlin.io.OnErrorAction.TERMINATE` @type ^`kotlin.io.OnErrorAction` @kind object;
  #L0c164c.  v2:= 1I;
  #L0c164e.  v0[v2]:= v1 @kind object;
  #L0c1652.  return v0 @kind object;
}
procedure `kotlin.io.OnErrorAction` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/io/OnErrorAction;.valueOf:(Ljava/lang/String;)Lkotlin/io/OnErrorAction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c1614.  v0:= constclass @type ^`kotlin.io.OnErrorAction` @kind object;
  #L0c1618.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L0c161e.  v1:= temp @kind object;
  #L0c1620.  v1:= (`kotlin.io.OnErrorAction`) v1 @kind object;
  #L0c1624.  return v1 @kind object;
}
procedure `kotlin.io.OnErrorAction`[] `values`() @signature `Lkotlin/io/OnErrorAction;.values:()[Lkotlin/io/OnErrorAction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c1664.  v0:= `@@kotlin.io.OnErrorAction.a` @type ^`kotlin.io.OnErrorAction`[] @kind object;
  #L0c1668.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L0c166e.  v0:= temp @kind object;
  #L0c1670.  v0:= (`kotlin.io.OnErrorAction`[]) v0 @kind object;
  #L0c1674.  return v0 @kind object;
}
