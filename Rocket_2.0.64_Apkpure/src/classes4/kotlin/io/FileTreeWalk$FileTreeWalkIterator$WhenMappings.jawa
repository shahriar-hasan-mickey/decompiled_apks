record `kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/io/FileTreeWalk$FileTreeWalkIterator$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0bf100.  call temp:= `values`() @signature `Lkotlin/io/FileWalkDirection;.values:()[Lkotlin/io/FileWalkDirection;` @kind static;
  #L0bf106.  v0:= temp @kind object;
  #L0bf108.  v0:= length @variable v0;
  #L0bf10a.  v0:= new `int`[v0];
  #L0bf10e.  v1:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L0bf112.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0bf118.  v1:= temp;
  #L0bf11a.  v2:= 1I;
  #L0bf11c.  v0[v1]:= v2;
  #L0bf120.  v1:= `@@kotlin.io.FileWalkDirection.BOTTOM_UP` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L0bf124.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0bf12a.  v1:= temp;
  #L0bf12c.  v2:= 2I;
  #L0bf12e.  v0[v1]:= v2;
  #L0bf132.  `@@kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L0bf136.  return @kind void;
}
