record `kotlin.io.d` @kind class @AccessFlag  extends `kotlin.io.c` @kind class {
}
procedure `void` `<init>`(`kotlin.io.d` v0 @kind this) @signature `Lkotlin/io/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c019c.  call `<init>`(v0) @signature `Lkotlin/io/c;.<init>:()V` @kind direct;
  #L0c01a2.  return @kind void;
}
procedure `kotlin.io.FileTreeWalk` `walk`(`java.io.File` v1 @kind object, `kotlin.io.FileWalkDirection` v2 @kind object) @signature `Lkotlin/io/d;.walk:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0c011c.  v0:= "<this>" @kind object;
  #L0c0120.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c0126.  v0:= "direction" @kind object;
  #L0c012a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c0130.  v0:= new `kotlin.io.FileTreeWalk`;
  #L0c0134.  call `<init>`(v0, v1, v2) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)V` @kind direct;
  #L0c013a.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `walk$default`(`java.io.File` v0 @kind object, `kotlin.io.FileWalkDirection` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/io/d;.walk$default:(Ljava/io/File;Lkotlin/io/FileWalkDirection;ILjava/lang/Object;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c00f4.  v2:= v2 ^& 1;
  #L0c00f8.  if v2 == 0 then goto L0c0100;
  #L0c00fc.  v1:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L0c0100.  call temp:= `walk`(v0, v1) @signature `Lkotlin/io/d;.walk:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)Lkotlin/io/FileTreeWalk;` @kind static;
  #L0c0106.  v0:= temp @kind object;
  #L0c0108.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `walkBottomUp`(`java.io.File` v1 @kind object) @signature `Lkotlin/io/d;.walkBottomUp:(Ljava/io/File;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0c014c.  v0:= "<this>" @kind object;
  #L0c0150.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c0156.  v0:= `@@kotlin.io.FileWalkDirection.BOTTOM_UP` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L0c015a.  call temp:= `walk`(v1, v0) @signature `Lkotlin/io/d;.walk:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)Lkotlin/io/FileTreeWalk;` @kind static;
  #L0c0160.  v1:= temp @kind object;
  #L0c0162.  return v1 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `walkTopDown`(`java.io.File` v1 @kind object) @signature `Lkotlin/io/d;.walkTopDown:(Ljava/io/File;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0c0174.  v0:= "<this>" @kind object;
  #L0c0178.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c017e.  v0:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L0c0182.  call temp:= `walk`(v1, v0) @signature `Lkotlin/io/d;.walk:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)Lkotlin/io/FileTreeWalk;` @kind static;
  #L0c0188.  v1:= temp @kind object;
  #L0c018a.  return v1 @kind object;
}
