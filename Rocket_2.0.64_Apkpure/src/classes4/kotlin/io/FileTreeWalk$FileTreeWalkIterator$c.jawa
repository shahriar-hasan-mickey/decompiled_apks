record `kotlin.io.FileTreeWalk$FileTreeWalkIterator$c` @kind class @AccessFlag FINAL extends `kotlin.io.FileTreeWalk$a` @kind class {
  `boolean` `kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.b` @AccessFlag PRIVATE;
  `java.io.File`[] `kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.c` @AccessFlag PRIVATE;
  `int` `kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.d` @AccessFlag PRIVATE;
  `kotlin.io.FileTreeWalk$FileTreeWalkIterator` `kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c` v1 @kind this, `kotlin.io.FileTreeWalk$FileTreeWalkIterator` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lkotlin/io/FileTreeWalk$FileTreeWalkIterator$c;.<init>:(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0bf0d8.  v0:= "rootDir" @kind object;
  #L0bf0dc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bf0e2.  v1.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.e` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` := v2 @kind object;
  #L0bf0e6.  call `<init>`(v1, v3) @signature `Lkotlin/io/FileTreeWalk$a;.<init>:(Ljava/io/File;)V` @kind direct;
  #L0bf0ec.  return @kind void;
}
procedure `java.io.File` `b`(`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c` v10 @kind this) @signature `Lkotlin/io/FileTreeWalk$FileTreeWalkIterator$c;.b:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0bef7c.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.b` @type ^`boolean` @kind boolean;
  #L0bef80.  v1:= 0I;
  #L0bef82.  if v0 != 0 then goto L0befd4;
  #L0bef86.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.e` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` @kind object;
  #L0bef8a.  v0:= v0.`kotlin.io.FileTreeWalk$FileTreeWalkIterator.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L0bef8e.  call temp:= `access$getOnEnter$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnEnter$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L0bef94.  v0:= temp @kind object;
  #L0bef96.  v2:= 0I;
  #L0bef98.  v3:= 1I;
  #L0bef9a.  if v0 == 0 then goto L0befc0;
  #L0bef9e.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$b;.a:()Ljava/io/File;` @kind virtual;
  #L0befa4.  v4:= temp @kind object;
  #L0befa6.  call temp:= `invoke`(v0, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0befac.  v0:= temp @kind object;
  #L0befae.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L0befb2.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L0befb8.  v0:= temp;
  #L0befba.  if v0 != 0 then goto L0befc0;
  #L0befbe.  v2:= 1I;
  #L0befc0.  if v2 == 0 then goto L0befc6;
  #L0befc4.  return v1 @kind object;
  #L0befc6.  v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.b` @type ^`boolean` := v3 @kind boolean;
  #L0befca.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$b;.a:()Ljava/io/File;` @kind virtual;
  #L0befd0.  v0:= temp @kind object;
  #L0befd2.  return v0 @kind object;
  #L0befd4.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.c` @type ^`java.io.File`[] @kind object;
  #L0befd8.  if v0 == 0 then goto L0bf012;
  #L0befdc.  v2:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.d` @type ^`int`;
  #L0befe0.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0befe6.  v0:= length @variable v0;
  #L0befe8.  if v2 >= v0 then goto L0befee;
  #L0befec.  goto L0bf012;
  #L0befee.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.e` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` @kind object;
  #L0beff2.  v0:= v0.`kotlin.io.FileTreeWalk$FileTreeWalkIterator.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L0beff6.  call temp:= `access$getOnLeave$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L0beffc.  v0:= temp @kind object;
  #L0beffe.  if v0 == 0 then goto L0bf010;
  #L0bf002.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$b;.a:()Ljava/io/File;` @kind virtual;
  #L0bf008.  v2:= temp @kind object;
  #L0bf00a.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0bf010.  return v1 @kind object;
  #L0bf012.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.c` @type ^`java.io.File`[] @kind object;
  #L0bf016.  if v0 != 0 then goto L0bf0aa;
  #L0bf01a.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$b;.a:()Ljava/io/File;` @kind virtual;
  #L0bf020.  v0:= temp @kind object;
  #L0bf022.  call temp:= `listFiles`(v0) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L0bf028.  v0:= temp @kind object;
  #L0bf02a.  v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.c` @type ^`java.io.File`[] := v0 @kind object;
  #L0bf02e.  if v0 != 0 then goto L0bf072;
  #L0bf032.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.e` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` @kind object;
  #L0bf036.  v0:= v0.`kotlin.io.FileTreeWalk$FileTreeWalkIterator.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L0bf03a.  call temp:= `access$getOnFail$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnFail$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function2;` @kind static;
  #L0bf040.  v0:= temp @kind object;
  #L0bf042.  if v0 == 0 then goto L0bf072;
  #L0bf046.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$b;.a:()Ljava/io/File;` @kind virtual;
  #L0bf04c.  v2:= temp @kind object;
  #L0bf04e.  v9:= new `kotlin.io.AccessDeniedException`;
  #L0bf052.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$b;.a:()Ljava/io/File;` @kind virtual;
  #L0bf058.  v4:= temp @kind object;
  #L0bf05a.  v5:= 0I;
  #L0bf05c.  v7:= 2I;
  #L0bf05e.  v8:= 0I;
  #L0bf060.  v6:= "Cannot list files in a directory" @kind object;
  #L0bf064.  v3:= v9 @kind object;
  #L0bf066.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lkotlin/io/AccessDeniedException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0bf06c.  call temp:= `invoke`(v0, v2, v9) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0bf072.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.c` @type ^`java.io.File`[] @kind object;
  #L0bf076.  if v0 == 0 then goto L0bf086;
  #L0bf07a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0bf080.  v0:= length @variable v0;
  #L0bf082.  if v0 != 0 then goto L0bf0aa;
  #L0bf086.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.e` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` @kind object;
  #L0bf08a.  v0:= v0.`kotlin.io.FileTreeWalk$FileTreeWalkIterator.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L0bf08e.  call temp:= `access$getOnLeave$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L0bf094.  v0:= temp @kind object;
  #L0bf096.  if v0 == 0 then goto L0bf0a8;
  #L0bf09a.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$b;.a:()Ljava/io/File;` @kind virtual;
  #L0bf0a0.  v2:= temp @kind object;
  #L0bf0a2.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0bf0a8.  return v1 @kind object;
  #L0bf0aa.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.c` @type ^`java.io.File`[] @kind object;
  #L0bf0ae.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0bf0b4.  v1:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.d` @type ^`int`;
  #L0bf0b8.  v2:= v1 + 1;
  #L0bf0bc.  v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$c.d` @type ^`int` := v2;
  #L0bf0c0.  v0:= v0[v1] @kind object;
  #L0bf0c4.  return v0 @kind object;
}
