record `kotlin.time.DurationUnit` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.util.concurrent.TimeUnit` `kotlin.time.DurationUnit.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.DAYS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.HOURS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.MICROSECONDS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.MILLISECONDS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.MINUTES` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.NANOSECONDS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.SECONDS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit`[] `@@kotlin.time.DurationUnit.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/time/DurationUnit;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0e9ea4.  v0:= new `kotlin.time.DurationUnit`;
  #L0e9ea8.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0e9eac.  v2:= "NANOSECONDS" @kind object;
  #L0e9eb0.  v3:= 0I;
  #L0e9eb2.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L0e9eb8.  `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L0e9ebc.  v0:= new `kotlin.time.DurationUnit`;
  #L0e9ec0.  v1:= `@@java.util.concurrent.TimeUnit.MICROSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0e9ec4.  v2:= "MICROSECONDS" @kind object;
  #L0e9ec8.  v3:= 1I;
  #L0e9eca.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L0e9ed0.  `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L0e9ed4.  v0:= new `kotlin.time.DurationUnit`;
  #L0e9ed8.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0e9edc.  v2:= "MILLISECONDS" @kind object;
  #L0e9ee0.  v3:= 2I;
  #L0e9ee2.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L0e9ee8.  `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L0e9eec.  v0:= new `kotlin.time.DurationUnit`;
  #L0e9ef0.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0e9ef4.  v2:= "SECONDS" @kind object;
  #L0e9ef8.  v3:= 3I;
  #L0e9efa.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L0e9f00.  `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L0e9f04.  v0:= new `kotlin.time.DurationUnit`;
  #L0e9f08.  v1:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0e9f0c.  v2:= "MINUTES" @kind object;
  #L0e9f10.  v3:= 4I;
  #L0e9f12.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L0e9f18.  `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L0e9f1c.  v0:= new `kotlin.time.DurationUnit`;
  #L0e9f20.  v1:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0e9f24.  v2:= "HOURS" @kind object;
  #L0e9f28.  v3:= 5I;
  #L0e9f2a.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L0e9f30.  `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L0e9f34.  v0:= new `kotlin.time.DurationUnit`;
  #L0e9f38.  v1:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0e9f3c.  v2:= "DAYS" @kind object;
  #L0e9f40.  v3:= 6I;
  #L0e9f42.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L0e9f48.  `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L0e9f4c.  call temp:= `a`() @signature `Lkotlin/time/DurationUnit;.a:()[Lkotlin/time/DurationUnit;` @kind static;
  #L0e9f52.  v0:= temp @kind object;
  #L0e9f54.  `@@kotlin.time.DurationUnit.b` @type ^`kotlin.time.DurationUnit`[] := v0 @kind object;
  #L0e9f58.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.DurationUnit` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0e9f6c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0e9f72.  v0.`kotlin.time.DurationUnit.a` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L0e9f76.  return @kind void;
}
procedure `kotlin.time.DurationUnit`[] `a`() @signature `Lkotlin/time/DurationUnit;.a:()[Lkotlin/time/DurationUnit;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0e9e20.  v0:= 7I;
  #L0e9e22.  v0:= new `kotlin.time.DurationUnit`[v0];
  #L0e9e26.  v1:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0e9e2a.  v2:= 0I;
  #L0e9e2c.  v0[v2]:= v1 @kind object;
  #L0e9e30.  v1:= `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0e9e34.  v2:= 1I;
  #L0e9e36.  v0[v2]:= v1 @kind object;
  #L0e9e3a.  v1:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0e9e3e.  v2:= 2I;
  #L0e9e40.  v0[v2]:= v1 @kind object;
  #L0e9e44.  v1:= `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0e9e48.  v2:= 3I;
  #L0e9e4a.  v0[v2]:= v1 @kind object;
  #L0e9e4e.  v1:= `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0e9e52.  v2:= 4I;
  #L0e9e54.  v0[v2]:= v1 @kind object;
  #L0e9e58.  v1:= `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0e9e5c.  v2:= 5I;
  #L0e9e5e.  v0[v2]:= v1 @kind object;
  #L0e9e62.  v1:= `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0e9e66.  v2:= 6I;
  #L0e9e68.  v0[v2]:= v1 @kind object;
  #L0e9e6c.  return v0 @kind object;
}
procedure `kotlin.time.DurationUnit` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/time/DurationUnit;.valueOf:(Ljava/lang/String;)Lkotlin/time/DurationUnit;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0e9dfc.  v0:= constclass @type ^`kotlin.time.DurationUnit` @kind object;
  #L0e9e00.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L0e9e06.  v1:= temp @kind object;
  #L0e9e08.  v1:= (`kotlin.time.DurationUnit`) v1 @kind object;
  #L0e9e0c.  return v1 @kind object;
}
procedure `kotlin.time.DurationUnit`[] `values`() @signature `Lkotlin/time/DurationUnit;.values:()[Lkotlin/time/DurationUnit;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0e9e80.  v0:= `@@kotlin.time.DurationUnit.b` @type ^`kotlin.time.DurationUnit`[] @kind object;
  #L0e9e84.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L0e9e8a.  v0:= temp @kind object;
  #L0e9e8c.  v0:= (`kotlin.time.DurationUnit`[]) v0 @kind object;
  #L0e9e90.  return v0 @kind object;
}
procedure `java.util.concurrent.TimeUnit` `getTimeUnit$kotlin_stdlib`(`kotlin.time.DurationUnit` v1 @kind this) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0e9de4.  v0:= v1.`kotlin.time.DurationUnit.a` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0e9de8.  return v0 @kind object;
}
