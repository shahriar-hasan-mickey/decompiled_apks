record `kotlin.time.TimeMark` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `long` `elapsedNow-UwyO8pc`() @signature `Lkotlin/time/TimeMark;.elapsedNow-UwyO8pc:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasNotPassedNow`() @signature `Lkotlin/time/TimeMark;.hasNotPassedNow:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasPassedNow`() @signature `Lkotlin/time/TimeMark;.hasPassedNow:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.time.TimeMark` `minus-LRDsOJo`(`long` v0 ) @signature `Lkotlin/time/TimeMark;.minus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.time.TimeMark` `plus-LRDsOJo`(`long` v0 ) @signature `Lkotlin/time/TimeMark;.plus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
