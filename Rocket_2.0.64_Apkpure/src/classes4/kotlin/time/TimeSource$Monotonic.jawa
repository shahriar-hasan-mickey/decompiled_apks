record `kotlin.time.TimeSource$Monotonic` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.time.TimeSource` @kind interface {
}
global `kotlin.time.TimeSource$Monotonic` `@@kotlin.time.TimeSource$Monotonic.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/TimeSource$Monotonic;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0ebf34.  v0:= new `kotlin.time.TimeSource$Monotonic`;
  #L0ebf38.  call `<init>`(v0) @signature `Lkotlin/time/TimeSource$Monotonic;.<init>:()V` @kind direct;
  #L0ebf3e.  `@@kotlin.time.TimeSource$Monotonic.INSTANCE` @type ^`kotlin.time.TimeSource$Monotonic` := v0 @kind object;
  #L0ebf42.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.TimeSource$Monotonic` v0 @kind this) @signature `Lkotlin/time/TimeSource$Monotonic;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0ebf54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0ebf5a.  return @kind void;
}
procedure `kotlin.time.TimeMark` `markNow`(`kotlin.time.TimeSource$Monotonic` v2 @kind this) @signature `Lkotlin/time/TimeSource$Monotonic;.markNow:()Lkotlin/time/TimeMark;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0ebef0.  call temp:= `markNow-z9LOYto`(v2) @signature `Lkotlin/time/TimeSource$Monotonic;.markNow-z9LOYto:()J` @kind virtual;
  #L0ebef6.  v0:= temp @kind wide;
  #L0ebef8.  call temp:= `box-impl`(v0) @signature `Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;.box-impl:(J)Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;` @kind static;
  #L0ebefe.  v0:= temp @kind object;
  #L0ebf00.  return v0 @kind object;
}
procedure `long` `markNow-z9LOYto`(`kotlin.time.TimeSource$Monotonic` v2 @kind this) @signature `Lkotlin/time/TimeSource$Monotonic;.markNow-z9LOYto:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ebf14.  v0:= `@@kotlin.time.MonotonicTimeSource.INSTANCE` @type ^`kotlin.time.MonotonicTimeSource` @kind object;
  #L0ebf18.  call temp:= `markNow-z9LOYto`(v0) @signature `Lkotlin/time/MonotonicTimeSource;.markNow-z9LOYto:()J` @kind virtual;
  #L0ebf1e.  v0:= temp @kind wide;
  #L0ebf20.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`kotlin.time.TimeSource$Monotonic` v1 @kind this) @signature `Lkotlin/time/TimeSource$Monotonic;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ebed0.  v0:= `@@kotlin.time.MonotonicTimeSource.INSTANCE` @type ^`kotlin.time.MonotonicTimeSource` @kind object;
  #L0ebed4.  call temp:= `toString`(v0) @signature `Lkotlin/time/MonotonicTimeSource;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ebeda.  v0:= temp @kind object;
  #L0ebedc.  return v0 @kind object;
}
