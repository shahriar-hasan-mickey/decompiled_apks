record `kotlin.time.MeasureTimeKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `long` `measureTime`(`kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/time/MeasureTimeKt;.measureTime:(Lkotlin/jvm/functions/Function0;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0eb7e0.  v0:= "block" @kind object;
  #L0eb7e4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb7ea.  v0:= `@@kotlin.time.TimeSource$Monotonic.INSTANCE` @type ^`kotlin.time.TimeSource$Monotonic` @kind object;
  #L0eb7ee.  call temp:= `markNow-z9LOYto`(v0) @signature `Lkotlin/time/TimeSource$Monotonic;.markNow-z9LOYto:()J` @kind virtual;
  #L0eb7f4.  v0:= temp @kind wide;
  #L0eb7f6.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0eb7fc.  call temp:= `elapsedNow-UwyO8pc`(v0) @signature `Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;.elapsedNow-UwyO8pc:(J)J` @kind static;
  #L0eb802.  v0:= temp @kind wide;
  #L0eb804.  return v0 @kind wide;
}
procedure `long` `measureTime`(`kotlin.time.TimeSource$Monotonic` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/time/MeasureTimeKt;.measureTime:(Lkotlin/time/TimeSource$Monotonic;Lkotlin/jvm/functions/Function0;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0eb818.  v0:= "<this>" @kind object;
  #L0eb81c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb822.  v0:= "block" @kind object;
  #L0eb826.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb82c.  call temp:= `markNow-z9LOYto`(v2) @signature `Lkotlin/time/TimeSource$Monotonic;.markNow-z9LOYto:()J` @kind virtual;
  #L0eb832.  v0:= temp @kind wide;
  #L0eb834.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0eb83a.  call temp:= `elapsedNow-UwyO8pc`(v0) @signature `Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;.elapsedNow-UwyO8pc:(J)J` @kind static;
  #L0eb840.  v2:= temp @kind wide;
  #L0eb842.  return v2 @kind wide;
}
procedure `long` `measureTime`(`kotlin.time.TimeSource` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/time/MeasureTimeKt;.measureTime:(Lkotlin/time/TimeSource;Lkotlin/jvm/functions/Function0;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0eb854.  v0:= "<this>" @kind object;
  #L0eb858.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb85e.  v0:= "block" @kind object;
  #L0eb862.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb868.  call temp:= `markNow`(v1) @signature `Lkotlin/time/TimeSource;.markNow:()Lkotlin/time/TimeMark;` @kind interface;
  #L0eb86e.  v1:= temp @kind object;
  #L0eb870.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0eb876.  call temp:= `elapsedNow-UwyO8pc`(v1) @signature `Lkotlin/time/TimeMark;.elapsedNow-UwyO8pc:()J` @kind interface;
  #L0eb87c.  v1:= temp @kind wide;
  #L0eb87e.  return v1 @kind wide;
}
procedure `kotlin.time.TimedValue` `measureTimedValue`(`kotlin.jvm.functions.Function0` v4 @kind object) @signature `Lkotlin/time/MeasureTimeKt;.measureTimedValue:(Lkotlin/jvm/functions/Function0;)Lkotlin/time/TimedValue;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0eb704.  v0:= "block" @kind object;
  #L0eb708.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb70e.  v0:= `@@kotlin.time.TimeSource$Monotonic.INSTANCE` @type ^`kotlin.time.TimeSource$Monotonic` @kind object;
  #L0eb712.  call temp:= `markNow-z9LOYto`(v0) @signature `Lkotlin/time/TimeSource$Monotonic;.markNow-z9LOYto:()J` @kind virtual;
  #L0eb718.  v0:= temp @kind wide;
  #L0eb71a.  call temp:= `invoke`(v4) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0eb720.  v4:= temp @kind object;
  #L0eb722.  v2:= new `kotlin.time.TimedValue`;
  #L0eb726.  call temp:= `elapsedNow-UwyO8pc`(v0) @signature `Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;.elapsedNow-UwyO8pc:(J)J` @kind static;
  #L0eb72c.  v0:= temp @kind wide;
  #L0eb72e.  v3:= 0I;
  #L0eb730.  call `<init>`(v2, v4, v0, v3) @signature `Lkotlin/time/TimedValue;.<init>:(Ljava/lang/Object;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0eb736.  return v2 @kind object;
}
procedure `kotlin.time.TimedValue` `measureTimedValue`(`kotlin.time.TimeSource$Monotonic` v3 @kind object, `kotlin.jvm.functions.Function0` v4 @kind object) @signature `Lkotlin/time/MeasureTimeKt;.measureTimedValue:(Lkotlin/time/TimeSource$Monotonic;Lkotlin/jvm/functions/Function0;)Lkotlin/time/TimedValue;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0eb748.  v0:= "<this>" @kind object;
  #L0eb74c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb752.  v0:= "block" @kind object;
  #L0eb756.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb75c.  call temp:= `markNow-z9LOYto`(v3) @signature `Lkotlin/time/TimeSource$Monotonic;.markNow-z9LOYto:()J` @kind virtual;
  #L0eb762.  v0:= temp @kind wide;
  #L0eb764.  call temp:= `invoke`(v4) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0eb76a.  v3:= temp @kind object;
  #L0eb76c.  v4:= new `kotlin.time.TimedValue`;
  #L0eb770.  call temp:= `elapsedNow-UwyO8pc`(v0) @signature `Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;.elapsedNow-UwyO8pc:(J)J` @kind static;
  #L0eb776.  v0:= temp @kind wide;
  #L0eb778.  v2:= 0I;
  #L0eb77a.  call `<init>`(v4, v3, v0, v2) @signature `Lkotlin/time/TimedValue;.<init>:(Ljava/lang/Object;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0eb780.  return v4 @kind object;
}
procedure `kotlin.time.TimedValue` `measureTimedValue`(`kotlin.time.TimeSource` v3 @kind object, `kotlin.jvm.functions.Function0` v4 @kind object) @signature `Lkotlin/time/MeasureTimeKt;.measureTimedValue:(Lkotlin/time/TimeSource;Lkotlin/jvm/functions/Function0;)Lkotlin/time/TimedValue;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0eb794.  v0:= "<this>" @kind object;
  #L0eb798.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb79e.  v0:= "block" @kind object;
  #L0eb7a2.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb7a8.  call temp:= `markNow`(v3) @signature `Lkotlin/time/TimeSource;.markNow:()Lkotlin/time/TimeMark;` @kind interface;
  #L0eb7ae.  v3:= temp @kind object;
  #L0eb7b0.  call temp:= `invoke`(v4) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0eb7b6.  v4:= temp @kind object;
  #L0eb7b8.  v0:= new `kotlin.time.TimedValue`;
  #L0eb7bc.  call temp:= `elapsedNow-UwyO8pc`(v3) @signature `Lkotlin/time/TimeMark;.elapsedNow-UwyO8pc:()J` @kind interface;
  #L0eb7c2.  v1:= temp @kind wide;
  #L0eb7c4.  v3:= 0I;
  #L0eb7c6.  call `<init>`(v0, v4, v1, v3) @signature `Lkotlin/time/TimedValue;.<init>:(Ljava/lang/Object;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0eb7cc.  return v0 @kind object;
}
