record `kotlin.time.MonotonicTimeSource` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.time.TimeSource` @kind interface {
}
global `kotlin.time.MonotonicTimeSource` `@@kotlin.time.MonotonicTimeSource.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.time.MonotonicTimeSource.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/MonotonicTimeSource;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0eb96c.  v0:= new `kotlin.time.MonotonicTimeSource`;
  #L0eb970.  call `<init>`(v0) @signature `Lkotlin/time/MonotonicTimeSource;.<init>:()V` @kind direct;
  #L0eb976.  `@@kotlin.time.MonotonicTimeSource.INSTANCE` @type ^`kotlin.time.MonotonicTimeSource` := v0 @kind object;
  #L0eb97a.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0eb980.  v0:= temp @kind wide;
  #L0eb982.  `@@kotlin.time.MonotonicTimeSource.a` @type ^`long` := v0 @kind wide;
  #L0eb986.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.MonotonicTimeSource` v0 @kind this) @signature `Lkotlin/time/MonotonicTimeSource;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0eb998.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0eb99e.  return @kind void;
}
procedure `long` `a`(`kotlin.time.MonotonicTimeSource` v4 @kind this) @signature `Lkotlin/time/MonotonicTimeSource;.a:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0eb94c.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0eb952.  v0:= temp @kind wide;
  #L0eb954.  v2:= `@@kotlin.time.MonotonicTimeSource.a` @type ^`long` @kind wide;
  #L0eb958.  v0:= v0 - v2 @kind long;
  #L0eb95a.  return v0 @kind wide;
}
procedure `long` `adjustReading-6QKq23U`(`kotlin.time.MonotonicTimeSource` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lkotlin/time/MonotonicTimeSource;.adjustReading-6QKq23U:(JJ)J` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0eb8e0.  call temp:= `saturatingAdd-pTJri5U`(v1, v3) @signature `Lkotlin/time/LongSaturatedMathKt;.saturatingAdd-pTJri5U:(JJ)J` @kind static;
  #L0eb8e6.  v1:= temp @kind wide;
  #L0eb8e8.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;.constructor-impl:(J)J` @kind static;
  #L0eb8ee.  v1:= temp @kind wide;
  #L0eb8f0.  return v1 @kind wide;
}
procedure `long` `elapsedFrom-6eNON_k`(`kotlin.time.MonotonicTimeSource` v2 @kind this, `long` v3 ) @signature `Lkotlin/time/MonotonicTimeSource;.elapsedFrom-6eNON_k:(J)J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0eb904.  call temp:= `a`(v2) @signature `Lkotlin/time/MonotonicTimeSource;.a:()J` @kind direct;
  #L0eb90a.  v0:= temp @kind wide;
  #L0eb90c.  call temp:= `saturatingDiff`(v0, v3) @signature `Lkotlin/time/LongSaturatedMathKt;.saturatingDiff:(JJ)J` @kind static;
  #L0eb912.  v3:= temp @kind wide;
  #L0eb914.  return v3 @kind wide;
}
procedure `kotlin.time.TimeMark` `markNow`(`kotlin.time.MonotonicTimeSource` v2 @kind this) @signature `Lkotlin/time/MonotonicTimeSource;.markNow:()Lkotlin/time/TimeMark;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0eb8bc.  call temp:= `markNow-z9LOYto`(v2) @signature `Lkotlin/time/MonotonicTimeSource;.markNow-z9LOYto:()J` @kind virtual;
  #L0eb8c2.  v0:= temp @kind wide;
  #L0eb8c4.  call temp:= `box-impl`(v0) @signature `Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;.box-impl:(J)Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;` @kind static;
  #L0eb8ca.  v0:= temp @kind object;
  #L0eb8cc.  return v0 @kind object;
}
procedure `long` `markNow-z9LOYto`(`kotlin.time.MonotonicTimeSource` v2 @kind this) @signature `Lkotlin/time/MonotonicTimeSource;.markNow-z9LOYto:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0eb928.  call temp:= `a`(v2) @signature `Lkotlin/time/MonotonicTimeSource;.a:()J` @kind direct;
  #L0eb92e.  v0:= temp @kind wide;
  #L0eb930.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;.constructor-impl:(J)J` @kind static;
  #L0eb936.  v0:= temp @kind wide;
  #L0eb938.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`kotlin.time.MonotonicTimeSource` v1 @kind this) @signature `Lkotlin/time/MonotonicTimeSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0eb8a4.  v0:= "TimeSource(System.nanoTime())" @kind object;
  #L0eb8a8.  return v0 @kind object;
}
