record `kotlin.time.Duration` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `long` `kotlin.time.Duration.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.time.Duration$Companion` `@@kotlin.time.Duration.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/Duration;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0eb324.  v0:= new `kotlin.time.Duration$Companion`;
  #L0eb328.  v1:= 0I;
  #L0eb32a.  call `<init>`(v0, v1) @signature `Lkotlin/time/Duration$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0eb330.  `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` := v0 @kind object;
  #L0eb334.  v0:= 0L;
  #L0eb338.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @kind static;
  #L0eb33e.  v0:= temp @kind wide;
  #L0eb340.  `@@kotlin.time.Duration.b` @type ^`long` := v0 @kind wide;
  #L0eb344.  v0:= 1.9999999999999998D;
  #L0eb34e.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L0eb354.  v0:= temp @kind wide;
  #L0eb356.  `@@kotlin.time.Duration.c` @type ^`long` := v0 @kind wide;
  #L0eb35a.  v0:= -2.0000000000000004D;
  #L0eb364.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L0eb36a.  v0:= temp @kind wide;
  #L0eb36c.  `@@kotlin.time.Duration.d` @type ^`long` := v0 @kind wide;
  #L0eb370.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.Duration` v0 @kind this, `long` v1 ) @signature `Lkotlin/time/Duration;.<init>:(J)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L0eb384.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0eb38a.  v0.`kotlin.time.Duration.a` @type ^`long` := v1 @kind wide;
  #L0eb38e.  return @kind void;
}
procedure `long` `a`(`long` v6 , `long` v8 , `long` v10 ) @signature `Lkotlin/time/Duration;.a:(JJJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0eaa94.  call temp:= `access$nanosToMillis`(v10) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L0eaa9a.  v6:= temp @kind wide;
  #L0eaa9c.  v0:= v8 + v6 @kind long;
  #L0eaaa0.  v8:= new `kotlin.ranges.LongRange`;
  #L0eaaa4.  v2:= -4611686018426L;
  #L0eaaae.  v4:= 4611686018426L;
  #L0eaab8.  call `<init>`(v8, v2, v4) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L0eaabe.  call temp:= `contains`(v8, v0) @signature `Lkotlin/ranges/LongRange;.contains:(J)Z` @kind virtual;
  #L0eaac4.  v8:= temp;
  #L0eaac6.  if v8 == 0 then goto L0eaae8;
  #L0eaaca.  call temp:= `access$millisToNanos`(v6) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L0eaad0.  v6:= temp @kind wide;
  #L0eaad2.  v10:= v10 - v6 @kind long;
  #L0eaad4.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L0eaada.  v6:= temp @kind wide;
  #L0eaadc.  v6:= v6 + v10 @kind long;
  #L0eaade.  call temp:= `access$durationOfNanos`(v6) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L0eaae4.  v6:= temp @kind wide;
  #L0eaae6.  goto L0eab0c;
  #L0eaae8.  v2:= -2.0000000000000004D;
  #L0eaaf2.  v4:= 1.9999999999999998D;
  #L0eaafc.  call temp:= `coerceIn`(v0, v2, v4) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L0eab02.  v6:= temp @kind wide;
  #L0eab04.  call temp:= `access$durationOfMillis`(v6) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L0eab0a.  v6:= temp @kind wide;
  #L0eab0c.  return v6 @kind wide;
}
procedure `long` `access$getINFINITE$cp`() @signature `Lkotlin/time/Duration;.access$getINFINITE$cp:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0eaa4c.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L0eaa50.  return v0 @kind wide;
}
procedure `long` `access$getNEG_INFINITE$cp`() @signature `Lkotlin/time/Duration;.access$getNEG_INFINITE$cp:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0eaa64.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L0eaa68.  return v0 @kind wide;
}
procedure `long` `access$getZERO$cp`() @signature `Lkotlin/time/Duration;.access$getZERO$cp:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0eaa7c.  v0:= `@@kotlin.time.Duration.b` @type ^`long` @kind wide;
  #L0eaa80.  return v0 @kind wide;
}
procedure `void` `b`(`long` v3 , `java.lang.StringBuilder` v5 @kind object, `int` v6 , `int` v7 , `int` v8 , `java.lang.String` v9 @kind object, `boolean` v10 ) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0eb3a0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eb3a6.  if v7 == 0 then goto L0eb438;
  #L0eb3aa.  v3:= 46I;
  #L0eb3ae.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eb3b4.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L0eb3ba.  v3:= temp @kind object;
  #L0eb3bc.  v4:= 48I;
  #L0eb3c0.  call temp:= `padStart`(v3, v8, v4) @signature `Lkotlin/text/StringsKt;.padStart:(Ljava/lang/String;IC)Ljava/lang/String;` @kind static;
  #L0eb3c6.  v3:= temp @kind object;
  #L0eb3c8.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0eb3ce.  v6:= temp;
  #L0eb3d0.  v7:= -1I;
  #L0eb3d2.  v6:= v6 + v7 @kind int;
  #L0eb3d4.  v8:= 1I;
  #L0eb3d6.  v0:= 0I;
  #L0eb3d8.  if v6 < 0 then goto L0eb404;
  #L0eb3dc.  v1:= v6 + -1;
  #L0eb3e0.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0eb3e6.  v2:= temp;
  #L0eb3e8.  if v2 == v4 then goto L0eb3f0;
  #L0eb3ec.  v2:= 1I;
  #L0eb3ee.  goto L0eb3f2;
  #L0eb3f0.  v2:= 0I;
  #L0eb3f2.  if v2 == 0 then goto L0eb3fa;
  #L0eb3f6.  v7:= v6;
  #L0eb3f8.  goto L0eb404;
  #L0eb3fa.  if v1 >= 0 then goto L0eb400;
  #L0eb3fe.  goto L0eb404;
  #L0eb400.  v6:= v1;
  #L0eb402.  goto L0eb3dc;
  #L0eb404.  v7:= v7 + v8 @kind int;
  #L0eb406.  v4:= "this.append(value, startIndex, endIndex)" @kind object;
  #L0eb40a.  v6:= 3I;
  #L0eb40c.  if v10 != 0 then goto L0eb422;
  #L0eb410.  if v7 >= v6 then goto L0eb422;
  #L0eb414.  call temp:= `append`(v5, v3, v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eb41a.  call `checkNotNullExpressionValue`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb420.  goto L0eb438;
  #L0eb422.  v7:= v7 + 2;
  #L0eb426.  v7:= v7 / v6 @kind int;
  #L0eb428.  v7:= v7 * 3;
  #L0eb42c.  call temp:= `append`(v5, v3, v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eb432.  call `checkNotNullExpressionValue`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb438.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eb43e.  return @kind void;
}
procedure `kotlin.time.Duration` `box-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.box-impl:(J)Lkotlin/time/Duration;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0eaa08.  v0:= new `kotlin.time.Duration`;
  #L0eaa0c.  call `<init>`(v0, v1) @signature `Lkotlin/time/Duration;.<init>:(J)V` @kind direct;
  #L0eaa12.  return v0 @kind object;
}
procedure `kotlin.time.DurationUnit` `c`(`long` v0 ) @signature `Lkotlin/time/Duration;.c:(J)Lkotlin/time/DurationUnit;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L0eaa24.  call temp:= `f`(v0) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L0eaa2a.  v0:= temp;
  #L0eaa2c.  if v0 == 0 then goto L0eaa36;
  #L0eaa30.  v0:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eaa34.  goto L0eaa3a;
  #L0eaa36.  v0:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eaa3a.  return v0 @kind object;
}
procedure `int` `compareTo-LRDsOJo`(`long` v5 , `long` v7 ) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0ea2a0.  v0:= v5 ^~ v7 @kind long;
  #L0ea2a4.  v2:= 0L;
  #L0ea2a8.  v4:= lcmp(v0, v2);
  #L0ea2ac.  if v4 < 0 then goto L0ea2da;
  #L0ea2b0.  v1:= (`int`) v0 @kind l2i;
  #L0ea2b2.  v0:= v1 ^& 1;
  #L0ea2b6.  if v0 != 0 then goto L0ea2bc;
  #L0ea2ba.  goto L0ea2da;
  #L0ea2bc.  v0:= (`int`) v5 @kind l2i;
  #L0ea2be.  v0:= v0 ^& 1;
  #L0ea2c2.  v8:= (`int`) v7 @kind l2i;
  #L0ea2c4.  v7:= v8 ^& 1;
  #L0ea2c8.  v0:= v0 - v7 @kind int;
  #L0ea2ca.  call temp:= `isNegative-impl`(v5) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L0ea2d0.  v5:= temp;
  #L0ea2d2.  if v5 == 0 then goto L0ea2d8;
  #L0ea2d6.  v0:= -v0 @kind int;
  #L0ea2d8.  return v0;
  #L0ea2da.  call temp:= `compare`(v5, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(JJ)I` @kind static;
  #L0ea2e0.  v5:= temp;
  #L0ea2e2.  return v5;
}
procedure `long` `constructor-impl`(`long` v5 ) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0eab20.  call temp:= `getDurationAssertionsEnabled`() @signature `Lkotlin/time/DurationJvmKt;.getDurationAssertionsEnabled:()Z` @kind static;
  #L0eab26.  v0:= temp;
  #L0eab28.  if v0 == 0 then goto L0eac76;
  #L0eab2c.  call temp:= `f`(v5) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L0eab32.  v0:= temp;
  #L0eab34.  if v0 == 0 then goto L0eaba4;
  #L0eab38.  v0:= new `kotlin.ranges.LongRange`;
  #L0eab3c.  v1:= -2.0000000001722644D;
  #L0eab46.  v3:= 1.9999999999138678D;
  #L0eab50.  call `<init>`(v0, v1, v3) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L0eab56.  call temp:= `d`(v5) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eab5c.  v1:= temp @kind wide;
  #L0eab5e.  call temp:= `contains`(v0, v1) @signature `Lkotlin/ranges/LongRange;.contains:(J)Z` @kind virtual;
  #L0eab64.  v0:= temp;
  #L0eab66.  if v0 == 0 then goto L0eab6e;
  #L0eab6a.  goto L0eac76;
  #L0eab6e.  v0:= new `java.lang.AssertionError`;
  #L0eab72.  v1:= new `java.lang.StringBuilder`;
  #L0eab76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0eab7c.  call temp:= `d`(v5) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eab82.  v5:= temp @kind wide;
  #L0eab84.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eab8a.  v5:= " ns is out of nanoseconds range" @kind object;
  #L0eab8e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eab94.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0eab9a.  v5:= temp @kind object;
  #L0eab9c.  call `<init>`(v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L0eaba2.  throw v0;
  #L0eaba4.  v0:= new `kotlin.ranges.LongRange`;
  #L0eaba8.  v1:= -2.0000000000000004D;
  #L0eabb2.  v3:= 1.9999999999999998D;
  #L0eabbc.  call `<init>`(v0, v1, v3) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L0eabc2.  call temp:= `d`(v5) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eabc8.  v1:= temp @kind wide;
  #L0eabca.  call temp:= `contains`(v0, v1) @signature `Lkotlin/ranges/LongRange;.contains:(J)Z` @kind virtual;
  #L0eabd0.  v0:= temp;
  #L0eabd2.  if v0 == 0 then goto L0eac40;
  #L0eabd6.  v0:= new `kotlin.ranges.LongRange`;
  #L0eabda.  v1:= -4611686018426L;
  #L0eabe4.  v3:= 4611686018426L;
  #L0eabee.  call `<init>`(v0, v1, v3) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L0eabf4.  call temp:= `d`(v5) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eabfa.  v1:= temp @kind wide;
  #L0eabfc.  call temp:= `contains`(v0, v1) @signature `Lkotlin/ranges/LongRange;.contains:(J)Z` @kind virtual;
  #L0eac02.  v0:= temp;
  #L0eac04.  if v0 != 0 then goto L0eac0a;
  #L0eac08.  goto L0eac76;
  #L0eac0a.  v0:= new `java.lang.AssertionError`;
  #L0eac0e.  v1:= new `java.lang.StringBuilder`;
  #L0eac12.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0eac18.  call temp:= `d`(v5) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eac1e.  v5:= temp @kind wide;
  #L0eac20.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eac26.  v5:= " ms is denormalized" @kind object;
  #L0eac2a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eac30.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0eac36.  v5:= temp @kind object;
  #L0eac38.  call `<init>`(v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L0eac3e.  throw v0;
  #L0eac40.  v0:= new `java.lang.AssertionError`;
  #L0eac44.  v1:= new `java.lang.StringBuilder`;
  #L0eac48.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0eac4e.  call temp:= `d`(v5) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eac54.  v5:= temp @kind wide;
  #L0eac56.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eac5c.  v5:= " ms is out of milliseconds range" @kind object;
  #L0eac60.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0eac66.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0eac6c.  v5:= temp @kind object;
  #L0eac6e.  call `<init>`(v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L0eac74.  throw v0;
  #L0eac76.  return v5 @kind wide;
}
procedure `long` `d`(`long` v1 ) @signature `Lkotlin/time/Duration;.d:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L0eaf44.  v0:= 1I;
  #L0eaf46.  v1:= v1 ^> v0 @kind long;
  #L0eaf48.  return v1 @kind wide;
}
procedure `double` `div-LRDsOJo`(`long` v2 , `long` v4 ) @signature `Lkotlin/time/Duration;.div-LRDsOJo:(JJ)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ea0dc.  call temp:= `c`(v2) @signature `Lkotlin/time/Duration;.c:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L0ea0e2.  v0:= temp @kind object;
  #L0ea0e4.  call temp:= `c`(v4) @signature `Lkotlin/time/Duration;.c:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L0ea0ea.  v1:= temp @kind object;
  #L0ea0ec.  call temp:= `maxOf`(v0, v1) @signature `Lkotlin/comparisons/ComparisonsKt;.maxOf:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/lang/Comparable;` @kind static;
  #L0ea0f2.  v0:= temp @kind object;
  #L0ea0f4.  v0:= (`kotlin.time.DurationUnit`) v0 @kind object;
  #L0ea0f8.  call temp:= `toDouble-impl`(v2, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea0fe.  v2:= temp @kind wide;
  #L0ea100.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea106.  v4:= temp @kind wide;
  #L0ea108.  v2:= v2 / v4 @kind double;
  #L0ea10a.  return v2 @kind wide;
}
procedure `long` `div-UwyO8pc`(`long` v4 , `double` v6 ) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JD)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0eac88.  call temp:= `roundToInt`(v6) @signature `Lkotlin/math/MathKt;.roundToInt:(D)I` @kind static;
  #L0eac8e.  v0:= temp;
  #L0eac90.  v1:= (`double`) v0 @kind i2d;
  #L0eac92.  v3:= dcmpg(v1, v6);
  #L0eac96.  if v3 != 0 then goto L0eac9e;
  #L0eac9a.  v1:= 1I;
  #L0eac9c.  goto L0eaca0;
  #L0eac9e.  v1:= 0I;
  #L0eaca0.  if v1 == 0 then goto L0eacb2;
  #L0eaca4.  if v0 == 0 then goto L0eacb2;
  #L0eaca8.  call temp:= `div-UwyO8pc`(v4, v0) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JI)J` @kind static;
  #L0eacae.  v4:= temp @kind wide;
  #L0eacb0.  return v4 @kind wide;
  #L0eacb2.  call temp:= `c`(v4) @signature `Lkotlin/time/Duration;.c:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L0eacb8.  v0:= temp @kind object;
  #L0eacba.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0eacc0.  v4:= temp @kind wide;
  #L0eacc2.  v4:= v4 / v6 @kind double;
  #L0eacc4.  call temp:= `toDuration`(v4, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLkotlin/time/DurationUnit;)J` @kind static;
  #L0eacca.  v4:= temp @kind wide;
  #L0eaccc.  return v4 @kind wide;
}
procedure `long` `div-UwyO8pc`(`long` v8 , `int` v10 ) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0eace0.  if v10 != 0 then goto L0ead18;
  #L0eace4.  call temp:= `isPositive-impl`(v8) @signature `Lkotlin/time/Duration;.isPositive-impl:(J)Z` @kind static;
  #L0eacea.  v10:= temp;
  #L0eacec.  if v10 == 0 then goto L0eacf6;
  #L0eacf0.  v8:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L0eacf4.  goto L0ead06;
  #L0eacf6.  call temp:= `isNegative-impl`(v8) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L0eacfc.  v8:= temp;
  #L0eacfe.  if v8 == 0 then goto L0ead08;
  #L0ead02.  v8:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L0ead06.  return v8 @kind wide;
  #L0ead08.  v8:= new `java.lang.IllegalArgumentException`;
  #L0ead0c.  v9:= "Dividing zero duration by zero yields an undefined result." @kind object;
  #L0ead10.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ead16.  throw v8;
  #L0ead18.  call temp:= `f`(v8) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L0ead1e.  v0:= temp;
  #L0ead20.  if v0 == 0 then goto L0ead3a;
  #L0ead24.  call temp:= `d`(v8) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0ead2a.  v8:= temp @kind wide;
  #L0ead2c.  v0:= (`long`) v10 @kind i2l;
  #L0ead2e.  v8:= v8 / v0 @kind long;
  #L0ead30.  call temp:= `access$durationOfNanos`(v8) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L0ead36.  v8:= temp @kind wide;
  #L0ead38.  return v8 @kind wide;
  #L0ead3a.  call temp:= `isInfinite-impl`(v8) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0ead40.  v0:= temp;
  #L0ead42.  if v0 == 0 then goto L0ead58;
  #L0ead46.  call temp:= `getSign`(v10) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L0ead4c.  v10:= temp;
  #L0ead4e.  call temp:= `times-UwyO8pc`(v8, v10) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @kind static;
  #L0ead54.  v8:= temp @kind wide;
  #L0ead56.  return v8 @kind wide;
  #L0ead58.  call temp:= `d`(v8) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0ead5e.  v0:= temp @kind wide;
  #L0ead60.  v2:= (`long`) v10 @kind i2l;
  #L0ead62.  v0:= v0 / v2 @kind long;
  #L0ead64.  v10:= new `kotlin.ranges.LongRange`;
  #L0ead68.  v4:= -4611686018426L;
  #L0ead72.  v6:= 4611686018426L;
  #L0ead7c.  call `<init>`(v10, v4, v6) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L0ead82.  call temp:= `contains`(v10, v0) @signature `Lkotlin/ranges/LongRange;.contains:(J)Z` @kind virtual;
  #L0ead88.  v10:= temp;
  #L0ead8a.  if v10 == 0 then goto L0eadba;
  #L0ead8e.  call temp:= `d`(v8) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0ead94.  v8:= temp @kind wide;
  #L0ead96.  v4:= v0 * v2 @kind long;
  #L0ead9a.  v8:= v8 - v4 @kind long;
  #L0ead9c.  call temp:= `access$millisToNanos`(v8) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L0eada2.  v8:= temp @kind wide;
  #L0eada4.  v8:= v8 / v2 @kind long;
  #L0eada6.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L0eadac.  v0:= temp @kind wide;
  #L0eadae.  v0:= v0 + v8 @kind long;
  #L0eadb0.  call temp:= `access$durationOfNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L0eadb6.  v8:= temp @kind wide;
  #L0eadb8.  return v8 @kind wide;
  #L0eadba.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L0eadc0.  v8:= temp @kind wide;
  #L0eadc2.  return v8 @kind wide;
}
procedure `boolean` `e`(`long` v0 ) @signature `Lkotlin/time/Duration;.e:(J)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L0ea020.  v1:= (`int`) v0 @kind l2i;
  #L0ea022.  v0:= 1I;
  #L0ea024.  v1:= v1 ^& v0 @kind int;
  #L0ea026.  if v1 != v0 then goto L0ea02c;
  #L0ea02a.  goto L0ea02e;
  #L0ea02c.  v0:= 0I;
  #L0ea02e.  return v0;
}
procedure `boolean` `equals-impl`(`long` v4 , `java.lang.Object` v6 @kind object) @signature `Lkotlin/time/Duration;.equals-impl:(JLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0e9fa8.  v0:= instanceof @variable v6 @type ^`kotlin.time.Duration` @kind boolean;
  #L0e9fac.  v1:= 0I;
  #L0e9fae.  if v0 != 0 then goto L0e9fb4;
  #L0e9fb2.  return v1;
  #L0e9fb4.  v6:= (`kotlin.time.Duration`) v6 @kind object;
  #L0e9fb8.  call temp:= `unbox-impl`(v6) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @kind virtual;
  #L0e9fbe.  v2:= temp @kind wide;
  #L0e9fc0.  v6:= lcmp(v4, v2);
  #L0e9fc4.  if v6 == 0 then goto L0e9fca;
  #L0e9fc8.  return v1;
  #L0e9fca.  v4:= 1I;
  #L0e9fcc.  return v4;
}
procedure `boolean` `equals-impl0`(`long` v1 , `long` v3 ) @signature `Lkotlin/time/Duration;.equals-impl0:(JJ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0e9fe0.  v0:= lcmp(v1, v3);
  #L0e9fe4.  if v0 != 0 then goto L0e9fec;
  #L0e9fe8.  v1:= 1I;
  #L0e9fea.  goto L0e9fee;
  #L0e9fec.  v1:= 0I;
  #L0e9fee.  return v1;
}
procedure `boolean` `f`(`long` v0 ) @signature `Lkotlin/time/Duration;.f:(J)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L0ea040.  v1:= (`int`) v0 @kind l2i;
  #L0ea042.  v0:= 1I;
  #L0ea044.  v1:= v1 ^& v0 @kind int;
  #L0ea046.  if v1 != 0 then goto L0ea04c;
  #L0ea04a.  goto L0ea04e;
  #L0ea04c.  v0:= 0I;
  #L0ea04e.  return v0;
}
procedure `long` `getAbsoluteValue-UwyO8pc`(`long` v1 ) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0eadd4.  call temp:= `isNegative-impl`(v1) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L0eadda.  v0:= temp;
  #L0eaddc.  if v0 == 0 then goto L0eade8;
  #L0eade0.  call temp:= `unaryMinus-UwyO8pc`(v1) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L0eade6.  v1:= temp @kind wide;
  #L0eade8.  return v1 @kind wide;
}
procedure `void` `getHoursComponent$annotations`() @signature `Lkotlin/time/Duration;.getHoursComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb450.  return @kind void;
}
procedure `int` `getHoursComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ea2f4.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0ea2fa.  v0:= temp;
  #L0ea2fc.  if v0 == 0 then goto L0ea304;
  #L0ea300.  v2:= 0I;
  #L0ea302.  goto L0ea316;
  #L0ea304.  call temp:= `getInWholeHours-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @kind static;
  #L0ea30a.  v2:= temp @kind wide;
  #L0ea30c.  v0:= 24I;
  #L0ea310.  v0:= (`long`) v0 @kind i2l;
  #L0ea312.  v2:= v2 %% v0 @kind long;
  #L0ea314.  v2:= (`int`) v2 @kind l2i;
  #L0ea316.  return v2;
}
procedure `void` `getInDays$annotations`() @signature `Lkotlin/time/Duration;.getInDays$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb464.  return @kind void;
}
procedure `double` `getInDays-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInDays-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ea11c.  v0:= `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0ea120.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea126.  v1:= temp @kind wide;
  #L0ea128.  return v1 @kind wide;
}
procedure `void` `getInHours$annotations`() @signature `Lkotlin/time/Duration;.getInHours$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb478.  return @kind void;
}
procedure `double` `getInHours-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInHours-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ea13c.  v0:= `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0ea140.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea146.  v1:= temp @kind wide;
  #L0ea148.  return v1 @kind wide;
}
procedure `void` `getInMicroseconds$annotations`() @signature `Lkotlin/time/Duration;.getInMicroseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb48c.  return @kind void;
}
procedure `double` `getInMicroseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMicroseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ea15c.  v0:= `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0ea160.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea166.  v1:= temp @kind wide;
  #L0ea168.  return v1 @kind wide;
}
procedure `void` `getInMilliseconds$annotations`() @signature `Lkotlin/time/Duration;.getInMilliseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb4a0.  return @kind void;
}
procedure `double` `getInMilliseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMilliseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ea17c.  v0:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0ea180.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea186.  v1:= temp @kind wide;
  #L0ea188.  return v1 @kind wide;
}
procedure `void` `getInMinutes$annotations`() @signature `Lkotlin/time/Duration;.getInMinutes$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb4b4.  return @kind void;
}
procedure `double` `getInMinutes-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMinutes-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ea19c.  v0:= `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0ea1a0.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea1a6.  v1:= temp @kind wide;
  #L0ea1a8.  return v1 @kind wide;
}
procedure `void` `getInNanoseconds$annotations`() @signature `Lkotlin/time/Duration;.getInNanoseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb4c8.  return @kind void;
}
procedure `double` `getInNanoseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInNanoseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ea1bc.  v0:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0ea1c0.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea1c6.  v1:= temp @kind wide;
  #L0ea1c8.  return v1 @kind wide;
}
procedure `void` `getInSeconds$annotations`() @signature `Lkotlin/time/Duration;.getInSeconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb4dc.  return @kind void;
}
procedure `double` `getInSeconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInSeconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ea1dc.  v0:= `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0ea1e0.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea1e6.  v1:= temp @kind wide;
  #L0ea1e8.  return v1 @kind wide;
}
procedure `long` `getInWholeDays-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeDays-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0eadfc.  v0:= `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eae00.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eae06.  v1:= temp @kind wide;
  #L0eae08.  return v1 @kind wide;
}
procedure `long` `getInWholeHours-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0eae1c.  v0:= `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eae20.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eae26.  v1:= temp @kind wide;
  #L0eae28.  return v1 @kind wide;
}
procedure `long` `getInWholeMicroseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMicroseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0eae3c.  v0:= `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eae40.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eae46.  v1:= temp @kind wide;
  #L0eae48.  return v1 @kind wide;
}
procedure `long` `getInWholeMilliseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMilliseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0eae5c.  call temp:= `e`(v1) @signature `Lkotlin/time/Duration;.e:(J)Z` @kind static;
  #L0eae62.  v0:= temp;
  #L0eae64.  if v0 == 0 then goto L0eae7e;
  #L0eae68.  call temp:= `isFinite-impl`(v1) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @kind static;
  #L0eae6e.  v0:= temp;
  #L0eae70.  if v0 == 0 then goto L0eae7e;
  #L0eae74.  call temp:= `d`(v1) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eae7a.  v1:= temp @kind wide;
  #L0eae7c.  goto L0eae8a;
  #L0eae7e.  v0:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eae82.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eae88.  v1:= temp @kind wide;
  #L0eae8a.  return v1 @kind wide;
}
procedure `long` `getInWholeMinutes-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMinutes-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0eae9c.  v0:= `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eaea0.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eaea6.  v1:= temp @kind wide;
  #L0eaea8.  return v1 @kind wide;
}
procedure `long` `getInWholeNanoseconds-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.getInWholeNanoseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0eaebc.  call temp:= `d`(v3) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eaec2.  v0:= temp @kind wide;
  #L0eaec4.  call temp:= `f`(v3) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L0eaeca.  v3:= temp;
  #L0eaecc.  if v3 == 0 then goto L0eaed2;
  #L0eaed0.  goto L0eaf10;
  #L0eaed2.  v3:= 9223372036854L;
  #L0eaedc.  v2:= lcmp(v0, v3);
  #L0eaee0.  if v2 <= 0 then goto L0eaef0;
  #L0eaee4.  v0:= 9223372036854775807L;
  #L0eaeee.  goto L0eaf10;
  #L0eaef0.  v3:= -9223372036854L;
  #L0eaefa.  v2:= lcmp(v0, v3);
  #L0eaefe.  if v2 >= 0 then goto L0eaf08;
  #L0eaf02.  v0:= -9223372036854775808L;
  #L0eaf06.  goto L0eaf10;
  #L0eaf08.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L0eaf0e.  v0:= temp @kind wide;
  #L0eaf10.  return v0 @kind wide;
}
procedure `long` `getInWholeSeconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0eaf24.  v0:= `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eaf28.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eaf2e.  v1:= temp @kind wide;
  #L0eaf30.  return v1 @kind wide;
}
procedure `void` `getMinutesComponent$annotations`() @signature `Lkotlin/time/Duration;.getMinutesComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb4f0.  return @kind void;
}
procedure `int` `getMinutesComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ea328.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0ea32e.  v0:= temp;
  #L0ea330.  if v0 == 0 then goto L0ea338;
  #L0ea334.  v2:= 0I;
  #L0ea336.  goto L0ea34a;
  #L0ea338.  call temp:= `getInWholeMinutes-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeMinutes-impl:(J)J` @kind static;
  #L0ea33e.  v2:= temp @kind wide;
  #L0ea340.  v0:= 60I;
  #L0ea344.  v0:= (`long`) v0 @kind i2l;
  #L0ea346.  v2:= v2 %% v0 @kind long;
  #L0ea348.  v2:= (`int`) v2 @kind l2i;
  #L0ea34a.  return v2;
}
procedure `void` `getNanosecondsComponent$annotations`() @signature `Lkotlin/time/Duration;.getNanosecondsComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb504.  return @kind void;
}
procedure `int` `getNanosecondsComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ea35c.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0ea362.  v0:= temp;
  #L0ea364.  if v0 == 0 then goto L0ea36c;
  #L0ea368.  v2:= 0I;
  #L0ea36a.  goto L0ea3a6;
  #L0ea36c.  call temp:= `e`(v2) @signature `Lkotlin/time/Duration;.e:(J)Z` @kind static;
  #L0ea372.  v0:= temp;
  #L0ea374.  if v0 == 0 then goto L0ea392;
  #L0ea378.  call temp:= `d`(v2) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0ea37e.  v2:= temp @kind wide;
  #L0ea380.  v0:= 1000I;
  #L0ea384.  v0:= (`long`) v0 @kind i2l;
  #L0ea386.  v2:= v2 %% v0 @kind long;
  #L0ea388.  call temp:= `access$millisToNanos`(v2) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L0ea38e.  v2:= temp @kind wide;
  #L0ea390.  goto L0ea3a4;
  #L0ea392.  call temp:= `d`(v2) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0ea398.  v2:= temp @kind wide;
  #L0ea39a.  v0:= 1000000000I;
  #L0ea3a0.  v0:= (`long`) v0 @kind i2l;
  #L0ea3a2.  v2:= v2 %% v0 @kind long;
  #L0ea3a4.  v2:= (`int`) v2 @kind l2i;
  #L0ea3a6.  return v2;
}
procedure `void` `getSecondsComponent$annotations`() @signature `Lkotlin/time/Duration;.getSecondsComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eb518.  return @kind void;
}
procedure `int` `getSecondsComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ea3b8.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0ea3be.  v0:= temp;
  #L0ea3c0.  if v0 == 0 then goto L0ea3c8;
  #L0ea3c4.  v2:= 0I;
  #L0ea3c6.  goto L0ea3da;
  #L0ea3c8.  call temp:= `getInWholeSeconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @kind static;
  #L0ea3ce.  v2:= temp @kind wide;
  #L0ea3d0.  v0:= 60I;
  #L0ea3d4.  v0:= (`long`) v0 @kind i2l;
  #L0ea3d6.  v2:= v2 %% v0 @kind long;
  #L0ea3d8.  v2:= (`int`) v2 @kind l2i;
  #L0ea3da.  return v2;
}
procedure `int` `hashCode-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.hashCode-impl:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0ea40c.  v0:= 32I;
  #L0ea410.  v0:= v2 ^>> v0 @kind long;
  #L0ea414.  v2:= v2 ^~ v0 @kind long;
  #L0ea416.  v3:= (`int`) v2 @kind l2i;
  #L0ea418.  return v3;
}
procedure `boolean` `isFinite-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0ea000.  call temp:= `isInfinite-impl`(v0) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0ea006.  v0:= temp;
  #L0ea008.  v0:= v0 ^~ 1;
  #L0ea00c.  return v0;
}
procedure `boolean` `isInfinite-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ea060.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L0ea064.  v2:= lcmp(v3, v0);
  #L0ea068.  if v2 == 0 then goto L0ea07e;
  #L0ea06c.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L0ea070.  v2:= lcmp(v3, v0);
  #L0ea074.  if v2 != 0 then goto L0ea07a;
  #L0ea078.  goto L0ea07e;
  #L0ea07a.  v3:= 0I;
  #L0ea07c.  goto L0ea080;
  #L0ea07e.  v3:= 1I;
  #L0ea080.  return v3;
}
procedure `boolean` `isNegative-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ea094.  v0:= 0L;
  #L0ea098.  v2:= lcmp(v3, v0);
  #L0ea09c.  if v2 >= 0 then goto L0ea0a4;
  #L0ea0a0.  v3:= 1I;
  #L0ea0a2.  goto L0ea0a6;
  #L0ea0a4.  v3:= 0I;
  #L0ea0a6.  return v3;
}
procedure `boolean` `isPositive-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isPositive-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ea0b8.  v0:= 0L;
  #L0ea0bc.  v2:= lcmp(v3, v0);
  #L0ea0c0.  if v2 <= 0 then goto L0ea0c8;
  #L0ea0c4.  v3:= 1I;
  #L0ea0c6.  goto L0ea0ca;
  #L0ea0c8.  v3:= 0I;
  #L0ea0ca.  return v3;
}
procedure `long` `minus-LRDsOJo`(`long` v0 , `long` v2 ) @signature `Lkotlin/time/Duration;.minus-LRDsOJo:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0eaf5c.  call temp:= `unaryMinus-UwyO8pc`(v2) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L0eaf62.  v2:= temp @kind wide;
  #L0eaf64.  call temp:= `plus-LRDsOJo`(v0, v2) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L0eaf6a.  v0:= temp @kind wide;
  #L0eaf6c.  return v0 @kind wide;
}
procedure `long` `plus-LRDsOJo`(`long` v7 , `long` v9 ) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0eaf80.  call temp:= `isInfinite-impl`(v7) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0eaf86.  v0:= temp;
  #L0eaf88.  if v0 == 0 then goto L0eafba;
  #L0eaf8c.  call temp:= `isFinite-impl`(v9) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @kind static;
  #L0eaf92.  v0:= temp;
  #L0eaf94.  if v0 != 0 then goto L0eafb8;
  #L0eaf98.  v9:= v9 ^~ v7 @kind long;
  #L0eaf9a.  v0:= 0L;
  #L0eaf9e.  v2:= lcmp(v9, v0);
  #L0eafa2.  if v2 < 0 then goto L0eafa8;
  #L0eafa6.  goto L0eafb8;
  #L0eafa8.  v7:= new `java.lang.IllegalArgumentException`;
  #L0eafac.  v8:= "Summing infinite durations of different signs yields an undefined result." @kind object;
  #L0eafb0.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0eafb6.  throw v7;
  #L0eafb8.  return v7 @kind wide;
  #L0eafba.  call temp:= `isInfinite-impl`(v9) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0eafc0.  v0:= temp;
  #L0eafc2.  if v0 == 0 then goto L0eafc8;
  #L0eafc6.  return v9 @kind wide;
  #L0eafc8.  v0:= (`int`) v7 @kind l2i;
  #L0eafca.  v0:= v0 ^& 1;
  #L0eafce.  v1:= (`int`) v9 @kind l2i;
  #L0eafd0.  v1:= v1 ^& 1;
  #L0eafd4.  if v0 != v1 then goto L0eb00a;
  #L0eafd8.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eafde.  v0:= temp @kind wide;
  #L0eafe0.  call temp:= `d`(v9) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eafe6.  v9:= temp @kind wide;
  #L0eafe8.  v0:= v0 + v9 @kind long;
  #L0eafea.  call temp:= `f`(v7) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L0eaff0.  v7:= temp;
  #L0eaff2.  if v7 == 0 then goto L0eb000;
  #L0eaff6.  call temp:= `access$durationOfNanosNormalized`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfNanosNormalized:(J)J` @kind static;
  #L0eaffc.  v7:= temp @kind wide;
  #L0eaffe.  goto L0eb04c;
  #L0eb000.  call temp:= `access$durationOfMillisNormalized`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillisNormalized:(J)J` @kind static;
  #L0eb006.  v7:= temp @kind wide;
  #L0eb008.  goto L0eb04c;
  #L0eb00a.  call temp:= `e`(v7) @signature `Lkotlin/time/Duration;.e:(J)Z` @kind static;
  #L0eb010.  v0:= temp;
  #L0eb012.  if v0 == 0 then goto L0eb032;
  #L0eb016.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eb01c.  v3:= temp @kind wide;
  #L0eb01e.  call temp:= `d`(v9) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eb024.  v5:= temp @kind wide;
  #L0eb026.  v1:= v7 @kind wide;
  #L0eb028.  call temp:= `a`(v1, v3, v5) @signature `Lkotlin/time/Duration;.a:(JJJ)J` @kind static;
  #L0eb02e.  v7:= temp @kind wide;
  #L0eb030.  goto L0eb04c;
  #L0eb032.  call temp:= `d`(v9) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eb038.  v2:= temp @kind wide;
  #L0eb03a.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eb040.  v4:= temp @kind wide;
  #L0eb042.  v0:= v7 @kind wide;
  #L0eb044.  call temp:= `a`(v0, v2, v4) @signature `Lkotlin/time/Duration;.a:(JJJ)J` @kind static;
  #L0eb04a.  v7:= temp @kind wide;
  #L0eb04c.  return v7 @kind wide;
}
procedure `long` `times-UwyO8pc`(`long` v4 , `double` v6 ) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JD)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0eb060.  call temp:= `roundToInt`(v6) @signature `Lkotlin/math/MathKt;.roundToInt:(D)I` @kind static;
  #L0eb066.  v0:= temp;
  #L0eb068.  v1:= (`double`) v0 @kind i2d;
  #L0eb06a.  v3:= dcmpg(v1, v6);
  #L0eb06e.  if v3 != 0 then goto L0eb076;
  #L0eb072.  v1:= 1I;
  #L0eb074.  goto L0eb078;
  #L0eb076.  v1:= 0I;
  #L0eb078.  if v1 == 0 then goto L0eb086;
  #L0eb07c.  call temp:= `times-UwyO8pc`(v4, v0) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @kind static;
  #L0eb082.  v4:= temp @kind wide;
  #L0eb084.  return v4 @kind wide;
  #L0eb086.  call temp:= `c`(v4) @signature `Lkotlin/time/Duration;.c:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L0eb08c.  v0:= temp @kind object;
  #L0eb08e.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0eb094.  v4:= temp @kind wide;
  #L0eb096.  v4:= v4 * v6 @kind double;
  #L0eb09a.  call temp:= `toDuration`(v4, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLkotlin/time/DurationUnit;)J` @kind static;
  #L0eb0a0.  v4:= temp @kind wide;
  #L0eb0a2.  return v4 @kind wide;
}
procedure `long` `times-UwyO8pc`(`long` v16 , `int` v18 ) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L0eb0b4.  v0:= v18;
  #L0eb0b8.  call temp:= `isInfinite-impl`(v16) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0eb0be.  v1:= temp;
  #L0eb0c0.  if v1 == 0 then goto L0eb0ec;
  #L0eb0c4.  if v0 == 0 then goto L0eb0dc;
  #L0eb0c8.  if v0 <= 0 then goto L0eb0d2;
  #L0eb0cc.  v0:= v16 @kind wide;
  #L0eb0d0.  goto L0eb0da;
  #L0eb0d2.  call temp:= `unaryMinus-UwyO8pc`(v16) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L0eb0d8.  v0:= temp @kind wide;
  #L0eb0da.  return v0 @kind wide;
  #L0eb0dc.  v0:= new `java.lang.IllegalArgumentException`;
  #L0eb0e0.  v1:= "Multiplying infinite duration by zero yields an undefined result." @kind object;
  #L0eb0e4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0eb0ea.  throw v0;
  #L0eb0ec.  if v0 != 0 then goto L0eb0f6;
  #L0eb0f0.  v0:= `@@kotlin.time.Duration.b` @type ^`long` @kind wide;
  #L0eb0f4.  return v0 @kind wide;
  #L0eb0f6.  call temp:= `d`(v16) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eb0fc.  v1:= temp @kind wide;
  #L0eb0fe.  v3:= (`long`) v0 @kind i2l;
  #L0eb100.  v5:= v1 * v3 @kind long;
  #L0eb104.  call temp:= `f`(v16) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L0eb10a.  v7:= temp;
  #L0eb10c.  v8:= 1.9999999999999998D;
  #L0eb116.  v10:= -2.0000000000000004D;
  #L0eb120.  if v7 == 0 then goto L0eb1ea;
  #L0eb124.  v7:= new `kotlin.ranges.LongRange`;
  #L0eb128.  v12:= -2147483647L;
  #L0eb12e.  v14:= 2147483647L;
  #L0eb134.  call `<init>`(v7, v12, v14) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L0eb13a.  call temp:= `contains`(v7, v1) @signature `Lkotlin/ranges/LongRange;.contains:(J)Z` @kind virtual;
  #L0eb140.  v7:= temp;
  #L0eb142.  if v7 == 0 then goto L0eb152;
  #L0eb146.  call temp:= `access$durationOfNanos`(v5) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L0eb14c.  v0:= temp @kind wide;
  #L0eb14e.  goto L0eb234;
  #L0eb152.  v12:= v5 / v3 @kind long;
  #L0eb156.  v7:= lcmp(v12, v1);
  #L0eb15a.  if v7 != 0 then goto L0eb168;
  #L0eb15e.  call temp:= `access$durationOfNanosNormalized`(v5) @signature `Lkotlin/time/DurationKt;.access$durationOfNanosNormalized:(J)J` @kind static;
  #L0eb164.  v0:= temp @kind wide;
  #L0eb166.  goto L0eb234;
  #L0eb168.  call temp:= `access$nanosToMillis`(v1) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L0eb16e.  v5:= temp @kind wide;
  #L0eb170.  call temp:= `access$millisToNanos`(v5) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L0eb176.  v12:= temp @kind wide;
  #L0eb178.  v12:= v1 - v12 @kind long;
  #L0eb17c.  v14:= v5 * v3 @kind long;
  #L0eb180.  v12:= v12 * v3 @kind long;
  #L0eb184.  call temp:= `access$nanosToMillis`(v12) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L0eb18a.  v12:= temp @kind wide;
  #L0eb18c.  v12:= v12 + v14 @kind long;
  #L0eb18e.  v3:= v14 / v3 @kind long;
  #L0eb192.  v7:= lcmp(v3, v5);
  #L0eb196.  if v7 != 0 then goto L0eb1c6;
  #L0eb19a.  v3:= v12 ^~ v14 @kind long;
  #L0eb19e.  v5:= 0L;
  #L0eb1a2.  v7:= lcmp(v3, v5);
  #L0eb1a6.  if v7 < 0 then goto L0eb1c6;
  #L0eb1aa.  v0:= new `kotlin.ranges.LongRange`;
  #L0eb1ae.  call `<init>`(v0, v10, v8) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L0eb1b4.  call temp:= `coerceIn`(v12, v0) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @kind static;
  #L0eb1ba.  v0:= temp @kind wide;
  #L0eb1bc.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L0eb1c2.  v0:= temp @kind wide;
  #L0eb1c4.  goto L0eb234;
  #L0eb1c6.  call temp:= `getSign`(v1) @signature `Lkotlin/math/MathKt;.getSign:(J)I` @kind static;
  #L0eb1cc.  v1:= temp;
  #L0eb1ce.  call temp:= `getSign`(v18) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L0eb1d4.  v0:= temp;
  #L0eb1d6.  v1:= v1 * v0 @kind int;
  #L0eb1da.  if v1 <= 0 then goto L0eb1e4;
  #L0eb1de.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L0eb1e2.  goto L0eb234;
  #L0eb1e4.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L0eb1e8.  goto L0eb234;
  #L0eb1ea.  v3:= v5 / v3 @kind long;
  #L0eb1ee.  v7:= lcmp(v3, v1);
  #L0eb1f2.  if v7 != 0 then goto L0eb212;
  #L0eb1f6.  v0:= new `kotlin.ranges.LongRange`;
  #L0eb1fa.  call `<init>`(v0, v10, v8) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L0eb200.  call temp:= `coerceIn`(v5, v0) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @kind static;
  #L0eb206.  v0:= temp @kind wide;
  #L0eb208.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L0eb20e.  v0:= temp @kind wide;
  #L0eb210.  goto L0eb234;
  #L0eb212.  call temp:= `getSign`(v1) @signature `Lkotlin/math/MathKt;.getSign:(J)I` @kind static;
  #L0eb218.  v1:= temp;
  #L0eb21a.  call temp:= `getSign`(v18) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L0eb220.  v0:= temp;
  #L0eb222.  v1:= v1 * v0 @kind int;
  #L0eb226.  if v1 <= 0 then goto L0eb230;
  #L0eb22a.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L0eb22e.  goto L0eb234;
  #L0eb230.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L0eb234.  return v0 @kind wide;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v2 , `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ea468.  v0:= "action" @kind object;
  #L0ea46c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea472.  call temp:= `getInWholeSeconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @kind static;
  #L0ea478.  v0:= temp @kind wide;
  #L0ea47a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0ea480.  v0:= temp @kind object;
  #L0ea482.  call temp:= `getNanosecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L0ea488.  v2:= temp;
  #L0ea48a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea490.  v2:= temp @kind object;
  #L0ea492.  call temp:= `invoke`(v4, v0, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ea498.  v2:= temp @kind object;
  #L0ea49a.  return v2 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v2 , `kotlin.jvm.functions.Function3` v4 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function3;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ea4ac.  v0:= "action" @kind object;
  #L0ea4b0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea4b6.  call temp:= `getInWholeMinutes-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeMinutes-impl:(J)J` @kind static;
  #L0ea4bc.  v0:= temp @kind wide;
  #L0ea4be.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0ea4c4.  v0:= temp @kind object;
  #L0ea4c6.  call temp:= `getSecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L0ea4cc.  v1:= temp;
  #L0ea4ce.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea4d4.  v1:= temp @kind object;
  #L0ea4d6.  call temp:= `getNanosecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L0ea4dc.  v2:= temp;
  #L0ea4de.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea4e4.  v2:= temp @kind object;
  #L0ea4e6.  call temp:= `invoke`(v4, v0, v1, v2) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ea4ec.  v2:= temp @kind object;
  #L0ea4ee.  return v2 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v3 , `kotlin.jvm.functions.Function4` v5 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function4;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ea500.  v0:= "action" @kind object;
  #L0ea504.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea50a.  call temp:= `getInWholeHours-impl`(v3) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @kind static;
  #L0ea510.  v0:= temp @kind wide;
  #L0ea512.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0ea518.  v0:= temp @kind object;
  #L0ea51a.  call temp:= `getMinutesComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L0ea520.  v1:= temp;
  #L0ea522.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea528.  v1:= temp @kind object;
  #L0ea52a.  call temp:= `getSecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L0ea530.  v2:= temp;
  #L0ea532.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea538.  v2:= temp @kind object;
  #L0ea53a.  call temp:= `getNanosecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L0ea540.  v3:= temp;
  #L0ea542.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea548.  v3:= temp @kind object;
  #L0ea54a.  call temp:= `invoke`(v5, v0, v1, v2, v3) @signature `Lkotlin/jvm/functions/Function4;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ea550.  v3:= temp @kind object;
  #L0ea552.  return v3 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v8 , `kotlin.jvm.functions.Function5` v10 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function5;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0ea564.  v0:= "action" @kind object;
  #L0ea568.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea56e.  call temp:= `getInWholeDays-impl`(v8) @signature `Lkotlin/time/Duration;.getInWholeDays-impl:(J)J` @kind static;
  #L0ea574.  v0:= temp @kind wide;
  #L0ea576.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0ea57c.  v3:= temp @kind object;
  #L0ea57e.  call temp:= `getHoursComponent-impl`(v8) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @kind static;
  #L0ea584.  v0:= temp;
  #L0ea586.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea58c.  v4:= temp @kind object;
  #L0ea58e.  call temp:= `getMinutesComponent-impl`(v8) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L0ea594.  v0:= temp;
  #L0ea596.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea59c.  v5:= temp @kind object;
  #L0ea59e.  call temp:= `getSecondsComponent-impl`(v8) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L0ea5a4.  v0:= temp;
  #L0ea5a6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea5ac.  v6:= temp @kind object;
  #L0ea5ae.  call temp:= `getNanosecondsComponent-impl`(v8) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L0ea5b4.  v8:= temp;
  #L0ea5b6.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ea5bc.  v7:= temp @kind object;
  #L0ea5be.  v2:= v10 @kind object;
  #L0ea5c0.  call temp:= `invoke`(v2, v3, v4, v5, v6, v7) @signature `Lkotlin/jvm/functions/Function5;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ea5c6.  v8:= temp @kind object;
  #L0ea5c8.  return v8 @kind object;
}
procedure `double` `toDouble-impl`(`long` v3 , `kotlin.time.DurationUnit` v5 @kind object) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ea1fc.  v0:= "unit" @kind object;
  #L0ea200.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea206.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L0ea20a.  v2:= lcmp(v3, v0);
  #L0ea20e.  if v2 != 0 then goto L0ea218;
  #L0ea212.  v3:= InfinityD;
  #L0ea216.  goto L0ea244;
  #L0ea218.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L0ea21c.  v2:= lcmp(v3, v0);
  #L0ea220.  if v2 != 0 then goto L0ea22a;
  #L0ea224.  v3:= -InfinityD;
  #L0ea228.  goto L0ea244;
  #L0ea22a.  call temp:= `d`(v3) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0ea230.  v0:= temp @kind wide;
  #L0ea232.  v0:= (`double`) v0 @kind l2d;
  #L0ea234.  call temp:= `c`(v3) @signature `Lkotlin/time/Duration;.c:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L0ea23a.  v3:= temp @kind object;
  #L0ea23c.  call temp:= `convertDurationUnit`(v0, v3, v5) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.convertDurationUnit:(DLkotlin/time/DurationUnit;Lkotlin/time/DurationUnit;)D` @kind static;
  #L0ea242.  v3:= temp @kind wide;
  #L0ea244.  return v3 @kind wide;
}
procedure `int` `toInt-impl`(`long` v7 , `kotlin.time.DurationUnit` v9 @kind object) @signature `Lkotlin/time/Duration;.toInt-impl:(JLkotlin/time/DurationUnit;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0ea42c.  v0:= "unit" @kind object;
  #L0ea430.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea436.  call temp:= `toLong-impl`(v7, v9) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0ea43c.  v1:= temp @kind wide;
  #L0ea43e.  v3:= -2147483648L;
  #L0ea444.  v5:= 2147483647L;
  #L0ea44a.  call temp:= `coerceIn`(v1, v3, v5) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L0ea450.  v7:= temp @kind wide;
  #L0ea452.  v8:= (`int`) v7 @kind l2i;
  #L0ea454.  return v8;
}
procedure `java.lang.String` `toIsoString-impl`(`long` v11 ) @signature `Lkotlin/time/Duration;.toIsoString-impl:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L0ea5dc.  v8:= new `java.lang.StringBuilder`;
  #L0ea5e0.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ea5e6.  call temp:= `isNegative-impl`(v11) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L0ea5ec.  v0:= temp;
  #L0ea5ee.  if v0 == 0 then goto L0ea5fc;
  #L0ea5f2.  v0:= 45I;
  #L0ea5f6.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea5fc.  v0:= "PT" @kind object;
  #L0ea600.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea606.  call temp:= `getAbsoluteValue-UwyO8pc`(v11) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @kind static;
  #L0ea60c.  v0:= temp @kind wide;
  #L0ea60e.  call temp:= `getInWholeHours-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @kind static;
  #L0ea614.  v2:= temp @kind wide;
  #L0ea616.  call temp:= `getMinutesComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L0ea61c.  v4:= temp;
  #L0ea61e.  call temp:= `getSecondsComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L0ea624.  v5:= temp;
  #L0ea626.  call temp:= `getNanosecondsComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L0ea62c.  v6:= temp;
  #L0ea62e.  call temp:= `isInfinite-impl`(v11) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0ea634.  v0:= temp;
  #L0ea636.  if v0 == 0 then goto L0ea644;
  #L0ea63a.  v2:= 9999999999999L;
  #L0ea644.  v0:= 0L;
  #L0ea648.  v7:= 1I;
  #L0ea64a.  v9:= 0I;
  #L0ea64c.  v10:= lcmp(v2, v0);
  #L0ea650.  if v10 == 0 then goto L0ea658;
  #L0ea654.  v0:= 1I;
  #L0ea656.  goto L0ea65a;
  #L0ea658.  v0:= 0I;
  #L0ea65a.  if v5 != 0 then goto L0ea668;
  #L0ea65e.  if v6 == 0 then goto L0ea664;
  #L0ea662.  goto L0ea668;
  #L0ea664.  v1:= 0I;
  #L0ea666.  goto L0ea66a;
  #L0ea668.  v1:= 1I;
  #L0ea66a.  if v4 != 0 then goto L0ea67a;
  #L0ea66e.  if v1 == 0 then goto L0ea678;
  #L0ea672.  if v0 == 0 then goto L0ea678;
  #L0ea676.  goto L0ea67a;
  #L0ea678.  v7:= 0I;
  #L0ea67a.  if v0 == 0 then goto L0ea68e;
  #L0ea67e.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea684.  v2:= 72I;
  #L0ea688.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea68e.  if v7 == 0 then goto L0ea6a2;
  #L0ea692.  call temp:= `append`(v8, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea698.  v2:= 77I;
  #L0ea69c.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea6a2.  if v1 != 0 then goto L0ea6ae;
  #L0ea6a6.  if v0 != 0 then goto L0ea6cc;
  #L0ea6aa.  if v7 != 0 then goto L0ea6cc;
  #L0ea6ae.  v7:= 9I;
  #L0ea6b2.  v9:= 1I;
  #L0ea6b4.  v10:= "S" @kind object;
  #L0ea6b8.  v0:= v11 @kind wide;
  #L0ea6ba.  v2:= v8 @kind object;
  #L0ea6bc.  v3:= v5;
  #L0ea6be.  v4:= v6;
  #L0ea6c0.  v5:= v7;
  #L0ea6c2.  v6:= v10 @kind object;
  #L0ea6c4.  v7:= v9;
  #L0ea6c6.  call `b`(v0, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L0ea6cc.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ea6d2.  v11:= temp @kind object;
  #L0ea6d4.  v12:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L0ea6d8.  call `checkNotNullExpressionValue`(v11, v12) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea6de.  return v11 @kind object;
}
procedure `long` `toLong-impl`(`long` v3 , `kotlin.time.DurationUnit` v5 @kind object) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0eb248.  v0:= "unit" @kind object;
  #L0eb24c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0eb252.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L0eb256.  v2:= lcmp(v3, v0);
  #L0eb25a.  if v2 != 0 then goto L0eb26a;
  #L0eb25e.  v3:= 9223372036854775807L;
  #L0eb268.  goto L0eb294;
  #L0eb26a.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L0eb26e.  v2:= lcmp(v3, v0);
  #L0eb272.  if v2 != 0 then goto L0eb27c;
  #L0eb276.  v3:= -9223372036854775808L;
  #L0eb27a.  goto L0eb294;
  #L0eb27c.  call temp:= `d`(v3) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eb282.  v0:= temp @kind wide;
  #L0eb284.  call temp:= `c`(v3) @signature `Lkotlin/time/Duration;.c:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L0eb28a.  v3:= temp @kind object;
  #L0eb28c.  call temp:= `convertDurationUnit`(v0, v3, v5) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.convertDurationUnit:(JLkotlin/time/DurationUnit;Lkotlin/time/DurationUnit;)J` @kind static;
  #L0eb292.  v3:= temp @kind wide;
  #L0eb294.  return v3 @kind wide;
}
procedure `long` `toLongMilliseconds-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.toLongMilliseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0eb2a8.  call temp:= `getInWholeMilliseconds-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeMilliseconds-impl:(J)J` @kind static;
  #L0eb2ae.  v0:= temp @kind wide;
  #L0eb2b0.  return v0 @kind wide;
}
procedure `long` `toLongNanoseconds-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.toLongNanoseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0eb2c4.  call temp:= `getInWholeNanoseconds-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeNanoseconds-impl:(J)J` @kind static;
  #L0eb2ca.  v0:= temp @kind wide;
  #L0eb2cc.  return v0 @kind wide;
}
procedure `java.lang.String` `toString-impl`(`long` v14 ) @signature `Lkotlin/time/Duration;.toString-impl:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L0ea734.  v0:= 0L;
  #L0ea738.  v2:= lcmp(v14, v0);
  #L0ea73c.  if v2 != 0 then goto L0ea748;
  #L0ea740.  v14:= "0s" @kind object;
  #L0ea744.  goto L0ea93e;
  #L0ea748.  v2:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L0ea74c.  v4:= lcmp(v14, v2);
  #L0ea750.  if v4 != 0 then goto L0ea75c;
  #L0ea754.  v14:= "Infinity" @kind object;
  #L0ea758.  goto L0ea93e;
  #L0ea75c.  v2:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L0ea760.  v4:= lcmp(v14, v2);
  #L0ea764.  if v4 != 0 then goto L0ea770;
  #L0ea768.  v14:= "-Infinity" @kind object;
  #L0ea76c.  goto L0ea93e;
  #L0ea770.  call temp:= `isNegative-impl`(v14) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L0ea776.  v2:= temp;
  #L0ea778.  v11:= new `java.lang.StringBuilder`;
  #L0ea77c.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ea782.  if v2 == 0 then goto L0ea790;
  #L0ea786.  v3:= 45I;
  #L0ea78a.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea790.  call temp:= `getAbsoluteValue-UwyO8pc`(v14) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @kind static;
  #L0ea796.  v3:= temp @kind wide;
  #L0ea798.  call temp:= `getInWholeDays-impl`(v3) @signature `Lkotlin/time/Duration;.getInWholeDays-impl:(J)J` @kind static;
  #L0ea79e.  v5:= temp @kind wide;
  #L0ea7a0.  call temp:= `getHoursComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @kind static;
  #L0ea7a6.  v7:= temp;
  #L0ea7a8.  call temp:= `getMinutesComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L0ea7ae.  v8:= temp;
  #L0ea7b0.  call temp:= `getSecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L0ea7b6.  v9:= temp;
  #L0ea7b8.  call temp:= `getNanosecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L0ea7be.  v10:= temp;
  #L0ea7c0.  v3:= 0I;
  #L0ea7c2.  v12:= 1I;
  #L0ea7c4.  v4:= lcmp(v5, v0);
  #L0ea7c8.  if v4 == 0 then goto L0ea7d0;
  #L0ea7cc.  v0:= 1I;
  #L0ea7ce.  goto L0ea7d2;
  #L0ea7d0.  v0:= 0I;
  #L0ea7d2.  if v7 == 0 then goto L0ea7da;
  #L0ea7d6.  v1:= 1I;
  #L0ea7d8.  goto L0ea7dc;
  #L0ea7da.  v1:= 0I;
  #L0ea7dc.  if v8 == 0 then goto L0ea7e4;
  #L0ea7e0.  v4:= 1I;
  #L0ea7e2.  goto L0ea7e6;
  #L0ea7e4.  v4:= 0I;
  #L0ea7e6.  if v9 != 0 then goto L0ea7f4;
  #L0ea7ea.  if v10 == 0 then goto L0ea7f0;
  #L0ea7ee.  goto L0ea7f4;
  #L0ea7f0.  v13:= 0I;
  #L0ea7f2.  goto L0ea7f6;
  #L0ea7f4.  v13:= 1I;
  #L0ea7f6.  if v0 == 0 then goto L0ea80c;
  #L0ea7fa.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea800.  v3:= 100I;
  #L0ea804.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea80a.  v3:= 1I;
  #L0ea80c.  v5:= 32I;
  #L0ea810.  if v1 != 0 then goto L0ea820;
  #L0ea814.  if v0 == 0 then goto L0ea840;
  #L0ea818.  if v4 != 0 then goto L0ea820;
  #L0ea81c.  if v13 == 0 then goto L0ea840;
  #L0ea820.  v6:= v3 + 1;
  #L0ea824.  if v3 <= 0 then goto L0ea82e;
  #L0ea828.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea82e.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea834.  v3:= 104I;
  #L0ea838.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea83e.  v3:= v6;
  #L0ea840.  if v4 != 0 then goto L0ea850;
  #L0ea844.  if v13 == 0 then goto L0ea870;
  #L0ea848.  if v1 != 0 then goto L0ea850;
  #L0ea84c.  if v0 == 0 then goto L0ea870;
  #L0ea850.  v6:= v3 + 1;
  #L0ea854.  if v3 <= 0 then goto L0ea85e;
  #L0ea858.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea85e.  call temp:= `append`(v11, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea864.  v3:= 109I;
  #L0ea868.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea86e.  v3:= v6;
  #L0ea870.  if v13 == 0 then goto L0ea90e;
  #L0ea874.  v13:= v3 + 1;
  #L0ea878.  if v3 <= 0 then goto L0ea882;
  #L0ea87c.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea882.  if v9 != 0 then goto L0ea8f0;
  #L0ea886.  if v0 != 0 then goto L0ea8f0;
  #L0ea88a.  if v1 != 0 then goto L0ea8f0;
  #L0ea88e.  if v4 == 0 then goto L0ea894;
  #L0ea892.  goto L0ea8f0;
  #L0ea894.  v0:= 1000000I;
  #L0ea89a.  if v10 < v0 then goto L0ea8ba;
  #L0ea89e.  v6:= v10 / v0 @kind int;
  #L0ea8a2.  v7:= v10 %% v0 @kind int;
  #L0ea8a6.  v8:= 6I;
  #L0ea8a8.  v10:= 0I;
  #L0ea8aa.  v9:= "ms" @kind object;
  #L0ea8ae.  v3:= v14 @kind wide;
  #L0ea8b0.  v5:= v11 @kind object;
  #L0ea8b2.  call `b`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L0ea8b8.  goto L0ea90c;
  #L0ea8ba.  v0:= 1000I;
  #L0ea8be.  if v10 < v0 then goto L0ea8de;
  #L0ea8c2.  v6:= v10 / 1000;
  #L0ea8c6.  v7:= v10 %% 1000;
  #L0ea8ca.  v8:= 3I;
  #L0ea8cc.  v10:= 0I;
  #L0ea8ce.  v9:= "us" @kind object;
  #L0ea8d2.  v3:= v14 @kind wide;
  #L0ea8d4.  v5:= v11 @kind object;
  #L0ea8d6.  call `b`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L0ea8dc.  goto L0ea90c;
  #L0ea8de.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea8e4.  v14:= "ns" @kind object;
  #L0ea8e8.  call temp:= `append`(v11, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea8ee.  goto L0ea90c;
  #L0ea8f0.  v8:= 9I;
  #L0ea8f4.  v0:= 0I;
  #L0ea8f6.  v1:= "s" @kind object;
  #L0ea8fa.  v3:= v14 @kind wide;
  #L0ea8fc.  v5:= v11 @kind object;
  #L0ea8fe.  v6:= v9;
  #L0ea900.  v7:= v10;
  #L0ea902.  v9:= v1 @kind object;
  #L0ea904.  v10:= v0;
  #L0ea906.  call `b`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L0ea90c.  v3:= v13;
  #L0ea90e.  if v2 == 0 then goto L0ea92c;
  #L0ea912.  if v3 <= v12 then goto L0ea92c;
  #L0ea916.  v14:= 40I;
  #L0ea91a.  call temp:= `insert`(v11, v12, v14) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea920.  v14:= temp @kind object;
  #L0ea922.  v15:= 41I;
  #L0ea926.  call temp:= `append`(v14, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea92c.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ea932.  v14:= temp @kind object;
  #L0ea934.  v15:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L0ea938.  call `checkNotNullExpressionValue`(v14, v15) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea93e.  return v14 @kind object;
}
procedure `java.lang.String` `toString-impl`(`long` v2 , `kotlin.time.DurationUnit` v4 @kind object, `int` v5 ) @signature `Lkotlin/time/Duration;.toString-impl:(JLkotlin/time/DurationUnit;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ea950.  v0:= "unit" @kind object;
  #L0ea954.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ea95a.  if v5 < 0 then goto L0ea962;
  #L0ea95e.  v0:= 1I;
  #L0ea960.  goto L0ea964;
  #L0ea962.  v0:= 0I;
  #L0ea964.  if v0 == 0 then goto L0ea9c2;
  #L0ea968.  call temp:= `toDouble-impl`(v2, v4) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0ea96e.  v2:= temp @kind wide;
  #L0ea970.  call temp:= `isInfinite`(v2) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L0ea976.  v0:= temp;
  #L0ea978.  if v0 == 0 then goto L0ea986;
  #L0ea97c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(D)Ljava/lang/String;` @kind static;
  #L0ea982.  v2:= temp @kind object;
  #L0ea984.  return v2 @kind object;
  #L0ea986.  v0:= new `java.lang.StringBuilder`;
  #L0ea98a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ea990.  v1:= 12I;
  #L0ea994.  call temp:= `coerceAtMost`(v5, v1) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L0ea99a.  v5:= temp;
  #L0ea99c.  call temp:= `formatToExactDecimals`(v2, v5) @signature `Lkotlin/time/DurationJvmKt;.formatToExactDecimals:(DI)Ljava/lang/String;` @kind static;
  #L0ea9a2.  v2:= temp @kind object;
  #L0ea9a4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea9aa.  call temp:= `shortName`(v4) @signature `Lkotlin/time/DurationUnitKt__DurationUnitKt;.shortName:(Lkotlin/time/DurationUnit;)Ljava/lang/String;` @kind static;
  #L0ea9b0.  v2:= temp @kind object;
  #L0ea9b2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea9b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ea9be.  v2:= temp @kind object;
  #L0ea9c0.  return v2 @kind object;
  #L0ea9c2.  v2:= new `java.lang.StringBuilder`;
  #L0ea9c6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ea9cc.  v3:= "decimals must be not negative, but was " @kind object;
  #L0ea9d0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea9d6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ea9dc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ea9e2.  v2:= temp @kind object;
  #L0ea9e4.  v3:= new `java.lang.IllegalArgumentException`;
  #L0ea9e8.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ea9ee.  v2:= temp @kind object;
  #L0ea9f0.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ea9f6.  throw v3;
}
procedure `java.lang.String` `toString-impl$default`(`long` v0 , `kotlin.time.DurationUnit` v2 @kind object, `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/time/Duration;.toString-impl$default:(JLkotlin/time/DurationUnit;IILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ea710.  v4:= v4 ^& 2;
  #L0ea714.  if v4 == 0 then goto L0ea71a;
  #L0ea718.  v3:= 0I;
  #L0ea71a.  call temp:= `toString-impl`(v0, v2, v3) @signature `Lkotlin/time/Duration;.toString-impl:(JLkotlin/time/DurationUnit;I)Ljava/lang/String;` @kind static;
  #L0ea720.  v0:= temp @kind object;
  #L0ea722.  return v0 @kind object;
}
procedure `long` `unaryMinus-UwyO8pc`(`long` v2 ) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0eb2e0.  call temp:= `d`(v2) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L0eb2e6.  v0:= temp @kind wide;
  #L0eb2e8.  v0:= -v0 @kind long;
  #L0eb2ea.  v3:= (`int`) v2 @kind l2i;
  #L0eb2ec.  v2:= v3 ^& 1;
  #L0eb2f0.  call temp:= `access$durationOf`(v0, v2) @signature `Lkotlin/time/DurationKt;.access$durationOf:(JI)J` @kind static;
  #L0eb2f6.  v2:= temp @kind wide;
  #L0eb2f8.  return v2 @kind wide;
}
procedure `int` `compareTo`(`kotlin.time.Duration` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/time/Duration;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0ea258.  v3:= (`kotlin.time.Duration`) v3 @kind object;
  #L0ea25c.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @kind virtual;
  #L0ea262.  v0:= temp @kind wide;
  #L0ea264.  call temp:= `compareTo-LRDsOJo`(v2, v0) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(J)I` @kind virtual;
  #L0ea26a.  v3:= temp;
  #L0ea26c.  return v3;
}
procedure `int` `compareTo-LRDsOJo`(`kotlin.time.Duration` v2 @kind this, `long` v3 ) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ea280.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L0ea284.  call temp:= `compareTo-LRDsOJo`(v0, v3) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @kind static;
  #L0ea28a.  v3:= temp;
  #L0ea28c.  return v3;
}
procedure `boolean` `equals`(`kotlin.time.Duration` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/time/Duration;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0e9f88.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L0e9f8c.  call temp:= `equals-impl`(v0, v3) @signature `Lkotlin/time/Duration;.equals-impl:(JLjava/lang/Object;)Z` @kind static;
  #L0e9f92.  v3:= temp;
  #L0e9f94.  return v3;
}
procedure `int` `hashCode`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ea3ec.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L0ea3f0.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/time/Duration;.hashCode-impl:(J)I` @kind static;
  #L0ea3f6.  v0:= temp;
  #L0ea3f8.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ea6f0.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L0ea6f4.  call temp:= `toString-impl`(v0) @signature `Lkotlin/time/Duration;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L0ea6fa.  v0:= temp @kind object;
  #L0ea6fc.  return v0 @kind object;
}
procedure `long` `unbox-impl`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0eb30c.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L0eb310.  return v0 @kind wide;
}
