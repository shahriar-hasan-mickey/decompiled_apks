record `kotlin.time.LongSaturatedMathKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `long` `a`(`long` v1 , `long` v3 , `long` v5 ) @signature `Lkotlin/time/LongSaturatedMathKt;.a:(JJJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L0eb52c.  call temp:= `isInfinite-impl`(v3) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L0eb532.  v3:= temp;
  #L0eb534.  if v3 == 0 then goto L0eb55a;
  #L0eb538.  v3:= v1 ^~ v5 @kind long;
  #L0eb53c.  v5:= 0L;
  #L0eb540.  v0:= lcmp(v3, v5);
  #L0eb544.  if v0 < 0 then goto L0eb54a;
  #L0eb548.  goto L0eb55a;
  #L0eb54a.  v1:= new `java.lang.IllegalArgumentException`;
  #L0eb54e.  v2:= "Summing infinities of different signs" @kind object;
  #L0eb552.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0eb558.  throw v1;
  #L0eb55a.  return v1 @kind wide;
}
procedure `long` `b`(`long` v7 , `long` v9 ) @signature `Lkotlin/time/LongSaturatedMathKt;.b:(JJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0eb5f0.  v0:= 2I;
  #L0eb5f2.  call temp:= `div-UwyO8pc`(v9, v0) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JI)J` @kind static;
  #L0eb5f8.  v0:= temp @kind wide;
  #L0eb5fa.  call temp:= `getInWholeNanoseconds-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeNanoseconds-impl:(J)J` @kind static;
  #L0eb600.  v2:= temp @kind wide;
  #L0eb602.  v4:= 1L;
  #L0eb606.  v2:= v2 - v4 @kind long;
  #L0eb608.  v2:= v2 ^| v4 @kind long;
  #L0eb60a.  v4:= 9223372036854775807L;
  #L0eb614.  v6:= lcmp(v2, v4);
  #L0eb618.  if v6 != 0 then goto L0eb630;
  #L0eb61c.  v7:= (`double`) v7 @kind l2d;
  #L0eb61e.  v0:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eb622.  call temp:= `toDouble-impl`(v9, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L0eb628.  v9:= temp @kind wide;
  #L0eb62a.  v7:= v7 + v9 @kind double;
  #L0eb62c.  v7:= (`long`) v7 @kind d2l;
  #L0eb62e.  return v7 @kind wide;
  #L0eb630.  call temp:= `saturatingAdd-pTJri5U`(v7, v0) @signature `Lkotlin/time/LongSaturatedMathKt;.saturatingAdd-pTJri5U:(JJ)J` @kind static;
  #L0eb636.  v7:= temp @kind wide;
  #L0eb638.  call temp:= `saturatingAdd-pTJri5U`(v7, v0) @signature `Lkotlin/time/LongSaturatedMathKt;.saturatingAdd-pTJri5U:(JJ)J` @kind static;
  #L0eb63e.  v7:= temp @kind wide;
  #L0eb640.  return v7 @kind wide;
}
procedure `long` `saturatingAdd-pTJri5U`(`long` v9 , `long` v11 ) @signature `Lkotlin/time/LongSaturatedMathKt;.saturatingAdd-pTJri5U:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L0eb56c.  call temp:= `getInWholeNanoseconds-impl`(v11) @signature `Lkotlin/time/Duration;.getInWholeNanoseconds-impl:(J)J` @kind static;
  #L0eb572.  v4:= temp @kind wide;
  #L0eb574.  v0:= 1L;
  #L0eb578.  v2:= v9 - v0 @kind long;
  #L0eb57c.  v2:= v2 ^| v0 @kind long;
  #L0eb57e.  v6:= 9223372036854775807L;
  #L0eb588.  v8:= lcmp(v2, v6);
  #L0eb58c.  if v8 != 0 then goto L0eb59e;
  #L0eb590.  v0:= v9 @kind wide;
  #L0eb592.  v2:= v11 @kind wide;
  #L0eb594.  call temp:= `a`(v0, v2, v4) @signature `Lkotlin/time/LongSaturatedMathKt;.a:(JJJ)J` @kind static;
  #L0eb59a.  v9:= temp @kind wide;
  #L0eb59c.  return v9 @kind wide;
  #L0eb59e.  v2:= v4 - v0 @kind long;
  #L0eb5a2.  v0:= v0 ^| v2 @kind long;
  #L0eb5a4.  v2:= lcmp(v0, v6);
  #L0eb5a8.  if v2 != 0 then goto L0eb5b6;
  #L0eb5ac.  call temp:= `b`(v9, v11) @signature `Lkotlin/time/LongSaturatedMathKt;.b:(JJ)J` @kind static;
  #L0eb5b2.  v9:= temp @kind wide;
  #L0eb5b4.  return v9 @kind wide;
  #L0eb5b6.  v11:= v9 + v4 @kind long;
  #L0eb5ba.  v0:= v9 ^~ v11 @kind long;
  #L0eb5be.  v2:= v4 ^~ v11 @kind long;
  #L0eb5c2.  v0:= v0 ^& v2 @kind long;
  #L0eb5c4.  v2:= 0L;
  #L0eb5c8.  v4:= lcmp(v0, v2);
  #L0eb5cc.  if v4 >= 0 then goto L0eb5de;
  #L0eb5d0.  v11:= lcmp(v9, v2);
  #L0eb5d4.  if v11 >= 0 then goto L0eb5dc;
  #L0eb5d8.  v6:= -9223372036854775808L;
  #L0eb5dc.  return v6 @kind wide;
  #L0eb5de.  return v11 @kind wide;
}
procedure `long` `saturatingDiff`(`long` v7 , `long` v9 ) @signature `Lkotlin/time/LongSaturatedMathKt;.saturatingDiff:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0eb654.  v0:= 1L;
  #L0eb658.  v2:= v9 - v0 @kind long;
  #L0eb65c.  v0:= v0 ^| v2 @kind long;
  #L0eb65e.  v2:= 9223372036854775807L;
  #L0eb668.  v4:= lcmp(v0, v2);
  #L0eb66c.  if v4 != 0 then goto L0eb686;
  #L0eb670.  v7:= `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eb674.  call temp:= `toDuration`(v9, v7) @signature `Lkotlin/time/DurationKt;.toDuration:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eb67a.  v7:= temp @kind wide;
  #L0eb67c.  call temp:= `unaryMinus-UwyO8pc`(v7) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L0eb682.  v7:= temp @kind wide;
  #L0eb684.  return v7 @kind wide;
  #L0eb686.  v0:= v7 - v9 @kind long;
  #L0eb68a.  v2:= v0 ^~ v7 @kind long;
  #L0eb68e.  v4:= v0 ^~ v9 @kind long;
  #L0eb692.  v4:= ~v4 @kind long;
  #L0eb694.  v2:= v2 ^& v4 @kind long;
  #L0eb696.  v4:= 0L;
  #L0eb69a.  v6:= lcmp(v2, v4);
  #L0eb69e.  if v6 >= 0 then goto L0eb6e0;
  #L0eb6a2.  v0:= 1000000I;
  #L0eb6a8.  v0:= (`long`) v0 @kind i2l;
  #L0eb6aa.  v2:= v7 / v0 @kind long;
  #L0eb6ae.  v4:= v9 / v0 @kind long;
  #L0eb6b2.  v2:= v2 - v4 @kind long;
  #L0eb6b4.  v7:= v7 %% v0 @kind long;
  #L0eb6b6.  v9:= v9 %% v0 @kind long;
  #L0eb6b8.  v7:= v7 - v9 @kind long;
  #L0eb6ba.  v9:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L0eb6be.  v9:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eb6c2.  call temp:= `toDuration`(v2, v9) @signature `Lkotlin/time/DurationKt;.toDuration:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eb6c8.  v9:= temp @kind wide;
  #L0eb6ca.  v0:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eb6ce.  call temp:= `toDuration`(v7, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eb6d4.  v7:= temp @kind wide;
  #L0eb6d6.  call temp:= `plus-LRDsOJo`(v9, v7) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L0eb6dc.  v7:= temp @kind wide;
  #L0eb6de.  return v7 @kind wide;
  #L0eb6e0.  v7:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L0eb6e4.  v7:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L0eb6e8.  call temp:= `toDuration`(v0, v7) @signature `Lkotlin/time/DurationKt;.toDuration:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0eb6ee.  v7:= temp @kind wide;
  #L0eb6f0.  return v7 @kind wide;
}
