record `kotlin.time.AbstractLongTimeSource$a` @kind class @AccessFlag FINAL extends `kotlin.time.TimeMark` @kind interface {
  `long` `kotlin.time.AbstractLongTimeSource$a.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.time.AbstractLongTimeSource` `kotlin.time.AbstractLongTimeSource$a.b` @AccessFlag PRIVATE_FINAL;
  `long` `kotlin.time.AbstractLongTimeSource$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.time.AbstractLongTimeSource$a` v0 @kind this, `long` v1 , `kotlin.time.AbstractLongTimeSource` v3 @kind object, `long` v4 ) @signature `Lkotlin/time/AbstractLongTimeSource$a;.<init>:(JLkotlin/time/AbstractLongTimeSource;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0e8008.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0e800e.  v0.`kotlin.time.AbstractLongTimeSource$a.a` @type ^`long` := v1 @kind wide;
  #L0e8012.  v0.`kotlin.time.AbstractLongTimeSource$a.b` @type ^`kotlin.time.AbstractLongTimeSource` := v3 @kind object;
  #L0e8016.  v0.`kotlin.time.AbstractLongTimeSource$a.c` @type ^`long` := v4 @kind wide;
  #L0e801a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.AbstractLongTimeSource$a` v0 @kind this, `long` v1 , `kotlin.time.AbstractLongTimeSource` v3 @kind object, `long` v4 , `kotlin.jvm.internal.DefaultConstructorMarker` v6 @kind object) @signature `Lkotlin/time/AbstractLongTimeSource$a;.<init>:(JLkotlin/time/AbstractLongTimeSource;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L0e802c.  call `<init>`(v0, v1, v3, v4) @signature `Lkotlin/time/AbstractLongTimeSource$a;.<init>:(JLkotlin/time/AbstractLongTimeSource;J)V` @kind direct;
  #L0e8032.  return @kind void;
}
procedure `long` `elapsedNow-UwyO8pc`(`kotlin.time.AbstractLongTimeSource$a` v4 @kind this) @signature `Lkotlin/time/AbstractLongTimeSource$a;.elapsedNow-UwyO8pc:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0e7fc4.  v0:= v4.`kotlin.time.AbstractLongTimeSource$a.b` @type ^`kotlin.time.AbstractLongTimeSource` @kind object;
  #L0e7fc8.  call temp:= `read`(v0) @signature `Lkotlin/time/AbstractLongTimeSource;.read:()J` @kind virtual;
  #L0e7fce.  v0:= temp @kind wide;
  #L0e7fd0.  v2:= v4.`kotlin.time.AbstractLongTimeSource$a.a` @type ^`long` @kind wide;
  #L0e7fd4.  v0:= v0 - v2 @kind long;
  #L0e7fd6.  v2:= v4.`kotlin.time.AbstractLongTimeSource$a.b` @type ^`kotlin.time.AbstractLongTimeSource` @kind object;
  #L0e7fda.  call temp:= `getUnit`(v2) @signature `Lkotlin/time/AbstractLongTimeSource;.getUnit:()Lkotlin/time/DurationUnit;` @kind virtual;
  #L0e7fe0.  v2:= temp @kind object;
  #L0e7fe2.  call temp:= `toDuration`(v0, v2) @signature `Lkotlin/time/DurationKt;.toDuration:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L0e7fe8.  v0:= temp @kind wide;
  #L0e7fea.  v2:= v4.`kotlin.time.AbstractLongTimeSource$a.c` @type ^`long` @kind wide;
  #L0e7fee.  call temp:= `minus-LRDsOJo`(v0, v2) @signature `Lkotlin/time/Duration;.minus-LRDsOJo:(JJ)J` @kind static;
  #L0e7ff4.  v0:= temp @kind wide;
  #L0e7ff6.  return v0 @kind wide;
}
procedure `boolean` `hasNotPassedNow`(`kotlin.time.AbstractLongTimeSource$a` v1 @kind this) @signature `Lkotlin/time/AbstractLongTimeSource$a;.hasNotPassedNow:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0e7f3c.  call temp:= `hasNotPassedNow`(v1) @signature `Lkotlin/time/TimeMark$DefaultImpls;.hasNotPassedNow:(Lkotlin/time/TimeMark;)Z` @kind static;
  #L0e7f42.  v0:= temp;
  #L0e7f44.  return v0;
}
procedure `boolean` `hasPassedNow`(`kotlin.time.AbstractLongTimeSource$a` v1 @kind this) @signature `Lkotlin/time/AbstractLongTimeSource$a;.hasPassedNow:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0e7f58.  call temp:= `hasPassedNow`(v1) @signature `Lkotlin/time/TimeMark$DefaultImpls;.hasPassedNow:(Lkotlin/time/TimeMark;)Z` @kind static;
  #L0e7f5e.  v0:= temp;
  #L0e7f60.  return v0;
}
procedure `kotlin.time.TimeMark` `minus-LRDsOJo`(`kotlin.time.AbstractLongTimeSource$a` v0 @kind this, `long` v1 ) @signature `Lkotlin/time/AbstractLongTimeSource$a;.minus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;

  #L0e7f74.  call temp:= `minus-LRDsOJo`(v0, v1) @signature `Lkotlin/time/TimeMark$DefaultImpls;.minus-LRDsOJo:(Lkotlin/time/TimeMark;J)Lkotlin/time/TimeMark;` @kind static;
  #L0e7f7a.  v1:= temp @kind object;
  #L0e7f7c.  return v1 @kind object;
}
procedure `kotlin.time.TimeMark` `plus-LRDsOJo`(`kotlin.time.AbstractLongTimeSource$a` v8 @kind this, `long` v9 ) @signature `Lkotlin/time/AbstractLongTimeSource$a;.plus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0e7f90.  v7:= new `kotlin.time.AbstractLongTimeSource$a`;
  #L0e7f94.  v1:= v8.`kotlin.time.AbstractLongTimeSource$a.a` @type ^`long` @kind wide;
  #L0e7f98.  v3:= v8.`kotlin.time.AbstractLongTimeSource$a.b` @type ^`kotlin.time.AbstractLongTimeSource` @kind object;
  #L0e7f9c.  v4:= v8.`kotlin.time.AbstractLongTimeSource$a.c` @type ^`long` @kind wide;
  #L0e7fa0.  call temp:= `plus-LRDsOJo`(v4, v9) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L0e7fa6.  v4:= temp @kind wide;
  #L0e7fa8.  v6:= 0I;
  #L0e7faa.  v0:= v7 @kind object;
  #L0e7fac.  call `<init>`(v0, v1, v3, v4, v6) @signature `Lkotlin/time/AbstractLongTimeSource$a;.<init>:(JLkotlin/time/AbstractLongTimeSource;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0e7fb2.  return v7 @kind object;
}
