record `kotlin.time.DurationJvmKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@kotlin.time.DurationJvmKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal`[] `@@kotlin.time.DurationJvmKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/DurationJvmKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0e88ec.  v0:= constclass @type ^`kotlin.time.Duration` @kind object;
  #L0e88f0.  v0:= 0I;
  #L0e88f2.  `@@kotlin.time.DurationJvmKt.a` @type ^`boolean` := v0 @kind boolean;
  #L0e88f6.  v1:= 4I;
  #L0e88f8.  v2:= new `java.lang.ThreadLocal`[v1];
  #L0e88fc.  if v0 >= v1 then goto L0e8914;
  #L0e8900.  v3:= new `java.lang.ThreadLocal`;
  #L0e8904.  call `<init>`(v3) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L0e890a.  v2[v0]:= v3 @kind object;
  #L0e890e.  v0:= v0 + 1;
  #L0e8912.  goto L0e88fc;
  #L0e8914.  `@@kotlin.time.DurationJvmKt.b` @type ^`java.lang.ThreadLocal`[] := v2 @kind object;
  #L0e8918.  return @kind void;
}
procedure `java.text.DecimalFormat` `a`(`int` v2 ) @signature `Lkotlin/time/DurationJvmKt;.a:(I)Ljava/text/DecimalFormat;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0e88b8.  v0:= new `java.text.DecimalFormat`;
  #L0e88bc.  v1:= "0" @kind object;
  #L0e88c0.  call `<init>`(v0, v1) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0e88c6.  if v2 <= 0 then goto L0e88d0;
  #L0e88ca.  call `setMinimumFractionDigits`(v0, v2) @signature `Ljava/text/DecimalFormat;.setMinimumFractionDigits:(I)V` @kind virtual;
  #L0e88d0.  v2:= `@@java.math.RoundingMode.HALF_UP` @type ^`java.math.RoundingMode` @kind object;
  #L0e88d4.  call `setRoundingMode`(v0, v2) @signature `Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V` @kind virtual;
  #L0e88da.  return v0 @kind object;
}
procedure `java.lang.String` `formatToExactDecimals`(`double` v2 , `int` v4 ) @signature `Lkotlin/time/DurationJvmKt;.formatToExactDecimals:(DI)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0e881c.  v0:= `@@kotlin.time.DurationJvmKt.b` @type ^`java.lang.ThreadLocal`[] @kind object;
  #L0e8820.  v1:= length @variable v0;
  #L0e8822.  if v4 >= v1 then goto L0e8856;
  #L0e8826.  v0:= v0[v4] @kind object;
  #L0e882a.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L0e8830.  v1:= temp @kind object;
  #L0e8832.  if v1 != 0 then goto L0e8846;
  #L0e8836.  call temp:= `a`(v4) @signature `Lkotlin/time/DurationJvmKt;.a:(I)Ljava/text/DecimalFormat;` @kind static;
  #L0e883c.  v1:= temp @kind object;
  #L0e883e.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L0e8844.  goto L0e8850;
  #L0e8846.  v4:= "get() ?: default().also(this::set)" @kind object;
  #L0e884a.  call `checkNotNullExpressionValue`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e8850.  v1:= (`java.text.DecimalFormat`) v1 @kind object;
  #L0e8854.  goto L0e885e;
  #L0e8856.  call temp:= `a`(v4) @signature `Lkotlin/time/DurationJvmKt;.a:(I)Ljava/text/DecimalFormat;` @kind static;
  #L0e885c.  v1:= temp @kind object;
  #L0e885e.  call temp:= `format`(v1, v2) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L0e8864.  v2:= temp @kind object;
  #L0e8866.  v3:= "format.format(value)" @kind object;
  #L0e886a.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e8870.  return v2 @kind object;
}
procedure `java.lang.String` `formatUpToDecimals`(`double` v1 , `int` v3 ) @signature `Lkotlin/time/DurationJvmKt;.formatUpToDecimals:(DI)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0e8884.  v0:= 0I;
  #L0e8886.  call temp:= `a`(v0) @signature `Lkotlin/time/DurationJvmKt;.a:(I)Ljava/text/DecimalFormat;` @kind static;
  #L0e888c.  v0:= temp @kind object;
  #L0e888e.  call `setMaximumFractionDigits`(v0, v3) @signature `Ljava/text/DecimalFormat;.setMaximumFractionDigits:(I)V` @kind virtual;
  #L0e8894.  call temp:= `format`(v0, v1) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L0e889a.  v1:= temp @kind object;
  #L0e889c.  v2:= "createFormatForDecimals(â€¦ }\n        .format(value)" @kind object;
  #L0e88a0.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e88a6.  return v1 @kind object;
}
procedure `boolean` `getDurationAssertionsEnabled`() @signature `Lkotlin/time/DurationJvmKt;.getDurationAssertionsEnabled:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0e8804.  v0:= `@@kotlin.time.DurationJvmKt.a` @type ^`boolean` @kind boolean;
  #L0e8808.  return v0;
}
