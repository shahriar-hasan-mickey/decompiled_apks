record `kotlin.jvm.internal.Reflection` @kind class @AccessFlag PUBLIC {
}
global `kotlin.jvm.internal.ReflectionFactory` `@@kotlin.jvm.internal.Reflection.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlin.reflect.KClass`[] `@@kotlin.jvm.internal.Reflection.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/Reflection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0c83d0.  v0:= 0I;
  #L0c83d2.  v1:= "kotlin.reflect.jvm.internal.ReflectionFactoryImpl" @kind object;
  #L0c83d6.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L0c83dc.  v1:= temp @kind object;
  #L0c83de.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L0c83e4.  v1:= temp @kind object;
  #L0c83e6.  v1:= (`kotlin.jvm.internal.ReflectionFactory`) v1 @kind object;
  #L0c83ea.  v0:= v1 @kind object;
  #L0c83ec.  goto L0c83f0;
  #L0c83ee.  
  #L0c83f0.  if v0 == 0 then goto L0c83f6;
  #L0c83f4.  goto L0c8400;
  #L0c83f6.  v0:= new `kotlin.jvm.internal.ReflectionFactory`;
  #L0c83fa.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/ReflectionFactory;.<init>:()V` @kind direct;
  #L0c8400.  `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` := v0 @kind object;
  #L0c8404.  v0:= 0I;
  #L0c8406.  v0:= new `kotlin.reflect.KClass`[v0];
  #L0c840a.  `@@kotlin.jvm.internal.Reflection.b` @type ^`kotlin.reflect.KClass`[] := v0 @kind object;
  #L0c840e.  return @kind void;
  catch `java.lang.ClassCastException` @[L0c83d2..L0c83ea] goto L0c83ee;
  catch `java.lang.ClassNotFoundException` @[L0c83d2..L0c83ea] goto L0c83ee;
  catch `java.lang.InstantiationException` @[L0c83d2..L0c83ea] goto L0c83ee;
  catch `java.lang.IllegalAccessException` @[L0c83d2..L0c83ea] goto L0c83ee;
}
procedure `void` `<init>`(`kotlin.jvm.internal.Reflection` v0 @kind this) @signature `Lkotlin/jvm/internal/Reflection;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c8438.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c843e.  return @kind void;
}
procedure `kotlin.reflect.KClass` `createKotlinClass`(`java.lang.Class` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.createKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c7f7c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c7f80.  call temp:= `createKotlinClass`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.createKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind virtual;
  #L0c7f86.  v1:= temp @kind object;
  #L0c7f88.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `createKotlinClass`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.createKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c7f9c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c7fa0.  call temp:= `createKotlinClass`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.createKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @kind virtual;
  #L0c7fa6.  v1:= temp @kind object;
  #L0c7fa8.  return v1 @kind object;
}
procedure `kotlin.reflect.KFunction` `function`(`kotlin.jvm.internal.FunctionReference` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8080.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8084.  call temp:= `function`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @kind virtual;
  #L0c808a.  v1:= temp @kind object;
  #L0c808c.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `getOrCreateKotlinClass`(`java.lang.Class` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c7fbc.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c7fc0.  call temp:= `getOrCreateKotlinClass`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind virtual;
  #L0c7fc6.  v1:= temp @kind object;
  #L0c7fc8.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `getOrCreateKotlinClass`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c7fdc.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c7fe0.  call temp:= `getOrCreateKotlinClass`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @kind virtual;
  #L0c7fe6.  v1:= temp @kind object;
  #L0c7fe8.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass`[] `getOrCreateKotlinClasses`(`java.lang.Class`[] v4 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClasses:([Ljava/lang/Class;)[Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0c7ffc.  v0:= length @variable v4;
  #L0c7ffe.  if v0 != 0 then goto L0c8008;
  #L0c8002.  v4:= `@@kotlin.jvm.internal.Reflection.b` @type ^`kotlin.reflect.KClass`[] @kind object;
  #L0c8006.  return v4 @kind object;
  #L0c8008.  v1:= new `kotlin.reflect.KClass`[v0];
  #L0c800c.  v2:= 0I;
  #L0c800e.  if v2 >= v0 then goto L0c8028;
  #L0c8012.  v3:= v4[v2] @kind object;
  #L0c8016.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c801c.  v3:= temp @kind object;
  #L0c801e.  v1[v2]:= v3 @kind object;
  #L0c8022.  v2:= v2 + 1;
  #L0c8026.  goto L0c800e;
  #L0c8028.  return v1 @kind object;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOrCreateKotlinPackage`(`java.lang.Class` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinPackage:(Ljava/lang/Class;)Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0c803c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8040.  v1:= "" @kind object;
  #L0c8044.  call temp:= `getOrCreateKotlinPackage`(v0, v2, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L0c804a.  v2:= temp @kind object;
  #L0c804c.  return v2 @kind object;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOrCreateKotlinPackage`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8060.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8064.  call temp:= `getOrCreateKotlinPackage`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L0c806a.  v1:= temp @kind object;
  #L0c806c.  return v1 @kind object;
}
procedure `kotlin.reflect.KType` `mutableCollectionType`(`kotlin.reflect.KType` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableCollectionType:(Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8160.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8164.  call temp:= `mutableCollectionType`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableCollectionType:(Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @kind virtual;
  #L0c816a.  v1:= temp @kind object;
  #L0c816c.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty0` `mutableProperty0`(`kotlin.jvm.internal.MutablePropertyReference0` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty0:(Lkotlin/jvm/internal/MutablePropertyReference0;)Lkotlin/reflect/KMutableProperty0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c80a0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c80a4.  call temp:= `mutableProperty0`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty0:(Lkotlin/jvm/internal/MutablePropertyReference0;)Lkotlin/reflect/KMutableProperty0;` @kind virtual;
  #L0c80aa.  v1:= temp @kind object;
  #L0c80ac.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty1` `mutableProperty1`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty1:(Lkotlin/jvm/internal/MutablePropertyReference1;)Lkotlin/reflect/KMutableProperty1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c80c0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c80c4.  call temp:= `mutableProperty1`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty1:(Lkotlin/jvm/internal/MutablePropertyReference1;)Lkotlin/reflect/KMutableProperty1;` @kind virtual;
  #L0c80ca.  v1:= temp @kind object;
  #L0c80cc.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty2` `mutableProperty2`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty2:(Lkotlin/jvm/internal/MutablePropertyReference2;)Lkotlin/reflect/KMutableProperty2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c80e0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c80e4.  call temp:= `mutableProperty2`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty2:(Lkotlin/jvm/internal/MutablePropertyReference2;)Lkotlin/reflect/KMutableProperty2;` @kind virtual;
  #L0c80ea.  v1:= temp @kind object;
  #L0c80ec.  return v1 @kind object;
}
procedure `kotlin.reflect.KType` `nothingType`(`kotlin.reflect.KType` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nothingType:(Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8180.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8184.  call temp:= `nothingType`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.nothingType:(Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @kind virtual;
  #L0c818a.  v1:= temp @kind object;
  #L0c818c.  return v1 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0c81a0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c81a4.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c81aa.  v3:= temp @kind object;
  #L0c81ac.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0c81b2.  v1:= temp @kind object;
  #L0c81b4.  v2:= 1I;
  #L0c81b6.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c81bc.  v3:= temp @kind object;
  #L0c81be.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0c81d0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c81d4.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c81da.  v2:= temp @kind object;
  #L0c81dc.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c81e2.  v3:= temp @kind object;
  #L0c81e4.  v1:= 1I;
  #L0c81e6.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c81ec.  v2:= temp @kind object;
  #L0c81ee.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v3 @kind object, `kotlin.reflect.KTypeProjection` v4 @kind object, `kotlin.reflect.KTypeProjection` v5 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0c8200.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8204.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c820a.  v3:= temp @kind object;
  #L0c820c.  v1:= 2I;
  #L0c820e.  v1:= new `kotlin.reflect.KTypeProjection`[v1];
  #L0c8212.  v2:= 0I;
  #L0c8214.  v1[v2]:= v4 @kind object;
  #L0c8218.  v4:= 1I;
  #L0c821a.  v1[v4]:= v5 @kind object;
  #L0c821e.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c8224.  v5:= temp @kind object;
  #L0c8226.  call temp:= `typeOf`(v0, v3, v5, v4) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c822c.  v3:= temp @kind object;
  #L0c822e.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection`[] v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;[Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0c8240.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8244.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c824a.  v2:= temp @kind object;
  #L0c824c.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c8252.  v3:= temp @kind object;
  #L0c8254.  v1:= 1I;
  #L0c8256.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c825c.  v2:= temp @kind object;
  #L0c825e.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`kotlin.reflect.KClassifier` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Lkotlin/reflect/KClassifier;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0c8270.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8274.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0c827a.  v1:= temp @kind object;
  #L0c827c.  v2:= 1I;
  #L0c827e.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c8284.  v3:= temp @kind object;
  #L0c8286.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `platformType`(`kotlin.reflect.KType` v1 @kind object, `kotlin.reflect.KType` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.platformType:(Lkotlin/reflect/KType;Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8298.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c829c.  call temp:= `platformType`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.platformType:(Lkotlin/reflect/KType;Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @kind virtual;
  #L0c82a2.  v1:= temp @kind object;
  #L0c82a4.  return v1 @kind object;
}
procedure `kotlin.reflect.KProperty0` `property0`(`kotlin.jvm.internal.PropertyReference0` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property0:(Lkotlin/jvm/internal/PropertyReference0;)Lkotlin/reflect/KProperty0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8100.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8104.  call temp:= `property0`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property0:(Lkotlin/jvm/internal/PropertyReference0;)Lkotlin/reflect/KProperty0;` @kind virtual;
  #L0c810a.  v1:= temp @kind object;
  #L0c810c.  return v1 @kind object;
}
procedure `kotlin.reflect.KProperty1` `property1`(`kotlin.jvm.internal.PropertyReference1` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8120.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8124.  call temp:= `property1`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @kind virtual;
  #L0c812a.  v1:= temp @kind object;
  #L0c812c.  return v1 @kind object;
}
procedure `kotlin.reflect.KProperty2` `property2`(`kotlin.jvm.internal.PropertyReference2` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property2:(Lkotlin/jvm/internal/PropertyReference2;)Lkotlin/reflect/KProperty2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8140.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8144.  call temp:= `property2`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property2:(Lkotlin/jvm/internal/PropertyReference2;)Lkotlin/reflect/KProperty2;` @kind virtual;
  #L0c814a.  v1:= temp @kind object;
  #L0c814c.  return v1 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.jvm.internal.FunctionBase` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c7f3c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c7f40.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @kind virtual;
  #L0c7f46.  v1:= temp @kind object;
  #L0c7f48.  return v1 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.jvm.internal.Lambda` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/Lambda;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c7f5c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c7f60.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.renderLambdaToString:(Lkotlin/jvm/internal/Lambda;)Ljava/lang/String;` @kind virtual;
  #L0c7f66.  v1:= temp @kind object;
  #L0c7f68.  return v1 @kind object;
}
procedure `void` `setUpperBounds`(`kotlin.reflect.KTypeParameter` v1 @kind object, `kotlin.reflect.KType` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Lkotlin/reflect/KType;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8450.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8454.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c845a.  v2:= temp @kind object;
  #L0c845c.  call `setUpperBounds`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Ljava/util/List;)V` @kind virtual;
  #L0c8462.  return @kind void;
}
procedure `void` `setUpperBounds`(`kotlin.reflect.KTypeParameter` v1 @kind object, `kotlin.reflect.KType`[] v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;[Lkotlin/reflect/KType;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8474.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c8478.  call temp:= `toList`(v2) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c847e.  v2:= temp @kind object;
  #L0c8480.  call `setUpperBounds`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Ljava/util/List;)V` @kind virtual;
  #L0c8486.  return @kind void;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0c82b8.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c82bc.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c82c2.  v3:= temp @kind object;
  #L0c82c4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0c82ca.  v1:= temp @kind object;
  #L0c82cc.  v2:= 0I;
  #L0c82ce.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c82d4.  v3:= temp @kind object;
  #L0c82d6.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0c82e8.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c82ec.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c82f2.  v2:= temp @kind object;
  #L0c82f4.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c82fa.  v3:= temp @kind object;
  #L0c82fc.  v1:= 0I;
  #L0c82fe.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c8304.  v2:= temp @kind object;
  #L0c8306.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v3 @kind object, `kotlin.reflect.KTypeProjection` v4 @kind object, `kotlin.reflect.KTypeProjection` v5 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0c8318.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c831c.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c8322.  v3:= temp @kind object;
  #L0c8324.  v1:= 2I;
  #L0c8326.  v1:= new `kotlin.reflect.KTypeProjection`[v1];
  #L0c832a.  v2:= 0I;
  #L0c832c.  v1[v2]:= v4 @kind object;
  #L0c8330.  v4:= 1I;
  #L0c8332.  v1[v4]:= v5 @kind object;
  #L0c8336.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c833c.  v4:= temp @kind object;
  #L0c833e.  call temp:= `typeOf`(v0, v3, v4, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c8344.  v3:= temp @kind object;
  #L0c8346.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection`[] v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;[Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0c8358.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c835c.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c8362.  v2:= temp @kind object;
  #L0c8364.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c836a.  v3:= temp @kind object;
  #L0c836c.  v1:= 0I;
  #L0c836e.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c8374.  v2:= temp @kind object;
  #L0c8376.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`kotlin.reflect.KClassifier` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Lkotlin/reflect/KClassifier;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0c8388.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c838c.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0c8392.  v1:= temp @kind object;
  #L0c8394.  v2:= 0I;
  #L0c8396.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L0c839c.  v3:= temp @kind object;
  #L0c839e.  return v3 @kind object;
}
procedure `kotlin.reflect.KTypeParameter` `typeParameter`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object, `kotlin.reflect.KVariance` v3 @kind object, `boolean` v4 ) @signature `Lkotlin/jvm/internal/Reflection;.typeParameter:(Ljava/lang/Object;Ljava/lang/String;Lkotlin/reflect/KVariance;Z)Lkotlin/reflect/KTypeParameter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c83b0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L0c83b4.  call temp:= `typeParameter`(v0, v1, v2, v3, v4) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeParameter:(Ljava/lang/Object;Ljava/lang/String;Lkotlin/reflect/KVariance;Z)Lkotlin/reflect/KTypeParameter;` @kind virtual;
  #L0c83ba.  v1:= temp @kind object;
  #L0c83bc.  return v1 @kind object;
}
