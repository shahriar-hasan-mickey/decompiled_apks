record `kotlin.jvm.internal.ClassReference$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.jvm.internal.ClassReference$Companion` v0 @kind this) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0c3b5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c3b62.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.ClassReference$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L0c3b74.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:()V` @kind direct;
  #L0c3b7a.  return @kind void;
}
procedure `java.lang.String` `getClassQualifiedName`(`kotlin.jvm.internal.ClassReference$Companion` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassQualifiedName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0c3910.  v0:= "jClass" @kind object;
  #L0c3914.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c391a.  call temp:= `isAnonymousClass`(v3) @signature `Ljava/lang/Class;.isAnonymousClass:()Z` @kind virtual;
  #L0c3920.  v0:= temp;
  #L0c3922.  v1:= 0I;
  #L0c3924.  if v0 == 0 then goto L0c392a;
  #L0c3928.  goto L0c39d0;
  #L0c392a.  call temp:= `isLocalClass`(v3) @signature `Ljava/lang/Class;.isLocalClass:()Z` @kind virtual;
  #L0c3930.  v0:= temp;
  #L0c3932.  if v0 == 0 then goto L0c3938;
  #L0c3936.  goto L0c39d0;
  #L0c3938.  call temp:= `isArray`(v3) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L0c393e.  v0:= temp;
  #L0c3940.  if v0 == 0 then goto L0c39a6;
  #L0c3944.  call temp:= `getComponentType`(v3) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L0c394a.  v3:= temp @kind object;
  #L0c394c.  call temp:= `isPrimitive`(v3) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L0c3952.  v0:= temp;
  #L0c3954.  if v0 == 0 then goto L0c399c;
  #L0c3958.  call temp:= `access$getClassFqNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getClassFqNames$cp:()Ljava/util/HashMap;` @kind static;
  #L0c395e.  v0:= temp @kind object;
  #L0c3960.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c3966.  v3:= temp @kind object;
  #L0c3968.  call temp:= `get`(v0, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c396e.  v3:= temp @kind object;
  #L0c3970.  v3:= (`java.lang.String`) v3 @kind object;
  #L0c3974.  if v3 == 0 then goto L0c399c;
  #L0c3978.  v0:= new `java.lang.StringBuilder`;
  #L0c397c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c3982.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3988.  v3:= "Array" @kind object;
  #L0c398c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3992.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c3998.  v3:= temp @kind object;
  #L0c399a.  v1:= v3 @kind object;
  #L0c399c.  if v1 != 0 then goto L0c39d0;
  #L0c39a0.  v1:= "kotlin.Array" @kind object;
  #L0c39a4.  goto L0c39d0;
  #L0c39a6.  call temp:= `access$getClassFqNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getClassFqNames$cp:()Ljava/util/HashMap;` @kind static;
  #L0c39ac.  v0:= temp @kind object;
  #L0c39ae.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c39b4.  v1:= temp @kind object;
  #L0c39b6.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c39bc.  v0:= temp @kind object;
  #L0c39be.  v1:= v0 @kind object;
  #L0c39c0.  v1:= (`java.lang.String`) v1 @kind object;
  #L0c39c4.  if v1 != 0 then goto L0c39d0;
  #L0c39c8.  call temp:= `getCanonicalName`(v3) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L0c39ce.  v1:= temp @kind object;
  #L0c39d0.  return v1 @kind object;
}
procedure `java.lang.String` `getClassSimpleName`(`kotlin.jvm.internal.ClassReference$Companion` v7 @kind this, `java.lang.Class` v8 @kind object) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassSimpleName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0c39e4.  v0:= "jClass" @kind object;
  #L0c39e8.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c39ee.  call temp:= `isAnonymousClass`(v8) @signature `Ljava/lang/Class;.isAnonymousClass:()Z` @kind virtual;
  #L0c39f4.  v0:= temp;
  #L0c39f6.  v1:= "Array" @kind object;
  #L0c39fa.  v2:= 0I;
  #L0c39fc.  if v0 == 0 then goto L0c3a06;
  #L0c3a00.  v1:= v2 @kind object;
  #L0c3a02.  goto L0c3b48;
  #L0c3a06.  call temp:= `isLocalClass`(v8) @signature `Ljava/lang/Class;.isLocalClass:()Z` @kind virtual;
  #L0c3a0c.  v0:= temp;
  #L0c3a0e.  if v0 == 0 then goto L0c3aba;
  #L0c3a12.  call temp:= `getSimpleName`(v8) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L0c3a18.  v0:= temp @kind object;
  #L0c3a1a.  call temp:= `getEnclosingMethod`(v8) @signature `Ljava/lang/Class;.getEnclosingMethod:()Ljava/lang/reflect/Method;` @kind virtual;
  #L0c3a20.  v1:= temp @kind object;
  #L0c3a22.  v3:= 2I;
  #L0c3a24.  v4:= 36I;
  #L0c3a28.  v5:= "name" @kind object;
  #L0c3a2c.  if v1 == 0 then goto L0c3a68;
  #L0c3a30.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c3a36.  v6:= new `java.lang.StringBuilder`;
  #L0c3a3a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c3a40.  call temp:= `getName`(v1) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c3a46.  v1:= temp @kind object;
  #L0c3a48.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3a4e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3a54.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c3a5a.  v1:= temp @kind object;
  #L0c3a5c.  call temp:= `substringAfter$default`(v0, v1, v2, v3, v2) @signature `Lkotlin/text/StringsKt;.substringAfter$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c3a62.  v1:= temp @kind object;
  #L0c3a64.  if v1 != 0 then goto L0c3b48;
  #L0c3a68.  call temp:= `getEnclosingConstructor`(v8) @signature `Ljava/lang/Class;.getEnclosingConstructor:()Ljava/lang/reflect/Constructor;` @kind virtual;
  #L0c3a6e.  v8:= temp @kind object;
  #L0c3a70.  if v8 == 0 then goto L0c3aaa;
  #L0c3a74.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c3a7a.  v1:= new `java.lang.StringBuilder`;
  #L0c3a7e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c3a84.  call temp:= `getName`(v8) @signature `Ljava/lang/reflect/Constructor;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c3a8a.  v8:= temp @kind object;
  #L0c3a8c.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3a92.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3a98.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c3a9e.  v8:= temp @kind object;
  #L0c3aa0.  call temp:= `substringAfter$default`(v0, v8, v2, v3, v2) @signature `Lkotlin/text/StringsKt;.substringAfter$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c3aa6.  v1:= temp @kind object;
  #L0c3aa8.  goto L0c3b48;
  #L0c3aaa.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c3ab0.  call temp:= `substringAfter$default`(v0, v4, v2, v3, v2) @signature `Lkotlin/text/StringsKt;.substringAfter$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c3ab6.  v1:= temp @kind object;
  #L0c3ab8.  goto L0c3b48;
  #L0c3aba.  call temp:= `isArray`(v8) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L0c3ac0.  v0:= temp;
  #L0c3ac2.  if v0 == 0 then goto L0c3b1e;
  #L0c3ac6.  call temp:= `getComponentType`(v8) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L0c3acc.  v8:= temp @kind object;
  #L0c3ace.  call temp:= `isPrimitive`(v8) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L0c3ad4.  v0:= temp;
  #L0c3ad6.  if v0 == 0 then goto L0c3b18;
  #L0c3ada.  call temp:= `access$getSimpleNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getSimpleNames$cp:()Ljava/util/Map;` @kind static;
  #L0c3ae0.  v0:= temp @kind object;
  #L0c3ae2.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c3ae8.  v8:= temp @kind object;
  #L0c3aea.  call temp:= `get`(v0, v8) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c3af0.  v8:= temp @kind object;
  #L0c3af2.  v8:= (`java.lang.String`) v8 @kind object;
  #L0c3af6.  if v8 == 0 then goto L0c3b18;
  #L0c3afa.  v0:= new `java.lang.StringBuilder`;
  #L0c3afe.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c3b04.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3b0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3b10.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c3b16.  v2:= temp @kind object;
  #L0c3b18.  if v2 != 0 then goto L0c3a00;
  #L0c3b1c.  goto L0c3b48;
  #L0c3b1e.  call temp:= `access$getSimpleNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getSimpleNames$cp:()Ljava/util/Map;` @kind static;
  #L0c3b24.  v0:= temp @kind object;
  #L0c3b26.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c3b2c.  v1:= temp @kind object;
  #L0c3b2e.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c3b34.  v0:= temp @kind object;
  #L0c3b36.  v1:= v0 @kind object;
  #L0c3b38.  v1:= (`java.lang.String`) v1 @kind object;
  #L0c3b3c.  if v1 != 0 then goto L0c3b48;
  #L0c3b40.  call temp:= `getSimpleName`(v8) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L0c3b46.  v1:= temp @kind object;
  #L0c3b48.  return v1 @kind object;
}
procedure `boolean` `isInstance`(`kotlin.jvm.internal.ClassReference$Companion` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.isInstance:(Ljava/lang/Object;Ljava/lang/Class;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0c389c.  v0:= "jClass" @kind object;
  #L0c38a0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c38a6.  call temp:= `access$getFUNCTION_CLASSES$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getFUNCTION_CLASSES$cp:()Ljava/util/Map;` @kind static;
  #L0c38ac.  v0:= temp @kind object;
  #L0c38ae.  v1:= "null cannot be cast to non-null type kotlin.collections.Map<K of kotlin.collections.MapsKt__MapsKt.get, V of kotlin.collections.MapsKt__MapsKt.get>" @kind object;
  #L0c38b2.  call `checkNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c38b8.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c38be.  v0:= temp @kind object;
  #L0c38c0.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L0c38c4.  if v0 == 0 then goto L0c38da;
  #L0c38c8.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L0c38ce.  v4:= temp;
  #L0c38d0.  call temp:= `isFunctionOfArity`(v3, v4) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isFunctionOfArity:(Ljava/lang/Object;I)Z` @kind static;
  #L0c38d6.  v3:= temp;
  #L0c38d8.  return v3;
  #L0c38da.  call temp:= `isPrimitive`(v4) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L0c38e0.  v0:= temp;
  #L0c38e2.  if v0 == 0 then goto L0c38f6;
  #L0c38e6.  call temp:= `getKotlinClass`(v4) @signature `Lkotlin/jvm/JvmClassMappingKt;.getKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c38ec.  v4:= temp @kind object;
  #L0c38ee.  call temp:= `getJavaObjectType`(v4) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L0c38f4.  v4:= temp @kind object;
  #L0c38f6.  call temp:= `isInstance`(v4, v3) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c38fc.  v3:= temp;
  #L0c38fe.  return v3;
}
