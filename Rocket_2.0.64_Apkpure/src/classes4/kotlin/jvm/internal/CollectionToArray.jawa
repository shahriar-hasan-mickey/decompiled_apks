record `kotlin.jvm.internal.CollectionToArray` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object`[] `@@kotlin.jvm.internal.CollectionToArray.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/CollectionToArray;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0c4814.  v0:= 0I;
  #L0c4816.  v0:= new `java.lang.Object`[v0];
  #L0c481a.  `@@kotlin.jvm.internal.CollectionToArray.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L0c481e.  return @kind void;
}
procedure `java.lang.Object`[] `toArray`(`java.util.Collection` v4 @kind object) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0c4618.  v0:= "collection" @kind object;
  #L0c461c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c4622.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L0c4628.  v0:= temp;
  #L0c462a.  if v0 != 0 then goto L0c4634;
  #L0c462e.  v4:= `@@kotlin.jvm.internal.CollectionToArray.a` @type ^`java.lang.Object`[] @kind object;
  #L0c4632.  goto L0c46d6;
  #L0c4634.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0c463a.  v4:= temp @kind object;
  #L0c463c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c4642.  v1:= temp;
  #L0c4644.  if v1 != 0 then goto L0c464a;
  #L0c4648.  goto L0c462e;
  #L0c464a.  v0:= new `java.lang.Object`[v0];
  #L0c464e.  v1:= 0I;
  #L0c4650.  v2:= v1 + 1;
  #L0c4654.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0c465a.  v3:= temp @kind object;
  #L0c465c.  v0[v1]:= v3 @kind object;
  #L0c4660.  v1:= length @variable v0;
  #L0c4662.  if v2 < v1 then goto L0c46b8;
  #L0c4666.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c466c.  v1:= temp;
  #L0c466e.  if v1 != 0 then goto L0c4676;
  #L0c4672.  v4:= v0 @kind object;
  #L0c4674.  goto L0c46d6;
  #L0c4676.  v1:= v2 * 3;
  #L0c467a.  v1:= v1 + 1;
  #L0c467e.  v1:= v1 ^>> 1;
  #L0c4682.  v3:= 2147483645I;
  #L0c4688.  if v1 > v2 then goto L0c46a4;
  #L0c468c.  if v2 >= v3 then goto L0c4698;
  #L0c4690.  v1:= 2147483645I;
  #L0c4696.  goto L0c46a4;
  #L0c4698.  v4:= new `java.lang.OutOfMemoryError`;
  #L0c469c.  call `<init>`(v4) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L0c46a2.  throw v4;
  #L0c46a4.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0c46aa.  v0:= temp @kind object;
  #L0c46ac.  v1:= "copyOf(result, newSize)" @kind object;
  #L0c46b0.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c46b6.  goto L0c46d8;
  #L0c46b8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c46be.  v1:= temp;
  #L0c46c0.  if v1 != 0 then goto L0c46d8;
  #L0c46c4.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0c46ca.  v4:= temp @kind object;
  #L0c46cc.  v0:= "copyOf(result, size)" @kind object;
  #L0c46d0.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c46d6.  return v4 @kind object;
  #L0c46d8.  v1:= v2;
  #L0c46da.  goto L0c4650;
}
procedure `java.lang.Object`[] `toArray`(`java.util.Collection` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0c46ec.  v0:= "collection" @kind object;
  #L0c46f0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c46f6.  call temp:= `requireNonNull`(v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0c46fc.  call temp:= `size`(v5) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L0c4702.  v0:= temp;
  #L0c4704.  v1:= 0I;
  #L0c4706.  v2:= 0I;
  #L0c4708.  if v0 != 0 then goto L0c471a;
  #L0c470c.  v5:= length @variable v6;
  #L0c470e.  if v5 <= 0 then goto L0c47fc;
  #L0c4712.  v6[v2]:= v1 @kind object;
  #L0c4716.  goto L0c47fc;
  #L0c471a.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0c4720.  v5:= temp @kind object;
  #L0c4722.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c4728.  v3:= temp;
  #L0c472a.  if v3 != 0 then goto L0c473a;
  #L0c472e.  v5:= length @variable v6;
  #L0c4730.  if v5 <= 0 then goto L0c47fc;
  #L0c4734.  v6[v2]:= v1 @kind object;
  #L0c4738.  goto L0c47fc;
  #L0c473a.  v3:= length @variable v6;
  #L0c473c.  if v0 > v3 then goto L0c4744;
  #L0c4740.  v0:= v6 @kind object;
  #L0c4742.  goto L0c476a;
  #L0c4744.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0c474a.  v3:= temp @kind object;
  #L0c474c.  call temp:= `getComponentType`(v3) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L0c4752.  v3:= temp @kind object;
  #L0c4754.  call temp:= `newInstance`(v3, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L0c475a.  v0:= temp @kind object;
  #L0c475c.  v3:= "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>" @kind object;
  #L0c4760.  call `checkNotNull`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c4766.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L0c476a.  v3:= v2 + 1;
  #L0c476e.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0c4774.  v4:= temp @kind object;
  #L0c4776.  v0[v2]:= v4 @kind object;
  #L0c477a.  v2:= length @variable v0;
  #L0c477c.  if v3 < v2 then goto L0c47d2;
  #L0c4780.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c4786.  v2:= temp;
  #L0c4788.  if v2 != 0 then goto L0c4790;
  #L0c478c.  v6:= v0 @kind object;
  #L0c478e.  goto L0c47fc;
  #L0c4790.  v2:= v3 * 3;
  #L0c4794.  v2:= v2 + 1;
  #L0c4798.  v2:= v2 ^>> 1;
  #L0c479c.  v4:= 2147483645I;
  #L0c47a2.  if v2 > v3 then goto L0c47be;
  #L0c47a6.  if v3 >= v4 then goto L0c47b2;
  #L0c47aa.  v2:= 2147483645I;
  #L0c47b0.  goto L0c47be;
  #L0c47b2.  v5:= new `java.lang.OutOfMemoryError`;
  #L0c47b6.  call `<init>`(v5) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L0c47bc.  throw v5;
  #L0c47be.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0c47c4.  v0:= temp @kind object;
  #L0c47c6.  v2:= "copyOf(result, newSize)" @kind object;
  #L0c47ca.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c47d0.  goto L0c47fe;
  #L0c47d2.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c47d8.  v2:= temp;
  #L0c47da.  if v2 != 0 then goto L0c47fe;
  #L0c47de.  if v0 != v6 then goto L0c47e8;
  #L0c47e2.  v6[v3]:= v1 @kind object;
  #L0c47e6.  goto L0c47fc;
  #L0c47e8.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0c47ee.  v5:= temp @kind object;
  #L0c47f0.  v6:= "copyOf(result, size)" @kind object;
  #L0c47f4.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c47fa.  v6:= v5 @kind object;
  #L0c47fc.  return v6 @kind object;
  #L0c47fe.  v2:= v3;
  #L0c4800.  goto L0c476a;
}
