record `kotlin.jvm.internal.TypeIntrinsics` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`kotlin.jvm.internal.TypeIntrinsics` v0 @kind this) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c9008.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c900e.  return @kind void;
}
procedure `java.lang.Throwable` `a`(`java.lang.Throwable` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.a:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L0c8bb8.  v0:= constclass @type ^`kotlin.jvm.internal.TypeIntrinsics` @kind object;
  #L0c8bbc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c8bc2.  v0:= temp @kind object;
  #L0c8bc4.  call temp:= `c`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.c:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;` @kind static;
  #L0c8bca.  v1:= temp @kind object;
  #L0c8bcc.  return v1 @kind object;
}
procedure `java.util.Collection` `asMutableCollection`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableCollection:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8be0.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8be4.  if v0 == 0 then goto L0c8bfa;
  #L0c8be8.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableCollection` @kind boolean;
  #L0c8bec.  if v0 != 0 then goto L0c8bfa;
  #L0c8bf0.  v0:= "kotlin.collections.MutableCollection" @kind object;
  #L0c8bf4.  call `throwCce`(v1, v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8bfa.  call temp:= `castToCollection`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToCollection:(Ljava/lang/Object;)Ljava/util/Collection;` @kind static;
  #L0c8c00.  v1:= temp @kind object;
  #L0c8c02.  return v1 @kind object;
}
procedure `java.util.Collection` `asMutableCollection`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableCollection:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8c14.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8c18.  if v0 == 0 then goto L0c8c2a;
  #L0c8c1c.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableCollection` @kind boolean;
  #L0c8c20.  if v0 != 0 then goto L0c8c2a;
  #L0c8c24.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8c2a.  call temp:= `castToCollection`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToCollection:(Ljava/lang/Object;)Ljava/util/Collection;` @kind static;
  #L0c8c30.  v1:= temp @kind object;
  #L0c8c32.  return v1 @kind object;
}
procedure `java.lang.Iterable` `asMutableIterable`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableIterable:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8aac.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8ab0.  if v0 == 0 then goto L0c8ac6;
  #L0c8ab4.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableIterable` @kind boolean;
  #L0c8ab8.  if v0 != 0 then goto L0c8ac6;
  #L0c8abc.  v0:= "kotlin.collections.MutableIterable" @kind object;
  #L0c8ac0.  call `throwCce`(v1, v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8ac6.  call temp:= `castToIterable`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToIterable:(Ljava/lang/Object;)Ljava/lang/Iterable;` @kind static;
  #L0c8acc.  v1:= temp @kind object;
  #L0c8ace.  return v1 @kind object;
}
procedure `java.lang.Iterable` `asMutableIterable`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableIterable:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8ae0.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8ae4.  if v0 == 0 then goto L0c8af6;
  #L0c8ae8.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableIterable` @kind boolean;
  #L0c8aec.  if v0 != 0 then goto L0c8af6;
  #L0c8af0.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8af6.  call temp:= `castToIterable`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToIterable:(Ljava/lang/Object;)Ljava/lang/Iterable;` @kind static;
  #L0c8afc.  v1:= temp @kind object;
  #L0c8afe.  return v1 @kind object;
}
procedure `java.util.Iterator` `asMutableIterator`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableIterator:(Ljava/lang/Object;)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8c78.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8c7c.  if v0 == 0 then goto L0c8c92;
  #L0c8c80.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableIterator` @kind boolean;
  #L0c8c84.  if v0 != 0 then goto L0c8c92;
  #L0c8c88.  v0:= "kotlin.collections.MutableIterator" @kind object;
  #L0c8c8c.  call `throwCce`(v1, v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8c92.  call temp:= `castToIterator`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToIterator:(Ljava/lang/Object;)Ljava/util/Iterator;` @kind static;
  #L0c8c98.  v1:= temp @kind object;
  #L0c8c9a.  return v1 @kind object;
}
procedure `java.util.Iterator` `asMutableIterator`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableIterator:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8cac.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8cb0.  if v0 == 0 then goto L0c8cc2;
  #L0c8cb4.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableIterator` @kind boolean;
  #L0c8cb8.  if v0 != 0 then goto L0c8cc2;
  #L0c8cbc.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8cc2.  call temp:= `castToIterator`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToIterator:(Ljava/lang/Object;)Ljava/util/Iterator;` @kind static;
  #L0c8cc8.  v1:= temp @kind object;
  #L0c8cca.  return v1 @kind object;
}
procedure `java.util.List` `asMutableList`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableList:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8d10.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8d14.  if v0 == 0 then goto L0c8d2a;
  #L0c8d18.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableList` @kind boolean;
  #L0c8d1c.  if v0 != 0 then goto L0c8d2a;
  #L0c8d20.  v0:= "kotlin.collections.MutableList" @kind object;
  #L0c8d24.  call `throwCce`(v1, v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8d2a.  call temp:= `castToList`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c8d30.  v1:= temp @kind object;
  #L0c8d32.  return v1 @kind object;
}
procedure `java.util.List` `asMutableList`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableList:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8d44.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8d48.  if v0 == 0 then goto L0c8d5a;
  #L0c8d4c.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableList` @kind boolean;
  #L0c8d50.  if v0 != 0 then goto L0c8d5a;
  #L0c8d54.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8d5a.  call temp:= `castToList`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c8d60.  v1:= temp @kind object;
  #L0c8d62.  return v1 @kind object;
}
procedure `java.util.ListIterator` `asMutableListIterator`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableListIterator:(Ljava/lang/Object;)Ljava/util/ListIterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8da8.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8dac.  if v0 == 0 then goto L0c8dc2;
  #L0c8db0.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableListIterator` @kind boolean;
  #L0c8db4.  if v0 != 0 then goto L0c8dc2;
  #L0c8db8.  v0:= "kotlin.collections.MutableListIterator" @kind object;
  #L0c8dbc.  call `throwCce`(v1, v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8dc2.  call temp:= `castToListIterator`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToListIterator:(Ljava/lang/Object;)Ljava/util/ListIterator;` @kind static;
  #L0c8dc8.  v1:= temp @kind object;
  #L0c8dca.  return v1 @kind object;
}
procedure `java.util.ListIterator` `asMutableListIterator`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableListIterator:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/ListIterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8ddc.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8de0.  if v0 == 0 then goto L0c8df2;
  #L0c8de4.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableListIterator` @kind boolean;
  #L0c8de8.  if v0 != 0 then goto L0c8df2;
  #L0c8dec.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8df2.  call temp:= `castToListIterator`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToListIterator:(Ljava/lang/Object;)Ljava/util/ListIterator;` @kind static;
  #L0c8df8.  v1:= temp @kind object;
  #L0c8dfa.  return v1 @kind object;
}
procedure `java.util.Map` `asMutableMap`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableMap:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8e40.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8e44.  if v0 == 0 then goto L0c8e5a;
  #L0c8e48.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableMap` @kind boolean;
  #L0c8e4c.  if v0 != 0 then goto L0c8e5a;
  #L0c8e50.  v0:= "kotlin.collections.MutableMap" @kind object;
  #L0c8e54.  call `throwCce`(v1, v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8e5a.  call temp:= `castToMap`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToMap:(Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L0c8e60.  v1:= temp @kind object;
  #L0c8e62.  return v1 @kind object;
}
procedure `java.util.Map` `asMutableMap`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableMap:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8e74.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8e78.  if v0 == 0 then goto L0c8e8a;
  #L0c8e7c.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableMap` @kind boolean;
  #L0c8e80.  if v0 != 0 then goto L0c8e8a;
  #L0c8e84.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8e8a.  call temp:= `castToMap`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToMap:(Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L0c8e90.  v1:= temp @kind object;
  #L0c8e92.  return v1 @kind object;
}
procedure `java.util.Map$Entry` `asMutableMapEntry`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableMapEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8ed8.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8edc.  if v0 == 0 then goto L0c8ef2;
  #L0c8ee0.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableMap$Entry` @kind boolean;
  #L0c8ee4.  if v0 != 0 then goto L0c8ef2;
  #L0c8ee8.  v0:= "kotlin.collections.MutableMap.MutableEntry" @kind object;
  #L0c8eec.  call `throwCce`(v1, v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8ef2.  call temp:= `castToMapEntry`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToMapEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L0c8ef8.  v1:= temp @kind object;
  #L0c8efa.  return v1 @kind object;
}
procedure `java.util.Map$Entry` `asMutableMapEntry`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableMapEntry:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8f0c.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8f10.  if v0 == 0 then goto L0c8f22;
  #L0c8f14.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableMap$Entry` @kind boolean;
  #L0c8f18.  if v0 != 0 then goto L0c8f22;
  #L0c8f1c.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8f22.  call temp:= `castToMapEntry`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToMapEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L0c8f28.  v1:= temp @kind object;
  #L0c8f2a.  return v1 @kind object;
}
procedure `java.util.Set` `asMutableSet`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableSet:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8f70.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8f74.  if v0 == 0 then goto L0c8f8a;
  #L0c8f78.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableSet` @kind boolean;
  #L0c8f7c.  if v0 != 0 then goto L0c8f8a;
  #L0c8f80.  v0:= "kotlin.collections.MutableSet" @kind object;
  #L0c8f84.  call `throwCce`(v1, v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8f8a.  call temp:= `castToSet`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToSet:(Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L0c8f90.  v1:= temp @kind object;
  #L0c8f92.  return v1 @kind object;
}
procedure `java.util.Set` `asMutableSet`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableSet:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8fa4.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c8fa8.  if v0 == 0 then goto L0c8fba;
  #L0c8fac.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableSet` @kind boolean;
  #L0c8fb0.  if v0 != 0 then goto L0c8fba;
  #L0c8fb4.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8fba.  call temp:= `castToSet`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToSet:(Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L0c8fc0.  v1:= temp @kind object;
  #L0c8fc2.  return v1 @kind object;
}
procedure `java.lang.Object` `beforeCheckcastToFunctionOfArity`(`java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0c8b44.  if v2 == 0 then goto L0c8b7c;
  #L0c8b48.  call temp:= `isFunctionOfArity`(v2, v3) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isFunctionOfArity:(Ljava/lang/Object;I)Z` @kind static;
  #L0c8b4e.  v0:= temp;
  #L0c8b50.  if v0 != 0 then goto L0c8b7c;
  #L0c8b54.  v0:= new `java.lang.StringBuilder`;
  #L0c8b58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c8b5e.  v1:= "kotlin.jvm.functions.Function" @kind object;
  #L0c8b62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c8b68.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c8b6e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c8b74.  v3:= temp @kind object;
  #L0c8b76.  call `throwCce`(v2, v3) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c8b7c.  return v2 @kind object;
}
procedure `java.lang.Object` `beforeCheckcastToFunctionOfArity`(`java.lang.Object` v0 @kind object, `int` v1 , `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;ILjava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8b90.  if v0 == 0 then goto L0c8ba6;
  #L0c8b94.  call temp:= `isFunctionOfArity`(v0, v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isFunctionOfArity:(Ljava/lang/Object;I)Z` @kind static;
  #L0c8b9a.  v1:= temp;
  #L0c8b9c.  if v1 != 0 then goto L0c8ba6;
  #L0c8ba0.  call `throwCce`(v2) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c8ba6.  return v0 @kind object;
}
procedure `java.util.Collection` `castToCollection`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToCollection:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8c44.  v0:= (`java.util.Collection`) v0 @kind object;
  #L0c8c48.  return v0 @kind object;
  #L0c8c4a.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0c8c4c.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c8c52.  v0:= temp @kind object;
  #L0c8c54.  throw v0;
  catch `java.lang.ClassCastException` @[L0c8c44..L0c8c48] goto L0c8c4a;
}
procedure `java.lang.Iterable` `castToIterable`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToIterable:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8b10.  v0:= (`java.lang.Iterable`) v0 @kind object;
  #L0c8b14.  return v0 @kind object;
  #L0c8b16.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0c8b18.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c8b1e.  v0:= temp @kind object;
  #L0c8b20.  throw v0;
  catch `java.lang.ClassCastException` @[L0c8b10..L0c8b14] goto L0c8b16;
}
procedure `java.util.Iterator` `castToIterator`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToIterator:(Ljava/lang/Object;)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8cdc.  v0:= (`java.util.Iterator`) v0 @kind object;
  #L0c8ce0.  return v0 @kind object;
  #L0c8ce2.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0c8ce4.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c8cea.  v0:= temp @kind object;
  #L0c8cec.  throw v0;
  catch `java.lang.ClassCastException` @[L0c8cdc..L0c8ce0] goto L0c8ce2;
}
procedure `java.util.List` `castToList`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToList:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8d74.  v0:= (`java.util.List`) v0 @kind object;
  #L0c8d78.  return v0 @kind object;
  #L0c8d7a.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0c8d7c.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c8d82.  v0:= temp @kind object;
  #L0c8d84.  throw v0;
  catch `java.lang.ClassCastException` @[L0c8d74..L0c8d78] goto L0c8d7a;
}
procedure `java.util.ListIterator` `castToListIterator`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToListIterator:(Ljava/lang/Object;)Ljava/util/ListIterator;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8e0c.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L0c8e10.  return v0 @kind object;
  #L0c8e12.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0c8e14.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c8e1a.  v0:= temp @kind object;
  #L0c8e1c.  throw v0;
  catch `java.lang.ClassCastException` @[L0c8e0c..L0c8e10] goto L0c8e12;
}
procedure `java.util.Map` `castToMap`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToMap:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8ea4.  v0:= (`java.util.Map`) v0 @kind object;
  #L0c8ea8.  return v0 @kind object;
  #L0c8eaa.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0c8eac.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c8eb2.  v0:= temp @kind object;
  #L0c8eb4.  throw v0;
  catch `java.lang.ClassCastException` @[L0c8ea4..L0c8ea8] goto L0c8eaa;
}
procedure `java.util.Map$Entry` `castToMapEntry`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToMapEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8f3c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L0c8f40.  return v0 @kind object;
  #L0c8f42.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0c8f44.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c8f4a.  v0:= temp @kind object;
  #L0c8f4c.  throw v0;
  catch `java.lang.ClassCastException` @[L0c8f3c..L0c8f40] goto L0c8f42;
}
procedure `java.util.Set` `castToSet`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.castToSet:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8fd4.  v0:= (`java.util.Set`) v0 @kind object;
  #L0c8fd8.  return v0 @kind object;
  #L0c8fda.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0c8fdc.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c8fe2.  v0:= temp @kind object;
  #L0c8fe4.  throw v0;
  catch `java.lang.ClassCastException` @[L0c8fd4..L0c8fd8] goto L0c8fda;
}
procedure `int` `getFunctionArity`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.getFunctionArity:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8930.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.FunctionBase` @kind boolean;
  #L0c8934.  if v0 == 0 then goto L0c8946;
  #L0c8938.  v1:= (`kotlin.jvm.internal.FunctionBase`) v1 @kind object;
  #L0c893c.  call temp:= `getArity`(v1) @signature `Lkotlin/jvm/internal/FunctionBase;.getArity:()I` @kind interface;
  #L0c8942.  v1:= temp;
  #L0c8944.  return v1;
  #L0c8946.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function0` @kind boolean;
  #L0c894a.  if v0 == 0 then goto L0c8952;
  #L0c894e.  v1:= 0I;
  #L0c8950.  return v1;
  #L0c8952.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function1` @kind boolean;
  #L0c8956.  if v0 == 0 then goto L0c895e;
  #L0c895a.  v1:= 1I;
  #L0c895c.  return v1;
  #L0c895e.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function2` @kind boolean;
  #L0c8962.  if v0 == 0 then goto L0c896a;
  #L0c8966.  v1:= 2I;
  #L0c8968.  return v1;
  #L0c896a.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function3` @kind boolean;
  #L0c896e.  if v0 == 0 then goto L0c8976;
  #L0c8972.  v1:= 3I;
  #L0c8974.  return v1;
  #L0c8976.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function4` @kind boolean;
  #L0c897a.  if v0 == 0 then goto L0c8982;
  #L0c897e.  v1:= 4I;
  #L0c8980.  return v1;
  #L0c8982.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function5` @kind boolean;
  #L0c8986.  if v0 == 0 then goto L0c898e;
  #L0c898a.  v1:= 5I;
  #L0c898c.  return v1;
  #L0c898e.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function6` @kind boolean;
  #L0c8992.  if v0 == 0 then goto L0c899a;
  #L0c8996.  v1:= 6I;
  #L0c8998.  return v1;
  #L0c899a.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function7` @kind boolean;
  #L0c899e.  if v0 == 0 then goto L0c89a6;
  #L0c89a2.  v1:= 7I;
  #L0c89a4.  return v1;
  #L0c89a6.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function8` @kind boolean;
  #L0c89aa.  if v0 == 0 then goto L0c89b4;
  #L0c89ae.  v1:= 8I;
  #L0c89b2.  return v1;
  #L0c89b4.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function9` @kind boolean;
  #L0c89b8.  if v0 == 0 then goto L0c89c2;
  #L0c89bc.  v1:= 9I;
  #L0c89c0.  return v1;
  #L0c89c2.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function10` @kind boolean;
  #L0c89c6.  if v0 == 0 then goto L0c89d0;
  #L0c89ca.  v1:= 10I;
  #L0c89ce.  return v1;
  #L0c89d0.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function11` @kind boolean;
  #L0c89d4.  if v0 == 0 then goto L0c89de;
  #L0c89d8.  v1:= 11I;
  #L0c89dc.  return v1;
  #L0c89de.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function12` @kind boolean;
  #L0c89e2.  if v0 == 0 then goto L0c89ec;
  #L0c89e6.  v1:= 12I;
  #L0c89ea.  return v1;
  #L0c89ec.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function13` @kind boolean;
  #L0c89f0.  if v0 == 0 then goto L0c89fa;
  #L0c89f4.  v1:= 13I;
  #L0c89f8.  return v1;
  #L0c89fa.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function14` @kind boolean;
  #L0c89fe.  if v0 == 0 then goto L0c8a08;
  #L0c8a02.  v1:= 14I;
  #L0c8a06.  return v1;
  #L0c8a08.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function15` @kind boolean;
  #L0c8a0c.  if v0 == 0 then goto L0c8a16;
  #L0c8a10.  v1:= 15I;
  #L0c8a14.  return v1;
  #L0c8a16.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function16` @kind boolean;
  #L0c8a1a.  if v0 == 0 then goto L0c8a24;
  #L0c8a1e.  v1:= 16I;
  #L0c8a22.  return v1;
  #L0c8a24.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function17` @kind boolean;
  #L0c8a28.  if v0 == 0 then goto L0c8a32;
  #L0c8a2c.  v1:= 17I;
  #L0c8a30.  return v1;
  #L0c8a32.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function18` @kind boolean;
  #L0c8a36.  if v0 == 0 then goto L0c8a40;
  #L0c8a3a.  v1:= 18I;
  #L0c8a3e.  return v1;
  #L0c8a40.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function19` @kind boolean;
  #L0c8a44.  if v0 == 0 then goto L0c8a4e;
  #L0c8a48.  v1:= 19I;
  #L0c8a4c.  return v1;
  #L0c8a4e.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function20` @kind boolean;
  #L0c8a52.  if v0 == 0 then goto L0c8a5c;
  #L0c8a56.  v1:= 20I;
  #L0c8a5a.  return v1;
  #L0c8a5c.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function21` @kind boolean;
  #L0c8a60.  if v0 == 0 then goto L0c8a6a;
  #L0c8a64.  v1:= 21I;
  #L0c8a68.  return v1;
  #L0c8a6a.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.functions.Function22` @kind boolean;
  #L0c8a6e.  if v1 == 0 then goto L0c8a78;
  #L0c8a72.  v1:= 22I;
  #L0c8a76.  return v1;
  #L0c8a78.  v1:= -1I;
  #L0c8a7a.  return v1;
}
procedure `boolean` `isFunctionOfArity`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isFunctionOfArity:(Ljava/lang/Object;I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8784.  v0:= instanceof @variable v1 @type ^`kotlin.Function` @kind boolean;
  #L0c8788.  if v0 == 0 then goto L0c879c;
  #L0c878c.  call temp:= `getFunctionArity`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.getFunctionArity:(Ljava/lang/Object;)I` @kind static;
  #L0c8792.  v1:= temp;
  #L0c8794.  if v1 != v2 then goto L0c879c;
  #L0c8798.  v1:= 1I;
  #L0c879a.  goto L0c879e;
  #L0c879c.  v1:= 0I;
  #L0c879e.  return v1;
}
procedure `boolean` `isMutableCollection`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isMutableCollection:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c87b0.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L0c87b4.  if v0 == 0 then goto L0c87cc;
  #L0c87b8.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c87bc.  if v0 == 0 then goto L0c87c8;
  #L0c87c0.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableCollection` @kind boolean;
  #L0c87c4.  if v1 == 0 then goto L0c87cc;
  #L0c87c8.  v1:= 1I;
  #L0c87ca.  goto L0c87ce;
  #L0c87cc.  v1:= 0I;
  #L0c87ce.  return v1;
}
procedure `boolean` `isMutableIterable`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isMutableIterable:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c87e0.  v0:= instanceof @variable v1 @type ^`java.lang.Iterable` @kind boolean;
  #L0c87e4.  if v0 == 0 then goto L0c87fc;
  #L0c87e8.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c87ec.  if v0 == 0 then goto L0c87f8;
  #L0c87f0.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableIterable` @kind boolean;
  #L0c87f4.  if v1 == 0 then goto L0c87fc;
  #L0c87f8.  v1:= 1I;
  #L0c87fa.  goto L0c87fe;
  #L0c87fc.  v1:= 0I;
  #L0c87fe.  return v1;
}
procedure `boolean` `isMutableIterator`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isMutableIterator:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8810.  v0:= instanceof @variable v1 @type ^`java.util.Iterator` @kind boolean;
  #L0c8814.  if v0 == 0 then goto L0c882c;
  #L0c8818.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c881c.  if v0 == 0 then goto L0c8828;
  #L0c8820.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableIterator` @kind boolean;
  #L0c8824.  if v1 == 0 then goto L0c882c;
  #L0c8828.  v1:= 1I;
  #L0c882a.  goto L0c882e;
  #L0c882c.  v1:= 0I;
  #L0c882e.  return v1;
}
procedure `boolean` `isMutableList`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isMutableList:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8840.  v0:= instanceof @variable v1 @type ^`java.util.List` @kind boolean;
  #L0c8844.  if v0 == 0 then goto L0c885c;
  #L0c8848.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c884c.  if v0 == 0 then goto L0c8858;
  #L0c8850.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableList` @kind boolean;
  #L0c8854.  if v1 == 0 then goto L0c885c;
  #L0c8858.  v1:= 1I;
  #L0c885a.  goto L0c885e;
  #L0c885c.  v1:= 0I;
  #L0c885e.  return v1;
}
procedure `boolean` `isMutableListIterator`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isMutableListIterator:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8870.  v0:= instanceof @variable v1 @type ^`java.util.ListIterator` @kind boolean;
  #L0c8874.  if v0 == 0 then goto L0c888c;
  #L0c8878.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c887c.  if v0 == 0 then goto L0c8888;
  #L0c8880.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableListIterator` @kind boolean;
  #L0c8884.  if v1 == 0 then goto L0c888c;
  #L0c8888.  v1:= 1I;
  #L0c888a.  goto L0c888e;
  #L0c888c.  v1:= 0I;
  #L0c888e.  return v1;
}
procedure `boolean` `isMutableMap`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isMutableMap:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c88a0.  v0:= instanceof @variable v1 @type ^`java.util.Map` @kind boolean;
  #L0c88a4.  if v0 == 0 then goto L0c88bc;
  #L0c88a8.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c88ac.  if v0 == 0 then goto L0c88b8;
  #L0c88b0.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableMap` @kind boolean;
  #L0c88b4.  if v1 == 0 then goto L0c88bc;
  #L0c88b8.  v1:= 1I;
  #L0c88ba.  goto L0c88be;
  #L0c88bc.  v1:= 0I;
  #L0c88be.  return v1;
}
procedure `boolean` `isMutableMapEntry`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isMutableMapEntry:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c88d0.  v0:= instanceof @variable v1 @type ^`java.util.Map$Entry` @kind boolean;
  #L0c88d4.  if v0 == 0 then goto L0c88ec;
  #L0c88d8.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c88dc.  if v0 == 0 then goto L0c88e8;
  #L0c88e0.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableMap$Entry` @kind boolean;
  #L0c88e4.  if v1 == 0 then goto L0c88ec;
  #L0c88e8.  v1:= 1I;
  #L0c88ea.  goto L0c88ee;
  #L0c88ec.  v1:= 0I;
  #L0c88ee.  return v1;
}
procedure `boolean` `isMutableSet`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isMutableSet:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c8900.  v0:= instanceof @variable v1 @type ^`java.util.Set` @kind boolean;
  #L0c8904.  if v0 == 0 then goto L0c891c;
  #L0c8908.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMappedMarker` @kind boolean;
  #L0c890c.  if v0 == 0 then goto L0c8918;
  #L0c8910.  v1:= instanceof @variable v1 @type ^`kotlin.jvm.internal.markers.KMutableSet` @kind boolean;
  #L0c8914.  if v1 == 0 then goto L0c891c;
  #L0c8918.  v1:= 1I;
  #L0c891a.  goto L0c891e;
  #L0c891c.  v1:= 0I;
  #L0c891e.  return v1;
}
procedure `java.lang.ClassCastException` `throwCce`(`java.lang.ClassCastException` v0 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0c8a8c.  call temp:= `a`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.a:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L0c8a92.  v0:= temp @kind object;
  #L0c8a94.  v0:= (`java.lang.ClassCastException`) v0 @kind object;
  #L0c8a98.  throw v0;
}
procedure `void` `throwCce`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c9020.  if v1 != 0 then goto L0c902a;
  #L0c9024.  v1:= "null" @kind object;
  #L0c9028.  goto L0c903a;
  #L0c902a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0c9030.  v1:= temp @kind object;
  #L0c9032.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c9038.  v1:= temp @kind object;
  #L0c903a.  v0:= new `java.lang.StringBuilder`;
  #L0c903e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c9044.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c904a.  v1:= " cannot be cast to " @kind object;
  #L0c904e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c9054.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c905a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c9060.  v1:= temp @kind object;
  #L0c9062.  call `throwCce`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L0c9068.  return @kind void;
}
procedure `void` `throwCce`(`java.lang.String` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0c907c.  v0:= new `java.lang.ClassCastException`;
  #L0c9080.  call `<init>`(v0, v1) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0c9086.  call temp:= `throwCce`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L0c908c.  v1:= temp @kind object;
  #L0c908e.  throw v1;
}
