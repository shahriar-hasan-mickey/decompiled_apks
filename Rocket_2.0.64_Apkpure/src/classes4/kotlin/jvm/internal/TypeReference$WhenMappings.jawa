record `kotlin.jvm.internal.TypeReference$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.jvm.internal.TypeReference$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/TypeReference$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0c93e8.  call temp:= `values`() @signature `Lkotlin/reflect/KVariance;.values:()[Lkotlin/reflect/KVariance;` @kind static;
  #L0c93ee.  v0:= temp @kind object;
  #L0c93f0.  v0:= length @variable v0;
  #L0c93f2.  v0:= new `int`[v0];
  #L0c93f6.  v1:= `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0c93fa.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0c9400.  v1:= temp;
  #L0c9402.  v2:= 1I;
  #L0c9404.  v0[v1]:= v2;
  #L0c9408.  v1:= `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0c940c.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0c9412.  v1:= temp;
  #L0c9414.  v2:= 2I;
  #L0c9416.  v0[v1]:= v2;
  #L0c941a.  v1:= `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0c941e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0c9424.  v1:= temp;
  #L0c9426.  v2:= 3I;
  #L0c9428.  v0[v1]:= v2;
  #L0c942c.  `@@kotlin.jvm.internal.TypeReference$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L0c9430.  return @kind void;
}
