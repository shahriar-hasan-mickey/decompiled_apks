record `kotlin.jvm.internal.MutablePropertyReference2` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.jvm.internal.MutablePropertyReference` @kind class, `kotlin.reflect.KMutableProperty2` @kind interface {
}
procedure `void` `<init>`(`kotlin.jvm.internal.MutablePropertyReference2` v0 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c70ac.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/MutablePropertyReference;.<init>:()V` @kind direct;
  #L0c70b2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.MutablePropertyReference2` v6 @kind this, `java.lang.Class` v7 @kind object, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 ) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.<init>:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0c70c4.  v1:= `@@kotlin.jvm.internal.CallableReference.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L0c70c8.  v0:= v6 @kind object;
  #L0c70ca.  v2:= v7 @kind object;
  #L0c70cc.  v3:= v8 @kind object;
  #L0c70ce.  v4:= v9 @kind object;
  #L0c70d0.  v5:= v10;
  #L0c70d2.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/MutablePropertyReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L0c70d8.  return @kind void;
}
procedure `kotlin.reflect.KCallable` `computeReflected`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.computeReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0c7008.  call temp:= `mutableProperty2`(v1) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty2:(Lkotlin/jvm/internal/MutablePropertyReference2;)Lkotlin/reflect/KMutableProperty2;` @kind static;
  #L0c700e.  v0:= temp @kind object;
  #L0c7010.  return v0 @kind object;
}
procedure `java.lang.Object` `getDelegate`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getDelegate:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c6fc4.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L0c6fca.  v0:= temp @kind object;
  #L0c6fcc.  v0:= (`kotlin.reflect.KMutableProperty2`) v0 @kind object;
  #L0c6fd0.  call temp:= `getDelegate`(v0, v2, v3) @signature `Lkotlin/reflect/KProperty2;.getDelegate:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c6fd6.  v2:= temp @kind object;
  #L0c6fd8.  return v2 @kind object;
}
procedure `kotlin.reflect.KProperty$Getter` `getGetter`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getGetter:()Lkotlin/reflect/KProperty$Getter;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L0c7068.  call temp:= `getGetter`(v1) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getGetter:()Lkotlin/reflect/KProperty2$Getter;` @kind virtual;
  #L0c706e.  v0:= temp @kind object;
  #L0c7070.  return v0 @kind object;
}
procedure `kotlin.reflect.KProperty2$Getter` `getGetter`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getGetter:()Lkotlin/reflect/KProperty2$Getter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c7084.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L0c708a.  v0:= temp @kind object;
  #L0c708c.  v0:= (`kotlin.reflect.KMutableProperty2`) v0 @kind object;
  #L0c7090.  call temp:= `getGetter`(v0) @signature `Lkotlin/reflect/KProperty2;.getGetter:()Lkotlin/reflect/KProperty2$Getter;` @kind interface;
  #L0c7096.  v0:= temp @kind object;
  #L0c7098.  return v0 @kind object;
}
procedure `kotlin.reflect.KMutableProperty$Setter` `getSetter`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getSetter:()Lkotlin/reflect/KMutableProperty$Setter;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L0c7024.  call temp:= `getSetter`(v1) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getSetter:()Lkotlin/reflect/KMutableProperty2$Setter;` @kind virtual;
  #L0c702a.  v0:= temp @kind object;
  #L0c702c.  return v0 @kind object;
}
procedure `kotlin.reflect.KMutableProperty2$Setter` `getSetter`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getSetter:()Lkotlin/reflect/KMutableProperty2$Setter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c7040.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L0c7046.  v0:= temp @kind object;
  #L0c7048.  v0:= (`kotlin.reflect.KMutableProperty2`) v0 @kind object;
  #L0c704c.  call temp:= `getSetter`(v0) @signature `Lkotlin/reflect/KMutableProperty2;.getSetter:()Lkotlin/reflect/KMutableProperty2$Setter;` @kind interface;
  #L0c7052.  v0:= temp @kind object;
  #L0c7054.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.jvm.internal.MutablePropertyReference2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L0c6fec.  call temp:= `get`(v0, v1, v2) @signature `Lkotlin/reflect/KProperty2;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c6ff2.  v1:= temp @kind object;
  #L0c6ff4.  return v1 @kind object;
}
