record `kotlin.jvm.internal.SpreadBuilder` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayList` `kotlin.jvm.internal.SpreadBuilder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/jvm/internal/SpreadBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0c860c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c8612.  v0:= new `java.util.ArrayList`;
  #L0c8616.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0c861c.  v1.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L0c8620.  return @kind void;
}
procedure `void` `add`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c8634.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L0c8638.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c863e.  return @kind void;
}
procedure `void` `addSpread`(`kotlin.jvm.internal.SpreadBuilder` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.addSpread:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0c8650.  if v4 != 0 then goto L0c8656;
  #L0c8654.  return @kind void;
  #L0c8656.  v0:= instanceof @variable v4 @type ^`java.lang.Object`[] @kind boolean;
  #L0c865a.  if v0 == 0 then goto L0c868a;
  #L0c865e.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L0c8662.  v0:= length @variable v4;
  #L0c8664.  if v0 <= 0 then goto L0c8702;
  #L0c8668.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L0c866c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L0c8672.  v1:= temp;
  #L0c8674.  v2:= length @variable v4;
  #L0c8676.  v1:= v1 + v2 @kind int;
  #L0c8678.  call `ensureCapacity`(v0, v1) @signature `Ljava/util/ArrayList;.ensureCapacity:(I)V` @kind virtual;
  #L0c867e.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L0c8682.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L0c8688.  goto L0c8702;
  #L0c868a.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L0c868e.  if v0 == 0 then goto L0c86a2;
  #L0c8692.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L0c8696.  v4:= (`java.util.Collection`) v4 @kind object;
  #L0c869a.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L0c86a0.  goto L0c8702;
  #L0c86a2.  v0:= instanceof @variable v4 @type ^`java.lang.Iterable` @kind boolean;
  #L0c86a6.  if v0 == 0 then goto L0c86d6;
  #L0c86aa.  v4:= (`java.lang.Iterable`) v4 @kind object;
  #L0c86ae.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0c86b4.  v4:= temp @kind object;
  #L0c86b6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c86bc.  v0:= temp;
  #L0c86be.  if v0 == 0 then goto L0c8702;
  #L0c86c2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0c86c8.  v0:= temp @kind object;
  #L0c86ca.  v1:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L0c86ce.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c86d4.  goto L0c86b6;
  #L0c86d6.  v0:= instanceof @variable v4 @type ^`java.util.Iterator` @kind boolean;
  #L0c86da.  if v0 == 0 then goto L0c8704;
  #L0c86de.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L0c86e2.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c86e8.  v0:= temp;
  #L0c86ea.  if v0 == 0 then goto L0c8702;
  #L0c86ee.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L0c86f2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0c86f8.  v1:= temp @kind object;
  #L0c86fa.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c8700.  goto L0c86e2;
  #L0c8702.  return @kind void;
  #L0c8704.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0c8708.  v1:= new `java.lang.StringBuilder`;
  #L0c870c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c8712.  v2:= "Don't know how to spread " @kind object;
  #L0c8716.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c871c.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0c8722.  v4:= temp @kind object;
  #L0c8724.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c872a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c8730.  v4:= temp @kind object;
  #L0c8732.  call `<init>`(v0, v4) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0c8738.  throw v0;
}
procedure `int` `size`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this) @signature `Lkotlin/jvm/internal/SpreadBuilder;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c85cc.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L0c85d0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L0c85d6.  v0:= temp;
  #L0c85d8.  return v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c85ec.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L0c85f0.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L0c85f6.  v2:= temp @kind object;
  #L0c85f8.  return v2 @kind object;
}
