record `kotlin.jvm.internal.FunctionReference` @kind class @AccessFlag PUBLIC extends `kotlin.jvm.internal.CallableReference` @kind class, `kotlin.jvm.internal.FunctionBase` @kind interface, `kotlin.reflect.KFunction` @kind interface {
  `int` `kotlin.jvm.internal.FunctionReference.arity` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.FunctionReference.flags` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v7 @kind this, `int` v8 ) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0c5bd8.  v2:= `@@kotlin.jvm.internal.CallableReference.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L0c5bdc.  v3:= 0I;
  #L0c5bde.  v4:= 0I;
  #L0c5be0.  v5:= 0I;
  #L0c5be2.  v6:= 0I;
  #L0c5be4.  v0:= v7 @kind object;
  #L0c5be6.  v1:= v8;
  #L0c5be8.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L0c5bee.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v7 @kind this, `int` v8 , `java.lang.Object` v9 @kind object) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0c5c00.  v3:= 0I;
  #L0c5c02.  v4:= 0I;
  #L0c5c04.  v5:= 0I;
  #L0c5c06.  v6:= 0I;
  #L0c5c08.  v0:= v7 @kind object;
  #L0c5c0a.  v1:= v8;
  #L0c5c0c.  v2:= v9 @kind object;
  #L0c5c0e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L0c5c14.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v8 @kind this, `int` v9 , `java.lang.Object` v10 @kind object, `java.lang.Class` v11 @kind object, `java.lang.String` v12 @kind object, `java.lang.String` v13 @kind object, `int` v14 ) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0c5c28.  v0:= v14 ^& 1;
  #L0c5c2c.  v1:= 1I;
  #L0c5c2e.  if v0 != v1 then goto L0c5c36;
  #L0c5c32.  v7:= 1I;
  #L0c5c34.  goto L0c5c3a;
  #L0c5c36.  v0:= 0I;
  #L0c5c38.  v7:= 0I;
  #L0c5c3a.  v2:= v8 @kind object;
  #L0c5c3c.  v3:= v10 @kind object;
  #L0c5c3e.  v4:= v11 @kind object;
  #L0c5c40.  v5:= v12 @kind object;
  #L0c5c42.  v6:= v13 @kind object;
  #L0c5c44.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L0c5c4a.  v8.`kotlin.jvm.internal.FunctionReference.arity` @type ^`int` := v9;
  #L0c5c4e.  v9:= v14 ^> 1;
  #L0c5c52.  v8.`kotlin.jvm.internal.FunctionReference.flags` @type ^`int` := v9;
  #L0c5c56.  return @kind void;
}
procedure `kotlin.reflect.KCallable` `computeReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.computeReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0c5b80.  call temp:= `function`(v1) @signature `Lkotlin/jvm/internal/Reflection;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @kind static;
  #L0c5b86.  v0:= temp @kind object;
  #L0c5b88.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.FunctionReference` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/FunctionReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0c5908.  v0:= 1I;
  #L0c590a.  if v5 != v4 then goto L0c5910;
  #L0c590e.  return v0;
  #L0c5910.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.FunctionReference` @kind boolean;
  #L0c5914.  v2:= 0I;
  #L0c5916.  if v1 == 0 then goto L0c59ac;
  #L0c591a.  v5:= (`kotlin.jvm.internal.FunctionReference`) v5 @kind object;
  #L0c591e.  call temp:= `getName`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c5924.  v1:= temp @kind object;
  #L0c5926.  call temp:= `getName`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c592c.  v3:= temp @kind object;
  #L0c592e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c5934.  v1:= temp;
  #L0c5936.  if v1 == 0 then goto L0c59a8;
  #L0c593a.  call temp:= `getSignature`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L0c5940.  v1:= temp @kind object;
  #L0c5942.  call temp:= `getSignature`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L0c5948.  v3:= temp @kind object;
  #L0c594a.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c5950.  v1:= temp;
  #L0c5952.  if v1 == 0 then goto L0c59a8;
  #L0c5956.  v1:= v4.`kotlin.jvm.internal.FunctionReference.flags` @type ^`int`;
  #L0c595a.  v3:= v5.`kotlin.jvm.internal.FunctionReference.flags` @type ^`int`;
  #L0c595e.  if v1 != v3 then goto L0c59a8;
  #L0c5962.  v1:= v4.`kotlin.jvm.internal.FunctionReference.arity` @type ^`int`;
  #L0c5966.  v3:= v5.`kotlin.jvm.internal.FunctionReference.arity` @type ^`int`;
  #L0c596a.  if v1 != v3 then goto L0c59a8;
  #L0c596e.  call temp:= `getBoundReceiver`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L0c5974.  v1:= temp @kind object;
  #L0c5976.  call temp:= `getBoundReceiver`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L0c597c.  v3:= temp @kind object;
  #L0c597e.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c5984.  v1:= temp;
  #L0c5986.  if v1 == 0 then goto L0c59a8;
  #L0c598a.  call temp:= `getOwner`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L0c5990.  v1:= temp @kind object;
  #L0c5992.  call temp:= `getOwner`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L0c5998.  v5:= temp @kind object;
  #L0c599a.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c59a0.  v5:= temp;
  #L0c59a2.  if v5 == 0 then goto L0c59a8;
  #L0c59a6.  goto L0c59aa;
  #L0c59a8.  v0:= 0I;
  #L0c59aa.  return v0;
  #L0c59ac.  v0:= instanceof @variable v5 @type ^`kotlin.reflect.KFunction` @kind boolean;
  #L0c59b0.  if v0 == 0 then goto L0c59c6;
  #L0c59b4.  call temp:= `compute`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L0c59ba.  v0:= temp @kind object;
  #L0c59bc.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c59c2.  v5:= temp;
  #L0c59c4.  return v5;
  #L0c59c6.  return v2;
}
procedure `int` `getArity`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c5a8c.  v0:= v1.`kotlin.jvm.internal.FunctionReference.arity` @type ^`int`;
  #L0c5a90.  return v0;
}
procedure `kotlin.reflect.KCallable` `getReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L0c5b9c.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L0c5ba2.  v0:= temp @kind object;
  #L0c5ba4.  return v0 @kind object;
}
procedure `kotlin.reflect.KFunction` `getReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0c5bb8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/CallableReference;.getReflected:()Lkotlin/reflect/KCallable;` @kind super;
  #L0c5bbe.  v0:= temp @kind object;
  #L0c5bc0.  v0:= (`kotlin.reflect.KFunction`) v0 @kind object;
  #L0c5bc4.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.FunctionReference` v2 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c5aa4.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L0c5aaa.  v0:= temp @kind object;
  #L0c5aac.  if v0 != 0 then goto L0c5ab4;
  #L0c5ab0.  v0:= 0I;
  #L0c5ab2.  goto L0c5ac8;
  #L0c5ab4.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L0c5aba.  v0:= temp @kind object;
  #L0c5abc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0c5ac2.  v0:= temp;
  #L0c5ac4.  v0:= v0 * 31;
  #L0c5ac8.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c5ace.  v1:= temp @kind object;
  #L0c5ad0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0c5ad6.  v1:= temp;
  #L0c5ad8.  v0:= v0 + v1 @kind int;
  #L0c5ada.  v0:= v0 * 31;
  #L0c5ade.  call temp:= `getSignature`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L0c5ae4.  v1:= temp @kind object;
  #L0c5ae6.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0c5aec.  v1:= temp;
  #L0c5aee.  v0:= v0 + v1 @kind int;
  #L0c5af0.  return v0;
}
procedure `boolean` `isExternal`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isExternal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c59d8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L0c59de.  v0:= temp @kind object;
  #L0c59e0.  call temp:= `isExternal`(v0) @signature `Lkotlin/reflect/KFunction;.isExternal:()Z` @kind interface;
  #L0c59e6.  v0:= temp;
  #L0c59e8.  return v0;
}
procedure `boolean` `isInfix`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isInfix:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c59fc.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L0c5a02.  v0:= temp @kind object;
  #L0c5a04.  call temp:= `isInfix`(v0) @signature `Lkotlin/reflect/KFunction;.isInfix:()Z` @kind interface;
  #L0c5a0a.  v0:= temp;
  #L0c5a0c.  return v0;
}
procedure `boolean` `isInline`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c5a20.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L0c5a26.  v0:= temp @kind object;
  #L0c5a28.  call temp:= `isInline`(v0) @signature `Lkotlin/reflect/KFunction;.isInline:()Z` @kind interface;
  #L0c5a2e.  v0:= temp;
  #L0c5a30.  return v0;
}
procedure `boolean` `isOperator`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isOperator:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c5a44.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L0c5a4a.  v0:= temp @kind object;
  #L0c5a4c.  call temp:= `isOperator`(v0) @signature `Lkotlin/reflect/KFunction;.isOperator:()Z` @kind interface;
  #L0c5a52.  v0:= temp;
  #L0c5a54.  return v0;
}
procedure `boolean` `isSuspend`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isSuspend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c5a68.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L0c5a6e.  v0:= temp @kind object;
  #L0c5a70.  call temp:= `isSuspend`(v0) @signature `Lkotlin/reflect/KFunction;.isSuspend:()Z` @kind interface;
  #L0c5a76.  v0:= temp;
  #L0c5a78.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.FunctionReference` v2 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c5b04.  call temp:= `compute`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L0c5b0a.  v0:= temp @kind object;
  #L0c5b0c.  if v0 == v2 then goto L0c5b1a;
  #L0c5b10.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c5b16.  v0:= temp @kind object;
  #L0c5b18.  return v0 @kind object;
  #L0c5b1a.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c5b20.  v0:= temp @kind object;
  #L0c5b22.  v1:= "<init>" @kind object;
  #L0c5b26.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c5b2c.  v0:= temp;
  #L0c5b2e.  if v0 == 0 then goto L0c5b38;
  #L0c5b32.  v0:= "constructor (Kotlin reflection is not available)" @kind object;
  #L0c5b36.  goto L0c5b6c;
  #L0c5b38.  v0:= new `java.lang.StringBuilder`;
  #L0c5b3c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c5b42.  v1:= "function " @kind object;
  #L0c5b46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c5b4c.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c5b52.  v1:= temp @kind object;
  #L0c5b54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c5b5a.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L0c5b5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c5b64.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c5b6a.  v0:= temp @kind object;
  #L0c5b6c.  return v0 @kind object;
}
