record `kotlin.jvm.internal.PackageReference` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.jvm.internal.ClassBasedDeclarationContainer` @kind interface {
  `java.lang.Class` `kotlin.jvm.internal.PackageReference.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.jvm.internal.PackageReference.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.PackageReference` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlin/jvm/internal/PackageReference;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0c7210.  v0:= "jClass" @kind object;
  #L0c7214.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c721a.  v0:= "moduleName" @kind object;
  #L0c721e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c7224.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c722a.  v1.`kotlin.jvm.internal.PackageReference.a` @type ^`java.lang.Class` := v2 @kind object;
  #L0c722e.  v1.`kotlin.jvm.internal.PackageReference.b` @type ^`java.lang.String` := v3 @kind object;
  #L0c7232.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.PackageReference` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/PackageReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c7134.  v0:= instanceof @variable v2 @type ^`kotlin.jvm.internal.PackageReference` @kind boolean;
  #L0c7138.  if v0 == 0 then goto L0c7160;
  #L0c713c.  call temp:= `getJClass`(v1) @signature `Lkotlin/jvm/internal/PackageReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L0c7142.  v0:= temp @kind object;
  #L0c7144.  v2:= (`kotlin.jvm.internal.PackageReference`) v2 @kind object;
  #L0c7148.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/PackageReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L0c714e.  v2:= temp @kind object;
  #L0c7150.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c7156.  v2:= temp;
  #L0c7158.  if v2 == 0 then goto L0c7160;
  #L0c715c.  v2:= 1I;
  #L0c715e.  goto L0c7162;
  #L0c7160.  v2:= 0I;
  #L0c7162.  return v2;
}
procedure `java.lang.Class` `getJClass`(`kotlin.jvm.internal.PackageReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PackageReference;.getJClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c7198.  v0:= v1.`kotlin.jvm.internal.PackageReference.a` @type ^`java.lang.Class` @kind object;
  #L0c719c.  return v0 @kind object;
}
procedure `java.util.Collection` `getMembers`(`kotlin.jvm.internal.PackageReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PackageReference;.getMembers:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c71f4.  v0:= new `kotlin.jvm.KotlinReflectionNotSupportedError`;
  #L0c71f8.  call `<init>`(v0) @signature `Lkotlin/jvm/KotlinReflectionNotSupportedError;.<init>:()V` @kind direct;
  #L0c71fe.  throw v0;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.PackageReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PackageReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c7174.  call temp:= `getJClass`(v1) @signature `Lkotlin/jvm/internal/PackageReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L0c717a.  v0:= temp @kind object;
  #L0c717c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Class;.hashCode:()I` @kind virtual;
  #L0c7182.  v0:= temp;
  #L0c7184.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.PackageReference` v2 @kind this) @signature `Lkotlin/jvm/internal/PackageReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c71b0.  v0:= new `java.lang.StringBuilder`;
  #L0c71b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c71ba.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/PackageReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L0c71c0.  v1:= temp @kind object;
  #L0c71c2.  call temp:= `toString`(v1) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c71c8.  v1:= temp @kind object;
  #L0c71ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c71d0.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L0c71d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c71da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c71e0.  v0:= temp @kind object;
  #L0c71e2.  return v0 @kind object;
}
