record `kotlin.jvm.internal.CallableReference$a` @kind class @AccessFlag  extends `java.io.Serializable` @kind interface {
}
global `kotlin.jvm.internal.CallableReference$a` `@@kotlin.jvm.internal.CallableReference$a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/CallableReference$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0c3434.  v0:= new `kotlin.jvm.internal.CallableReference$a`;
  #L0c3438.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/CallableReference$a;.<init>:()V` @kind direct;
  #L0c343e.  `@@kotlin.jvm.internal.CallableReference$a.a` @type ^`kotlin.jvm.internal.CallableReference$a` := v0 @kind object;
  #L0c3442.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.CallableReference$a` v0 @kind this) @signature `Lkotlin/jvm/internal/CallableReference$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0c3454.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c345a.  return @kind void;
}
procedure `kotlin.jvm.internal.CallableReference$a` `a`() @signature `Lkotlin/jvm/internal/CallableReference$a;.a:()Lkotlin/jvm/internal/CallableReference$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L0c341c.  v0:= `@@kotlin.jvm.internal.CallableReference$a.a` @type ^`kotlin.jvm.internal.CallableReference$a` @kind object;
  #L0c3420.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`kotlin.jvm.internal.CallableReference$a` v1 @kind this) @signature `Lkotlin/jvm/internal/CallableReference$a;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L0c3404.  v0:= `@@kotlin.jvm.internal.CallableReference$a.a` @type ^`kotlin.jvm.internal.CallableReference$a` @kind object;
  #L0c3408.  return v0 @kind object;
}
