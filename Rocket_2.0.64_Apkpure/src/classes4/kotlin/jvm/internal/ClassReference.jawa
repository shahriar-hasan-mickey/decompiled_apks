record `kotlin.jvm.internal.ClassReference` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.reflect.KClass` @kind interface, `kotlin.jvm.internal.ClassBasedDeclarationContainer` @kind interface {
  `java.lang.Class` `kotlin.jvm.internal.ClassReference.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.jvm.internal.ClassReference$Companion` `@@kotlin.jvm.internal.ClassReference.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Map` `@@kotlin.jvm.internal.ClassReference.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@kotlin.jvm.internal.ClassReference.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/ClassReference;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L0c3fb0.  v0:= new `kotlin.jvm.internal.ClassReference$Companion`;
  #L0c3fb4.  v1:= 0I;
  #L0c3fb6.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0c3fbc.  `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` := v0 @kind object;
  #L0c3fc0.  v0:= 23I;
  #L0c3fc4.  v0:= new `java.lang.Class`[v0];
  #L0c3fc8.  v2:= constclass @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L0c3fcc.  v3:= 0I;
  #L0c3fce.  v0[v3]:= v2 @kind object;
  #L0c3fd2.  v2:= constclass @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0c3fd6.  v4:= 1I;
  #L0c3fd8.  v0[v4]:= v2 @kind object;
  #L0c3fdc.  v2:= constclass @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L0c3fe0.  v4:= 2I;
  #L0c3fe2.  v0[v4]:= v2 @kind object;
  #L0c3fe6.  v2:= 3I;
  #L0c3fe8.  v5:= constclass @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L0c3fec.  v0[v2]:= v5 @kind object;
  #L0c3ff0.  v2:= 4I;
  #L0c3ff2.  v5:= constclass @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L0c3ff6.  v0[v2]:= v5 @kind object;
  #L0c3ffa.  v2:= 5I;
  #L0c3ffc.  v5:= constclass @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L0c4000.  v0[v2]:= v5 @kind object;
  #L0c4004.  v2:= 6I;
  #L0c4006.  v5:= constclass @type ^`kotlin.jvm.functions.Function6` @kind object;
  #L0c400a.  v0[v2]:= v5 @kind object;
  #L0c400e.  v2:= 7I;
  #L0c4010.  v5:= constclass @type ^`kotlin.jvm.functions.Function7` @kind object;
  #L0c4014.  v0[v2]:= v5 @kind object;
  #L0c4018.  v2:= 8I;
  #L0c401c.  v5:= constclass @type ^`kotlin.jvm.functions.Function8` @kind object;
  #L0c4020.  v0[v2]:= v5 @kind object;
  #L0c4024.  v2:= 9I;
  #L0c4028.  v5:= constclass @type ^`kotlin.jvm.functions.Function9` @kind object;
  #L0c402c.  v0[v2]:= v5 @kind object;
  #L0c4030.  v2:= constclass @type ^`kotlin.jvm.functions.Function10` @kind object;
  #L0c4034.  v5:= 10I;
  #L0c4038.  v0[v5]:= v2 @kind object;
  #L0c403c.  v2:= 11I;
  #L0c4040.  v6:= constclass @type ^`kotlin.jvm.functions.Function11` @kind object;
  #L0c4044.  v0[v2]:= v6 @kind object;
  #L0c4048.  v2:= 12I;
  #L0c404c.  v6:= constclass @type ^`kotlin.jvm.functions.Function12` @kind object;
  #L0c4050.  v0[v2]:= v6 @kind object;
  #L0c4054.  v2:= 13I;
  #L0c4058.  v6:= constclass @type ^`kotlin.jvm.functions.Function13` @kind object;
  #L0c405c.  v0[v2]:= v6 @kind object;
  #L0c4060.  v2:= 14I;
  #L0c4064.  v6:= constclass @type ^`kotlin.jvm.functions.Function14` @kind object;
  #L0c4068.  v0[v2]:= v6 @kind object;
  #L0c406c.  v2:= 15I;
  #L0c4070.  v6:= constclass @type ^`kotlin.jvm.functions.Function15` @kind object;
  #L0c4074.  v0[v2]:= v6 @kind object;
  #L0c4078.  v2:= 16I;
  #L0c407c.  v6:= constclass @type ^`kotlin.jvm.functions.Function16` @kind object;
  #L0c4080.  v0[v2]:= v6 @kind object;
  #L0c4084.  v2:= 17I;
  #L0c4088.  v6:= constclass @type ^`kotlin.jvm.functions.Function17` @kind object;
  #L0c408c.  v0[v2]:= v6 @kind object;
  #L0c4090.  v2:= 18I;
  #L0c4094.  v6:= constclass @type ^`kotlin.jvm.functions.Function18` @kind object;
  #L0c4098.  v0[v2]:= v6 @kind object;
  #L0c409c.  v2:= 19I;
  #L0c40a0.  v6:= constclass @type ^`kotlin.jvm.functions.Function19` @kind object;
  #L0c40a4.  v0[v2]:= v6 @kind object;
  #L0c40a8.  v2:= 20I;
  #L0c40ac.  v6:= constclass @type ^`kotlin.jvm.functions.Function20` @kind object;
  #L0c40b0.  v0[v2]:= v6 @kind object;
  #L0c40b4.  v2:= 21I;
  #L0c40b8.  v6:= constclass @type ^`kotlin.jvm.functions.Function21` @kind object;
  #L0c40bc.  v0[v2]:= v6 @kind object;
  #L0c40c0.  v2:= 22I;
  #L0c40c4.  v6:= constclass @type ^`kotlin.jvm.functions.Function22` @kind object;
  #L0c40c8.  v0[v2]:= v6 @kind object;
  #L0c40cc.  call temp:= `listOf`(v0) @signature `Lkotlin/collections/CollectionsKt;.listOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0c40d2.  v0:= temp @kind object;
  #L0c40d4.  v2:= new `java.util.ArrayList`;
  #L0c40d8.  call temp:= `collectionSizeOrDefault`(v0, v5) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L0c40de.  v5:= temp;
  #L0c40e0.  call `<init>`(v2, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0c40e6.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0c40ec.  v0:= temp @kind object;
  #L0c40ee.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c40f4.  v5:= temp;
  #L0c40f6.  if v5 == 0 then goto L0c412e;
  #L0c40fa.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0c4100.  v5:= temp @kind object;
  #L0c4102.  v6:= v3 + 1;
  #L0c4106.  if v3 >= 0 then goto L0c4110;
  #L0c410a.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L0c4110.  v5:= (`java.lang.Class`) v5 @kind object;
  #L0c4114.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0c411a.  v3:= temp @kind object;
  #L0c411c.  call temp:= `to`(v5, v3) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L0c4122.  v3:= temp @kind object;
  #L0c4124.  call temp:= `add`(v2, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0c412a.  v3:= v6;
  #L0c412c.  goto L0c40ee;
  #L0c412e.  call temp:= `toMap`(v2) @signature `Lkotlin/collections/MapsKt;.toMap:(Ljava/lang/Iterable;)Ljava/util/Map;` @kind static;
  #L0c4134.  v0:= temp @kind object;
  #L0c4136.  `@@kotlin.jvm.internal.ClassReference.b` @type ^`java.util.Map` := v0 @kind object;
  #L0c413a.  v0:= new `java.util.HashMap`;
  #L0c413e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L0c4144.  v2:= "boolean" @kind object;
  #L0c4148.  v3:= "kotlin.Boolean" @kind object;
  #L0c414c.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4152.  v2:= "char" @kind object;
  #L0c4156.  v5:= "kotlin.Char" @kind object;
  #L0c415a.  call temp:= `put`(v0, v2, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4160.  v2:= "byte" @kind object;
  #L0c4164.  v6:= "kotlin.Byte" @kind object;
  #L0c4168.  call temp:= `put`(v0, v2, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c416e.  v2:= "short" @kind object;
  #L0c4172.  v7:= "kotlin.Short" @kind object;
  #L0c4176.  call temp:= `put`(v0, v2, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c417c.  v2:= "int" @kind object;
  #L0c4180.  v8:= "kotlin.Int" @kind object;
  #L0c4184.  call temp:= `put`(v0, v2, v8) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c418a.  v2:= "float" @kind object;
  #L0c418e.  v9:= "kotlin.Float" @kind object;
  #L0c4192.  call temp:= `put`(v0, v2, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4198.  v2:= "long" @kind object;
  #L0c419c.  v10:= "kotlin.Long" @kind object;
  #L0c41a0.  call temp:= `put`(v0, v2, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c41a6.  v2:= "double" @kind object;
  #L0c41aa.  v11:= "kotlin.Double" @kind object;
  #L0c41ae.  call temp:= `put`(v0, v2, v11) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c41b4.  `@@kotlin.jvm.internal.ClassReference.c` @type ^`java.util.HashMap` := v0 @kind object;
  #L0c41b8.  v2:= new `java.util.HashMap`;
  #L0c41bc.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L0c41c2.  v12:= "java.lang.Boolean" @kind object;
  #L0c41c6.  call temp:= `put`(v2, v12, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c41cc.  v3:= "java.lang.Character" @kind object;
  #L0c41d0.  call temp:= `put`(v2, v3, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c41d6.  v3:= "java.lang.Byte" @kind object;
  #L0c41da.  call temp:= `put`(v2, v3, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c41e0.  v3:= "java.lang.Short" @kind object;
  #L0c41e4.  call temp:= `put`(v2, v3, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c41ea.  v3:= "java.lang.Integer" @kind object;
  #L0c41ee.  call temp:= `put`(v2, v3, v8) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c41f4.  v3:= "java.lang.Float" @kind object;
  #L0c41f8.  call temp:= `put`(v2, v3, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c41fe.  v3:= "java.lang.Long" @kind object;
  #L0c4202.  call temp:= `put`(v2, v3, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4208.  v3:= "java.lang.Double" @kind object;
  #L0c420c.  call temp:= `put`(v2, v3, v11) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4212.  `@@kotlin.jvm.internal.ClassReference.d` @type ^`java.util.HashMap` := v2 @kind object;
  #L0c4216.  v3:= new `java.util.HashMap`;
  #L0c421a.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L0c4220.  v5:= "java.lang.Object" @kind object;
  #L0c4224.  v6:= "kotlin.Any" @kind object;
  #L0c4228.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c422e.  v5:= "java.lang.String" @kind object;
  #L0c4232.  v6:= "kotlin.String" @kind object;
  #L0c4236.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c423c.  v5:= "java.lang.CharSequence" @kind object;
  #L0c4240.  v6:= "kotlin.CharSequence" @kind object;
  #L0c4244.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c424a.  v5:= "java.lang.Throwable" @kind object;
  #L0c424e.  v6:= "kotlin.Throwable" @kind object;
  #L0c4252.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4258.  v5:= "java.lang.Cloneable" @kind object;
  #L0c425c.  v6:= "kotlin.Cloneable" @kind object;
  #L0c4260.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4266.  v5:= "java.lang.Number" @kind object;
  #L0c426a.  v6:= "kotlin.Number" @kind object;
  #L0c426e.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4274.  v5:= "java.lang.Comparable" @kind object;
  #L0c4278.  v6:= "kotlin.Comparable" @kind object;
  #L0c427c.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4282.  v5:= "java.lang.Enum" @kind object;
  #L0c4286.  v6:= "kotlin.Enum" @kind object;
  #L0c428a.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4290.  v5:= "java.lang.annotation.Annotation" @kind object;
  #L0c4294.  v6:= "kotlin.Annotation" @kind object;
  #L0c4298.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c429e.  v5:= "java.lang.Iterable" @kind object;
  #L0c42a2.  v6:= "kotlin.collections.Iterable" @kind object;
  #L0c42a6.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c42ac.  v5:= "java.util.Iterator" @kind object;
  #L0c42b0.  v6:= "kotlin.collections.Iterator" @kind object;
  #L0c42b4.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c42ba.  v5:= "java.util.Collection" @kind object;
  #L0c42be.  v6:= "kotlin.collections.Collection" @kind object;
  #L0c42c2.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c42c8.  v5:= "java.util.List" @kind object;
  #L0c42cc.  v6:= "kotlin.collections.List" @kind object;
  #L0c42d0.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c42d6.  v5:= "java.util.Set" @kind object;
  #L0c42da.  v6:= "kotlin.collections.Set" @kind object;
  #L0c42de.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c42e4.  v5:= "java.util.ListIterator" @kind object;
  #L0c42e8.  v6:= "kotlin.collections.ListIterator" @kind object;
  #L0c42ec.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c42f2.  v5:= "java.util.Map" @kind object;
  #L0c42f6.  v6:= "kotlin.collections.Map" @kind object;
  #L0c42fa.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4300.  v5:= "java.util.Map$Entry" @kind object;
  #L0c4304.  v6:= "kotlin.collections.Map.Entry" @kind object;
  #L0c4308.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c430e.  v5:= "kotlin.jvm.internal.StringCompanionObject" @kind object;
  #L0c4312.  v6:= "kotlin.String.Companion" @kind object;
  #L0c4316.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c431c.  v5:= "kotlin.jvm.internal.EnumCompanionObject" @kind object;
  #L0c4320.  v6:= "kotlin.Enum.Companion" @kind object;
  #L0c4324.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c432a.  call `putAll`(v3, v0) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L0c4330.  call `putAll`(v3, v2) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L0c4336.  call temp:= `values`(v0) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L0c433c.  v0:= temp @kind object;
  #L0c433e.  v2:= "primitiveFqNames.values" @kind object;
  #L0c4342.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c4348.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0c434e.  v0:= temp @kind object;
  #L0c4350.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c4356.  v2:= temp;
  #L0c4358.  v5:= 46I;
  #L0c435c.  if v2 == 0 then goto L0c43ec;
  #L0c4360.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0c4366.  v2:= temp @kind object;
  #L0c4368.  v2:= (`java.lang.String`) v2 @kind object;
  #L0c436c.  v6:= new `java.lang.StringBuilder`;
  #L0c4370.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c4376.  v7:= "kotlin.jvm.internal." @kind object;
  #L0c437a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c4380.  v7:= "kotlinName" @kind object;
  #L0c4384.  call `checkNotNullExpressionValue`(v2, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c438a.  call temp:= `substringAfterLast$default`(v2, v5, v1, v4, v1) @signature `Lkotlin/text/StringsKt;.substringAfterLast$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c4390.  v5:= temp @kind object;
  #L0c4392.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c4398.  v5:= "CompanionObject" @kind object;
  #L0c439c.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c43a2.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c43a8.  v5:= temp @kind object;
  #L0c43aa.  v6:= new `java.lang.StringBuilder`;
  #L0c43ae.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c43b4.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c43ba.  v2:= ".Companion" @kind object;
  #L0c43be.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c43c4.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c43ca.  v2:= temp @kind object;
  #L0c43cc.  call temp:= `to`(v5, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L0c43d2.  v2:= temp @kind object;
  #L0c43d4.  call temp:= `getFirst`(v2) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L0c43da.  v5:= temp @kind object;
  #L0c43dc.  call temp:= `getSecond`(v2) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L0c43e2.  v2:= temp @kind object;
  #L0c43e4.  call temp:= `put`(v3, v5, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c43ea.  goto L0c4350;
  #L0c43ec.  v0:= `@@kotlin.jvm.internal.ClassReference.b` @type ^`java.util.Map` @kind object;
  #L0c43f0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L0c43f6.  v0:= temp @kind object;
  #L0c43f8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0c43fe.  v0:= temp @kind object;
  #L0c4400.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c4406.  v2:= temp;
  #L0c4408.  if v2 == 0 then goto L0c446a;
  #L0c440c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0c4412.  v2:= temp @kind object;
  #L0c4414.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L0c4418.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L0c441e.  v6:= temp @kind object;
  #L0c4420.  v6:= (`java.lang.Class`) v6 @kind object;
  #L0c4424.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0c442a.  v2:= temp @kind object;
  #L0c442c.  v2:= (`java.lang.Number`) v2 @kind object;
  #L0c4430.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L0c4436.  v2:= temp;
  #L0c4438.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0c443e.  v6:= temp @kind object;
  #L0c4440.  v7:= new `java.lang.StringBuilder`;
  #L0c4444.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c444a.  v8:= "kotlin.Function" @kind object;
  #L0c444e.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c4454.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c445a.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c4460.  v2:= temp @kind object;
  #L0c4462.  call temp:= `put`(v3, v6, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c4468.  goto L0c4400;
  #L0c446a.  `@@kotlin.jvm.internal.ClassReference.e` @type ^`java.util.HashMap` := v3 @kind object;
  #L0c446e.  v0:= new `java.util.LinkedHashMap`;
  #L0c4472.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L0c4478.  v2:= temp;
  #L0c447a.  call temp:= `mapCapacity`(v2) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L0c4480.  v2:= temp;
  #L0c4482.  call `<init>`(v0, v2) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L0c4488.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L0c448e.  v2:= temp @kind object;
  #L0c4490.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0c4496.  v2:= temp @kind object;
  #L0c4498.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0c449e.  v3:= temp;
  #L0c44a0.  if v3 == 0 then goto L0c44d4;
  #L0c44a4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0c44aa.  v3:= temp @kind object;
  #L0c44ac.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L0c44b0.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L0c44b6.  v6:= temp @kind object;
  #L0c44b8.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0c44be.  v3:= temp @kind object;
  #L0c44c0.  v3:= (`java.lang.String`) v3 @kind object;
  #L0c44c4.  call temp:= `substringAfterLast$default`(v3, v5, v1, v4, v1) @signature `Lkotlin/text/StringsKt;.substringAfterLast$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c44ca.  v3:= temp @kind object;
  #L0c44cc.  call temp:= `put`(v0, v6, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c44d2.  goto L0c4498;
  #L0c44d4.  `@@kotlin.jvm.internal.ClassReference.f` @type ^`java.util.Map` := v0 @kind object;
  #L0c44d8.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.ClassReference` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0c44ec.  v0:= "jClass" @kind object;
  #L0c44f0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c44f6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c44fc.  v1.`kotlin.jvm.internal.ClassReference.a` @type ^`java.lang.Class` := v2 @kind object;
  #L0c4500.  return @kind void;
}
procedure `java.lang.Void` `a`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0c3e2c.  v0:= new `kotlin.jvm.KotlinReflectionNotSupportedError`;
  #L0c3e30.  call `<init>`(v0) @signature `Lkotlin/jvm/KotlinReflectionNotSupportedError;.<init>:()V` @kind direct;
  #L0c3e36.  throw v0;
}
procedure `java.util.HashMap` `access$getClassFqNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getClassFqNames$cp:()Ljava/util/HashMap;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0c3eb4.  v0:= `@@kotlin.jvm.internal.ClassReference.e` @type ^`java.util.HashMap` @kind object;
  #L0c3eb8.  return v0 @kind object;
}
procedure `java.util.Map` `access$getFUNCTION_CLASSES$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getFUNCTION_CLASSES$cp:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0c3f5c.  v0:= `@@kotlin.jvm.internal.ClassReference.b` @type ^`java.util.Map` @kind object;
  #L0c3f60.  return v0 @kind object;
}
procedure `java.util.Map` `access$getSimpleNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getSimpleNames$cp:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0c3f74.  v0:= `@@kotlin.jvm.internal.ClassReference.f` @type ^`java.util.Map` @kind object;
  #L0c3f78.  return v0 @kind object;
}
procedure `void` `getSealedSubclasses$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getSealedSubclasses$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c4514.  return @kind void;
}
procedure `void` `getSupertypes$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getSupertypes$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c4528.  return @kind void;
}
procedure `void` `getTypeParameters$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getTypeParameters$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c453c.  return @kind void;
}
procedure `void` `getVisibility$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getVisibility$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c4550.  return @kind void;
}
procedure `void` `isAbstract$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isAbstract$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c4564.  return @kind void;
}
procedure `void` `isCompanion$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isCompanion$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c4578.  return @kind void;
}
procedure `void` `isData$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c458c.  return @kind void;
}
procedure `void` `isFinal$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isFinal$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c45a0.  return @kind void;
}
procedure `void` `isFun$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isFun$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c45b4.  return @kind void;
}
procedure `void` `isInner$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isInner$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c45c8.  return @kind void;
}
procedure `void` `isOpen$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isOpen$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c45dc.  return @kind void;
}
procedure `void` `isSealed$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isSealed$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c45f0.  return @kind void;
}
procedure `void` `isValue$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isValue$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0c4604.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.ClassReference` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3b8c.  v0:= instanceof @variable v2 @type ^`kotlin.jvm.internal.ClassReference` @kind boolean;
  #L0c3b90.  if v0 == 0 then goto L0c3bb8;
  #L0c3b94.  call temp:= `getJavaObjectType`(v1) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L0c3b9a.  v0:= temp @kind object;
  #L0c3b9c.  v2:= (`kotlin.reflect.KClass`) v2 @kind object;
  #L0c3ba0.  call temp:= `getJavaObjectType`(v2) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L0c3ba6.  v2:= temp @kind object;
  #L0c3ba8.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c3bae.  v2:= temp;
  #L0c3bb0.  if v2 == 0 then goto L0c3bb8;
  #L0c3bb4.  v2:= 1I;
  #L0c3bb6.  goto L0c3bba;
  #L0c3bb8.  v2:= 0I;
  #L0c3bba.  return v2;
}
procedure `java.util.List` `getAnnotations`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getAnnotations:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3ecc.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3ed2.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3ed6.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3edc.  throw v0;
}
procedure `java.util.Collection` `getConstructors`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getConstructors:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3e48.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3e4e.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3e52.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3e58.  throw v0;
}
procedure `java.lang.Class` `getJClass`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3d5c.  v0:= v1.`kotlin.jvm.internal.ClassReference.a` @type ^`java.lang.Class` @kind object;
  #L0c3d60.  return v0 @kind object;
}
procedure `java.util.Collection` `getMembers`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getMembers:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3e6c.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3e72.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3e76.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3e7c.  throw v0;
}
procedure `java.util.Collection` `getNestedClasses`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getNestedClasses:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3e90.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3e96.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3e9a.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3ea0.  throw v0;
}
procedure `java.lang.Object` `getObjectInstance`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getObjectInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3d74.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3d7a.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3d7e.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3d84.  throw v0;
}
procedure `java.lang.String` `getQualifiedName`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getQualifiedName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c3d98.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L0c3d9c.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L0c3da2.  v1:= temp @kind object;
  #L0c3da4.  call temp:= `getClassQualifiedName`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassQualifiedName:(Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L0c3daa.  v0:= temp @kind object;
  #L0c3dac.  return v0 @kind object;
}
procedure `java.util.List` `getSealedSubclasses`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSealedSubclasses:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3ef0.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3ef6.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3efa.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3f00.  throw v0;
}
procedure `java.lang.String` `getSimpleName`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSimpleName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c3dc0.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L0c3dc4.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L0c3dca.  v1:= temp @kind object;
  #L0c3dcc.  call temp:= `getClassSimpleName`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassSimpleName:(Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L0c3dd2.  v0:= temp @kind object;
  #L0c3dd4.  return v0 @kind object;
}
procedure `java.util.List` `getSupertypes`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSupertypes:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3f14.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3f1a.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3f1e.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3f24.  throw v0;
}
procedure `java.util.List` `getTypeParameters`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getTypeParameters:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3f38.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3f3e.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3f42.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3f48.  throw v0;
}
procedure `kotlin.reflect.KVisibility` `getVisibility`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getVisibility:()Lkotlin/reflect/KVisibility;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3f8c.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3f92.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3f96.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3f9c.  throw v0;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3d38.  call temp:= `getJavaObjectType`(v1) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L0c3d3e.  v0:= temp @kind object;
  #L0c3d40.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Class;.hashCode:()I` @kind virtual;
  #L0c3d46.  v0:= temp;
  #L0c3d48.  return v0;
}
procedure `boolean` `isAbstract`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isAbstract:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3bcc.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3bd2.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3bd6.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3bdc.  throw v0;
}
procedure `boolean` `isCompanion`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isCompanion:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3bf0.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3bf6.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3bfa.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3c00.  throw v0;
}
procedure `boolean` `isData`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isData:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3c14.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3c1a.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3c1e.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3c24.  throw v0;
}
procedure `boolean` `isFinal`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isFinal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3c38.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3c3e.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3c42.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3c48.  throw v0;
}
procedure `boolean` `isFun`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isFun:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3c5c.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3c62.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3c66.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3c6c.  throw v0;
}
procedure `boolean` `isInner`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isInner:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3c80.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3c86.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3c8a.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3c90.  throw v0;
}
procedure `boolean` `isInstance`(`kotlin.jvm.internal.ClassReference` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c3ca4.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L0c3ca8.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L0c3cae.  v1:= temp @kind object;
  #L0c3cb0.  call temp:= `isInstance`(v0, v3, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.isInstance:(Ljava/lang/Object;Ljava/lang/Class;)Z` @kind virtual;
  #L0c3cb6.  v3:= temp;
  #L0c3cb8.  return v3;
}
procedure `boolean` `isOpen`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3ccc.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3cd2.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3cd6.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3cdc.  throw v0;
}
procedure `boolean` `isSealed`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isSealed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3cf0.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3cf6.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3cfa.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3d00.  throw v0;
}
procedure `boolean` `isValue`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c3d14.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L0c3d1a.  v0:= new `kotlin.KotlinNothingValueException`;
  #L0c3d1e.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0c3d24.  throw v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c3de8.  v0:= new `java.lang.StringBuilder`;
  #L0c3dec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0c3df2.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L0c3df8.  v1:= temp @kind object;
  #L0c3dfa.  call temp:= `toString`(v1) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c3e00.  v1:= temp @kind object;
  #L0c3e02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3e08.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L0c3e0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0c3e12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c3e18.  v0:= temp @kind object;
  #L0c3e1a.  return v0 @kind object;
}
