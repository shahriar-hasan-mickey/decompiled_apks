record `kotlin.jvm.internal.d` @kind class @AccessFlag FINAL extends `kotlin.collections.DoubleIterator` @kind class {
  `double`[] `kotlin.jvm.internal.d.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.d.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.jvm.internal.d` v1 @kind this, `double`[] v2 @kind object) @signature `Lkotlin/jvm/internal/d;.<init>:([D)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0c2cfc.  v0:= "array" @kind object;
  #L0c2d00.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0c2d06.  call `<init>`(v1) @signature `Lkotlin/collections/DoubleIterator;.<init>:()V` @kind direct;
  #L0c2d0c.  v1.`kotlin.jvm.internal.d.a` @type ^`double`[] := v2 @kind object;
  #L0c2d10.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.d` v2 @kind this) @signature `Lkotlin/jvm/internal/d;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c2c7c.  v0:= v2.`kotlin.jvm.internal.d.b` @type ^`int`;
  #L0c2c80.  v1:= v2.`kotlin.jvm.internal.d.a` @type ^`double`[] @kind object;
  #L0c2c84.  v1:= length @variable v1;
  #L0c2c86.  if v0 >= v1 then goto L0c2c8e;
  #L0c2c8a.  v0:= 1I;
  #L0c2c8c.  goto L0c2c90;
  #L0c2c8e.  v0:= 0I;
  #L0c2c90.  return v0;
}
procedure `double` `nextDouble`(`kotlin.jvm.internal.d` v3 @kind this) @signature `Lkotlin/jvm/internal/d;.nextDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0c2ca4.  v0:= v3.`kotlin.jvm.internal.d.a` @type ^`double`[] @kind object;
  #L0c2ca8.  v1:= v3.`kotlin.jvm.internal.d.b` @type ^`int`;
  #L0c2cac.  v2:= v1 + 1;
  #L0c2cb0.  v3.`kotlin.jvm.internal.d.b` @type ^`int` := v2;
  #L0c2cb4.  v1:= v0[v1] @kind wide;
  #L0c2cb8.  return v1 @kind wide;
  #L0c2cba.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L0c2cbc.  v1:= v3.`kotlin.jvm.internal.d.b` @type ^`int`;
  #L0c2cc0.  v1:= v1 + -1;
  #L0c2cc4.  v3.`kotlin.jvm.internal.d.b` @type ^`int` := v1;
  #L0c2cc8.  v1:= new `java.util.NoSuchElementException`;
  #L0c2ccc.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L0c2cd2.  v0:= temp @kind object;
  #L0c2cd4.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0c2cda.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L0c2ca4..L0c2cb8] goto L0c2cba;
}
