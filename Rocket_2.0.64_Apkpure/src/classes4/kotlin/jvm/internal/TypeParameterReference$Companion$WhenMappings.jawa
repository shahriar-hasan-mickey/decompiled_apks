record `kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/TypeParameterReference$Companion$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0c90a0.  call temp:= `values`() @signature `Lkotlin/reflect/KVariance;.values:()[Lkotlin/reflect/KVariance;` @kind static;
  #L0c90a6.  v0:= temp @kind object;
  #L0c90a8.  v0:= length @variable v0;
  #L0c90aa.  v0:= new `int`[v0];
  #L0c90ae.  v1:= `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0c90b2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0c90b8.  v1:= temp;
  #L0c90ba.  v2:= 1I;
  #L0c90bc.  v0[v1]:= v2;
  #L0c90c0.  v1:= `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0c90c4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0c90ca.  v1:= temp;
  #L0c90cc.  v2:= 2I;
  #L0c90ce.  v0[v1]:= v2;
  #L0c90d2.  v1:= `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0c90d6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0c90dc.  v1:= temp;
  #L0c90de.  v2:= 3I;
  #L0c90e0.  v0[v1]:= v2;
  #L0c90e4.  `@@kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L0c90e8.  return @kind void;
}
