record `kotlin.jvm.internal.PropertyReference1` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.jvm.internal.PropertyReference` @kind class, `kotlin.reflect.KProperty1` @kind interface {
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference1` v0 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c769c.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:()V` @kind direct;
  #L0c76a2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/PropertyReference1;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c76b4.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L0c76ba.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lkotlin/jvm/internal/PropertyReference1;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c76cc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L0c76d2.  return @kind void;
}
procedure `kotlin.reflect.KCallable` `computeReflected`(`kotlin.jvm.internal.PropertyReference1` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference1;.computeReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0c763c.  call temp:= `property1`(v1) @signature `Lkotlin/jvm/internal/Reflection;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @kind static;
  #L0c7642.  v0:= temp @kind object;
  #L0c7644.  return v0 @kind object;
}
procedure `java.lang.Object` `getDelegate`(`kotlin.jvm.internal.PropertyReference1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/PropertyReference1;.getDelegate:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c75f8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L0c75fe.  v0:= temp @kind object;
  #L0c7600.  v0:= (`kotlin.reflect.KProperty1`) v0 @kind object;
  #L0c7604.  call temp:= `getDelegate`(v0, v2) @signature `Lkotlin/reflect/KProperty1;.getDelegate:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c760a.  v2:= temp @kind object;
  #L0c760c.  return v2 @kind object;
}
procedure `kotlin.reflect.KProperty$Getter` `getGetter`(`kotlin.jvm.internal.PropertyReference1` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference1;.getGetter:()Lkotlin/reflect/KProperty$Getter;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L0c7658.  call temp:= `getGetter`(v1) @signature `Lkotlin/jvm/internal/PropertyReference1;.getGetter:()Lkotlin/reflect/KProperty1$Getter;` @kind virtual;
  #L0c765e.  v0:= temp @kind object;
  #L0c7660.  return v0 @kind object;
}
procedure `kotlin.reflect.KProperty1$Getter` `getGetter`(`kotlin.jvm.internal.PropertyReference1` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference1;.getGetter:()Lkotlin/reflect/KProperty1$Getter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c7674.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L0c767a.  v0:= temp @kind object;
  #L0c767c.  v0:= (`kotlin.reflect.KProperty1`) v0 @kind object;
  #L0c7680.  call temp:= `getGetter`(v0) @signature `Lkotlin/reflect/KProperty1;.getGetter:()Lkotlin/reflect/KProperty1$Getter;` @kind interface;
  #L0c7686.  v0:= temp @kind object;
  #L0c7688.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.jvm.internal.PropertyReference1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/PropertyReference1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L0c7620.  call temp:= `get`(v0, v1) @signature `Lkotlin/reflect/KProperty1;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0c7626.  v1:= temp @kind object;
  #L0c7628.  return v1 @kind object;
}
