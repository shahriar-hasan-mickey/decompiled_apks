record `kotlin.jvm.internal.AdaptedFunctionReference` @kind class @AccessFlag PUBLIC extends `kotlin.jvm.internal.FunctionBase` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.Class` `kotlin.jvm.internal.AdaptedFunctionReference.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.jvm.internal.AdaptedFunctionReference.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.jvm.internal.AdaptedFunctionReference.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `kotlin.jvm.internal.AdaptedFunctionReference.d` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.AdaptedFunctionReference.e` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.AdaptedFunctionReference.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlin.jvm.internal.AdaptedFunctionReference.receiver` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.AdaptedFunctionReference` v7 @kind this, `int` v8 , `java.lang.Class` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `int` v12 ) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.<init>:(ILjava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0c2a14.  v2:= `@@kotlin.jvm.internal.CallableReference.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L0c2a18.  v0:= v7 @kind object;
  #L0c2a1a.  v1:= v8;
  #L0c2a1c.  v3:= v9 @kind object;
  #L0c2a1e.  v4:= v10 @kind object;
  #L0c2a20.  v5:= v11 @kind object;
  #L0c2a22.  v6:= v12;
  #L0c2a24.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L0c2a2a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.AdaptedFunctionReference` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0c2a3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0c2a42.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.receiver` @type ^`java.lang.Object` := v2 @kind object;
  #L0c2a46.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` := v3 @kind object;
  #L0c2a4a.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.b` @type ^`java.lang.String` := v4 @kind object;
  #L0c2a4e.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.c` @type ^`java.lang.String` := v5 @kind object;
  #L0c2a52.  v2:= v6 ^& 1;
  #L0c2a56.  v3:= 1I;
  #L0c2a58.  if v2 != v3 then goto L0c2a60;
  #L0c2a5c.  v2:= 1I;
  #L0c2a5e.  goto L0c2a62;
  #L0c2a60.  v2:= 0I;
  #L0c2a62.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` := v2 @kind boolean;
  #L0c2a66.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int` := v1;
  #L0c2a6a.  v1:= v6 ^> 1;
  #L0c2a6e.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.f` @type ^`int` := v1;
  #L0c2a72.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.AdaptedFunctionReference` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0c2874.  v0:= 1I;
  #L0c2876.  if v4 != v5 then goto L0c287c;
  #L0c287a.  return v0;
  #L0c287c.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.AdaptedFunctionReference` @kind boolean;
  #L0c2880.  v2:= 0I;
  #L0c2882.  if v1 != 0 then goto L0c2888;
  #L0c2886.  return v2;
  #L0c2888.  v5:= (`kotlin.jvm.internal.AdaptedFunctionReference`) v5 @kind object;
  #L0c288c.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` @kind boolean;
  #L0c2890.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` @kind boolean;
  #L0c2894.  if v1 != v3 then goto L0c2902;
  #L0c2898.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int`;
  #L0c289c.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int`;
  #L0c28a0.  if v1 != v3 then goto L0c2902;
  #L0c28a4.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.f` @type ^`int`;
  #L0c28a8.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.f` @type ^`int`;
  #L0c28ac.  if v1 != v3 then goto L0c2902;
  #L0c28b0.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.receiver` @type ^`java.lang.Object` @kind object;
  #L0c28b4.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.receiver` @type ^`java.lang.Object` @kind object;
  #L0c28b8.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c28be.  v1:= temp;
  #L0c28c0.  if v1 == 0 then goto L0c2902;
  #L0c28c4.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` @kind object;
  #L0c28c8.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` @kind object;
  #L0c28cc.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0c28d2.  v1:= temp;
  #L0c28d4.  if v1 == 0 then goto L0c2902;
  #L0c28d8.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.b` @type ^`java.lang.String` @kind object;
  #L0c28dc.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.b` @type ^`java.lang.String` @kind object;
  #L0c28e0.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c28e6.  v1:= temp;
  #L0c28e8.  if v1 == 0 then goto L0c2902;
  #L0c28ec.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.c` @type ^`java.lang.String` @kind object;
  #L0c28f0.  v5:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.c` @type ^`java.lang.String` @kind object;
  #L0c28f4.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0c28fa.  v5:= temp;
  #L0c28fc.  if v5 == 0 then goto L0c2902;
  #L0c2900.  goto L0c2904;
  #L0c2902.  v0:= 0I;
  #L0c2904.  return v0;
}
procedure `int` `getArity`(`kotlin.jvm.internal.AdaptedFunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c2918.  v0:= v1.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int`;
  #L0c291c.  return v0;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOwner`(`kotlin.jvm.internal.AdaptedFunctionReference` v2 @kind this) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0c29dc.  v0:= v2.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` @kind object;
  #L0c29e0.  if v0 != 0 then goto L0c29e8;
  #L0c29e4.  v0:= 0I;
  #L0c29e6.  goto L0c2a02;
  #L0c29e8.  v1:= v2.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` @kind boolean;
  #L0c29ec.  if v1 == 0 then goto L0c29fa;
  #L0c29f0.  call temp:= `getOrCreateKotlinPackage`(v0) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinPackage:(Ljava/lang/Class;)Lkotlin/reflect/KDeclarationContainer;` @kind static;
  #L0c29f6.  v0:= temp @kind object;
  #L0c29f8.  goto L0c2a02;
  #L0c29fa.  call temp:= `getOrCreateKotlinClass`(v0) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L0c2a00.  v0:= temp @kind object;
  #L0c2a02.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.AdaptedFunctionReference` v3 @kind this) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0c2930.  v0:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.receiver` @type ^`java.lang.Object` @kind object;
  #L0c2934.  v1:= 0I;
  #L0c2936.  if v0 == 0 then goto L0c2944;
  #L0c293a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0c2940.  v0:= temp;
  #L0c2942.  goto L0c2946;
  #L0c2944.  v0:= 0I;
  #L0c2946.  v0:= v0 * 31;
  #L0c294a.  v2:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` @kind object;
  #L0c294e.  if v2 == 0 then goto L0c295a;
  #L0c2952.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0c2958.  v1:= temp;
  #L0c295a.  v0:= v0 + v1 @kind int;
  #L0c295c.  v0:= v0 * 31;
  #L0c2960.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.b` @type ^`java.lang.String` @kind object;
  #L0c2964.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0c296a.  v1:= temp;
  #L0c296c.  v0:= v0 + v1 @kind int;
  #L0c296e.  v0:= v0 * 31;
  #L0c2972.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.c` @type ^`java.lang.String` @kind object;
  #L0c2976.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0c297c.  v1:= temp;
  #L0c297e.  v0:= v0 + v1 @kind int;
  #L0c2980.  v0:= v0 * 31;
  #L0c2984.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` @kind boolean;
  #L0c2988.  if v1 == 0 then goto L0c2992;
  #L0c298c.  v1:= 1231I;
  #L0c2990.  goto L0c2996;
  #L0c2992.  v1:= 1237I;
  #L0c2996.  v0:= v0 + v1 @kind int;
  #L0c2998.  v0:= v0 * 31;
  #L0c299c.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int`;
  #L0c29a0.  v0:= v0 + v1 @kind int;
  #L0c29a2.  v0:= v0 * 31;
  #L0c29a6.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.f` @type ^`int`;
  #L0c29aa.  v0:= v0 + v1 @kind int;
  #L0c29ac.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.AdaptedFunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0c29c0.  call temp:= `renderLambdaToString`(v1) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @kind static;
  #L0c29c6.  v0:= temp @kind object;
  #L0c29c8.  return v0 @kind object;
}
