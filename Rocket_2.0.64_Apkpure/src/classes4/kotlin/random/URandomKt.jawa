record `kotlin.random.URandomKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `checkUIntRangeBounds-J1ME1BU`(`int` v1 , `int` v2 ) @signature `Lkotlin/random/URandomKt;.checkUIntRangeBounds-J1ME1BU:(II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0cb8f0.  call temp:= `uintCompare`(v2, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L0cb8f6.  v0:= temp;
  #L0cb8f8.  if v0 <= 0 then goto L0cb900;
  #L0cb8fc.  v0:= 1I;
  #L0cb8fe.  goto L0cb902;
  #L0cb900.  v0:= 0I;
  #L0cb902.  if v0 == 0 then goto L0cb908;
  #L0cb906.  return @kind void;
  #L0cb908.  call temp:= `box-impl`(v1) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L0cb90e.  v1:= temp @kind object;
  #L0cb910.  call temp:= `box-impl`(v2) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L0cb916.  v2:= temp @kind object;
  #L0cb918.  call temp:= `boundsErrorMessage`(v1, v2) @signature `Lkotlin/random/RandomKt;.boundsErrorMessage:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0cb91e.  v1:= temp @kind object;
  #L0cb920.  v2:= new `java.lang.IllegalArgumentException`;
  #L0cb924.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0cb92a.  v1:= temp @kind object;
  #L0cb92c.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0cb932.  throw v2;
}
procedure `void` `checkULongRangeBounds-eb3DHEI`(`long` v1 , `long` v3 ) @signature `Lkotlin/random/URandomKt;.checkULongRangeBounds-eb3DHEI:(JJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0cb944.  call temp:= `ulongCompare`(v3, v1) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L0cb94a.  v0:= temp;
  #L0cb94c.  if v0 <= 0 then goto L0cb954;
  #L0cb950.  v0:= 1I;
  #L0cb952.  goto L0cb956;
  #L0cb954.  v0:= 0I;
  #L0cb956.  if v0 == 0 then goto L0cb95c;
  #L0cb95a.  return @kind void;
  #L0cb95c.  call temp:= `box-impl`(v1) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L0cb962.  v1:= temp @kind object;
  #L0cb964.  call temp:= `box-impl`(v3) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L0cb96a.  v2:= temp @kind object;
  #L0cb96c.  call temp:= `boundsErrorMessage`(v1, v2) @signature `Lkotlin/random/RandomKt;.boundsErrorMessage:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0cb972.  v1:= temp @kind object;
  #L0cb974.  v2:= new `java.lang.IllegalArgumentException`;
  #L0cb978.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0cb97e.  v1:= temp @kind object;
  #L0cb980.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0cb986.  throw v2;
}
procedure `byte`[] `nextUBytes`(`kotlin.random.Random` v1 @kind object, `int` v2 ) @signature `Lkotlin/random/URandomKt;.nextUBytes:(Lkotlin/random/Random;I)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0cb510.  v0:= "<this>" @kind object;
  #L0cb514.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb51a.  call temp:= `nextBytes`(v1, v2) @signature `Lkotlin/random/Random;.nextBytes:(I)[B` @kind virtual;
  #L0cb520.  v1:= temp @kind object;
  #L0cb522.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UByteArray;.constructor-impl:([B)[B` @kind static;
  #L0cb528.  v1:= temp @kind object;
  #L0cb52a.  return v1 @kind object;
}
procedure `byte`[] `nextUBytes-EVgfTAA`(`kotlin.random.Random` v1 @kind object, `byte`[] v2 @kind object) @signature `Lkotlin/random/URandomKt;.nextUBytes-EVgfTAA:(Lkotlin/random/Random;[B)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0cb53c.  v0:= "$this$nextUBytes" @kind object;
  #L0cb540.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb546.  v0:= "array" @kind object;
  #L0cb54a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb550.  call temp:= `nextBytes`(v1, v2) @signature `Lkotlin/random/Random;.nextBytes:([B)[B` @kind virtual;
  #L0cb556.  return v2 @kind object;
}
procedure `byte`[] `nextUBytes-Wvrt4B4`(`kotlin.random.Random` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4:(Lkotlin/random/Random;[BII)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0cb59c.  v0:= "$this$nextUBytes" @kind object;
  #L0cb5a0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb5a6.  v0:= "array" @kind object;
  #L0cb5aa.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb5b0.  call temp:= `nextBytes`(v1, v2, v3, v4) @signature `Lkotlin/random/Random;.nextBytes:([BII)[B` @kind virtual;
  #L0cb5b6.  return v2 @kind object;
}
procedure `byte`[] `nextUBytes-Wvrt4B4$default`(`kotlin.random.Random` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4$default:(Lkotlin/random/Random;[BIIILjava/lang/Object;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0cb568.  v5:= v4 ^& 2;
  #L0cb56c.  if v5 == 0 then goto L0cb572;
  #L0cb570.  v2:= 0I;
  #L0cb572.  v4:= v4 ^& 4;
  #L0cb576.  if v4 == 0 then goto L0cb582;
  #L0cb57a.  call temp:= `getSize-impl`(v1) @signature `Lkotlin/UByteArray;.getSize-impl:([B)I` @kind static;
  #L0cb580.  v3:= temp;
  #L0cb582.  call temp:= `nextUBytes-Wvrt4B4`(v0, v1, v2, v3) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4:(Lkotlin/random/Random;[BII)[B` @kind static;
  #L0cb588.  v0:= temp @kind object;
  #L0cb58a.  return v0 @kind object;
}
procedure `int` `nextUInt`(`kotlin.random.Random` v1 @kind object) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0cb5c8.  v0:= "<this>" @kind object;
  #L0cb5cc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb5d2.  call temp:= `nextInt`(v1) @signature `Lkotlin/random/Random;.nextInt:()I` @kind virtual;
  #L0cb5d8.  v1:= temp;
  #L0cb5da.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L0cb5e0.  v1:= temp;
  #L0cb5e2.  return v1;
}
procedure `int` `nextUInt`(`kotlin.random.Random` v2 @kind object, `kotlin.ranges.UIntRange` v3 @kind object) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;Lkotlin/ranges/UIntRange;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0cb5f4.  v0:= "<this>" @kind object;
  #L0cb5f8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb5fe.  v0:= "range" @kind object;
  #L0cb602.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb608.  call temp:= `isEmpty`(v3) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L0cb60e.  v0:= temp;
  #L0cb610.  if v0 != 0 then goto L0cb6a2;
  #L0cb614.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cb61a.  v0:= temp;
  #L0cb61c.  v1:= -1I;
  #L0cb61e.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L0cb624.  v0:= temp;
  #L0cb626.  if v0 >= 0 then goto L0cb650;
  #L0cb62a.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cb630.  v0:= temp;
  #L0cb632.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cb638.  v3:= temp;
  #L0cb63a.  v3:= v3 + 1;
  #L0cb63e.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L0cb644.  v3:= temp;
  #L0cb646.  call temp:= `nextUInt-a8DCA5k`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L0cb64c.  v2:= temp;
  #L0cb64e.  goto L0cb6a0;
  #L0cb650.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cb656.  v0:= temp;
  #L0cb658.  v1:= 0I;
  #L0cb65a.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L0cb660.  v0:= temp;
  #L0cb662.  if v0 <= 0 then goto L0cb698;
  #L0cb666.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L0cb66c.  v0:= temp;
  #L0cb66e.  v0:= v0 + -1;
  #L0cb672.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L0cb678.  v0:= temp;
  #L0cb67a.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L0cb680.  v3:= temp;
  #L0cb682.  call temp:= `nextUInt-a8DCA5k`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L0cb688.  v2:= temp;
  #L0cb68a.  v2:= v2 + 1;
  #L0cb68e.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L0cb694.  v2:= temp;
  #L0cb696.  goto L0cb6a0;
  #L0cb698.  call temp:= `nextUInt`(v2) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;)I` @kind static;
  #L0cb69e.  v2:= temp;
  #L0cb6a0.  return v2;
  #L0cb6a2.  v2:= new `java.lang.IllegalArgumentException`;
  #L0cb6a6.  v0:= new `java.lang.StringBuilder`;
  #L0cb6aa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0cb6b0.  v1:= "Cannot get random in empty range: " @kind object;
  #L0cb6b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cb6ba.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cb6c0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0cb6c6.  v3:= temp @kind object;
  #L0cb6c8.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0cb6ce.  throw v2;
}
procedure `int` `nextUInt-a8DCA5k`(`kotlin.random.Random` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0cb6e0.  v0:= "$this$nextUInt" @kind object;
  #L0cb6e4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb6ea.  call `checkUIntRangeBounds-J1ME1BU`(v2, v3) @signature `Lkotlin/random/URandomKt;.checkUIntRangeBounds-J1ME1BU:(II)V` @kind static;
  #L0cb6f0.  v0:= -2147483648I;
  #L0cb6f4.  v2:= v2 ^~ v0 @kind int;
  #L0cb6f6.  v3:= v3 ^~ v0 @kind int;
  #L0cb6f8.  call temp:= `nextInt`(v1, v2, v3) @signature `Lkotlin/random/Random;.nextInt:(II)I` @kind virtual;
  #L0cb6fe.  v1:= temp;
  #L0cb700.  v1:= v1 ^~ v0 @kind int;
  #L0cb702.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L0cb708.  v1:= temp;
  #L0cb70a.  return v1;
}
procedure `int` `nextUInt-qCasIEU`(`kotlin.random.Random` v1 @kind object, `int` v2 ) @signature `Lkotlin/random/URandomKt;.nextUInt-qCasIEU:(Lkotlin/random/Random;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0cb71c.  v0:= "$this$nextUInt" @kind object;
  #L0cb720.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb726.  v0:= 0I;
  #L0cb728.  call temp:= `nextUInt-a8DCA5k`(v1, v0, v2) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L0cb72e.  v1:= temp;
  #L0cb730.  return v1;
}
procedure `long` `nextULong`(`kotlin.random.Random` v2 @kind object) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0cb744.  v0:= "<this>" @kind object;
  #L0cb748.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb74e.  call temp:= `nextLong`(v2) @signature `Lkotlin/random/Random;.nextLong:()J` @kind virtual;
  #L0cb754.  v0:= temp @kind wide;
  #L0cb756.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0cb75c.  v0:= temp @kind wide;
  #L0cb75e.  return v0 @kind wide;
}
procedure `long` `nextULong`(`kotlin.random.Random` v10 @kind object, `kotlin.ranges.ULongRange` v11 @kind object) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;Lkotlin/ranges/ULongRange;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0cb770.  v0:= "<this>" @kind object;
  #L0cb774.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb77a.  v0:= "range" @kind object;
  #L0cb77e.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb784.  call temp:= `isEmpty`(v11) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L0cb78a.  v0:= temp;
  #L0cb78c.  if v0 != 0 then goto L0cb84c;
  #L0cb790.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0cb796.  v0:= temp @kind wide;
  #L0cb798.  v2:= -1L;
  #L0cb79c.  call temp:= `ulongCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L0cb7a2.  v0:= temp;
  #L0cb7a4.  v1:= 4294967295L;
  #L0cb7ae.  v3:= 1I;
  #L0cb7b0.  if v0 >= 0 then goto L0cb7e6;
  #L0cb7b4.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0cb7ba.  v4:= temp @kind wide;
  #L0cb7bc.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0cb7c2.  v6:= temp @kind wide;
  #L0cb7c4.  v8:= (`long`) v3 @kind i2l;
  #L0cb7c6.  v0:= v8 ^& v1 @kind long;
  #L0cb7ca.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0cb7d0.  v0:= temp @kind wide;
  #L0cb7d2.  v6:= v6 + v0 @kind long;
  #L0cb7d4.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0cb7da.  v0:= temp @kind wide;
  #L0cb7dc.  call temp:= `nextULong-jmpaW-c`(v10, v4, v0) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L0cb7e2.  v10:= temp @kind wide;
  #L0cb7e4.  goto L0cb84a;
  #L0cb7e6.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0cb7ec.  v4:= temp @kind wide;
  #L0cb7ee.  v6:= 0L;
  #L0cb7f2.  call temp:= `ulongCompare`(v4, v6) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L0cb7f8.  v0:= temp;
  #L0cb7fa.  if v0 <= 0 then goto L0cb842;
  #L0cb7fe.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L0cb804.  v4:= temp @kind wide;
  #L0cb806.  v6:= (`long`) v3 @kind i2l;
  #L0cb808.  v0:= v6 ^& v1 @kind long;
  #L0cb80c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0cb812.  v2:= temp @kind wide;
  #L0cb814.  v4:= v4 - v2 @kind long;
  #L0cb816.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0cb81c.  v2:= temp @kind wide;
  #L0cb81e.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L0cb824.  v4:= temp @kind wide;
  #L0cb826.  call temp:= `nextULong-jmpaW-c`(v10, v2, v4) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L0cb82c.  v10:= temp @kind wide;
  #L0cb82e.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0cb834.  v0:= temp @kind wide;
  #L0cb836.  v10:= v10 + v0 @kind long;
  #L0cb838.  call temp:= `constructor-impl`(v10) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0cb83e.  v10:= temp @kind wide;
  #L0cb840.  goto L0cb84a;
  #L0cb842.  call temp:= `nextULong`(v10) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;)J` @kind static;
  #L0cb848.  v10:= temp @kind wide;
  #L0cb84a.  return v10 @kind wide;
  #L0cb84c.  v10:= new `java.lang.IllegalArgumentException`;
  #L0cb850.  v0:= new `java.lang.StringBuilder`;
  #L0cb854.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0cb85a.  v1:= "Cannot get random in empty range: " @kind object;
  #L0cb85e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cb864.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0cb86a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0cb870.  v11:= temp @kind object;
  #L0cb872.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0cb878.  throw v10;
}
procedure `long` `nextULong-V1Xi4fY`(`kotlin.random.Random` v2 @kind object, `long` v3 ) @signature `Lkotlin/random/URandomKt;.nextULong-V1Xi4fY:(Lkotlin/random/Random;J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0cb88c.  v0:= "$this$nextULong" @kind object;
  #L0cb890.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb896.  v0:= 0L;
  #L0cb89a.  call temp:= `nextULong-jmpaW-c`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L0cb8a0.  v2:= temp @kind wide;
  #L0cb8a2.  return v2 @kind wide;
}
procedure `long` `nextULong-jmpaW-c`(`kotlin.random.Random` v2 @kind object, `long` v3 , `long` v5 ) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0cb8b4.  v0:= "$this$nextULong" @kind object;
  #L0cb8b8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0cb8be.  call `checkULongRangeBounds-eb3DHEI`(v3, v5) @signature `Lkotlin/random/URandomKt;.checkULongRangeBounds-eb3DHEI:(JJ)V` @kind static;
  #L0cb8c4.  v0:= -9223372036854775808L;
  #L0cb8c8.  v3:= v3 ^~ v0 @kind long;
  #L0cb8ca.  v5:= v5 ^~ v0 @kind long;
  #L0cb8cc.  call temp:= `nextLong`(v2, v3, v5) @signature `Lkotlin/random/Random;.nextLong:(JJ)J` @kind virtual;
  #L0cb8d2.  v2:= temp @kind wide;
  #L0cb8d4.  v2:= v2 ^~ v0 @kind long;
  #L0cb8d6.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L0cb8dc.  v2:= temp @kind wide;
  #L0cb8de.  return v2 @kind wide;
}
