record `kotlin.coroutines.jvm.internal.DebugMetadataKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`int` v3 , `int` v4 ) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.a:(II)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0bd4f8.  if v4 > v3 then goto L0bd4fe;
  #L0bd4fc.  return @kind void;
  #L0bd4fe.  v0:= new `java.lang.IllegalStateException`;
  #L0bd502.  v1:= new `java.lang.StringBuilder`;
  #L0bd506.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0bd50c.  v2:= "Debug metadata version mismatch. Expected: " @kind object;
  #L0bd510.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bd516.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bd51c.  v3:= ", got " @kind object;
  #L0bd520.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bd526.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bd52c.  v3:= ". Please update the Kotlin standard library." @kind object;
  #L0bd530.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bd536.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0bd53c.  v3:= temp @kind object;
  #L0bd53e.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0bd544.  v3:= temp @kind object;
  #L0bd546.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0bd54c.  throw v0;
}
procedure `kotlin.coroutines.jvm.internal.DebugMetadata` `b`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v1 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L0bd4cc.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0bd4d2.  v1:= temp @kind object;
  #L0bd4d4.  v0:= constclass @type ^`kotlin.coroutines.jvm.internal.DebugMetadata` @kind object;
  #L0bd4d8.  call temp:= `getAnnotation`(v1, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L0bd4de.  v1:= temp @kind object;
  #L0bd4e0.  v1:= (`kotlin.coroutines.jvm.internal.DebugMetadata`) v1 @kind object;
  #L0bd4e4.  return v1 @kind object;
}
procedure `int` `c`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v2 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.c:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0bd2f8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0bd2fe.  v0:= temp @kind object;
  #L0bd300.  v1:= "label" @kind object;
  #L0bd304.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L0bd30a.  v0:= temp @kind object;
  #L0bd30c.  v1:= 1I;
  #L0bd30e.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L0bd314.  call temp:= `get`(v0, v2) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0bd31a.  v2:= temp @kind object;
  #L0bd31c.  v0:= instanceof @variable v2 @type ^`java.lang.Integer` @kind boolean;
  #L0bd320.  if v0 == 0 then goto L0bd32a;
  #L0bd324.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L0bd328.  goto L0bd32c;
  #L0bd32a.  v2:= 0I;
  #L0bd32c.  if v2 == 0 then goto L0bd33a;
  #L0bd330.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L0bd336.  v2:= temp;
  #L0bd338.  goto L0bd33c;
  #L0bd33a.  v2:= 0I;
  #L0bd33c.  v2:= v2 - v1 @kind int;
  #L0bd33e.  goto L0bd342;
  #L0bd340.  v2:= -1I;
  #L0bd342.  return v2;
  catch `java.lang.Exception` @[L0bd2f8..L0bd338] goto L0bd340;
}
procedure `java.lang.String`[] `getSpilledVariableFieldMapping`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v7 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getSpilledVariableFieldMapping:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0bd420.  v0:= "<this>" @kind object;
  #L0bd424.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bd42a.  call temp:= `b`(v7) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @kind static;
  #L0bd430.  v0:= temp @kind object;
  #L0bd432.  if v0 != 0 then goto L0bd43a;
  #L0bd436.  v7:= 0I;
  #L0bd438.  return v7 @kind object;
  #L0bd43a.  call temp:= `v`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.v:()I` @kind interface;
  #L0bd440.  v1:= temp;
  #L0bd442.  v2:= 1I;
  #L0bd444.  call `a`(v2, v1) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.a:(II)V` @kind static;
  #L0bd44a.  v1:= new `java.util.ArrayList`;
  #L0bd44e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0bd454.  call temp:= `c`(v7) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.c:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @kind static;
  #L0bd45a.  v7:= temp;
  #L0bd45c.  call temp:= `i`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.i:()[I` @kind interface;
  #L0bd462.  v2:= temp @kind object;
  #L0bd464.  v3:= length @variable v2;
  #L0bd466.  v4:= 0I;
  #L0bd468.  v5:= 0I;
  #L0bd46a.  if v5 >= v3 then goto L0bd4a0;
  #L0bd46e.  v6:= v2[v5];
  #L0bd472.  if v6 != v7 then goto L0bd49a;
  #L0bd476.  call temp:= `s`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.s:()[Ljava/lang/String;` @kind interface;
  #L0bd47c.  v6:= temp @kind object;
  #L0bd47e.  v6:= v6[v5] @kind object;
  #L0bd482.  call temp:= `add`(v1, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0bd488.  call temp:= `n`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.n:()[Ljava/lang/String;` @kind interface;
  #L0bd48e.  v6:= temp @kind object;
  #L0bd490.  v6:= v6[v5] @kind object;
  #L0bd494.  call temp:= `add`(v1, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0bd49a.  v5:= v5 + 1;
  #L0bd49e.  goto L0bd46a;
  #L0bd4a0.  v7:= new `java.lang.String`[v4];
  #L0bd4a4.  call temp:= `toArray`(v1, v7) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L0bd4aa.  v7:= temp @kind object;
  #L0bd4ac.  v0:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L0bd4b0.  call `checkNotNull`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bd4b6.  v7:= (`java.lang.String`[]) v7 @kind object;
  #L0bd4ba.  return v7 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v4 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getStackTraceElement:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0bd364.  v0:= "<this>" @kind object;
  #L0bd368.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bd36e.  call temp:= `b`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @kind static;
  #L0bd374.  v0:= temp @kind object;
  #L0bd376.  if v0 != 0 then goto L0bd37e;
  #L0bd37a.  v4:= 0I;
  #L0bd37c.  return v4 @kind object;
  #L0bd37e.  v1:= 1I;
  #L0bd380.  call temp:= `v`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.v:()I` @kind interface;
  #L0bd386.  v2:= temp;
  #L0bd388.  call `a`(v1, v2) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.a:(II)V` @kind static;
  #L0bd38e.  call temp:= `c`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.c:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @kind static;
  #L0bd394.  v1:= temp;
  #L0bd396.  if v1 >= 0 then goto L0bd39e;
  #L0bd39a.  v1:= -1I;
  #L0bd39c.  goto L0bd3aa;
  #L0bd39e.  call temp:= `l`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.l:()[I` @kind interface;
  #L0bd3a4.  v2:= temp @kind object;
  #L0bd3a6.  v1:= v2[v1];
  #L0bd3aa.  v2:= `@@kotlin.coroutines.jvm.internal.a.a` @type ^`kotlin.coroutines.jvm.internal.a` @kind object;
  #L0bd3ae.  call temp:= `b`(v2, v4) @signature `Lkotlin/coroutines/jvm/internal/a;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Ljava/lang/String;` @kind virtual;
  #L0bd3b4.  v4:= temp @kind object;
  #L0bd3b6.  if v4 != 0 then goto L0bd3c4;
  #L0bd3ba.  call temp:= `c`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.c:()Ljava/lang/String;` @kind interface;
  #L0bd3c0.  v4:= temp @kind object;
  #L0bd3c2.  goto L0bd3f4;
  #L0bd3c4.  v2:= new `java.lang.StringBuilder`;
  #L0bd3c8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0bd3ce.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bd3d4.  v4:= 47I;
  #L0bd3d8.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bd3de.  call temp:= `c`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.c:()Ljava/lang/String;` @kind interface;
  #L0bd3e4.  v4:= temp @kind object;
  #L0bd3e6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bd3ec.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0bd3f2.  v4:= temp @kind object;
  #L0bd3f4.  v2:= new `java.lang.StackTraceElement`;
  #L0bd3f8.  call temp:= `m`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.m:()Ljava/lang/String;` @kind interface;
  #L0bd3fe.  v3:= temp @kind object;
  #L0bd400.  call temp:= `f`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.f:()Ljava/lang/String;` @kind interface;
  #L0bd406.  v0:= temp @kind object;
  #L0bd408.  call `<init>`(v2, v4, v3, v0, v1) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L0bd40e.  return v2 @kind object;
}
