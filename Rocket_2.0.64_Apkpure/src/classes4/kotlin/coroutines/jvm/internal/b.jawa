record `kotlin.coroutines.jvm.internal.b` @kind class @AccessFlag FINAL extends `kotlin.coroutines.Continuation` @kind interface {
  `kotlin.Result` `kotlin.coroutines.jvm.internal.b.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.coroutines.jvm.internal.b` v0 @kind this) @signature `Lkotlin/coroutines/jvm/internal/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0bd8ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0bd8b2.  return @kind void;
}
procedure `void` `a`(`kotlin.coroutines.jvm.internal.b` v1 @kind this) @signature `Lkotlin/coroutines/jvm/internal/b;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0bd8c4.  @monitorenter v1
  #L0bd8c6.  v0:= v1.`kotlin.coroutines.jvm.internal.b.a` @type ^`kotlin.Result` @kind object;
  #L0bd8ca.  if v0 != 0 then goto L0bd8e0;
  #L0bd8ce.  v0:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L0bd8d2.  call `checkNotNull`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bd8d8.  call `wait`(v1) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L0bd8de.  goto L0bd8c6;
  #L0bd8e0.  call temp:= `unbox-impl`(v0) @signature `Lkotlin/Result;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L0bd8e6.  v0:= temp @kind object;
  #L0bd8e8.  call `throwOnFailure`(v0) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0bd8ee.  @monitorexit v1
  #L0bd8f0.  return @kind void;
  #L0bd8f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0bd8f4.  @monitorexit v1
  #L0bd8f6.  throw v0;
  catch `java.lang.Throwable` @[L0bd8c6..L0bd8ee] goto L0bd8f2;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlin.coroutines.jvm.internal.b` v1 @kind this) @signature `Lkotlin/coroutines/jvm/internal/b;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0bd894.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0bd898.  return v0 @kind object;
}
procedure `void` `resumeWith`(`kotlin.coroutines.jvm.internal.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/coroutines/jvm/internal/b;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L0bd914.  @monitorenter v0
  #L0bd916.  call temp:= `box-impl`(v1) @signature `Lkotlin/Result;.box-impl:(Ljava/lang/Object;)Lkotlin/Result;` @kind static;
  #L0bd91c.  v1:= temp @kind object;
  #L0bd91e.  v0.`kotlin.coroutines.jvm.internal.b.a` @type ^`kotlin.Result` := v1 @kind object;
  #L0bd922.  v1:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L0bd926.  call `checkNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bd92c.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L0bd932.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0bd936.  @monitorexit v0
  #L0bd938.  return @kind void;
  #L0bd93a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0bd93c.  @monitorexit v0
  #L0bd93e.  throw v1;
  catch `java.lang.Throwable` @[L0bd916..L0bd936] goto L0bd93a;
}
