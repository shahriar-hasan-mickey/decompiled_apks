record `kotlin.coroutines.jvm.internal.RestrictedContinuationImpl` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.coroutines.jvm.internal.BaseContinuationImpl` @kind class {
}
procedure `void` `<init>`(`kotlin.coroutines.jvm.internal.RestrictedContinuationImpl` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/coroutines/jvm/internal/RestrictedContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0bd784.  call `<init>`(v1, v2) @signature `Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0bd78a.  if v2 == 0 then goto L0bd7c2;
  #L0bd78e.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0bd794.  v2:= temp @kind object;
  #L0bd796.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0bd79a.  if v2 != v0 then goto L0bd7a2;
  #L0bd79e.  v2:= 1I;
  #L0bd7a0.  goto L0bd7a4;
  #L0bd7a2.  v2:= 0I;
  #L0bd7a4.  if v2 == 0 then goto L0bd7aa;
  #L0bd7a8.  goto L0bd7c2;
  #L0bd7aa.  v2:= new `java.lang.IllegalArgumentException`;
  #L0bd7ae.  v0:= "Coroutines with restricted suspension must have EmptyCoroutineContext" @kind object;
  #L0bd7b2.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0bd7b8.  v0:= temp @kind object;
  #L0bd7ba.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0bd7c0.  throw v2;
  #L0bd7c2.  return @kind void;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlin.coroutines.jvm.internal.RestrictedContinuationImpl` v1 @kind this) @signature `Lkotlin/coroutines/jvm/internal/RestrictedContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0bd76c.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0bd770.  return v0 @kind object;
}
