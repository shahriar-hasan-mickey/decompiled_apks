record `kotlin.coroutines.CombinedContext$Serialized` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface {
  `kotlin.coroutines.CoroutineContext`[] `kotlin.coroutines.CombinedContext$Serialized.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.coroutines.CombinedContext$Serialized$Companion` `@@kotlin.coroutines.CombinedContext$Serialized.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.coroutines.CombinedContext$Serialized.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/CombinedContext$Serialized;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0bba64.  v0:= new `kotlin.coroutines.CombinedContext$Serialized$Companion`;
  #L0bba68.  v1:= 0I;
  #L0bba6a.  call `<init>`(v0, v1) @signature `Lkotlin/coroutines/CombinedContext$Serialized$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0bba70.  `@@kotlin.coroutines.CombinedContext$Serialized.b` @type ^`kotlin.coroutines.CombinedContext$Serialized$Companion` := v0 @kind object;
  #L0bba74.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.CombinedContext$Serialized` v1 @kind this, `kotlin.coroutines.CoroutineContext`[] v2 @kind object) @signature `Lkotlin/coroutines/CombinedContext$Serialized;.<init>:([Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0bba88.  v0:= "elements" @kind object;
  #L0bba8c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bba92.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0bba98.  v1.`kotlin.coroutines.CombinedContext$Serialized.a` @type ^`kotlin.coroutines.CoroutineContext`[] := v2 @kind object;
  #L0bba9c.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.coroutines.CombinedContext$Serialized` v5 @kind this) @signature `Lkotlin/coroutines/CombinedContext$Serialized;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0bba30.  v0:= v5.`kotlin.coroutines.CombinedContext$Serialized.a` @type ^`kotlin.coroutines.CoroutineContext`[] @kind object;
  #L0bba34.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0bba38.  v2:= length @variable v0;
  #L0bba3a.  v3:= 0I;
  #L0bba3c.  if v3 >= v2 then goto L0bba52;
  #L0bba40.  v4:= v0[v3] @kind object;
  #L0bba44.  call temp:= `plus`(v1, v4) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0bba4a.  v1:= temp @kind object;
  #L0bba4c.  v3:= v3 + 1;
  #L0bba50.  goto L0bba3c;
  #L0bba52.  return v1 @kind object;
}
