record `kotlin.reflect.b$a` @kind class @AccessFlag FINAL_SYNTHETIC extends `kotlin.jvm.internal.FunctionReferenceImpl` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlin.reflect.b$a` `@@kotlin.reflect.b$a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/b$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0d20b0.  v0:= new `kotlin.reflect.b$a`;
  #L0d20b4.  call `<init>`(v0) @signature `Lkotlin/reflect/b$a;.<init>:()V` @kind direct;
  #L0d20ba.  `@@kotlin.reflect.b$a.a` @type ^`kotlin.reflect.b$a` := v0 @kind object;
  #L0d20be.  return @kind void;
}
procedure `void` `<init>`(`kotlin.reflect.b$a` v6 @kind this) @signature `Lkotlin/reflect/b$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0d20d0.  v2:= constclass @type ^`kotlin.reflect.TypesJVMKt` @kind object;
  #L0d20d4.  v1:= 1I;
  #L0d20d6.  v3:= "typeToString" @kind object;
  #L0d20da.  v4:= "typeToString(Ljava/lang/reflect/Type;)Ljava/lang/String;" @kind object;
  #L0d20de.  v5:= 1I;
  #L0d20e0.  v0:= v6 @kind object;
  #L0d20e2.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/FunctionReferenceImpl;.<init>:(ILjava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L0d20e8.  return @kind void;
}
procedure `java.lang.String` `a`(`kotlin.reflect.b$a` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lkotlin/reflect/b$a;.a:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0d208c.  v0:= "p0" @kind object;
  #L0d2090.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d2096.  call temp:= `access$typeToString`(v2) @signature `Lkotlin/reflect/TypesJVMKt;.access$typeToString:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L0d209c.  v2:= temp @kind object;
  #L0d209e.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.reflect.b$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/reflect/b$a;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d206c.  v1:= (`java.lang.reflect.Type`) v1 @kind object;
  #L0d2070.  call temp:= `a`(v0, v1) @signature `Lkotlin/reflect/b$a;.a:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind virtual;
  #L0d2076.  v1:= temp @kind object;
  #L0d2078.  return v1 @kind object;
}
