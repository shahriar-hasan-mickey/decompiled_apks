record `kotlin.reflect.KClasses` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `cast`(`kotlin.reflect.KClass` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/reflect/KClasses;.cast:(Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0d17bc.  v0:= "<this>" @kind object;
  #L0d17c0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d17c6.  call temp:= `isInstance`(v2, v3) @signature `Lkotlin/reflect/KClass;.isInstance:(Ljava/lang/Object;)Z` @kind interface;
  #L0d17cc.  v0:= temp;
  #L0d17ce.  if v0 == 0 then goto L0d17de;
  #L0d17d2.  v2:= "null cannot be cast to non-null type T of kotlin.reflect.KClasses.cast" @kind object;
  #L0d17d6.  call `checkNotNull`(v3, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d17dc.  return v3 @kind object;
  #L0d17de.  v3:= new `java.lang.ClassCastException`;
  #L0d17e2.  v0:= new `java.lang.StringBuilder`;
  #L0d17e6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0d17ec.  v1:= "Value cannot be cast to " @kind object;
  #L0d17f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d17f6.  call temp:= `getQualifiedName`(v2) @signature `Lkotlin/reflect/KClass;.getQualifiedName:()Ljava/lang/String;` @kind interface;
  #L0d17fc.  v2:= temp @kind object;
  #L0d17fe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d1804.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0d180a.  v2:= temp @kind object;
  #L0d180c.  call `<init>`(v3, v2) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d1812.  throw v3;
}
procedure `java.lang.Object` `safeCast`(`kotlin.reflect.KClass` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/reflect/KClasses;.safeCast:(Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0d1824.  v0:= "<this>" @kind object;
  #L0d1828.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d182e.  call temp:= `isInstance`(v1, v2) @signature `Lkotlin/reflect/KClass;.isInstance:(Ljava/lang/Object;)Z` @kind interface;
  #L0d1834.  v1:= temp;
  #L0d1836.  if v1 == 0 then goto L0d1846;
  #L0d183a.  v1:= "null cannot be cast to non-null type T of kotlin.reflect.KClasses.safeCast" @kind object;
  #L0d183e.  call `checkNotNull`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d1844.  goto L0d1848;
  #L0d1846.  v2:= 0I;
  #L0d1848.  return v2 @kind object;
}
