record `kotlin.reflect.TypesJVMKt$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/TypesJVMKt$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0d2530.  call temp:= `values`() @signature `Lkotlin/reflect/KVariance;.values:()[Lkotlin/reflect/KVariance;` @kind static;
  #L0d2536.  v0:= temp @kind object;
  #L0d2538.  v0:= length @variable v0;
  #L0d253a.  v0:= new `int`[v0];
  #L0d253e.  v1:= `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0d2542.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0d2548.  v1:= temp;
  #L0d254a.  v2:= 1I;
  #L0d254c.  v0[v1]:= v2;
  #L0d2550.  v1:= `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0d2554.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0d255a.  v1:= temp;
  #L0d255c.  v2:= 2I;
  #L0d255e.  v0[v1]:= v2;
  #L0d2562.  v1:= `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0d2566.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0d256c.  v1:= temp;
  #L0d256e.  v2:= 3I;
  #L0d2570.  v0[v1]:= v2;
  #L0d2574.  `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L0d2578.  return @kind void;
}
