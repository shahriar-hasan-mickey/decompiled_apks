record `kotlin.reflect.c` @kind class @AccessFlag FINAL extends `java.lang.reflect.TypeVariable` @kind interface, `java.lang.reflect.Type` @kind interface {
  `kotlin.reflect.KTypeParameter` `kotlin.reflect.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.reflect.c` v1 @kind this, `kotlin.reflect.KTypeParameter` v2 @kind object) @signature `Lkotlin/reflect/c;.<init>:(Lkotlin/reflect/KTypeParameter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0d2508.  v0:= "typeParameter" @kind object;
  #L0d250c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d2512.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0d2518.  v1.`kotlin.reflect.c.a` @type ^`kotlin.reflect.KTypeParameter` := v2 @kind object;
  #L0d251c.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.reflect.c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/reflect/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0d2338.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L0d233c.  if v0 == 0 then goto L0d2380;
  #L0d2340.  call temp:= `getName`(v2) @signature `Lkotlin/reflect/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L0d2346.  v0:= temp @kind object;
  #L0d2348.  v3:= (`java.lang.reflect.TypeVariable`) v3 @kind object;
  #L0d234c.  call temp:= `getName`(v3) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L0d2352.  v1:= temp @kind object;
  #L0d2354.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0d235a.  v0:= temp;
  #L0d235c.  if v0 == 0 then goto L0d2380;
  #L0d2360.  call temp:= `getGenericDeclaration`(v2) @signature `Lkotlin/reflect/c;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind virtual;
  #L0d2366.  v0:= temp @kind object;
  #L0d2368.  call temp:= `getGenericDeclaration`(v3) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L0d236e.  v3:= temp @kind object;
  #L0d2370.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0d2376.  v3:= temp;
  #L0d2378.  if v3 == 0 then goto L0d2380;
  #L0d237c.  v3:= 1I;
  #L0d237e.  goto L0d2382;
  #L0d2380.  v3:= 0I;
  #L0d2382.  return v3;
}
procedure `java.lang.reflect.Type`[] `getBounds`(`kotlin.reflect.c` v4 @kind this) @signature `Lkotlin/reflect/c;.getBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0d2484.  v0:= v4.`kotlin.reflect.c.a` @type ^`kotlin.reflect.KTypeParameter` @kind object;
  #L0d2488.  call temp:= `getUpperBounds`(v0) @signature `Lkotlin/reflect/KTypeParameter;.getUpperBounds:()Ljava/util/List;` @kind interface;
  #L0d248e.  v0:= temp @kind object;
  #L0d2490.  v1:= new `java.util.ArrayList`;
  #L0d2494.  v2:= 10I;
  #L0d2498.  call temp:= `collectionSizeOrDefault`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L0d249e.  v2:= temp;
  #L0d24a0.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0d24a6.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d24ac.  v0:= temp @kind object;
  #L0d24ae.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d24b4.  v2:= temp;
  #L0d24b6.  if v2 == 0 then goto L0d24d8;
  #L0d24ba.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d24c0.  v2:= temp @kind object;
  #L0d24c2.  v2:= (`kotlin.reflect.KType`) v2 @kind object;
  #L0d24c6.  v3:= 1I;
  #L0d24c8.  call temp:= `access$computeJavaType`(v2, v3) @signature `Lkotlin/reflect/TypesJVMKt;.access$computeJavaType:(Lkotlin/reflect/KType;Z)Ljava/lang/reflect/Type;` @kind static;
  #L0d24ce.  v2:= temp @kind object;
  #L0d24d0.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0d24d6.  goto L0d24ae;
  #L0d24d8.  v0:= 0I;
  #L0d24da.  v0:= new `java.lang.reflect.Type`[v0];
  #L0d24de.  call temp:= `toArray`(v1, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L0d24e4.  v0:= temp @kind object;
  #L0d24e6.  v1:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L0d24ea.  call `checkNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d24f0.  v0:= (`java.lang.reflect.Type`[]) v0 @kind object;
  #L0d24f4.  return v0 @kind object;
}
procedure `java.lang.reflect.GenericDeclaration` `getGenericDeclaration`(`kotlin.reflect.c` v4 @kind this) @signature `Lkotlin/reflect/c;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0d2420.  v0:= new `java.lang.StringBuilder`;
  #L0d2424.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0d242a.  v1:= "getGenericDeclaration() is not yet supported for type variables created from KType: " @kind object;
  #L0d242e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d2434.  v1:= v4.`kotlin.reflect.c.a` @type ^`kotlin.reflect.KTypeParameter` @kind object;
  #L0d2438.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d243e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0d2444.  v0:= temp @kind object;
  #L0d2446.  v1:= new `kotlin.NotImplementedError`;
  #L0d244a.  v2:= new `java.lang.StringBuilder`;
  #L0d244e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0d2454.  v3:= "An operation is not implemented: " @kind object;
  #L0d2458.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d245e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d2464.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0d246a.  v0:= temp @kind object;
  #L0d246c.  call `<init>`(v1, v0) @signature `Lkotlin/NotImplementedError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d2472.  throw v1;
}
procedure `java.lang.String` `getName`(`kotlin.reflect.c` v1 @kind this) @signature `Lkotlin/reflect/c;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0d23c8.  v0:= v1.`kotlin.reflect.c.a` @type ^`kotlin.reflect.KTypeParameter` @kind object;
  #L0d23cc.  call temp:= `getName`(v0) @signature `Lkotlin/reflect/KTypeParameter;.getName:()Ljava/lang/String;` @kind interface;
  #L0d23d2.  v0:= temp @kind object;
  #L0d23d4.  return v0 @kind object;
}
procedure `java.lang.String` `getTypeName`(`kotlin.reflect.c` v1 @kind this) @signature `Lkotlin/reflect/c;.getTypeName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0d23e8.  call temp:= `getName`(v1) @signature `Lkotlin/reflect/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L0d23ee.  v0:= temp @kind object;
  #L0d23f0.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.reflect.c` v2 @kind this) @signature `Lkotlin/reflect/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0d2394.  call temp:= `getName`(v2) @signature `Lkotlin/reflect/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L0d239a.  v0:= temp @kind object;
  #L0d239c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0d23a2.  v0:= temp;
  #L0d23a4.  call temp:= `getGenericDeclaration`(v2) @signature `Lkotlin/reflect/c;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind virtual;
  #L0d23aa.  v1:= temp @kind object;
  #L0d23ac.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0d23b2.  v1:= temp;
  #L0d23b4.  v0:= v0 ^~ v1 @kind int;
  #L0d23b6.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.reflect.c` v1 @kind this) @signature `Lkotlin/reflect/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0d2404.  call temp:= `getTypeName`(v1) @signature `Lkotlin/reflect/c;.getTypeName:()Ljava/lang/String;` @kind virtual;
  #L0d240a.  v0:= temp @kind object;
  #L0d240c.  return v0 @kind object;
}
