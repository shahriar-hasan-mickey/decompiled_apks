record `kotlin.reflect.KTypeProjection$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.reflect.KTypeProjection$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/KTypeProjection$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0d1af8.  call temp:= `values`() @signature `Lkotlin/reflect/KVariance;.values:()[Lkotlin/reflect/KVariance;` @kind static;
  #L0d1afe.  v0:= temp @kind object;
  #L0d1b00.  v0:= length @variable v0;
  #L0d1b02.  v0:= new `int`[v0];
  #L0d1b06.  v1:= `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0d1b0a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0d1b10.  v1:= temp;
  #L0d1b12.  v2:= 1I;
  #L0d1b14.  v0[v1]:= v2;
  #L0d1b18.  v1:= `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0d1b1c.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0d1b22.  v1:= temp;
  #L0d1b24.  v2:= 2I;
  #L0d1b26.  v0[v1]:= v2;
  #L0d1b2a.  v1:= `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L0d1b2e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0d1b34.  v1:= temp;
  #L0d1b36.  v2:= 3I;
  #L0d1b38.  v0[v1]:= v2;
  #L0d1b3c.  `@@kotlin.reflect.KTypeProjection$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L0d1b40.  return @kind void;
}
