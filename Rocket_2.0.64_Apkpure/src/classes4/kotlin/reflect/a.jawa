record `kotlin.reflect.a` @kind class @AccessFlag FINAL extends `java.lang.reflect.GenericArrayType` @kind interface, `java.lang.reflect.Type` @kind interface {
  `java.lang.reflect.Type` `kotlin.reflect.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.reflect.a` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lkotlin/reflect/a;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0d15f4.  v0:= "elementType" @kind object;
  #L0d15f8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d15fe.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0d1604.  v1.`kotlin.reflect.a.a` @type ^`java.lang.reflect.Type` := v2 @kind object;
  #L0d1608.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.reflect.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/reflect/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0d151c.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L0d1520.  if v0 == 0 then goto L0d1548;
  #L0d1524.  call temp:= `getGenericComponentType`(v1) @signature `Lkotlin/reflect/a;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L0d152a.  v0:= temp @kind object;
  #L0d152c.  v2:= (`java.lang.reflect.GenericArrayType`) v2 @kind object;
  #L0d1530.  call temp:= `getGenericComponentType`(v2) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L0d1536.  v2:= temp @kind object;
  #L0d1538.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0d153e.  v2:= temp;
  #L0d1540.  if v2 == 0 then goto L0d1548;
  #L0d1544.  v2:= 1I;
  #L0d1546.  goto L0d154a;
  #L0d1548.  v2:= 0I;
  #L0d154a.  return v2;
}
procedure `java.lang.reflect.Type` `getGenericComponentType`(`kotlin.reflect.a` v1 @kind this) @signature `Lkotlin/reflect/a;.getGenericComponentType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0d15dc.  v0:= v1.`kotlin.reflect.a.a` @type ^`java.lang.reflect.Type` @kind object;
  #L0d15e0.  return v0 @kind object;
}
procedure `java.lang.String` `getTypeName`(`kotlin.reflect.a` v2 @kind this) @signature `Lkotlin/reflect/a;.getTypeName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0d1580.  v0:= new `java.lang.StringBuilder`;
  #L0d1584.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0d158a.  v1:= v2.`kotlin.reflect.a.a` @type ^`java.lang.reflect.Type` @kind object;
  #L0d158e.  call temp:= `access$typeToString`(v1) @signature `Lkotlin/reflect/TypesJVMKt;.access$typeToString:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L0d1594.  v1:= temp @kind object;
  #L0d1596.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d159c.  v1:= "[]" @kind object;
  #L0d15a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d15a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0d15ac.  v0:= temp @kind object;
  #L0d15ae.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.reflect.a` v1 @kind this) @signature `Lkotlin/reflect/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0d155c.  call temp:= `getGenericComponentType`(v1) @signature `Lkotlin/reflect/a;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L0d1562.  v0:= temp @kind object;
  #L0d1564.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0d156a.  v0:= temp;
  #L0d156c.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.reflect.a` v1 @kind this) @signature `Lkotlin/reflect/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0d15c0.  call temp:= `getTypeName`(v1) @signature `Lkotlin/reflect/a;.getTypeName:()Ljava/lang/String;` @kind virtual;
  #L0d15c6.  v0:= temp @kind object;
  #L0d15c8.  return v0 @kind object;
}
