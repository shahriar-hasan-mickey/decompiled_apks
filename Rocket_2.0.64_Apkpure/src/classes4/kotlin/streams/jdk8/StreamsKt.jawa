record `kotlin.streams.jdk8.StreamsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.util.Spliterator` `a`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.a:(Lkotlin/sequences/Sequence;)Ljava/util/Spliterator;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0da9b8.  call temp:= `b`(v0) @signature `Lkotlin/streams/jdk8/StreamsKt;.b:(Lkotlin/sequences/Sequence;)Ljava/util/Spliterator;` @kind static;
  #L0da9be.  v0:= temp @kind object;
  #L0da9c0.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.stream.DoubleStream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.asSequence:(Ljava/util/stream/DoubleStream;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0daa44.  v0:= "<this>" @kind object;
  #L0daa48.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0daa4e.  v0:= new `kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4`;
  #L0daa52.  call `<init>`(v0, v1) @signature `Lkotlin/streams/jdk8/StreamsKt$asSequence$$inlined$Sequence$4;.<init>:(Ljava/util/stream/DoubleStream;)V` @kind direct;
  #L0daa58.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.stream.IntStream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.asSequence:(Ljava/util/stream/IntStream;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0daa6c.  v0:= "<this>" @kind object;
  #L0daa70.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0daa76.  v0:= new `kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2`;
  #L0daa7a.  call `<init>`(v0, v1) @signature `Lkotlin/streams/jdk8/StreamsKt$asSequence$$inlined$Sequence$2;.<init>:(Ljava/util/stream/IntStream;)V` @kind direct;
  #L0daa80.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.stream.LongStream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.asSequence:(Ljava/util/stream/LongStream;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0daa94.  v0:= "<this>" @kind object;
  #L0daa98.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0daa9e.  v0:= new `kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3`;
  #L0daaa2.  call `<init>`(v0, v1) @signature `Lkotlin/streams/jdk8/StreamsKt$asSequence$$inlined$Sequence$3;.<init>:(Ljava/util/stream/LongStream;)V` @kind direct;
  #L0daaa8.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.stream.Stream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.asSequence:(Ljava/util/stream/Stream;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0daabc.  v0:= "<this>" @kind object;
  #L0daac0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0daac6.  v0:= new `kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1`;
  #L0daaca.  call `<init>`(v0, v1) @signature `Lkotlin/streams/jdk8/StreamsKt$asSequence$$inlined$Sequence$1;.<init>:(Ljava/util/stream/Stream;)V` @kind direct;
  #L0daad0.  return v0 @kind object;
}
procedure `java.util.stream.Stream` `asStream`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.asStream:(Lkotlin/sequences/Sequence;)Ljava/util/stream/Stream;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0daa04.  v0:= "<this>" @kind object;
  #L0daa08.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0daa0e.  v0:= new `v0.a`;
  #L0daa12.  call `<init>`(v0, v2) @signature `Lv0/a;.<init>:(Lkotlin/sequences/Sequence;)V` @kind direct;
  #L0daa18.  v2:= 16I;
  #L0daa1c.  v1:= 0I;
  #L0daa1e.  call temp:= `stream`(v0, v2, v1) @signature `Ljava/util/stream/StreamSupport;.stream:(Ljava/util/function/Supplier;IZ)Ljava/util/stream/Stream;` @kind static;
  #L0daa24.  v2:= temp @kind object;
  #L0daa26.  v0:= "stream({ Spliterators.spâ€¦literator.ORDERED, false)" @kind object;
  #L0daa2a.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0daa30.  return v2 @kind object;
}
procedure `java.util.Spliterator` `b`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.b:(Lkotlin/sequences/Sequence;)Ljava/util/Spliterator;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L0da9d4.  v0:= "$this_asStream" @kind object;
  #L0da9d8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da9de.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0da9e4.  v1:= temp @kind object;
  #L0da9e6.  v0:= 16I;
  #L0da9ea.  call temp:= `spliteratorUnknownSize`(v1, v0) @signature `Ljava/util/Spliterators;.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;` @kind static;
  #L0da9f0.  v1:= temp @kind object;
  #L0da9f2.  return v1 @kind object;
}
procedure `java.util.List` `toList`(`java.util.stream.DoubleStream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.toList:(Ljava/util/stream/DoubleStream;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0da8d4.  v0:= "<this>" @kind object;
  #L0da8d8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da8de.  call temp:= `toArray`(v1) @signature `Ljava/util/stream/DoubleStream;.toArray:()[D` @kind interface;
  #L0da8e4.  v1:= temp @kind object;
  #L0da8e6.  v0:= "toArray()" @kind object;
  #L0da8ea.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da8f0.  call temp:= `asList`(v1) @signature `Lkotlin/collections/ArraysKt;.asList:([D)Ljava/util/List;` @kind static;
  #L0da8f6.  v1:= temp @kind object;
  #L0da8f8.  return v1 @kind object;
}
procedure `java.util.List` `toList`(`java.util.stream.IntStream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.toList:(Ljava/util/stream/IntStream;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0da90c.  v0:= "<this>" @kind object;
  #L0da910.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da916.  call temp:= `toArray`(v1) @signature `Ljava/util/stream/IntStream;.toArray:()[I` @kind interface;
  #L0da91c.  v1:= temp @kind object;
  #L0da91e.  v0:= "toArray()" @kind object;
  #L0da922.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da928.  call temp:= `asList`(v1) @signature `Lkotlin/collections/ArraysKt;.asList:([I)Ljava/util/List;` @kind static;
  #L0da92e.  v1:= temp @kind object;
  #L0da930.  return v1 @kind object;
}
procedure `java.util.List` `toList`(`java.util.stream.LongStream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.toList:(Ljava/util/stream/LongStream;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0da944.  v0:= "<this>" @kind object;
  #L0da948.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da94e.  call temp:= `toArray`(v1) @signature `Ljava/util/stream/LongStream;.toArray:()[J` @kind interface;
  #L0da954.  v1:= temp @kind object;
  #L0da956.  v0:= "toArray()" @kind object;
  #L0da95a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da960.  call temp:= `asList`(v1) @signature `Lkotlin/collections/ArraysKt;.asList:([J)Ljava/util/List;` @kind static;
  #L0da966.  v1:= temp @kind object;
  #L0da968.  return v1 @kind object;
}
procedure `java.util.List` `toList`(`java.util.stream.Stream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt;.toList:(Ljava/util/stream/Stream;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0da97c.  v0:= "<this>" @kind object;
  #L0da980.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da986.  call temp:= `toList`() @signature `Ljava/util/stream/Collectors;.toList:()Ljava/util/stream/Collector;` @kind static;
  #L0da98c.  v0:= temp @kind object;
  #L0da98e.  call temp:= `collect`(v1, v0) @signature `Ljava/util/stream/Stream;.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;` @kind interface;
  #L0da994.  v1:= temp @kind object;
  #L0da996.  v0:= "collect(Collectors.toList<T>())" @kind object;
  #L0da99a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0da9a0.  v1:= (`java.util.List`) v1 @kind object;
  #L0da9a4.  return v1 @kind object;
}
