record `kotlin.collections.MapsKt` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.u` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.MapsKt` v0 @kind this) @signature `Lkotlin/collections/MapsKt;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0afa1c.  call `<init>`(v0) @signature `Lkotlin/collections/u;.<init>:()V` @kind direct;
  #L0afa22.  return @kind void;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.Map` v0 @kind object) @signature `Lkotlin/collections/MapsKt;.asSequence:(Ljava/util/Map;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0afa00.  call temp:= `asSequence`(v0) @signature `Lkotlin/collections/u;.asSequence:(Ljava/util/Map;)Lkotlin/sequences/Sequence;` @kind static;
  #L0afa06.  v0:= temp @kind object;
  #L0afa08.  return v0 @kind object;
}
procedure `java.util.Map` `build`(`java.util.Map` v0 @kind object) @signature `Lkotlin/collections/MapsKt;.build:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0af93c.  call temp:= `build`(v0) @signature `Lkotlin/collections/r;.build:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L0af942.  v0:= temp @kind object;
  #L0af944.  return v0 @kind object;
}
procedure `java.util.Map` `createMapBuilder`(`int` v0 ) @signature `Lkotlin/collections/MapsKt;.createMapBuilder:(I)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0af958.  call temp:= `createMapBuilder`(v0) @signature `Lkotlin/collections/r;.createMapBuilder:(I)Ljava/util/Map;` @kind static;
  #L0af95e.  v0:= temp @kind object;
  #L0af960.  return v0 @kind object;
}
procedure `java.util.Map` `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L0af974.  call temp:= `emptyMap`() @signature `Lkotlin/collections/s;.emptyMap:()Ljava/util/Map;` @kind static;
  #L0af97a.  v0:= temp @kind object;
  #L0af97c.  return v0 @kind object;
}
procedure `int` `mapCapacity`(`int` v0 ) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0af904.  call temp:= `mapCapacity`(v0) @signature `Lkotlin/collections/r;.mapCapacity:(I)I` @kind static;
  #L0af90a.  v0:= temp;
  #L0af90c.  return v0;
}
procedure `java.util.Map` `mapOf`(`kotlin.Pair`[] v0 @kind object) @signature `Lkotlin/collections/MapsKt;.mapOf:([Lkotlin/Pair;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0af990.  call temp:= `mapOf`(v0) @signature `Lkotlin/collections/s;.mapOf:([Lkotlin/Pair;)Ljava/util/Map;` @kind static;
  #L0af996.  v0:= temp @kind object;
  #L0af998.  return v0 @kind object;
}
procedure `java.util.List` `toList`(`java.util.Map` v0 @kind object) @signature `Lkotlin/collections/MapsKt;.toList:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0af920.  call temp:= `toList`(v0) @signature `Lkotlin/collections/u;.toList:(Ljava/util/Map;)Ljava/util/List;` @kind static;
  #L0af926.  v0:= temp @kind object;
  #L0af928.  return v0 @kind object;
}
procedure `java.util.Map` `toMap`(`java.lang.Iterable` v0 @kind object) @signature `Lkotlin/collections/MapsKt;.toMap:(Ljava/lang/Iterable;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0af9ac.  call temp:= `toMap`(v0) @signature `Lkotlin/collections/s;.toMap:(Ljava/lang/Iterable;)Ljava/util/Map;` @kind static;
  #L0af9b2.  v0:= temp @kind object;
  #L0af9b4.  return v0 @kind object;
}
procedure `java.util.Map` `toMap`(`java.util.Map` v0 @kind object) @signature `Lkotlin/collections/MapsKt;.toMap:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0af9c8.  call temp:= `toMap`(v0) @signature `Lkotlin/collections/s;.toMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L0af9ce.  v0:= temp @kind object;
  #L0af9d0.  return v0 @kind object;
}
procedure `java.util.Map` `toMutableMap`(`java.util.Map` v0 @kind object) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0af9e4.  call temp:= `toMutableMap`(v0) @signature `Lkotlin/collections/s;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L0af9ea.  v0:= temp @kind object;
  #L0af9ec.  return v0 @kind object;
}
