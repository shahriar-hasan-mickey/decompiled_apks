record `kotlin.collections.AbstractMap$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.collections.AbstractMap$Companion` v0 @kind this) @signature `Lkotlin/collections/AbstractMap$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L07e938.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07e93e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.AbstractMap$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/collections/AbstractMap$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L07e950.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractMap$Companion;.<init>:()V` @kind direct;
  #L07e956.  return @kind void;
}
procedure `boolean` `entryEquals$kotlin_stdlib`(`kotlin.collections.AbstractMap$Companion` v3 @kind this, `java.util.Map$Entry` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlin/collections/AbstractMap$Companion;.entryEquals$kotlin_stdlib:(Ljava/util/Map$Entry;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L07e82c.  v0:= "e" @kind object;
  #L07e830.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L07e836.  v0:= instanceof @variable v5 @type ^`java.util.Map$Entry` @kind boolean;
  #L07e83a.  v1:= 0I;
  #L07e83c.  if v0 != 0 then goto L07e842;
  #L07e840.  return v1;
  #L07e842.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L07e848.  v0:= temp @kind object;
  #L07e84a.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L07e84e.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L07e854.  v2:= temp @kind object;
  #L07e856.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L07e85c.  v0:= temp;
  #L07e85e.  if v0 == 0 then goto L07e880;
  #L07e862.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L07e868.  v4:= temp @kind object;
  #L07e86a.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L07e870.  v5:= temp @kind object;
  #L07e872.  call temp:= `areEqual`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L07e878.  v4:= temp;
  #L07e87a.  if v4 == 0 then goto L07e880;
  #L07e87e.  v1:= 1I;
  #L07e880.  return v1;
}
procedure `int` `entryHashCode$kotlin_stdlib`(`kotlin.collections.AbstractMap$Companion` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lkotlin/collections/AbstractMap$Companion;.entryHashCode$kotlin_stdlib:(Ljava/util/Map$Entry;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L07e894.  v0:= "e" @kind object;
  #L07e898.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L07e89e.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L07e8a4.  v0:= temp @kind object;
  #L07e8a6.  v1:= 0I;
  #L07e8a8.  if v0 == 0 then goto L07e8b6;
  #L07e8ac.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L07e8b2.  v0:= temp;
  #L07e8b4.  goto L07e8b8;
  #L07e8b6.  v0:= 0I;
  #L07e8b8.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L07e8be.  v3:= temp @kind object;
  #L07e8c0.  if v3 == 0 then goto L07e8cc;
  #L07e8c4.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L07e8ca.  v1:= temp;
  #L07e8cc.  v3:= v0 ^~ v1 @kind int;
  #L07e8d0.  return v3;
}
procedure `java.lang.String` `entryToString$kotlin_stdlib`(`kotlin.collections.AbstractMap$Companion` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lkotlin/collections/AbstractMap$Companion;.entryToString$kotlin_stdlib:(Ljava/util/Map$Entry;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L07e8e4.  v0:= "e" @kind object;
  #L07e8e8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L07e8ee.  v0:= new `java.lang.StringBuilder`;
  #L07e8f2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07e8f8.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L07e8fe.  v1:= temp @kind object;
  #L07e900.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e906.  v1:= 61I;
  #L07e90a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e910.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L07e916.  v3:= temp @kind object;
  #L07e918.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e91e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07e924.  v3:= temp @kind object;
  #L07e926.  return v3 @kind object;
}
