record `kotlin.collections.LongIterator` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
}
procedure `void` `<init>`(`kotlin.collections.LongIterator` v0 @kind this) @signature `Lkotlin/collections/LongIterator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0adbec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0adbf2.  return @kind void;
}
procedure `java.lang.Long` `next`(`kotlin.collections.LongIterator` v2 @kind this) @signature `Lkotlin/collections/LongIterator;.next:()Ljava/lang/Long;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0adba4.  call temp:= `nextLong`(v2) @signature `Lkotlin/collections/LongIterator;.nextLong:()J` @kind virtual;
  #L0adbaa.  v0:= temp @kind wide;
  #L0adbac.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0adbb2.  v0:= temp @kind object;
  #L0adbb4.  return v0 @kind object;
}
procedure `java.lang.Object` `next`(`kotlin.collections.LongIterator` v2 @kind this) @signature `Lkotlin/collections/LongIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0adbc8.  call temp:= `nextLong`(v2) @signature `Lkotlin/collections/LongIterator;.nextLong:()J` @kind virtual;
  #L0adbce.  v0:= temp @kind wide;
  #L0adbd0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0adbd6.  v0:= temp @kind object;
  #L0adbd8.  return v0 @kind object;
}
procedure `long` `nextLong`() @signature `Lkotlin/collections/LongIterator;.nextLong:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `remove`(`kotlin.collections.LongIterator` v2 @kind this) @signature `Lkotlin/collections/LongIterator;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0adc04.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0adc08.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L0adc0c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0adc12.  throw v0;
}
