record `kotlin.collections.ShortIterator` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
}
procedure `void` `<init>`(`kotlin.collections.ShortIterator` v0 @kind this) @signature `Lkotlin/collections/ShortIterator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0b0ba8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0b0bae.  return @kind void;
}
procedure `java.lang.Object` `next`(`kotlin.collections.ShortIterator` v1 @kind this) @signature `Lkotlin/collections/ShortIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L0b0b60.  call temp:= `nextShort`(v1) @signature `Lkotlin/collections/ShortIterator;.nextShort:()S` @kind virtual;
  #L0b0b66.  v0:= temp;
  #L0b0b68.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L0b0b6e.  v0:= temp @kind object;
  #L0b0b70.  return v0 @kind object;
}
procedure `java.lang.Short` `next`(`kotlin.collections.ShortIterator` v1 @kind this) @signature `Lkotlin/collections/ShortIterator;.next:()Ljava/lang/Short;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b0b84.  call temp:= `nextShort`(v1) @signature `Lkotlin/collections/ShortIterator;.nextShort:()S` @kind virtual;
  #L0b0b8a.  v0:= temp;
  #L0b0b8c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L0b0b92.  v0:= temp @kind object;
  #L0b0b94.  return v0 @kind object;
}
procedure `short` `nextShort`() @signature `Lkotlin/collections/ShortIterator;.nextShort:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `remove`(`kotlin.collections.ShortIterator` v2 @kind this) @signature `Lkotlin/collections/ShortIterator;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0b0bc0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0b0bc4.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L0b0bc8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b0bce.  throw v0;
}
