record `kotlin.collections.j` @kind class @AccessFlag  extends `kotlin.collections.i` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.j` v0 @kind this) @signature `Lkotlin/collections/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0a6320.  call `<init>`(v0) @signature `Lkotlin/collections/i;.<init>:()V` @kind direct;
  #L0a6326.  return @kind void;
}
procedure `int` `access$reverseElementIndex`(`java.util.List` v0 @kind object, `int` v1 ) @signature `Lkotlin/collections/j;.access$reverseElementIndex:(Ljava/util/List;I)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0a6168.  call temp:= `e`(v0, v1) @signature `Lkotlin/collections/j;.e:(Ljava/util/List;I)I` @kind static;
  #L0a616e.  v0:= temp;
  #L0a6170.  return v0;
}
procedure `int` `access$reversePositionIndex`(`java.util.List` v0 @kind object, `int` v1 ) @signature `Lkotlin/collections/j;.access$reversePositionIndex:(Ljava/util/List;I)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0a6184.  call temp:= `f`(v0, v1) @signature `Lkotlin/collections/j;.f:(Ljava/util/List;I)I` @kind static;
  #L0a618a.  v0:= temp;
  #L0a618c.  return v0;
}
procedure `java.util.List` `asReversed`(`java.util.List` v1 @kind object) @signature `Lkotlin/collections/j;.asReversed:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0a62d0.  v0:= "<this>" @kind object;
  #L0a62d4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a62da.  v0:= new `kotlin.collections.y`;
  #L0a62de.  call `<init>`(v0, v1) @signature `Lkotlin/collections/y;.<init>:(Ljava/util/List;)V` @kind direct;
  #L0a62e4.  return v0 @kind object;
}
procedure `java.util.List` `asReversedMutable`(`java.util.List` v1 @kind object) @signature `Lkotlin/collections/j;.asReversedMutable:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0a62f8.  v0:= "<this>" @kind object;
  #L0a62fc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a6302.  v0:= new `kotlin.collections.x`;
  #L0a6306.  call `<init>`(v0, v1) @signature `Lkotlin/collections/x;.<init>:(Ljava/util/List;)V` @kind direct;
  #L0a630c.  return v0 @kind object;
}
procedure `int` `e`(`java.util.List` v4 @kind object, `int` v5 ) @signature `Lkotlin/collections/j;.e:(Ljava/util/List;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0a61a0.  v0:= new `kotlin.ranges.IntRange`;
  #L0a61a4.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/collections/CollectionsKt;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L0a61aa.  v1:= temp;
  #L0a61ac.  v2:= 0I;
  #L0a61ae.  call `<init>`(v0, v2, v1) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0a61b4.  call temp:= `contains`(v0, v5) @signature `Lkotlin/ranges/IntRange;.contains:(I)Z` @kind virtual;
  #L0a61ba.  v0:= temp;
  #L0a61bc.  if v0 == 0 then goto L0a61cc;
  #L0a61c0.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/collections/CollectionsKt;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L0a61c6.  v4:= temp;
  #L0a61c8.  v4:= v4 - v5 @kind int;
  #L0a61ca.  return v4;
  #L0a61cc.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L0a61d0.  v1:= new `java.lang.StringBuilder`;
  #L0a61d4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0a61da.  v3:= "Element index " @kind object;
  #L0a61de.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a61e4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a61ea.  v5:= " must be in range [" @kind object;
  #L0a61ee.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a61f4.  v5:= new `kotlin.ranges.IntRange`;
  #L0a61f8.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/collections/CollectionsKt;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L0a61fe.  v4:= temp;
  #L0a6200.  call `<init>`(v5, v2, v4) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0a6206.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a620c.  v4:= "]." @kind object;
  #L0a6210.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a6216.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0a621c.  v4:= temp @kind object;
  #L0a621e.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0a6224.  throw v0;
}
procedure `int` `f`(`java.util.List` v4 @kind object, `int` v5 ) @signature `Lkotlin/collections/j;.f:(Ljava/util/List;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0a6238.  v0:= new `kotlin.ranges.IntRange`;
  #L0a623c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0a6242.  v1:= temp;
  #L0a6244.  v2:= 0I;
  #L0a6246.  call `<init>`(v0, v2, v1) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0a624c.  call temp:= `contains`(v0, v5) @signature `Lkotlin/ranges/IntRange;.contains:(I)Z` @kind virtual;
  #L0a6252.  v0:= temp;
  #L0a6254.  if v0 == 0 then goto L0a6264;
  #L0a6258.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0a625e.  v4:= temp;
  #L0a6260.  v4:= v4 - v5 @kind int;
  #L0a6262.  return v4;
  #L0a6264.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L0a6268.  v1:= new `java.lang.StringBuilder`;
  #L0a626c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0a6272.  v3:= "Position index " @kind object;
  #L0a6276.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a627c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a6282.  v5:= " must be in range [" @kind object;
  #L0a6286.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a628c.  v5:= new `kotlin.ranges.IntRange`;
  #L0a6290.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0a6296.  v4:= temp;
  #L0a6298.  call `<init>`(v5, v2, v4) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0a629e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a62a4.  v4:= "]." @kind object;
  #L0a62a8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0a62ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0a62b4.  v4:= temp @kind object;
  #L0a62b6.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0a62bc.  throw v0;
}
