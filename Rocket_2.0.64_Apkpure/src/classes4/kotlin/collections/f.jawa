record `kotlin.collections.f` @kind class @AccessFlag  extends `kotlin.collections.CollectionsKt__CollectionsKt` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.f` v0 @kind this) @signature `Lkotlin/collections/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0a59b4.  call `<init>`(v0) @signature `Lkotlin/collections/CollectionsKt__CollectionsKt;.<init>:()V` @kind direct;
  #L0a59ba.  return @kind void;
}
procedure `int` `collectionSizeOrDefault`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/f;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0a5874.  v0:= "<this>" @kind object;
  #L0a5878.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a587e.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L0a5882.  if v0 == 0 then goto L0a5892;
  #L0a5886.  v1:= (`java.util.Collection`) v1 @kind object;
  #L0a588a.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L0a5890.  v2:= temp;
  #L0a5892.  return v2;
}
procedure `java.lang.Integer` `collectionSizeOrNull`(`java.lang.Iterable` v1 @kind object) @signature `Lkotlin/collections/f;.collectionSizeOrNull:(Ljava/lang/Iterable;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0a58a4.  v0:= "<this>" @kind object;
  #L0a58a8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a58ae.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L0a58b2.  if v0 == 0 then goto L0a58cc;
  #L0a58b6.  v1:= (`java.util.Collection`) v1 @kind object;
  #L0a58ba.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L0a58c0.  v1:= temp;
  #L0a58c2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0a58c8.  v1:= temp @kind object;
  #L0a58ca.  goto L0a58ce;
  #L0a58cc.  v1:= 0I;
  #L0a58ce.  return v1 @kind object;
}
procedure `java.util.List` `flatten`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/f;.flatten:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0a58e0.  v0:= "<this>" @kind object;
  #L0a58e4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a58ea.  v0:= new `java.util.ArrayList`;
  #L0a58ee.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0a58f4.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0a58fa.  v2:= temp @kind object;
  #L0a58fc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0a5902.  v1:= temp;
  #L0a5904.  if v1 == 0 then goto L0a591c;
  #L0a5908.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0a590e.  v1:= temp @kind object;
  #L0a5910.  v1:= (`java.lang.Iterable`) v1 @kind object;
  #L0a5914.  call temp:= `addAll`(v0, v1) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L0a591a.  goto L0a58fc;
  #L0a591c.  return v0 @kind object;
}
procedure `kotlin.Pair` `unzip`(`java.lang.Iterable` v4 @kind object) @signature `Lkotlin/collections/f;.unzip:(Ljava/lang/Iterable;)Lkotlin/Pair;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0a5930.  v0:= "<this>" @kind object;
  #L0a5934.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a593a.  v0:= 10I;
  #L0a593e.  call temp:= `collectionSizeOrDefault`(v4, v0) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L0a5944.  v0:= temp;
  #L0a5946.  v1:= new `java.util.ArrayList`;
  #L0a594a.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0a5950.  v2:= new `java.util.ArrayList`;
  #L0a5954.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0a595a.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0a5960.  v4:= temp @kind object;
  #L0a5962.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0a5968.  v0:= temp;
  #L0a596a.  if v0 == 0 then goto L0a5998;
  #L0a596e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0a5974.  v0:= temp @kind object;
  #L0a5976.  v0:= (`kotlin.Pair`) v0 @kind object;
  #L0a597a.  call temp:= `getFirst`(v0) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L0a5980.  v3:= temp @kind object;
  #L0a5982.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0a5988.  call temp:= `getSecond`(v0) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L0a598e.  v0:= temp @kind object;
  #L0a5990.  call temp:= `add`(v2, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0a5996.  goto L0a5962;
  #L0a5998.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L0a599e.  v4:= temp @kind object;
  #L0a59a0.  return v4 @kind object;
}
