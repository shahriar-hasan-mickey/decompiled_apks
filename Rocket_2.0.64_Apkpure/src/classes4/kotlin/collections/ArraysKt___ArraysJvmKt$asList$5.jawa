record `kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractList` @kind class, `java.util.RandomAccess` @kind interface {
  `float`[] `kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v0 @kind this, `float`[] v1 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.<init>:([F)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0817c0.  v0.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] := v1 @kind object;
  #L0817c4.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractList;.<init>:()V` @kind direct;
  #L0817ca.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v7 @kind this, `float` v8 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.contains:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0815b8.  v0:= v7.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L0815bc.  v1:= length @variable v0;
  #L0815be.  v2:= 0I;
  #L0815c0.  v3:= 0I;
  #L0815c2.  v4:= 1I;
  #L0815c4.  if v3 >= v1 then goto L0815f4;
  #L0815c8.  v5:= v0[v3];
  #L0815cc.  call temp:= `floatToIntBits`(v5) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L0815d2.  v5:= temp;
  #L0815d4.  call temp:= `floatToIntBits`(v8) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L0815da.  v6:= temp;
  #L0815dc.  if v5 != v6 then goto L0815e4;
  #L0815e0.  v5:= 1I;
  #L0815e2.  goto L0815e6;
  #L0815e4.  v5:= 0I;
  #L0815e6.  if v5 == 0 then goto L0815ee;
  #L0815ea.  v2:= 1I;
  #L0815ec.  goto L0815f4;
  #L0815ee.  v3:= v3 + 1;
  #L0815f2.  goto L0815c2;
  #L0815f4.  return v2;
}
procedure `boolean` `contains`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L081608.  v0:= instanceof @variable v2 @type ^`java.lang.Float` @kind boolean;
  #L08160c.  if v0 != 0 then goto L081614;
  #L081610.  v2:= 0I;
  #L081612.  return v2;
  #L081614.  v2:= (`java.lang.Number`) v2 @kind object;
  #L081618.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L08161e.  v2:= temp;
  #L081620.  call temp:= `contains`(v1, v2) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.contains:(F)Z` @kind virtual;
  #L081626.  v2:= temp;
  #L081628.  return v2;
}
procedure `java.lang.Float` `get`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.get:(I)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L081780.  v0:= v1.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L081784.  v2:= v0[v2];
  #L081788.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L08178e.  v2:= temp @kind object;
  #L081790.  return v2 @kind object;
}
procedure `java.lang.Object` `get`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0817a4.  call temp:= `get`(v0, v1) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.get:(I)Ljava/lang/Float;` @kind virtual;
  #L0817aa.  v1:= temp @kind object;
  #L0817ac.  return v1 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L081660.  v0:= v1.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L081664.  v0:= length @variable v0;
  #L081666.  return v0;
}
procedure `int` `indexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v6 @kind this, `float` v7 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.indexOf:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L081678.  v0:= v6.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L08167c.  v1:= length @variable v0;
  #L08167e.  v2:= 0I;
  #L081680.  v3:= 0I;
  #L081682.  if v3 >= v1 then goto L0816b0;
  #L081686.  v4:= v0[v3];
  #L08168a.  call temp:= `floatToIntBits`(v4) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L081690.  v4:= temp;
  #L081692.  call temp:= `floatToIntBits`(v7) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L081698.  v5:= temp;
  #L08169a.  if v4 != v5 then goto L0816a2;
  #L08169e.  v4:= 1I;
  #L0816a0.  goto L0816a4;
  #L0816a2.  v4:= 0I;
  #L0816a4.  if v4 == 0 then goto L0816aa;
  #L0816a8.  goto L0816b2;
  #L0816aa.  v3:= v3 + 1;
  #L0816ae.  goto L081682;
  #L0816b0.  v3:= -1I;
  #L0816b2.  return v3;
}
procedure `int` `indexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0816c4.  v0:= instanceof @variable v2 @type ^`java.lang.Float` @kind boolean;
  #L0816c8.  if v0 != 0 then goto L0816d0;
  #L0816cc.  v2:= -1I;
  #L0816ce.  return v2;
  #L0816d0.  v2:= (`java.lang.Number`) v2 @kind object;
  #L0816d4.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L0816da.  v2:= temp;
  #L0816dc.  call temp:= `indexOf`(v1, v2) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.indexOf:(F)I` @kind virtual;
  #L0816e2.  v2:= temp;
  #L0816e4.  return v2;
}
procedure `boolean` `isEmpty`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08163c.  v0:= v1.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L081640.  v0:= length @variable v0;
  #L081642.  if v0 != 0 then goto L08164a;
  #L081646.  v0:= 1I;
  #L081648.  goto L08164c;
  #L08164a.  v0:= 0I;
  #L08164c.  return v0;
}
procedure `int` `lastIndexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v6 @kind this, `float` v7 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.lastIndexOf:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0816f8.  v0:= v6.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5.a` @type ^`float`[] @kind object;
  #L0816fc.  v1:= length @variable v0;
  #L0816fe.  v2:= -1I;
  #L081700.  v1:= v1 + v2 @kind int;
  #L081702.  if v1 < 0 then goto L08173a;
  #L081706.  v3:= v1 + -1;
  #L08170a.  v4:= v0[v1];
  #L08170e.  call temp:= `floatToIntBits`(v4) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L081714.  v4:= temp;
  #L081716.  call temp:= `floatToIntBits`(v7) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L08171c.  v5:= temp;
  #L08171e.  if v4 != v5 then goto L081726;
  #L081722.  v4:= 1I;
  #L081724.  goto L081728;
  #L081726.  v4:= 0I;
  #L081728.  if v4 == 0 then goto L081730;
  #L08172c.  v2:= v1;
  #L08172e.  goto L08173a;
  #L081730.  if v3 >= 0 then goto L081736;
  #L081734.  goto L08173a;
  #L081736.  v1:= v3;
  #L081738.  goto L081706;
  #L08173a.  return v2;
}
procedure `int` `lastIndexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L08174c.  v0:= instanceof @variable v2 @type ^`java.lang.Float` @kind boolean;
  #L081750.  if v0 != 0 then goto L081758;
  #L081754.  v2:= -1I;
  #L081756.  return v2;
  #L081758.  v2:= (`java.lang.Number`) v2 @kind object;
  #L08175c.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L081762.  v2:= temp;
  #L081764.  call temp:= `lastIndexOf`(v1, v2) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$5;.lastIndexOf:(F)I` @kind virtual;
  #L08176a.  v2:= temp;
  #L08176c.  return v2;
}
