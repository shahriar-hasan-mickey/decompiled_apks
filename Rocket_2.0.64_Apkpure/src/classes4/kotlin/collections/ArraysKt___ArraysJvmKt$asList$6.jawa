record `kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractList` @kind class, `java.util.RandomAccess` @kind interface {
  `double`[] `kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v0 @kind this, `double`[] v1 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.<init>:([D)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0819f0.  v0.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.a` @type ^`double`[] := v1 @kind object;
  #L0819f4.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractList;.<init>:()V` @kind direct;
  #L0819fa.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v10 @kind this, `double` v11 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.contains:(D)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0817dc.  v0:= v10.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.a` @type ^`double`[] @kind object;
  #L0817e0.  v1:= length @variable v0;
  #L0817e2.  v2:= 0I;
  #L0817e4.  v3:= 0I;
  #L0817e6.  v4:= 1I;
  #L0817e8.  if v3 >= v1 then goto L08181c;
  #L0817ec.  v5:= v0[v3] @kind wide;
  #L0817f0.  call temp:= `doubleToLongBits`(v5) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L0817f6.  v5:= temp @kind wide;
  #L0817f8.  call temp:= `doubleToLongBits`(v11) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L0817fe.  v7:= temp @kind wide;
  #L081800.  v9:= lcmp(v5, v7);
  #L081804.  if v9 != 0 then goto L08180c;
  #L081808.  v5:= 1I;
  #L08180a.  goto L08180e;
  #L08180c.  v5:= 0I;
  #L08180e.  if v5 == 0 then goto L081816;
  #L081812.  v2:= 1I;
  #L081814.  goto L08181c;
  #L081816.  v3:= v3 + 1;
  #L08181a.  goto L0817e6;
  #L08181c.  return v2;
}
procedure `boolean` `contains`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L081830.  v0:= instanceof @variable v3 @type ^`java.lang.Double` @kind boolean;
  #L081834.  if v0 != 0 then goto L08183c;
  #L081838.  v3:= 0I;
  #L08183a.  return v3;
  #L08183c.  v3:= (`java.lang.Number`) v3 @kind object;
  #L081840.  call temp:= `doubleValue`(v3) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L081846.  v0:= temp @kind wide;
  #L081848.  call temp:= `contains`(v2, v0) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.contains:(D)Z` @kind virtual;
  #L08184e.  v3:= temp;
  #L081850.  return v3;
}
procedure `java.lang.Double` `get`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v3 @kind this, `int` v4 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.get:(I)Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0819b0.  v0:= v3.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.a` @type ^`double`[] @kind object;
  #L0819b4.  v1:= v0[v4] @kind wide;
  #L0819b8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L0819be.  v4:= temp @kind object;
  #L0819c0.  return v4 @kind object;
}
procedure `java.lang.Object` `get`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0819d4.  call temp:= `get`(v0, v1) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.get:(I)Ljava/lang/Double;` @kind virtual;
  #L0819da.  v1:= temp @kind object;
  #L0819dc.  return v1 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v1 @kind this) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L081888.  v0:= v1.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.a` @type ^`double`[] @kind object;
  #L08188c.  v0:= length @variable v0;
  #L08188e.  return v0;
}
procedure `int` `indexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v9 @kind this, `double` v10 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.indexOf:(D)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L0818a0.  v0:= v9.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.a` @type ^`double`[] @kind object;
  #L0818a4.  v1:= length @variable v0;
  #L0818a6.  v2:= 0I;
  #L0818a8.  v3:= 0I;
  #L0818aa.  if v3 >= v1 then goto L0818dc;
  #L0818ae.  v4:= v0[v3] @kind wide;
  #L0818b2.  call temp:= `doubleToLongBits`(v4) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L0818b8.  v4:= temp @kind wide;
  #L0818ba.  call temp:= `doubleToLongBits`(v10) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L0818c0.  v6:= temp @kind wide;
  #L0818c2.  v8:= lcmp(v4, v6);
  #L0818c6.  if v8 != 0 then goto L0818ce;
  #L0818ca.  v4:= 1I;
  #L0818cc.  goto L0818d0;
  #L0818ce.  v4:= 0I;
  #L0818d0.  if v4 == 0 then goto L0818d6;
  #L0818d4.  goto L0818de;
  #L0818d6.  v3:= v3 + 1;
  #L0818da.  goto L0818aa;
  #L0818dc.  v3:= -1I;
  #L0818de.  return v3;
}
procedure `int` `indexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0818f0.  v0:= instanceof @variable v3 @type ^`java.lang.Double` @kind boolean;
  #L0818f4.  if v0 != 0 then goto L0818fc;
  #L0818f8.  v3:= -1I;
  #L0818fa.  return v3;
  #L0818fc.  v3:= (`java.lang.Number`) v3 @kind object;
  #L081900.  call temp:= `doubleValue`(v3) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L081906.  v0:= temp @kind wide;
  #L081908.  call temp:= `indexOf`(v2, v0) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.indexOf:(D)I` @kind virtual;
  #L08190e.  v3:= temp;
  #L081910.  return v3;
}
procedure `boolean` `isEmpty`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v1 @kind this) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L081864.  v0:= v1.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.a` @type ^`double`[] @kind object;
  #L081868.  v0:= length @variable v0;
  #L08186a.  if v0 != 0 then goto L081872;
  #L08186e.  v0:= 1I;
  #L081870.  goto L081874;
  #L081872.  v0:= 0I;
  #L081874.  return v0;
}
procedure `int` `lastIndexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v9 @kind this, `double` v10 ) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.lastIndexOf:(D)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L081924.  v0:= v9.`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.a` @type ^`double`[] @kind object;
  #L081928.  v1:= length @variable v0;
  #L08192a.  v2:= -1I;
  #L08192c.  v1:= v1 + v2 @kind int;
  #L08192e.  if v1 < 0 then goto L08196a;
  #L081932.  v3:= v1 + -1;
  #L081936.  v4:= v0[v1] @kind wide;
  #L08193a.  call temp:= `doubleToLongBits`(v4) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L081940.  v4:= temp @kind wide;
  #L081942.  call temp:= `doubleToLongBits`(v10) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L081948.  v6:= temp @kind wide;
  #L08194a.  v8:= lcmp(v4, v6);
  #L08194e.  if v8 != 0 then goto L081956;
  #L081952.  v4:= 1I;
  #L081954.  goto L081958;
  #L081956.  v4:= 0I;
  #L081958.  if v4 == 0 then goto L081960;
  #L08195c.  v2:= v1;
  #L08195e.  goto L08196a;
  #L081960.  if v3 >= 0 then goto L081966;
  #L081964.  goto L08196a;
  #L081966.  v1:= v3;
  #L081968.  goto L081932;
  #L08196a.  return v2;
}
procedure `int` `lastIndexOf`(`kotlin.collections.ArraysKt___ArraysJvmKt$asList$6` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L08197c.  v0:= instanceof @variable v3 @type ^`java.lang.Double` @kind boolean;
  #L081980.  if v0 != 0 then goto L081988;
  #L081984.  v3:= -1I;
  #L081986.  return v3;
  #L081988.  v3:= (`java.lang.Number`) v3 @kind object;
  #L08198c.  call temp:= `doubleValue`(v3) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L081992.  v0:= temp @kind wide;
  #L081994.  call temp:= `lastIndexOf`(v2, v0) @signature `Lkotlin/collections/ArraysKt___ArraysJvmKt$asList$6;.lastIndexOf:(D)I` @kind virtual;
  #L08199a.  v3:= temp;
  #L08199c.  return v3;
}
