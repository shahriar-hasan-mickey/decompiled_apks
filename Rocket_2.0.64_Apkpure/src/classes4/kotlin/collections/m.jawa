record `kotlin.collections.m` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.collections.m` v0 @kind this) @signature `Lkotlin/collections/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0ad31c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0ad322.  return @kind void;
}
procedure `java.util.Map` `eachCount`(`kotlin.collections.Grouping` v6 @kind object) @signature `Lkotlin/collections/m;.eachCount:(Lkotlin/collections/Grouping;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0ad22c.  v0:= "<this>" @kind object;
  #L0ad230.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ad236.  v0:= new `java.util.LinkedHashMap`;
  #L0ad23a.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L0ad240.  call temp:= `sourceIterator`(v6) @signature `Lkotlin/collections/Grouping;.sourceIterator:()Ljava/util/Iterator;` @kind interface;
  #L0ad246.  v1:= temp @kind object;
  #L0ad248.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0ad24e.  v2:= temp;
  #L0ad250.  if v2 == 0 then goto L0ad2a8;
  #L0ad254.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0ad25a.  v2:= temp @kind object;
  #L0ad25c.  call temp:= `keyOf`(v6, v2) @signature `Lkotlin/collections/Grouping;.keyOf:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ad262.  v2:= temp @kind object;
  #L0ad264.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ad26a.  v3:= temp @kind object;
  #L0ad26c.  v4:= 1I;
  #L0ad26e.  if v3 != 0 then goto L0ad282;
  #L0ad272.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L0ad278.  v5:= temp;
  #L0ad27a.  if v5 != 0 then goto L0ad282;
  #L0ad27e.  v5:= 1I;
  #L0ad280.  goto L0ad284;
  #L0ad282.  v5:= 0I;
  #L0ad284.  if v5 == 0 then goto L0ad292;
  #L0ad288.  v3:= new `kotlin.jvm.internal.Ref$IntRef`;
  #L0ad28c.  call `<init>`(v3) @signature `Lkotlin/jvm/internal/Ref$IntRef;.<init>:()V` @kind direct;
  #L0ad292.  v3:= (`kotlin.jvm.internal.Ref$IntRef`) v3 @kind object;
  #L0ad296.  v5:= v3.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L0ad29a.  v5:= v5 + v4 @kind int;
  #L0ad29c.  v3.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int` := v5;
  #L0ad2a0.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ad2a6.  goto L0ad248;
  #L0ad2a8.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L0ad2ae.  v6:= temp @kind object;
  #L0ad2b0.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0ad2b6.  v6:= temp @kind object;
  #L0ad2b8.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0ad2be.  v1:= temp;
  #L0ad2c0.  if v1 == 0 then goto L0ad302;
  #L0ad2c4.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0ad2ca.  v1:= temp @kind object;
  #L0ad2cc.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L0ad2d0.  v2:= "null cannot be cast to non-null type kotlin.collections.MutableMap.MutableEntry<K of kotlin.collections.GroupingKt__GroupingJVMKt.mapValuesInPlace$lambda-4, R of kotlin.collections.GroupingKt__GroupingJVMKt.mapValuesInPlace$lambda-4>" @kind object;
  #L0ad2d4.  call `checkNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ad2da.  call temp:= `asMutableMapEntry`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableMapEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L0ad2e0.  v2:= temp @kind object;
  #L0ad2e2.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0ad2e8.  v1:= temp @kind object;
  #L0ad2ea.  v1:= (`kotlin.jvm.internal.Ref$IntRef`) v1 @kind object;
  #L0ad2ee.  v1:= v1.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L0ad2f2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0ad2f8.  v1:= temp @kind object;
  #L0ad2fa.  call temp:= `setValue`(v2, v1) @signature `Ljava/util/Map$Entry;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ad300.  goto L0ad2b8;
  #L0ad302.  call temp:= `asMutableMap`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableMap:(Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L0ad308.  v6:= temp @kind object;
  #L0ad30a.  return v6 @kind object;
}
