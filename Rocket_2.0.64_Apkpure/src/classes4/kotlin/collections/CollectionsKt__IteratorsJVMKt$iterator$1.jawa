record `kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `java.util.Enumeration` `kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1` v0 @kind this, `java.util.Enumeration` v1 @kind object) @signature `Lkotlin/collections/CollectionsKt__IteratorsJVMKt$iterator$1;.<init>:(Ljava/util/Enumeration;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0a5a0c.  v0.`kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1.a` @type ^`java.util.Enumeration` := v1 @kind object;
  #L0a5a10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0a5a16.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1` v1 @kind this) @signature `Lkotlin/collections/CollectionsKt__IteratorsJVMKt$iterator$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0a59cc.  v0:= v1.`kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1.a` @type ^`java.util.Enumeration` @kind object;
  #L0a59d0.  call temp:= `hasMoreElements`(v0) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L0a59d6.  v0:= temp;
  #L0a59d8.  return v0;
}
procedure `java.lang.Object` `next`(`kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1` v1 @kind this) @signature `Lkotlin/collections/CollectionsKt__IteratorsJVMKt$iterator$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0a59ec.  v0:= v1.`kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1.a` @type ^`java.util.Enumeration` @kind object;
  #L0a59f0.  call temp:= `nextElement`(v0) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L0a59f6.  v0:= temp @kind object;
  #L0a59f8.  return v0 @kind object;
}
procedure `void` `remove`(`kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1` v2 @kind this) @signature `Lkotlin/collections/CollectionsKt__IteratorsJVMKt$iterator$1;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0a5a28.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0a5a2c.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L0a5a30.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0a5a36.  throw v0;
}
