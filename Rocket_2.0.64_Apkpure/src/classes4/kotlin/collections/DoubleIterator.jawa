record `kotlin.collections.DoubleIterator` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
}
procedure `void` `<init>`(`kotlin.collections.DoubleIterator` v0 @kind this) @signature `Lkotlin/collections/DoubleIterator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0ac560.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0ac566.  return @kind void;
}
procedure `java.lang.Double` `next`(`kotlin.collections.DoubleIterator` v2 @kind this) @signature `Lkotlin/collections/DoubleIterator;.next:()Ljava/lang/Double;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0ac518.  call temp:= `nextDouble`(v2) @signature `Lkotlin/collections/DoubleIterator;.nextDouble:()D` @kind virtual;
  #L0ac51e.  v0:= temp @kind wide;
  #L0ac520.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L0ac526.  v0:= temp @kind object;
  #L0ac528.  return v0 @kind object;
}
procedure `java.lang.Object` `next`(`kotlin.collections.DoubleIterator` v2 @kind this) @signature `Lkotlin/collections/DoubleIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0ac53c.  call temp:= `nextDouble`(v2) @signature `Lkotlin/collections/DoubleIterator;.nextDouble:()D` @kind virtual;
  #L0ac542.  v0:= temp @kind wide;
  #L0ac544.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L0ac54a.  v0:= temp @kind object;
  #L0ac54c.  return v0 @kind object;
}
procedure `double` `nextDouble`() @signature `Lkotlin/collections/DoubleIterator;.nextDouble:()D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `remove`(`kotlin.collections.DoubleIterator` v2 @kind this) @signature `Lkotlin/collections/DoubleIterator;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ac578.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0ac57c.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L0ac580.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ac586.  throw v0;
}
