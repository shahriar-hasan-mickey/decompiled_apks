record `kotlin.collections.BrittleContainsOptimizationKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.a:(Ljava/util/Collection;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0a4d84.  v0:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L0a4d88.  if v0 == 0 then goto L0a4da6;
  #L0a4d8c.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L0a4d92.  v0:= temp;
  #L0a4d94.  v1:= 2I;
  #L0a4d96.  if v0 <= v1 then goto L0a4da6;
  #L0a4d9a.  v2:= instanceof @variable v2 @type ^`java.util.ArrayList` @kind boolean;
  #L0a4d9e.  if v2 == 0 then goto L0a4da6;
  #L0a4da2.  v2:= 1I;
  #L0a4da4.  goto L0a4da8;
  #L0a4da6.  v2:= 0I;
  #L0a4da8.  return v2;
}
procedure `java.util.Collection` `convertToSetForSetOperation`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:(Ljava/lang/Iterable;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0a4dbc.  v0:= "<this>" @kind object;
  #L0a4dc0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a4dc6.  v0:= instanceof @variable v2 @type ^`java.util.Set` @kind boolean;
  #L0a4dca.  if v0 == 0 then goto L0a4dd4;
  #L0a4dce.  v2:= (`java.util.Collection`) v2 @kind object;
  #L0a4dd2.  goto L0a4e16;
  #L0a4dd4.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L0a4dd8.  if v0 == 0 then goto L0a4dfc;
  #L0a4ddc.  v0:= v2 @kind object;
  #L0a4dde.  v0:= (`java.util.Collection`) v0 @kind object;
  #L0a4de2.  call temp:= `a`(v0) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.a:(Ljava/util/Collection;)Z` @kind static;
  #L0a4de8.  v1:= temp;
  #L0a4dea.  if v1 == 0 then goto L0a4df8;
  #L0a4dee.  call temp:= `toHashSet`(v2) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L0a4df4.  v2:= temp @kind object;
  #L0a4df6.  goto L0a4e16;
  #L0a4df8.  v2:= v0 @kind object;
  #L0a4dfa.  goto L0a4e16;
  #L0a4dfc.  v0:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L0a4e00.  if v0 == 0 then goto L0a4e0e;
  #L0a4e04.  call temp:= `toHashSet`(v2) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L0a4e0a.  v2:= temp @kind object;
  #L0a4e0c.  goto L0a4e16;
  #L0a4e0e.  call temp:= `toList`(v2) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L0a4e14.  v2:= temp @kind object;
  #L0a4e16.  return v2 @kind object;
}
procedure `java.util.Collection` `convertToSetForSetOperation`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:(Lkotlin/sequences/Sequence;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0a4e60.  v0:= "<this>" @kind object;
  #L0a4e64.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a4e6a.  v0:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L0a4e6e.  if v0 == 0 then goto L0a4e7c;
  #L0a4e72.  call temp:= `toHashSet`(v1) @signature `Lkotlin/sequences/SequencesKt;.toHashSet:(Lkotlin/sequences/Sequence;)Ljava/util/HashSet;` @kind static;
  #L0a4e78.  v1:= temp @kind object;
  #L0a4e7a.  goto L0a4e84;
  #L0a4e7c.  call temp:= `toList`(v1) @signature `Lkotlin/sequences/SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L0a4e82.  v1:= temp @kind object;
  #L0a4e84.  return v1 @kind object;
}
procedure `java.util.Collection` `convertToSetForSetOperation`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:([Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0a4e28.  v0:= "<this>" @kind object;
  #L0a4e2c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a4e32.  v0:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L0a4e36.  if v0 == 0 then goto L0a4e44;
  #L0a4e3a.  call temp:= `toHashSet`(v1) @signature `Lkotlin/collections/ArraysKt___ArraysKt;.toHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;` @kind static;
  #L0a4e40.  v1:= temp @kind object;
  #L0a4e42.  goto L0a4e4c;
  #L0a4e44.  call temp:= `asList`(v1) @signature `Lkotlin/collections/ArraysKt;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0a4e4a.  v1:= temp @kind object;
  #L0a4e4c.  return v1 @kind object;
}
procedure `java.util.Collection` `convertToSetForSetOperationWith`(`java.lang.Iterable` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperationWith:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0a4e98.  v0:= "<this>" @kind object;
  #L0a4e9c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a4ea2.  v0:= "source" @kind object;
  #L0a4ea6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0a4eac.  v0:= instanceof @variable v1 @type ^`java.util.Set` @kind boolean;
  #L0a4eb0.  if v0 == 0 then goto L0a4eba;
  #L0a4eb4.  v1:= (`java.util.Collection`) v1 @kind object;
  #L0a4eb8.  goto L0a4f1c;
  #L0a4eba.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L0a4ebe.  if v0 == 0 then goto L0a4f02;
  #L0a4ec2.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L0a4ec6.  if v0 == 0 then goto L0a4ee2;
  #L0a4eca.  v2:= (`java.util.Collection`) v2 @kind object;
  #L0a4ece.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L0a4ed4.  v2:= temp;
  #L0a4ed6.  v0:= 2I;
  #L0a4ed8.  if v2 >= v0 then goto L0a4ee2;
  #L0a4edc.  v1:= (`java.util.Collection`) v1 @kind object;
  #L0a4ee0.  goto L0a4f1c;
  #L0a4ee2.  v2:= v1 @kind object;
  #L0a4ee4.  v2:= (`java.util.Collection`) v2 @kind object;
  #L0a4ee8.  call temp:= `a`(v2) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.a:(Ljava/util/Collection;)Z` @kind static;
  #L0a4eee.  v0:= temp;
  #L0a4ef0.  if v0 == 0 then goto L0a4efe;
  #L0a4ef4.  call temp:= `toHashSet`(v1) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L0a4efa.  v1:= temp @kind object;
  #L0a4efc.  goto L0a4f1c;
  #L0a4efe.  v1:= v2 @kind object;
  #L0a4f00.  goto L0a4f1c;
  #L0a4f02.  v2:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L0a4f06.  if v2 == 0 then goto L0a4f14;
  #L0a4f0a.  call temp:= `toHashSet`(v1) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L0a4f10.  v1:= temp @kind object;
  #L0a4f12.  goto L0a4f1c;
  #L0a4f14.  call temp:= `toList`(v1) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L0a4f1a.  v1:= temp @kind object;
  #L0a4f1c.  return v1 @kind object;
}
