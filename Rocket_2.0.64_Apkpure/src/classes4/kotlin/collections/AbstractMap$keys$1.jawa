record `kotlin.collections.AbstractMap$keys$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractSet` @kind class {
  `kotlin.collections.AbstractMap` `kotlin.collections.AbstractMap$keys$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.collections.AbstractMap$keys$1` v0 @kind this, `kotlin.collections.AbstractMap` v1 @kind object) @signature `Lkotlin/collections/AbstractMap$keys$1;.<init>:(Lkotlin/collections/AbstractMap;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L07ea60.  v0.`kotlin.collections.AbstractMap$keys$1.a` @type ^`kotlin.collections.AbstractMap` := v1 @kind object;
  #L07ea64.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractSet;.<init>:()V` @kind direct;
  #L07ea6a.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.AbstractMap$keys$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/AbstractMap$keys$1;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07e9f0.  v0:= v1.`kotlin.collections.AbstractMap$keys$1.a` @type ^`kotlin.collections.AbstractMap` @kind object;
  #L07e9f4.  call temp:= `containsKey`(v0, v2) @signature `Lkotlin/collections/AbstractMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L07e9fa.  v2:= temp;
  #L07e9fc.  return v2;
}
procedure `int` `getSize`(`kotlin.collections.AbstractMap$keys$1` v1 @kind this) @signature `Lkotlin/collections/AbstractMap$keys$1;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07ea10.  v0:= v1.`kotlin.collections.AbstractMap$keys$1.a` @type ^`kotlin.collections.AbstractMap` @kind object;
  #L07ea14.  call temp:= `size`(v0) @signature `Lkotlin/collections/AbstractMap;.size:()I` @kind virtual;
  #L07ea1a.  v0:= temp;
  #L07ea1c.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.AbstractMap$keys$1` v2 @kind this) @signature `Lkotlin/collections/AbstractMap$keys$1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07ea30.  v0:= v2.`kotlin.collections.AbstractMap$keys$1.a` @type ^`kotlin.collections.AbstractMap` @kind object;
  #L07ea34.  call temp:= `entrySet`(v0) @signature `Lkotlin/collections/AbstractMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L07ea3a.  v0:= temp @kind object;
  #L07ea3c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L07ea42.  v0:= temp @kind object;
  #L07ea44.  v1:= new `kotlin.collections.AbstractMap$keys$1$iterator$1`;
  #L07ea48.  call `<init>`(v1, v0) @signature `Lkotlin/collections/AbstractMap$keys$1$iterator$1;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L07ea4e.  return v1 @kind object;
}
