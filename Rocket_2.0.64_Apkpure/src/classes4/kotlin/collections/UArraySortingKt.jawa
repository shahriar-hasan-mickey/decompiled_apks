record `kotlin.collections.UArraySortingKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`long`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lkotlin/collections/UArraySortingKt;.a:([JII)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0b1298.  v0:= v7 + v8 @kind int;
  #L0b129c.  v0:= v0 / 2;
  #L0b12a0.  call temp:= `get-s-VKNKU`(v6, v0) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L0b12a6.  v0:= temp @kind wide;
  #L0b12a8.  if v7 > v8 then goto L0b130a;
  #L0b12ac.  call temp:= `get-s-VKNKU`(v6, v7) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L0b12b2.  v2:= temp @kind wide;
  #L0b12b4.  call temp:= `ulongCompare`(v2, v0) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L0b12ba.  v2:= temp;
  #L0b12bc.  if v2 >= 0 then goto L0b12c6;
  #L0b12c0.  v7:= v7 + 1;
  #L0b12c4.  goto L0b12ac;
  #L0b12c6.  call temp:= `get-s-VKNKU`(v6, v8) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L0b12cc.  v2:= temp @kind wide;
  #L0b12ce.  call temp:= `ulongCompare`(v2, v0) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L0b12d4.  v2:= temp;
  #L0b12d6.  if v2 <= 0 then goto L0b12e0;
  #L0b12da.  v8:= v8 + -1;
  #L0b12de.  goto L0b12c6;
  #L0b12e0.  if v7 > v8 then goto L0b12a8;
  #L0b12e4.  call temp:= `get-s-VKNKU`(v6, v7) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L0b12ea.  v2:= temp @kind wide;
  #L0b12ec.  call temp:= `get-s-VKNKU`(v6, v8) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @kind static;
  #L0b12f2.  v4:= temp @kind wide;
  #L0b12f4.  call `set-k8EXiF4`(v6, v7, v4) @signature `Lkotlin/ULongArray;.set-k8EXiF4:([JIJ)V` @kind static;
  #L0b12fa.  call `set-k8EXiF4`(v6, v8, v2) @signature `Lkotlin/ULongArray;.set-k8EXiF4:([JIJ)V` @kind static;
  #L0b1300.  v7:= v7 + 1;
  #L0b1304.  v8:= v8 + -1;
  #L0b1308.  goto L0b12a8;
  #L0b130a.  return v7;
}
procedure `int` `b`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/UArraySortingKt;.b:([BII)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0b131c.  v0:= v4 + v5 @kind int;
  #L0b1320.  v0:= v0 / 2;
  #L0b1324.  call temp:= `get-w2LRezQ`(v3, v0) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L0b132a.  v0:= temp;
  #L0b132c.  if v4 > v5 then goto L0b139a;
  #L0b1330.  call temp:= `get-w2LRezQ`(v3, v4) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L0b1336.  v1:= temp;
  #L0b1338.  v1:= v1 ^& 255;
  #L0b133c.  v2:= v0 ^& 255;
  #L0b1340.  call temp:= `compare`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L0b1346.  v1:= temp;
  #L0b1348.  if v1 >= 0 then goto L0b1352;
  #L0b134c.  v4:= v4 + 1;
  #L0b1350.  goto L0b1330;
  #L0b1352.  call temp:= `get-w2LRezQ`(v3, v5) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L0b1358.  v1:= temp;
  #L0b135a.  v1:= v1 ^& 255;
  #L0b135e.  call temp:= `compare`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L0b1364.  v1:= temp;
  #L0b1366.  if v1 <= 0 then goto L0b1370;
  #L0b136a.  v5:= v5 + -1;
  #L0b136e.  goto L0b1352;
  #L0b1370.  if v4 > v5 then goto L0b132c;
  #L0b1374.  call temp:= `get-w2LRezQ`(v3, v4) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L0b137a.  v1:= temp;
  #L0b137c.  call temp:= `get-w2LRezQ`(v3, v5) @signature `Lkotlin/UByteArray;.get-w2LRezQ:([BI)B` @kind static;
  #L0b1382.  v2:= temp;
  #L0b1384.  call `set-VurrAj0`(v3, v4, v2) @signature `Lkotlin/UByteArray;.set-VurrAj0:([BIB)V` @kind static;
  #L0b138a.  call `set-VurrAj0`(v3, v5, v1) @signature `Lkotlin/UByteArray;.set-VurrAj0:([BIB)V` @kind static;
  #L0b1390.  v4:= v4 + 1;
  #L0b1394.  v5:= v5 + -1;
  #L0b1398.  goto L0b132c;
  #L0b139a.  return v4;
}
procedure `int` `c`(`short`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lkotlin/collections/UArraySortingKt;.c:([SII)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0b13ac.  v0:= v5 + v6 @kind int;
  #L0b13b0.  v0:= v0 / 2;
  #L0b13b4.  call temp:= `get-Mh2AYeg`(v4, v0) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L0b13ba.  v0:= temp;
  #L0b13bc.  if v5 > v6 then goto L0b142c;
  #L0b13c0.  call temp:= `get-Mh2AYeg`(v4, v5) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L0b13c6.  v1:= temp;
  #L0b13c8.  v2:= 65535I;
  #L0b13ce.  v1:= v1 ^& v2 @kind int;
  #L0b13d0.  v3:= v0 ^& v2 @kind int;
  #L0b13d4.  call temp:= `compare`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L0b13da.  v1:= temp;
  #L0b13dc.  if v1 >= 0 then goto L0b13e6;
  #L0b13e0.  v5:= v5 + 1;
  #L0b13e4.  goto L0b13c0;
  #L0b13e6.  call temp:= `get-Mh2AYeg`(v4, v6) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L0b13ec.  v1:= temp;
  #L0b13ee.  v1:= v1 ^& v2 @kind int;
  #L0b13f0.  call temp:= `compare`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L0b13f6.  v1:= temp;
  #L0b13f8.  if v1 <= 0 then goto L0b1402;
  #L0b13fc.  v6:= v6 + -1;
  #L0b1400.  goto L0b13e6;
  #L0b1402.  if v5 > v6 then goto L0b13bc;
  #L0b1406.  call temp:= `get-Mh2AYeg`(v4, v5) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L0b140c.  v1:= temp;
  #L0b140e.  call temp:= `get-Mh2AYeg`(v4, v6) @signature `Lkotlin/UShortArray;.get-Mh2AYeg:([SI)S` @kind static;
  #L0b1414.  v2:= temp;
  #L0b1416.  call `set-01HTLdE`(v4, v5, v2) @signature `Lkotlin/UShortArray;.set-01HTLdE:([SIS)V` @kind static;
  #L0b141c.  call `set-01HTLdE`(v4, v6, v1) @signature `Lkotlin/UShortArray;.set-01HTLdE:([SIS)V` @kind static;
  #L0b1422.  v5:= v5 + 1;
  #L0b1426.  v6:= v6 + -1;
  #L0b142a.  goto L0b13bc;
  #L0b142c.  return v5;
}
procedure `int` `d`(`int`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/UArraySortingKt;.d:([III)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0b1440.  v0:= v4 + v5 @kind int;
  #L0b1444.  v0:= v0 / 2;
  #L0b1448.  call temp:= `get-pVg5ArA`(v3, v0) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L0b144e.  v0:= temp;
  #L0b1450.  if v4 > v5 then goto L0b14b2;
  #L0b1454.  call temp:= `get-pVg5ArA`(v3, v4) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L0b145a.  v1:= temp;
  #L0b145c.  call temp:= `uintCompare`(v1, v0) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L0b1462.  v1:= temp;
  #L0b1464.  if v1 >= 0 then goto L0b146e;
  #L0b1468.  v4:= v4 + 1;
  #L0b146c.  goto L0b1454;
  #L0b146e.  call temp:= `get-pVg5ArA`(v3, v5) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L0b1474.  v1:= temp;
  #L0b1476.  call temp:= `uintCompare`(v1, v0) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L0b147c.  v1:= temp;
  #L0b147e.  if v1 <= 0 then goto L0b1488;
  #L0b1482.  v5:= v5 + -1;
  #L0b1486.  goto L0b146e;
  #L0b1488.  if v4 > v5 then goto L0b1450;
  #L0b148c.  call temp:= `get-pVg5ArA`(v3, v4) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L0b1492.  v1:= temp;
  #L0b1494.  call temp:= `get-pVg5ArA`(v3, v5) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @kind static;
  #L0b149a.  v2:= temp;
  #L0b149c.  call `set-VXSXFK8`(v3, v4, v2) @signature `Lkotlin/UIntArray;.set-VXSXFK8:([III)V` @kind static;
  #L0b14a2.  call `set-VXSXFK8`(v3, v5, v1) @signature `Lkotlin/UIntArray;.set-VXSXFK8:([III)V` @kind static;
  #L0b14a8.  v4:= v4 + 1;
  #L0b14ac.  v5:= v5 + -1;
  #L0b14b0.  goto L0b1450;
  #L0b14b2.  return v4;
}
procedure `void` `e`(`long`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/collections/UArraySortingKt;.e:([JII)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0b14c4.  call temp:= `a`(v2, v3, v4) @signature `Lkotlin/collections/UArraySortingKt;.a:([JII)I` @kind static;
  #L0b14ca.  v0:= temp;
  #L0b14cc.  v1:= v0 + -1;
  #L0b14d0.  if v3 >= v1 then goto L0b14da;
  #L0b14d4.  call `e`(v2, v3, v1) @signature `Lkotlin/collections/UArraySortingKt;.e:([JII)V` @kind static;
  #L0b14da.  if v0 >= v4 then goto L0b14e4;
  #L0b14de.  call `e`(v2, v0, v4) @signature `Lkotlin/collections/UArraySortingKt;.e:([JII)V` @kind static;
  #L0b14e4.  return @kind void;
}
procedure `void` `f`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/collections/UArraySortingKt;.f:([BII)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0b14f8.  call temp:= `b`(v2, v3, v4) @signature `Lkotlin/collections/UArraySortingKt;.b:([BII)I` @kind static;
  #L0b14fe.  v0:= temp;
  #L0b1500.  v1:= v0 + -1;
  #L0b1504.  if v3 >= v1 then goto L0b150e;
  #L0b1508.  call `f`(v2, v3, v1) @signature `Lkotlin/collections/UArraySortingKt;.f:([BII)V` @kind static;
  #L0b150e.  if v0 >= v4 then goto L0b1518;
  #L0b1512.  call `f`(v2, v0, v4) @signature `Lkotlin/collections/UArraySortingKt;.f:([BII)V` @kind static;
  #L0b1518.  return @kind void;
}
procedure `void` `g`(`short`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/collections/UArraySortingKt;.g:([SII)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0b152c.  call temp:= `c`(v2, v3, v4) @signature `Lkotlin/collections/UArraySortingKt;.c:([SII)I` @kind static;
  #L0b1532.  v0:= temp;
  #L0b1534.  v1:= v0 + -1;
  #L0b1538.  if v3 >= v1 then goto L0b1542;
  #L0b153c.  call `g`(v2, v3, v1) @signature `Lkotlin/collections/UArraySortingKt;.g:([SII)V` @kind static;
  #L0b1542.  if v0 >= v4 then goto L0b154c;
  #L0b1546.  call `g`(v2, v0, v4) @signature `Lkotlin/collections/UArraySortingKt;.g:([SII)V` @kind static;
  #L0b154c.  return @kind void;
}
procedure `void` `h`(`int`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/collections/UArraySortingKt;.h:([III)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0b1560.  call temp:= `d`(v2, v3, v4) @signature `Lkotlin/collections/UArraySortingKt;.d:([III)I` @kind static;
  #L0b1566.  v0:= temp;
  #L0b1568.  v1:= v0 + -1;
  #L0b156c.  if v3 >= v1 then goto L0b1576;
  #L0b1570.  call `h`(v2, v3, v1) @signature `Lkotlin/collections/UArraySortingKt;.h:([III)V` @kind static;
  #L0b1576.  if v0 >= v4 then goto L0b1580;
  #L0b157a.  call `h`(v2, v0, v4) @signature `Lkotlin/collections/UArraySortingKt;.h:([III)V` @kind static;
  #L0b1580.  return @kind void;
}
procedure `void` `sortArray--nroSd4`(`long`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/UArraySortingKt;.sortArray--nroSd4:([JII)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0b1594.  v0:= "array" @kind object;
  #L0b1598.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b159e.  v3:= v3 + -1;
  #L0b15a2.  call `e`(v1, v2, v3) @signature `Lkotlin/collections/UArraySortingKt;.e:([JII)V` @kind static;
  #L0b15a8.  return @kind void;
}
procedure `void` `sortArray-4UcCI2c`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/UArraySortingKt;.sortArray-4UcCI2c:([BII)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0b15bc.  v0:= "array" @kind object;
  #L0b15c0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b15c6.  v3:= v3 + -1;
  #L0b15ca.  call `f`(v1, v2, v3) @signature `Lkotlin/collections/UArraySortingKt;.f:([BII)V` @kind static;
  #L0b15d0.  return @kind void;
}
procedure `void` `sortArray-Aa5vz7o`(`short`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/UArraySortingKt;.sortArray-Aa5vz7o:([SII)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0b15e4.  v0:= "array" @kind object;
  #L0b15e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b15ee.  v3:= v3 + -1;
  #L0b15f2.  call `g`(v1, v2, v3) @signature `Lkotlin/collections/UArraySortingKt;.g:([SII)V` @kind static;
  #L0b15f8.  return @kind void;
}
procedure `void` `sortArray-oBK06Vg`(`int`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/UArraySortingKt;.sortArray-oBK06Vg:([III)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0b160c.  v0:= "array" @kind object;
  #L0b1610.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b1616.  v3:= v3 + -1;
  #L0b161a.  call `h`(v1, v2, v3) @signature `Lkotlin/collections/UArraySortingKt;.h:([III)V` @kind static;
  #L0b1620.  return @kind void;
}
