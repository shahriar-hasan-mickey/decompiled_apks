record `kotlin.collections.b` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.collections.b` v0 @kind this) @signature `Lkotlin/collections/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0808bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0808c2.  return @kind void;
}
procedure `java.lang.Object`[] `arrayOfNulls`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/b;.arrayOfNulls:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L080810.  v0:= "reference" @kind object;
  #L080814.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L08081a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L080820.  v1:= temp @kind object;
  #L080822.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L080828.  v1:= temp @kind object;
  #L08082a.  call temp:= `newInstance`(v1, v2) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L080830.  v1:= temp @kind object;
  #L080832.  v2:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.arrayOfNulls>" @kind object;
  #L080836.  call `checkNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L08083c.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L080840.  return v1 @kind object;
}
procedure `int` `contentDeepHashCode`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/collections/b;.contentDeepHashCode:([Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0807f4.  call temp:= `deepHashCode`(v0) @signature `Ljava/util/Arrays;.deepHashCode:([Ljava/lang/Object;)I` @kind static;
  #L0807fa.  v0:= temp;
  #L0807fc.  return v0;
}
procedure `void` `copyOfRangeToIndexCheck`(`int` v3 , `int` v4 ) @signature `Lkotlin/collections/b;.copyOfRangeToIndexCheck:(II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0808d4.  if v3 > v4 then goto L0808da;
  #L0808d8.  return @kind void;
  #L0808da.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L0808de.  v1:= new `java.lang.StringBuilder`;
  #L0808e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0808e8.  v2:= "toIndex (" @kind object;
  #L0808ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0808f2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0808f8.  v3:= ") is greater than size (" @kind object;
  #L0808fc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L080902.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L080908.  v3:= ")." @kind object;
  #L08090c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L080912.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L080918.  v3:= temp @kind object;
  #L08091a.  call `<init>`(v0, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L080920.  throw v0;
}
procedure `java.lang.Object`[] `orEmpty`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/b;.orEmpty:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L080854.  if v1 != 0 then goto L080868;
  #L080858.  v1:= 0I;
  #L08085a.  v0:= "T?" @kind object;
  #L08085e.  call `reifiedOperationMarker`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L080864.  v1:= new `java.lang.Object`[v1];
  #L080868.  return v1 @kind object;
}
procedure `java.lang.Object`[] `toTypedArray`(`java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/b;.toTypedArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L08087c.  v0:= "<this>" @kind object;
  #L080880.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L080886.  v0:= 0I;
  #L080888.  v1:= "T?" @kind object;
  #L08088c.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L080892.  v0:= new `java.lang.Object`[v0];
  #L080896.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L08089c.  v2:= temp @kind object;
  #L08089e.  v0:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L0808a2.  call `checkNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0808a8.  return v2 @kind object;
}
