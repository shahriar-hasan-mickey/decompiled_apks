record `kotlin.collections.builders.ListBuilderKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.lang.Object`[] v4 @kind object, `int` v5 , `int` v6 , `java.util.List` v7 @kind object) @signature `Lkotlin/collections/builders/ListBuilderKt;.a:([Ljava/lang/Object;IILjava/util/List;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0b1c60.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0b1c66.  v0:= temp;
  #L0b1c68.  v1:= 0I;
  #L0b1c6a.  if v6 == v0 then goto L0b1c70;
  #L0b1c6e.  return v1;
  #L0b1c70.  v0:= 0I;
  #L0b1c72.  if v0 >= v6 then goto L0b1c9a;
  #L0b1c76.  v2:= v5 + v0 @kind int;
  #L0b1c7a.  v2:= v4[v2] @kind object;
  #L0b1c7e.  call temp:= `get`(v7, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0b1c84.  v3:= temp @kind object;
  #L0b1c86.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b1c8c.  v2:= temp;
  #L0b1c8e.  if v2 != 0 then goto L0b1c94;
  #L0b1c92.  return v1;
  #L0b1c94.  v0:= v0 + 1;
  #L0b1c98.  goto L0b1c72;
  #L0b1c9a.  v4:= 1I;
  #L0b1c9c.  return v4;
}
procedure `boolean` `access$subarrayContentEquals`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentEquals:([Ljava/lang/Object;IILjava/util/List;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b1c44.  call temp:= `a`(v0, v1, v2, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.a:([Ljava/lang/Object;IILjava/util/List;)Z` @kind static;
  #L0b1c4a.  v0:= temp;
  #L0b1c4c.  return v0;
}
procedure `int` `access$subarrayContentHashCode`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentHashCode:([Ljava/lang/Object;II)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b1cb0.  call temp:= `b`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.b:([Ljava/lang/Object;II)I` @kind static;
  #L0b1cb6.  v0:= temp;
  #L0b1cb8.  return v0;
}
procedure `java.lang.String` `access$subarrayContentToString`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentToString:([Ljava/lang/Object;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b1d80.  call temp:= `c`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.c:([Ljava/lang/Object;II)Ljava/lang/String;` @kind static;
  #L0b1d86.  v0:= temp @kind object;
  #L0b1d88.  return v0 @kind object;
}
procedure `java.lang.Object`[] `arrayOfUninitializedElements`(`int` v1 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0b1d0c.  if v1 < 0 then goto L0b1d14;
  #L0b1d10.  v0:= 1I;
  #L0b1d12.  goto L0b1d16;
  #L0b1d14.  v0:= 0I;
  #L0b1d16.  if v0 == 0 then goto L0b1d20;
  #L0b1d1a.  v1:= new `java.lang.Object`[v1];
  #L0b1d1e.  return v1 @kind object;
  #L0b1d20.  v1:= new `java.lang.IllegalArgumentException`;
  #L0b1d24.  v0:= "capacity must be non-negative." @kind object;
  #L0b1d28.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b1d2e.  v0:= temp @kind object;
  #L0b1d30.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b1d36.  throw v1;
}
procedure `int` `b`(`java.lang.Object`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.b:([Ljava/lang/Object;II)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0b1ccc.  v0:= 0I;
  #L0b1cce.  v1:= 1I;
  #L0b1cd0.  v2:= 0I;
  #L0b1cd2.  if v2 >= v6 then goto L0b1cfa;
  #L0b1cd6.  v3:= v5 + v2 @kind int;
  #L0b1cda.  v3:= v4[v3] @kind object;
  #L0b1cde.  v1:= v1 * 31;
  #L0b1ce2.  if v3 == 0 then goto L0b1cf0;
  #L0b1ce6.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0b1cec.  v3:= temp;
  #L0b1cee.  goto L0b1cf2;
  #L0b1cf0.  v3:= 0I;
  #L0b1cf2.  v1:= v1 + v3 @kind int;
  #L0b1cf4.  v2:= v2 + 1;
  #L0b1cf8.  goto L0b1cd2;
  #L0b1cfa.  return v1;
}
procedure `java.lang.String` `c`(`java.lang.Object`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.c:([Ljava/lang/Object;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0b1d9c.  v0:= new `java.lang.StringBuilder`;
  #L0b1da0.  v1:= v5 * 3;
  #L0b1da4.  v1:= v1 + 2;
  #L0b1da8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0b1dae.  v1:= "[" @kind object;
  #L0b1db2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b1db8.  v1:= 0I;
  #L0b1dba.  if v1 >= v5 then goto L0b1de0;
  #L0b1dbe.  if v1 <= 0 then goto L0b1dcc;
  #L0b1dc2.  v2:= ", " @kind object;
  #L0b1dc6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b1dcc.  v2:= v4 + v1 @kind int;
  #L0b1dd0.  v2:= v3[v2] @kind object;
  #L0b1dd4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b1dda.  v1:= v1 + 1;
  #L0b1dde.  goto L0b1dba;
  #L0b1de0.  v3:= "]" @kind object;
  #L0b1de4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b1dea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b1df0.  v3:= temp @kind object;
  #L0b1df2.  v4:= "sb.toString()" @kind object;
  #L0b1df6.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b1dfc.  return v3 @kind object;
}
procedure `java.lang.Object`[] `copyOfUninitializedElements`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0b1d48.  v0:= "<this>" @kind object;
  #L0b1d4c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b1d52.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0b1d58.  v1:= temp @kind object;
  #L0b1d5a.  v2:= "copyOf(this, newSize)" @kind object;
  #L0b1d5e.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b1d64.  v2:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.builders.ListBuilderKt.copyOfUninitializedElements>" @kind object;
  #L0b1d68.  call `checkNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b1d6e.  return v1 @kind object;
}
procedure `void` `resetAt`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0b1e10.  v0:= "<this>" @kind object;
  #L0b1e14.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b1e1a.  v0:= 0I;
  #L0b1e1c.  v1[v2]:= v0 @kind object;
  #L0b1e20.  return @kind void;
}
procedure `void` `resetRange`(`java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0b1e34.  v0:= "<this>" @kind object;
  #L0b1e38.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b1e3e.  if v2 >= v3 then goto L0b1e4e;
  #L0b1e42.  call `resetAt`(v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L0b1e48.  v2:= v2 + 1;
  #L0b1e4c.  goto L0b1e3e;
  #L0b1e4e.  return @kind void;
}
