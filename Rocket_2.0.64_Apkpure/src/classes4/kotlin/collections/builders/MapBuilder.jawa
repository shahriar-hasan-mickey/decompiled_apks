record `kotlin.collections.builders.MapBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Map` @kind interface, `java.io.Serializable` @kind interface, `kotlin.jvm.internal.markers.KMutableMap` @kind interface {
  `java.lang.Object`[] `kotlin.collections.builders.MapBuilder.a` @AccessFlag PRIVATE;
  `java.lang.Object`[] `kotlin.collections.builders.MapBuilder.b` @AccessFlag PRIVATE;
  `int`[] `kotlin.collections.builders.MapBuilder.c` @AccessFlag PRIVATE;
  `int`[] `kotlin.collections.builders.MapBuilder.d` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.e` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.f` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.g` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.h` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilderKeys` `kotlin.collections.builders.MapBuilder.i` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilderValues` `kotlin.collections.builders.MapBuilder.j` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilderEntries` `kotlin.collections.builders.MapBuilder.k` @AccessFlag PRIVATE;
  `boolean` `kotlin.collections.builders.MapBuilder.l` @AccessFlag PRIVATE;
}
global `kotlin.collections.builders.MapBuilder$a` `@@kotlin.collections.builders.MapBuilder.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/collections/builders/MapBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0b3e08.  v0:= new `kotlin.collections.builders.MapBuilder$a`;
  #L0b3e0c.  v1:= 0I;
  #L0b3e0e.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$a;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0b3e14.  `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` := v0 @kind object;
  #L0b3e18.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0b3e2c.  v0:= 8I;
  #L0b3e30.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @kind direct;
  #L0b3e36.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v7 @kind this, `int` v8 ) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0b3e48.  call temp:= `arrayOfUninitializedElements`(v8) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @kind static;
  #L0b3e4e.  v1:= temp @kind object;
  #L0b3e50.  v3:= new `int`[v8];
  #L0b3e54.  v0:= `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` @kind object;
  #L0b3e58.  call temp:= `a`(v0, v8) @signature `Lkotlin/collections/builders/MapBuilder$a;.a:(Lkotlin/collections/builders/MapBuilder$a;I)I` @kind static;
  #L0b3e5e.  v8:= temp;
  #L0b3e60.  v4:= new `int`[v8];
  #L0b3e64.  v2:= 0I;
  #L0b3e66.  v5:= 2I;
  #L0b3e68.  v6:= 0I;
  #L0b3e6a.  v0:= v7 @kind object;
  #L0b3e6c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:([Ljava/lang/Object;[Ljava/lang/Object;[I[III)V` @kind direct;
  #L0b3e72.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object`[] v1 @kind object, `java.lang.Object`[] v2 @kind object, `int`[] v3 @kind object, `int`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:([Ljava/lang/Object;[Ljava/lang/Object;[I[III)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0b3e84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0b3e8a.  v0.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L0b3e8e.  v0.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] := v2 @kind object;
  #L0b3e92.  v0.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] := v3 @kind object;
  #L0b3e96.  v0.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] := v4 @kind object;
  #L0b3e9a.  v0.`kotlin.collections.builders.MapBuilder.e` @type ^`int` := v5;
  #L0b3e9e.  v0.`kotlin.collections.builders.MapBuilder.f` @type ^`int` := v6;
  #L0b3ea2.  v1:= `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` @kind object;
  #L0b3ea6.  call temp:= `j`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b3eac.  v2:= temp;
  #L0b3eae.  call temp:= `b`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder$a;.b:(Lkotlin/collections/builders/MapBuilder$a;I)I` @kind static;
  #L0b3eb4.  v1:= temp;
  #L0b3eb6.  v0.`kotlin.collections.builders.MapBuilder.g` @type ^`int` := v1;
  #L0b3eba.  return @kind void;
}
procedure `java.lang.Object`[] `access$allocateValuesArray`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$allocateValuesArray:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b3bc8.  call temp:= `b`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.b:()[Ljava/lang/Object;` @kind direct;
  #L0b3bce.  v0:= temp @kind object;
  #L0b3bd0.  return v0 @kind object;
}
procedure `java.lang.Object`[] `access$getKeysArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getKeysArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b3be4.  v0:= v0.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b3be8.  return v0 @kind object;
}
procedure `int` `access$getLength$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b3814.  v0:= v0.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b3818.  return v0;
}
procedure `int`[] `access$getPresenceArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getPresenceArray$p:(Lkotlin/collections/builders/MapBuilder;)[I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b3ad0.  v0:= v0.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b3ad4.  return v0 @kind object;
}
procedure `java.lang.Object`[] `access$getValuesArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getValuesArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b3bfc.  v0:= v0.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b3c00.  return v0 @kind object;
}
procedure `void` `access$removeKeyAt`(`kotlin.collections.builders.MapBuilder` v0 @kind object, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder;.access$removeKeyAt:(Lkotlin/collections/builders/MapBuilder;I)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0b3ecc.  call `q`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @kind direct;
  #L0b3ed2.  return @kind void;
}
procedure `java.lang.Object`[] `b`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.b:()[Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0b3c14.  v0:= v1.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b3c18.  if v0 == 0 then goto L0b3c1e;
  #L0b3c1c.  return v0 @kind object;
  #L0b3c1e.  call temp:= `i`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L0b3c24.  v0:= temp;
  #L0b3c26.  call temp:= `arrayOfUninitializedElements`(v0) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @kind static;
  #L0b3c2c.  v0:= temp @kind object;
  #L0b3c2e.  v1.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L0b3c32.  return v0 @kind object;
}
procedure `void` `c`(`kotlin.collections.builders.MapBuilder` v5 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0b3f98.  v0:= v5.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b3f9c.  v1:= 0I;
  #L0b3f9e.  v2:= 0I;
  #L0b3fa0.  v3:= v5.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b3fa4.  if v1 >= v3 then goto L0b3fd6;
  #L0b3fa8.  v3:= v5.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b3fac.  v3:= v3[v1];
  #L0b3fb0.  if v3 < 0 then goto L0b3fd0;
  #L0b3fb4.  v3:= v5.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b3fb8.  v4:= v3[v1] @kind object;
  #L0b3fbc.  v3[v2]:= v4 @kind object;
  #L0b3fc0.  if v0 == 0 then goto L0b3fcc;
  #L0b3fc4.  v3:= v0[v1] @kind object;
  #L0b3fc8.  v0[v2]:= v3 @kind object;
  #L0b3fcc.  v2:= v2 + 1;
  #L0b3fd0.  v1:= v1 + 1;
  #L0b3fd4.  goto L0b3fa0;
  #L0b3fd6.  v1:= v5.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b3fda.  call `resetRange`(v1, v2, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L0b3fe0.  if v0 == 0 then goto L0b3fee;
  #L0b3fe4.  v1:= v5.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b3fe8.  call `resetRange`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L0b3fee.  v5.`kotlin.collections.builders.MapBuilder.f` @type ^`int` := v2;
  #L0b3ff2.  return @kind void;
}
procedure `boolean` `d`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.d:(Ljava/util/Map;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0b3594.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b359a.  v0:= temp;
  #L0b359c.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L0b35a2.  v1:= temp;
  #L0b35a4.  if v0 != v1 then goto L0b35c0;
  #L0b35a8.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L0b35ae.  v3:= temp @kind object;
  #L0b35b0.  call temp:= `containsAllEntries$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @kind virtual;
  #L0b35b6.  v3:= temp;
  #L0b35b8.  if v3 == 0 then goto L0b35c0;
  #L0b35bc.  v3:= 1I;
  #L0b35be.  goto L0b35c2;
  #L0b35c0.  v3:= 0I;
  #L0b35c2.  return v3;
}
procedure `void` `e`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.e:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0b4004.  if v3 < 0 then goto L0b40ba;
  #L0b4008.  call temp:= `i`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L0b400e.  v0:= temp;
  #L0b4010.  if v3 <= v0 then goto L0b408e;
  #L0b4014.  call temp:= `i`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L0b401a.  v0:= temp;
  #L0b401c.  v0:= v0 * 3;
  #L0b4020.  v0:= v0 / 2;
  #L0b4024.  if v3 <= v0 then goto L0b402a;
  #L0b4028.  goto L0b402c;
  #L0b402a.  v3:= v0;
  #L0b402c.  v0:= v2.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b4030.  call temp:= `copyOfUninitializedElements`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0b4036.  v0:= temp @kind object;
  #L0b4038.  v2.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L0b403c.  v0:= v2.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b4040.  if v0 == 0 then goto L0b404e;
  #L0b4044.  call temp:= `copyOfUninitializedElements`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L0b404a.  v0:= temp @kind object;
  #L0b404c.  goto L0b4050;
  #L0b404e.  v0:= 0I;
  #L0b4050.  v2.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L0b4054.  v0:= v2.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b4058.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L0b405e.  v0:= temp @kind object;
  #L0b4060.  v1:= "copyOf(this, newSize)" @kind object;
  #L0b4064.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b406a.  v2.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] := v0 @kind object;
  #L0b406e.  v0:= `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` @kind object;
  #L0b4072.  call temp:= `a`(v0, v3) @signature `Lkotlin/collections/builders/MapBuilder$a;.a:(Lkotlin/collections/builders/MapBuilder$a;I)I` @kind static;
  #L0b4078.  v3:= temp;
  #L0b407a.  call temp:= `j`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b4080.  v0:= temp;
  #L0b4082.  if v3 <= v0 then goto L0b40b8;
  #L0b4086.  call `o`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.o:(I)V` @kind direct;
  #L0b408c.  goto L0b40b8;
  #L0b408e.  v0:= v2.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b4092.  v0:= v0 + v3 @kind int;
  #L0b4094.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b409a.  v3:= temp;
  #L0b409c.  v0:= v0 - v3 @kind int;
  #L0b409e.  call temp:= `i`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L0b40a4.  v3:= temp;
  #L0b40a6.  if v0 <= v3 then goto L0b40b8;
  #L0b40aa.  call temp:= `j`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b40b0.  v3:= temp;
  #L0b40b2.  call `o`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.o:(I)V` @kind direct;
  #L0b40b8.  return @kind void;
  #L0b40ba.  v3:= new `java.lang.OutOfMemoryError`;
  #L0b40be.  call `<init>`(v3) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L0b40c4.  throw v3;
}
procedure `void` `f`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/builders/MapBuilder;.f:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0b40d8.  v0:= v1.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b40dc.  v0:= v0 + v2 @kind int;
  #L0b40de.  call `e`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder;.e:(I)V` @kind direct;
  #L0b40e4.  return @kind void;
}
procedure `int` `g`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0b3920.  call temp:= `k`(v5, v6) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @kind direct;
  #L0b3926.  v0:= temp;
  #L0b3928.  v1:= v5.`kotlin.collections.builders.MapBuilder.e` @type ^`int`;
  #L0b392c.  v2:= v5.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b3930.  v2:= v2[v0];
  #L0b3934.  v3:= -1I;
  #L0b3936.  if v2 != 0 then goto L0b393c;
  #L0b393a.  return v3;
  #L0b393c.  if v2 <= 0 then goto L0b395a;
  #L0b3940.  v4:= v5.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b3944.  v2:= v2 + -1;
  #L0b3948.  v4:= v4[v2] @kind object;
  #L0b394c.  call temp:= `areEqual`(v4, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b3952.  v4:= temp;
  #L0b3954.  if v4 == 0 then goto L0b395a;
  #L0b3958.  return v2;
  #L0b395a.  v1:= v1 + v3 @kind int;
  #L0b395c.  if v1 >= 0 then goto L0b3962;
  #L0b3960.  return v3;
  #L0b3962.  v2:= v0 + -1;
  #L0b3966.  if v0 != 0 then goto L0b3978;
  #L0b396a.  call temp:= `j`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b3970.  v0:= temp;
  #L0b3972.  v0:= v0 + -1;
  #L0b3976.  goto L0b392c;
  #L0b3978.  v0:= v2;
  #L0b397a.  goto L0b392c;
}
procedure `int` `h`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.h:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0b398c.  v0:= v2.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b3990.  v1:= -1I;
  #L0b3992.  v0:= v0 + v1 @kind int;
  #L0b3994.  if v0 < 0 then goto L0b39c0;
  #L0b3998.  v1:= v2.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b399c.  v1:= v1[v0];
  #L0b39a0.  if v1 < 0 then goto L0b3990;
  #L0b39a4.  v1:= v2.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b39a8.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0b39ae.  v1:= v1[v0] @kind object;
  #L0b39b2.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b39b8.  v1:= temp;
  #L0b39ba.  if v1 == 0 then goto L0b3990;
  #L0b39be.  return v0;
  #L0b39c0.  return v1;
}
procedure `int` `i`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0b39d4.  v0:= v1.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b39d8.  v0:= length @variable v0;
  #L0b39da.  return v0;
}
procedure `int` `j`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0b39ec.  v0:= v1.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b39f0.  v0:= length @variable v0;
  #L0b39f2.  return v0;
}
procedure `int` `k`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0b3a1c.  if v2 == 0 then goto L0b3a2a;
  #L0b3a20.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0b3a26.  v2:= temp;
  #L0b3a28.  goto L0b3a2c;
  #L0b3a2a.  v2:= 0I;
  #L0b3a2c.  v0:= -1640531527I;
  #L0b3a32.  v2:= v2 * v0 @kind int;
  #L0b3a36.  v0:= v1.`kotlin.collections.builders.MapBuilder.g` @type ^`int`;
  #L0b3a3a.  v2:= v2 ^>> v0 @kind int;
  #L0b3a3c.  return v2;
}
procedure `boolean` `l`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.l:(Ljava/util/Collection;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0b3648.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L0b364e.  v0:= temp;
  #L0b3650.  v1:= 0I;
  #L0b3652.  if v0 == 0 then goto L0b3658;
  #L0b3656.  return v1;
  #L0b3658.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L0b365e.  v0:= temp;
  #L0b3660.  call `f`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.f:(I)V` @kind direct;
  #L0b3666.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0b366c.  v3:= temp @kind object;
  #L0b366e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0b3674.  v0:= temp;
  #L0b3676.  if v0 == 0 then goto L0b3696;
  #L0b367a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0b3680.  v0:= temp @kind object;
  #L0b3682.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L0b3686.  call temp:= `m`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.m:(Ljava/util/Map$Entry;)Z` @kind direct;
  #L0b368c.  v0:= temp;
  #L0b368e.  if v0 == 0 then goto L0b366e;
  #L0b3692.  v1:= 1I;
  #L0b3694.  goto L0b366e;
  #L0b3696.  return v1;
}
procedure `boolean` `m`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `java.util.Map$Entry` v6 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.m:(Ljava/util/Map$Entry;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0b36a8.  call temp:= `getKey`(v6) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L0b36ae.  v0:= temp @kind object;
  #L0b36b0.  call temp:= `addKey$kotlin_stdlib`(v5, v0) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L0b36b6.  v0:= temp;
  #L0b36b8.  call temp:= `b`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.b:()[Ljava/lang/Object;` @kind direct;
  #L0b36be.  v1:= temp @kind object;
  #L0b36c0.  v2:= 1I;
  #L0b36c2.  if v0 < 0 then goto L0b36d4;
  #L0b36c6.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0b36cc.  v6:= temp @kind object;
  #L0b36ce.  v1[v0]:= v6 @kind object;
  #L0b36d2.  return v2;
  #L0b36d4.  v0:= -v0 @kind int;
  #L0b36d6.  v0:= v0 - v2 @kind int;
  #L0b36d8.  v3:= v1[v0] @kind object;
  #L0b36dc.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0b36e2.  v4:= temp @kind object;
  #L0b36e4.  call temp:= `areEqual`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b36ea.  v3:= temp;
  #L0b36ec.  if v3 != 0 then goto L0b36fe;
  #L0b36f0.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0b36f6.  v6:= temp @kind object;
  #L0b36f8.  v1[v0]:= v6 @kind object;
  #L0b36fc.  return v2;
  #L0b36fe.  v6:= 0I;
  #L0b3700.  return v6;
}
procedure `boolean` `n`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `int` v6 ) @signature `Lkotlin/collections/builders/MapBuilder;.n:(I)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0b3714.  v0:= v5.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b3718.  v0:= v0[v6] @kind object;
  #L0b371c.  call temp:= `k`(v5, v0) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @kind direct;
  #L0b3722.  v0:= temp;
  #L0b3724.  v1:= v5.`kotlin.collections.builders.MapBuilder.e` @type ^`int`;
  #L0b3728.  v2:= v5.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b372c.  v3:= v2[v0];
  #L0b3730.  v4:= 1I;
  #L0b3732.  if v3 != 0 then goto L0b3748;
  #L0b3736.  v1:= v6 + 1;
  #L0b373a.  v2[v0]:= v1;
  #L0b373e.  v1:= v5.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b3742.  v1[v6]:= v0;
  #L0b3746.  return v4;
  #L0b3748.  v1:= v1 + -1;
  #L0b374c.  if v1 >= 0 then goto L0b3754;
  #L0b3750.  v6:= 0I;
  #L0b3752.  return v6;
  #L0b3754.  v2:= v0 + -1;
  #L0b3758.  if v0 != 0 then goto L0b3768;
  #L0b375c.  call temp:= `j`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b3762.  v0:= temp;
  #L0b3764.  v0:= v0 - v4 @kind int;
  #L0b3766.  goto L0b3728;
  #L0b3768.  v0:= v2;
  #L0b376a.  goto L0b3728;
}
procedure `void` `o`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.o:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0b4128.  v0:= v2.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b412c.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b4132.  v1:= temp;
  #L0b4134.  if v0 <= v1 then goto L0b413e;
  #L0b4138.  call `c`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.c:()V` @kind direct;
  #L0b413e.  call temp:= `j`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b4144.  v0:= temp;
  #L0b4146.  v1:= 0I;
  #L0b4148.  if v3 == v0 then goto L0b4166;
  #L0b414c.  v0:= new `int`[v3];
  #L0b4150.  v2.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] := v0 @kind object;
  #L0b4154.  v0:= `@@kotlin.collections.builders.MapBuilder.m` @type ^`kotlin.collections.builders.MapBuilder$a` @kind object;
  #L0b4158.  call temp:= `b`(v0, v3) @signature `Lkotlin/collections/builders/MapBuilder$a;.b:(Lkotlin/collections/builders/MapBuilder$a;I)I` @kind static;
  #L0b415e.  v3:= temp;
  #L0b4160.  v2.`kotlin.collections.builders.MapBuilder.g` @type ^`int` := v3;
  #L0b4164.  goto L0b4178;
  #L0b4166.  v3:= v2.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b416a.  call temp:= `j`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b4170.  v0:= temp;
  #L0b4172.  call `fill`(v3, v1, v1, v0) @signature `Lkotlin/collections/ArraysKt;.fill:([IIII)V` @kind static;
  #L0b4178.  v3:= v2.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b417c.  if v1 >= v3 then goto L0b41a4;
  #L0b4180.  v3:= v1 + 1;
  #L0b4184.  call temp:= `n`(v2, v1) @signature `Lkotlin/collections/builders/MapBuilder;.n:(I)Z` @kind direct;
  #L0b418a.  v0:= temp;
  #L0b418c.  if v0 == 0 then goto L0b4194;
  #L0b4190.  v1:= v3;
  #L0b4192.  goto L0b4178;
  #L0b4194.  v3:= new `java.lang.IllegalStateException`;
  #L0b4198.  v0:= "This cannot happen with fixed magic multiplier and grow-only hash array. Have object hashCodes changed?" @kind object;
  #L0b419c.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b41a2.  throw v3;
  #L0b41a4.  return @kind void;
}
procedure `void` `p`(`kotlin.collections.builders.MapBuilder` v9 @kind this, `int` v10 ) @signature `Lkotlin/collections/builders/MapBuilder;.p:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L0b41b8.  v0:= v9.`kotlin.collections.builders.MapBuilder.e` @type ^`int`;
  #L0b41bc.  v0:= v0 * 2;
  #L0b41c0.  call temp:= `j`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b41c6.  v1:= temp;
  #L0b41c8.  v1:= v1 / 2;
  #L0b41cc.  call temp:= `coerceAtMost`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L0b41d2.  v0:= temp;
  #L0b41d4.  v1:= 0I;
  #L0b41d6.  v2:= v0;
  #L0b41d8.  v3:= 0I;
  #L0b41da.  v0:= v10;
  #L0b41dc.  v4:= v10 + -1;
  #L0b41e0.  if v10 != 0 then goto L0b41f2;
  #L0b41e4.  call temp:= `j`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b41ea.  v10:= temp;
  #L0b41ec.  v10:= v10 + -1;
  #L0b41f0.  goto L0b41f4;
  #L0b41f2.  v10:= v4;
  #L0b41f4.  v3:= v3 + 1;
  #L0b41f8.  v4:= v9.`kotlin.collections.builders.MapBuilder.e` @type ^`int`;
  #L0b41fc.  if v3 <= v4 then goto L0b420a;
  #L0b4200.  v10:= v9.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b4204.  v10[v0]:= v1;
  #L0b4208.  return @kind void;
  #L0b420a.  v4:= v9.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b420e.  v5:= v4[v10];
  #L0b4212.  if v5 != 0 then goto L0b421c;
  #L0b4216.  v4[v0]:= v1;
  #L0b421a.  return @kind void;
  #L0b421c.  v6:= -1I;
  #L0b421e.  if v5 >= 0 then goto L0b422c;
  #L0b4222.  v4[v0]:= v6;
  #L0b4226.  v0:= v10;
  #L0b4228.  v3:= 0I;
  #L0b422a.  goto L0b4266;
  #L0b422c.  v4:= v9.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b4230.  v7:= v5 + -1;
  #L0b4234.  v4:= v4[v7] @kind object;
  #L0b4238.  call temp:= `k`(v9, v4) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @kind direct;
  #L0b423e.  v4:= temp;
  #L0b4240.  v4:= v4 - v10 @kind int;
  #L0b4242.  call temp:= `j`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b4248.  v8:= temp;
  #L0b424a.  v8:= v8 + -1;
  #L0b424e.  v4:= v4 ^& v8 @kind int;
  #L0b4250.  if v4 < v3 then goto L0b4266;
  #L0b4254.  v3:= v9.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b4258.  v3[v0]:= v5;
  #L0b425c.  v3:= v9.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b4260.  v3[v7]:= v0;
  #L0b4264.  goto L0b4226;
  #L0b4266.  v2:= v2 + v6 @kind int;
  #L0b4268.  if v2 >= 0 then goto L0b41dc;
  #L0b426c.  v10:= v9.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b4270.  v10[v0]:= v6;
  #L0b4274.  return @kind void;
}
procedure `void` `q`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0b4288.  v0:= v2.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b428c.  call `resetAt`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L0b4292.  v0:= v2.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b4296.  v0:= v0[v3];
  #L0b429a.  call `p`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.p:(I)V` @kind direct;
  #L0b42a0.  v0:= v2.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b42a4.  v1:= -1I;
  #L0b42a6.  v0[v3]:= v1;
  #L0b42aa.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b42b0.  v3:= temp;
  #L0b42b2.  v3:= v3 + v1 @kind int;
  #L0b42b4.  v2.`kotlin.collections.builders.MapBuilder.h` @type ^`int` := v3;
  #L0b42b8.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.collections.builders.MapBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0b3b94.  v0:= v2.`kotlin.collections.builders.MapBuilder.l` @type ^`boolean` @kind boolean;
  #L0b3b98.  if v0 == 0 then goto L0b3ba8;
  #L0b3b9c.  v0:= new `kotlin.collections.builders.SerializedMap`;
  #L0b3ba0.  call `<init>`(v0, v2) @signature `Lkotlin/collections/builders/SerializedMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L0b3ba6.  return v0 @kind object;
  #L0b3ba8.  v0:= new `java.io.NotSerializableException`;
  #L0b3bac.  v1:= "The map cannot be serialized while it is being built." @kind object;
  #L0b3bb0.  call `<init>`(v0, v1) @signature `Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b3bb6.  throw v0;
}
procedure `int` `addKey$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0b382c.  call `checkIsMutable$kotlin_stdlib`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b3832.  call temp:= `k`(v7, v8) @signature `Lkotlin/collections/builders/MapBuilder;.k:(Ljava/lang/Object;)I` @kind direct;
  #L0b3838.  v0:= temp;
  #L0b383a.  v1:= v7.`kotlin.collections.builders.MapBuilder.e` @type ^`int`;
  #L0b383e.  v1:= v1 * 2;
  #L0b3842.  call temp:= `j`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b3848.  v2:= temp;
  #L0b384a.  v2:= v2 / 2;
  #L0b384e.  call temp:= `coerceAtMost`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L0b3854.  v1:= temp;
  #L0b3856.  v2:= 0I;
  #L0b3858.  v3:= v7.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b385c.  v3:= v3[v0];
  #L0b3860.  v4:= 1I;
  #L0b3862.  if v3 > 0 then goto L0b38be;
  #L0b3866.  v1:= v7.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b386a.  call temp:= `i`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.i:()I` @kind direct;
  #L0b3870.  v3:= temp;
  #L0b3872.  if v1 < v3 then goto L0b387e;
  #L0b3876.  call `f`(v7, v4) @signature `Lkotlin/collections/builders/MapBuilder;.f:(I)V` @kind direct;
  #L0b387c.  goto L0b3832;
  #L0b387e.  v1:= v7.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b3882.  v3:= v1 + 1;
  #L0b3886.  v7.`kotlin.collections.builders.MapBuilder.f` @type ^`int` := v3;
  #L0b388a.  v5:= v7.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b388e.  v5[v1]:= v8 @kind object;
  #L0b3892.  v8:= v7.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b3896.  v8[v1]:= v0;
  #L0b389a.  v8:= v7.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b389e.  v8[v0]:= v3;
  #L0b38a2.  call temp:= `size`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b38a8.  v8:= temp;
  #L0b38aa.  v8:= v8 + v4 @kind int;
  #L0b38ac.  v7.`kotlin.collections.builders.MapBuilder.h` @type ^`int` := v8;
  #L0b38b0.  v8:= v7.`kotlin.collections.builders.MapBuilder.e` @type ^`int`;
  #L0b38b4.  if v2 <= v8 then goto L0b38bc;
  #L0b38b8.  v7.`kotlin.collections.builders.MapBuilder.e` @type ^`int` := v2;
  #L0b38bc.  return v1;
  #L0b38be.  v5:= v7.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b38c2.  v6:= v3 + -1;
  #L0b38c6.  v5:= v5[v6] @kind object;
  #L0b38ca.  call temp:= `areEqual`(v5, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b38d0.  v5:= temp;
  #L0b38d2.  if v5 == 0 then goto L0b38da;
  #L0b38d6.  v8:= -v3 @kind int;
  #L0b38d8.  return v8;
  #L0b38da.  v2:= v2 + 1;
  #L0b38de.  if v2 <= v1 then goto L0b38f6;
  #L0b38e2.  call temp:= `j`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b38e8.  v0:= temp;
  #L0b38ea.  v0:= v0 * 2;
  #L0b38ee.  call `o`(v7, v0) @signature `Lkotlin/collections/builders/MapBuilder;.o:(I)V` @kind direct;
  #L0b38f4.  goto L0b3832;
  #L0b38f6.  v3:= v0 + -1;
  #L0b38fa.  if v0 != 0 then goto L0b390a;
  #L0b38fe.  call temp:= `j`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.j:()I` @kind direct;
  #L0b3904.  v0:= temp;
  #L0b3906.  v0:= v0 - v4 @kind int;
  #L0b3908.  goto L0b3858;
  #L0b390a.  v0:= v3;
  #L0b390c.  goto L0b3858;
}
procedure `java.util.Map` `build`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.build:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3d0c.  call `checkIsMutable$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b3d12.  v0:= 1I;
  #L0b3d14.  v1.`kotlin.collections.builders.MapBuilder.l` @type ^`boolean` := v0 @kind boolean;
  #L0b3d18.  return v1 @kind object;
}
procedure `void` `checkIsMutable$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3ee4.  v0:= v1.`kotlin.collections.builders.MapBuilder.l` @type ^`boolean` @kind boolean;
  #L0b3ee8.  if v0 != 0 then goto L0b3eee;
  #L0b3eec.  return @kind void;
  #L0b3eee.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0b3ef2.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L0b3ef8.  throw v0;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilder` v6 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0b3f0c.  call `checkIsMutable$kotlin_stdlib`(v6) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b3f12.  v0:= new `kotlin.ranges.IntRange`;
  #L0b3f16.  v1:= v6.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b3f1a.  v1:= v1 + -1;
  #L0b3f1e.  v2:= 0I;
  #L0b3f20.  call `<init>`(v0, v2, v1) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0b3f26.  call temp:= `iterator`(v0) @signature `Lkotlin/ranges/IntProgression;.iterator:()Lkotlin/collections/IntIterator;` @kind virtual;
  #L0b3f2c.  v0:= temp @kind object;
  #L0b3f2e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0b3f34.  v1:= temp;
  #L0b3f36.  if v1 == 0 then goto L0b3f5e;
  #L0b3f3a.  call temp:= `nextInt`(v0) @signature `Lkotlin/collections/IntIterator;.nextInt:()I` @kind virtual;
  #L0b3f40.  v1:= temp;
  #L0b3f42.  v3:= v6.`kotlin.collections.builders.MapBuilder.c` @type ^`int`[] @kind object;
  #L0b3f46.  v4:= v3[v1];
  #L0b3f4a.  if v4 < 0 then goto L0b3f2e;
  #L0b3f4e.  v5:= v6.`kotlin.collections.builders.MapBuilder.d` @type ^`int`[] @kind object;
  #L0b3f52.  v5[v4]:= v2;
  #L0b3f56.  v4:= -1I;
  #L0b3f58.  v3[v1]:= v4;
  #L0b3f5c.  goto L0b3f2e;
  #L0b3f5e.  v0:= v6.`kotlin.collections.builders.MapBuilder.a` @type ^`java.lang.Object`[] @kind object;
  #L0b3f62.  v1:= v6.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b3f66.  call `resetRange`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L0b3f6c.  v0:= v6.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b3f70.  if v0 == 0 then goto L0b3f7e;
  #L0b3f74.  v1:= v6.`kotlin.collections.builders.MapBuilder.f` @type ^`int`;
  #L0b3f78.  call `resetRange`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L0b3f7e.  v6.`kotlin.collections.builders.MapBuilder.h` @type ^`int` := v2;
  #L0b3f82.  v6.`kotlin.collections.builders.MapBuilder.f` @type ^`int` := v2;
  #L0b3f86.  return @kind void;
}
procedure `boolean` `containsAllEntries$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0b3494.  v0:= "m" @kind object;
  #L0b3498.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b349e.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0b34a4.  v3:= temp @kind object;
  #L0b34a6.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0b34ac.  v0:= temp;
  #L0b34ae.  if v0 == 0 then goto L0b34d4;
  #L0b34b2.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0b34b8.  v0:= temp @kind object;
  #L0b34ba.  v1:= 0I;
  #L0b34bc.  if v0 == 0 then goto L0b34d2;
  #L0b34c0.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L0b34c4.  call temp:= `containsEntry$kotlin_stdlib`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L0b34ca.  v0:= temp;
  #L0b34cc.  if v0 != 0 then goto L0b34a6;
  #L0b34d0.  
  #L0b34d2.  return v1;
  #L0b34d4.  v3:= 1I;
  #L0b34d6.  return v3;
  catch `java.lang.ClassCastException` @[L0b34c0..L0b34cc] goto L0b34d2;
}
procedure `boolean` `containsEntry$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0b34f8.  v0:= "entry" @kind object;
  #L0b34fc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b3502.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L0b3508.  v0:= temp @kind object;
  #L0b350a.  call temp:= `g`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L0b3510.  v0:= temp;
  #L0b3512.  if v0 >= 0 then goto L0b351a;
  #L0b3516.  v3:= 0I;
  #L0b3518.  return v3;
  #L0b351a.  v1:= v2.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b351e.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0b3524.  v0:= v1[v0] @kind object;
  #L0b3528.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0b352e.  v3:= temp @kind object;
  #L0b3530.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b3536.  v3:= temp;
  #L0b3538.  return v3;
}
procedure `boolean` `containsKey`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L0b354c.  call temp:= `g`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L0b3552.  v1:= temp;
  #L0b3554.  if v1 < 0 then goto L0b355c;
  #L0b3558.  v1:= 1I;
  #L0b355a.  goto L0b355e;
  #L0b355c.  v1:= 0I;
  #L0b355e.  return v1;
}
procedure `boolean` `containsValue`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L0b3570.  call temp:= `h`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.h:(Ljava/lang/Object;)I` @kind direct;
  #L0b3576.  v1:= temp;
  #L0b3578.  if v1 < 0 then goto L0b3580;
  #L0b357c.  v1:= 1I;
  #L0b357e.  goto L0b3582;
  #L0b3580.  v1:= 0I;
  #L0b3582.  return v1;
}
procedure `kotlin.collections.builders.MapBuilder$EntriesItr` `entriesIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3db4.  v0:= new `kotlin.collections.builders.MapBuilder$EntriesItr`;
  #L0b3db8.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L0b3dbe.  return v0 @kind object;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3d2c.  call temp:= `getEntries`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getEntries:()Ljava/util/Set;` @kind virtual;
  #L0b3d32.  v0:= temp @kind object;
  #L0b3d34.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b35d4.  if v2 == v1 then goto L0b35f6;
  #L0b35d8.  v0:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L0b35dc.  if v0 == 0 then goto L0b35f2;
  #L0b35e0.  v2:= (`java.util.Map`) v2 @kind object;
  #L0b35e4.  call temp:= `d`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.d:(Ljava/util/Map;)Z` @kind direct;
  #L0b35ea.  v2:= temp;
  #L0b35ec.  if v2 == 0 then goto L0b35f2;
  #L0b35f0.  goto L0b35f6;
  #L0b35f2.  v2:= 0I;
  #L0b35f4.  goto L0b35f8;
  #L0b35f6.  v2:= 1I;
  #L0b35f8.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3ae8.  call temp:= `g`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L0b3aee.  v2:= temp;
  #L0b3af0.  if v2 >= 0 then goto L0b3af8;
  #L0b3af4.  v2:= 0I;
  #L0b3af6.  return v2 @kind object;
  #L0b3af8.  v0:= v1.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b3afc.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0b3b02.  v2:= v0[v2] @kind object;
  #L0b3b06.  return v2 @kind object;
}
procedure `java.util.Set` `getEntries`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getEntries:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3d48.  v0:= v1.`kotlin.collections.builders.MapBuilder.k` @type ^`kotlin.collections.builders.MapBuilderEntries` @kind object;
  #L0b3d4c.  if v0 != 0 then goto L0b3d5e;
  #L0b3d50.  v0:= new `kotlin.collections.builders.MapBuilderEntries`;
  #L0b3d54.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderEntries;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L0b3d5a.  v1.`kotlin.collections.builders.MapBuilder.k` @type ^`kotlin.collections.builders.MapBuilderEntries` := v0 @kind object;
  #L0b3d5e.  return v0 @kind object;
}
procedure `java.util.Set` `getKeys`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getKeys:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3d70.  v0:= v1.`kotlin.collections.builders.MapBuilder.i` @type ^`kotlin.collections.builders.MapBuilderKeys` @kind object;
  #L0b3d74.  if v0 != 0 then goto L0b3d86;
  #L0b3d78.  v0:= new `kotlin.collections.builders.MapBuilderKeys`;
  #L0b3d7c.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderKeys;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L0b3d82.  v1.`kotlin.collections.builders.MapBuilder.i` @type ^`kotlin.collections.builders.MapBuilderKeys` := v0 @kind object;
  #L0b3d86.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3a04.  v0:= v1.`kotlin.collections.builders.MapBuilder.h` @type ^`int`;
  #L0b3a08.  return v0;
}
procedure `java.util.Collection` `getValues`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getValues:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3cc8.  v0:= v1.`kotlin.collections.builders.MapBuilder.j` @type ^`kotlin.collections.builders.MapBuilderValues` @kind object;
  #L0b3ccc.  if v0 != 0 then goto L0b3cde;
  #L0b3cd0.  v0:= new `kotlin.collections.builders.MapBuilderValues`;
  #L0b3cd4.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderValues;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L0b3cda.  v1.`kotlin.collections.builders.MapBuilder.j` @type ^`kotlin.collections.builders.MapBuilderValues` := v0 @kind object;
  #L0b3cde.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.builders.MapBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0b3a50.  call temp:= `entriesIterator$kotlin_stdlib`(v3) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L0b3a56.  v0:= temp @kind object;
  #L0b3a58.  v1:= 0I;
  #L0b3a5a.  call temp:= `hasNext`(v0) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @kind virtual;
  #L0b3a60.  v2:= temp;
  #L0b3a62.  if v2 == 0 then goto L0b3a72;
  #L0b3a66.  call temp:= `nextHashCode$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.nextHashCode$kotlin_stdlib:()I` @kind virtual;
  #L0b3a6c.  v2:= temp;
  #L0b3a6e.  v1:= v1 + v2 @kind int;
  #L0b3a70.  goto L0b3a5a;
  #L0b3a72.  return v1;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b360c.  call temp:= `size`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b3612.  v0:= temp;
  #L0b3614.  if v0 != 0 then goto L0b361c;
  #L0b3618.  v0:= 1I;
  #L0b361a.  goto L0b361e;
  #L0b361c.  v0:= 0I;
  #L0b361e.  return v0;
}
procedure `boolean` `isReadOnly$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.isReadOnly$kotlin_stdlib:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3630.  v0:= v1.`kotlin.collections.builders.MapBuilder.l` @type ^`boolean` @kind boolean;
  #L0b3634.  return v0;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3d98.  call temp:= `getKeys`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getKeys:()Ljava/util/Set;` @kind virtual;
  #L0b3d9e.  v0:= temp @kind object;
  #L0b3da0.  return v0 @kind object;
}
procedure `kotlin.collections.builders.MapBuilder$KeysItr` `keysIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.keysIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$KeysItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3dd0.  v0:= new `kotlin.collections.builders.MapBuilder$KeysItr`;
  #L0b3dd4.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$KeysItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L0b3dda.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0b3b18.  call `checkIsMutable$kotlin_stdlib`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b3b1e.  call temp:= `addKey$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L0b3b24.  v3:= temp;
  #L0b3b26.  call temp:= `b`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.b:()[Ljava/lang/Object;` @kind direct;
  #L0b3b2c.  v0:= temp @kind object;
  #L0b3b2e.  if v3 >= 0 then goto L0b3b42;
  #L0b3b32.  v3:= -v3 @kind int;
  #L0b3b34.  v3:= v3 + -1;
  #L0b3b38.  v1:= v0[v3] @kind object;
  #L0b3b3c.  v0[v3]:= v4 @kind object;
  #L0b3b40.  return v1 @kind object;
  #L0b3b42.  v0[v3]:= v4 @kind object;
  #L0b3b46.  v3:= 0I;
  #L0b3b48.  return v3 @kind object;
}
procedure `void` `putAll`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b40f8.  v0:= "from" @kind object;
  #L0b40fc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b4102.  call `checkIsMutable$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b4108.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L0b410e.  v2:= temp @kind object;
  #L0b4110.  call temp:= `l`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.l:(Ljava/util/Collection;)Z` @kind direct;
  #L0b4116.  return @kind void;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0b3b5c.  call temp:= `removeKey$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L0b3b62.  v3:= temp;
  #L0b3b64.  if v3 >= 0 then goto L0b3b6c;
  #L0b3b68.  v3:= 0I;
  #L0b3b6a.  return v3 @kind object;
  #L0b3b6c.  v0:= v2.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b3b70.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0b3b76.  v1:= v0[v3] @kind object;
  #L0b3b7a.  call `resetAt`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L0b3b80.  return v1 @kind object;
}
procedure `boolean` `removeEntry$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v3 @kind this, `java.util.Map$Entry` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0b377c.  v0:= "entry" @kind object;
  #L0b3780.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b3786.  call `checkIsMutable$kotlin_stdlib`(v3) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b378c.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L0b3792.  v0:= temp @kind object;
  #L0b3794.  call temp:= `g`(v3, v0) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L0b379a.  v0:= temp;
  #L0b379c.  v1:= 0I;
  #L0b379e.  if v0 >= 0 then goto L0b37a4;
  #L0b37a2.  return v1;
  #L0b37a4.  v2:= v3.`kotlin.collections.builders.MapBuilder.b` @type ^`java.lang.Object`[] @kind object;
  #L0b37a8.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0b37ae.  v2:= v2[v0] @kind object;
  #L0b37b2.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0b37b8.  v4:= temp @kind object;
  #L0b37ba.  call temp:= `areEqual`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b37c0.  v4:= temp;
  #L0b37c2.  if v4 != 0 then goto L0b37c8;
  #L0b37c6.  return v1;
  #L0b37c8.  call `q`(v3, v0) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @kind direct;
  #L0b37ce.  v4:= 1I;
  #L0b37d0.  return v4;
}
procedure `int` `removeKey$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0b3a84.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b3a8a.  call temp:= `g`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.g:(Ljava/lang/Object;)I` @kind direct;
  #L0b3a90.  v1:= temp;
  #L0b3a92.  if v1 >= 0 then goto L0b3a9a;
  #L0b3a96.  v1:= -1I;
  #L0b3a98.  return v1;
  #L0b3a9a.  call `q`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @kind direct;
  #L0b3aa0.  return v1;
}
procedure `boolean` `removeValue$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeValue$kotlin_stdlib:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0b37e4.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b37ea.  call temp:= `h`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.h:(Ljava/lang/Object;)I` @kind direct;
  #L0b37f0.  v1:= temp;
  #L0b37f2.  if v1 >= 0 then goto L0b37fa;
  #L0b37f6.  v1:= 0I;
  #L0b37f8.  return v1;
  #L0b37fa.  call `q`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.q:(I)V` @kind direct;
  #L0b3800.  v1:= 1I;
  #L0b3802.  return v1;
}
procedure `int` `size`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3ab4.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getSize:()I` @kind virtual;
  #L0b3aba.  v0:= temp;
  #L0b3abc.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.collections.builders.MapBuilder` v4 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0b3c44.  v0:= new `java.lang.StringBuilder`;
  #L0b3c48.  call temp:= `size`(v4) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b3c4e.  v1:= temp;
  #L0b3c50.  v1:= v1 * 3;
  #L0b3c54.  v1:= v1 + 2;
  #L0b3c58.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0b3c5e.  v1:= "{" @kind object;
  #L0b3c62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b3c68.  call temp:= `entriesIterator$kotlin_stdlib`(v4) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L0b3c6e.  v1:= temp @kind object;
  #L0b3c70.  v2:= 0I;
  #L0b3c72.  call temp:= `hasNext`(v1) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @kind virtual;
  #L0b3c78.  v3:= temp;
  #L0b3c7a.  if v3 == 0 then goto L0b3c98;
  #L0b3c7e.  if v2 <= 0 then goto L0b3c8c;
  #L0b3c82.  v3:= ", " @kind object;
  #L0b3c86.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b3c8c.  call `nextAppendString`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.nextAppendString:(Ljava/lang/StringBuilder;)V` @kind virtual;
  #L0b3c92.  v2:= v2 + 1;
  #L0b3c96.  goto L0b3c72;
  #L0b3c98.  v1:= "}" @kind object;
  #L0b3c9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b3ca2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b3ca8.  v0:= temp @kind object;
  #L0b3caa.  v1:= "sb.toString()" @kind object;
  #L0b3cae.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b3cb4.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3cf0.  call temp:= `getValues`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getValues:()Ljava/util/Collection;` @kind virtual;
  #L0b3cf6.  v0:= temp @kind object;
  #L0b3cf8.  return v0 @kind object;
}
procedure `kotlin.collections.builders.MapBuilder$ValuesItr` `valuesIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.valuesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$ValuesItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3dec.  v0:= new `kotlin.collections.builders.MapBuilder$ValuesItr`;
  #L0b3df0.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$ValuesItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L0b3df6.  return v0 @kind object;
}
