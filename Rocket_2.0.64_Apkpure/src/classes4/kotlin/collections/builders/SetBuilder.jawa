record `kotlin.collections.builders.SetBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractMutableSet` @kind class, `java.io.Serializable` @kind interface {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.SetBuilder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0b48e8.  v0:= new `kotlin.collections.builders.MapBuilder`;
  #L0b48ec.  call `<init>`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:()V` @kind direct;
  #L0b48f2.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L0b48f8.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0b490c.  v0:= new `kotlin.collections.builders.MapBuilder`;
  #L0b4910.  call `<init>`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @kind direct;
  #L0b4916.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L0b491c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0b4930.  v0:= "backing" @kind object;
  #L0b4934.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b493a.  call `<init>`(v1) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @kind direct;
  #L0b4940.  v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L0b4944.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.collections.builders.SetBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0b486c.  v0:= v2.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b4870.  call temp:= `isReadOnly$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isReadOnly$kotlin_stdlib:()Z` @kind virtual;
  #L0b4876.  v0:= temp;
  #L0b4878.  if v0 == 0 then goto L0b488a;
  #L0b487c.  v0:= new `kotlin.collections.builders.SerializedCollection`;
  #L0b4880.  v1:= 1I;
  #L0b4882.  call `<init>`(v0, v2, v1) @signature `Lkotlin/collections/builders/SerializedCollection;.<init>:(Ljava/util/Collection;I)V` @kind direct;
  #L0b4888.  return v0 @kind object;
  #L0b488a.  v0:= new `java.io.NotSerializableException`;
  #L0b488e.  v1:= "The set cannot be serialized while it is being built." @kind object;
  #L0b4892.  call `<init>`(v0, v1) @signature `Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b4898.  throw v0;
}
procedure `boolean` `add`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b472c.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b4730.  call temp:= `addKey$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L0b4736.  v2:= temp;
  #L0b4738.  if v2 < 0 then goto L0b4740;
  #L0b473c.  v2:= 1I;
  #L0b473e.  goto L0b4742;
  #L0b4740.  v2:= 0I;
  #L0b4742.  return v2;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b4754.  v0:= "elements" @kind object;
  #L0b4758.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b475e.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b4762.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b4768.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/AbstractSet;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L0b476e.  v2:= temp;
  #L0b4770.  return v2;
}
procedure `java.util.Set` `build`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.build:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b48cc.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b48d0.  call temp:= `build`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.build:()Ljava/util/Map;` @kind virtual;
  #L0b48d6.  return v1 @kind object;
}
procedure `void` `clear`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b4958.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b495c.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L0b4962.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b4784.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b4788.  call temp:= `containsKey`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L0b478e.  v2:= temp;
  #L0b4790.  return v2;
}
procedure `int` `getSize`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b484c.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b4850.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b4856.  v0:= temp;
  #L0b4858.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b47a4.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b47a8.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L0b47ae.  v0:= temp;
  #L0b47b0.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b48ac.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b48b0.  call temp:= `keysIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.keysIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$KeysItr;` @kind virtual;
  #L0b48b6.  v0:= temp @kind object;
  #L0b48b8.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b47c4.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b47c8.  call temp:= `removeKey$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L0b47ce.  v2:= temp;
  #L0b47d0.  if v2 < 0 then goto L0b47d8;
  #L0b47d4.  v2:= 1I;
  #L0b47d6.  goto L0b47da;
  #L0b47d8.  v2:= 0I;
  #L0b47da.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b47ec.  v0:= "elements" @kind object;
  #L0b47f0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b47f6.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b47fa.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b4800.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L0b4806.  v2:= temp;
  #L0b4808.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b481c.  v0:= "elements" @kind object;
  #L0b4820.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b4826.  v0:= v1.`kotlin.collections.builders.SetBuilder.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b482a.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b4830.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L0b4836.  v2:= temp;
  #L0b4838.  return v2;
}
