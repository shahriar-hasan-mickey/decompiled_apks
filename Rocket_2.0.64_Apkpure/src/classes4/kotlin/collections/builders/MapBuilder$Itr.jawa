record `kotlin.collections.builders.MapBuilder$Itr` @kind class @AccessFlag PUBLIC {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilder$Itr.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.collections.builders.MapBuilder$Itr.b` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder$Itr.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0b2d20.  v0:= "map" @kind object;
  #L0b2d24.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b2d2a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0b2d30.  v1.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L0b2d34.  v2:= -1I;
  #L0b2d36.  v1.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`int` := v2;
  #L0b2d3a.  call `initNext$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.initNext$kotlin_stdlib:()V` @kind virtual;
  #L0b2d40.  return @kind void;
}
procedure `int` `getIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getIndex$kotlin_stdlib:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b2cd8.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int`;
  #L0b2cdc.  return v0;
}
procedure `int` `getLastIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getLastIndex$kotlin_stdlib:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b2cf0.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`int`;
  #L0b2cf4.  return v0;
}
procedure `kotlin.collections.builders.MapBuilder` `getMap$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getMap$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b2d08.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2d0c.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`kotlin.collections.builders.MapBuilder$Itr` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0b2cac.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int`;
  #L0b2cb0.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2cb4.  call temp:= `access$getLength$p`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @kind static;
  #L0b2cba.  v1:= temp;
  #L0b2cbc.  if v0 >= v1 then goto L0b2cc4;
  #L0b2cc0.  v0:= 1I;
  #L0b2cc2.  goto L0b2cc6;
  #L0b2cc4.  v0:= 0I;
  #L0b2cc6.  return v0;
}
procedure `void` `initNext$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.initNext$kotlin_stdlib:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0b2d54.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int`;
  #L0b2d58.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2d5c.  call temp:= `access$getLength$p`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @kind static;
  #L0b2d62.  v1:= temp;
  #L0b2d64.  if v0 >= v1 then goto L0b2d8a;
  #L0b2d68.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2d6c.  call temp:= `access$getPresenceArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getPresenceArray$p:(Lkotlin/collections/builders/MapBuilder;)[I` @kind static;
  #L0b2d72.  v0:= temp @kind object;
  #L0b2d74.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int`;
  #L0b2d78.  v0:= v0[v1];
  #L0b2d7c.  if v0 >= 0 then goto L0b2d8a;
  #L0b2d80.  v1:= v1 + 1;
  #L0b2d84.  v2.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int` := v1;
  #L0b2d88.  goto L0b2d54;
  #L0b2d8a.  return @kind void;
}
procedure `void` `remove`(`kotlin.collections.builders.MapBuilder$Itr` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0b2d9c.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`int`;
  #L0b2da0.  v1:= -1I;
  #L0b2da2.  if v0 == v1 then goto L0b2daa;
  #L0b2da6.  v0:= 1I;
  #L0b2da8.  goto L0b2dac;
  #L0b2daa.  v0:= 0I;
  #L0b2dac.  if v0 == 0 then goto L0b2dce;
  #L0b2db0.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2db4.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b2dba.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2dbe.  v2:= v3.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`int`;
  #L0b2dc2.  call `access$removeKeyAt`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.access$removeKeyAt:(Lkotlin/collections/builders/MapBuilder;I)V` @kind static;
  #L0b2dc8.  v3.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`int` := v1;
  #L0b2dcc.  return @kind void;
  #L0b2dce.  v0:= new `java.lang.IllegalStateException`;
  #L0b2dd2.  v1:= "Call next() before removing element from the iterator." @kind object;
  #L0b2dd6.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b2ddc.  v1:= temp @kind object;
  #L0b2dde.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b2de4.  throw v0;
}
procedure `void` `setIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.setIndex$kotlin_stdlib:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0b2df8.  v0.`kotlin.collections.builders.MapBuilder$Itr.b` @type ^`int` := v1;
  #L0b2dfc.  return @kind void;
}
procedure `void` `setLastIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.setLastIndex$kotlin_stdlib:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0b2e10.  v0.`kotlin.collections.builders.MapBuilder$Itr.c` @type ^`int` := v1;
  #L0b2e14.  return @kind void;
}
