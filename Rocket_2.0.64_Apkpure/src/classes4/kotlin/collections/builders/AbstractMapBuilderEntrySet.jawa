record `kotlin.collections.builders.AbstractMapBuilderEntrySet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.collections.AbstractMutableSet` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v0 @kind this) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0b19f8.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @kind direct;
  #L0b19fe.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b1960.  v0:= instanceof @variable v2 @type ^`java.util.Map$Entry` @kind boolean;
  #L0b1964.  if v0 != 0 then goto L0b196c;
  #L0b1968.  v2:= 0I;
  #L0b196a.  return v2;
  #L0b196c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L0b1970.  call temp:= `contains`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L0b1976.  v2:= temp;
  #L0b1978.  return v2;
}
procedure `boolean` `contains`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b198c.  v0:= "element" @kind object;
  #L0b1990.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b1996.  call temp:= `containsEntry`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.containsEntry:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L0b199c.  v2:= temp;
  #L0b199e.  return v2;
}
procedure `boolean` `containsEntry`(`java.util.Map$Entry` v0 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.containsEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `remove`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b19b0.  v0:= instanceof @variable v2 @type ^`java.util.Map$Entry` @kind boolean;
  #L0b19b4.  if v0 != 0 then goto L0b19bc;
  #L0b19b8.  v2:= 0I;
  #L0b19ba.  return v2;
  #L0b19bc.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L0b19c0.  call temp:= `remove`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L0b19c6.  v2:= temp;
  #L0b19c8.  return v2;
}
procedure `boolean` `remove`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v0 @kind this, `java.util.Map$Entry` v1 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;

  #L0b19dc.  call temp:= `remove`(v0, v1) @signature `Ljava/util/AbstractSet;.remove:(Ljava/lang/Object;)Z` @kind super;
  #L0b19e2.  v1:= temp;
  #L0b19e4.  return v1;
}
