record `kotlin.collections.builders.MapBuilder$EntryRef` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Map$Entry` @kind interface, `kotlin.jvm.internal.markers.KMutableMap$Entry` @kind interface {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilder$EntryRef.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.collections.builders.MapBuilder$EntryRef.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder$EntryRef` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.<init>:(Lkotlin/collections/builders/MapBuilder;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0b2c80.  v0:= "map" @kind object;
  #L0b2c84.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b2c8a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0b2c90.  v1.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L0b2c94.  v1.`kotlin.collections.builders.MapBuilder$EntryRef.b` @type ^`int` := v3;
  #L0b2c98.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0b2b0c.  v0:= instanceof @variable v3 @type ^`java.util.Map$Entry` @kind boolean;
  #L0b2b10.  if v0 == 0 then goto L0b2b54;
  #L0b2b14.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L0b2b18.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L0b2b1e.  v0:= temp @kind object;
  #L0b2b20.  call temp:= `getKey`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L0b2b26.  v1:= temp @kind object;
  #L0b2b28.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b2b2e.  v0:= temp;
  #L0b2b30.  if v0 == 0 then goto L0b2b54;
  #L0b2b34.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L0b2b3a.  v3:= temp @kind object;
  #L0b2b3c.  call temp:= `getValue`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L0b2b42.  v0:= temp @kind object;
  #L0b2b44.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0b2b4a.  v3:= temp;
  #L0b2b4c.  if v3 == 0 then goto L0b2b54;
  #L0b2b50.  v3:= 1I;
  #L0b2b52.  goto L0b2b56;
  #L0b2b54.  v3:= 0I;
  #L0b2b56.  return v3;
}
procedure `java.lang.Object` `getKey`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0b2bac.  v0:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2bb0.  call temp:= `access$getKeysArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getKeysArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L0b2bb6.  v0:= temp @kind object;
  #L0b2bb8.  v1:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.b` @type ^`int`;
  #L0b2bbc.  v0:= v0[v1] @kind object;
  #L0b2bc0.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0b2bd4.  v0:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2bd8.  call temp:= `access$getValuesArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getValuesArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L0b2bde.  v0:= temp @kind object;
  #L0b2be0.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0b2be6.  v1:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.b` @type ^`int`;
  #L0b2bea.  v0:= v0[v1] @kind object;
  #L0b2bee.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.builders.MapBuilder$EntryRef` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0b2b68.  call temp:= `getKey`(v3) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L0b2b6e.  v0:= temp @kind object;
  #L0b2b70.  v1:= 0I;
  #L0b2b72.  if v0 == 0 then goto L0b2b80;
  #L0b2b76.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0b2b7c.  v0:= temp;
  #L0b2b7e.  goto L0b2b82;
  #L0b2b80.  v0:= 0I;
  #L0b2b82.  call temp:= `getValue`(v3) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L0b2b88.  v2:= temp @kind object;
  #L0b2b8a.  if v2 == 0 then goto L0b2b96;
  #L0b2b8e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0b2b94.  v1:= temp;
  #L0b2b96.  v0:= v0 ^~ v1 @kind int;
  #L0b2b98.  return v0;
}
procedure `java.lang.Object` `setValue`(`kotlin.collections.builders.MapBuilder$EntryRef` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0b2c00.  v0:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2c04.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b2c0a.  v0:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2c0e.  call temp:= `access$allocateValuesArray`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$allocateValuesArray:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L0b2c14.  v0:= temp @kind object;
  #L0b2c16.  v1:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.b` @type ^`int`;
  #L0b2c1a.  v2:= v0[v1] @kind object;
  #L0b2c1e.  v0[v1]:= v4 @kind object;
  #L0b2c22.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0b2c34.  v0:= new `java.lang.StringBuilder`;
  #L0b2c38.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0b2c3e.  call temp:= `getKey`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L0b2c44.  v1:= temp @kind object;
  #L0b2c46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b2c4c.  v1:= 61I;
  #L0b2c50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b2c56.  call temp:= `getValue`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L0b2c5c.  v1:= temp @kind object;
  #L0b2c5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b2c64.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b2c6a.  v0:= temp @kind object;
  #L0b2c6c.  return v0 @kind object;
}
