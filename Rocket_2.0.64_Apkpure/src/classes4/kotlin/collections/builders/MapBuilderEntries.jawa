record `kotlin.collections.builders.MapBuilderEntries` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.builders.AbstractMapBuilderEntrySet` @kind class {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilderEntries.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0b3120.  v0:= "backing" @kind object;
  #L0b3124.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b312a.  call `<init>`(v1) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.<init>:()V` @kind direct;
  #L0b3130.  v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L0b3134.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderEntries` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0b2f60.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L0b2f64.  call temp:= `add`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L0b2f6a.  v1:= temp;
  #L0b2f6c.  return v1;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b2f80.  v0:= "element" @kind object;
  #L0b2f84.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b2f8a.  v2:= new `java.lang.UnsupportedOperationException`;
  #L0b2f8e.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L0b2f94.  throw v2;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b2fa8.  v0:= "elements" @kind object;
  #L0b2fac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b2fb2.  v2:= new `java.lang.UnsupportedOperationException`;
  #L0b2fb6.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L0b2fbc.  throw v2;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3148.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b314c.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L0b3152.  return @kind void;
}
procedure `boolean` `containsAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b2fd0.  v0:= "elements" @kind object;
  #L0b2fd4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b2fda.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b2fde.  call temp:= `containsAllEntries$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @kind virtual;
  #L0b2fe4.  v2:= temp;
  #L0b2fe6.  return v2;
}
procedure `boolean` `containsEntry`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.containsEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b2ff8.  v0:= "element" @kind object;
  #L0b2ffc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b3002.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b3006.  call temp:= `containsEntry$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L0b300c.  v2:= temp;
  #L0b300e.  return v2;
}
procedure `kotlin.collections.builders.MapBuilder` `getBacking`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.getBacking:()Lkotlin/collections/builders/MapBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0b3108.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b310c.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b30c8.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b30cc.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L0b30d2.  v0:= temp;
  #L0b30d4.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3020.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b3024.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L0b302a.  v0:= temp;
  #L0b302c.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b30e8.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b30ec.  call temp:= `entriesIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L0b30f2.  v0:= temp @kind object;
  #L0b30f4.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.remove:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3040.  v0:= "element" @kind object;
  #L0b3044.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b304a.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b304e.  call temp:= `removeEntry$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L0b3054.  v2:= temp;
  #L0b3056.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3068.  v0:= "elements" @kind object;
  #L0b306c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b3072.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b3076.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b307c.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L0b3082.  v2:= temp;
  #L0b3084.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0b3098.  v0:= "elements" @kind object;
  #L0b309c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b30a2.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.a` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L0b30a6.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L0b30ac.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L0b30b2.  v2:= temp;
  #L0b30b4.  return v2;
}
