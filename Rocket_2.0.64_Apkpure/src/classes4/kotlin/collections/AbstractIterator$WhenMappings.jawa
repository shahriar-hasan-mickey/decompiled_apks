record `kotlin.collections.AbstractIterator$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.collections.AbstractIterator$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/collections/AbstractIterator$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L07dee0.  call temp:= `values`() @signature `Lkotlin/collections/c0;.values:()[Lkotlin/collections/c0;` @kind static;
  #L07dee6.  v0:= temp @kind object;
  #L07dee8.  v0:= length @variable v0;
  #L07deea.  v0:= new `int`[v0];
  #L07deee.  v1:= `@@kotlin.collections.c0.c` @type ^`kotlin.collections.c0` @kind object;
  #L07def2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L07def8.  v1:= temp;
  #L07defa.  v2:= 1I;
  #L07defc.  v0[v1]:= v2;
  #L07df00.  v1:= `@@kotlin.collections.c0.a` @type ^`kotlin.collections.c0` @kind object;
  #L07df04.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L07df0a.  v1:= temp;
  #L07df0c.  v2:= 2I;
  #L07df0e.  v0[v1]:= v2;
  #L07df12.  `@@kotlin.collections.AbstractIterator$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L07df16.  return @kind void;
}
