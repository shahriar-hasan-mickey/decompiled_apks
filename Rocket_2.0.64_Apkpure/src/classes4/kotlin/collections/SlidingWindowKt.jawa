record `kotlin.collections.SlidingWindowKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `checkWindowSizeStep`(`int` v3 , `int` v4 ) @signature `Lkotlin/collections/SlidingWindowKt;.checkWindowSizeStep:(II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0b106c.  if v3 <= 0 then goto L0b1078;
  #L0b1070.  if v4 <= 0 then goto L0b1078;
  #L0b1074.  v0:= 1I;
  #L0b1076.  goto L0b107a;
  #L0b1078.  v0:= 0I;
  #L0b107a.  if v0 != 0 then goto L0b10fc;
  #L0b107e.  v0:= " must be greater than zero." @kind object;
  #L0b1082.  if v3 == v4 then goto L0b10c0;
  #L0b1086.  v1:= new `java.lang.StringBuilder`;
  #L0b108a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0b1090.  v2:= "Both size " @kind object;
  #L0b1094.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b109a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b10a0.  v3:= " and step " @kind object;
  #L0b10a4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b10aa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b10b0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b10b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b10bc.  v3:= temp @kind object;
  #L0b10be.  goto L0b10e8;
  #L0b10c0.  v4:= new `java.lang.StringBuilder`;
  #L0b10c4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0b10ca.  v1:= "size " @kind object;
  #L0b10ce.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b10d4.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b10da.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b10e0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b10e6.  v3:= temp @kind object;
  #L0b10e8.  v4:= new `java.lang.IllegalArgumentException`;
  #L0b10ec.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b10f2.  v3:= temp @kind object;
  #L0b10f4.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b10fa.  throw v4;
  #L0b10fc.  return @kind void;
}
procedure `java.util.Iterator` `windowedIterator`(`java.util.Iterator` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 , `boolean` v12 ) @signature `Lkotlin/collections/SlidingWindowKt;.windowedIterator:(Ljava/util/Iterator;IIZZ)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0b0fe4.  v0:= "iterator" @kind object;
  #L0b0fe8.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b0fee.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0b0ff4.  v0:= temp;
  #L0b0ff6.  if v0 != 0 then goto L0b1000;
  #L0b0ffa.  v8:= `@@kotlin.collections.EmptyIterator.INSTANCE` @type ^`kotlin.collections.EmptyIterator` @kind object;
  #L0b0ffe.  return v8 @kind object;
  #L0b1000.  v7:= new `kotlin.collections.SlidingWindowKt$a`;
  #L0b1004.  v6:= 0I;
  #L0b1006.  v0:= v7 @kind object;
  #L0b1008.  v1:= v9;
  #L0b100a.  v2:= v10;
  #L0b100c.  v3:= v8 @kind object;
  #L0b100e.  v4:= v12;
  #L0b1010.  v5:= v11;
  #L0b1012.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/SlidingWindowKt$a;.<init>:(IILjava/util/Iterator;ZZLkotlin/coroutines/Continuation;)V` @kind direct;
  #L0b1018.  call temp:= `iterator`(v7) @signature `Lkotlin/sequences/SequencesKt;.iterator:(Lkotlin/jvm/functions/Function2;)Ljava/util/Iterator;` @kind static;
  #L0b101e.  v8:= temp @kind object;
  #L0b1020.  return v8 @kind object;
}
procedure `kotlin.sequences.Sequence` `windowedSequence`(`kotlin.sequences.Sequence` v7 @kind object, `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 ) @signature `Lkotlin/collections/SlidingWindowKt;.windowedSequence:(Lkotlin/sequences/Sequence;IIZZ)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0b1034.  v0:= "<this>" @kind object;
  #L0b1038.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0b103e.  call `checkWindowSizeStep`(v8, v9) @signature `Lkotlin/collections/SlidingWindowKt;.checkWindowSizeStep:(II)V` @kind static;
  #L0b1044.  v0:= new `kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1`;
  #L0b1048.  v1:= v0 @kind object;
  #L0b104a.  v2:= v7 @kind object;
  #L0b104c.  v3:= v8;
  #L0b104e.  v4:= v9;
  #L0b1050.  v5:= v10;
  #L0b1052.  v6:= v11;
  #L0b1054.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/SlidingWindowKt$windowedSequence$$inlined$Sequence$1;.<init>:(Lkotlin/sequences/Sequence;IIZZ)V` @kind direct;
  #L0b105a.  return v0 @kind object;
}
