record `kotlin.collections.w` @kind class @AccessFlag FINAL extends `kotlin.collections.v` @kind interface {
  `java.util.Map` `kotlin.collections.w.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function1` `kotlin.collections.w.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.w` v1 @kind this, `java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/w;.<init>:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0afd78.  v0:= "map" @kind object;
  #L0afd7c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0afd82.  v0:= "default" @kind object;
  #L0afd86.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0afd8c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0afd92.  v1.`kotlin.collections.w.a` @type ^`java.util.Map` := v2 @kind object;
  #L0afd96.  v1.`kotlin.collections.w.b` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L0afd9a.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlin.collections.w` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/w;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0afbf4.  call temp:= `getMap`(v2) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afbfa.  v0:= temp @kind object;
  #L0afbfc.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0afc02.  v1:= temp @kind object;
  #L0afc04.  if v1 != 0 then goto L0afc20;
  #L0afc08.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L0afc0e.  v0:= temp;
  #L0afc10.  if v0 != 0 then goto L0afc20;
  #L0afc14.  v0:= v2.`kotlin.collections.w.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0afc18.  call temp:= `invoke`(v0, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0afc1e.  v1:= temp @kind object;
  #L0afc20.  return v1 @kind object;
}
procedure `java.util.Set` `b`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.b:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afd14.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afd1a.  v0:= temp @kind object;
  #L0afd1c.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L0afd22.  v0:= temp @kind object;
  #L0afd24.  return v0 @kind object;
}
procedure `java.util.Set` `c`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.c:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afd38.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afd3e.  v0:= temp @kind object;
  #L0afd40.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L0afd46.  v0:= temp @kind object;
  #L0afd48.  return v0 @kind object;
}
procedure `void` `clear`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afdac.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afdb2.  v0:= temp @kind object;
  #L0afdb4.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L0afdba.  return @kind void;
}
procedure `boolean` `containsKey`(`kotlin.collections.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/w;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afadc.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afae2.  v0:= temp @kind object;
  #L0afae4.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L0afaea.  v2:= temp;
  #L0afaec.  return v2;
}
procedure `boolean` `containsValue`(`kotlin.collections.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/w;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afb00.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afb06.  v0:= temp @kind object;
  #L0afb08.  call temp:= `containsValue`(v0, v2) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L0afb0e.  v2:= temp;
  #L0afb10.  return v2;
}
procedure `int` `d`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afb6c.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afb72.  v0:= temp @kind object;
  #L0afb74.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L0afb7a.  v0:= temp;
  #L0afb7c.  return v0;
}
procedure `java.util.Collection` `e`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.e:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afca0.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afca6.  v0:= temp @kind object;
  #L0afca8.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L0afcae.  v0:= temp @kind object;
  #L0afcb0.  return v0 @kind object;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0afcf8.  call temp:= `b`(v1) @signature `Lkotlin/collections/w;.b:()Ljava/util/Set;` @kind virtual;
  #L0afcfe.  v0:= temp @kind object;
  #L0afd00.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.collections.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/w;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afb24.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afb2a.  v0:= temp @kind object;
  #L0afb2c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0afb32.  v2:= temp;
  #L0afb34.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/w;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afbd0.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afbd6.  v0:= temp @kind object;
  #L0afbd8.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0afbde.  v2:= temp @kind object;
  #L0afbe0.  return v2 @kind object;
}
procedure `java.util.Map` `getMap`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afce0.  v0:= v1.`kotlin.collections.w.a` @type ^`java.util.Map` @kind object;
  #L0afce4.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afb90.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afb96.  v0:= temp @kind object;
  #L0afb98.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0afb9e.  v0:= temp;
  #L0afba0.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afb48.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afb4e.  v0:= temp @kind object;
  #L0afb50.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L0afb56.  v0:= temp;
  #L0afb58.  return v0;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0afd5c.  call temp:= `c`(v1) @signature `Lkotlin/collections/w;.c:()Ljava/util/Set;` @kind virtual;
  #L0afd62.  v0:= temp @kind object;
  #L0afd64.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`kotlin.collections.w` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/w;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afc34.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afc3a.  v0:= temp @kind object;
  #L0afc3c.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0afc42.  v2:= temp @kind object;
  #L0afc44.  return v2 @kind object;
}
procedure `void` `putAll`(`kotlin.collections.w` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/w;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afdcc.  v0:= "from" @kind object;
  #L0afdd0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0afdd6.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afddc.  v0:= temp @kind object;
  #L0afdde.  call `putAll`(v0, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L0afde4.  return @kind void;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/w;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afc58.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afc5e.  v0:= temp @kind object;
  #L0afc60.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0afc66.  v2:= temp @kind object;
  #L0afc68.  return v2 @kind object;
}
procedure `int` `size`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0afbb4.  call temp:= `d`(v1) @signature `Lkotlin/collections/w;.d:()I` @kind virtual;
  #L0afbba.  v0:= temp;
  #L0afbbc.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0afc7c.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/w;.getMap:()Ljava/util/Map;` @kind virtual;
  #L0afc82.  v0:= temp @kind object;
  #L0afc84.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0afc8a.  v0:= temp @kind object;
  #L0afc8c.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`kotlin.collections.w` v1 @kind this) @signature `Lkotlin/collections/w;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0afcc4.  call temp:= `e`(v1) @signature `Lkotlin/collections/w;.e:()Ljava/util/Collection;` @kind virtual;
  #L0afcca.  v0:= temp @kind object;
  #L0afccc.  return v0 @kind object;
}
