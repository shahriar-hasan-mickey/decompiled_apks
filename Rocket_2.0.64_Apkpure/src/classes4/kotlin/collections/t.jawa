record `kotlin.collections.t` @kind class @AccessFlag  extends `kotlin.collections.s` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.t` v0 @kind this) @signature `Lkotlin/collections/t;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0af0f0.  call `<init>`(v0) @signature `Lkotlin/collections/s;.<init>:()V` @kind direct;
  #L0af0f6.  return @kind void;
}
procedure `java.util.Map$Entry` `minBy`(`java.util.Map` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/collections/t;.minBy:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0af014.  v0:= "<this>" @kind object;
  #L0af018.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0af01e.  v0:= "selector" @kind object;
  #L0af022.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0af028.  call temp:= `entrySet`(v5) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L0af02e.  v5:= temp @kind object;
  #L0af030.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0af036.  v5:= temp @kind object;
  #L0af038.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0af03e.  v0:= temp;
  #L0af040.  if v0 != 0 then goto L0af048;
  #L0af044.  v5:= 0I;
  #L0af046.  goto L0af09e;
  #L0af048.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0af04e.  v0:= temp @kind object;
  #L0af050.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0af056.  v1:= temp;
  #L0af058.  if v1 != 0 then goto L0af060;
  #L0af05c.  v5:= v0 @kind object;
  #L0af05e.  goto L0af09e;
  #L0af060.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0af066.  v1:= temp @kind object;
  #L0af068.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L0af06c.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0af072.  v2:= temp @kind object;
  #L0af074.  call temp:= `invoke`(v6, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0af07a.  v3:= temp @kind object;
  #L0af07c.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L0af080.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0af086.  v4:= temp;
  #L0af088.  if v4 <= 0 then goto L0af090;
  #L0af08c.  v0:= v2 @kind object;
  #L0af08e.  v1:= v3 @kind object;
  #L0af090.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0af096.  v2:= temp;
  #L0af098.  if v2 != 0 then goto L0af06c;
  #L0af09c.  goto L0af05c;
  #L0af09e.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L0af0a2.  return v5 @kind object;
}
procedure `java.util.Map$Entry` `minWith`(`java.util.Map` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/collections/t;.minWith:(Ljava/util/Map;Ljava/util/Comparator;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0af0b4.  v0:= "<this>" @kind object;
  #L0af0b8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0af0be.  v0:= "comparator" @kind object;
  #L0af0c2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0af0c8.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L0af0ce.  v1:= temp @kind object;
  #L0af0d0.  call temp:= `minWithOrNull`(v1, v2) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.minWithOrNull:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L0af0d6.  v1:= temp @kind object;
  #L0af0d8.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L0af0dc.  return v1 @kind object;
}
