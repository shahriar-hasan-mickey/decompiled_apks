record `kotlin.comparisons.c` @kind class @AccessFlag  extends `kotlin.comparisons.b` @kind class {
}
procedure `void` `<init>`(`kotlin.comparisons.c` v0 @kind this) @signature `Lkotlin/comparisons/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0bb024.  call `<init>`(v0) @signature `Lkotlin/comparisons/b;.<init>:()V` @kind direct;
  #L0bb02a.  return @kind void;
}
procedure `java.lang.Object` `maxOf`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lkotlin/comparisons/c;.maxOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0baee4.  v0:= "comparator" @kind object;
  #L0baee8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baeee.  call temp:= `maxOf`(v2, v3, v4) @signature `Lkotlin/comparisons/c;.maxOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L0baef4.  v2:= temp @kind object;
  #L0baef6.  call temp:= `maxOf`(v1, v2, v4) @signature `Lkotlin/comparisons/c;.maxOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L0baefc.  v1:= temp @kind object;
  #L0baefe.  return v1 @kind object;
}
procedure `java.lang.Object` `maxOf`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lkotlin/comparisons/c;.maxOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0baf10.  v0:= "comparator" @kind object;
  #L0baf14.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baf1a.  call temp:= `compare`(v3, v1, v2) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L0baf20.  v3:= temp;
  #L0baf22.  if v3 < 0 then goto L0baf28;
  #L0baf26.  goto L0baf2a;
  #L0baf28.  v1:= v2 @kind object;
  #L0baf2a.  return v1 @kind object;
}
procedure `java.lang.Object` `maxOf`(`java.lang.Object` v4 @kind object, `java.lang.Object`[] v5 @kind object, `java.util.Comparator` v6 @kind object) @signature `Lkotlin/comparisons/c;.maxOf:(Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0baf3c.  v0:= "other" @kind object;
  #L0baf40.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baf46.  v0:= "comparator" @kind object;
  #L0baf4a.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baf50.  v0:= length @variable v5;
  #L0baf52.  v1:= 0I;
  #L0baf54.  if v1 >= v0 then goto L0baf70;
  #L0baf58.  v2:= v5[v1] @kind object;
  #L0baf5c.  call temp:= `compare`(v6, v4, v2) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L0baf62.  v3:= temp;
  #L0baf64.  if v3 >= 0 then goto L0baf6a;
  #L0baf68.  v4:= v2 @kind object;
  #L0baf6a.  v1:= v1 + 1;
  #L0baf6e.  goto L0baf54;
  #L0baf70.  return v4 @kind object;
}
procedure `java.lang.Object` `minOf`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lkotlin/comparisons/c;.minOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0baf84.  v0:= "comparator" @kind object;
  #L0baf88.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baf8e.  call temp:= `minOf`(v2, v3, v4) @signature `Lkotlin/comparisons/c;.minOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L0baf94.  v2:= temp @kind object;
  #L0baf96.  call temp:= `minOf`(v1, v2, v4) @signature `Lkotlin/comparisons/c;.minOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L0baf9c.  v1:= temp @kind object;
  #L0baf9e.  return v1 @kind object;
}
procedure `java.lang.Object` `minOf`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lkotlin/comparisons/c;.minOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0bafb0.  v0:= "comparator" @kind object;
  #L0bafb4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bafba.  call temp:= `compare`(v3, v1, v2) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L0bafc0.  v3:= temp;
  #L0bafc2.  if v3 > 0 then goto L0bafc8;
  #L0bafc6.  goto L0bafca;
  #L0bafc8.  v1:= v2 @kind object;
  #L0bafca.  return v1 @kind object;
}
procedure `java.lang.Object` `minOf`(`java.lang.Object` v4 @kind object, `java.lang.Object`[] v5 @kind object, `java.util.Comparator` v6 @kind object) @signature `Lkotlin/comparisons/c;.minOf:(Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0bafdc.  v0:= "other" @kind object;
  #L0bafe0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bafe6.  v0:= "comparator" @kind object;
  #L0bafea.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baff0.  v0:= length @variable v5;
  #L0baff2.  v1:= 0I;
  #L0baff4.  if v1 >= v0 then goto L0bb010;
  #L0baff8.  v2:= v5[v1] @kind object;
  #L0baffc.  call temp:= `compare`(v6, v4, v2) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L0bb002.  v3:= temp;
  #L0bb004.  if v3 <= 0 then goto L0bb00a;
  #L0bb008.  v4:= v2 @kind object;
  #L0bb00a.  v1:= v1 + 1;
  #L0bb00e.  goto L0baff4;
  #L0bb010.  return v4 @kind object;
}
