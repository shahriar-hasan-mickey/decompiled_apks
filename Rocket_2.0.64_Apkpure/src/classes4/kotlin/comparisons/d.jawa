record `kotlin.comparisons.d` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
}
global `kotlin.comparisons.d` `@@kotlin.comparisons.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/comparisons/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0bb130.  v0:= new `kotlin.comparisons.d`;
  #L0bb134.  call `<init>`(v0) @signature `Lkotlin/comparisons/d;.<init>:()V` @kind direct;
  #L0bb13a.  `@@kotlin.comparisons.d.a` @type ^`kotlin.comparisons.d` := v0 @kind object;
  #L0bb13e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.comparisons.d` v0 @kind this) @signature `Lkotlin/comparisons/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0bb150.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0bb156.  return @kind void;
}
procedure `int` `a`(`kotlin.comparisons.d` v1 @kind this, `java.lang.Comparable` v2 @kind object, `java.lang.Comparable` v3 @kind object) @signature `Lkotlin/comparisons/d;.a:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0bb0c4.  v0:= "a" @kind object;
  #L0bb0c8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bb0ce.  v0:= "b" @kind object;
  #L0bb0d2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bb0d8.  call temp:= `compareTo`(v2, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0bb0de.  v2:= temp;
  #L0bb0e0.  return v2;
}
procedure `int` `compare`(`kotlin.comparisons.d` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/comparisons/d;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0bb0f4.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L0bb0f8.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L0bb0fc.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/comparisons/d;.a:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @kind virtual;
  #L0bb102.  v1:= temp;
  #L0bb104.  return v1;
}
procedure `java.util.Comparator` `reversed`(`kotlin.comparisons.d` v1 @kind this) @signature `Lkotlin/comparisons/d;.reversed:()Ljava/util/Comparator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0bb118.  v0:= `@@kotlin.comparisons.e.a` @type ^`kotlin.comparisons.e` @kind object;
  #L0bb11c.  return v0 @kind object;
}
