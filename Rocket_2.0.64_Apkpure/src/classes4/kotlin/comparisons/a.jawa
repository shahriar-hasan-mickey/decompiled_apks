record `kotlin.comparisons.a` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.comparisons.a` v0 @kind this) @signature `Lkotlin/comparisons/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0baaa4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0baaaa.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `kotlin.jvm.functions.Function1`[] v7 @kind object) @signature `Lkotlin/comparisons/a;.a:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0ba8a0.  v0:= length @variable v7;
  #L0ba8a2.  v1:= 0I;
  #L0ba8a4.  v2:= 0I;
  #L0ba8a6.  if v2 >= v0 then goto L0ba8da;
  #L0ba8aa.  v3:= v7[v2] @kind object;
  #L0ba8ae.  call temp:= `invoke`(v3, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ba8b4.  v4:= temp @kind object;
  #L0ba8b6.  v4:= (`java.lang.Comparable`) v4 @kind object;
  #L0ba8ba.  call temp:= `invoke`(v3, v6) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ba8c0.  v3:= temp @kind object;
  #L0ba8c2.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L0ba8c6.  call temp:= `compareValues`(v4, v3) @signature `Lkotlin/comparisons/ComparisonsKt;.compareValues:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @kind static;
  #L0ba8cc.  v3:= temp;
  #L0ba8ce.  if v3 == 0 then goto L0ba8d4;
  #L0ba8d2.  return v3;
  #L0ba8d4.  v2:= v2 + 1;
  #L0ba8d8.  goto L0ba8a6;
  #L0ba8da.  return v1;
}
procedure `int` `access$compareValuesByImpl`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function1`[] v2 @kind object) @signature `Lkotlin/comparisons/a;.access$compareValuesByImpl:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0ba804.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/comparisons/a;.a:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @kind static;
  #L0ba80a.  v0:= temp;
  #L0ba80c.  return v0;
}
procedure `java.util.Comparator` `compareBy`(`kotlin.jvm.functions.Function1`[] v1 @kind object) @signature `Lkotlin/comparisons/a;.compareBy:([Lkotlin/jvm/functions/Function1;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ba8ec.  v0:= "selectors" @kind object;
  #L0ba8f0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ba8f6.  v0:= length @variable v1;
  #L0ba8f8.  if v0 <= 0 then goto L0ba900;
  #L0ba8fc.  v0:= 1I;
  #L0ba8fe.  goto L0ba902;
  #L0ba900.  v0:= 0I;
  #L0ba902.  if v0 == 0 then goto L0ba912;
  #L0ba906.  v0:= new `kotlin.comparisons.a$a`;
  #L0ba90a.  call `<init>`(v0, v1) @signature `Lkotlin/comparisons/a$a;.<init>:([Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0ba910.  return v0 @kind object;
  #L0ba912.  v1:= new `java.lang.IllegalArgumentException`;
  #L0ba916.  v0:= "Failed requirement." @kind object;
  #L0ba91a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ba920.  v0:= temp @kind object;
  #L0ba922.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ba928.  throw v1;
}
procedure `int` `compareValues`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lkotlin/comparisons/a;.compareValues:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0ba820.  if v0 != v1 then goto L0ba828;
  #L0ba824.  v0:= 0I;
  #L0ba826.  return v0;
  #L0ba828.  if v0 != 0 then goto L0ba830;
  #L0ba82c.  v0:= -1I;
  #L0ba82e.  return v0;
  #L0ba830.  if v1 != 0 then goto L0ba838;
  #L0ba834.  v0:= 1I;
  #L0ba836.  return v0;
  #L0ba838.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0ba83e.  v0:= temp;
  #L0ba840.  return v0;
}
procedure `int` `compareValuesBy`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1`[] v3 @kind object) @signature `Lkotlin/comparisons/a;.compareValuesBy:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ba854.  v0:= "selectors" @kind object;
  #L0ba858.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ba85e.  v0:= length @variable v3;
  #L0ba860.  if v0 <= 0 then goto L0ba868;
  #L0ba864.  v0:= 1I;
  #L0ba866.  goto L0ba86a;
  #L0ba868.  v0:= 0I;
  #L0ba86a.  if v0 == 0 then goto L0ba878;
  #L0ba86e.  call temp:= `a`(v1, v2, v3) @signature `Lkotlin/comparisons/a;.a:(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I` @kind static;
  #L0ba874.  v1:= temp;
  #L0ba876.  return v1;
  #L0ba878.  v1:= new `java.lang.IllegalArgumentException`;
  #L0ba87c.  v2:= "Failed requirement." @kind object;
  #L0ba880.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ba886.  v2:= temp @kind object;
  #L0ba888.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ba88e.  throw v1;
}
procedure `java.util.Comparator` `naturalOrder`() @signature `Lkotlin/comparisons/a;.naturalOrder:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0ba93c.  v0:= `@@kotlin.comparisons.d.a` @type ^`kotlin.comparisons.d` @kind object;
  #L0ba940.  v1:= "null cannot be cast to non-null type java.util.Comparator<T of kotlin.comparisons.ComparisonsKt__ComparisonsKt.naturalOrder>{ kotlin.TypeAliasesKt.Comparator<T of kotlin.comparisons.ComparisonsKt__ComparisonsKt.naturalOrder> }" @kind object;
  #L0ba944.  call `checkNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ba94a.  return v0 @kind object;
}
procedure `java.util.Comparator` `nullsFirst`(`java.util.Comparator` v1 @kind object) @signature `Lkotlin/comparisons/a;.nullsFirst:(Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ba95c.  v0:= "comparator" @kind object;
  #L0ba960.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ba966.  v0:= new `kotlin.comparisons.a$b`;
  #L0ba96a.  call `<init>`(v0, v1) @signature `Lkotlin/comparisons/a$b;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L0ba970.  return v0 @kind object;
}
procedure `java.util.Comparator` `nullsLast`(`java.util.Comparator` v1 @kind object) @signature `Lkotlin/comparisons/a;.nullsLast:(Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ba984.  v0:= "comparator" @kind object;
  #L0ba988.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ba98e.  v0:= new `kotlin.comparisons.a$c`;
  #L0ba992.  call `<init>`(v0, v1) @signature `Lkotlin/comparisons/a$c;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L0ba998.  return v0 @kind object;
}
procedure `java.util.Comparator` `reverseOrder`() @signature `Lkotlin/comparisons/a;.reverseOrder:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0ba9ac.  v0:= `@@kotlin.comparisons.e.a` @type ^`kotlin.comparisons.e` @kind object;
  #L0ba9b0.  v1:= "null cannot be cast to non-null type java.util.Comparator<T of kotlin.comparisons.ComparisonsKt__ComparisonsKt.reverseOrder>{ kotlin.TypeAliasesKt.Comparator<T of kotlin.comparisons.ComparisonsKt__ComparisonsKt.reverseOrder> }" @kind object;
  #L0ba9b4.  call `checkNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ba9ba.  return v0 @kind object;
}
procedure `java.util.Comparator` `reversed`(`java.util.Comparator` v3 @kind object) @signature `Lkotlin/comparisons/a;.reversed:(Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ba9cc.  v0:= "<this>" @kind object;
  #L0ba9d0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ba9d6.  v0:= instanceof @variable v3 @type ^`kotlin.comparisons.f` @kind boolean;
  #L0ba9da.  if v0 == 0 then goto L0ba9ec;
  #L0ba9de.  v3:= (`kotlin.comparisons.f`) v3 @kind object;
  #L0ba9e2.  call temp:= `a`(v3) @signature `Lkotlin/comparisons/f;.a:()Ljava/util/Comparator;` @kind virtual;
  #L0ba9e8.  v3:= temp @kind object;
  #L0ba9ea.  goto L0baa30;
  #L0ba9ec.  v0:= `@@kotlin.comparisons.d.a` @type ^`kotlin.comparisons.d` @kind object;
  #L0ba9f0.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0ba9f6.  v1:= temp;
  #L0ba9f8.  v2:= "null cannot be cast to non-null type java.util.Comparator<T of kotlin.comparisons.ComparisonsKt__ComparisonsKt.reversed>{ kotlin.TypeAliasesKt.Comparator<T of kotlin.comparisons.ComparisonsKt__ComparisonsKt.reversed> }" @kind object;
  #L0ba9fc.  if v1 == 0 then goto L0baa0c;
  #L0baa00.  v3:= `@@kotlin.comparisons.e.a` @type ^`kotlin.comparisons.e` @kind object;
  #L0baa04.  call `checkNotNull`(v3, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baa0a.  goto L0baa30;
  #L0baa0c.  v1:= `@@kotlin.comparisons.e.a` @type ^`kotlin.comparisons.e` @kind object;
  #L0baa10.  call temp:= `areEqual`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0baa16.  v1:= temp;
  #L0baa18.  if v1 == 0 then goto L0baa24;
  #L0baa1c.  call `checkNotNull`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baa22.  goto L0baa2e;
  #L0baa24.  v0:= new `kotlin.comparisons.f`;
  #L0baa28.  call `<init>`(v0, v3) @signature `Lkotlin/comparisons/f;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L0baa2e.  v3:= v0 @kind object;
  #L0baa30.  return v3 @kind object;
}
procedure `java.util.Comparator` `then`(`java.util.Comparator` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/comparisons/a;.then:(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0baa44.  v0:= "<this>" @kind object;
  #L0baa48.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baa4e.  v0:= "comparator" @kind object;
  #L0baa52.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baa58.  v0:= new `kotlin.comparisons.a$d`;
  #L0baa5c.  call `<init>`(v0, v1, v2) @signature `Lkotlin/comparisons/a$d;.<init>:(Ljava/util/Comparator;Ljava/util/Comparator;)V` @kind direct;
  #L0baa62.  return v0 @kind object;
}
procedure `java.util.Comparator` `thenDescending`(`java.util.Comparator` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/comparisons/a;.thenDescending:(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0baa74.  v0:= "<this>" @kind object;
  #L0baa78.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baa7e.  v0:= "comparator" @kind object;
  #L0baa82.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0baa88.  v0:= new `kotlin.comparisons.a$e`;
  #L0baa8c.  call `<init>`(v0, v1, v2) @signature `Lkotlin/comparisons/a$e;.<init>:(Ljava/util/Comparator;Ljava/util/Comparator;)V` @kind direct;
  #L0baa92.  return v0 @kind object;
}
