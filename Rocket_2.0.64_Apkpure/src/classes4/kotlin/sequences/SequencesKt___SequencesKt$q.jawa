record `kotlin.sequences.SequencesKt___SequencesKt$q` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
}
global `kotlin.sequences.SequencesKt___SequencesKt$q` `@@kotlin.sequences.SequencesKt___SequencesKt$q.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/sequences/SequencesKt___SequencesKt$q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0d6168.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$q`;
  #L0d616c.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$q;.<init>:()V` @kind direct;
  #L0d6172.  `@@kotlin.sequences.SequencesKt___SequencesKt$q.a` @type ^`kotlin.sequences.SequencesKt___SequencesKt$q` := v0 @kind object;
  #L0d6176.  return @kind void;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$q` v1 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$q;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L0d6188.  v0:= 2I;
  #L0d618a.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L0d6190.  return @kind void;
}
procedure `kotlin.Pair` `a`(`kotlin.sequences.SequencesKt___SequencesKt$q` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$q;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0d614c.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L0d6152.  v1:= temp @kind object;
  #L0d6154.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$q` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$q;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d6130.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$q;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind virtual;
  #L0d6136.  v1:= temp @kind object;
  #L0d6138.  return v1 @kind object;
}
